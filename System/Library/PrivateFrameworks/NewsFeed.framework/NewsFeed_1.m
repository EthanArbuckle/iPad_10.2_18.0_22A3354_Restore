unint64_t sub_1BA5415BC()
{
  unint64_t result;

  result = qword_1ED3CE168;
  if (!qword_1ED3CE168)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4FA0, &_s10CodingKeysON_22);
    atomic_store(result, (unint64_t *)&qword_1ED3CE168);
  }
  return result;
}

uint64_t sub_1BA541600(_QWORD *a1)
{
  return FormatMenuTitle.encode(to:)(a1);
}

uint64_t FormatMenuTitle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  char *v37;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v36 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v11 = v1[1];
  v14 = v1[2];
  v13 = v1[3];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BA6B8518();
  v37 = v10;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatMenuTitle, v18, v15, (uint64_t)&type metadata for FormatMenuTitle, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v16, (uint64_t)v10, v17, (uint64_t)&off_1E734BC80);
  if ((v13 & 4) != 0)
  {
    v31 = qword_1ED3C6D18;
    swift_retain();
    if (v31 != -1)
      swift_once();
    v32 = sub_1BB86EB84();
    v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476B60);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v5, v33, v32);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v34 = (uint64_t)v37;
    sub_1BA541B68(1, v12, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    v27 = v12;
    v28 = v11;
    v29 = v14;
    v30 = v13;
  }
  else
  {
    v19 = qword_1ED3C6D18;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v20 = v11;
    v21 = v14;
    v22 = v13;
    if (v19 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476B60);
    v25 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v36, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v26 = (uint64_t)v37;
    sub_1BA54191C(0, v12, v20, v21, v22, v25);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    v27 = v12;
    v28 = v20;
    v29 = v21;
    v30 = v22;
  }
  return sub_1BA7CCC14(v27, v28, v29, v30);
}

uint64_t sub_1BA54191C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF7124;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA541B24();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA541AA4(0);
    sub_1BA4A2870(&qword_1ED39B460, (uint64_t (*)(uint64_t))sub_1BA541AA4, (uint64_t)&protocol conformance descriptor for FormatSwitchValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

void sub_1BA541AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3B5100)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5508, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, MEMORY[0x1E0DEA968]);
    v3 = v2;
    v4 = sub_1BA830994();
    v6 = type metadata accessor for FormatSwitchValue(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3B5100);
  }
}

unint64_t sub_1BA541B24()
{
  unint64_t result;

  result = qword_1ED3A5898;
  if (!qword_1ED3A5898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4B08, &_s10CodingTypeON_138);
    atomic_store(result, (unint64_t *)&qword_1ED3A5898);
  }
  return result;
}

uint64_t sub_1BA541B68(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7124;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA541B24();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA541CCC(_QWORD *a1)
{
  return FormatMenuImage.encode(to:)(a1);
}

uint64_t FormatMenuImage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = v1[1];
  v14 = v1[2];
  v16 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v17 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatMenuImage, v18, v16, (uint64_t)&type metadata for FormatMenuImage, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BC80);
  if ((v14 & 0x2000000000000000) != 0)
  {
    v23 = qword_1ED3C6D18;
    swift_retain();
    if (v23 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476B60);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v5, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5421CC(1, v12, (uint64_t)v5);
    v22 = (uint64_t)v5;
  }
  else
  {
    v19 = qword_1ED3C6D18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v19 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476B60);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA541F98(0, v12, v13, v14, (uint64_t)v8);
    v22 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA7CCC64(v12, v13, v14);
}

uint64_t sub_1BA541F98(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEFB08;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA542188();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA542120(0);
    sub_1BA4A2870(&qword_1ED39B490, (uint64_t (*)(uint64_t))sub_1BA542120, (uint64_t)&protocol conformance descriptor for FormatCommandValue<A, B>);
    sub_1BB874464();
  }
  return swift_release();
}

void sub_1BA542120(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B5518)
  {
    v2 = sub_1BA49DEA8();
    v3 = sub_1BA829C74();
    v4 = type metadata accessor for FormatCommandValue(a1, (uint64_t)&type metadata for FormatSyncImageContent, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B5518);
  }
}

unint64_t sub_1BA542188()
{
  unint64_t result;

  result = qword_1ED3A5890;
  if (!qword_1ED3A5890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC610, &_s10CodingTypeON_62);
    atomic_store(result, (unint64_t *)&qword_1ED3A5890);
  }
  return result;
}

uint64_t sub_1BA5421CC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEFB08;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA542188();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA58FD48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA542330@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA54238C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatButtonNodeStateMask.init(from:)(a1, a2);
}

uint64_t FormatButtonNodeStateMask.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BAE87908();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE87980();
  sub_1BA4A2870(&qword_1ED3D1190, (uint64_t (*)(uint64_t))sub_1BAE87980, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_165;
      *(&v25 - 3) = sub_1BAE87A00();
      *(&v25 - 2) = sub_1BA5426A4();
      *(&v25 - 1) = sub_1BAE87A44();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71130((uint64_t)&unk_1E726ADE0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = sub_1BAE10070((uint64_t)v9, 0, 0, 0, (uint64_t (*)(uint64_t))sub_1BA5426E8, (void (*)(_QWORD, double))sub_1BAE87908, &qword_1ED3BBE08);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5426A4()
{
  unint64_t result;

  result = qword_1ED3CB130;
  if (!qword_1ED3CB130)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCE20, &_s10CodingKeysON_165);
    atomic_store(result, (unint64_t *)&qword_1ED3CB130);
  }
  return result;
}

void sub_1BA5426E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBE10)
  {
    sub_1BA82BBE0();
    sub_1BA82BCAC();
    sub_1BA82BC68();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBE10);
  }
}

uint64_t sub_1BA542768()
{
  sub_1BA542810();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5427B4()
{
  sub_1BA542810();
  return sub_1BB872D60();
}

unint64_t sub_1BA542810()
{
  unint64_t result;

  result = qword_1ED3CA368;
  if (!qword_1ED3CA368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5B50, &_s10CodingTypeON_127);
    atomic_store(result, (unint64_t *)&qword_1ED3CA368);
  }
  return result;
}

uint64_t sub_1BA542854()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA54287C + 4 * byte_1BB8AF065[*v0]))(1702521203, 0xE400000000000000);
}

uint64_t sub_1BA54287C()
{
  return 0x746867696577;
}

uint64_t sub_1BA542890()
{
  return 0x656C616373;
}

uint64_t sub_1BA5428A4()
{
  return 1885433183;
}

uint64_t sub_1BA5428B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5428E4 + 4 * byte_1BB8AECE5[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA5428E4()
{
  return 1701869940;
}

uint64_t sub_1BA5428F4()
{
  return 0x726F74617265706FLL;
}

uint64_t sub_1BA54290C()
{
  return 1885433183;
}

_QWORD *initializeWithCopy for PuzzleStatsState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1BA5429AC(_QWORD *a1)
{
  return FormatTextNodeStyle.encode(to:)(a1);
}

uint64_t sub_1BA5429CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BB86EB84();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BB86EB90();
}

uint64_t sub_1BA542A20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA542A4C + 4 * byte_1BB8AE777[*v0]))(0x73726F6C6F63, 0xE600000000000000);
}

uint64_t sub_1BA542A4C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1BA542A6C()
{
  return 0x6F69746365726964;
}

uint64_t sub_1BA542A88()
{
  return 0x74657366666FLL;
}

uint64_t sub_1BA542A98()
{
  return 1885433183;
}

uint64_t FormatViewNodeLayoutAttributes.__deallocating_deinit()
{
  FormatViewNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatViewNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA542B1C()
{
  uint64_t v0;
  void *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v1 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void FeedItemSupplementaryAttributes.frame.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA6A81A0(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BA542C24 + 4 * byte_1BB8E77A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA542CC8(_QWORD *a1)
{
  return FormatWebEmbedNodeContent.encode(to:)(a1);
}

uint64_t FormatWebEmbedNodeContent.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v2 = v1;
  sub_1BA6C0E30(0);
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1BB86C67C();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v44 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - v15;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v2;
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWebEmbedNodeContent, v24, v21, (uint64_t)&type metadata for FormatWebEmbedNodeContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v19, v23, (uint64_t)&off_1E734BD80);
  if (!(v20 >> 62))
  {
    v32 = *(_QWORD *)(v20 + 16);
    v33 = *(_QWORD *)(v20 + 24);
    v34 = *(_QWORD *)(v20 + 32);
    v35 = *(_BYTE *)(v20 + 40);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v36 = sub_1BB86EB84();
    v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v16, v37, v36);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA543144(0, v32, v33, v34, v35, (uint64_t)v16);
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  if (v20 >> 62 == 1)
  {
    v25 = swift_projectBox();
    v26 = v45;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
    v28 = v47;
    v27(v7, v25, v47);
    v29 = (uint64_t)v46;
    v27(v46, (uint64_t)v7, v28);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v30 = sub_1BB86EB84();
    v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v13, v31, v30);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE4DA8(1, v29, (uint64_t)v13);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BA6C0E30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v28);
    return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v39 = *(_QWORD *)(v20 + 16);
  v40 = *(_QWORD *)(v20 + 24);
  v41 = qword_1ED3C6D58;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v41 != -1)
    swift_once();
  v42 = sub_1BB86EB84();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v10, v43, v42);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE4F34(2, v39, v40, (uint64_t)v10);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA543144(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5 & 1;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEE7D3C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5432B4();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5432F8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5432B4()
{
  unint64_t result;

  result = qword_1ED3A78B0;
  if (!qword_1ED3A78B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3968, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A78B0);
  }
  return result;
}

unint64_t sub_1BA5432F8()
{
  unint64_t result;

  result = qword_1ED39BA30;
  if (!qword_1ED39BA30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeBinding, &type metadata for FormatWebEmbedNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39BA30);
  }
  return result;
}

uint64_t destroy for FeedGroupGroupingRules()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

NewsFeed::FormatOperator_optional __swiftcall FormatOperator.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatOperator_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BA5433FC(uint64_t a1, uint64_t a2)
{
  FormatSwitchListValue.DefaultValue.encode(to:)(a1, a2);
}

void FormatSwitchListValue.DefaultValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[10];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = v5;
  v12[3] = v6;
  v8 = _s10CodingKeysOMa_40(255, v5, v6, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8C5A30, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C59E0, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C59B8, v8);
  v12[6] = v8;
  v12[7] = v9;
  v12[8] = v10;
  v12[9] = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5434D4(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v13 = *v1;
  v14 = v2[3];
  v15 = v2[4];
  v16 = __swift_project_boxed_opaque_existential_1(v2, v14);
  sub_1BA6EC1EC(v3, (uint64_t)v16, v14, v3, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 72) = v13;
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  v17 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(_QWORD *)(v4 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v20, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = sub_1BB872EE0();
  *(_QWORD *)(v4 - 120) = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 16);
  v22 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v21, v4 - 120);
  sub_1BA6EE974(v4 - 72, v4 - 112, v20, (uint64_t)sub_1BA90CF04, 0, v10, v21, v22);
  sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 160) + 8))(v12, v10);
}

_QWORD *sub_1BA5436E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA543708(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA543708(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  __int128 v48;
  char v49;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v38 - v3;
  sub_1BA543C20();
  v5 = v4;
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEEEDD4();
  v44 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v12);
  sub_1BAEA9828();
  sub_1BA4A2870(&qword_1ED3D0CA0, (uint64_t (*)(uint64_t))sub_1BAEA9828, (uint64_t)&unk_1BB8FFC6C);
  v13 = (uint64_t)v47;
  sub_1BB87468C();
  v14 = (void *)v13;
  if (v13)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v12;
  }
  v40 = v7;
  v41 = v9;
  v15 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v44;
  v18 = v45;
  v19 = v46;
  if ((v15 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v11;
      v28 = v17;
      v30 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v31 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v31);
      *(&v38 - 4) = (uint64_t)&_s10CodingKeysON_86;
      *(&v38 - 3) = sub_1BAEA98A8();
      *(&v38 - 2) = sub_1BA7B1C40();
      *(&v38 - 1) = sub_1BAEA98EC();
      swift_getKeyPath();
      swift_retain();
      v12 = (_QWORD *)sub_1BAE71220((uint64_t)&unk_1E726D210);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v32 = v30;
      *(_QWORD *)(v32 + 8) = v29;
      *(_QWORD *)(v32 + 16) = v12;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v30, v29, 1);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
      a1 = v47;
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v38 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEEDD4);
  v39 = v23;
  v48 = xmmword_1BB8A1A10;
  v49 = 0;
  sub_1BA4A2870(&qword_1ED3BBEA8, (uint64_t (*)(uint64_t))sub_1BA543C20, MEMORY[0x1E0DB3610]);
  v24 = v40;
  v25 = v5;
  sub_1BB8740D4();
  v33 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v25);
  v48 = xmmword_1BB8D2D60;
  v49 = 0;
  sub_1BA4FB6A0();
  v34 = v43;
  sub_1BB8740D4();
  v35 = v41;
  v36 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v34);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v17);
  type metadata accessor for FormatOptionsNode();
  v12 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v37 = v39;
  v12[2] = v38;
  v12[3] = v37;
  swift_beginAccess();
  v12[4] = v33;
  swift_beginAccess();
  v12[5] = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return v12;
}

void sub_1BA543C20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBEB0)
  {
    type metadata accessor for FormatOptionsNodeStatement();
    sub_1BA4A2870(&qword_1ED3B7E18, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
    sub_1BA4A2870(&qword_1ED3B01D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBEB0);
  }
}

uint64_t sub_1BA543CC4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatNodeStyleCollection.init(from:)(a1, a2);
}

uint64_t sub_1BA543CD8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA543EBC();
  sub_1BA543F30(&qword_1ED39BE70, &qword_1ED39B180, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t FormatNodeStyleCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  __int128 v7;
  _QWORD v8[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BA543EBC();
    sub_1BA543F30(&qword_1ED39BE78, &qword_1ED39B188, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA76B178(v8[6], &v7);
    v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA543EBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9430)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9430);
  }
}

uint64_t sub_1BA543F30(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA543EBC();
    v10 = v9;
    v11 = sub_1BA543FA8(a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA543FA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA76BAD0(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA543FE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorModifyComponentProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorModifyComponentProcessor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE89550();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE895C8();
  sub_1BA4A2870(&qword_1ED3ABF68, (uint64_t (*)(uint64_t))sub_1BAE895C8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_158;
      *(&v26 - 3) = sub_1BAE89648();
      *(&v26 - 2) = sub_1BA544358();
      *(&v26 - 1) = sub_1BAE8968C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726B060);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA609508();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA689CD8();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_BYTE *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA544358()
{
  unint64_t result;

  result = qword_1ED3A9F90;
  if (!qword_1ED3A9F90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC828, &_s10CodingKeysON_158);
    atomic_store(result, (unint64_t *)&qword_1ED3A9F90);
  }
  return result;
}

uint64_t FeedPluginManager.createPluginModels(fetchResult:layoutOptionsProvider:)(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28[4];
  char v29;
  _OWORD v30[9];

  v3 = (uint64_t)v2;
  v6 = *v2;
  v7 = *(_QWORD *)(v3 + qword_1ED3A4AA8 + 8);
  v8 = *(void **)(v3 + qword_1ED3A4AA8 + 16);
  v9 = *(void **)(v3 + qword_1ED3A4AA8 + 24);
  v10 = *(_BYTE *)(v3 + qword_1ED3A4AA8 + 32);
  v28[0] = *(_QWORD *)(v3 + qword_1ED3A4AA8);
  v28[1] = v7;
  v28[2] = (uint64_t)v8;
  v28[3] = (uint64_t)v9;
  v29 = v10;
  v27 = *(_BYTE *)(v3 + qword_1ED3A4AB8);
  v11 = *(_QWORD *)(v6 + class metadata base offset for FeedPluginManager);
  v12 = *(_QWORD *)(v6 + class metadata base offset for FeedPluginManager + 8);
  swift_bridgeObjectRetain();
  v13 = v8;
  v14 = v9;
  swift_retain();
  v15 = a2;
  swift_retain();
  sub_1BA544784(v28, &v27, a1, (uint64_t)v15, v3, (uint64_t)v30);
  v16 = (void *)sub_1BB86DE94();
  v17 = swift_allocObject();
  v18 = v30[4];
  *(_OWORD *)(v17 + 104) = v30[5];
  v19 = v30[7];
  *(_OWORD *)(v17 + 120) = v30[6];
  *(_OWORD *)(v17 + 136) = v19;
  *(_OWORD *)(v17 + 152) = v30[8];
  v20 = v30[0];
  *(_OWORD *)(v17 + 40) = v30[1];
  v21 = v30[3];
  *(_OWORD *)(v17 + 56) = v30[2];
  *(_OWORD *)(v17 + 72) = v21;
  *(_OWORD *)(v17 + 88) = v18;
  *(_QWORD *)(v17 + 16) = a1;
  *(_OWORD *)(v17 + 24) = v20;
  swift_retain();
  sub_1BA5446B0(v30);
  sub_1BA5445C0(0);
  sub_1BB86EC08();

  swift_release();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v11;
  v22[3] = v12;
  v22[4] = *(_QWORD *)(class metadata base offset for FeedPluginManager + v6 + 16);
  v22[5] = a1;
  swift_retain();
  v23 = (void *)sub_1BB86E854();
  type metadata accessor for FeedPluginManagerResult(0, v11, v12, v24);
  v25 = sub_1BB86E974();
  swift_release();
  swift_release();

  sub_1BA5445DC(v30);
  return v25;
}

void sub_1BA5445C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A07F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

_QWORD *sub_1BA5445DC(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v9;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v4 = (void *)a1[5];
  v5 = a1[9];
  v6 = a1[10];
  v9 = (void *)a1[12];
  v7 = (void *)a1[17];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BA6DB13C(v5, v6);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return a1;
}

_QWORD *sub_1BA5446B0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v13;
  void *v14;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v4 = (void *)a1[5];
  v5 = a1[9];
  v6 = a1[10];
  v14 = (void *)a1[12];
  v13 = (void *)a1[17];
  swift_bridgeObjectRetain();
  v7 = v2;
  v8 = v3;
  v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v5, v6);
  swift_retain();
  swift_retain();
  v10 = v13;
  v11 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

__n128 sub_1BA544784@<Q0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __n128 v28;

  v12 = *a1;
  v15 = a1[3];
  v13 = *a2;
  v14 = *((_BYTE *)a1 + 32);
  FeedServiceFetchResult.feedContext.getter(a3);
  sub_1BA546D3C(a3);
  v10 = v9;
  swift_retain();
  swift_release();
  *(_QWORD *)a6 = v12;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a6 + 24) = v15;
  *(_BYTE *)(a6 + 32) = v14;
  *(_BYTE *)(a6 + 33) = v13;
  *(_QWORD *)(a6 + 40) = v18;
  *(_BYTE *)(a6 + 48) = v19;
  *(_BYTE *)(a6 + 49) = v20;
  *(_BYTE *)(a6 + 50) = v21;
  *(_BYTE *)(a6 + 51) = v22;
  *(_OWORD *)(a6 + 56) = v23;
  *(_QWORD *)(a6 + 72) = v24;
  *(_QWORD *)(a6 + 80) = v25;
  *(_BYTE *)(a6 + 88) = v26;
  *(_QWORD *)(a6 + 96) = v27;
  result = v28;
  *(__n128 *)(a6 + 104) = v28;
  *(_QWORD *)(a6 + 120) = v10;
  *(_QWORD *)(a6 + 128) = a5;
  *(_QWORD *)(a6 + 136) = a4;
  return result;
}

uint64_t sub_1BA5448F0(_QWORD *a1)
{
  return FormatTagNavigate.encode(to:)(a1);
}

uint64_t FormatTagNavigate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEC402C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAEC3F24();
  v13 = sub_1BA4A2870(&qword_1ED3D0CE0, (uint64_t (*)(uint64_t))sub_1BAEC3F24, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTagNavigate, v14, v10, (uint64_t)&type metadata for FormatTagNavigate, v12, (uint64_t)&type metadata for FormatVersions.JazzkonG, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD00);
  v15 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2BA78(v9, 0, 0, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAEC402C);
}

unint64_t sub_1BA544AFC()
{
  unint64_t result;

  result = qword_1ED3C7A08;
  if (!qword_1ED3C7A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5100, &_s10CodingKeysON_24);
    atomic_store(result, (unint64_t *)&qword_1ED3C7A08);
  }
  return result;
}

uint64_t sub_1BA544B40@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = (*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BA729B74(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v5 + v13, *(_QWORD *)(v5 + v14), *(_QWORD *)(v5 + v14 + 8), *(_QWORD *)(v5 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v5 + ((((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v5+ ((((((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a1, a2, a3, a4, a5);
}

uint64_t sub_1BA544C08()
{
  sub_1BA544CB0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA544C54()
{
  sub_1BA544CB0();
  return sub_1BB872D60();
}

unint64_t sub_1BA544CB0()
{
  unint64_t result;

  result = qword_1ED3CB670;
  if (!qword_1ED3CB670)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4F70, &_s10CodingTypeON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3CB670);
  }
  return result;
}

uint64_t sub_1BA544CF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatPreviewParameters.init(from:)(a1, a2);
}

uint64_t FormatPreviewParameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  char v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[4];
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;

  v3 = v2;
  v36 = a2;
  sub_1BAEAB50C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEAB584();
  sub_1BA4A2870(&qword_1ED3D10A0, (uint64_t (*)(uint64_t))sub_1BAEAB584, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      v36 = a1;
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v22 = v12;
      MEMORY[0x1E0C80A78](v21);
      *(_QWORD *)&v32[-32] = &_s10CodingKeysON_77;
      *(_QWORD *)&v32[-24] = sub_1BAEAB604();
      *(_QWORD *)&v32[-16] = sub_1BA545118();
      *(_QWORD *)&v32[-8] = sub_1BAEAB648();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726D5D0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v19;
      *(_QWORD *)(v24 + 8) = v20;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v36;
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v14, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v39 = 0uLL;
  LOBYTE(v40) = 0;
  sub_1BB874068();
  v18 = v37;
  v37 = xmmword_1BB8A1A10;
  v38 = 0;
  sub_1BA54515C();
  sub_1BB874068();
  v26 = v39;
  v34 = v41;
  v35 = v40;
  v33 = v42;
  v37 = xmmword_1BB8D2D60;
  v38 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v9, v6);
  v27 = v40;
  v28 = v39;
  v29 = v36;
  *v36 = v18;
  *(_OWORD *)(v29 + 1) = v26;
  v30 = v34;
  v29[3] = v35;
  v29[4] = v30;
  *((_BYTE *)v29 + 40) = v33;
  *((_OWORD *)v29 + 3) = v28;
  *((_BYTE *)v29 + 64) = v27;
  v31 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_1BA545118()
{
  unint64_t result;

  result = qword_1ED3CA4E0;
  if (!qword_1ED3CA4E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8180, &_s10CodingKeysON_77);
    atomic_store(result, (unint64_t *)&qword_1ED3CA4E0);
  }
  return result;
}

unint64_t sub_1BA54515C()
{
  unint64_t result;

  result = qword_1ED3B4858;
  if (!qword_1ED3B4858)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsets, &type metadata for FormatEdgeInsets);
    atomic_store(result, (unint64_t *)&qword_1ED3B4858);
  }
  return result;
}

uint64_t FeedGroupEmitterCursor.__deallocating_deinit()
{
  FeedGroupEmitterCursor.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedGroupEmitterCursor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 184);
  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(void **)(v1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v6 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 208);
  v7 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA54536C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatCompilerOptions.Newsroom.init(from:)(a1, a2);
}

uint64_t FormatCompilerOptions.Newsroom.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void (**v38)(char *, _QWORD);
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v37 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - v4;
  sub_1BAE75034();
  v7 = v6;
  v8 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE750AC();
  sub_1BA4A2870(&qword_1ED3D0F80, (uint64_t (*)(uint64_t))sub_1BAE750AC, (uint64_t)&unk_1BB8FFC6C);
  v11 = v38;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  v38 = v8;
  v13 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v7;
  v16 = v37;
  if ((v13 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v22 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v32 - 4) = (uint64_t)&_s10CodingKeysON_237;
      *(&v32 - 3) = sub_1BAE7512C();
      *(&v32 - 2) = sub_1BA54579C();
      *(&v32 - 1) = sub_1BAE75170();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E7253D30);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v38[1](v10, v15);
      a1 = v36;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5457E0();
  v39 = 0;
  v40 = 0;
  v41 = 0;
  sub_1BB874068();
  v32 = *((_QWORD *)&v42 + 1);
  v20 = v42;
  v33 = v43;
  v21 = v46;
  v34 = v44;
  v35 = v45;
  sub_1BB86E710();
  v42 = xmmword_1BB8A1A10;
  LOBYTE(v43) = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v38[1](v10, v15);
  v28 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  sub_1BA646EFC((uint64_t)v5, (uint64_t)v16 + *(int *)(v28 + 20), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v29 = v32;
  *v16 = v20;
  v16[1] = v29;
  v30 = v34;
  v16[2] = v33;
  v16[3] = v30;
  v31 = (uint64_t)v36;
  v16[4] = v35;
  v16[5] = v21;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_1BA54579C()
{
  unint64_t result;

  result = qword_1ED3C9430;
  if (!qword_1ED3C9430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0E18, &_s10CodingKeysON_237);
    atomic_store(result, (unint64_t *)&qword_1ED3C9430);
  }
  return result;
}

unint64_t sub_1BA5457E0()
{
  unint64_t result;

  result = qword_1ED3B6508;
  if (!qword_1ED3B6508)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerOptions.Newsroom.Environments, &type metadata for FormatCompilerOptions.Newsroom.Environments);
    atomic_store(result, (unint64_t *)&qword_1ED3B6508);
  }
  return result;
}

uint64_t sub_1BA545824()
{
  sub_1BA5458CC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA545870()
{
  sub_1BA5458CC();
  return sub_1BB872D60();
}

unint64_t sub_1BA5458CC()
{
  unint64_t result;

  result = qword_1ED3CB8E8;
  if (!qword_1ED3CB8E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4190, &_s10CodingTypeON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3CB8E8);
  }
  return result;
}

uint64_t sub_1BA545910(_QWORD *a1)
{
  return FormatURLParameterOptionModifier.encode(to:)(a1);
}

uint64_t FormatURLParameterOptionModifier.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEC8EE0(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAEC8DD8();
  v13 = sub_1BA4A2870(&qword_1ED3D1390, (uint64_t (*)(uint64_t))sub_1BAEC8DD8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatURLParameterOptionModifier, v14, v10, (uint64_t)&type metadata for FormatURLParameterOptionModifier, v12, (uint64_t)&type metadata for FormatVersions.JazzkonG, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD00);
  v15 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0B448(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAEC8EE0);
}

unint64_t sub_1BA545B1C()
{
  unint64_t result;

  result = qword_1ED3CDDE8;
  if (!qword_1ED3CDDE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C46C0, &_s10CodingKeysON_11);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDE8);
  }
  return result;
}

unint64_t sub_1BA545B60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BED0;
  if (!qword_1ED39BED0)
  {
    sub_1BA4AD288(255, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82CA5C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BED0);
  }
  return result;
}

uint64_t sub_1BA545BD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextAdjustmentBaseline.init(from:)(a1, a2);
}

uint64_t FormatTextAdjustmentBaseline.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAE7CA44();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7CABC();
  sub_1BA4A2870(&qword_1ED3D1330, (uint64_t (*)(uint64_t))sub_1BAE7CABC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s14descr1E72CBD49V10CodingKeysON;
      *(&v24 - 3) = sub_1BAE7CB3C();
      *(&v24 - 2) = sub_1BA545F14();
      *(&v24 - 1) = sub_1BAE7CB80();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E7269168);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  type metadata accessor for FormatTextNodeStyle();
  sub_1BA4A2870(&qword_1ED3C8748, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA545F14()
{
  unint64_t result;

  result = qword_1ED3CC7E8;
  if (!qword_1ED3CC7E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEF18, &_s14descr1E72CBD49V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CC7E8);
  }
  return result;
}

uint64_t sub_1BA545F58()
{
  sub_1BA546000();
  return sub_1BB872D0C();
}

uint64_t sub_1BA545FA4()
{
  sub_1BA546000();
  return sub_1BB872D60();
}

unint64_t sub_1BA546000()
{
  unint64_t result;

  result = qword_1ED3CBDD8;
  if (!qword_1ED3CBDD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B50C8, &_s10CodingTypeON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3CBDD8);
  }
  return result;
}

_QWORD *initializeWithCopy for FormatTextNodeFormat.Token(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA5460A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA5460B8(a1, a2, a3);
}

uint64_t sub_1BA5460B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t *v20;

  v20 = a3;
  v4 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)&v14 - v5;
  v16 = *(_QWORD *)(v4 + 96);
  v15 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  FeedServiceFetchResult.serviceContext.getter(v10);
  v11 = v18;
  sub_1BA5464B0((uint64_t)v9);
  if (v11)
  {

    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, AssociatedTypeWitness);
    v12 = v16;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 120) + 72))(v10, v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v12);
  }
  *v20 = v10;
  return swift_retain();
}

uint64_t sub_1BA546288(uint64_t a1)
{
  return FeedDatabase.save(result:)(a1);
}

uint64_t FeedDatabase.save(result:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *v1;
  v4 = sub_1BA6B2CB8();
  v5 = *(_QWORD *)(v3 + 96);
  v6 = *(_QWORD *)(v3 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BA546D3C(a1);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v7;
    v9 = *(unsigned __int8 *)(v7 + 32);
    v10 = v9 > 6;
    v11 = (1 << v9) & 0x63;
    if (!v10 && v11 != 0)
    {
      sub_1BA546D3C(a1);
      v14 = v13;
      swift_retain();
      swift_retain();
      sub_1BB01C484(v4, v14);
      swift_release();
      v15 = swift_allocObject();
      swift_weakInit();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v6;
      *(_QWORD *)(v16 + 24) = *(_QWORD *)(v3 + 88);
      *(_QWORD *)(v16 + 32) = v5;
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v3 + 104);
      *(_QWORD *)(v16 + 48) = *(_QWORD *)(v3 + 112);
      *(_OWORD *)(v16 + 56) = *(_OWORD *)(v3 + 120);
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v3 + 136);
      *(_QWORD *)(v16 + 80) = v15;
      *(_QWORD *)(v16 + 88) = a1;
      *(_QWORD *)(v16 + 96) = v4;
      *(_QWORD *)(v16 + 104) = v8;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BA6B2D10((uint64_t)sub_1BB025C90, v16);
      swift_release();
      swift_release();
      swift_release();
    }
  }
  return swift_release();
}

uint64_t sub_1BA5464B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  v13 = a1;
  v2 = *v1;
  v3 = type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v2 + 104);
  v7 = *(_QWORD *)(v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (!FeedServiceContextType.canWriteToDatabase()())
  {
    v14 = v7;
    v15 = *(_OWORD *)(v2 + 88);
    v16 = v6;
    v17 = *(_OWORD *)(v2 + 112);
    type metadata accessor for FeedManager.Errors();
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v10 = v5[*(int *)(v3 + 28)];
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedServiceOptions);
  LOBYTE(v14) = v10;
  return sub_1BA5466FC(&v14, v13);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeedManager.erase(database:)(NewsFeed::FeedServiceOptions::Database database)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char v10;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](database);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v8;
  sub_1BA5466FC(&v10, (uint64_t)v7);
  if (!v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 120) + 96))(v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1BA5466FC@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 96);
  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - v11;
  if (!*a1)
    goto LABEL_7;
  if (*a1 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, (uint64_t)v2 + *(_QWORD *)(v4 + 160), v6, v12);
    v14 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v5) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v21, v9, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_7:
    v15 = *(_QWORD *)(v4 + 120);
    v17 = *(_OWORD *)(v4 + 80);
    v18 = v5;
    v19 = *(_OWORD *)(v4 + 104);
    v20 = v15;
    type metadata accessor for FeedManager.Errors();
  }
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v17 - v11, (uint64_t)v2 + *(_QWORD *)(v4 + 152), v6, v12);
  v14 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_7;
  }
  v9 = v13;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v21, v9, v5);
}

void sub_1BA5468C4()
{
  FeedDatabase.erase()();
}

Swift::Bool __swiftcall FeedServiceContextType.canWriteToDatabase()()
{
  uint64_t v0;
  uint64_t v1;
  char v3;

  FeedServiceContextType.feedMode.getter(v0, v1, &v3);
  return (v3 & 1) == 0;
}

void FeedServiceFetchResult.serviceContext.getter(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA546950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
  swift_retain();
  FeedCursorContainer.serviceContext.getter(v4, v1, v0, v2);
  return swift_release();
}

uint64_t sub_1BA546A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v2 = *(uint64_t **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 120) = v2;
  *(_QWORD *)(v0 + 128) = v1;
  if (((unint64_t)v2 & 0x8000000000000000) != 0)
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v1;
    *(_QWORD *)(v8 + 24) = v2;
    v9 = v8 | 0x2000000000000000;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v10 = sub_1BA62F504(v9);
    swift_release();
    v14 = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1BA546D3C(v10);
    v12 = v11;
    v13 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v5 + 32);
    swift_retain();
    v13(&v14, v12, v6, v5);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 56);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v3;
    *v3 = v0;
    v3[1] = sub_1BA4AAA48;
    return sub_1BA670B84((_QWORD *)(v0 + 32), v2, v1, *(double *)(v0 + 64));
  }
}

uint64_t sub_1BA546C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 56);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BA546D3C(v1);
  v5 = v4;
  v6 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v2 + 32);
  swift_retain();
  v6(&v8, v5, v3, v2);
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 152));
}

uint64_t FeedServiceFetchResult.cursorContainer.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA546D3C(a1);
  v2 = v1;
  swift_retain();
  return v2;
}

void sub_1BA546D3C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA546D78()
{
  uint64_t v0;

  return *(_QWORD *)((v0 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
}

uint64_t sub_1BA546E50(uint64_t a1, uint64_t a2)
{
  return sub_1BA546E58(a2);
}

uint64_t sub_1BA546E58(uint64_t a1)
{
  return sub_1BA630038(a1);
}

Swift::Void __swiftcall FeedBannerAdIntegrator.integrateBannerAdUpdates(_:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::OpaquePointer *v11;
  void *v12;
  const void *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v3 = sub_1BB872610();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872664();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_QWORD *)a1._rawValue + 2))
  {
    v18 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8));
    v11 = (Swift::OpaquePointer *)swift_allocObject();
    v11[2]._rawValue = v1;
    v11[3]._rawValue = a1._rawValue;
    aBlock[4] = sub_1BA609A30;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_58;
    v12 = _Block_copy(aBlock);
    v17 = v4;
    v13 = v12;
    v14 = v1;
    swift_bridgeObjectRetain();
    sub_1BB872634();
    v19 = MEMORY[0x1E0DEE9D8];
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v15);
    sub_1BB873BC4();
    MEMORY[0x1BCCE3D90](0, v10, v6, v13);
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
}

_QWORD *sub_1BA5470A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = sub_1BB872610();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872664();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (_QWORD *)MEMORY[0x1BCCE5D40](a2 + 16);
  if (result)
  {
    v12 = result;
    v19 = *(_QWORD *)((char *)result + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *result) + 0xA8));
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    aBlock[4] = sub_1BA609980;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_13_3;
    v14 = _Block_copy(aBlock);
    v18 = v12;
    sub_1BB872634();
    v20 = MEMORY[0x1E0DEE9D8];
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v17 = v7;
    sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v15);
    sub_1BB873BC4();
    MEMORY[0x1BCCE3D90](0, v10, v6, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);

    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_1BA5472EC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA547334(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA54737C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x657A695378616DLL;
}

uint64_t sub_1BA5473CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateTime.init(from:)(a1, a2);
}

uint64_t FormatDateTime.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v22;

  v22 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA547834();
    v20[1] = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7254EF8;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA5476D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BA5478BC();
  sub_1BB8740D4();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
    v6 = *(_QWORD *)(v5 - 128);
    v7 = *(_QWORD *)(v5 - 120);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v4 = v8 | 0x4000000000000000;
    JUMPOUT(0x1BA5476A8);
  }
  JUMPOUT(0x1BA547554);
}

void sub_1BA547744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BAE767F4();
  sub_1BB8740D4();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
    v6 = *(_QWORD *)(v5 - 128);
    v7 = *(_QWORD *)(v5 - 120);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v4 = v8 | 0x8000000000000000;
    JUMPOUT(0x1BA5476A8);
  }
  JUMPOUT(0x1BA547554);
}

void sub_1BA5477DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  *v3 = 0xC000000000000000;
  JUMPOUT(0x1BA5476A8);
}

void sub_1BA5477F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  *v3 = 0xC000000000000008;
  JUMPOUT(0x1BA5476A8);
}

void sub_1BA547810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  JUMPOUT(0x1BA54782CLL);
}

unint64_t sub_1BA547834()
{
  unint64_t result;

  result = qword_1ED3C6B88;
  if (!qword_1ED3C6B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0980, &_s10CodingTypeON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3C6B88);
  }
  return result;
}

unint64_t sub_1BA547878()
{
  unint64_t result;

  result = qword_1ED3C9848;
  if (!qword_1ED3C9848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateTimeBinding, &type metadata for FormatDateTimeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3C9848);
  }
  return result;
}

unint64_t sub_1BA5478BC()
{
  unint64_t result;

  result = qword_1ED3C8C70;
  if (!qword_1ED3C8C70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateTimeOffset, &type metadata for FormatDateTimeOffset);
    atomic_store(result, (unint64_t *)&qword_1ED3C8C70);
  }
  return result;
}

uint64_t sub_1BA547900()
{
  return swift_getAtKeyPath();
}

void sub_1BA547928(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_identifier);
  v4 = sub_1BB8729A0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t FormatButtonNodeLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1BA5479C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _OWORD *v42;
  __int128 *v43;
  __int128 v44;
  __int128 v45;
  _QWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  v10 = *(_DWORD *)(v5 + 80);
  if ((v10 & 0x1000F8) != 0
    || (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((unsigned __int16)((v10 & 0xF8) + 23) & (unsigned __int16)~(v10 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v13 = v8 + 1;
    v14 = v9 + 1;
    switch(*((_BYTE *)a2 + v9))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v15 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v16 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v17 = *(_QWORD *)(v16 + 24);
        if (v17 < 0xFFFFFFFF)
        {
          v28 = *(_OWORD *)(v16 + 16);
          *(_OWORD *)v15 = *(_OWORD *)v16;
          *(_OWORD *)(v15 + 16) = v28;
        }
        else
        {
          *(_QWORD *)(v15 + 24) = v17;
          (**(void (***)(void))(v17 - 8))();
        }
        *((_BYTE *)a1 + v9) = 0;
        break;
      case 1:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v18 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v19 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v20 = *(_QWORD *)(v19 + 24);
        if (v20 < 0xFFFFFFFF)
        {
          v29 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)v18 = *(_OWORD *)v19;
          *(_OWORD *)(v18 + 16) = v29;
        }
        else
        {
          *(_QWORD *)(v18 + 24) = v20;
          (**(void (***)(void))(v20 - 8))();
        }
        v21 = 1;
        goto LABEL_45;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v21 = 2;
        goto LABEL_45;
      case 3:
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v23 = 3;
        goto LABEL_28;
      case 4:
        v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        v23 = 4;
        goto LABEL_28;
      case 5:
        v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        v23 = 5;
LABEL_28:
        *((_BYTE *)a1 + v9) = v23;
        swift_bridgeObjectRetain();
        break;
      case 6:
        v26 = *((unsigned __int8 *)a2 + v8);
        if (v26 >= 3)
        {
          if (v8 <= 3)
            v27 = v8;
          else
            v27 = 4;
          __asm { BR              X13 }
        }
        if (v26 == 2)
        {
          v30 = a2[1];
          *a1 = *a2;
          a1[1] = v30;
          *((_BYTE *)a1 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v26 == 1)
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          *((_BYTE *)a1 + v8) = 1;
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          v31 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v32 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)(v32 + 24);
          if (v33 < 0xFFFFFFFF)
          {
            v34 = *(_OWORD *)(v32 + 16);
            *(_OWORD *)v31 = *(_OWORD *)v32;
            *(_OWORD *)(v31 + 16) = v34;
          }
          else
          {
            *(_QWORD *)(v31 + 24) = v33;
            (**(void (***)(void))(v33 - 8))();
          }
          *((_BYTE *)a1 + v8) = 0;
        }
        v35 = ((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
        v36 = ((unint64_t)a2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
        v37 = *(_QWORD *)(v36 + 24);
        *(_QWORD *)(v35 + 24) = v37;
        *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
        (**(void (***)(void))(v37 - 8))();
        v21 = 6;
LABEL_45:
        *((_BYTE *)a1 + v9) = v21;
        break;
      default:
        if (v9 <= 3)
          v11 = v9;
        else
          v11 = 4;
        __asm { BR              X13 }
        return result;
    }
    v38 = (_QWORD *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    v39 = (_QWORD *)(((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v38 = *v39;
    v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8);
    v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v40 = *v41;
    v42 = (_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
    v43 = (__int128 *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    v44 = *v43;
    v45 = v43[1];
    *(_OWORD *)((char *)v42 + 26) = *(__int128 *)((char *)v43 + 26);
    *v42 = v44;
    v42[1] = v45;
    *(_QWORD *)(((unint64_t)v42 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v43 + 49) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void FeedBannerAdBlueprintModifier.modify(blueprint:completion:)(void (*a1)(_QWORD, _QWORD, _QWORD), void (*a2)(_QWORD), uint64_t a3, _QWORD *a4)
{
  uint64_t *v4;
  void (*v7)(_QWORD, _QWORD, _QWORD);
  void (*v8)(_QWORD, _QWORD, _QWORD);
  void (*v9)(_QWORD, _QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, _QWORD, uint64_t);
  void (*v18)(char *, _QWORD, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  void (*v27)(char *, _QWORD, uint64_t);
  void (*v28)(_QWORD, _QWORD, _QWORD);
  void (*v29)(char *, _QWORD, uint64_t);
  void (*v30)(_QWORD, _QWORD, _QWORD);
  unint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  char *v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  void (*v37)(_QWORD, _QWORD, _QWORD);
  void (*v38)(_QWORD, _QWORD, _QWORD);
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  void (*v45)(_QWORD, _QWORD, _QWORD);
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t);
  char *v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  void (*v53)(_QWORD, _QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD, _QWORD, _QWORD);
  uint64_t v57;
  void (*v58)(_QWORD);
  uint64_t v59;
  void (*v60)(char *, _QWORD, uint64_t);
  void (*v61)(char *, _QWORD, uint64_t);
  void (*v62)(char *, _QWORD, uint64_t);
  void (*v63)(char *, _QWORD, uint64_t);
  void (*v64)(char *, _QWORD, uint64_t);
  void (*v65)(_QWORD, _QWORD, _QWORD);
  void (*v66)(_QWORD, _QWORD, _QWORD);
  void (*v67)(_QWORD, _QWORD, _QWORD);

  v58 = a2;
  v59 = a3;
  v7 = (void (*)(_QWORD, _QWORD, _QWORD))a4[3];
  v8 = (void (*)(_QWORD, _QWORD, _QWORD))a4[4];
  v9 = (void (*)(_QWORD, _QWORD, _QWORD))a4[7];
  v64 = (void (*)(_QWORD, _QWORD, uint64_t))a4[2];
  v65 = v7;
  v66 = v8;
  v67 = v9;
  v10 = sub_1BB8707B0();
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v50 - v11;
  v62 = v7;
  v63 = (void (*)(char *, _QWORD, uint64_t))v64;
  v65 = v7;
  v60 = v9;
  v61 = (void (*)(char *, _QWORD, uint64_t))v8;
  v66 = v8;
  v67 = v9;
  v13 = sub_1BB871680();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v50 - v15;
  v16 = swift_allocBox();
  v56 = a1;
  v57 = v16;
  v18 = (void (*)(char *, _QWORD, uint64_t))v17;
  v50 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 16);
  v50((char *)v17, a1, v13);
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v19 = (void *)qword_1ED476858;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
  v21 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v23 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v20 + 64) = v23;
  *(_QWORD *)(v20 + 32) = v22;
  v24 = v19;
  sub_1BB87330C();
  sub_1BB86EF44("Modifying blueprint to integrate %d update(s)", (_DWORD)v50);

  v25 = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v21 + 16))
  {
    MEMORY[0x1E0C80A78](v25);
    v26 = (void (*)(char *, _QWORD, uint64_t))v62;
    *(&v50 - 10) = v63;
    *(&v50 - 9) = v26;
    v27 = (void (*)(char *, _QWORD, uint64_t))a4[5];
    v28 = (void (*)(_QWORD, _QWORD, _QWORD))a4[6];
    *(&v50 - 8) = v61;
    *(&v50 - 7) = v27;
    v52 = v28;
    v53 = (void (*)(_QWORD, _QWORD, _QWORD))v27;
    v29 = (void (*)(char *, _QWORD, uint64_t))v60;
    *(&v50 - 6) = (void (*)(char *, _QWORD, uint64_t))v28;
    *(&v50 - 5) = v29;
    *(&v50 - 4) = v18;
    *(&v50 - 3) = (void (*)(char *, _QWORD, uint64_t))v4;
    v30 = v56;
    *(&v50 - 2) = (void (*)(char *, _QWORD, uint64_t))v56;
    swift_bridgeObjectRetain();
    v31 = sub_1BA548338((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1BA60A1C8, (uint64_t)(&v50 - 12), v21);
    v32 = swift_bridgeObjectRelease();
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      v47 = sub_1BB873F30();
      v32 = swift_bridgeObjectRelease();
      if (v47)
        goto LABEL_6;
    }
    else if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      MEMORY[0x1E0C80A78](v32);
      *(&v50 - 2) = (void (*)(char *, _QWORD, uint64_t))v31;
      sub_1BB46B3D4();
      sub_1BB86EC14();
      swift_bridgeObjectRelease();
      v33 = v51;
      v50(v51, v30, v13);
      v34 = (*(unsigned __int8 *)(v14 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v35 = (char *)swift_allocObject();
      v36 = v62;
      *((_QWORD *)v35 + 2) = v63;
      *((_QWORD *)v35 + 3) = v36;
      v37 = v60;
      v38 = v53;
      *((_QWORD *)v35 + 4) = v61;
      *((_QWORD *)v35 + 5) = v38;
      *((_QWORD *)v35 + 6) = v52;
      *((_QWORD *)v35 + 7) = v37;
      v39 = v58;
      *((_QWORD *)v35 + 8) = v57;
      *((_QWORD *)v35 + 9) = v39;
      v40 = v59;
      *((_QWORD *)v35 + 10) = v59;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v35[v34], v33, v13);
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = sub_1BB46B524;
      *(_QWORD *)(v41 + 24) = v35;
      swift_retain();
      swift_retain();
      v42 = (void *)sub_1BB86E854();
      sub_1BB86E974();
      swift_release();
      swift_release();

      v43 = (_QWORD *)swift_allocObject();
      v44 = v62;
      v43[2] = v63;
      v43[3] = v44;
      v45 = v53;
      v43[4] = v61;
      v43[5] = v45;
      v43[6] = v52;
      v43[7] = v37;
      v43[8] = v39;
      v43[9] = v40;
      swift_retain();
      v46 = (void *)sub_1BB86E854();
      sub_1BB86E9A4();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    swift_bridgeObjectRelease();
  }
  v49 = v54;
  v48 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v12, *MEMORY[0x1E0DB9A20], v55);
  v58(v12);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v48);
  swift_release();
}

uint64_t sub_1BA548338(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1BA60A090(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA6D5338);
}

uint64_t FeedItemSupplementaryAttributes.ordering.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v2, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
    goto LABEL_6;
  if (EnumCaseMultiPayload != 2)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_6:
    v11 = (unsigned int *)MEMORY[0x1E0DBBB50];
    goto LABEL_7;
  }
  v8 = *((_QWORD *)v6 + 14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 56);
  v10 = *(_BYTE *)(v8 + 64);
  swift_release();
  if ((v10 & 1) != 0)
    goto LABEL_6;
  *a1 = v9;
  v11 = (unsigned int *)MEMORY[0x1E0DBBB48];
LABEL_7:
  v12 = *v11;
  v13 = sub_1BB871170();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a1, v12, v13);
}

uint64_t sub_1BA54846C(_QWORD *a1)
{
  return FormatAdMetricsNodeContent.init(from:)(a1);
}

uint64_t FormatAdMetricsNodeContent.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (unint64_t *)(v11 + 40);
      while (1)
      {
        v14 = *v13;
        if (*v13 >= 4)
          break;
        v13 += 2;
        if (!--v12)
          goto LABEL_7;
      }
      v15 = *(v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v16 = v15;
      *(_QWORD *)(v16 + 8) = v14;
      *(_QWORD *)(v16 + 16) = &unk_1E726A548;
      *(_OWORD *)(v16 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v15, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA548718();
  v18 = 0uLL;
  sub_1BB8740D4();
  v18 = xmmword_1BB87FC90;
  sub_1BA54875C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA548718()
{
  unint64_t result;

  result = qword_1ED3CB6A0;
  if (!qword_1ED3CB6A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE578, &_s14descr1E72CC8B9V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB6A0);
  }
  return result;
}

unint64_t sub_1BA54875C()
{
  unint64_t result;

  result = qword_1ED3B7DF8;
  if (!qword_1ED3B7DF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeBinding, &type metadata for FormatAdMetricsNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B7DF8);
  }
  return result;
}

uint64_t sub_1BA5487A0(_QWORD *a1)
{
  return FormatBindingURLExpression.encode(to:)(a1);
}

uint64_t FormatBindingURLExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  void (*v27)(char *);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  int v34;
  char v35;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  sub_1BAE851F4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 8);
  v30 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_BYTE *)(v1 + 24);
  v34 = *(unsigned __int8 *)(v1 + 25);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE850EC();
  v17 = sub_1BA4A2870(&qword_1ED3D11E0, (uint64_t (*)(uint64_t))sub_1BAE850EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingURLExpression, v18, v14, (uint64_t)&type metadata for FormatBindingURLExpression, v16, (uint64_t)&type metadata for FormatVersions.SydroF, v15, (uint64_t)v10, v17, (uint64_t)&off_1E734BD60);
  v19 = v30;
  sub_1BA690C00(v30, v11, v12, v13);
  if (qword_1ED3C6D50 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BF0);
  v27 = *(void (**)(char *))(*(_QWORD *)(v20 - 8) + 16);
  v28 = v21;
  v27(v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v31;
  sub_1BAD10C1C(v19, v11, v12, v13, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  sub_1BA5A7EF8(v19, v11, v12, v13);
  if (!v22)
  {
    v23 = (uint64_t)v29;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v29, v28, v20);
    swift_storeEnumTagMultiPayload();
    v24 = v34;
    if (v34 != 1 && (sub_1BAE4513C(v23, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v32 = xmmword_1BB8A1A10;
      v33 = 0;
      v35 = v24;
      sub_1BAE8526C();
      sub_1BA4A2870(&qword_1ED3AEE40, (uint64_t (*)(uint64_t))sub_1BAE8526C, MEMORY[0x1E0DED188]);
      sub_1BA548B1C();
      sub_1BB874464();
    }
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE851F4);
}

unint64_t sub_1BA548B1C()
{
  unint64_t result;

  result = qword_1ED3A9018;
  if (!qword_1ED3A9018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingURLExpressionLogic, &type metadata for FormatBindingURLExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3A9018);
  }
  return result;
}

unint64_t sub_1BA548B60(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BA548BBC(a2, a3, a4, a5, a6, a7, a8, a9);
}

unint64_t sub_1BA548BBC(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, NSObject *, uint64_t);
  char v39;
  void (*v40)(char *, uint64_t);
  char v41;
  void (*v42)(char *, _QWORD *);
  _QWORD *v43;
  _QWORD *v44;
  double v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t result;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  double v56;
  uint64_t i;
  void *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  double v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  void (*v82)(char *, unint64_t, _QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  dispatch_group_t v86;
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  dispatch_group_t v91;
  NSObject *v92;
  uint64_t v93;
  char *v94;
  dispatch_group_t v95;
  double v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double v102[2];
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  double v108;
  double v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  double v113;
  char *v114;
  char *v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  dispatch_group_t v119;
  _QWORD *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  char *v126;
  __int128 v127;
  uint64_t v128;
  _QWORD v129[2];
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v111 = *(double *)&a8;
  v109 = *(double *)&a6;
  v108 = *(double *)&a5;
  v107 = *(double *)&a4;
  v116 = a2;
  v110 = a1;
  v106 = sub_1BB872688();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v104 = (char *)v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = *(double *)&a7;
  v123 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v11);
  v122 = (char *)v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v121 = (char *)v102 - v14;
  MEMORY[0x1E0C80A78](v15);
  v126 = (char *)v102 - v16;
  v103 = v17;
  MEMORY[0x1E0C80A78](v18);
  v125 = (char *)v102 - v19;
  v112 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v112);
  v124 = (_QWORD *)((char *)v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v118 = (_QWORD *)sub_1BB86FC70();
  v117 = (_QWORD *)*(v118 - 1);
  MEMORY[0x1E0C80A78](v118);
  v115 = (char *)v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v114 = (char *)v102 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v102 - v25;
  v27 = sub_1BB870B7C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v102 - v32;
  v34 = sub_1BB8705C4();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)v102 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a7) = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  v38 = *(void (**)(char *, NSObject *, uint64_t))(v35 + 16);
  v119 = a3;
  v38(v37, a3, v34);
  if ((a7 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return (unint64_t)nullsub_1;
  }
  sub_1BB8705A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E0DBA690], v27);
  v39 = sub_1BB870B70();
  v40 = *(void (**)(char *, uint64_t))(v28 + 8);
  v40(v30, v27);
  v40(v33, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  if ((v39 & 1) == 0)
    return (unint64_t)nullsub_1;
  sub_1BB8704EC();
  v41 = sub_1BB86FC58();
  v42 = (void (*)(char *, _QWORD *))v117[1];
  v43 = v118;
  v42(v26, v118);
  if ((v41 & 1) == 0)
    return (unint64_t)nullsub_1;
  sub_1BB8704EC();
  sub_1BB86FC64();
  v117 = v44;
  v102[1] = v45;
  v42(v26, v43);
  v46 = v114;
  sub_1BB8704EC();
  sub_1BB86FC40();
  v42(v46, v43);
  v47 = v115;
  sub_1BB8704EC();
  sub_1BB86FC34();
  v49 = v48;
  v51 = v50;
  v42(v47, v43);
  v100 = v49;
  v101 = v51;
  result = sub_1BB870AB0();
  if (!result)
    return (unint64_t)nullsub_1;
  v53 = result;
  v134 = MEMORY[0x1E0DEE9D8];
  if (result >> 62)
  {
    result = sub_1BB873F30();
    v54 = result;
  }
  else
  {
    v54 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v55 = v126;
  v56 = v113;
  if (v54)
  {
    if (v54 < 1)
    {
      __break(1u);
LABEL_53:
      __break(1u);
      return result;
    }
    for (i = 0; i != v54; ++i)
    {
      if ((v53 & 0xC000000000000001) != 0)
        v59 = (id)MEMORY[0x1BCCE4630](i, v53);
      else
        v59 = *(id *)(v53 + 8 * i + 32);
      v60 = v59;
      v61 = objc_msgSend(v59, sel_representedElementKind);
      if (v61)
      {
        v58 = v61;

      }
      else
      {
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
      }
      v55 = v126;
    }
    v62 = swift_bridgeObjectRelease();
    v63 = v134;
  }
  else
  {
    v62 = swift_bridgeObjectRelease();
    v63 = MEMORY[0x1E0DEE9D8];
  }
  v134 = v63;
  MEMORY[0x1E0C80A78](v62);
  v64 = v108;
  v102[-10] = v107;
  v102[-9] = v64;
  v102[-8] = v109;
  v102[-7] = v56;
  v102[-6] = v111;
  v102[-5] = v65;
  v102[-4] = v67;
  v102[-3] = v66;
  v100 = v110;
  sub_1BA865418(0);
  sub_1BAFC3794();
  v68 = sub_1BB872BF8();
  swift_bridgeObjectRelease();
  v69 = CACurrentMediaTime();
  if (qword_1ED3BA7F8 != -1)
    swift_once();
  v70 = (id)qword_1ED476860;
  v71 = sub_1BB8732E8();
  sub_1BB86EF44("Image headline view renderer pipeline starting", 46, 2, &dword_1BA493000, v70, v71, MEMORY[0x1E0DEE9D8]);

  sub_1BB870504();
  v73 = v72;
  v74 = sub_1BB870540();
  v75 = v124;
  v76 = (char *)v124 + *(int *)(v112 + 24);
  v77 = sub_1BB86F550();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 1, 1, v77);
  *v75 = v73;
  v75[1] = v74;
  v119 = dispatch_group_create();
  v78 = MEMORY[0x1BCCE37E4](v68, *(_QWORD *)&v56);
  v79 = v123;
  if (v78)
  {
    v80 = 0;
    v118 = v120 + 2;
    v117 = v120 + 7;
    do
    {
      v81 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v81 & 1) != 0)
      {
        v82 = *(void (**)(char *, unint64_t, _QWORD))(v79 + 16);
        v82(v125, v68+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(_QWORD *)(v79 + 72) * v80, *(_QWORD *)&v56);
        v83 = v80 + 1;
        if (__OFADD__(v80, 1))
          goto LABEL_49;
      }
      else
      {
        result = sub_1BB873D08();
        if (v103 != 8)
          goto LABEL_53;
        v134 = result;
        v82 = *(void (**)(char *, unint64_t, _QWORD))(v79 + 16);
        v82(v125, (unint64_t)&v134, *(_QWORD *)&v56);
        swift_unknownObjectRelease();
        v83 = v80 + 1;
        if (__OFADD__(v80, 1))
        {
LABEL_49:
          __break(1u);
          break;
        }
      }
      (*(void (**)(char *, char *, double))(v79 + 32))(v55, v125, COERCE_DOUBLE(*(_QWORD *)&v56));
      v82(v121, (unint64_t)v55, *(_QWORD *)&v56);
      sub_1BA4D9CE8(0, &qword_1ED3B86D8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4CECCC(&v131, (uint64_t)&v134);
        v84 = v135;
        v85 = v136;
        __swift_project_boxed_opaque_existential_1(&v134, v135);
        (*(void (**)(__int128 *__return_ptr, _QWORD *, uint64_t, uint64_t))(v85 + 8))(&v131, v124, v84, v85);
        sub_1BA65DC54((uint64_t)&v131, (uint64_t)&v127);
        if (v128)
        {
          sub_1BA4CECCC(&v127, (uint64_t)v129);
          __swift_project_boxed_opaque_existential_1(v129, v130);
          if ((ProcessedImageRequestType.isDownloaded.getter() & 1) != 0)
          {
            v86 = v119;
            dispatch_group_enter(v119);
            __swift_project_boxed_opaque_existential_1(v118, v120[5]);
            *(_QWORD *)(swift_allocObject() + 16) = v86;
            v87 = v86;
            sub_1BB86F8EC();
            swift_release();
          }
          sub_1BA65DBBC((uint64_t)&v131, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
        }
        else
        {
          v88 = MEMORY[0x1E0DBA438];
          sub_1BA65DBBC((uint64_t)&v131, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
          sub_1BA65DBBC((uint64_t)&v127, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, v88);
        }
        v79 = v123;
        v55 = v126;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v134);
      }
      else
      {
        v133 = 0;
        v131 = 0u;
        v132 = 0u;
        sub_1BA65DBBC((uint64_t)&v131, (unint64_t *)&unk_1ED3B86E0, &qword_1ED3B86D8, (uint64_t)&protocol descriptor for ThumbnailImageRequestProviding);
      }
      v82(v122, (unint64_t)v55, *(_QWORD *)&v56);
      sub_1BA4D9CE8(0, &qword_1ED3B8A68);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4CECCC(&v131, (uint64_t)&v134);
        v89 = v135;
        v90 = v136;
        __swift_project_boxed_opaque_existential_1(&v134, v135);
        (*(void (**)(__int128 *__return_ptr, _QWORD *, uint64_t, uint64_t))(v90 + 8))(&v131, v124, v89, v90);
        sub_1BA65DC54((uint64_t)&v131, (uint64_t)&v127);
        if (v128)
        {
          sub_1BA4CECCC(&v127, (uint64_t)v129);
          __swift_project_boxed_opaque_existential_1(v129, v130);
          if ((ProcessedImageRequestType.isDownloaded.getter() & 1) != 0)
          {
            v91 = v119;
            dispatch_group_enter(v119);
            __swift_project_boxed_opaque_existential_1(v117, v120[10]);
            *(_QWORD *)(swift_allocObject() + 16) = v91;
            v92 = v91;
            sub_1BB86F8EC();
            swift_release();
          }
          sub_1BA65DBBC((uint64_t)&v131, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
          v79 = v123;
          v55 = v126;
          (*(void (**)(char *, double))(v123 + 8))(v126, COERCE_DOUBLE(*(_QWORD *)&v56));
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
        }
        else
        {
          v93 = MEMORY[0x1E0DBA438];
          sub_1BA65DBBC((uint64_t)&v131, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
          v79 = v123;
          v55 = v126;
          (*(void (**)(char *, double))(v123 + 8))(v126, COERCE_DOUBLE(*(_QWORD *)&v56));
          sub_1BA65DBBC((uint64_t)&v127, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, v93);
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v134);
      }
      else
      {
        v133 = 0;
        v131 = 0u;
        v132 = 0u;
        (*(void (**)(char *, double))(v79 + 8))(v55, COERCE_DOUBLE(*(_QWORD *)&v56));
        sub_1BA65DBBC((uint64_t)&v131, &qword_1ED3B8A70, &qword_1ED3B8A68, (uint64_t)&protocol descriptor for PublisherLogoImageRequestProviding);
      }
      ++v80;
    }
    while (v83 != MEMORY[0x1BCCE37E4](v68, *(_QWORD *)&v56));
  }
  swift_bridgeObjectRelease();
  v94 = v104;
  sub_1BB872670();
  v95 = v119;
  sub_1BB873408();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v94, v106);
  v96 = CACurrentMediaTime();
  v97 = (id)qword_1ED476860;
  sub_1BB8732E8();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_1BB87CE70;
  v99 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v98 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v98 + 64) = v99;
  *(double *)(v98 + 32) = (v96 - v69) * 1000.0;
  sub_1BB86EF44("Image headline view renderer pipeline finished, time=%fms", v102[0]);

  swift_bridgeObjectRelease();
  sub_1BAA4D944((uint64_t)v124);
  return (unint64_t)nullsub_1;
}

uint64_t sub_1BA5499DC(_QWORD *a1)
{
  return FormatTextAlignment.encode(to:)(a1);
}

uint64_t FormatTextAlignment.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[6];
  uint64_t v23;
  _QWORD *v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v22[5] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v22[4] = (char *)v22 - v7;
  MEMORY[0x1E0C80A78](v8);
  v22[3] = (char *)v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  v22[2] = (char *)v22 - v11;
  MEMORY[0x1E0C80A78](v12);
  v22[1] = (char *)v22 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  v23 = *v1;
  v17 = a1[3];
  v18 = a1[4];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, v17, v18);
  result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1BA549F14(_QWORD *a1)
{
  return FormatButtonNodeState.encode(to:)(a1);
}

uint64_t FormatButtonNodeState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[4];
  uint64_t v21;
  _QWORD *v22;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v20[3] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v20[2] = (char *)v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  v20[1] = (char *)v20 - v9;
  MEMORY[0x1E0C80A78](v10);
  v20[0] = (char *)v20 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - v13;
  v21 = *v1;
  v15 = a1[3];
  v16 = a1[4];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v14, (uint64_t)sub_1BA90CF04, 0, v15, v16);
  result = sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1BA54A3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t result;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v1);
  v57 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v58 = (uint64_t)&v51 - v4;
  MEMORY[0x1E0C80A78](v5);
  v59 = (uint64_t)&v51 - v6;
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v51 - v8;
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v51 - v10;
  MEMORY[0x1E0C80A78](v11);
  v60 = (uint64_t)&v51 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v51 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v51 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v51 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v51 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v51 - v29;
  v31 = v0;
  v32 = v63;
  result = sub_1BA54AC58();
  if (!v32)
  {
    v55 = v27;
    v56 = v30;
    v53 = v24;
    v54 = v18;
    v63 = v21;
    v52 = v15;
    v34 = (int *)type metadata accessor for FormatRemoteImage();
    sub_1BA54AC58();
    v35 = v0;
    sub_1BA54AC58();
    v36 = (uint64_t)v56;
    sub_1BA57B488(v31 + v34[7], (uint64_t)v56, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v37 = type metadata accessor for FormatURL();
    v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
    if (v38(v36, 1, v37) == 1)
    {
      sub_1BA502AD0(v36, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v39 = (uint64_t)v63;
    }
    else
    {
      sub_1BA54AC58();
      v39 = (uint64_t)v63;
      sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v40 = (uint64_t)v55;
    sub_1BA57B488(v35 + v34[8], (uint64_t)v55, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v38(v40, 1, v37) == 1)
    {
      sub_1BA502AD0(v40, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v41 = (uint64_t)v53;
    v42 = (uint64_t)v54;
    sub_1BA57B488(v35 + v34[9], (uint64_t)v53, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v38(v41, 1, v37) == 1)
    {
      sub_1BA502AD0(v41, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v42 = (uint64_t)v54;
    }
    sub_1BA57B488(v35 + v34[10], v39, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v38(v39, 1, v37) == 1)
    {
      sub_1BA502AD0(v39, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v42 = (uint64_t)v54;
    }
    sub_1BA57B488(v35 + v34[11], v42, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v38(v42, 1, v37) == 1)
    {
      sub_1BA502AD0(v42, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v43 = (uint64_t)v52;
    sub_1BA57B488(v35 + v34[12], (uint64_t)v52, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v44 = v38;
    if (v38(v43, 1, v37) == 1)
    {
      sub_1BA502AD0(v43, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v45 = (uint64_t)v61;
    v46 = (uint64_t)v62;
    v47 = v60;
    sub_1BA57B488(v35 + v34[13], v60, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v44(v47, 1, v37) == 1)
    {
      sub_1BA502AD0(v47, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      v46 = (uint64_t)v62;
      sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA57B488(v35 + v34[14], v46, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v44(v46, 1, v37) == 1)
    {
      sub_1BA502AD0(v46, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA57B488(v35 + v34[15], v45, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v44(v45, 1, v37) == 1)
    {
      sub_1BA502AD0(v45, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v48 = v59;
    sub_1BA57B488(v35 + v34[16], v59, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v44(v48, 1, v37) == 1)
    {
      sub_1BA502AD0(v48, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v49 = v58;
    sub_1BA57B488(v35 + v34[17], v58, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v44(v49, 1, v37) == 1)
    {
      sub_1BA502AD0(v49, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v50 = v57;
    sub_1BA57B488(v35 + v34[18], v57, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v44(v50, 1, v37) == 1)
    {
      return sub_1BA502AD0(v50, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      return sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
  }
  return result;
}

uint64_t sub_1BA54AC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[3];
  char v16;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15[-1] - v3;
  v5 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v7, v8);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
    return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v7[24])
  {
    v11 = *(_QWORD *)v7;
    v10 = *((_QWORD *)v7 + 1);
    v12 = *((_QWORD *)v7 + 2);
    v15[0] = v11;
    v15[1] = v10;
    v15[2] = v12;
    v16 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BB6B84D4(v15, &v16);
    if (!v1)
    {
      sub_1BB3757A0(v11, v10, v13, 1, (uint64_t)v4);
      sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    return sub_1BA5A7EF8(v11, v10, v12, 0);
  }
  return result;
}

uint64_t destroy for FormatOptionEnum()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1BA54AE40(uint64_t a1)
{
  return sub_1BA54AE60(a1);
}

id sub_1BA54AE60(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v7;
  _BYTE v8[40];

  sub_1BA4C010C(a1, (uint64_t)v8);
  sub_1BA54B1AC();
  type metadata accessor for FormatImageRequest();
  if (!swift_dynamicCast())
    return 0;
  v1 = sub_1BA54B200(v7);
  if (!v1)
  {
    swift_release();
    return 0;
  }
  v2 = (void *)v1;
  v3 = (void *)sub_1BA54B368((uint64_t)v7);
  if (!v3)
  {
    swift_release();

    return 0;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_imageWithRenderingMode_, v7[12]);
  swift_release();

  return v5;
}

uint64_t _s8NewsFeed22StubThumbnailProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  double v1;
  double v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  _QWORD aBlock[6];
  uint64_t v11;

  sub_1BA4C010C(a1, (uint64_t)aBlock);
  sub_1BA54B1AC();
  type metadata accessor for ThumbnailProcessorRequest();
  if (!swift_dynamicCast())
    return 0;
  v1 = *(double *)(v11 + 96);
  v2 = *(double *)(v11 + 104);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v1, v2);
  v4 = swift_allocObject();
  *(double *)(v4 + 16) = v1;
  *(double *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BA56DB58;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1BA56DB30;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA56DAFC;
  aBlock[3] = &block_descriptor_120;
  v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v7 = objc_msgSend(v3, sel_imageWithActions_, v6);
  _Block_release(v6);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v6 & 1) == 0)
  {
    v9 = sub_1BB873840();
    swift_release();
    swift_release();

    return v9;
  }
  __break(1u);
  return result;
}

id sub_1BA54B110(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v5;
  _BYTE v6[40];

  sub_1BA4C010C(a1, (uint64_t)v6);
  sub_1BA54B1AC();
  type metadata accessor for FormatImageRequest();
  if (!swift_dynamicCast())
    return a2;
  v2 = objc_msgSend(a2, sel_imageWithRenderingMode_, *(_QWORD *)(v5 + 96));
  swift_release();
  return v2;
}

unint64_t sub_1BA54B1AC()
{
  unint64_t result;

  result = qword_1ED3B0A08;
  if (!qword_1ED3B0A08)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B0A08);
  }
  return result;
}

uint64_t sub_1BA54B200(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v2 = a1[5];
  if (v2 && (swift_beginAccess(), (v3 = *(_QWORD *)(v2 + 64)) != 0) && *(_QWORD *)(v3 + 16))
  {
    sub_1BA4C010C((uint64_t)(a1 + 15), (uint64_t)v12);
    swift_retain();
    v4 = swift_bridgeObjectRetain();
    sub_1BB516068(v4, (uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_release();
    v5 = sub_1BB870C78();
    swift_allocObject();
    v6 = sub_1BB870C54();
    v12[3] = v5;
    v12[4] = MEMORY[0x1E0DBAC08];
    v12[0] = v6;
    swift_retain();
    v7 = sub_1BB870474();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    v8 = a1 + 15;
    __swift_project_boxed_opaque_existential_1(a1 + 15, a1[18]);
    v7 = sub_1BB86FA90();
    if (!v7)
    {
      v9 = a1[18];
      v10 = a1[19];
      __swift_project_boxed_opaque_existential_1(v8, v9);
      return MEMORY[0x1BCCE0370](v9, v10);
    }
  }
  return v7;
}

uint64_t sub_1BA54B368(uint64_t a1)
{
  uint64_t v2;

  sub_1BA65805C();
  MEMORY[0x1E0C80A78](v2);
  if (*(_QWORD *)(a1 + 40))
    __asm { BR              X10 }
  return sub_1BB873858();
}

void sub_1BA54B664(_QWORD *a1)
{
  FormatTagBinding.Bool.encode(to:)(a1);
}

void FormatTagBinding.Bool.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[20];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v46[16] = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v46[15] = (char *)v46 - v6;
  MEMORY[0x1E0C80A78](v7);
  v46[14] = (char *)v46 - v8;
  MEMORY[0x1E0C80A78](v9);
  v46[13] = (char *)v46 - v10;
  MEMORY[0x1E0C80A78](v11);
  v46[12] = (char *)v46 - v12;
  MEMORY[0x1E0C80A78](v13);
  v46[11] = (char *)v46 - v14;
  MEMORY[0x1E0C80A78](v15);
  v46[10] = (char *)v46 - v16;
  MEMORY[0x1E0C80A78](v17);
  v46[9] = (char *)v46 - v18;
  MEMORY[0x1E0C80A78](v19);
  v46[8] = (char *)v46 - v20;
  MEMORY[0x1E0C80A78](v21);
  v46[7] = (char *)v46 - v22;
  MEMORY[0x1E0C80A78](v23);
  v46[6] = (char *)v46 - v24;
  MEMORY[0x1E0C80A78](v25);
  v46[4] = (char *)v46 - v26;
  MEMORY[0x1E0C80A78](v27);
  v46[3] = (char *)v46 - v28;
  MEMORY[0x1E0C80A78](v29);
  v46[2] = (char *)v46 - v30;
  MEMORY[0x1E0C80A78](v31);
  v46[5] = (char *)v46 - v32;
  MEMORY[0x1E0C80A78](v33);
  v46[1] = (char *)v46 - v34;
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v46 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *v1;
  v43 = a1[3];
  v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  v44 = sub_1BA6B8518();
  v46[19] = v40;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTagBinding.Bool, v45, v43, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v42, (uint64_t)v40, v44, (uint64_t)&off_1E734BC80);
  __asm { BR              X9 }
}

uint64_t sub_1BA54B9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D18 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA54C3B4(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA54C3B4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEA04C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54C4D8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA54C4D8()
{
  unint64_t result;

  result = qword_1ED3A5B00;
  if (!qword_1ED3A5B00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9149AC, &_s14descr1E730BF49V4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B00);
  }
  return result;
}

uint64_t sub_1BA54C51C()
{
  sub_1BA54C5C4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA54C568()
{
  sub_1BA54C5C4();
  return sub_1BB872D60();
}

unint64_t sub_1BA54C5C4()
{
  unint64_t result;

  result = qword_1ED3B4248;
  if (!qword_1ED3B4248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB917784, &type metadata for FormatTextSize.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B4248);
  }
  return result;
}

uint64_t sub_1BA54C608(_QWORD *a1)
{
  return FormatComputedInvalidation.encode(to:)(a1);
}

uint64_t FormatComputedInvalidation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - v6;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v11 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 16);
  v14 = *(__int16 *)(v1 + 24);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BA6B8518();
  v34 = v10;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatComputedInvalidation, v18, v15, (uint64_t)&type metadata for FormatComputedInvalidation, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v16, (uint64_t)v10, v17, (uint64_t)&off_1E734BC80);
  if ((v14 & 0x80000000) != 0)
  {
    v24 = v33;
    sub_1BAE70D80(v12, v11, v13, v14, BYTE1(v14) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    v25 = v13;
    v26 = v14;
    if (qword_1ED3C6D78 != -1)
      swift_once();
    v27 = sub_1BB86EB84();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C68);
    v29 = (uint64_t)v24;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v30 = (uint64_t)v24;
    v31 = (uint64_t)v34;
    sub_1BACE465C(1, v12, v11, v25, v26 & 0x1FF, v30);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BA54C928(v12, v11, v25, v26);
  }
  else
  {
    v19 = qword_1ED3C6D18;
    swift_bridgeObjectRetain();
    if (v19 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476B60);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v7, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v22 = (uint64_t)v34;
    sub_1BA54C958(0, v12, (uint64_t)v7);
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
    sub_1BA54C928(v12, v11, v13, v14);
    return sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
}

uint64_t sub_1BA54C928(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0)
    return sub_1BAE70D80(a1, a2, a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1BA54C958(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4338;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54CADC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA54CADC()
{
  unint64_t result;

  result = qword_1ED3A7B50;
  if (!qword_1ED3A7B50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7FF0, &_s10CodingTypeON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B50);
  }
  return result;
}

uint64_t sub_1BA54CB20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionsNodeStatementBinding.init(from:)(a1, a2);
}

uint64_t FormatOptionsNodeStatementBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA54CFEC();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726D260;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA54CFEC()
{
  unint64_t result;

  result = qword_1ED3CDF78;
  if (!qword_1ED3CDF78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8828, &_s10CodingTypeON_54);
    atomic_store(result, (unint64_t *)&qword_1ED3CDF78);
  }
  return result;
}

_QWORD *initializeWithCopy for FeedGroupGroupingRules(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithTake for FormatLayoutValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void sub_1BA54D11C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA6BF9E8(319);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1BA54D1F0(_QWORD *a1)
{
  return FormatCustomFont.encode(to:)(a1);
}

uint64_t FormatCustomFont.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  __int128 v38;
  char v39;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v30 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  sub_1BAE789CC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)v1;
  v14 = *(_QWORD *)(v1 + 8);
  v15 = *(double *)(v1 + 16);
  v31 = *(_QWORD *)(v1 + 24);
  v32 = *(unsigned __int16 *)(v1 + 32);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAE788C4();
  v19 = sub_1BA4A2870(&qword_1EF2B25F0, (uint64_t (*)(uint64_t))sub_1BAE788C4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCustomFont, v20, v16, (uint64_t)&type metadata for FormatCustomFont, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v12, v19, (uint64_t)&off_1E734BD80);
  v21 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v35;
  sub_1BAD204C0(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    v26 = (uint64_t)v34;
    v24(v34, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2BFA0(1, 0, 0, v15, v26, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE54114, (uint64_t (*)(uint64_t))sub_1BAE78A44, &qword_1EF2B2608);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    v27 = (uint64_t)v33;
    v24(v33, v23, v22);
    swift_storeEnumTagMultiPayload();
    v28 = v32;
    if ((v32 & 0xFF00) != 0xC00 && (sub_1BAE54114(v27, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v38 = xmmword_1BB8D2D60;
      v39 = 0;
      v36 = v31;
      v37 = v28;
      sub_1BAE78A44();
      sub_1BA4A2870(&qword_1EF2B2608, (uint64_t (*)(uint64_t))sub_1BAE78A44, MEMORY[0x1E0DED188]);
      sub_1BA6745B0();
      sub_1BB874464();
    }
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE789CC);
}

uint64_t sub_1BA54D5F4(uint64_t a1, uint64_t *a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v6 + 296) = v5;
  *(double *)(v6 + 288) = a3;
  *(_QWORD *)(v6 + 272) = a1;
  *(_QWORD *)(v6 + 280) = a2;
  v7 = *v5;
  *(_QWORD *)(v6 + 304) = *v5;
  v8 = *a2;
  v9 = *(_QWORD *)(*a2 + 80);
  *(_QWORD *)(v6 + 312) = v9;
  v10 = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v6 + 320) = v10;
  v11 = type metadata accessor for FeedChosenEmitterResult(255, v9, v10, a5);
  *(_QWORD *)(v6 + 328) = v11;
  v12 = sub_1BB873A2C();
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  *(_QWORD *)(v6 + 336) = v12;
  *(_QWORD *)(v6 + 344) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 352) = swift_task_alloc();
  *(_QWORD *)(v6 + 360) = swift_task_alloc();
  *(_QWORD *)(v6 + 368) = swift_task_alloc();
  *(_QWORD *)(v6 + 376) = swift_task_alloc();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v13);
  *(_QWORD *)(v6 + 384) = swift_task_alloc();
  *(_QWORD *)(v6 + 392) = swift_task_alloc();
  v14 = sub_1BB873A2C();
  *(_QWORD *)(v6 + 400) = v14;
  *(_QWORD *)(v6 + 408) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 416) = swift_task_alloc();
  v15 = sub_1BB86C8B0();
  *(_QWORD *)(v6 + 424) = v15;
  *(_QWORD *)(v6 + 432) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v6 + 440) = swift_task_alloc();
  *(_QWORD *)(v6 + 448) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 456) = swift_task_alloc();
  *(_QWORD *)(v6 + 464) = *(_QWORD *)(v7 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 472) = swift_task_alloc();
  v17 = type metadata accessor for FeedCursorGroup(0, v9, v10, v16);
  *(_QWORD *)(v6 + 480) = v17;
  *(_QWORD *)(v6 + 488) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v6 + 496) = swift_task_alloc();
  *(_QWORD *)(v6 + 504) = swift_task_alloc();
  *(_QWORD *)(v6 + 512) = swift_task_alloc();
  *(_QWORD *)(v6 + 520) = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 528) = AssociatedTypeWitness;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v6 + 536) = v19;
  *(_QWORD *)(v6 + 544) = *(_QWORD *)(v19 + 64);
  *(_QWORD *)(v6 + 552) = swift_task_alloc();
  *(_QWORD *)(v6 + 560) = swift_task_alloc();
  *(_QWORD *)(v6 + 568) = swift_task_alloc();
  *(_QWORD *)(v6 + 576) = swift_task_alloc();
  v21 = type metadata accessor for FeedScoredResult(0, v9, v10, v20);
  *(_QWORD *)(v6 + 584) = v21;
  *(_QWORD *)(v6 + 592) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v6 + 600) = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 + 608) = AssociatedConformanceWitness;
  v24 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v23);
  *(_QWORD *)(v6 + 616) = v24;
  *(_QWORD *)(v6 + 624) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v6 + 632) = swift_task_alloc();
  *(_QWORD *)(v6 + 640) = swift_task_alloc();
  *(_QWORD *)(v6 + 648) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 656) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BA54DA0C()
{
  sub_1BA54DA68();
  return sub_1BB872D60();
}

unint64_t sub_1BA54DA68()
{
  unint64_t result;

  result = qword_1ED3B36A0;
  if (!qword_1ED3B36A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCorner, &type metadata for FormatCorner);
    atomic_store(result, (unint64_t *)&qword_1ED3B36A0);
  }
  return result;
}

uint64_t sub_1BA54DAAC(uint64_t *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  void (*v18)(uint64_t, uint64_t, double);
  Swift::Bool v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  void (*v68)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _OWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v91 = a1;
  v87 = a2;
  v88 = a3;
  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v84 = a4;
  v85 = v6;
  MEMORY[0x1E0C80A78](a1);
  v86 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v8[12];
  v89 = v8;
  v81 = v8[10];
  v82 = v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v77 - v14;
  v16 = *(_QWORD *)(v4 + 248);
  v17 = v91;
  v18 = *(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 48);
  v83 = (char *)v91 + v16;
  v18(v5, AssociatedConformanceWitness, v13);
  swift_getAssociatedConformanceWitness();
  v19 = FeedServiceContextType.canWriteToDatabase()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, AssociatedTypeWitness);
  if (!v19)
  {
    v27 = *(_QWORD *)(v90 + 16);
    v28 = sub_1BB87330C();
    sub_1BB86EF44("Feed database not converting deferred cursor because it's read-only", 67, 2, &dword_1BA493000, v27, v28, MEMORY[0x1E0DEE9D8]);
    type metadata accessor for FeedCursor(255, v5, AssociatedConformanceWitness, v29);
    sub_1BB86EAAC();
    v93 = (uint64_t)v17;
    swift_retain();
    return sub_1BB86E9D4();
  }
  v20 = (uint64_t)v88;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v96 != 2)
  {
    v22 = v92;
    v23 = v89;
    if ((v96 & 1) != 0)
    {
      sub_1BB86F064();
      sub_1BB86F22C();
      swift_release();
      v24 = v94;
      sub_1BA6E3730(v93, v94);
      if (v24 != 1)
        return sub_1BB0226E8(v17, v20, v84);
    }
    sub_1BA83DD30();
    v25 = sub_1BB86F208();
    v26 = sub_1BB86F358();
    swift_release();
    if (v22)
      return v25;
    v79 = AssociatedConformanceWitness;
    v80 = v5;
    v30 = v17;
    v31 = MEMORY[0x1E0DEE9D8];
    v93 = MEMORY[0x1E0DEE9D8];
    v32 = *(_QWORD *)(v26 + 16);
    if (v32)
    {
      swift_bridgeObjectRetain();
      v33 = 0;
      while (1)
      {
        swift_retain();
        sub_1BB86F064();
        sub_1BB86F22C();
        result = swift_release();
        if (!v96)
          break;
        ++v33;
        sub_1BB86F328();
        swift_release();
        v34 = v95;
        swift_release();
        if (v34)
          v35 = v34;
        else
          v35 = v31;
        sub_1BA6E9BD8(v35);
        if (v32 == v33)
        {
          swift_bridgeObjectRelease_n();
          v36 = v93;
          v23 = v89;
          goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v37 = sub_1BA6E43EC(v36);
    swift_bridgeObjectRelease();
    v38 = *(uint64_t *)((char *)v30 + qword_1ED4767D0);
    v39 = v23[13];
    v40 = v23[11];
    swift_getAssociatedTypeWitness();
    v87 = v39;
    v78 = v40;
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v41 = sub_1BB872754();
    v42 = v79;
    v43 = v80;
    v44 = static FeedCursorGroup.tags(from:excluding:)(v38, v41, v80, v79);
    swift_bridgeObjectRelease();
    v45 = sub_1BB01AC38(v44);
    v92 = 0;
    swift_bridgeObjectRelease();
    v46 = sub_1BA6E43EC(v45);
    swift_bridgeObjectRelease();
    v47 = v86;
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 152))(0, v37, v46, v43, v42);
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(v90 + 16);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1BB87A390;
    v50 = v88;
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    v51 = v94;
    if (!v94)
      goto LABEL_23;
    v52 = v93;
    *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v49 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v49 + 32) = v52;
    *(_QWORD *)(v49 + 40) = v51;
    v53 = *(_QWORD *)(v37 + 16);
    swift_bridgeObjectRelease();
    v54 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v49 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v49 + 104) = v54;
    *(_QWORD *)(v49 + 72) = v53;
    v55 = sub_1BB87330C();
    sub_1BB86EF44("Feed database convert creating %{public}@ cursor found %ld items to ignore in next pool", 87, 2, &dword_1BA493000, v48, v55, v49);
    swift_bridgeObjectRelease();
    v56 = swift_allocBox();
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v57, v47, v43);
    v93 = v56 | 0x1000000000000000;
    v58 = v84;
    v59 = *(_QWORD *)(v84 + 24);
    v60 = swift_allocObject();
    v61 = v89;
    v90 = v89[14];
    *(_QWORD *)(v60 + 16) = v90;
    v83 = (char *)v61[15];
    *(_QWORD *)(v60 + 24) = v83;
    v62 = v61[16];
    *(_QWORD *)(v60 + 32) = v62;
    v63 = v61[17];
    *(_QWORD *)(v60 + 40) = v63;
    v64 = v50[3];
    *(_OWORD *)(v60 + 80) = v50[2];
    *(_OWORD *)(v60 + 96) = v64;
    v65 = v50[5];
    *(_OWORD *)(v60 + 112) = v50[4];
    *(_OWORD *)(v60 + 128) = v65;
    v66 = v50[1];
    *(_OWORD *)(v60 + 48) = *v50;
    *(_OWORD *)(v60 + 64) = v66;
    *(_QWORD *)(v60 + 144) = v58;
    v67 = v82;
    v68 = *(void (**)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v82 + 40);
    sub_1BA4C9ACC((uint64_t)v50);
    swift_retain();
    v69 = v81;
    v68(&v93, v59, sub_1BA8382A4, v60, v81, v67);
    swift_release();
    swift_release();
    v70 = (_QWORD *)swift_allocObject();
    v71 = v78;
    v70[2] = v69;
    v70[3] = v71;
    v72 = v87;
    v70[4] = v67;
    v70[5] = v72;
    v73 = v83;
    v70[6] = v90;
    v70[7] = v73;
    v70[8] = v62;
    v70[9] = v63;
    v70[10] = v91;
    swift_retain();
    v74 = (void *)sub_1BB86E854();
    v75 = v80;
    type metadata accessor for FeedCursor(0, v80, v79, v76);
    v25 = sub_1BB86E974();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v75);
    return v25;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BA54E288@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatViewNodeStyle.Selector.init(from:)(a1, a2);
}

void sub_1BA54E29C(_QWORD *a1)
{
  FormatGroupBinding.Bool.encode(to:)(a1);
}

void FormatGroupBinding.Bool.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[10];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27[5] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27[4] = (char *)v27 - v6;
  MEMORY[0x1E0C80A78](v7);
  v27[2] = (char *)v27 - v8;
  MEMORY[0x1E0C80A78](v9);
  v27[3] = (char *)v27 - v10;
  MEMORY[0x1E0C80A78](v11);
  v27[1] = (char *)v27 - v12;
  MEMORY[0x1E0C80A78](v13);
  v27[0] = (char *)v27 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[6] = *(_QWORD *)v1;
  v21 = *(_BYTE *)(v1 + 8);
  v22 = *(_BYTE *)(v1 + 9);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BA6B8518();
  v27[9] = v20;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupBinding.Bool, v26, v23, (uint64_t)&type metadata for FormatGroupBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v24, (uint64_t)v20, v25, (uint64_t)&off_1E734BD00);
  __asm { BR              X10 }
}

uint64_t sub_1BA54E4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D30 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BACF67B8(0, *(_QWORD *)(v1 - 96), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA54EA2C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA54EBD4();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA54EB90()
{
  unint64_t result;

  result = qword_1ED3A6198;
  if (!qword_1ED3A6198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9948, &_s10CodingTypeON_96);
    atomic_store(result, (unint64_t *)&qword_1ED3A6198);
  }
  return result;
}

unint64_t sub_1BA54EBD4()
{
  unint64_t result;

  result = qword_1ED39B390;
  if (!qword_1ED39B390)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Bool, &type metadata for FormatTagBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39B390);
  }
  return result;
}

uint64_t sub_1BA54EC18()
{
  sub_1BA54ECC0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA54EC64()
{
  sub_1BA54ECC0();
  return sub_1BB872D60();
}

unint64_t sub_1BA54ECC0()
{
  unint64_t result;

  result = qword_1ED3C7248;
  if (!qword_1ED3C7248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5E38, &_s10CodingTypeON_124);
    atomic_store(result, (unint64_t *)&qword_1ED3C7248);
  }
  return result;
}

uint64_t sub_1BA54ED04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA54ED30 + 4 * byte_1BB8AEEC4[*v0]))(0x737569646172, 0xE600000000000000);
}

uint64_t sub_1BA54ED30()
{
  return 0x7974696361706FLL;
}

uint64_t sub_1BA54ED48()
{
  return 0x74657366666FLL;
}

uint64_t sub_1BA54ED58()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BA54ED6C()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_1BA54ED7C()
{
  return 1885433183;
}

uint64_t sub_1BA54ED8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 56))();
}

uint64_t sub_1BA54EDB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for FormatContent.Resolved() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BA54EDF4(v0 + v2, (_OWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1BA54EDF4(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v11;

  v4 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  type metadata accessor for FeedGroupDebugFormat();
  v7 = swift_allocObject();
  v8 = a2[3];
  *(_OWORD *)(v7 + 48) = a2[2];
  *(_OWORD *)(v7 + 64) = v8;
  *(_OWORD *)(v7 + 80) = a2[4];
  v9 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 96) = *(_QWORD *)&v6[*(int *)(v4 + 28)];
  sub_1BA5193C4((uint64_t)v6, v7 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA6C2898((uint64_t)a2);
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t type metadata accessor for FeedGroupDebugFormat()
{
  uint64_t result;

  result = qword_1ED3A0DA0;
  if (!qword_1ED3A0DA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA54EF20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColumnRowSpan.init(from:)(a1, a2);
}

uint64_t FormatColumnRowSpan.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  char v32;

  v3 = v2;
  v28 = a2;
  sub_1BAE89D28();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE89DA0();
  sub_1BA4A2870(&qword_1ED3D0DC0, (uint64_t (*)(uint64_t))sub_1BAE89DA0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v28 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v27 - 4) = (uint64_t)&_s10CodingKeysON_156;
      *(&v27 - 3) = sub_1BAE89E20();
      *(&v27 - 2) = sub_1BA54F27C();
      *(&v27 - 1) = sub_1BAE89E64();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726B0D8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v31 = 0uLL;
  v32 = 0;
  v18 = sub_1BB8740C8();
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  sub_1BA6550A8();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  v26 = v30;
  *(_QWORD *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  *(_BYTE *)(v12 + 16) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA54F27C()
{
  unint64_t result;

  result = qword_1ED3C81F0;
  if (!qword_1ED3C81F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC618, &_s10CodingKeysON_156);
    atomic_store(result, (unint64_t *)&qword_1ED3C81F0);
  }
  return result;
}

uint64_t sub_1BA54F2C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNodeAccessibilityRole.init(from:)(a1, a2);
}

uint64_t FormatNodeAccessibilityRole.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA54F688();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7269B00;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA54F564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA54F644();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(_BYTE *)(v4 - 104);
    v6 = *(_QWORD *)(v4 - 72);
    *(_QWORD *)v6 = *(_QWORD *)(v4 - 112);
    *(_BYTE *)(v6 + 8) = v5;
    JUMPOUT(0x1BA54F53CLL);
  }
  JUMPOUT(0x1BA54F44CLL);
}

void sub_1BA54F5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 72);
  *(_QWORD *)v4 = 1;
  *(_BYTE *)(v4 + 8) = 0x80;
  JUMPOUT(0x1BA54F53CLL);
}

void sub_1BA54F5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA54F644();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA54F630);
  }
  JUMPOUT(0x1BA54F44CLL);
}

unint64_t sub_1BA54F644()
{
  unint64_t result;

  result = qword_1ED3CC1F8;
  if (!qword_1ED3CC1F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole.Position, &type metadata for FormatNodeAccessibilityRole.Position);
    atomic_store(result, (unint64_t *)&qword_1ED3CC1F8);
  }
  return result;
}

unint64_t sub_1BA54F688()
{
  unint64_t result;

  result = qword_1ED3CC1F0;
  if (!qword_1ED3CC1F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE818, &_s10CodingTypeON_137);
    atomic_store(result, (unint64_t *)&qword_1ED3CC1F0);
  }
  return result;
}

uint64_t sub_1BA54F6CC(_QWORD *a1)
{
  return FormatCustomNodeStyle.encode(to:)(a1);
}

uint64_t FormatCustomNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t *v52;

  v3 = v2;
  v4 = v1;
  v6 = *v4;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v46 - v10;
  MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v46 - v12;
  MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v46 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v46 - v16;
  sub_1BA55068C(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BA539ACC();
  sub_1BA6EC1EC(v6, v24, v21, v6, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v22, (uint64_t)v20, v23, (uint64_t)&off_1E734BD00);
  swift_beginAccess();
  v25 = v4[2];
  v26 = v4[3];
  v52 = v4;
  v27 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C38);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v30(v17, v29, v28);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA54FE58(v25, v26, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
  if (v3)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v20;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v32 = v52;
    v33 = v52[4];
    v34 = v52[5];
    v47 = 0;
    v35 = (uint64_t)v51;
    v30(v51, v29, v28);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v36 = v47;
    sub_1BA54FBA4(v33, v34, 1, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v20;
    if (!v36)
    {
      v37 = *((_BYTE *)v32 + 48);
      if (qword_1ED3C6D20 != -1)
        swift_once();
      v38 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476B78);
      v39 = (uint64_t)v50;
      v30(v50, v38, v28);
      swift_storeEnumTagMultiPayload();
      sub_1BA5501A0(v37, 2, v39, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
      v40 = (uint64_t)v49;
      v30(v49, v29, v28);
      swift_storeEnumTagMultiPayload();
      v41 = swift_bridgeObjectRetain();
      sub_1BA550324(v41, 3, v40, (uint64_t)sub_1BA90CF04, 0);
      v42 = v40;
      v31 = (uint64_t)v20;
      sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v43 = (uint64_t)v48;
      v30(v48, v29, v28);
      swift_storeEnumTagMultiPayload();
      v44 = swift_bridgeObjectRetain();
      sub_1BA550010(v44, 4);
      sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
    }
  }
  return sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA55068C);
}

uint64_t sub_1BA54FBA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[7];
  char v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v19 = a3;
  sub_1BA55068C(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v14;
  v18[2] = a5;
  v18[3] = a6;
  v18[4] = sub_1BAEF8DCC;
  v18[5] = v16;
  swift_retain();
  sub_1BA54FCD0(a4, a3, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  if (!v7)
  {
    sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA55070C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA54FCD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA55068C(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA55070C();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEFDB54;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEF8DCC;
  v18[5] = v14;
  sub_1BA6EC658(a1, (uint64_t)sub_1BAEFCC04, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_1BA54FE58(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v20 = a5;
  v21 = a6;
  v22 = a4;
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  sub_1BB86C8BC();
  v14 = sub_1BB86C8E0();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  result = sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED39ED40, v10);
  if (v15 == 1)
  {
    MEMORY[0x1E0C80A78](result);
    v18 = v21;
    v17 = v22;
    *(&v19 - 2) = v20;
    *(&v19 - 1) = v18;
    result = sub_1BA5504FC(v17, a3, (uint64_t)sub_1BAEFCC00, (uint64_t)(&v19 - 4));
    if (!v6 && (result & 1) != 0)
    {
      v25 = a3;
      v23 = a1;
      v24 = a2;
      sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BA55070C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BA550010(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BA5504FC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BA55070C();
      sub_1BA4AD288(0, &qword_1ED3AAED0, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA550128();
      return sub_1BB874464();
    }
  }
  return result;
}

unint64_t sub_1BA550128()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAED8;
  if (!qword_1ED3AAED8)
  {
    sub_1BA4AD288(255, &qword_1ED3AAED0, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82B23C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAED8);
  }
  return result;
}

uint64_t sub_1BA5501A0(unsigned __int8 a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[7];
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v20 = a5;
  v21 = a3;
  v10 = a1;
  v23 = a2;
  sub_1BA55068C(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject();
  v16 = v15;
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v13;
  *(_QWORD *)(v15 + 32) = v14;
  if (v10 == 2)
  {
    swift_retain();
  }
  else
  {
    v22 = a1 & 1;
    MEMORY[0x1E0C80A78](v15);
    v19[2] = a4;
    v19[3] = v20;
    v19[4] = sub_1BAEF8DCC;
    v19[5] = v16;
    swift_retain();
    v17 = sub_1BA5504FC(v21, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v19);
    if (!v6 && (v17 & 1) != 0)
    {
      sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BA55070C();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BA550324(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;
  char v22;

  v20 = a3;
  v22 = a2;
  sub_1BA55068C(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject();
  v16 = v15;
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v13;
  *(_QWORD *)(v15 + 32) = v14;
  if (a1)
  {
    v21 = a1;
    MEMORY[0x1E0C80A78](v15);
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = sub_1BAEF8DCC;
    v19[5] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA5504FC(v20, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v19);
    if (!v6 && (v17 & 1) != 0)
    {
      sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BA55070C();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

uint64_t sub_1BA5504FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA55068C(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA55070C();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEF8DD8;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEF8DCC;
  v18[5] = v14;
  LOBYTE(v15) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15 & 1;
}

void sub_1BA55068C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9548)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BA55070C();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9548);
  }
}

unint64_t sub_1BA55070C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB690;
  if (!qword_1ED3AB690)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AB698, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB690);
  }
  return result;
}

uint64_t sub_1BA550774@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDecoration.init(from:)(a1, a2);
}

uint64_t FormatDecoration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(char *, _QWORD);
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  char v47;
  uint64_t v48;
  int v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (**v67)(char *, _QWORD);
  __int128 v68;
  char v69;
  __int128 v70;
  char v71;

  v66 = a2;
  sub_1BA6927D0();
  v65 = v3;
  v61 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  *(_QWORD *)&v63 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE8ED20();
  v64 = v9;
  v10 = *(void (***)(char *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8ED98();
  sub_1BA4A2870(&qword_1ED3D0C10, (uint64_t (*)(uint64_t))sub_1BAE8ED98, (uint64_t)&unk_1BB8FFC6C);
  v13 = v67;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    v33 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v33);
  }
  v59 = v6;
  v60 = v8;
  v15 = v63;
  v67 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1BB872874();
  v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v18 = v64;
  v19 = v65;
  v20 = v66;
  if ((v17 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v27 = v18;
      v29 = *((_QWORD *)v23 - 2);
      v28 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      *(&v48 - 4) = (uint64_t)&_s10CodingKeysON_145;
      *(&v48 - 3) = sub_1BAE8EE18();
      *(&v48 - 2) = sub_1BA551050();
      *(&v48 - 1) = sub_1BAE8EE5C();
      swift_getKeyPath();
      swift_retain();
      v31 = sub_1BAE71220((uint64_t)&unk_1E7250F30);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v32 = v29;
      *(_QWORD *)(v32 + 8) = v28;
      *(_QWORD *)(v32 + 16) = v31;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v29, v28, 1);
      v67[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v24 = sub_1BAE0F8F8((uint64_t)v12, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAE8ED20);
  v26 = v25;
  v58 = v24;
  v70 = xmmword_1BB8A1A10;
  v71 = 0;
  v56 = sub_1BB87402C();
  v57 = v35;
  v70 = xmmword_1BB8D2D60;
  v71 = 0;
  v54 = sub_1BB87402C();
  v55 = v36;
  v70 = xmmword_1BB8D2D70;
  v71 = 0;
  sub_1BA5510D8();
  sub_1BB8740D4();
  v53 = v26;
  v37 = v68;
  v51 = sub_1BAE0FC00();
  v52 = v37;
  v70 = xmmword_1BB8D2D80;
  v71 = 0;
  v38 = sub_1BB874050();
  v49 = v39;
  v50 = xmmword_1BB8D2DA0;
  v70 = xmmword_1BB8D2DA0;
  v71 = 0;
  v40 = sub_1BB8740F8();
  if ((v40 & 1) != 0)
  {
    v48 = v38;
    v68 = v50;
    v69 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v41 = v60;
    sub_1BB8740D4();
    *(_QWORD *)&v50 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v15);
    v42 = v52;
    v38 = v48;
  }
  else
  {
    *(_QWORD *)&v50 = MEMORY[0x1E0DEE9D8];
    v42 = v52;
  }
  v63 = xmmword_1BB8D2DB0;
  v70 = xmmword_1BB8D2DB0;
  v71 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v63;
    v69 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v43 = v62;
    sub_1BB8740D4();
    *(_QWORD *)&v63 = a1;
    v44 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v19);
    v42 = v52;
  }
  else
  {
    *(_QWORD *)&v63 = a1;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  v70 = xmmword_1BB8D2DD0;
  v71 = 0;
  sub_1BA551094();
  sub_1BB874068();
  v67[1](v12, v18);
  v45 = v68;
  v46 = WORD4(v68);
  v47 = BYTE10(v68);
  *(_QWORD *)v20 = v58;
  *(_QWORD *)(v20 + 8) = v53;
  *(_QWORD *)(v20 + 16) = v56;
  *(_QWORD *)(v20 + 24) = v57;
  *(_QWORD *)(v20 + 32) = v54;
  *(_QWORD *)(v20 + 40) = v55;
  *(_QWORD *)(v20 + 48) = v42;
  *(_QWORD *)(v20 + 56) = v51;
  *(_QWORD *)(v20 + 64) = v38;
  *(_BYTE *)(v20 + 72) = v49 & 1;
  *(_QWORD *)(v20 + 80) = v50;
  *(_QWORD *)(v20 + 88) = v44;
  *(_QWORD *)(v20 + 96) = v45;
  *(_BYTE *)(v20 + 106) = v47;
  *(_WORD *)(v20 + 104) = v46;
  v33 = v63;
  return __swift_destroy_boxed_opaque_existential_1(v33);
}

unint64_t sub_1BA551050()
{
  unint64_t result;

  result = qword_1ED3C7410;
  if (!qword_1ED3C7410)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBBC0, &_s10CodingKeysON_145);
    atomic_store(result, (unint64_t *)&qword_1ED3C7410);
  }
  return result;
}

unint64_t sub_1BA551094()
{
  unint64_t result;

  result = qword_1ED3BFD60[0];
  if (!qword_1ED3BFD60[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinTrait, &type metadata for FormatSupplementaryNodePinTrait);
    atomic_store(result, qword_1ED3BFD60);
  }
  return result;
}

unint64_t sub_1BA5510D8()
{
  unint64_t result;

  result = qword_1ED3B7128;
  if (!qword_1ED3B7128)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecorationContent, &type metadata for FormatDecorationContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7128);
  }
  return result;
}

uint64_t sub_1BA55111C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BA50CAA8(0, &qword_1ED3B9A28, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB428], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
    v3 = sub_1BB873C78();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 8 * v4);
      result = sub_1BB8745C0();
      v10 = result & v7;
      v11 = (result & (unint64_t)v7) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v7);
      v14 = *(_QWORD *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(_QWORD *)(v14 + 8 * v10) != v8)
        {
          v10 = (v10 + 1) & v7;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_QWORD *)(v14 + 8 * v10) = v8;
        v15 = *(_QWORD *)(v3 + 16);
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v17;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1BA551244()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED3B96E8;
  if (!qword_1ED3B96E8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B96E0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB428], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v2 = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B96E8);
  }
  return result;
}

uint64_t sub_1BA5512BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BB8729A0();
  v2 = v1;
  if (v0 == sub_1BB8729A0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BA551344()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x676E69646E6962;
}

NewsFeed::FormatOptionExpression::Exists::Operator_optional __swiftcall FormatOptionExpression.Exists.Operator.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatOptionExpression::Exists::Operator_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA5513F4(_QWORD *a1, uint64_t a2)
{
  return FormatObject.encode(to:)(a1, a2);
}

uint64_t sub_1BA551408(_QWORD *a1)
{
  return FormatSnippetNode.encode(to:)(a1);
}

uint64_t sub_1BA551428(_QWORD *a1)
{
  return FormatImageAdjustmentBlend.ColorData.encode(to:)(a1);
}

uint64_t FormatImageAdjustmentBlend.ColorData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[4];
  int v25;
  _BYTE *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v24[-v6];
  sub_1BAE994F4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)v1;
  v25 = *(unsigned __int8 *)(v1 + 8);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE993EC();
  v15 = sub_1BA4A2870(&qword_1ED3D1210, (uint64_t (*)(uint64_t))sub_1BAE993EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageAdjustmentBlend.ColorData, v16, v12, (uint64_t)&type metadata for FormatImageAdjustmentBlend.ColorData, v14, (uint64_t)&type metadata for FormatVersions.StarSkyC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BC40);
  v17 = qword_1ED3C6D70;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C50);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD103C0(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1051C(v25, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE994F4);
}

unint64_t sub_1BA5516DC()
{
  unint64_t result;

  result = qword_1ED39FA18;
  if (!qword_1ED39FA18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlendMode, &type metadata for FormatBlendMode);
    atomic_store(result, (unint64_t *)&qword_1ED39FA18);
  }
  return result;
}

uint64_t sub_1BA551720()
{
  sub_1BA55177C();
  return sub_1BB872D60();
}

unint64_t sub_1BA55177C()
{
  unint64_t result;

  result = qword_1ED3B60D0;
  if (!qword_1ED3B60D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponent, &type metadata for FormatColorComponent);
    atomic_store(result, (unint64_t *)&qword_1ED3B60D0);
  }
  return result;
}

uint64_t sub_1BA5517C0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatSupplementaryCollection.init(from:)(a1, a2);
}

uint64_t FormatSupplementaryCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  __int128 v7;
  _QWORD v8[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BA552080(0, (unint64_t *)&qword_1ED3B93F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA551908(&qword_1ED39BE38, &qword_1ED39B148, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA551998(v8[6], &v7);
    v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA551908(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA552080(255, (unint64_t *)&qword_1ED3B93F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))sub_1BA7B873C, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA551998@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[7];
  _BYTE v93[7];
  _QWORD *v94;
  _QWORD *v95;

  v85 = a2;
  sub_1BA552080(0, (unint64_t *)&unk_1ED3B3768, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v78 - v4;
  sub_1BA7B873C(0);
  v89 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v83 = (uint64_t)&v78 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v78 - v13);
  v95 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  sub_1BA5520D8();
  result = sub_1BB8727C0();
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v17 = a1;
    v18 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v19 = *(_QWORD *)(v7 + 72);
    v84 = v17;
    swift_bridgeObjectRetain();
    v87 = v5;
    v88 = v7;
    v90 = v19;
    while (1)
    {
      sub_1BA551F50(v18, (uint64_t)v14);
      v21 = v95;
      if (v95[2])
      {
        v22 = *v14;
        v23 = v14[1];
        swift_bridgeObjectRetain();
        v24 = sub_1BA6E35A8(v22, v23);
        if ((v25 & 1) != 0)
        {
          sub_1BA551F50(v21[7] + v24 * v90, (uint64_t)v5);
          v26 = 0;
        }
        else
        {
          v26 = 1;
        }
        v27 = v89;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v26, 1, v89);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v27) != 1)
        {
          swift_bridgeObjectRelease_n();
          v48 = v83;
          sub_1BA551FF0((uint64_t)v5, v83);
          type metadata accessor for FormatPackageError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2AC008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageError, (uint64_t)&unk_1BB8F5900);
          v86 = swift_allocError();
          v50 = v49;
          v51 = *v14;
          v52 = v14[1];
          v53 = v14[2];
          v54 = v14[5];
          v55 = v14[6];
          v56 = (uint64_t)v14;
          v57 = v14[7];
          v59 = *(_QWORD *)(v56 + 64);
          v58 = *(_QWORD *)(v56 + 72);
          v60 = *(_BYTE *)(v56 + 80);
          v61 = *(_QWORD *)(v56 + 96);
          v63 = *(_BYTE *)(v56 + 104);
          v65 = *(_QWORD *)v48;
          v64 = *(_QWORD *)(v48 + 8);
          v80 = *(_QWORD *)(v56 + 88);
          v62 = v80;
          v81 = v64;
          v66 = *(_QWORD *)(v48 + 16);
          v67 = *(_QWORD **)(v48 + 48);
          v82 = *(_QWORD *)(v48 + 40);
          v68 = v82;
          v84 = v61;
          v85 = v67;
          v69 = *(_QWORD *)(v48 + 64);
          v87 = *(char **)(v48 + 56);
          v70 = v87;
          v88 = v69;
          v71 = *(_QWORD *)(v48 + 72);
          v72 = *(_BYTE *)(v48 + 80);
          v73 = *(_QWORD *)(v48 + 96);
          v89 = *(_QWORD *)(v48 + 88);
          v74 = v89;
          v90 = v71;
          v91 = v73;
          v75 = *(_BYTE *)(v48 + 104);
          v79 = *(_OWORD *)(v56 + 24);
          v76 = v79;
          *(_QWORD *)(v50 + 40) = v54;
          *(_QWORD *)(v50 + 48) = v55;
          *(_QWORD *)(v50 + 56) = v57;
          *(_QWORD *)(v50 + 64) = v59;
          *(_QWORD *)(v50 + 72) = v58;
          *(_BYTE *)(v50 + 80) = v60;
          *(_DWORD *)(v50 + 81) = (_DWORD)v94;
          *(_DWORD *)(v50 + 84) = *(_DWORD *)((char *)&v94 + 3);
          *(_QWORD *)(v50 + 88) = v62;
          *(_QWORD *)(v50 + 96) = v61;
          *(_BYTE *)(v50 + 104) = v63;
          *(_DWORD *)(v50 + 105) = *(_DWORD *)v93;
          *(_DWORD *)(v50 + 108) = *(_DWORD *)&v93[3];
          *(_QWORD *)(v50 + 112) = v65;
          *(_QWORD *)(v50 + 120) = v64;
          *(_QWORD *)(v50 + 128) = v66;
          v78 = *(_OWORD *)(v48 + 24);
          v77 = v78;
          *(_QWORD *)v50 = v51;
          *(_QWORD *)(v50 + 8) = v52;
          *(_QWORD *)(v50 + 16) = v53;
          *(_OWORD *)(v50 + 24) = v76;
          *(_OWORD *)(v50 + 136) = v77;
          *(_QWORD *)(v50 + 152) = v68;
          *(_QWORD *)(v50 + 160) = v67;
          *(_QWORD *)(v50 + 168) = v70;
          *(_QWORD *)(v50 + 176) = v69;
          *(_QWORD *)(v50 + 184) = v71;
          *(_BYTE *)(v50 + 192) = v72;
          *(_DWORD *)(v50 + 193) = *(_DWORD *)v92;
          *(_DWORD *)(v50 + 196) = *(_DWORD *)&v92[3];
          *(_QWORD *)(v50 + 200) = v74;
          *(_QWORD *)(v50 + 208) = v73;
          *(_BYTE *)(v50 + 216) = v75;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA7B8700(v48);
          sub_1BA7B8700(v56);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v89);
      }
      v91 = v16;
      sub_1BA552034((uint64_t)v5);
      v28 = *v14;
      v29 = v14[1];
      v30 = (uint64_t)v14;
      v31 = (uint64_t)v9;
      sub_1BA551F50((uint64_t)v14, (uint64_t)v9);
      swift_bridgeObjectRetain();
      v32 = v95;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v94 = v32;
      v35 = sub_1BA6E35A8(v28, v29);
      v36 = v32[2];
      v37 = (v34 & 1) == 0;
      v38 = v36 + v37;
      if (__OFADD__(v36, v37))
        break;
      v39 = v34;
      if (v32[3] >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C23A4();
      }
      else
      {
        sub_1BB4AEAE8(v38, isUniquelyReferenced_nonNull_native);
        v40 = sub_1BA6E35A8(v28, v29);
        if ((v39 & 1) != (v41 & 1))
          goto LABEL_26;
        v35 = v40;
      }
      v9 = (char *)v31;
      v42 = v94;
      if ((v39 & 1) != 0)
      {
        v20 = v90;
        sub_1BB1EBBA0(v31, v94[7] + v35 * v90);
      }
      else
      {
        v94[(v35 >> 6) + 8] |= 1 << v35;
        v43 = (uint64_t *)(v42[6] + 16 * v35);
        *v43 = v28;
        v43[1] = v29;
        v20 = v90;
        sub_1BA551FF0(v31, v42[7] + v35 * v90);
        v44 = v42[2];
        v45 = __OFADD__(v44, 1);
        v46 = v44 + 1;
        if (v45)
          goto LABEL_25;
        v42[2] = v46;
        swift_bridgeObjectRetain();
      }
      v95 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)v30;
      sub_1BA7B8700(v30);
      v18 += v20;
      v16 = v91 - 1;
      v5 = v87;
      v7 = v88;
      if (v91 == 1)
      {
        a1 = v84;
        result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    v42 = v95;
LABEL_22:
    v47 = v85;
    *v85 = a1;
    v47[1] = v42;
  }
  return result;
}

uint64_t sub_1BA551F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7B873C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for FormatSupplementary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA551FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7B873C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA552034(uint64_t a1)
{
  uint64_t v2;

  sub_1BA552080(0, (unint64_t *)&unk_1ED3B3768, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA552080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA7B873C(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA5520D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C0298)
  {
    sub_1BA7B873C(255);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C0298);
  }
}

uint64_t sub_1BA55213C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWebEmbedNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatWebEmbedNodeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v25;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v16;
      *(_QWORD *)(v21 + 16) = &unk_1E726F748;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA552474();
  v24[0] = 0uLL;
  sub_1BB8740D4();
  v17 = v23;
  if ((v23 & 1) != 0)
  {
    v23 = xmmword_1BB87FC90;
    sub_1BA64437C();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = *(_QWORD *)&v24[0];
    v19 = *(_OWORD *)((char *)v24 + 8);
  }
  else
  {
    v24[0] = xmmword_1BB87FC90;
    sub_1BA5524B8();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = v23;
    v19 = 0uLL;
  }
  *(_QWORD *)v12 = v18;
  *(_OWORD *)(v12 + 8) = v19;
  *(_BYTE *)(v12 + 24) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA552474()
{
  unint64_t result;

  result = qword_1ED3CB288;
  if (!qword_1ED3CB288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3A58, &_s10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3CB288);
  }
  return result;
}

unint64_t sub_1BA5524B8()
{
  unint64_t result;

  result = qword_1ED3B6870;
  if (!qword_1ED3B6870)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL, &type metadata for FormatWebEmbedBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1ED3B6870);
  }
  return result;
}

uint64_t FormatText.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA552528(_QWORD *a1)
{
  return FormatTextNodeAlternative.encode(to:)(a1);
}

uint64_t FormatTextNodeAlternative.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v30 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  sub_1BAE73A30(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v13 = v1[1];
  v32 = v1[2];
  v30 = v1[3];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE73928();
  v18 = sub_1BA4A2870(&qword_1ED3D11D0, (uint64_t (*)(uint64_t))sub_1BAE73928, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeAlternative, v19, v15, (uint64_t)&type metadata for FormatTextNodeAlternative, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  v20 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = v34;
  sub_1BAD10D7C(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v25 = (uint64_t)v33;
    v23(v33, v22, v21);
    swift_storeEnumTagMultiPayload();
    v26 = v32;
    swift_retain();
    sub_1BAD10ED4(v26, 1, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v27 = (uint64_t)v31;
    v23(v31, v22, v21);
    swift_storeEnumTagMultiPayload();
    v28 = v30;
    swift_retain();
    sub_1BAD11030(v28, 2, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE73A30);
}

unint64_t sub_1BA55289C()
{
  unint64_t result;

  result = qword_1ED39BD08;
  if (!qword_1ED39BD08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1ED39BD08);
  }
  return result;
}

uint64_t sub_1BA5528E0(_QWORD *a1)
{
  return FormatUnderline.encode(to:)(a1);
}

uint64_t FormatUnderline.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  sub_1BAEC915C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v25 = *(_QWORD *)(v1 + 8);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAEC9054();
  v16 = sub_1BA4A2870(&qword_1ED3D1630, (uint64_t (*)(uint64_t))sub_1BAEC9054, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatUnderline, v17, v13, (uint64_t)&type metadata for FormatUnderline, v15, (uint64_t)&type metadata for FormatVersions.AzdenE, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BD20);
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476BC0);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD67BF0(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v22 = v25;
    sub_1BA5E7FF4(v25);
    sub_1BAD67DB8(v22, 1, 0, 0, v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v22);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAEC915C);
}

unint64_t sub_1BA552B94()
{
  unint64_t result;

  result = qword_1ED3A0158;
  if (!qword_1ED3A0158)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderlineStyle, &type metadata for FormatUnderlineStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3A0158);
  }
  return result;
}

uint64_t sub_1BA552BD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t *, double);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t *, double);
  _QWORD *v130;
  uint64_t *v131;
  _QWORD *v132;
  uint64_t v133;
  _QWORD v134[3];
  uint64_t v135;
  _UNKNOWN **v136;
  _QWORD v137[5];
  _QWORD v138[2];
  uint64_t v139;
  _UNKNOWN **v140;
  __int128 v141;
  uint64_t v142;
  _UNKNOWN **v143;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_1BA505288(0, &qword_1ED3D3B90);
  result = sub_1BB86DF48();
  if (!v142)
  {
    __break(1u);
    goto LABEL_30;
  }
  v133 = v4;
  v126 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v128 = sub_1BA505288(0, &qword_1ED3D39F8);
  result = sub_1BB86DF48();
  if (!v139)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v141, v142);
  v132 = &v109;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v138, v139);
  v131 = &v109;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = *v9;
  v17 = *v14;
  v18 = type metadata accessor for FormatImageRenderer();
  v137[3] = v18;
  v137[4] = &off_1E72E1F68;
  v137[0] = v16;
  v19 = type metadata accessor for FormatMicaRenderer();
  v135 = v19;
  v136 = &off_1E72EAE48;
  v134[0] = v17;
  type metadata accessor for FormatViewNodeRenderer();
  v20 = (_QWORD *)swift_allocObject();
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v137, v18);
  v22 = MEMORY[0x1E0C80A78](v21);
  v130 = (_QWORD *)v23;
  v24 = (uint64_t *)((char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v129 = *(void (**)(uint64_t *, double))(v25 + 16);
  v129(v24, v22);
  v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v134, v135);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (uint64_t *)((char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
  v31 = *v24;
  v32 = *v29;
  v20[5] = v18;
  v20[6] = &off_1E72E1F68;
  v20[7] = v32;
  v20[2] = v31;
  v127 = v19;
  v20[10] = v19;
  v20[11] = &off_1E72EAE48;
  v125 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v137);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v33 = sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  v34 = v141;
  if (!(_QWORD)v141)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v35 = *((_QWORD *)&v141 + 1);
  type metadata accessor for FormatTextNodeRenderer();
  v36 = (uint64_t *)swift_allocObject();
  v36[2] = v34;
  v36[3] = v35;
  type metadata accessor for FormatComputedContext();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v34;
  *(_QWORD *)(v37 + 24) = v35;
  v131 = v36;
  v36[4] = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unknownObjectRetain();
  result = sub_1BB86DF48();
  if (!v142)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v38 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v141, v142);
  v39 = MEMORY[0x1E0C80A78](v38);
  v41 = (uint64_t *)((char *)&v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v42 + 16))(v41, v39);
  v43 = *v41;
  v139 = v18;
  v140 = &off_1E72E1F68;
  v138[0] = v43;
  type metadata accessor for FormatImageNodeRenderer();
  v44 = (_QWORD *)swift_allocObject();
  v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v138, v18);
  v46 = MEMORY[0x1E0C80A78](v45);
  v48 = (uint64_t *)((char *)&v109 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v129(v48, v46);
  v49 = *v48;
  v44[5] = v18;
  v44[6] = &off_1E72E1F68;
  v130 = v44;
  v44[2] = v49;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF48();
  v50 = v138[0];
  if (!v138[0])
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v51 = v138[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v52 = sub_1BB86DC0C();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v53 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5F60);
  result = sub_1BB86DF48();
  if (!v142)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v132 = (_QWORD *)v52;
  type metadata accessor for FormatButtonNodeRenderer();
  v54 = (_QWORD *)swift_allocObject();
  v54[2] = v50;
  v54[3] = v51;
  v54[4] = v53;
  sub_1BA4CECCC(&v141, (uint64_t)(v54 + 5));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF48();
  v55 = v141;
  if (!(_QWORD)v141)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v56 = *((_QWORD *)&v141 + 1);
  type metadata accessor for FormatStateViewNodeRenderer();
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v55;
  *(_QWORD *)(v57 + 24) = v56;
  type metadata accessor for FormatCustomNodeRenderer();
  v58 = swift_allocObject();
  type metadata accessor for FormatGroupNodeRenderer();
  v59 = swift_allocObject();
  type metadata accessor for FormatWebEmbedNodeRenderer();
  v60 = (void (*)(uint64_t *, double))swift_allocObject();
  sub_1BA841704();
  swift_allocObject();
  v61 = sub_1BB86E56C();
  v129 = v60;
  *((_QWORD *)v60 + 2) = v61;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for WebEmbedManager();
  result = sub_1BB86DF3C();
  v124 = result;
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatAdMetricsNodeRenderer();
  result = sub_1BB86DF3C();
  v123 = result;
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v122 = v59;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF48();
  if (!v142)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v128 = v57;
  v133 = v33;
  v121 = v58;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatRunModeRunner();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v62 = result;
  v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v141, v142);
  v64 = MEMORY[0x1E0C80A78](v63);
  v66 = (uint64_t *)((char *)&v109 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v67 + 16))(v66, v64);
  v68 = *v66;
  v69 = v127;
  v139 = v127;
  v140 = &off_1E72EAE48;
  v138[0] = v68;
  type metadata accessor for FormatMicaNodeRenderer();
  v70 = (_QWORD *)swift_allocObject();
  v71 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v138, v69);
  v72 = MEMORY[0x1E0C80A78](v71);
  v74 = (uint64_t *)((char *)&v109 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v75 + 16))(v74, v72);
  v76 = *v74;
  v70[5] = v69;
  v70[6] = &off_1E72EAE48;
  v70[2] = v76;
  v127 = (uint64_t)v70;
  v70[7] = v62;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatLayeredMediaNodeRenderer();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v77 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatVideoNodeRenderer();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v78 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatIssueCoverNodeRenderer();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v79 = result;
  type metadata accessor for FormatGroupNodeMaskRenderer();
  v120 = swift_allocObject();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatShareAttributionNodeRenderer();
  result = sub_1BB86DF3C();
  v119 = result;
  if (!result)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ShareAttributionViewReuseManager();
  result = sub_1BB86DF3C();
  v118 = result;
  if (!result)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatVideoPlayerNodeRenderer();
  result = sub_1BB86DF3C();
  v117 = result;
  if (!result)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v115 = v79;
  v116 = v54;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatProgressViewNodeRenderer();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v80 = result;
  type metadata accessor for FormatPuzzleEmbedNodeRenderer();
  v114 = swift_allocObject();
  sub_1BA4C010C((uint64_t)a1, (uint64_t)&v141);
  type metadata accessor for FormatPuzzleEmbedViewControllerFactory();
  v81 = swift_allocObject();
  sub_1BA4CECCC(&v141, v81 + 16);
  *(_QWORD *)&v141 = v81;
  sub_1BA854984(0, (unint64_t *)&unk_1ED3C4988, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedViewControllerFactory, &qword_1ED3CEE50, (uint64_t)&unk_1BB889CD8);
  swift_allocObject();
  v113 = sub_1BB870204();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v82 = type metadata accessor for FormatSponsoredBannerNodeRenderer();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v142 = v82;
  v143 = &off_1E7273A80;
  *(_QWORD *)&v141 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  result = sub_1BB86DF3C();
  v112 = result;
  if (!result)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v111 = v78;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF48();
  v83 = v137[0];
  if (!v137[0])
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v133 = v137[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v84 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v85 = result;
  v132 = (_QWORD *)v80;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatLayoutResizingProvider();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v86 = result;
  v110 = v83;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatLayoutViewRouter();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v87 = result;
  v109 = v77;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86F508();
  result = sub_1BB86DF3C();
  if (result)
  {
    v88 = result;
    v89 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v141, v142);
    v90 = MEMORY[0x1E0C80A78](v89);
    v92 = (uint64_t *)((char *)&v109 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v93 + 16))(v92, v90);
    v94 = *v92;
    v139 = v82;
    v140 = &off_1E7273A80;
    v138[0] = v94;
    type metadata accessor for FormatLayoutViewRenderer();
    v95 = swift_allocObject();
    v96 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v138, v82);
    v97 = MEMORY[0x1E0C80A78](v96);
    v99 = (uint64_t *)((char *)&v109 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v100 + 16))(v99, v97);
    *(_QWORD *)&v108 = v86;
    *((_QWORD *)&v108 + 1) = v87;
    *((_QWORD *)&v107 + 1) = v110;
    *(_QWORD *)&v107 = v112;
    *((_QWORD *)&v106 + 1) = v118;
    *(_QWORD *)&v106 = v119;
    *((_QWORD *)&v105 + 1) = v120;
    *(_QWORD *)&v105 = v115;
    *((_QWORD *)&v104 + 1) = v109;
    *(_QWORD *)&v104 = v127;
    *((_QWORD *)&v103 + 1) = v123;
    *(_QWORD *)&v103 = v124;
    v101 = sub_1BA85340C((uint64_t)v125, (uint64_t)v131, (uint64_t)v130, (uint64_t)v116, v128, v121, v122, (uint64_t)v129, v103, v104, v111, v105, v106, v117, (uint64_t)v132, v114, v113, *v99, v107,
             v133,
             v84,
             v85,
             v108,
             v88,
             v95);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
    v102 = v126;
    *v126 = v101;
    v102[1] = (uint64_t)&protocol witness table for FormatLayoutViewRenderer;
    return result;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t destroy for FeedLayoutResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA553B58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSlotDefinition.init(from:)(a1, a2);
}

uint64_t FormatSlotDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  char v66;
  __int128 v67;
  char v68;

  v60 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v63 = (char *)&v50 - v4;
  sub_1BAEFBAC0(0, &qword_1ED3C4648, (void (*)(void))sub_1BA5737B0, (void (*)(void))sub_1BA55DA08);
  v61 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v50 - v7;
  sub_1BAEB8424();
  v62 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB849C();
  sub_1BA4A2870(&qword_1ED3D0F20, (uint64_t (*)(uint64_t))sub_1BAEB849C, (uint64_t)&unk_1BB8FFC6C);
  v13 = v64;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v64 = v8;
  v58 = v6;
  v59 = v10;
  v15 = v61;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1BB872874();
  v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v19 = v62;
  v18 = (uint64_t)v63;
  if ((v17 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v12;
      v28 = v19;
      v30 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v31 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v31);
      *(&v50 - 4) = (uint64_t)&_s10CodingKeysON_53;
      *(&v50 - 3) = sub_1BAEB851C();
      *(&v50 - 2) = sub_1BA5542B0();
      *(&v50 - 1) = sub_1BAEB8560();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E7251F98);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v30;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v30, v29, 1);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v28);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v67 = 0uLL;
  v68 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v57 = v23;
  v67 = xmmword_1BB8A1A10;
  v68 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v56 = v26;
  v67 = xmmword_1BB8D2D60;
  v68 = 0;
  v54 = sub_1BB874098();
  v55 = v36;
  sub_1BA4B07F0(0, &qword_1ED3C03D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v67 = xmmword_1BB8D2D70;
  v68 = 0;
  sub_1BA554384();
  sub_1BB8740D4();
  v53 = v35;
  v38 = v65;
  v52 = xmmword_1BB8D2D90;
  v67 = xmmword_1BB8D2D90;
  v68 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v51 = v38;
    v65 = v52;
    v66 = 0;
    sub_1BAE7669C();
    v40 = v64;
    sub_1BB8740D4();
    v41 = sub_1BB86DD08();
    v42 = v15;
    v43 = v41;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v42);
    v38 = v51;
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v67 = xmmword_1BB8D2D80;
  v68 = 0;
  sub_1BA5542F4();
  sub_1BB8740D4();
  v64 = v25;
  v44 = v65;
  sub_1BB86E710();
  v67 = xmmword_1BB8D2DA0;
  v68 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v19);
  v45 = type metadata accessor for FormatSlotDefinition();
  v46 = v60;
  sub_1BA646EFC(v18, (uint64_t)v60 + *(int *)(v45 + 40), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v47 = v64;
  *v46 = v57;
  v46[1] = (uint64_t)v47;
  v48 = v53;
  v46[2] = v56;
  v46[3] = v48;
  v49 = v55;
  v46[4] = v54;
  v46[5] = v49;
  v46[6] = v38;
  v46[7] = v43;
  v46[8] = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5542B0()
{
  unint64_t result;

  result = qword_1ED3C9160;
  if (!qword_1ED3C9160)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6B80, &_s10CodingKeysON_53);
    atomic_store(result, (unint64_t *)&qword_1ED3C9160);
  }
  return result;
}

unint64_t sub_1BA5542F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3B9588;
  if (!qword_1ED3B9588)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3B7880, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9588);
  }
  return result;
}

unint64_t sub_1BA554384()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3C03E0;
  if (!qword_1ED3C03E0)
  {
    sub_1BA4B07F0(255, &qword_1ED3C03D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(qword_1ED3BF8D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatSlotDefinitionItemSet);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3C03E0);
  }
  return result;
}

uint64_t sub_1BA554414(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1BA554458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for GroupLayoutContext();
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v9 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  v13 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for FeedBannerAd();
  v15 = v13 + *(int *)(v14 + 20);
  v16 = sub_1BB8721C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  if (*(_QWORD *)(v13 + *(int *)(v14 + 32) + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA5545C0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F7463656C6573;
}

uint64_t FeedGroupRegion.__deallocating_deinit()
{
  FeedGroupRegion.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedGroupRegion.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6A32E0(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA554698(v0 + 136);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA554698(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA5546F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCustomItem.Action.init(from:)(a1, a2);
}

uint64_t FormatCustomItem.Action.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v33 = a2;
  sub_1BA6C0E30(0);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v12 = (uint64_t)a1;
  if (!v2)
  {
    v29 = v6;
    v30 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v13 = sub_1BB872874();
    v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
    swift_bridgeObjectRelease();
    v15 = v33;
    v16 = v8;
    v17 = v11;
    if ((v14 & 1) != 0)
    {
      v18 = v33;
      v19 = sub_1BB8740EC();
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
      {
        v21 = (unint64_t *)(v19 + 40);
        while (1)
        {
          v22 = *v21;
          if (*v21 >= 4)
            break;
          v21 += 2;
          if (!--v20)
            goto LABEL_7;
        }
        v25 = *(v21 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        swift_allocError();
        *(_QWORD *)v26 = v25;
        *(_QWORD *)(v26 + 8) = v22;
        *(_QWORD *)(v26 + 16) = &unk_1E726FA38;
        *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v25, v22);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v16);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      v15 = v18;
    }
    sub_1BA5549E8();
    v32 = 0uLL;
    sub_1BB8740D4();
    v32 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED3B3468, (uint64_t (*)(uint64_t))sub_1BA6C0E30, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    v23 = v29;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v16);
    v24 = sub_1BB86C67C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v15, v23, v24);
LABEL_10:
    v12 = (uint64_t)a1;
  }
  return __swift_destroy_boxed_opaque_existential_1(v12);
}

unint64_t sub_1BA5549E8()
{
  unint64_t result;

  result = qword_1ED3A5938;
  if (!qword_1ED3A5938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7BB8, &_s6ActionO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5938);
  }
  return result;
}

uint64_t sub_1BA554A2C(_QWORD *a1)
{
  return FormatPackageRole.encode(to:)(a1);
}

uint64_t FormatPackageRole.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[7];
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[6] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[4] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[3] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v25[5] = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  v25[2] = (char *)v25 - v12;
  MEMORY[0x1E0C80A78](v13);
  v25[1] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  v26 = *v1;
  v27 = a1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = v28;
  sub_1BA69F160((uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, v19, v20);
  if (!v23)
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA555130()
{
  uint64_t v0;

  sub_1BB8729A0();
  sub_1BB8745CC();
  sub_1BB872A90();
  v0 = sub_1BB874608();
  swift_bridgeObjectRelease();
  return v0;
}

char *sub_1BA5551A0(_QWORD *a1)
{
  char *result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3B9838);
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9900);
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = (char *)sub_1BB86DF3C();
  if (result)
  {
    v5 = (uint64_t)result;
    v6 = objc_allocWithZone((Class)type metadata accessor for LikingCommandHandler());
    return sub_1BA4FC4D4(v3, v4, v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

char *sub_1BA5552C4(_QWORD *a1)
{
  char *result;
  char *v3;
  unsigned __int8 v4;
  uint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  char *v8;
  char *v9;
  char *v10;
  objc_super v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B97B0);
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, &qword_1ED3B0410);
  result = (char *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = objc_msgSend(result, sel_isPrivateDataSyncingEnabled);
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0980);
  result = (char *)sub_1BB86DF48();
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = (char *)sub_1BB86DF48();
  if (v12)
  {
    v5 = v13;
    v6 = (objc_class *)type metadata accessor for ClearSavedCommandHandler();
    v7 = objc_allocWithZone(v6);
    v8 = &v7[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_commandCenter];
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_commandCenter + 8] = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_readingList] = v3;
    v7[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_isiCloudPrivateDataSyncingEnabled] = v4;
    sub_1BA4C010C((uint64_t)v14, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_sceneProvider]);
    *((_QWORD *)v8 + 1) = v5;
    swift_unknownObjectWeakAssign();
    v11.receiver = v7;
    v11.super_class = v6;
    v9 = v3;
    v10 = (char *)objc_msgSendSuper2(&v11, sel_init);
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_readingList], sel_addObserver_, v10);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return v10;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA555508(_QWORD *a1)
{
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  objc_super v11;
  _BYTE v12[24];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (!v14)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0980);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    v6 = (objc_class *)type metadata accessor for BlockingCommandHandler();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_commandCenter + 8] = 0;
    v8 = swift_unknownObjectWeakInit();
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController] = v3;
    *(_QWORD *)(v8 + 8) = v4;
    swift_unknownObjectWeakAssign();
    sub_1BA4C010C((uint64_t)v12, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_sceneProvider]);
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_appConfigManager] = v5;
    v11.receiver = v7;
    v11.super_class = v6;
    v9 = v3;
    swift_unknownObjectRetain();
    v10 = (char *)objc_msgSendSuper2(&v11, sel_init);
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController], sel_addObserver_, v10);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return (uint64_t)v10;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA55573C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C48D8);
  result = sub_1BB86DF48();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3D2EB8);
    result = sub_1BB86DF48();
    if (v4)
    {
      type metadata accessor for LiveActivityCommandHandler();
      v3 = swift_allocObject();
      sub_1BA4CECCC(&v6, v3 + 16);
      *(_QWORD *)(v3 + 56) = v4;
      *(_QWORD *)(v3 + 64) = v5;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA555834(_QWORD *a1)
{
  uint64_t result;
  void *v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39D8);
  result = sub_1BB86DF48();
  if (!v16)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = (void *)result;
    v6 = (objc_class *)type metadata accessor for FollowingCommandHandler();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = &v7[OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_commandCenter];
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_commandCenter + 8] = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_subscriptionController] = v3;
    sub_1BA4C010C((uint64_t)v15, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager]);
    *((_QWORD *)v8 + 1) = v4;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_userInfo] = v5;
    v12.receiver = v7;
    v12.super_class = v6;
    v9 = v3;
    v10 = v5;
    v11 = (char *)objc_msgSendSuper2(&v12, sel_init);
    objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_subscriptionController], sel_addObserver_, v11);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (uint64_t)v11;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA555A6C(_QWORD *a1, void (*a2)(_QWORD))
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0980);
  result = sub_1BB86DF48();
  if (!v13)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3BA610);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3CCD80);
  result = sub_1BB86DF48();
  if (v9)
  {
    a2(0);
    v7 = swift_allocObject();
    sub_1BA4CECCC(&v12, v7 + 16);
    *(_QWORD *)(v7 + 56) = v5;
    *(_QWORD *)(v7 + 64) = v6;
    sub_1BA4CECCC(&v10, v7 + 72);
    sub_1BA4CECCC(&v8, v7 + 112);
    return v7;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA555C6C(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

_QWORD *sub_1BA555E70(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA555EA8(_QWORD *a1)
{
  return FormatBoolean.encode(to:)(a1);
}

uint64_t FormatBoolean.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[3];
  _BYTE v29[24];
  uint64_t v30;
  uint64_t v31;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  v9 = *(_QWORD *)v1;
  v10 = *(_QWORD *)(v1 + 8);
  v11 = *(_BYTE *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  if ((v11 & 1) != 0)
  {
    v12 = a1[3];
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v12);
    if (qword_1ED3C6D30 != -1)
      swift_once();
    v14 = sub_1BB86EB84();
    v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476B90);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v5, v15, v14);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v16 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1E0C80A78](v16);
    v28[-2] = v9;
    v28[-1] = v10;
    v17 = v31;
    sub_1BA69F160((uint64_t)v5, (uint64_t)sub_1BAA7F85C, (uint64_t)&v28[-4], v12, v13);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    if (!v17)
    {
      v28[1] = 0x286E6F6974706FLL;
      v28[2] = 0xE700000000000000;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v18);
      sub_1BB872AFC(v19);
      sub_1BA69C828(v9, v10, 1);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      sub_1BB8743E0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v20 = v9 & 1;
    v21 = a1[3];
    v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    if (qword_1ED3C6D30 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476B90);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v25 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1E0C80A78](v25);
    LOBYTE(v28[-2]) = v20;
    v26 = v31;
    sub_1BA69F160((uint64_t)v8, (uint64_t)sub_1BAA7F864, (uint64_t)&v28[-4], v21, v22);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    if (!v26)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
      sub_1BB8743EC();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

uint64_t sub_1BA556218()
{
  sub_1BA5562C0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA556264()
{
  sub_1BA5562C0();
  return sub_1BB872D60();
}

unint64_t sub_1BA5562C0()
{
  unint64_t result;

  result = qword_1ED3C6400;
  if (!qword_1ED3C6400)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0F70, &_s10CodingTypeON_172);
    atomic_store(result, (unint64_t *)&qword_1ED3C6400);
  }
  return result;
}

uint64_t sub_1BA556304(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA55631C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA55631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  uint64_t v20;
  uint64_t DynamicType;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  char *v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[4];
  uint64_t v51;
  uint64_t v52;

  v52 = a2;
  v44 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedTypeWitness();
  v6 = sub_1BB873A2C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v36 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v36 - v16;
  v46 = v18;
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16);
  v19((char *)&v36 - v16, a1, v5, v15);
  v20 = sub_1BB872EE0();
  sub_1BB872EB0();
  ((void (*)(char *, uint64_t, uint64_t))v19)(v13, a1, v5);
  sub_1BA4D9CE8(0, &qword_1ED3B1DF0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v36 = v20;
    v37 = (void (*)(char *, char *, uint64_t))v19;
    v38 = AssociatedTypeWitness;
    v39 = v10;
    v40 = a1;
    sub_1BA4CECCC(&v47, (uint64_t)v50);
    __swift_project_boxed_opaque_existential_1(v50, v50[3]);
    DynamicType = swift_getDynamicType();
    v22 = v51;
    v23 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    *((_QWORD *)&v48 + 1) = DynamicType;
    v49 = v51;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v47);
    v23(DynamicType, v22);
    v24 = v45;
    v25 = swift_dynamicCast();
    v26 = v46;
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    if ((v25 & 1) != 0)
    {
      v27(v24, 0, 1, v5);
      v28 = v39;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v39, v24, v5);
      v29 = *(_QWORD *)(v44 + 40);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1BB87CE70;
      swift_getAssociatedConformanceWitness();
      v31 = sub_1BB86DEE8();
      v33 = v32;
      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v30 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v30 + 32) = v31;
      *(_QWORD *)(v30 + 40) = v33;
      v34 = sub_1BB87330C();
      sub_1BB86EF44("Inserting ad after group=%{public}@", 35, 2, &dword_1BA493000, v29, v34, v30);
      swift_bridgeObjectRelease();
      v37(v17, v28, v5);
      sub_1BB872EB0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    }
    else
    {
      v27(v24, 1, 1, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v24, v42);
    }
  }
  else
  {
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
    return sub_1BA65DBBC((uint64_t)&v47, &qword_1EF2AFE38, &qword_1ED3B1DF0, (uint64_t)&protocol descriptor for FeedGroupAdInsertable);
  }
}

uint64_t FeedService.init(feed:cursorFactory:personalizationService:offlineProvider:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v20[4];
  char v21;

  v5 = v4;
  v7 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)a1;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 48) = v9;
  *(_BYTE *)(v5 + 56) = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v20[0] = v7;
  v20[1] = v6;
  v20[2] = (uint64_t)v8;
  v20[3] = (uint64_t)v9;
  v21 = v10;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v9;
  *(_QWORD *)(v5 + 16) = FeedServiceState.__allocating_init(feed:)(v20);
  *(_QWORD *)(v5 + 104) = a2;
  sub_1BA4CECCC(a3, v5 + 64);
  sub_1BA4CECCC(a4, v5 + 112);
  return v5;
}

uint64_t sub_1BA556894(_QWORD *a1)
{
  return PuzzleTypeStats.encode(to:)(a1);
}

uint64_t PuzzleTypeStats.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char v32;
  uint64_t v33;

  sub_1BA4CDF6C(0, &qword_1ED3A30E8, (uint64_t (*)(void))sub_1BA557208, (uint64_t)&type metadata for PuzzleTypeStats.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  v10 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA557208();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v11 = v7;
  v30 = a2;
  sub_1BA557368();
  v32 = 0;
  sub_1BA5574D4();
  v12 = v6;
  sub_1BB8740D4();
  v13 = v33;
  v32 = 1;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v14 = v33;
  sub_1BA5571BC(0, &qword_1ED3A2E90);
  v32 = 2;
  v15 = sub_1BA5572E8((unint64_t *)&unk_1ED3A2EA0, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEB448], MEMORY[0x1E0DEA0D8]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v28 = v15;
  v29 = v14;
  v16 = v33;
  sub_1BA5571BC(0, &qword_1ED3A2E40);
  v32 = 3;
  sub_1BA5573CC(&qword_1ED3A2E58, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEA0D8]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v27 = v16;
  v18 = v33;
  v32 = 4;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v28 = v18;
  v19 = v33;
  sub_1BA4B07F0(0, &qword_1ED3A2F30, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v32 = 5;
  sub_1BA55724C(&qword_1ED3A2F40, &qword_1ED3A29A8, (uint64_t)&protocol conformance descriptor for PuzzleStreak, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v12);
  v20 = v33;
  swift_bridgeObjectRetain();
  v21 = v19;
  v22 = v29;
  swift_bridgeObjectRetain();
  v23 = v27;
  swift_bridgeObjectRetain();
  v24 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v30;
  v25 = (uint64_t)v31;
  *v30 = v13;
  v26[1] = v22;
  v26[2] = v23;
  v26[3] = v24;
  v26[4] = v21;
  v26[5] = v20;
  __swift_destroy_boxed_opaque_existential_1(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PuzzleTypeStats.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  sub_1BA4CDF6C(0, &qword_1ED3A31A0, (uint64_t (*)(void))sub_1BA557208, (uint64_t)&type metadata for PuzzleTypeStats.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v9 = *v1;
  v8 = v1[1];
  v19 = v1[2];
  v20 = v8;
  v10 = v1[3];
  v17 = v1[4];
  v18 = v10;
  v16 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA557208();
  sub_1BB8746C8();
  v23 = v9;
  v22 = 0;
  sub_1BA557368();
  sub_1BA55744C();
  v11 = v21;
  sub_1BB8741AC();
  if (!v11)
  {
    v13 = v18;
    v12 = v19;
    v23 = v20;
    v22 = 1;
    sub_1BB8741AC();
    v23 = v12;
    v22 = 2;
    sub_1BA5571BC(0, &qword_1ED3A2E90);
    sub_1BA5572E8(&qword_1ED3A2E98, MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEB420], MEMORY[0x1E0DEA0B8]);
    sub_1BB8741AC();
    v23 = v13;
    v22 = 3;
    sub_1BA5571BC(0, &qword_1ED3A2E40);
    sub_1BA5573CC((unint64_t *)&unk_1ED3A2E48, MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEA0B8]);
    sub_1BB8741AC();
    v23 = v17;
    v22 = 4;
    sub_1BB8741AC();
    v23 = v16;
    v22 = 5;
    sub_1BA4B07F0(0, &qword_1ED3A2F30, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA55724C(&qword_1ED3A2F38, &qword_1ED3A29A0, (uint64_t)&protocol conformance descriptor for PuzzleStreak, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BA5571BC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB872814();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BA557208()
{
  unint64_t result;

  result = qword_1ED3A29B8;
  if (!qword_1ED3A29B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89130C, &type metadata for PuzzleTypeStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A29B8);
  }
  return result;
}

uint64_t sub_1BA55724C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED3A2F30, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA50AD30(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA5572E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    sub_1BA5571BC(255, &qword_1ED3A2E90);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1BCCE5B24](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA557368()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2E60)
  {
    sub_1BA6BCC84();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2E60);
  }
}

uint64_t sub_1BA5573CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    sub_1BA5571BC(255, &qword_1ED3A2E40);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1BCCE5B24](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA55744C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED3A2E70;
  if (!qword_1ED3A2E70)
  {
    sub_1BA557368();
    v2 = v1;
    v3 = sub_1BA637DF8((unint64_t *)&qword_1ED39BFB0, (uint64_t (*)(uint64_t))sub_1BA6BCC84, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    v4[0] = MEMORY[0x1E0DEDC68];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED3A2E70);
  }
  return result;
}

unint64_t sub_1BA5574D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED3A2E80;
  if (!qword_1ED3A2E80)
  {
    sub_1BA557368();
    v2 = v1;
    v3 = sub_1BA637DF8((unint64_t *)&qword_1ED3B96D0, (uint64_t (*)(uint64_t))sub_1BA6BCC84, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    v4[0] = MEMORY[0x1E0DEDC90];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED3A2E80);
  }
  return result;
}

uint64_t sub_1BA55755C(_QWORD *a1)
{
  return FormatSystemColor.encode(to:)(a1);
}

uint64_t sub_1BA557570(_QWORD *a1)
{
  return FormatBundleImage.encode(to:)(a1);
}

uint64_t FormatBundleImage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v39 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v42 = &v35[-v6];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v35[-v8];
  sub_1BAE7C4EC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v15 = *(_QWORD *)(v1 + 24);
  v40 = *(_QWORD *)(v1 + 16);
  v41 = v15;
  v16 = *(_QWORD *)(v1 + 32);
  v37 = *(_QWORD *)(v1 + 40);
  v38 = v16;
  v36 = *(unsigned __int8 *)(v1 + 48);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE7C3E4();
  v20 = sub_1BA4A2870(&qword_1ED3D0C90, (uint64_t (*)(uint64_t))sub_1BAE7C3E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBundleImage, v21, v17, (uint64_t)&type metadata for FormatBundleImage, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v12, v20, (uint64_t)&off_1E734BD80);
  v22 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v9, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v43;
  sub_1BAD1F2C0(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v27 = (uint64_t)v42;
    v25(v42, v24, v23);
    swift_storeEnumTagMultiPayload();
    v28 = v41;
    swift_bridgeObjectRetain();
    sub_1BAD646C4(v40, v28, 1, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v30 = v37;
    v29 = v38;
    v31 = v36;
    sub_1BA76F5C4(v38, v37, v36);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C38);
    v33 = (uint64_t)v39;
    v25(v39, v32, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BAD648CC(v29, v30, v31, 2, 0, 0, v33, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    sub_1BA76F520(v29, v30, v31);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE7C4EC);
}

uint64_t sub_1BA55794C(_QWORD *a1)
{
  return FormatGroupBindExpression.encode(to:)(a1);
}

uint64_t FormatGroupBindExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - v6;
  sub_1BAE9518C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v12 = v1[1];
  v27[1] = v1[2];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE95084();
  v16 = sub_1BA4A2870(&qword_1ED3D11B0, (uint64_t (*)(uint64_t))sub_1BAE95084, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupBindExpression, v17, v13, (uint64_t)&type metadata for FormatGroupBindExpression, v15, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD00);
  v18 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v29;
  sub_1BAD265E8(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE45AC4, (uint64_t (*)(uint64_t))sub_1BAE95204, &qword_1ED3AEDF0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = (uint64_t)v28;
    v21(v28, v20, v19);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE45AC4(v23, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v30 = xmmword_1BB8A1A10;
      v31 = 0;
      v24 = swift_bridgeObjectRetain();
      v25 = sub_1BA557D80(v24);
      swift_bridgeObjectRelease();
      v32 = v25;
      swift_retain();
      sub_1BA67FABC(&v32, sub_1BA684BC0, (uint64_t (*)(_QWORD *))sub_1BA684BE8);
      swift_release();
      sub_1BAE95204();
      sub_1BA4A2870(&qword_1ED3AEDF0, (uint64_t (*)(uint64_t))sub_1BAE95204, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3A0870, (uint64_t)&type metadata for FormatGroupItemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA557D94();
      sub_1BB874464();
      swift_release();
    }
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE9518C);
}

unint64_t sub_1BA557D3C()
{
  unint64_t result;

  result = qword_1ED3CB208;
  if (!qword_1ED3CB208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CACC0, &_s10CodingKeysON_125);
    atomic_store(result, (unint64_t *)&qword_1ED3CB208);
  }
  return result;
}

uint64_t sub_1BA557D80(uint64_t a1)
{
  return sub_1BA6744D8(a1, &qword_1ED3A0A10, (uint64_t)&type metadata for FormatGroupItemKind);
}

unint64_t sub_1BA557D94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0878;
  if (!qword_1ED3A0878)
  {
    sub_1BA4AD288(255, &qword_1ED3A0870, (uint64_t)&type metadata for FormatGroupItemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82EF44();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0878);
  }
  return result;
}

uint64_t sub_1BA557E0C(_QWORD *a1)
{
  return FormatQueryValue.encode(to:)(a1);
}

uint64_t FormatQueryValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatQueryValue, v13, v10, (uint64_t)&type metadata for FormatQueryValue, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v11, (uint64_t)v8, v12, (uint64_t)&off_1E734BD00);
  v14 = *(_QWORD *)(v9 + 16);
  v15 = *(_QWORD *)(v9 + 24);
  v16 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA557FE8(v14, v15, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA557FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a2;
  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v3 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  v13[2] = sub_1BAEF796C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v4 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA558164();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA558164()
{
  unint64_t result;

  result = qword_1ED3A5AC0;
  if (!qword_1ED3A5AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B40A0, &_s10CodingTypeON_147);
    atomic_store(result, (unint64_t *)&qword_1ED3A5AC0);
  }
  return result;
}

uint64_t sub_1BA5581A8(_QWORD *a1)
{
  return FormatAdMetricsNodeBinding.encode(to:)(a1);
}

uint64_t FormatAdMetricsNodeBinding.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAdMetricsNodeBinding, v11, v8, (uint64_t)&type metadata for FormatAdMetricsNodeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v9, (uint64_t)v7, v10, (uint64_t)&off_1E734BC80);
  if (qword_1ED3C6D18 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476B60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA558358((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA558358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF6C38;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55846C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA55846C()
{
  unint64_t result;

  result = qword_1ED3A7B18;
  if (!qword_1ED3A7B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B52F8, &_s10CodingTypeON_130);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B18);
  }
  return result;
}

void sub_1BA5584B0(_QWORD *a1)
{
  FormatTagBinding.Text.encode(to:)(a1);
}

void FormatTagBinding.Text.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD v54[24];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v54[19] = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v54[18] = (char *)v54 - v6;
  MEMORY[0x1E0C80A78](v7);
  v54[17] = (char *)v54 - v8;
  MEMORY[0x1E0C80A78](v9);
  v54[16] = (char *)v54 - v10;
  MEMORY[0x1E0C80A78](v11);
  v54[15] = (char *)v54 - v12;
  MEMORY[0x1E0C80A78](v13);
  v54[14] = (char *)v54 - v14;
  MEMORY[0x1E0C80A78](v15);
  v54[13] = (char *)v54 - v16;
  MEMORY[0x1E0C80A78](v17);
  v54[12] = (char *)v54 - v18;
  MEMORY[0x1E0C80A78](v19);
  v54[11] = (char *)v54 - v20;
  MEMORY[0x1E0C80A78](v21);
  v54[10] = (char *)v54 - v22;
  MEMORY[0x1E0C80A78](v23);
  v54[9] = (char *)v54 - v24;
  MEMORY[0x1E0C80A78](v25);
  v54[7] = (char *)v54 - v26;
  MEMORY[0x1E0C80A78](v27);
  v54[6] = (char *)v54 - v28;
  MEMORY[0x1E0C80A78](v29);
  v54[5] = (char *)v54 - v30;
  MEMORY[0x1E0C80A78](v31);
  v54[4] = (char *)v54 - v32;
  MEMORY[0x1E0C80A78](v33);
  v54[3] = (char *)v54 - v34;
  MEMORY[0x1E0C80A78](v35);
  v54[2] = (char *)v54 - v36;
  MEMORY[0x1E0C80A78](v37);
  v54[1] = (char *)v54 - v38;
  MEMORY[0x1E0C80A78](v39);
  v54[8] = (char *)v54 - v40;
  MEMORY[0x1E0C80A78](v41);
  v54[0] = (char *)v54 - v42;
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)v54 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *v1;
  v51 = a1[3];
  v50 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v51);
  v52 = sub_1BA6B8518();
  v54[23] = v48;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTagBinding.Text, v53, v51, (uint64_t)&type metadata for FormatTagBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v50, (uint64_t)v48, v52, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA558884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA559460(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA559460(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE9EF8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA559584();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA559584()
{
  unint64_t result;

  result = qword_1ED3A5B18;
  if (!qword_1ED3A5B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB925804, &_s14descr1E731D319V4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B18);
  }
  return result;
}

uint64_t sub_1BA5595C8(_QWORD *a1)
{
  return FormatFloat.encode(to:)(a1);
}

uint64_t sub_1BA5595DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA5595F8(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BA5595F8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2[10] + 16);
  result = v6 + 3;
  if (__OFADD__(v6, 3))
  {
    __break(1u);
  }
  else
  {
    sub_1BB86D6A8();
    v28 = a1;
    swift_getKeyPath();
    v11 = *a2;
    v12 = a2[1];
    v24 = MEMORY[0x1E0DEA968];
    v25 = MEMORY[0x1E0DB64C8];
    v22 = v11;
    v23 = v12;
    sub_1BA735094();
    sub_1BA735138();
    sub_1BA55983C();
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    v28 = a1;
    swift_getKeyPath();
    v14 = *a2;
    v13 = a2[1];
    v24 = MEMORY[0x1E0DEA968];
    v25 = MEMORY[0x1E0DB64C8];
    v22 = v14;
    v23 = v13;
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    v28 = a1;
    swift_getKeyPath();
    v16 = *a2;
    v15 = a2[1];
    v24 = MEMORY[0x1E0DEA968];
    v25 = MEMORY[0x1E0DB64C8];
    v22 = v16;
    v23 = v15;
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    v17 = a2[10];
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      for (i = 32; ; i += 40)
      {
        v20 = *(_OWORD *)(v17 + i);
        v21 = *(_OWORD *)(v17 + i + 16);
        v27 = *(_QWORD *)(v17 + i + 32);
        v26[0] = v20;
        v26[1] = v21;
        sub_1BA7086BC((uint64_t)v26);
        sub_1BA733DB8(a1, a3, a4);
        if (v4)
          break;
        sub_1BA708680((uint64_t)v26);
        if (!--v18)
          return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return sub_1BA708680((uint64_t)v26);
    }
  }
  return result;
}

unint64_t sub_1BA55983C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B05F8;
  if (!qword_1ED3B05F8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B0600, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB64C8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B05F8);
  }
  return result;
}

uint64_t FeedDatabase.save(snapshot:)(char *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;

  v54 = a1;
  v2 = *(_QWORD *)(*v1 + 96);
  v50 = *v1;
  v3 = *(_QWORD *)(v50 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v51 = v2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for FeedCursorTrackerSnapshot(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v52 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v45 - v8;
  v9 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v45 - v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v16 = v54;
  swift_getAssociatedConformanceWitness();
  result = FeedServiceContextType.canWriteToDatabase()();
  if ((result & 1) != 0)
  {
    v18 = v10;
    v47 = v3;
    v48 = v12;
    v19 = v52;
    v20 = v53;
    v46 = sub_1BA6B2CB8();
    sub_1BA49C548();
    v21 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v7))
    {
      v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v15, v9);
      v23 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24 = MEMORY[0x1E0DEE9E8];
    }
    else
    {
      v23 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v25 = v49;
      v23(v49, v15, v7);
      v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v15, v9);
      v24 = *(_QWORD *)&v25[*(int *)(v7 + 36)];
      v26 = v16;
      v27 = *(void (**)(char *, uint64_t))(v19 + 8);
      swift_bridgeObjectRetain();
      v28 = v25;
      v20 = v53;
      v27(v28, v7);
      v16 = v26;
      v21 = v7;
    }
    v29 = (uint64_t)v48;
    v23(v48, v16, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v29, 0, 1, v21);
    sub_1BA5334C4(v29);
    v22((char *)v29, v9);
    v30 = *(_QWORD *)&v16[*(int *)(v21 + 36)];
    if (*(_QWORD *)(v24 + 16) <= *(_QWORD *)(v30 + 16) >> 3)
    {
      v55 = *(_QWORD *)&v16[*(int *)(v21 + 36)];
      swift_bridgeObjectRetain();
      sub_1BB024F00(v24);
      swift_bridgeObjectRelease();
      v31 = v55;
    }
    else
    {
      swift_bridgeObjectRetain();
      v31 = sub_1BA4BDEF4(v24, v30);
      swift_bridgeObjectRelease();
    }
    v34 = v50;
    v35 = v51;
    v36 = v47;
    v37 = sub_1BA4AE99C(v31, v21, v32, v33);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v37 + 16))
    {
      v38 = *(_QWORD *)(v20 + 16);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1BB87CE70;
      v40 = MEMORY[0x1BCCE36DC](v37, &type metadata for FeedGroupTrackerEntity);
      v42 = v41;
      *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v39 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v39 + 32) = v40;
      *(_QWORD *)(v39 + 40) = v42;
      v43 = sub_1BB87330C();
      sub_1BB86EF44("Feed database will update group tracker state for %{public}@ entities", 69, 2, &dword_1BA493000, v38, v43, v39);
      swift_bridgeObjectRelease();
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = v36;
      *(_QWORD *)(v44 + 24) = *(_QWORD *)(v34 + 88);
      *(_QWORD *)(v44 + 32) = v35;
      *(_QWORD *)(v44 + 40) = *(_QWORD *)(v34 + 104);
      *(_QWORD *)(v44 + 48) = *(_QWORD *)(v34 + 112);
      *(_OWORD *)(v44 + 56) = *(_OWORD *)(v34 + 120);
      *(_QWORD *)(v44 + 72) = *(_QWORD *)(v34 + 136);
      *(_QWORD *)(v44 + 80) = v37;
      *(_QWORD *)(v44 + 88) = v46;
      swift_retain();
      sub_1BA6B2D10((uint64_t)sub_1BB025D2C, v44);
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BA559DB4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA559F04(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA55A020(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  size_t v28;
  uint64_t isStackAllocationSafe;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t i;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned __int8 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t result;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  void *v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  char v186;
  uint64_t v187;

  v2 = v1;
  v161 = a1;
  v162 = 0;
  v187 = *MEMORY[0x1E0C80C00];
  v136 = *v1;
  swift_beginAccess();
  v3 = v1[6];
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = sub_1BA7AFA90(0, v4, 0, MEMORY[0x1E0DEE9D8]);
  v152 = sub_1BA4A1468(0, v4, 0, v5);
  v154 = *(_QWORD *)(v3 + 16);
  v155 = v3;
  if (!v154)
  {
LABEL_31:
    sub_1BA8233D0(0);
    v62 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v62 + 16);
    if (v63)
    {
      v64 = v63 - 1;
      for (i = 32; ; i += 192)
      {
        v66 = *(_OWORD *)(v62 + i);
        v67 = *(_OWORD *)(v62 + i + 16);
        v68 = *(_OWORD *)(v62 + i + 48);
        v165 = *(_OWORD *)(v62 + i + 32);
        v166 = v68;
        v163 = v66;
        v164 = v67;
        v69 = *(_OWORD *)(v62 + i + 64);
        v70 = *(_OWORD *)(v62 + i + 80);
        v71 = *(_OWORD *)(v62 + i + 112);
        v169 = *(_OWORD *)(v62 + i + 96);
        v170 = v71;
        v168 = v70;
        v167 = v69;
        v72 = *(_OWORD *)(v62 + i + 128);
        v73 = *(_OWORD *)(v62 + i + 144);
        v74 = *(_OWORD *)(v62 + i + 176);
        v173 = *(_OWORD *)(v62 + i + 160);
        v174 = v74;
        v171 = v72;
        v172 = v73;
        sub_1BAC68298((uint64_t)&v163);
        v76 = v6[2];
        v75 = v6[3];
        if (v76 >= v75 >> 1)
          v6 = sub_1BA7AFA90((_QWORD *)(v75 > 1), v76 + 1, 1, v6);
        v6[2] = v76 + 1;
        v77 = &v6[23 * v76];
        v78 = v163;
        v79 = v164;
        v80 = v166;
        *((_OWORD *)v77 + 4) = v165;
        *((_OWORD *)v77 + 5) = v80;
        *((_OWORD *)v77 + 2) = v78;
        *((_OWORD *)v77 + 3) = v79;
        v81 = v167;
        v82 = v168;
        v83 = v170;
        *((_OWORD *)v77 + 8) = v169;
        *((_OWORD *)v77 + 9) = v83;
        *((_OWORD *)v77 + 6) = v81;
        *((_OWORD *)v77 + 7) = v82;
        v84 = v171;
        v85 = v172;
        v86 = v173;
        *((_BYTE *)v77 + 208) = v174;
        *((_OWORD *)v77 + 11) = v85;
        *((_OWORD *)v77 + 12) = v86;
        *((_OWORD *)v77 + 10) = v84;
        if (!v64)
          break;
        --v64;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v87 = v6[2];
    if (v87)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v137 = v6;
      v88 = v6 + 13;
      do
      {
        v144 = v87;
        v91 = *(v88 - 7);
        v152 = (_QWORD *)*(v88 - 6);
        v153 = v91;
        v92 = *(v88 - 5);
        v150 = *(v88 - 4);
        v151 = v92;
        v93 = *(v88 - 3);
        v94 = *(v88 - 2);
        v95 = *(v88 - 1);
        v96 = *v88;
        v97 = *((unsigned __int8 *)v88 + 8);
        v148 = v88[2];
        v149 = v93;
        v98 = v88[3];
        v99 = v88[4];
        v155 = v88[5];
        v156 = v99;
        v154 = v88[6];
        v100 = v88[7];
        v101 = v88[8];
        v158 = v98;
        v159 = v101;
        v162 = (void *)v88[9];
        v102 = v88[10];
        v160 = (uint64_t *)v100;
        v161 = v102;
        v103 = v88[11];
        v146 = v88[12];
        v147 = v103;
        v145 = *((unsigned __int8 *)v88 + 104);
        v104 = swift_allocObject();
        swift_beginAccess();
        v105 = v2[2];
        v106 = v2[3];
        swift_beginAccess();
        *(_QWORD *)(v104 + 16) = v105;
        *(_QWORD *)(v104 + 24) = v106;
        v139 = v106;
        v107 = v152;
        v108 = v153;
        v109 = v2[4];
        v110 = v2[5];
        v157 = v2;
        v112 = v150;
        v111 = v151;
        v113 = v149;
        v142 = v95;
        v143 = v94;
        *(_QWORD *)(v104 + 32) = v109;
        *(_QWORD *)(v104 + 40) = v110;
        v138 = v110;
        v141 = v96;
        v114 = v97;
        v140 = v97;
        if (v97 == 255)
        {
          v108 = v157[7];
          v115 = v157[8];
          v116 = v157[10];
          v134 = v157[9];
          v135 = (_QWORD *)v115;
          v113 = v157[11];
          v94 = v157[12];
          v95 = v157[13];
          v96 = v157[14];
          v114 = *((_BYTE *)v157 + 120);
          sub_1BA7AF9CC(v108, v115, v134, v116, v113, v94, v95, v96, v114);
          v112 = v116;
          v111 = v134;
          v107 = v135;
        }
        *(_QWORD *)(v104 + 56) = v108;
        *(_QWORD *)(v104 + 64) = v107;
        *(_QWORD *)(v104 + 72) = v111;
        *(_QWORD *)(v104 + 80) = v112;
        *(_QWORD *)(v104 + 88) = v113;
        *(_QWORD *)(v104 + 96) = v94;
        *(_QWORD *)(v104 + 104) = v95;
        *(_QWORD *)(v104 + 112) = v96;
        v117 = v148;
        *(_BYTE *)(v104 + 120) = v114;
        if (!v117)
          v117 = swift_bridgeObjectRetain();
        v118 = v158;
        v119 = v159;
        v121 = v155;
        v120 = v156;
        *(_QWORD *)(v104 + 128) = v117;
        v122 = v154;
        v124 = (uint64_t)v160;
        v123 = v161;
        v125 = (uint64_t)v162;
        v127 = v146;
        v126 = v147;
        v128 = v145;
        if (v145 == 254)
        {
          v129 = v157[17];
          v134 = v157[18];
          v135 = (_QWORD *)v129;
          v130 = v157[19];
          v132 = v157[20];
          v133 = v130;
          v124 = v157[21];
          v119 = v157[22];
          v125 = v157[23];
          v123 = v157[24];
          v126 = v157[25];
          v127 = v157[26];
          v128 = *((_BYTE *)v157 + 216);
          sub_1BA6E8A48(v129, v134, v130, v132, v124, v119, v125, v123, v126, v127, v128);
          v122 = v132;
          v121 = v133;
          v120 = v134;
          v118 = (uint64_t)v135;
        }
        v88 += 23;
        *(_QWORD *)(v104 + 136) = v118;
        *(_QWORD *)(v104 + 144) = v120;
        *(_QWORD *)(v104 + 152) = v121;
        *(_QWORD *)(v104 + 160) = v122;
        *(_QWORD *)(v104 + 168) = v124;
        *(_QWORD *)(v104 + 176) = v119;
        *(_QWORD *)(v104 + 184) = v125;
        *(_QWORD *)(v104 + 192) = v123;
        *(_QWORD *)(v104 + 200) = v126;
        *(_QWORD *)(v104 + 208) = v127;
        v89 = v157;
        *(_BYTE *)(v104 + 216) = v128;
        swift_beginAccess();
        v90 = v89[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7AF9CC(v153, (uint64_t)v152, v151, v150, v149, v143, v142, v141, v140);
        swift_bridgeObjectRetain();
        sub_1BA6E8A48(v158, v156, v155, v154, (uint64_t)v160, v159, (uint64_t)v162, v161, v147, v146, v145);
        swift_bridgeObjectRetain();
        swift_release();
        swift_beginAccess();
        *(_QWORD *)(v104 + 48) = v90;
        v2 = (_QWORD *)v104;
        v87 = v144 - 1;
      }
      while (v144 != 1);
      swift_bridgeObjectRelease();
      v2 = (_QWORD *)v104;
    }
    else
    {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v153 = v3 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v157 = v2;
LABEL_3:
  v156 = v7;
  v8 = (__int128 *)(v153 + 184 * v7);
  v9 = *v8;
  v10 = v8[1];
  v11 = v8[3];
  v177 = v8[2];
  v178 = v11;
  v175 = v9;
  v176 = v10;
  v12 = v8[4];
  v13 = v8[5];
  v14 = v8[7];
  v181 = v8[6];
  v182 = v14;
  v179 = v12;
  v180 = v13;
  v15 = v8[8];
  v16 = v8[9];
  v17 = v8[10];
  v186 = *((_BYTE *)v8 + 176);
  v184 = v16;
  v185 = v17;
  v183 = v15;
  v18 = v175;
  sub_1BAC68298((uint64_t)&v175);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v163 = v18;
  swift_bridgeObjectRetain();
  v19 = sub_1BA6E583C((uint64_t *)&v163);
  swift_bridgeObjectRelease();
  v159 = *(_QWORD *)(v19 + 16);
  if (!v159)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v137 = v6;
  v20 = 0;
  v21 = (uint64_t *)(v19 + 64);
  v22 = v19;
  while (1)
  {
    if (v20 >= *(_QWORD *)(v22 + 16))
    {
      __break(1u);
      goto LABEL_50;
    }
    v158 = *(v21 - 2);
    v23 = *(v21 - 1);
    v24 = *v21;
    v25 = *(_BYTE *)(v23 + 32);
    v26 = v25 & 0x3F;
    v27 = (unint64_t)((1 << v25) + 63) >> 6;
    v28 = 8 * v27;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v26 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v30 = (char *)swift_slowAlloc();
    bzero(v30, v28);
    v34 = v27;
    v32 = v162;
    v33 = sub_1BA6EB5B4((uint64_t)v30, v34, v23, v161);
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_52;
    v162 = 0;
    MEMORY[0x1BCCE5C38](v30, -1, -1);
LABEL_15:
    v35 = sub_1BA6EB330(v33, v23);
    swift_release();
    if ((v35 & 1) != 0 && (sub_1BA6EBD20(v161, v24) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v36 = v158;
      if (v158 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC68298((uint64_t)&v175);
        v6 = v137;
        v51 = v137[2];
        v50 = v137[3];
        v2 = v157;
        if (v51 >= v50 >> 1)
          v6 = sub_1BA7AFA90((_QWORD *)(v50 > 1), v51 + 1, 1, v137);
        v6[2] = v51 + 1;
        v52 = &v6[23 * v51];
        v53 = v175;
        v54 = v176;
        v55 = v178;
        *((_OWORD *)v52 + 4) = v177;
        *((_OWORD *)v52 + 5) = v55;
        *((_OWORD *)v52 + 2) = v53;
        *((_OWORD *)v52 + 3) = v54;
        v56 = v179;
        v57 = v180;
        v58 = v182;
        *((_OWORD *)v52 + 8) = v181;
        *((_OWORD *)v52 + 9) = v58;
        *((_OWORD *)v52 + 6) = v56;
        *((_OWORD *)v52 + 7) = v57;
        v59 = v183;
        v60 = v184;
        v61 = v185;
        *((_BYTE *)v52 + 208) = v186;
        *((_OWORD *)v52 + 11) = v60;
        *((_OWORD *)v52 + 12) = v61;
        *((_OWORD *)v52 + 10) = v59;
      }
      else
      {
        sub_1BAC68298((uint64_t)&v175);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v152;
        v39 = v152[2];
        v38 = v152[3];
        v2 = v157;
        v6 = v137;
        if (v39 >= v38 >> 1)
          v37 = sub_1BA4A1468((_QWORD *)(v38 > 1), v39 + 1, 1, v152);
        v165 = v177;
        v166 = v178;
        v168 = v180;
        v169 = v181;
        v167 = v179;
        LOBYTE(v174) = v186;
        v172 = v184;
        v173 = v185;
        v170 = v182;
        v171 = v183;
        v163 = v175;
        v164 = v176;
        v37[2] = v39 + 1;
        v152 = v37;
        v40 = &v37[24 * v39];
        v41 = v163;
        v42 = v164;
        v43 = v166;
        *((_OWORD *)v40 + 4) = v165;
        *((_OWORD *)v40 + 5) = v43;
        *((_OWORD *)v40 + 2) = v41;
        *((_OWORD *)v40 + 3) = v42;
        v44 = v167;
        v45 = v168;
        v46 = v170;
        *((_OWORD *)v40 + 8) = v169;
        *((_OWORD *)v40 + 9) = v46;
        *((_OWORD *)v40 + 6) = v44;
        *((_OWORD *)v40 + 7) = v45;
        v47 = v171;
        v48 = v173;
        v49 = v174;
        *((_OWORD *)v40 + 11) = v172;
        *((_OWORD *)v40 + 12) = v48;
        *((_OWORD *)v40 + 10) = v47;
        v40[26] = v49;
        v40[27] = v36;
      }
LABEL_26:
      sub_1BAC68394((uint64_t)&v175);
LABEL_27:
      v7 = v156 + 1;
      if (v156 + 1 == v154)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v7 >= *(_QWORD *)(v155 + 16))
LABEL_50:
        __break(1u);
      goto LABEL_3;
    }
    ++v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 += 5;
    if (v159 == v20)
    {
      swift_bridgeObjectRelease();
      sub_1BAC68394((uint64_t)&v175);
      v2 = v157;
      v6 = v137;
      goto LABEL_27;
    }
  }
  v160 = &v132;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v30 = (char *)&v132 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v30, v28);
  v31 = v27;
  v32 = v162;
  v33 = sub_1BA6EB5B4((uint64_t)v30, v31, v23, v161);
  swift_bridgeObjectRelease();
  if (!v32)
  {
    v162 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_52:

  result = MEMORY[0x1BCCE5C38](v30, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BA55A9D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatItemNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[12];
  int v55;
  __int128 v56;
  int v57;
  int v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  char v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;

  v78 = a2;
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v54[-v4];
  sub_1BAE9F294();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9F30C();
  sub_1BA4A2870(&qword_1ED3D0DF0, (uint64_t (*)(uint64_t))sub_1BAE9F30C, (uint64_t)&unk_1BB8FFC6C);
  v11 = (void *)v79;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v53 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v53);
  }
  *(_QWORD *)&v79 = v8;
  v13 = a1[3];
  v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v10;
  if ((v13 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      sub_1BAE9F38C();
      sub_1BA55B51C();
      sub_1BAE9F3D0();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7251A18);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v10, v7);
      a1 = v77;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v82 = 0uLL;
  LOBYTE(v83) = 0;
  sub_1BB8740D4();
  v19 = v80;
  v80 = xmmword_1BB8A1A10;
  v81 = 0;
  sub_1BA5B8D24();
  sub_1BB874068();
  v70 = v19;
  v71 = v5;
  v74 = *((_QWORD *)&v19 + 1);
  v72 = *((_QWORD *)&v82 + 1);
  v25 = v82;
  v26 = v84;
  v73 = v83;
  v27 = v86;
  v28 = v88;
  v75 = v85;
  v76 = v87;
  v29 = v89;
  v80 = xmmword_1BB8D2D60;
  v81 = 0;
  sub_1BA5B8D68();
  sub_1BB874068();
  v61 = v29;
  v62 = v25;
  v63 = v26;
  v64 = v27;
  v66 = v28;
  v31 = v82;
  v32 = v83;
  v33 = v84;
  v68 = v85;
  v69 = v86;
  v65 = v87;
  v67 = v88;
  type metadata accessor for FormatItemNodeAction();
  v82 = xmmword_1BB8D2D70;
  LOBYTE(v83) = 0;
  sub_1BA4A2870(&qword_1ED3C8EF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
  sub_1BB874068();
  v59 = v31;
  v34 = v69;
  v60 = v33;
  v82 = xmmword_1BB8D2D90;
  LOBYTE(v83) = 0;
  v58 = sub_1BB874038();
  v82 = xmmword_1BB8D2D80;
  LOBYTE(v83) = 0;
  v35 = v34;
  v36 = v32;
  v57 = sub_1BB874038();
  v82 = xmmword_1BB8D2DA0;
  LOBYTE(v83) = 0;
  sub_1BA5B8CE0();
  sub_1BB874068();
  v37 = v68;
  v38 = v73;
  v56 = v80;
  v80 = xmmword_1BB8D2DB0;
  v81 = 0;
  sub_1BAE9F414();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v15, v7);
  v79 = v82;
  v40 = v83;
  v39 = v84;
  v55 = (unsigned __int16)v85;
  v41 = (int *)type metadata accessor for FormatItemNodeStyle.Selector(0);
  v42 = v78;
  sub_1BA646EFC((uint64_t)v71, v78 + v41[7], &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  v43 = v74;
  *(_QWORD *)v42 = v70;
  *(_QWORD *)(v42 + 8) = v43;
  v44 = v72;
  *(_QWORD *)(v42 + 16) = v62;
  *(_QWORD *)(v42 + 24) = v44;
  v45 = v63;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v45;
  v46 = v64;
  *(_QWORD *)(v42 + 48) = v75;
  *(_QWORD *)(v42 + 56) = v46;
  v47 = v66;
  *(_QWORD *)(v42 + 64) = v76;
  *(_QWORD *)(v42 + 72) = v47;
  *(_BYTE *)(v42 + 80) = v61;
  v48 = *((_QWORD *)&v59 + 1);
  *(_QWORD *)(v42 + 88) = v59;
  *(_QWORD *)(v42 + 96) = v48;
  v49 = v60;
  *(_QWORD *)(v42 + 104) = v36;
  *(_QWORD *)(v42 + 112) = v49;
  *(_QWORD *)(v42 + 120) = v37;
  *(_QWORD *)(v42 + 128) = v35;
  *(_QWORD *)(v42 + 136) = v65;
  *(_BYTE *)(v42 + 144) = v67;
  *(_BYTE *)(v42 + v41[8]) = v58;
  *(_BYTE *)(v42 + v41[9]) = v57;
  v50 = (_QWORD *)(v42 + v41[10]);
  v51 = *((_QWORD *)&v56 + 1);
  *v50 = v56;
  v50[1] = v51;
  v52 = v42 + v41[11];
  *(_OWORD *)v52 = v79;
  *(_QWORD *)(v52 + 16) = v40;
  *(_QWORD *)(v52 + 24) = v39;
  *(_WORD *)(v52 + 32) = v55;
  v53 = (uint64_t)v77;
  return __swift_destroy_boxed_opaque_existential_1(v53);
}

unint64_t sub_1BA55B51C()
{
  unint64_t result;

  result = qword_1ED3C8330;
  if (!qword_1ED3C8330)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9A50, &_s10CodingKeysON_106);
    atomic_store(result, (unint64_t *)&qword_1ED3C8330);
  }
  return result;
}

uint64_t sub_1BA55B560@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatStateMachineInput.init(from:)(a1, a2);
}

uint64_t FormatStateMachineInput.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v3 = v2;
  v30 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v30;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v22 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v16;
      *(_QWORD *)(v23 + 16) = &unk_1E726EA78;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA55B924();
  v25 = 0;
  v26 = 0;
  sub_1BB8740D4();
  v17 = v29;
  if ((v29 & 1) != 0)
  {
    v29 = xmmword_1BB87FC90;
    sub_1BA98C8A4();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = 0;
    v19 = v25;
    v20 = v26;
    v21 = v27;
  }
  else
  {
    sub_1BA55B8C4(0, &qword_1ED3B5548, (uint64_t (*)(void))sub_1BA823170, (uint64_t)&type metadata for FormatStateMachineEventValue, (uint64_t)&type metadata for FormatStateMachineEvent);
    v29 = xmmword_1BB87FC90;
    sub_1BA55B968();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = v25;
    v20 = v26;
    v21 = v27;
    v18 = v28;
  }
  *(_QWORD *)v12 = v19;
  *(_QWORD *)(v12 + 8) = v20;
  *(_QWORD *)(v12 + 16) = v21;
  *(_QWORD *)(v12 + 24) = v18;
  *(_BYTE *)(v12 + 32) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA55B8C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = type metadata accessor for FormatCommandValue(a1, a4, a5, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_1BA55B924()
{
  unint64_t result;

  result = qword_1ED3CA530;
  if (!qword_1ED3CA530)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5F28, &_s10CodingTypeON_18);
    atomic_store(result, (unint64_t *)&qword_1ED3CA530);
  }
  return result;
}

unint64_t sub_1BA55B968()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5540;
  if (!qword_1ED3B5540)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5548, (uint64_t (*)(void))sub_1BA823170, (uint64_t)&type metadata for FormatStateMachineEventValue, (uint64_t)&type metadata for FormatStateMachineEvent);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5540);
  }
  return result;
}

uint64_t FormatContentSubgroup.ResolvedContainer.contents.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BA55BA78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 168);
  swift_beginAccess();
  v4 = sub_1BB872034();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BA55BADC(void (*a1)(uint64_t))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA55BB48(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA6D5324, (uint64_t (*)(_QWORD))sub_1BA6D5338);
}

uint64_t sub_1BA55BB5C(_QWORD *a1)
{
  return FormatAdMetricsNodeContent.encode(to:)(a1);
}

uint64_t FormatAdMetricsNodeContent.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAdMetricsNodeContent, v11, v8, (uint64_t)&type metadata for FormatAdMetricsNodeContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v9, (uint64_t)v7, v10, (uint64_t)&off_1E734BC80);
  if (qword_1ED3C6D18 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476B60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA55BD0C((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA55BD0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  __int128 v12;

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF6C18;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55BE58();
    v12 = 0uLL;
    sub_1BB874464();
    v12 = xmmword_1BB87FC90;
    sub_1BA55BE9C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA55BE58()
{
  unint64_t result;

  result = qword_1ED3A7B20;
  if (!qword_1ED3A7B20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B53C0, &_s14descr1E72CC8B9V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B20);
  }
  return result;
}

unint64_t sub_1BA55BE9C()
{
  unint64_t result;

  result = qword_1ED39BA40;
  if (!qword_1ED39BA40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeBinding, &type metadata for FormatAdMetricsNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39BA40);
  }
  return result;
}

uint64_t sub_1BA55BEE0@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatWebEmbedNodeContent.init(from:)(a1, a2);
}

uint64_t FormatWebEmbedNodeContent.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;

  v34 = a2;
  sub_1BA6C0E30(0);
  v40 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v11 = (void *)v35;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  *(_QWORD *)&v35 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v10;
  if ((v14 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        v19 = *v18;
        if (*v18 >= 4)
          break;
        v18 += 2;
        if (!--v17)
          goto LABEL_7;
      }
      v26 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v27 = v26;
      *(_QWORD *)(v27 + 8) = v19;
      *(_QWORD *)(v27 + 16) = &unk_1E726F798;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v26, v19);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v7);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA55C354();
  v36 = 0uLL;
  sub_1BB8740D4();
  v20 = v35;
  if ((_BYTE)v39)
  {
    if (v39 == 1)
    {
      v36 = xmmword_1BB87FC90;
      sub_1BA4A2870(&qword_1ED3B3468, (uint64_t (*)(uint64_t))sub_1BA6C0E30, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      v21 = sub_1BB86C67C();
      v22 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v23, v5, v21);
      v24 = v22 | 0x4000000000000000;
      v25 = v34;
    }
    else
    {
      sub_1BA4CDF6C(0, &qword_1EF2B3A60, (uint64_t (*)(void))sub_1BAED0CE0, (uint64_t)&type metadata for FormatWebEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      v39 = xmmword_1BB87FC90;
      sub_1BAED0D24();
      sub_1BB8740D4();
      v25 = v34;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      v31 = v36;
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v31;
      v24 = v32 | 0x8000000000000000;
    }
  }
  else
  {
    v39 = xmmword_1BB87FC90;
    sub_1BA55C398();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
    v35 = v36;
    v28 = v37;
    v29 = v38;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v35;
    *(_QWORD *)(v24 + 32) = v28;
    *(_BYTE *)(v24 + 40) = v29;
    v25 = v34;
  }
  *v25 = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA55C354()
{
  unint64_t result;

  result = qword_1ED3CB298;
  if (!qword_1ED3CB298)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3A30, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB298);
  }
  return result;
}

unint64_t sub_1BA55C398()
{
  unint64_t result;

  result = qword_1ED3B7BA0;
  if (!qword_1ED3B7BA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeBinding, &type metadata for FormatWebEmbedNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B7BA0);
  }
  return result;
}

uint64_t sub_1BA55C3DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA55C408();
  *a1 = result;
  return result;
}

uint64_t sub_1BA55C408()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16)
    return 22;
  else
    return v0;
}

void sub_1BA55C458(_QWORD *a1)
{
  FormatGroupBinding.Text.encode(to:)(a1);
}

void FormatGroupBinding.Text.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD v33[32];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v33[10] = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v33[9] = (char *)v33 - v6;
  MEMORY[0x1E0C80A78](v7);
  v33[8] = (char *)v33 - v8;
  MEMORY[0x1E0C80A78](v9);
  v33[7] = (char *)v33 - v10;
  MEMORY[0x1E0C80A78](v11);
  v33[5] = (char *)v33 - v12;
  MEMORY[0x1E0C80A78](v13);
  v33[4] = (char *)v33 - v14;
  MEMORY[0x1E0C80A78](v15);
  v33[6] = (char *)v33 - v16;
  MEMORY[0x1E0C80A78](v17);
  v33[3] = (char *)v33 - v18;
  MEMORY[0x1E0C80A78](v19);
  v33[2] = (char *)v33 - v20;
  MEMORY[0x1E0C80A78](v21);
  v33[1] = (char *)v33 - v22;
  MEMORY[0x1E0C80A78](v23);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v1;
  v33[12] = v1[1];
  v33[13] = v27;
  v33[11] = v1[2];
  v28 = *((unsigned __int8 *)v1 + 48);
  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  v31 = sub_1BA6B8518();
  v33[31] = v26;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupBinding.Text, v32, v29, (uint64_t)&type metadata for FormatGroupBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v30, (uint64_t)v26, v31, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA55C6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(v5 - 224);
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v5 - 216);
  *(_QWORD *)(v5 - 192) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 176) = v1;
  *(_QWORD *)(v5 - 168) = v4;
  *(_QWORD *)(v5 - 160) = v0;
  *(_BYTE *)(v5 - 152) = v3;
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v2, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v5 - 72);
  sub_1BACF56B8(0, v5 - 200, v2);
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA55CDD0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA55CF78();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA55CF34()
{
  unint64_t result;

  result = qword_1ED3A61B0;
  if (!qword_1ED3A61B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B21E8, &_s10CodingTypeON_164);
    atomic_store(result, (unint64_t *)&qword_1ED3A61B0);
  }
  return result;
}

unint64_t sub_1BA55CF78()
{
  unint64_t result;

  result = qword_1ED39B398;
  if (!qword_1ED39B398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Text, &type metadata for FormatTagBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39B398);
  }
  return result;
}

uint64_t initializeWithCopy for FeedContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v7 - 1) >= 3)
  {
    *(_QWORD *)(a1 + 32) = *v6;
    *(_QWORD *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(void **)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v11 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA55D084(_QWORD *a1)
{
  FormatSlotTransform.encode(to:)(a1);
}

void FormatSlotTransform.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[8];

  v2 = v1;
  v4 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v4);
  v26[4] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v6);
  v26[3] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v26[2] = (char *)v26 - v9;
  MEMORY[0x1E0C80A78](v10);
  v26[1] = (char *)v26 - v11;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v26[0] = (char *)v26 - v15;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v2;
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = sub_1BA6B8518();
  v26[7] = v20;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSlotTransform, v25, v22, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v23, (uint64_t)v20, v24, (uint64_t)&off_1E734BDC0);
  __asm { BR              X10 }
}

uint64_t sub_1BA55D2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = swift_projectBox();
  v3 = *(_QWORD *)(v1 - 96);
  sub_1BA4C2DD8(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotItemCountLimit);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v1 - 72);
  sub_1BA55DB70(1, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotItemCountLimit);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA55D860(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEBEFC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA55DA08();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA55D9C4()
{
  unint64_t result;

  result = qword_1ED3A66E8;
  if (!qword_1ED3A66E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C01C8, &_s10CodingTypeON_25);
    atomic_store(result, (unint64_t *)&qword_1ED3A66E8);
  }
  return result;
}

unint64_t sub_1BA55DA08()
{
  unint64_t result;

  result = qword_1ED3BE6B8;
  if (!qword_1ED3BE6B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotTransform, &type metadata for FormatSlotTransform);
    atomic_store(result, (unint64_t *)&qword_1ED3BE6B8);
  }
  return result;
}

uint64_t sub_1BA55DA4C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEBEFC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA55DB70(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEBEFC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSlotItemCountLimit();
    sub_1BA4A2870(&qword_1ED3A0298, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotItemCountLimit, (uint64_t)&protocol conformance descriptor for FormatSlotItemCountLimit);
    sub_1BB874464();
  }
  return swift_release();
}

_QWORD *sub_1BA55DCFC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA55DD24(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA55DD24(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD v6[4];

  v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1BA55DE98();
    sub_1BA55DE3C(&qword_1ED3B9618, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    v3 = v5;
    if (!v5[2])
    {
      swift_bridgeObjectRelease();
      v3 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1BA55DE3C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA55DE98();
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA55DE98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9610)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9610);
  }
}

uint64_t sub_1BA55DEEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPublisherLogoSizing.init(from:)(a1, a2);
}

uint64_t FormatPublisherLogoSizing.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v3 = v2;
  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA55E234();
    v20[2] = 0;
    v20[3] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726D998;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA55E18C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  *v2 = 1;
  JUMPOUT(0x1BA55E160);
}

void sub_1BA55E1A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  *v2 = 2;
  JUMPOUT(0x1BA55E160);
}

void sub_1BA55E1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA655028(0);
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA55E22CLL);
  }
  JUMPOUT(0x1BA55E078);
}

unint64_t sub_1BA55E234()
{
  unint64_t result;

  result = qword_1ED3CB228;
  if (!qword_1ED3CB228)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7BE8, &_s10CodingTypeON_47);
    atomic_store(result, (unint64_t *)&qword_1ED3CB228);
  }
  return result;
}

uint64_t sub_1BA55E278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatShadow.Offset.init(from:)(a1, a2);
}

uint64_t FormatShadow.Offset.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  char v33;
  uint64_t v34;

  *(_QWORD *)&v29 = a2;
  sub_1BAEB7914();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB798C();
  sub_1BA4A2870(&qword_1ED3D1510, (uint64_t (*)(uint64_t))sub_1BAEB798C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
    v9 = v2;
LABEL_15:
    sub_1BA7F8B78(a1, (uint64_t)v9);
    swift_willThrow();

    v25 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v25);
  }
  v27 = a1;
  v28 = v6;
  v10 = (_QWORD *)v29;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v5;
  if ((v12 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_8;
      }
      v20 = *((_QWORD *)v16 - 2);
      v21 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v27 - 4) = &_s10CodingKeysON_56;
      *(&v27 - 3) = (_QWORD *)sub_1BAEB7A0C();
      *(&v27 - 2) = (_QWORD *)sub_1BA55E640();
      *(&v27 - 1) = (_QWORD *)sub_1BAEB7A50();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726E1E0);
      swift_release_n();
      sub_1BA98D1F0();
      v9 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
      a1 = v27;
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  v32 = 0uLL;
  v33 = 0;
  v17 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = 0uLL;
    v31 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v18 = v10;
    v19 = v34;
  }
  else
  {
    v19 = 0;
    v18 = v10;
  }
  v29 = xmmword_1BB8A1A10;
  v32 = xmmword_1BB8A1A10;
  v33 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = v29;
    v31 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v17 = v34;
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v13);
  *v18 = v19;
  v18[1] = v17;
  v25 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

unint64_t sub_1BA55E640()
{
  unint64_t result;

  result = qword_1ED3C6888;
  if (!qword_1ED3C6888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6F08, &_s10CodingKeysON_56);
    atomic_store(result, (unint64_t *)&qword_1ED3C6888);
  }
  return result;
}

uint64_t sub_1BA55E684@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA55E6AC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA55E6AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(char *, _QWORD);
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  void (**v62)(char *, _QWORD);
  __int128 v63;
  char v64;
  __int128 v65;
  char v66;
  unint64_t v67;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v61 = v2;
  v57 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v60 = (char *)&v45 - v3;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v58 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v45 - v6;
  sub_1BAEE9394();
  v59 = v8;
  v9 = *(void (***)(char *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECA624();
  sub_1BA4A2870(&qword_1ED3D15A0, (uint64_t (*)(uint64_t))sub_1BAECA624, (uint64_t)&unk_1BB8FFC6C);
  v13 = v62;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v54 = v5;
  v55 = v7;
  v15 = v58;
  v62 = v9;
  v16 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v17 = sub_1BB872874();
  LOBYTE(v16) = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v59;
  v18 = v60;
  v20 = v61;
  if ((v16 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v23 - 2);
      v27 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v28);
      sub_1BAECA6A4();
      sub_1BA719928();
      sub_1BAECA6E8();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E7250C08);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v30 = v26;
      *(_QWORD *)(v30 + 8) = v27;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v27, 1);
      v62[1](v11, v19);
      a1 = v56;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v52 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE9394);
  v53 = v24;
  v65 = xmmword_1BB8A1A10;
  v66 = 0;
  v25 = sub_1BB87402C();
  v33 = v32;
  v51 = v25;
  v65 = xmmword_1BB8D2D60;
  v66 = 0;
  v48 = sub_1BB87402C();
  v50 = v34;
  v49 = xmmword_1BB8D2D70;
  v65 = xmmword_1BB8D2D70;
  v66 = 0;
  v35 = sub_1BB8740F8();
  if ((v35 & 1) != 0)
  {
    v63 = v49;
    v64 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v36 = v67;
  }
  else
  {
    v36 = 0xB000000000000008;
  }
  *(_QWORD *)&v49 = v36;
  v65 = xmmword_1BB8D2D90;
  v66 = 0;
  sub_1BA719774();
  sub_1BB874068();
  v37 = *((_QWORD *)&v63 + 1);
  v46 = v63;
  v47 = xmmword_1BB8D2D80;
  v65 = xmmword_1BB8D2D80;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v45 = v37;
    v63 = v47;
    v64 = 0;
    sub_1BAEB7D04();
    sub_1BB8740D4();
    v38 = v15;
    *(_QWORD *)&v47 = v33;
    v39 = v55;
    v40 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
    v37 = v45;
  }
  else
  {
    *(_QWORD *)&v47 = v33;
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v65 = xmmword_1BB8D2DA0;
  v66 = 0;
  sub_1BA4FB6A0();
  sub_1BB8740D4();
  v41 = sub_1BB86DD08();
  v42 = v18;
  v43 = v41;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v20);
  v61 = xmmword_1BB8D2DB0;
  v65 = xmmword_1BB8D2DB0;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v63 = v61;
    v64 = 0;
    sub_1BB8740D4();
    v44 = v67;
  }
  else
  {
    v44 = 0;
  }
  *(_QWORD *)&v63 = v49;
  *(_QWORD *)&v65 = v46;
  *((_QWORD *)&v65 + 1) = v37;
  type metadata accessor for FormatVBoxNode();
  swift_allocObject();
  KeyPath = FormatVBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:)(v52, v53, v51, v47, v48, v50, (uint64_t *)&v63, (uint64_t *)&v65, v40, v43, v44);
  v62[1](v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  return KeyPath;
}

uint64_t sub_1BA55EEEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSupplementary.init(from:)(a1, a2);
}

uint64_t FormatSupplementary.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  _QWORD *v101;
  __int128 v102;
  char v103;
  __int128 v104;
  char v105;
  unsigned __int8 v106;

  v87 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3BBE50, (void (*)(void))sub_1BA8374B4, (void (*)(void))sub_1BA8374F8);
  v90 = v3;
  v86 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v89 = (char *)&v75 - v4;
  sub_1BA692844();
  v92 = v5;
  v88 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v95 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v94 = v7;
  v91 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v98 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  v97 = v9;
  v93 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v96 = (char *)&v75 - v10;
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v100 = (char *)&v75 - v14;
  sub_1BAE7C02C();
  v99 = v15;
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7C0A4();
  sub_1BA4A2870(&qword_1ED3D0E40, (uint64_t (*)(uint64_t))sub_1BAE7C0A4, (uint64_t)&unk_1BB8FFC6C);
  v19 = v101;
  sub_1BB87468C();
  v20 = v19;
  if (v19)
  {
    v21 = a1;
LABEL_11:
    sub_1BA7F8B78(v21, (uint64_t)v20);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  v84 = v13;
  v85 = v16;
  v22 = a1[3];
  v101 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v23 = sub_1BB872874();
  LOBYTE(v22) = Dictionary<>.errorOnUnknownKeys.getter(v23);
  swift_bridgeObjectRelease();
  v25 = v99;
  v24 = v100;
  if ((v22 & 1) != 0)
  {
    v26 = sub_1BB8740EC();
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v28 = (_BYTE *)(v26 + 48);
      while (*v28 != 1)
      {
        v28 += 24;
        if (!--v27)
          goto LABEL_8;
      }
      v34 = *((_QWORD *)v28 - 2);
      v33 = *((_QWORD *)v28 - 1);
      swift_bridgeObjectRetain_n();
      v35 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v35);
      *(&v75 - 4) = (uint64_t)&_s10CodingKeysON_202;
      *(&v75 - 3) = sub_1BAE7C124();
      *(&v75 - 2) = sub_1BA55FBA4();
      *(&v75 - 1) = sub_1BAE7C168();
      swift_getKeyPath();
      swift_retain();
      v36 = sub_1BAE71220((uint64_t)&unk_1E7251BE8);
      swift_release_n();
      sub_1BA98D1F0();
      v37 = swift_allocError();
      *(_QWORD *)v38 = v34;
      *(_QWORD *)(v38 + 8) = v33;
      *(_QWORD *)(v38 + 16) = v36;
      *(_OWORD *)(v38 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v39 = v33;
      v20 = (void *)v37;
      sub_1BA69C828(v34, v39, 1);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v18, v25);
      v21 = v101;
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  v104 = 0uLL;
  v105 = 0;
  v29 = sub_1BB874098();
  v31 = v30;
  v104 = xmmword_1BB8A1A10;
  v105 = 0;
  v32 = sub_1BB87402C();
  v41 = v40;
  v83 = v32;
  v104 = xmmword_1BB8D2D60;
  v105 = 0;
  v42 = sub_1BB87402C();
  v82 = v41;
  v81 = v44;
  v80 = v42;
  v104 = xmmword_1BB8D2D70;
  v105 = 0;
  sub_1BA4FB6A0();
  v45 = v24;
  v46 = v12;
  sub_1BB8740D4();
  v47 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v45, v46);
  type metadata accessor for FormatSupplementaryNodeStyle();
  v104 = xmmword_1BB8D2D90;
  v105 = 0;
  sub_1BA4A2870(&qword_1ED3CC718, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeStyle);
  sub_1BB874068();
  v79 = v47;
  v76 = v29;
  v78 = v31;
  v48 = v102;
  v77 = xmmword_1BB8D2D80;
  v104 = xmmword_1BB8D2D80;
  v105 = 0;
  v49 = v18;
  v50 = sub_1BB8740F8();
  v21 = v101;
  v100 = v49;
  v51 = v82;
  v84 = v48;
  if ((v50 & 1) != 0)
  {
    v102 = v77;
    v103 = 0;
    sub_1BAE7C214();
    v53 = v96;
    v52 = v97;
    sub_1BB8740D4();
    v54 = v98;
    *(_QWORD *)&v77 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v52);
    v48 = v84;
  }
  else
  {
    *(_QWORD *)&v77 = MEMORY[0x1E0DEE9D8];
    v54 = v98;
  }
  v98 = xmmword_1BB8D2DA0;
  v104 = xmmword_1BB8D2DA0;
  v105 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v102 = v98;
    v103 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v55 = v54;
    v56 = v94;
    sub_1BB8740D4();
    v57 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v55, v56);
    v48 = v84;
  }
  else
  {
    v57 = MEMORY[0x1E0DEE9E8];
  }
  v98 = xmmword_1BB8D2DB0;
  v104 = xmmword_1BB8D2DB0;
  v105 = 0;
  v58 = sub_1BB8740F8();
  v59 = v95;
  if ((v58 & 1) != 0)
  {
    v102 = v98;
    v103 = 0;
    sub_1BA55FC08();
    sub_1BB8740D4();
    LODWORD(v60) = v106;
  }
  else
  {
    LODWORD(v60) = 0;
  }
  v98 = xmmword_1BB8D2DD0;
  v104 = xmmword_1BB8D2DD0;
  v105 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v102 = v98;
    v103 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v61 = v59;
    v62 = v92;
    sub_1BB8740D4();
    v63 = sub_1BB86DD08();
    v64 = v62;
    v65 = v63;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v64);
    v48 = v84;
  }
  else
  {
    v65 = MEMORY[0x1E0DEE9D8];
  }
  v98 = xmmword_1BB8D2DE0;
  v104 = xmmword_1BB8D2DE0;
  v105 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    LODWORD(v96) = v60;
    v102 = v98;
    v103 = 0;
    sub_1BAE7C1AC();
    v66 = v89;
    v60 = v90;
    sub_1BB8740D4();
    *(_QWORD *)&v98 = v57;
    v97 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v66, v60);
    v51 = v82;
    LOBYTE(v60) = (_BYTE)v96;
  }
  else
  {
    *(_QWORD *)&v98 = v57;
    v97 = MEMORY[0x1E0DEE9D8];
  }
  v104 = xmmword_1BB8D2DF0;
  v105 = 0;
  sub_1BA5B7CF0();
  v67 = v100;
  sub_1BB874068();
  v68 = v79;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v67, v25);
  v69 = v102;
  v70 = v87;
  v71 = v78;
  *v87 = v76;
  v70[1] = v71;
  v70[2] = v83;
  v70[3] = v51;
  v72 = v81;
  v70[4] = v80;
  v70[5] = v72;
  v70[6] = v68;
  v70[7] = v48;
  v73 = v98;
  v70[8] = v77;
  v70[9] = v73;
  *((_BYTE *)v70 + 80) = v60;
  v74 = v97;
  v70[11] = v65;
  v70[12] = v74;
  *((_BYTE *)v70 + 104) = v69;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

unint64_t sub_1BA55FBA4()
{
  unint64_t result;

  result = qword_1ED3C86E0;
  if (!qword_1ED3C86E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF1D8, &_s10CodingKeysON_202);
    atomic_store(result, (unint64_t *)&qword_1ED3C86E0);
  }
  return result;
}

uint64_t type metadata accessor for FormatSupplementaryNodeStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA55FC08()
{
  unint64_t result;

  result = qword_1ED3B5F40;
  if (!qword_1ED3B5F40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary.Kind, &type metadata for FormatSupplementary.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F40);
  }
  return result;
}

uint64_t sub_1BA55FC4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDecorationContent.init(from:)(a1, a2);
}

uint64_t FormatDecorationContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_9;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA5603E8();
    v23 = 0;
    v22 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v16;
  *(_QWORD *)(v19 + 16) = &unk_1E726B5F0;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_9:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA55FF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v5 - 288) = xmmword_1BB87FC90;
  sub_1BA62C9A0();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_QWORD *)(v5 - 128);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v4 = v7;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA55FF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)(v5 - 128) = xmmword_1BB87FC90;
  sub_1BA5FEA34();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_QWORD *)(v5 - 288);
    v7 = *(_QWORD *)(v5 - 280);
    *(_OWORD *)(v5 - 320) = *(_OWORD *)(v5 - 272);
    v8 = *(_QWORD *)(v5 - 256);
    v9 = *(_QWORD *)(v5 - 248);
    v10 = *(_QWORD *)(v5 - 240);
    v11 = *(_QWORD *)(v5 - 232);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v6;
    *(_QWORD *)(v12 + 24) = v7;
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v5 - 320);
    *(_QWORD *)(v12 + 48) = v8;
    *(_QWORD *)(v12 + 56) = v9;
    *(_QWORD *)(v12 + 64) = v10;
    *(_QWORD *)(v12 + 72) = v11;
    *v4 = v12 | 0x1000000000000000;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA560028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)(v5 - 128) = xmmword_1BB87FC90;
  sub_1BAE82840();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = swift_allocObject();
    v7 = *(_OWORD *)(v5 - 208);
    *(_OWORD *)(v6 + 80) = *(_OWORD *)(v5 - 224);
    *(_OWORD *)(v6 + 96) = v7;
    v8 = *(_OWORD *)(v5 - 176);
    *(_OWORD *)(v6 + 112) = *(_OWORD *)(v5 - 192);
    *(_OWORD *)(v6 + 128) = v8;
    v9 = *(_OWORD *)(v5 - 272);
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v5 - 288);
    *(_OWORD *)(v6 + 32) = v9;
    v10 = *(_OWORD *)(v5 - 240);
    *(_OWORD *)(v6 + 48) = *(_OWORD *)(v5 - 256);
    *(_OWORD *)(v6 + 64) = v10;
    *v4 = v6 | 0x2000000000000000;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA5600BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_OWORD *)(v5 - 128) = xmmword_1BB87FC90;
  sub_1BAE8F0A8();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_BYTE *)(v5 - 288);
    *(_OWORD *)(v5 - 320) = *(_OWORD *)(v5 - 280);
    v7 = *(_QWORD *)(v5 - 264);
    v8 = *(_QWORD *)(v5 - 256);
    v9 = *(_BYTE *)(v5 - 248);
    v10 = swift_allocObject();
    *(_BYTE *)(v10 + 16) = v6;
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v5 - 320);
    *(_QWORD *)(v10 + 40) = v7;
    *(_QWORD *)(v10 + 48) = v8;
    *(_BYTE *)(v10 + 56) = v9;
    *v4 = v10 | 0x3000000000000000;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA560168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)(v5 - 128) = xmmword_1BB87FC90;
  sub_1BAE82670();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = swift_allocObject();
    v7 = *(_OWORD *)(v5 - 176);
    *(_OWORD *)(v6 + 112) = *(_OWORD *)(v5 - 192);
    *(_OWORD *)(v6 + 128) = v7;
    *(_OWORD *)(v6 + 144) = *(_OWORD *)(v5 - 160);
    *(_BYTE *)(v6 + 160) = *(_BYTE *)(v5 - 144);
    v8 = *(_OWORD *)(v5 - 240);
    *(_OWORD *)(v6 + 48) = *(_OWORD *)(v5 - 256);
    *(_OWORD *)(v6 + 64) = v8;
    v9 = *(_OWORD *)(v5 - 208);
    *(_OWORD *)(v6 + 80) = *(_OWORD *)(v5 - 224);
    *(_OWORD *)(v6 + 96) = v9;
    v10 = *(_OWORD *)(v5 - 272);
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v5 - 288);
    *(_OWORD *)(v6 + 32) = v10;
    *v4 = v6 | 0x4000000000000000;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA560210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v5 - 288) = xmmword_1BB87FC90;
  sub_1BA62C3C0();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_QWORD *)(v5 - 128);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v4 = v7 | 0x5000000000000000;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA560288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1ED3C85B8, (uint64_t (*)(void))sub_1BA829604, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  *(_OWORD *)(v5 - 128) = xmmword_1BB87FC90;
  sub_1BA56042C();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_QWORD *)(v5 - 288);
    v7 = *(_QWORD *)(v5 - 280);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v4 = v8 | 0x6000000000000000;
    JUMPOUT(0x1BA55FE30);
  }
  JUMPOUT(0x1BA55FDF0);
}

void sub_1BA56032C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BAE8EF90();
  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1EF2B2CF0, (uint64_t (*)(uint64_t))sub_1BAE8EF90, (uint64_t)&protocol conformance descriptor for FormatUnboundValue<A, B>);
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    *(_OWORD *)(v4 - 320) = *(_OWORD *)(v4 - 288);
    v5 = *(_QWORD *)(v4 - 272);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v4 - 320);
    *(_QWORD *)(v6 + 32) = v5;
    JUMPOUT(0x1BA5603D8);
  }
  JUMPOUT(0x1BA55FDF0);
}

unint64_t sub_1BA5603E8()
{
  unint64_t result;

  result = qword_1ED3CA468;
  if (!qword_1ED3CA468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBB70, &_s10CodingTypeON_104);
    atomic_store(result, (unint64_t *)&qword_1ED3CA468);
  }
  return result;
}

unint64_t sub_1BA56042C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C85B0;
  if (!qword_1ED3C85B0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3C85B8, (uint64_t (*)(void))sub_1BA829604, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C85B0);
  }
  return result;
}

uint64_t sub_1BA560494()
{
  sub_1BA56053C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5604E0()
{
  sub_1BA56053C();
  return sub_1BB872D60();
}

unint64_t sub_1BA56053C()
{
  unint64_t result;

  result = qword_1ED3C7C00;
  if (!qword_1ED3C7C00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8200, &_s10CodingTypeON_108);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C00);
  }
  return result;
}

uint64_t sub_1BA560580(_QWORD *a1)
{
  return FormatShadow.Offset.encode(to:)(a1);
}

uint64_t FormatShadow.Offset.encode(to:)(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  sub_1BAEB7A94(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v13 = v1[1];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEB798C();
  v18 = sub_1BA4A2870(&qword_1ED3D1510, (uint64_t (*)(uint64_t))sub_1BAEB798C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatShadow.Offset, v19, v15, (uint64_t)&type metadata for FormatShadow.Offset, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2EEAC(0, 0, 0, v14, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE57434, (uint64_t (*)(uint64_t))sub_1BAEB7B0C, &qword_1ED3AF258);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v22(v6, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2EEAC(1, 0, 0, v13, (uint64_t)v6, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE57434, (uint64_t (*)(uint64_t))sub_1BAEB7B0C, &qword_1ED3AF258);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAEB7A94);
}

uint64_t destroy for FormatGroupNodeMaskStyle.Selector(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 80) != 255)
    sub_1BA5608E0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 176) != 254)
    return swift_release();
  return result;
}

uint64_t sub_1BA5608E0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1BA5DCC4C(a7);
    case 1:
      return swift_bridgeObjectRelease();
    case 0:
      return sub_1BA6F2B88(result, a2, a3);
  }
  return result;
}

uint64_t sub_1BA56096C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = a1 + a2[6];
  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = v5 + *(int *)(v7 + 20);
  v9 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v5 + *(int *)(v7 + 24);
  if (*(_QWORD *)(v10 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  swift_release();
  swift_release();
  swift_release();
  v14 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v14 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[12]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[14]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA560B54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustment.init(from:)(a1, a2);
}

uint64_t FormatImageAdjustment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[8];
  __int128 v29[9];
  __int128 v30;
  uint64_t v31;
  char v32;
  _BYTE v33[136];
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v3 = v2;
  v27 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v37 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v9 = a1;
LABEL_15:
    sub_1BA7F8B78(v9, (uint64_t)v3);
    swift_willThrow();

    v23 = (uint64_t)v9;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v25 = a1;
  v26 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v37;
  v13 = v8;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_8;
      }
      v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v17;
      *(_QWORD *)(v22 + 16) = &unk_1E72500D8;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v17);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v12);
      v9 = v25;
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA560F64();
  v34 = 0;
  v35 = 0;
  sub_1BB8740D4();
  v18 = v26;
  if (v36)
  {
    if (v36 == 1)
    {
      v30 = xmmword_1BB87FC90;
      sub_1BA560FEC();
      sub_1BB8740D4();
      v19 = v27;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v12);
      sub_1BA53BAD8((uint64_t)&v31, (uint64_t)v28);
      sub_1BA53BAD8((uint64_t)v28, (uint64_t)v29);
      sub_1BAE73B40((uint64_t)v29);
      v20 = v29;
    }
    else
    {
      v29[0] = xmmword_1BB87FC90;
      sub_1BA560FA8();
      sub_1BB8740D4();
      v19 = v27;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v12);
      v31 = *(_QWORD *)&v28[0];
      v32 = BYTE8(v28[0]);
      sub_1BAE73B20((uint64_t)&v31);
      v20 = (__int128 *)&v31;
    }
    sub_1BA895BCC((uint64_t)v20, (uint64_t)v33);
  }
  else
  {
    v30 = xmmword_1BB87FC90;
    sub_1BAE73B60();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v12);
    sub_1BA896178(v29, (uint64_t)v28);
    sub_1BA896178(v28, (uint64_t)&v31);
    sub_1BAE73BA4((uint64_t)&v31);
    sub_1BA895BCC((uint64_t)&v31, (uint64_t)v33);
    v19 = v27;
  }
  sub_1BA895BCC((uint64_t)v33, v19);
  v23 = (uint64_t)v25;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1BA560F64()
{
  unint64_t result;

  result = qword_1ED3C9960;
  if (!qword_1ED3C9960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1548, &_s10CodingTypeON_171);
    atomic_store(result, (unint64_t *)&qword_1ED3C9960);
  }
  return result;
}

unint64_t sub_1BA560FA8()
{
  unint64_t result;

  result = qword_1ED3BF8B8;
  if (!qword_1ED3BF8B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentFilter, &type metadata for FormatImageAdjustmentFilter);
    atomic_store(result, (unint64_t *)&qword_1ED3BF8B8);
  }
  return result;
}

unint64_t sub_1BA560FEC()
{
  unint64_t result;

  result = qword_1ED3BF688;
  if (!qword_1ED3BF688)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend, &type metadata for FormatImageAdjustmentBlend);
    atomic_store(result, (unint64_t *)&qword_1ED3BF688);
  }
  return result;
}

uint64_t sub_1BA561030(_QWORD *a1)
{
  return FormatCornerRadius.RoundedValue.encode(to:)(a1);
}

uint64_t FormatCornerRadius.RoundedValue.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE8E238(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE8E130();
  v13 = sub_1BA4A2870(&qword_1ED3D0CF0, (uint64_t (*)(uint64_t))sub_1BAE8E130, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCornerRadius.RoundedValue, v14, v10, (uint64_t)&type metadata for FormatCornerRadius.RoundedValue, v12, (uint64_t)&type metadata for FormatVersions.StarSkyC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BC40);
  if (qword_1ED3C6D70 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v16, v15);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1EBD8(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE8E238);
}

void sub_1BA56122C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  FormatSwitchListValue.DefaultValue.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

void FormatSwitchListValue.DefaultValue.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = _s10CodingKeysOMa_40(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C5A30, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C59E0, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C59B8, v4);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_40);
}

uint64_t sub_1BA56161C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BA561624@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatComputedInvalidation.init(from:)(a1, a2);
}

uint64_t FormatComputedInvalidation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA561664(a1, (void (*)(uint64_t))sub_1BA5619C0, (uint64_t)&_s10CodingTypeON_109, (uint64_t)&unk_1E726B2B8, a2);
}

uint64_t sub_1BA561664@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int16 v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  unsigned __int8 v37;
  char v38;
  uint64_t v39;

  v32 = a2;
  v33 = a4;
  v39 = a3;
  v31 = a5;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v12 = v5;
  if (v5)
  {
LABEL_15:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v13 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  v16 = swift_bridgeObjectRelease();
  v17 = v11;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (unint64_t *)(v18 + 40);
      while (1)
      {
        v21 = *v20;
        if (*v20 >= 4)
          break;
        v20 += 2;
        if (!--v19)
          goto LABEL_7;
      }
      v27 = *(v20 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v28 = v27;
      *(_QWORD *)(v28 + 8) = v21;
      *(_QWORD *)(v28 + 16) = v13;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v27, v21);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      goto LABEL_15;
    }
LABEL_7:
    v16 = swift_bridgeObjectRelease();
  }
  v32(v16);
  v35 = 0uLL;
  sub_1BB8740D4();
  if ((v34 & 1) != 0)
  {
    v34 = xmmword_1BB87FC90;
    sub_1BA5A28CC();
    sub_1BB8740D4();
    v22 = v31;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    v23 = v35;
    v24 = v36;
    if (v38)
      v25 = 256;
    else
      v25 = 0;
    v26 = v25 | v37 | 0x8000;
  }
  else
  {
    sub_1BA655028(0);
    v35 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB8740D4();
    v22 = v31;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    v24 = 0;
    v26 = 0;
    *(_QWORD *)&v23 = v34;
  }
  *(_OWORD *)v22 = v23;
  *(_QWORD *)(v22 + 16) = v24;
  *(_WORD *)(v22 + 24) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5619C0()
{
  unint64_t result;

  result = qword_1ED3CB830;
  if (!qword_1ED3CB830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC108, &_s10CodingTypeON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3CB830);
  }
  return result;
}

uint64_t sub_1BA561A04()
{
  uint64_t v0;

  return sub_1BA561A20(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BA561A20(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v12[8];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[8];
  uint64_t v16;

  sub_1BA561D1C((uint64_t)a2, (uint64_t)v15);
  v5 = v16;
  if (v16 < 0)
  {
    v5 = v16 & 0x7FFFFFFFFFFFFFFFLL;
    v16 &= ~0x8000000000000000;
  }
  sub_1BA8C8E10(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6D78DC);
  sub_1BA8C8E10(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6D78DC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA561D1C((uint64_t)a2, (uint64_t)v12);
  if (v13 < 0)
    v13 &= ~0x8000000000000000;
  v6 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for FormatContent.Resolved();
  v8 = sub_1BA7B7244(v5, v6, *(_QWORD *)(a3 + *(int *)(v7 + 44)), a4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1BA561BA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[10];

  v17 = a5;
  v9 = type metadata accessor for FormatContent.Resolved();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA561D1C(a1, (uint64_t)v22);
  v18 = a2;
  v19 = v22;
  v20 = a3;
  v21 = a4;
  type metadata accessor for FormatPackageInventory();
  sub_1BB86EC14();
  sub_1BA4C2DD8(a3, (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  sub_1BA561D1C((uint64_t)v22, v13 + 16);
  sub_1BA5193C4((uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA8C8E10(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6D78DC);
  v14 = (void *)sub_1BB86E854();
  v15 = sub_1BB86E974();
  swift_release();
  swift_release();

  *v17 = v15;
}

uint64_t sub_1BA561D1C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy80_8(a2, a1);
  return a2;
}

uint64_t sub_1BA561D58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA561D74(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1BA561D74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v6 = type metadata accessor for FeedItem(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 8))(a1, a2, v7);
  FeedItem.identifier.getter();
  v11 = v10;
  v13 = v12;
  result = sub_1BA6DB314((uint64_t)v9);
  *a3 = v11;
  a3[1] = v13;
  return result;
}

uint64_t sub_1BA561E1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA561E38(a1, *(_QWORD *)(v1 + 16), (__int128 *)(v1 + 24));
}

uint64_t sub_1BA561E38(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11[9];

  FeedServiceFetchResult.groups.getter(a2);
  v4 = a3[7];
  v11[6] = a3[6];
  v11[7] = v4;
  v11[8] = a3[8];
  v5 = a3[3];
  v11[2] = a3[2];
  v11[3] = v5;
  v6 = a3[5];
  v11[4] = a3[4];
  v11[5] = v6;
  v7 = a3[1];
  v11[0] = *a3;
  v11[1] = v7;
  v9 = sub_1BA562064(v8, v11);
  swift_bridgeObjectRelease();
  return v9;
}

void FeedServiceFetchResult.groups.getter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  __asm { BR              X10 }
}

uint64_t sub_1BA561FA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA562064(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t AssociatedConformanceWitness;
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65[4];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  v3 = v2;
  v57 = *v3;
  v7 = *(_QWORD *)(v57 + class metadata base offset for FeedPluginManager);
  v6 = *(_QWORD *)(v57 + class metadata base offset for FeedPluginManager + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = v7;
  v56 = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v62 = AssociatedTypeWitness;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v64 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v63 = (char *)&v51 - v13;
  v14 = a2[7];
  v72 = a2[6];
  v73 = v14;
  v74 = a2[8];
  v15 = a2[3];
  v68 = a2[2];
  v69 = v15;
  v16 = a2[5];
  v70 = a2[4];
  v71 = v16;
  v17 = a2[1];
  v66 = *a2;
  v67 = v17;
  v18 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1BCCE37E4](v18, v9))
  {
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_42:
    v43 = MEMORY[0x1E0DEE9D8];
    v44 = v20[2];
    if (v44)
    {
      v65[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain_n();
      v45 = 0;
      do
      {
        v46 = v45 + 1;
        v47 = v20[v45 + 4];
        swift_retain();
        *(_QWORD *)&v75 = v47;
        v48 = sub_1BAF53854((uint64_t)&v75);
        swift_release();
        sub_1BB386330(v48);
        v45 = v46;
      }
      while (v44 != v46);
      swift_bridgeObjectRelease_n();
      sub_1BA865D48(0);
      *(_QWORD *)&v75 = v65[0];
      v49 = (void *)sub_1BB86E854();
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AAD80, (uint64_t (*)(uint64_t))sub_1BA865D48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAF54448();
      v50 = sub_1BB86E920();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v75 = v43;
      sub_1BA4B07F0(0, &qword_1ED3A10D8, (uint64_t (*)(uint64_t))sub_1BA5445C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      return sub_1BB86E9E0();
    }
    return v50;
  }
  v52 = v11;
  v58 = qword_1ED3A4A98;
  v54 = (_QWORD *)((char *)v3 + qword_1ED3A4AC0);
  swift_beginAccess();
  v19 = 0;
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v59 = a1;
  v60 = v10;
  v21 = (uint64_t)v64;
  v53 = v3;
  while (1)
  {
    v22 = sub_1BB872E80();
    sub_1BB872E38();
    if ((v22 & 1) == 0)
      break;
    result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v10 + 16))(v63, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, v9);
    v24 = __OFADD__(v19++, 1);
    if (v24)
      goto LABEL_49;
LABEL_5:
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v63, v9);
    swift_getAssociatedConformanceWitness();
    sub_1BB86DEE8();
    v25 = sub_1BB86F7FC();
    swift_bridgeObjectRelease();
    if (v25)
    {
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v25;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB3921AC(0, v20[2] + 1, 1, v20);
      v28 = v20[2];
      v27 = v20[3];
      if (v28 >= v27 >> 1)
        v20 = sub_1BB3921AC((_QWORD *)(v27 > 1), v28 + 1, 1, v20);
      v20[2] = v28 + 1;
      v20[v28 + 4] = v26;
      swift_release();
    }
    else
    {
      v81 = v72;
      v82 = v73;
      v83 = v74;
      v77 = v68;
      v78 = v69;
      v79 = v70;
      v80 = v71;
      v75 = v66;
      v76 = v67;
      sub_1BA562848(v21, &v75, v65);
      v29 = v65[0];
      if ((~v65[0] & 0xF000000000000007) != 0)
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_1BB3921AC(0, v20[2] + 1, 1, v20);
        v40 = v20[2];
        v39 = v20[3];
        if (v40 >= v39 >> 1)
          v20 = sub_1BB3921AC((_QWORD *)(v39 > 1), v40 + 1, 1, v20);
        v20[2] = v40 + 1;
        v20[v40 + 4] = v29;
        sub_1BAB05D50(v29);
        goto LABEL_28;
      }
      v30 = *v54;
      v31 = type metadata accessor for FeedPluginManager.FactoryWrapper(0, v55, v56, *(_QWORD *)(class metadata base offset for FeedPluginManager + v57 + 16));
      v32 = swift_bridgeObjectRetain();
      if (!MEMORY[0x1BCCE37E4](v32, v31))
      {
        swift_bridgeObjectRelease();
        a1 = v59;
        goto LABEL_29;
      }
      v33 = 4;
      while (1)
      {
        v34 = v33 - 4;
        v35 = sub_1BB872E80();
        sub_1BB872E38();
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(v30 + 8 * v33);
          result = swift_retain();
          v37 = v33 - 3;
          if (__OFADD__(v34, 1))
            goto LABEL_48;
        }
        else
        {
          result = sub_1BB873D08();
          v36 = result;
          v37 = v33 - 3;
          if (__OFADD__(v34, 1))
          {
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
        }
        v81 = v72;
        v82 = v73;
        v83 = v74;
        v77 = v68;
        v78 = v69;
        v79 = v70;
        v80 = v71;
        v75 = v66;
        v76 = v67;
        (*(void (**)(unint64_t *__return_ptr, char *, __int128 *))(v36 + 16))(v65, v64, &v75);
        v38 = v65[0];
        if ((~v65[0] & 0xF000000000000007) != 0)
          break;
        swift_release();
        ++v33;
        if (v37 == MEMORY[0x1BCCE37E4](v30, v31))
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB3921AC(0, v20[2] + 1, 1, v20);
      v42 = v20[2];
      v41 = v20[3];
      if (v42 >= v41 >> 1)
        v20 = sub_1BB3921AC((_QWORD *)(v41 > 1), v42 + 1, 1, v20);
      v20[2] = v42 + 1;
      v20[v42 + 4] = v38;
      swift_release();
      sub_1BAB05D50(v38);
    }
LABEL_11:
    a1 = v59;
LABEL_28:
    v10 = v60;
    v21 = (uint64_t)v64;
LABEL_29:
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v9);
    if (v19 == MEMORY[0x1BCCE37E4](a1, v9))
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
  result = sub_1BB873D08();
  if (v52 != 8)
    goto LABEL_50;
  *(_QWORD *)&v75 = result;
  (*(void (**)(char *, __int128 *, uint64_t))(v10 + 16))(v63, &v75, v9);
  result = swift_unknownObjectRelease();
  v24 = __OFADD__(v19++, 1);
  if (!v24)
    goto LABEL_5;
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedPluginManager.FactoryWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedPluginManager.FactoryWrapper);
}

uint64_t sub_1BA5627DC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[9];

  v3 = *(_QWORD *)(v2 + 32);
  v4 = a2[7];
  v9[6] = a2[6];
  v9[7] = v4;
  v9[8] = a2[8];
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v6 = a2[5];
  v9[4] = a2[4];
  v9[5] = v6;
  v7 = a2[1];
  v9[0] = *a2;
  v9[1] = v7;
  return (*(uint64_t (**)(uint64_t, _OWORD *))(v3 + 24))(a1, v9);
}

uint64_t sub_1BA562848@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  _OWORD v35[10];

  v33 = a1;
  v34 = a3;
  v5 = *v3;
  sub_1BA4A3FB4(0, &qword_1ED39F908, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  v9 = type metadata accessor for FormatContent.Resolved();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2[7];
  v35[6] = a2[6];
  v35[7] = v13;
  v35[8] = a2[8];
  v14 = a2[3];
  v35[2] = a2[2];
  v35[3] = v14;
  v15 = a2[5];
  v35[4] = a2[4];
  v35[5] = v15;
  v16 = a2[1];
  v35[0] = *a2;
  v35[1] = v16;
  v17 = *(_QWORD *)(v5 + 96);
  v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  swift_getAssociatedTypeWitness();
  v19 = v33;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18(AssociatedTypeWitness, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    result = sub_1BA502AD0((uint64_t)v8, &qword_1ED39F908, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
LABEL_6:
    v31 = 0xF000000000000007;
    goto LABEL_7;
  }
  sub_1BA562B24((uint64_t)v8, (uint64_t)v12);
  v22 = v32;
  v23 = *(_QWORD *)(v32 + 56);
  ObjectType = swift_getObjectType();
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 56))(v12, ObjectType, v23);
  MEMORY[0x1E0C80A78](v25);
  *(&v32 - 4) = v22;
  *(&v32 - 3) = v19;
  *(&v32 - 2) = (uint64_t)v35;
  v26 = *(_QWORD *)&v12[*(int *)(v9 + 32)];
  MEMORY[0x1E0C80A78](v27);
  *(&v32 - 4) = (uint64_t)v12;
  *(&v32 - 3) = (uint64_t)sub_1BB05144C;
  *(&v32 - 2) = v28;
  swift_bridgeObjectRetain();
  v29 = sub_1BA7F3AFC((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BA7F42F0, (uint64_t)(&v32 - 6), v26);
  swift_bridgeObjectRelease();
  v30 = v29[2];
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (!v30)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v29;
  v31 = result | 0x8000000000000000;
LABEL_7:
  *v34 = v31;
  return result;
}

uint64_t _s8ResolvedVwet_1()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA562B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContent.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s8NewsFeed06FormatB5GroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for FormatFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v20 - v8);
  v11 = *(int *)(v10 + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  if (v12 == *v14 && v13 == v14[1])
  {
    sub_1BA4C2DD8(a1, (uint64_t)&v20 - v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
    sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
  }
  else
  {
    v16 = sub_1BB874398();
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
    sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
    if ((v16 & 1) == 0)
    {
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
      return 0;
    }
  }
  v18 = *v9;
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
  v19 = *v6;
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
  return v18 == v19;
}

uint64_t sub_1BA562CC4(_QWORD *a1)
{
  return FormatEdgeInsets.encode(to:)(a1);
}

uint64_t FormatEdgeInsets.encode(to:)(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - v12;
  sub_1BAE8F5E4(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v17 = v1[1];
  v20 = v1[2];
  v19 = v1[3];
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BAE8F4DC();
  v24 = sub_1BA4A2870(&qword_1ED3D0C20, (uint64_t (*)(uint64_t))sub_1BAE8F4DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatEdgeInsets, v25, v21, (uint64_t)&type metadata for FormatEdgeInsets, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v16, v24, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v26 = sub_1BB86EB84();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v28(v13, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1FF4C(0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0, v18);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v28(v10, v27, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1FF4C(1, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0, v17);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
    v29 = (uint64_t)v34;
    v28(v34, v27, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1FF4C(2, 0, 0, v29, (uint64_t)sub_1BA90CF04, 0, v20);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    v30 = (uint64_t)v33;
    v28(v33, v27, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1FF4C(3, 0, 0, v30, (uint64_t)sub_1BA90CF04, 0, v19);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAE8F5E4);
}

char *sub_1BA563078(double a1, double a2, double a3, double a4)
{
  return HeadlineView.init(frame:)(a1, a2, a3, a4);
}

char *HeadlineView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  objc_super v34;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = qword_1ED3B3808;
  v12 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0x50);
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v14 = v5;
  *(_QWORD *)((char *)v5 + v11) = objc_msgSend(v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = qword_1ED3B3810;
  *(_QWORD *)((char *)v14 + v15) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = qword_1ED3B3820;
  *(_QWORD *)((char *)v14 + v16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = qword_1ED3B3830;
  *(_QWORD *)((char *)v14 + v17) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = qword_1ED3B3800;
  v19 = (objc_class *)sub_1BB87171C();
  *(_QWORD *)((char *)v14 + v18) = objc_msgSend(objc_allocWithZone(v19), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = qword_1ED3B3828;
  *(_QWORD *)((char *)v14 + v20) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = qword_1ED3B3818;
  *(_QWORD *)((char *)v14 + v21) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v22 = qword_1ED3B37F8;
  *(_QWORD *)((char *)v14 + v22) = objc_msgSend(objc_allocWithZone(v19), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v34.receiver = v14;
  v34.super_class = ObjectType;
  v23 = (char *)objc_msgSendSuper2(&v34, sel_initWithFrame_, a1, a2, a3, a4);
  v24 = *(_QWORD *)&v23[qword_1ED3B3810];
  v25 = v23;
  objc_msgSend(v25, sel_addSubview_, v24);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[qword_1ED3B3820]);
  v26 = *(void **)&v25[qword_1ED3B3808];
  objc_msgSend(v25, sel_addSubview_, v26);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[qword_1ED3B3830]);
  v27 = qword_1ED3B3800;
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[qword_1ED3B3800]);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[qword_1ED3B3828]);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[qword_1ED3B3818]);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[qword_1ED3B37F8]);
  objc_msgSend(v26, sel_setContentMode_, 4);
  objc_msgSend(v26, sel_setAccessibilityIgnoresInvertColors_, 1);
  sub_1BA99C424();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v28 + 56) = v12;
  *(_QWORD *)(v28 + 32) = v26;
  v29 = v25;
  v30 = v26;
  v31 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAutomationElements_, v31);

  v32 = *(id *)&v25[v27];
  objc_msgSend(v32, sel_setAccessibilityIgnoresInvertColors_, 1);

  return v29;
}

uint64_t type metadata accessor for DebugButton()
{
  return objc_opt_self();
}

void sub_1BA563554()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0A50)
  {
    v0 = sub_1BB871374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0A50);
  }
}

uint64_t sub_1BA5635AC(_QWORD *a1)
{
  return FormatOptionBinding.encode(to:)(a1);
}

uint64_t sub_1BA5635C0()
{
  sub_1BA563668();
  return sub_1BB872D0C();
}

uint64_t sub_1BA56360C()
{
  sub_1BA563668();
  return sub_1BB872D60();
}

unint64_t sub_1BA563668()
{
  unint64_t result;

  result = qword_1ED3C8C38;
  if (!qword_1ED3C8C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0848, &_s10CodingTypeON_178);
    atomic_store(result, (unint64_t *)&qword_1ED3C8C38);
  }
  return result;
}

uint64_t sub_1BA5636AC@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(uint64_t, uint64_t, char *)@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v13[24];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D58C8);
  result = sub_1BB86DF48();
  if (v15)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3B0800);
    result = sub_1BB86DF48();
    if (v14)
    {
      v10 = a2(0);
      swift_allocObject();
      v11 = a3(v15, v16, v13);
      result = swift_unknownObjectRelease();
      a5[3] = v10;
      a5[4] = a4;
      *a5 = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA5637E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[5];
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5E80);
  result = sub_1BB86DF48();
  if (v24)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3B0800);
    result = sub_1BB86DF48();
    if (v22[3])
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      v10 = *v8;
      v11 = type metadata accessor for SportsDataConfigurationService();
      v21[3] = v11;
      v21[4] = &off_1E727F5F8;
      v21[0] = v10;
      v12 = type metadata accessor for SportsDataConfigurationManager();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
      v15 = MEMORY[0x1E0C80A78](v14);
      v17 = (_QWORD *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
      v19 = sub_1BB46C868(*v17, v22, v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      a2[3] = v12;
      a2[4] = &off_1E72E49B8;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA5639E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void (*v7)(_BYTE *, uint64_t, uint64_t);
  void (*v8)(_BYTE *, uint64_t);
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t);
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  void (*v14)(_BYTE *, uint64_t);
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  _BYTE v20[4];
  unsigned int v21;
  void (*v22)(_BYTE *, uint64_t);
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  void (*v24)(_BYTE *);
  unsigned int v25;
  _BYTE *v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;

  v27 = sub_1BB86DFCC();
  v0 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = sub_1BB86E7E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB86E104();
  type metadata accessor for FeedFontManager();
  sub_1BB86E5D8();
  swift_release();
  v6 = *MEMORY[0x1E0DB4A18];
  v7 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4980);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4030);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39D8);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, *MEMORY[0x1E0DB4A00], v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4C40);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D58C0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5DA0);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5E70);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3CCD70);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5E98);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5180);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  v21 = v6;
  v23 = v7;
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  v22 = v8;
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D53A8);
  sub_1BB86E5E4();
  swift_release();
  v7(v5, v6, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v28, v29);
  sub_1BB86E4DC();
  v25 = *MEMORY[0x1E0DB36E0];
  v24 = *(void (**)(_BYTE *))(v0 + 104);
  v9 = v26;
  v10 = v27;
  v24(v26);
  sub_1BB86E68C();
  v11 = *(void (**)(_BYTE *, uint64_t))(v0 + 8);
  v11(v9, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  sub_1BB86E104();
  sub_1BA4EFE00(0, &qword_1ED3D5C50);
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for LocationDetectionManager();
  sub_1BB86DCC0();
  swift_release();
  v12 = v21;
  v13 = v23;
  v23(v5, v21, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v14 = v22;
  v22(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D51D8);
  sub_1BB86E5E4();
  swift_release();
  v13(v5, v12, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v14(v5, v2);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5F70);
  sub_1BB86E5E4();
  swift_release();
  v13(v5, v12, v2);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v14(v5, v2);
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v16 = v26;
  v15 = v27;
  v17 = v25;
  v18 = (void (*)(_BYTE *, uint64_t, uint64_t))v24;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v24)(v26, v25, v27);
  sub_1BB86E68C();
  v11(v16, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v18(v16, v17, v15);
  sub_1BB86E68C();
  v11(v16, v15);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_1BA5643C4(_QWORD *a1)
{
  return FormatItemTrait.encode(to:)(a1);
}

uint64_t FormatItemTrait.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  void (*v111)(char *, uint64_t, uint64_t);
  _QWORD v113[52];
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v113[50] = (char *)v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v113[49] = (char *)v113 - v6;
  MEMORY[0x1E0C80A78](v7);
  v113[48] = (char *)v113 - v8;
  MEMORY[0x1E0C80A78](v9);
  v113[47] = (char *)v113 - v10;
  MEMORY[0x1E0C80A78](v11);
  v113[46] = (char *)v113 - v12;
  MEMORY[0x1E0C80A78](v13);
  v113[45] = (char *)v113 - v14;
  MEMORY[0x1E0C80A78](v15);
  v113[44] = (char *)v113 - v16;
  MEMORY[0x1E0C80A78](v17);
  v113[43] = (char *)v113 - v18;
  MEMORY[0x1E0C80A78](v19);
  v113[42] = (char *)v113 - v20;
  MEMORY[0x1E0C80A78](v21);
  v113[41] = (char *)v113 - v22;
  MEMORY[0x1E0C80A78](v23);
  v113[40] = (char *)v113 - v24;
  MEMORY[0x1E0C80A78](v25);
  v113[39] = (char *)v113 - v26;
  MEMORY[0x1E0C80A78](v27);
  v113[38] = (char *)v113 - v28;
  MEMORY[0x1E0C80A78](v29);
  v113[37] = (char *)v113 - v30;
  MEMORY[0x1E0C80A78](v31);
  v113[36] = (char *)v113 - v32;
  MEMORY[0x1E0C80A78](v33);
  v113[35] = (char *)v113 - v34;
  MEMORY[0x1E0C80A78](v35);
  v113[34] = (char *)v113 - v36;
  MEMORY[0x1E0C80A78](v37);
  v113[33] = (char *)v113 - v38;
  MEMORY[0x1E0C80A78](v39);
  v113[32] = (char *)v113 - v40;
  MEMORY[0x1E0C80A78](v41);
  v113[31] = (char *)v113 - v42;
  MEMORY[0x1E0C80A78](v43);
  v113[30] = (char *)v113 - v44;
  MEMORY[0x1E0C80A78](v45);
  v113[29] = (char *)v113 - v46;
  MEMORY[0x1E0C80A78](v47);
  v113[28] = (char *)v113 - v48;
  MEMORY[0x1E0C80A78](v49);
  v113[27] = (char *)v113 - v50;
  MEMORY[0x1E0C80A78](v51);
  v113[26] = (char *)v113 - v52;
  MEMORY[0x1E0C80A78](v53);
  v113[25] = (char *)v113 - v54;
  MEMORY[0x1E0C80A78](v55);
  v113[24] = (char *)v113 - v56;
  MEMORY[0x1E0C80A78](v57);
  v113[23] = (char *)v113 - v58;
  MEMORY[0x1E0C80A78](v59);
  v113[22] = (char *)v113 - v60;
  MEMORY[0x1E0C80A78](v61);
  v113[21] = (char *)v113 - v62;
  MEMORY[0x1E0C80A78](v63);
  v113[20] = (char *)v113 - v64;
  MEMORY[0x1E0C80A78](v65);
  v113[19] = (char *)v113 - v66;
  MEMORY[0x1E0C80A78](v67);
  v113[18] = (char *)v113 - v68;
  MEMORY[0x1E0C80A78](v69);
  v113[16] = (char *)v113 - v70;
  MEMORY[0x1E0C80A78](v71);
  v113[14] = (char *)v113 - v72;
  MEMORY[0x1E0C80A78](v73);
  v113[13] = (char *)v113 - v74;
  MEMORY[0x1E0C80A78](v75);
  v113[17] = (char *)v113 - v76;
  MEMORY[0x1E0C80A78](v77);
  v113[15] = (char *)v113 - v78;
  MEMORY[0x1E0C80A78](v79);
  v113[12] = (char *)v113 - v80;
  MEMORY[0x1E0C80A78](v81);
  v113[11] = (char *)v113 - v82;
  MEMORY[0x1E0C80A78](v83);
  v113[10] = (char *)v113 - v84;
  MEMORY[0x1E0C80A78](v85);
  v113[9] = (char *)v113 - v86;
  MEMORY[0x1E0C80A78](v87);
  v113[8] = (char *)v113 - v88;
  MEMORY[0x1E0C80A78](v89);
  v113[7] = (char *)v113 - v90;
  MEMORY[0x1E0C80A78](v91);
  v113[6] = (char *)v113 - v92;
  MEMORY[0x1E0C80A78](v93);
  v113[5] = (char *)v113 - v94;
  MEMORY[0x1E0C80A78](v95);
  v113[4] = (char *)v113 - v96;
  MEMORY[0x1E0C80A78](v97);
  v113[3] = (char *)v113 - v98;
  MEMORY[0x1E0C80A78](v99);
  v113[2] = (char *)v113 - v100;
  MEMORY[0x1E0C80A78](v101);
  MEMORY[0x1E0C80A78](v102);
  v104 = (char *)v113 - v103;
  v105 = *v1;
  v113[51] = a1;
  v114 = v105;
  v106 = a1[3];
  v107 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v106);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v108 = sub_1BB86EB84();
  v109 = __swift_project_value_buffer(v108, (uint64_t)qword_1ED476C20);
  v110 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
  v110(v104, v109, v108);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v111 = v115;
  sub_1BA69F160((uint64_t)v104, (uint64_t)sub_1BA90CF04, 0, v106, v107);
  if (!v111)
  {
    v113[1] = v108;
    v115 = v110;
    sub_1BA4A2E80((uint64_t)v104, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v104, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatItemTrait.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5665A4 + 4 * word_1BB93908C[*v0]))(1835365481, 0xE400000000000000);
}

uint64_t sub_1BA5665A4()
{
  return 7364967;
}

uint64_t sub_1BA5665B4()
{
  return 0x69616E626D756874;
}

uint64_t sub_1BA5665D4()
{
  return 0x6F65646976;
}

uint64_t sub_1BA5665E8()
{
  return 0x656E696C66666FLL;
}

uint64_t sub_1BA566600()
{
  return 0x6465727574616566;
}

uint64_t sub_1BA566618()
{
  return 0x7265766F63;
}

uint64_t sub_1BA56662C()
{
  return 0x656E696C64616568;
}

uint64_t sub_1BA566644()
{
  return 0x7469617274726F70;
}

uint64_t sub_1BA56665C()
{
  return 0x70616373646E616CLL;
}

uint64_t sub_1BA56667C()
{
  return 0x657261757173;
}

uint64_t sub_1BA566690()
{
  return 6448503;
}

uint64_t sub_1BA5666A0()
{
  return 0x7373656363416F6ELL;
}

uint64_t sub_1BA5666B8()
{
  return 25697;
}

unint64_t sub_1BA5666C4()
{
  return 0xD000000000000011;
}

_QWORD *initializeWithCopy for FormatOptionEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA566B1C()
{
  sub_1BA566BC4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA566B68()
{
  sub_1BA566BC4();
  return sub_1BB872D60();
}

unint64_t sub_1BA566BC4()
{
  unint64_t result;

  result = qword_1ED3CA388;
  if (!qword_1ED3CA388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B63B8, &_s10CodingTypeON_122);
    atomic_store(result, (unint64_t *)&qword_1ED3CA388);
  }
  return result;
}

uint64_t sub_1BA566C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  void (*v6)(char *, uint64_t);
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  _QWORD v17[3];
  uint64_t v18;

  v0 = sub_1BB86DFCC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  v4 = *MEMORY[0x1E0DB36E0];
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1BB86E698();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v5(v3, v4, v0);
  sub_1BB86E698();
  v6(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v5(v3, v4, v0);
  sub_1BB86E698();
  v6(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v5(v3, v4, v0);
  sub_1BB86E698();
  v6(v3, v0);
  v16 = v6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v5(v3, v4, v0);
  sub_1BB86E698();
  v6(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  type metadata accessor for LiveActivityCommandHandler();
  v5(v3, v4, v0);
  sub_1BB86E68C();
  v7 = v16;
  v16(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v15 = v5;
  v5(v3, v4, v0);
  sub_1BB86E698();
  v7(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v8 = v4;
  v5(v3, v4, v0);
  sub_1BB86E698();
  v9 = v16;
  v16(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v10 = v8;
  v11 = v8;
  v12 = v15;
  v15(v3, v11, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v12(v3, v10, v0);
  sub_1BB86E698();
  v9(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_1BA567698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v0 = sub_1BB86EB84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C6D08 != -1)
    swift_once();
  v4 = *(_QWORD *)(qword_1ED4769B8 + 16);
  if (v4)
  {
    v5 = qword_1ED4769B8 + 32;
    v23 = qword_1ED4769B8;
    swift_bridgeObjectRetain_n();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v7 = &qword_1ED3C6000;
    v8 = qword_1ED476B48;
    v24 = 0x80000001BB99DB20;
    v25 = v1;
    do
    {
      sub_1BA4C010C(v5, (uint64_t)v28);
      v9 = v29;
      v10 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      if (v7[416] != -1)
        swift_once();
      __swift_project_value_buffer(v0, (uint64_t)v8);
      sub_1BA5DB598();
      v11 = sub_1BB87291C();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if ((v11 & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      }
      else
      {
        v12 = v8;
        v26 = 0;
        v27 = 0xE000000000000000;
        sub_1BB873CB4();
        swift_bridgeObjectRelease();
        v26 = 0xD000000000000017;
        v27 = v24;
        v13 = v29;
        v14 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
        sub_1BB872A0C();
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v15);
        swift_bridgeObjectRelease();
        v16 = v26;
        v17 = v27;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1BA6EA0D0(0, v6[2] + 1, 1, v6);
        v19 = v6[2];
        v18 = v6[3];
        if (v19 >= v18 >> 1)
          v6 = sub_1BA6EA0D0((_QWORD *)(v18 > 1), v19 + 1, 1, v6);
        v6[2] = v19 + 1;
        v20 = &v6[2 * v19];
        v20[4] = v16;
        v20[5] = v17;
        v7 = &qword_1ED3C6000;
        v8 = v12;
        v1 = v25;
      }
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v21 = sub_1BA6E43EC((uint64_t)v6);
  result = swift_bridgeObjectRelease();
  qword_1ED476C98 = v21;
  return result;
}

uint64_t sub_1BA56796C(_QWORD *a1)
{
  return FormatLocalization.encode(to:)(a1);
}

uint64_t FormatLocalization.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v29 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  sub_1BAE78FF8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  v31 = v1[6];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE78EF0();
  v18 = sub_1BA4A2870(&qword_1ED3D0D30, (uint64_t (*)(uint64_t))sub_1BAE78EF0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLocalization, v19, v15, (uint64_t)&type metadata for FormatLocalization, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  v20 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = v33;
  sub_1BAD265E8(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE51354, (uint64_t (*)(uint64_t))sub_1BAE79070, &qword_1ED3AE860);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v25 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    v23((char *)v25, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    v26 = (uint64_t)v32;
    v23(v32, v22, v21);
    swift_storeEnumTagMultiPayload();
    v27 = swift_bridgeObjectRetain();
    sub_1BAD1E904(v27, 3, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE78FF8);
}

unint64_t sub_1BA567CE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF20;
  if (!qword_1ED39BF20)
  {
    sub_1BA4AD288(255, &qword_1ED3B9570, (uint64_t)&type metadata for FormatLocalizationString, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA826C20();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF20);
  }
  return result;
}

uint64_t sub_1BA567D58@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatIssueCoverNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatIssueCoverNodeStyle.Selector.init(from:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  __int128 *v54;
  int v55;
  __int16 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  __int128 v67;
  char v68;
  _BYTE v69[7];

  v3 = v2;
  v54 = a2;
  sub_1BAE7A174();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  sub_1BAE7A1EC();
  sub_1BA4A2870(&qword_1ED3AD958, (uint64_t (*)(uint64_t))sub_1BAE7A1EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_11:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  v15 = v9;
  v10 = a1;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_8;
      }
      v54 = a1;
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v23 = v13;
      MEMORY[0x1E0C80A78](v22);
      sub_1BAE7A26C();
      sub_1BA568618();
      sub_1BAE7A2B0();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E7252D80);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v20;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v26 = v21;
      v10 = v54;
      sub_1BA69C828(v20, v26, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v14);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v57 = 0uLL;
  LOBYTE(v58) = 0;
  sub_1BB8740D4();
  v19 = v67;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v57 = xmmword_1BB8A1A10;
  LOBYTE(v58) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v28 = v67;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v57 = xmmword_1BB8D2D60;
  LOBYTE(v58) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v29 = v67;
  v67 = xmmword_1BB8D2D70;
  v68 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v52 = v57;
  v53 = v58;
  v67 = xmmword_1BB8D2D90;
  v68 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v45 = v57;
  v46 = v58;
  v47 = v59;
  v48 = v60;
  v49 = v61;
  v50 = v62;
  v51 = v63;
  v44 = v64;
  v43 = v65;
  v42 = v66;
  v57 = xmmword_1BB8D2D80;
  LOBYTE(v58) = 0;
  HIDWORD(v39) = sub_1BB874038();
  v40 = v29;
  v41 = v28;
  sub_1BA4AD288(0, &qword_1ED3A08A0, (uint64_t)&type metadata for FormatIssueCoverTraits, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v57 = xmmword_1BB8D2DA0;
  LOBYTE(v58) = 0;
  sub_1BA5685A0();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v6);
  v30 = v67;
  v31 = v54;
  *v54 = v19;
  v32 = v40;
  *((_QWORD *)v31 + 2) = v41;
  *((_QWORD *)v31 + 3) = v32;
  v33 = *((_QWORD *)&v52 + 1);
  *((_QWORD *)v31 + 4) = v52;
  *((_QWORD *)v31 + 5) = v33;
  *((_BYTE *)v31 + 48) = v53;
  *(_DWORD *)((char *)v31 + 49) = *(_DWORD *)v69;
  *((_DWORD *)v31 + 13) = *(_DWORD *)&v69[3];
  v34 = *((_QWORD *)&v45 + 1);
  *((_QWORD *)v31 + 7) = v45;
  *((_QWORD *)v31 + 8) = v34;
  v35 = v47;
  *((_QWORD *)v31 + 9) = v46;
  *((_QWORD *)v31 + 10) = v35;
  v36 = v49;
  *((_QWORD *)v31 + 11) = v48;
  *((_QWORD *)v31 + 12) = v36;
  v37 = v51;
  *((_QWORD *)v31 + 13) = v50;
  *((_QWORD *)v31 + 14) = v37;
  v38 = v43;
  *((_QWORD *)v31 + 15) = v44;
  *((_QWORD *)v31 + 16) = v38;
  *((_BYTE *)v31 + 136) = v42;
  *((_BYTE *)v31 + 137) = BYTE4(v39);
  *((_WORD *)v31 + 71) = v56;
  *(_DWORD *)((char *)v31 + 138) = v55;
  *((_QWORD *)v31 + 18) = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA5685A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A08B0;
  if (!qword_1ED3A08B0)
  {
    sub_1BA4AD288(255, &qword_1ED3A08A0, (uint64_t)&type metadata for FormatIssueCoverTraits, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82A1E0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A08B0);
  }
  return result;
}

unint64_t sub_1BA568618()
{
  unint64_t result;

  result = qword_1ED3A76B8;
  if (!qword_1ED3A76B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFAE0, &_s10CodingKeysON_212);
    atomic_store(result, (unint64_t *)&qword_1ED3A76B8);
  }
  return result;
}

uint64_t sub_1BA56865C(_QWORD *a1)
{
  return FormatContentSizeCategory.encode(to:)(a1);
}

uint64_t FormatContentSizeCategory.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[15];
  uint64_t v44;
  int v45;

  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v3);
  v43[14] = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43[13] = (char *)v43 - v6;
  MEMORY[0x1E0C80A78](v7);
  v43[12] = (char *)v43 - v8;
  MEMORY[0x1E0C80A78](v9);
  v43[11] = (char *)v43 - v10;
  MEMORY[0x1E0C80A78](v11);
  v43[10] = (char *)v43 - v12;
  MEMORY[0x1E0C80A78](v13);
  v43[9] = (char *)v43 - v14;
  v15 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v15);
  v43[8] = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v43[7] = (char *)v43 - v18;
  MEMORY[0x1E0C80A78](v19);
  v43[6] = (char *)v43 - v20;
  MEMORY[0x1E0C80A78](v21);
  v43[5] = (char *)v43 - v22;
  MEMORY[0x1E0C80A78](v23);
  v43[4] = (char *)v43 - v24;
  MEMORY[0x1E0C80A78](v25);
  v43[3] = (char *)v43 - v26;
  MEMORY[0x1E0C80A78](v27);
  v43[2] = (char *)v43 - v28;
  MEMORY[0x1E0C80A78](v29);
  v43[1] = (char *)v43 - v30;
  MEMORY[0x1E0C80A78](v31);
  v43[0] = (char *)v43 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v43 - v34;
  v45 = *v1;
  v36 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v38 = sub_1BB86EB84();
  v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v39, v38);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v44;
  sub_1BA69F160((uint64_t)v35, (uint64_t)sub_1BA90CF04, 0, v36, v37);
  if (!v41)
  {
    v44 = v40;
    sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X10 }
  }
  return sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
}

unint64_t sub_1BA5690F0()
{
  unint64_t result;

  result = qword_1ED3A2BA8;
  if (!qword_1ED3A2BA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910EDC, &type metadata for FormatContentSizeCategory.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2BA8);
  }
  return result;
}

uint64_t sub_1BA569134(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatEquation.encode(to:)(a1, a2, a3, a4);
}

uint64_t FeedGroupEmitter.__deallocating_deinit()
{
  FeedGroupEmitter.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedGroupEmitter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BA5691DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatGroupNodeMaskStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatGroupNodeMaskStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;
  __int128 v60;
  char v61;
  _BYTE v62[7];

  v3 = v2;
  v53 = a2;
  sub_1BAE97174();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE971EC();
  sub_1BA4A2870(&qword_1ED3D1130, (uint64_t (*)(uint64_t))sub_1BAE971EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v10 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v20 = v12;
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *(_QWORD *)&v41[-32] = &_s10CodingKeysON_122;
      *(_QWORD *)&v41[-24] = sub_1BAE9726C();
      v39 = sub_1BA5697D0();
      v40 = sub_1BAE972B0();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726BE88);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v14, v13);
      a1 = v52;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v54 = 0uLL;
  LOBYTE(v55) = 0;
  sub_1BB8740D4();
  v19 = *((_QWORD *)&v60 + 1);
  v18 = v60;
  v60 = xmmword_1BB8A1A10;
  v61 = 0;
  sub_1BA56978C();
  sub_1BB874068();
  v45 = v18;
  v48 = v12;
  v27 = *((_QWORD *)&v54 + 1);
  v46 = v54;
  v28 = *((_QWORD *)&v55 + 1);
  v47 = v55;
  v29 = *((_QWORD *)&v56 + 1);
  v51 = v57;
  v49 = v56;
  v50 = *((_QWORD *)&v57 + 1);
  v30 = v58;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v54 = xmmword_1BB8D2D60;
  LOBYTE(v55) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v42 = v30;
  v43 = v28;
  v44 = v29;
  v31 = v60;
  v60 = xmmword_1BB8D2D70;
  v61 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  a1 = v52;
  (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v14, v13);
  v32 = v59;
  v33 = v53;
  *v53 = v45;
  v33[1] = v19;
  v33[2] = v46;
  v33[3] = v27;
  v34 = v43;
  v33[4] = v47;
  v33[5] = v34;
  v35 = v44;
  v33[6] = v49;
  v33[7] = v35;
  v36 = v50;
  v33[8] = v51;
  v33[9] = v36;
  *((_BYTE *)v33 + 80) = v42;
  *(_DWORD *)((char *)v33 + 81) = *(_DWORD *)v62;
  *((_DWORD *)v33 + 21) = *(_DWORD *)&v62[3];
  v33[11] = v31;
  v37 = v55;
  *((_OWORD *)v33 + 6) = v54;
  *((_OWORD *)v33 + 7) = v37;
  v38 = v57;
  *((_OWORD *)v33 + 8) = v56;
  *((_OWORD *)v33 + 9) = v38;
  *((_OWORD *)v33 + 10) = v58;
  *((_BYTE *)v33 + 176) = v32;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA56978C()
{
  unint64_t result;

  result = qword_1ED3BEF20;
  if (!qword_1ED3BEF20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeMaskPath, &type metadata for FormatGroupNodeMaskPath);
    atomic_store(result, (unint64_t *)&qword_1ED3BEF20);
  }
  return result;
}

unint64_t sub_1BA5697D0()
{
  unint64_t result;

  result = qword_1ED3CAAA0;
  if (!qword_1ED3CAAA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA898, &_s10CodingKeysON_122);
    atomic_store(result, (unint64_t *)&qword_1ED3CAAA0);
  }
  return result;
}

uint64_t sub_1BA569814@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPublisherLogoSize.init(from:)(a1, a2);
}

uint64_t FormatPublisherLogoSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;

  v3 = v2;
  v28 = a2;
  sub_1BAEAFB44();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEAFBBC();
  sub_1BA4A2870(&qword_1ED3D10B0, (uint64_t (*)(uint64_t))sub_1BAEAFBBC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v28 = v13;
      v21 = *((_QWORD *)v18 - 2);
      v22 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_71;
      *(&v28 - 3) = sub_1BAEAFC3C();
      *(&v28 - 2) = sub_1BA569BCC();
      *(&v28 - 1) = sub_1BAEAFC80();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726D920);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v6);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA569C10();
  v29 = 0uLL;
  v30 = 0;
  sub_1BB8740D4();
  v19 = v31;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA569C54();
  sub_1BB8740D4();
  v26 = v31;
  v29 = xmmword_1BB8D2D60;
  v30 = 0;
  sub_1BA5B4E4C();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v27 = v31;
  *(_BYTE *)v12 = v19;
  *(_QWORD *)(v12 + 8) = v26;
  *(_BYTE *)(v12 + 16) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA569BCC()
{
  unint64_t result;

  result = qword_1ED3CA4F8;
  if (!qword_1ED3CA4F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7C60, &_s10CodingKeysON_71);
    atomic_store(result, (unint64_t *)&qword_1ED3CA4F8);
  }
  return result;
}

unint64_t sub_1BA569C10()
{
  unint64_t result;

  result = qword_1ED3B8580;
  if (!qword_1ED3B8580)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizeBinding, &type metadata for FormatPublisherLogoSizeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B8580);
  }
  return result;
}

unint64_t sub_1BA569C54()
{
  unint64_t result;

  result = qword_1ED3B7B78;
  if (!qword_1ED3B7B78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizing, &type metadata for FormatPublisherLogoSizing);
    atomic_store(result, (unint64_t *)&qword_1ED3B7B78);
  }
  return result;
}

_QWORD *sub_1BA569C98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

uint64_t sub_1BA569D08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorComponentExpression.init(from:)(a1, a2);
}

uint64_t FormatColorComponentExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;

  v3 = v2;
  v28 = a2;
  sub_1BAE891F0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE89268();
  sub_1BA4A2870(&qword_1ED3ABF38, (uint64_t (*)(uint64_t))sub_1BAE89268, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v28 = v13;
      v21 = *((_QWORD *)v18 - 2);
      v22 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_159;
      *(&v28 - 3) = sub_1BAE892E8();
      *(&v28 - 2) = sub_1BA56A0B8();
      *(&v28 - 1) = sub_1BAE8932C();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726AFE8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v6);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA609508();
  v29 = 0uLL;
  v30 = 0;
  sub_1BB8740D4();
  v19 = v31;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA63BE34();
  sub_1BB8740D4();
  v26 = v31;
  v29 = xmmword_1BB8D2D60;
  v30 = 0;
  sub_1BA689CD8();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v27 = v31;
  *(_BYTE *)v12 = v19;
  *(_BYTE *)(v12 + 1) = v26;
  *(_QWORD *)(v12 + 8) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA56A0B8()
{
  unint64_t result;

  result = qword_1ED3A8CF8;
  if (!qword_1ED3A8CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC900, &_s10CodingKeysON_159);
    atomic_store(result, (unint64_t *)&qword_1ED3A8CF8);
  }
  return result;
}

unint64_t sub_1BA56A0FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBoolean.init(from:)(a1, a2);
}

unint64_t FormatBoolean.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v5 = sub_1BB8743BC() & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    v6 = 0;
    v7 = 0;
LABEL_12:
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v6;
    *(_BYTE *)(a2 + 16) = v7;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  __swift_project_boxed_opaque_existential_1(v45, v46);
  v9 = sub_1BB8743B0();
  v10 = v8;
  if (v9 == 1702195828 && v8 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    v6 = 0;
    v7 = 0;
    v5 = 1;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    goto LABEL_12;
  }
  if (v9 == 0x65736C6166 && v10 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    v5 = 0;
    v6 = 0;
    v7 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1BA689E44(v9, v10);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_20;
  if (v12 == 36 && v14 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_20;
  }
  v16 = sub_1BA9C0430(1uLL, v9, v10);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  MEMORY[0x1BCCE334C](v16, v18, v20, v22);
  sub_1BB872AFC(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v24);
  v9 = 0x286E6F6974706FLL;
  v10 = 0xE700000000000000;
LABEL_20:
  swift_bridgeObjectRetain();
  sub_1BA689D58(40, 0xE100000000000000, v9, v10);
  v26 = v25;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_30;
  swift_bridgeObjectRetain();
  v27 = sub_1BA689ECC(v9, v10);
  v29 = v28;
  swift_bridgeObjectRelease();
  if (!v29)
    goto LABEL_30;
  if (v27 == 41 && v29 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v30 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
LABEL_30:
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    *v41 = v9;
    v41[1] = v10;
    goto LABEL_31;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  v31 = sub_1BB872B98();
  v33 = v32;
  v47 = v34;
  v36 = v35;
  swift_bridgeObjectRelease();
  v43 = MEMORY[0x1BCCE334C](v31, v33, v47, v36);
  v47 = v37;
  swift_bridgeObjectRelease();
  v38 = sub_1BB872AC0();
  result = sub_1BB872ACC();
  if (result >> 14 >= v38 >> 14)
  {
    v39 = sub_1BB872B98();
    v5 = MEMORY[0x1BCCE334C](v39);
    v6 = v40;
    swift_bridgeObjectRelease();
    if (v43 == 0x6E6F6974706FLL && v47 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();

      v7 = 1;
      goto LABEL_11;
    }
    v44 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
      goto LABEL_33;
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    *v42 = v9;
    v42[1] = v10;
LABEL_31:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA56A6D8()
{
  sub_1BA56A780();
  return sub_1BB872D0C();
}

uint64_t sub_1BA56A724()
{
  sub_1BA56A780();
  return sub_1BB872D60();
}

unint64_t sub_1BA56A780()
{
  unint64_t result;

  result = qword_1ED3C98F0;
  if (!qword_1ED3C98F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92DFF4, &_s14descr1E7323649C4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C98F0);
  }
  return result;
}

uint64_t sub_1BA56A7C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1BB86F778();
  result = sub_1BB86F754();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BA56A810(_QWORD *a1)
{
  return FormatTextNodeTransform.encode(to:)(a1);
}

uint64_t FormatTextNodeTransform.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeTransform, v19, v16, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  if (v15)
  {
    if (v15 == 1)
    {
      if (qword_1ED3C2478 != -1)
        swift_once();
      v20 = sub_1BB86EB84();
      v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA56AB48(1, (uint64_t)v8);
      v22 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C2478 != -1)
        swift_once();
      v25 = sub_1BB86EB84();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA56AB48(2, (uint64_t)v5);
      v22 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA56AB48(0, (uint64_t)v11);
    v22 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA56AB48(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE95CC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA56AC6C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA56AC6C()
{
  unint64_t result;

  result = qword_1ED3A72E8;
  if (!qword_1ED3A72E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2658, &_s10CodingTypeON_7);
    atomic_store(result, (unint64_t *)&qword_1ED3A72E8);
  }
  return result;
}

uint64_t sub_1BA56ACB0(_QWORD *a1)
{
  return FormatColumnRowSpan.encode(to:)(a1);
}

uint64_t FormatColumnRowSpan.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[4];
  int v25;
  uint64_t v26;
  _BYTE *v27;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v27 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v24[-v7];
  sub_1BAE89EA8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)v1;
  v26 = *(_QWORD *)(v1 + 8);
  v25 = *(unsigned __int8 *)(v1 + 16);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE89DA0();
  v16 = sub_1BA4A2870(&qword_1ED3D0DC0, (uint64_t (*)(uint64_t))sub_1BAE89DA0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColumnRowSpan, v17, v13, (uint64_t)&type metadata for FormatColumnRowSpan, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1C6A8(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v27;
    v20(v27, v19, v18);
    swift_storeEnumTagMultiPayload();
    v22 = swift_bridgeObjectRetain();
    sub_1BAD1C800(v22, v25, 1, 0, 0, v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE89EA8);
}

uint64_t sub_1BA56AF68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinition.init(from:)(a1, a2);
}

uint64_t FormatCompilerSlotDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)(char *, _QWORD);
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  __int128 v72;
  void (**v73)(char *, _QWORD);
  uint64_t v74;
  unint64_t v75;
  __int128 v76;
  char v77;
  __int128 v78;
  char v79;

  v65 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)&v58 - v5;
  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, v3);
  MEMORY[0x1E0C80A78](v6);
  v68 = (uint64_t)&v58 - v7;
  sub_1BAEFBAC0(0, &qword_1ED3C4648, (void (*)(void))sub_1BA5737B0, (void (*)(void))sub_1BA55DA08);
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v58 - v9;
  sub_1BA56EB3C();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)&v72 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE7651C();
  v70 = v14;
  v15 = *(void (***)(char *, _QWORD))(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE76594();
  sub_1BA4A2870(&qword_1ED3D12E0, (uint64_t (*)(uint64_t))sub_1BAE76594, (uint64_t)&unk_1BB8FFC6C);
  v18 = v73;
  sub_1BB87468C();
  v19 = v18;
  if (v18)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v19);
    swift_willThrow();

    v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  v62 = v12;
  v63 = v11;
  v73 = v15;
  v20 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v21 = sub_1BB872874();
  LOBYTE(v20) = Dictionary<>.errorOnUnknownKeys.getter(v21);
  swift_bridgeObjectRelease();
  v23 = v70;
  v22 = v71;
  if ((v20 & 1) != 0)
  {
    v24 = sub_1BB8740EC();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = (_BYTE *)(v24 + 48);
      while (*v26 != 1)
      {
        v26 += 24;
        if (!--v25)
          goto LABEL_7;
      }
      v30 = *((_QWORD *)v26 - 2);
      v31 = *((_QWORD *)v26 - 1);
      swift_bridgeObjectRetain_n();
      v32 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v32);
      *(&v58 - 4) = (uint64_t)&_s10CodingKeysON_231;
      *(&v58 - 3) = sub_1BAE76614();
      *(&v58 - 2) = sub_1BA56B8F8();
      *(&v58 - 1) = sub_1BAE76658();
      swift_getKeyPath();
      swift_retain();
      v33 = sub_1BAE71220((uint64_t)&unk_1E72532B8);
      swift_release_n();
      sub_1BA98D1F0();
      v19 = (void *)swift_allocError();
      *(_QWORD *)v34 = v30;
      *(_QWORD *)(v34 + 8) = v31;
      *(_QWORD *)(v34 + 16) = v33;
      *(_OWORD *)(v34 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v30, v31, 1);
      v73[1](v17, v23);
      a1 = v64;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v78 = 0uLL;
  v79 = 0;
  v27 = sub_1BB874098();
  v29 = v28;
  v78 = xmmword_1BB8A1A10;
  v79 = 0;
  v37 = sub_1BB874098();
  v61 = v38;
  v60 = xmmword_1BB8D2D60;
  v78 = xmmword_1BB8D2D60;
  v79 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v76 = v60;
    v77 = 0;
    sub_1BB8740D4();
    v59 = v37;
    v40 = v75;
    v58 = v74;
  }
  else
  {
    v59 = v37;
    v58 = 0;
    v40 = 0xE000000000000000;
  }
  v60 = xmmword_1BB8D2D70;
  v78 = xmmword_1BB8D2D70;
  v79 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v76 = v60;
    v77 = 0;
    sub_1BA4A2870(&qword_1ED3C46B0, (uint64_t (*)(uint64_t))sub_1BA56EB3C, MEMORY[0x1E0DB3610]);
    v41 = v63;
    sub_1BB8740D4();
    *(_QWORD *)&v60 = v40;
    v42 = v72;
    v43 = sub_1BB86DD08();
    v44 = v41;
    v45 = (char *)v43;
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v42, v44);
  }
  else
  {
    *(_QWORD *)&v60 = v40;
    v45 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v46 = v69;
  v72 = xmmword_1BB8D2D90;
  v78 = xmmword_1BB8D2D90;
  v79 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v69 = v45;
    v76 = v72;
    v77 = 0;
    sub_1BAE7669C();
    v47 = v46;
    v48 = v67;
    sub_1BB8740D4();
    v63 = v27;
    v49 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v48);
    v45 = v69;
  }
  else
  {
    v63 = v27;
    v49 = MEMORY[0x1E0DEE9D8];
  }
  v72 = xmmword_1BB8D2D80;
  v78 = xmmword_1BB8D2D80;
  v79 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v76 = v72;
    v77 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v72 = v29;
    v50 = v17;
    v51 = v74;
  }
  else
  {
    *(_QWORD *)&v72 = v29;
    v50 = v17;
    v51 = 1;
  }
  type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  v78 = xmmword_1BB8D2DA0;
  v79 = 0;
  sub_1BA4A2870(&qword_1ED3C00D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSet);
  sub_1BB874068();
  sub_1BB86E710();
  v78 = xmmword_1BB8D2DB0;
  v79 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v73[1](v50, v23);
  v52 = type metadata accessor for FormatCompilerSlotDefinition(0);
  v53 = (uint64_t)v22;
  v54 = v65;
  sub_1BA646EFC(v68, (uint64_t)v65 + *(int *)(v52 + 40), &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  sub_1BA646EFC(v53, (uint64_t)v54 + *(int *)(v52 + 44), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v55 = v72;
  *v54 = v63;
  v54[1] = v55;
  v56 = v61;
  v54[2] = v59;
  v54[3] = v56;
  v57 = v60;
  v54[4] = v58;
  v54[5] = v57;
  v54[6] = (uint64_t)v45;
  v54[7] = v49;
  v54[8] = v51;
  v35 = (uint64_t)v64;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

unint64_t sub_1BA56B8F8()
{
  unint64_t result;

  result = qword_1ED3CC430;
  if (!qword_1ED3CC430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D09D0, &_s10CodingKeysON_231);
    atomic_store(result, (unint64_t *)&qword_1ED3CC430);
  }
  return result;
}

uint64_t sub_1BA56B93C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLayoutExpression.init(from:)(a1, a2);
}

uint64_t FormatLayoutExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;

  v3 = v2;
  v28 = a2;
  sub_1BAEA1618();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA1690();
  sub_1BA4A2870(&qword_1ED3D1030, (uint64_t (*)(uint64_t))sub_1BAEA1690, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v28;
  v14 = v6;
  v15 = v9;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v18 - 1);
      v28 = *((_QWORD *)v18 - 2);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *((_QWORD *)&v27 - 4) = &_s10CodingKeysON_100;
      *((_QWORD *)&v27 - 3) = sub_1BAEA1710();
      *((_QWORD *)&v27 - 2) = sub_1BA56BCC4();
      *((_QWORD *)&v27 - 1) = sub_1BAEA1754();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726CB58);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      v24 = v28;
      *(_QWORD *)v25 = v28;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v14);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA56BD08();
  v31 = 0uLL;
  v32 = 0;
  sub_1BB8740D4();
  v19 = v29;
  v27 = xmmword_1BB8A1A10;
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = v27;
    v30 = 0;
    sub_1BA63BE34();
    sub_1BB8740D4();
    v20 = v33;
  }
  else
  {
    v20 = 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v6);
  *(_QWORD *)v13 = v19;
  *(_BYTE *)(v13 + 8) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA56BCC4()
{
  unint64_t result;

  result = qword_1ED3CA018;
  if (!qword_1ED3CA018)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C94E0, &_s10CodingKeysON_100);
    atomic_store(result, (unint64_t *)&qword_1ED3CA018);
  }
  return result;
}

unint64_t sub_1BA56BD08()
{
  unint64_t result;

  result = qword_1ED3B5588;
  if (!qword_1ED3B5588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92426C, &type metadata for FormatLayoutOption);
    atomic_store(result, (unint64_t *)&qword_1ED3B5588);
  }
  return result;
}

uint64_t sub_1BA56BD4C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA56BD8C((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BA56BD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v18[2];

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  v12 = *(_QWORD *)(a2 + 16);
  v18[1] = a1;
  sub_1BB8745D8();
  if (v12)
  {
    v13 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v14 = *(_QWORD *)(v5 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v15(v11, v13, v4);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v16(v11, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
      sub_1BA56BF28();
      sub_1BB872868();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v13 += v14;
      if (!--v12)
        return v16(v11, 1, 1, v4);
    }
  }
  else
  {
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v16(v11, 1, 1, v4);
  }
  return result;
}

unint64_t sub_1BA56BF28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B04C0;
  if (!qword_1ED3B04C0)
  {
    v1 = sub_1BB86C67C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB0018], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B04C0);
  }
  return result;
}

void sub_1BA56BF70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BAB30360(255, (unint64_t *)&qword_1ED3C02C0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA56BFE4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA56C00C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA56C00C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (**v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[12];
  int v55;
  __int128 v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  _BYTE *v74;
  _QWORD *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (**v81)(_BYTE *, _QWORD);
  __int128 v82;
  char v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 v93;

  sub_1BAEFBAC0(0, &qword_1ED39EDF0, (void (*)(void))sub_1BA82A1E0, (void (*)(void))sub_1BA82A224);
  v78 = v2;
  v76 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v77 = &v54[-v3];
  sub_1BAEFBAC0(0, &qword_1ED3A37C8, (void (*)(void))sub_1BA825F94, (void (*)(void))sub_1BA825FD8);
  v80 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v54[-v6];
  sub_1BAEF8B38();
  v79 = v8;
  v9 = *(void (***)(_BYTE *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v54[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7A06C();
  sub_1BA4A2870(&qword_1ED3AD948, (uint64_t (*)(uint64_t))sub_1BAE7A06C, (uint64_t)&unk_1BB8FFC6C);
  v13 = v81;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v74 = v7;
  v73 = v5;
  v81 = v9;
  v15 = a1[3];
  v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v18 = v79;
  v17 = v80;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAE7A0EC();
      sub_1BA56CC28();
      sub_1BAE7A130();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7252D50);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      v81[1](v11, v18);
      a1 = v75;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF8B38);
  v24 = v23;
  v84 = xmmword_1BB8A1A10;
  LOBYTE(v85) = 0;
  v30 = sub_1BB874098();
  v32 = v31;
  v72 = xmmword_1BB8D2D60;
  v84 = xmmword_1BB8D2D60;
  LOBYTE(v85) = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v71 = v32;
    v82 = v72;
    v83 = 0;
    sub_1BAEF8C18();
    v34 = v74;
    sub_1BB8740D4();
    *(_QWORD *)&v72 = v30;
    v35 = sub_1BB86DD08();
    v36 = v17;
    v37 = v35;
    (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v34, v36);
    v32 = v71;
  }
  else
  {
    *(_QWORD *)&v72 = v30;
    v37 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v84 = xmmword_1BB8D2D70;
  LOBYTE(v85) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v80 = v82;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v84 = xmmword_1BB8D2D90;
  LOBYTE(v85) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v74 = (_BYTE *)v82;
  v82 = xmmword_1BB8D2D80;
  v83 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v70 = v84;
  LODWORD(v73) = v85;
  v82 = xmmword_1BB8D2DA0;
  v83 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v67 = v37;
  v60 = v22;
  v68 = v24;
  v64 = v84;
  v65 = v85;
  v66 = v86;
  v61 = v87;
  v62 = v88;
  v63 = v89;
  v39 = v91;
  v69 = v90;
  v40 = v92;
  v41 = v93;
  v84 = xmmword_1BB8D2DB0;
  LOBYTE(v85) = 0;
  LODWORD(v42) = sub_1BB874038();
  v57 = v41;
  v58 = v40;
  v59 = v39;
  v56 = xmmword_1BB8D2DD0;
  v84 = xmmword_1BB8D2DD0;
  LOBYTE(v85) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v55 = (int)v42;
    v71 = v32;
    v82 = v56;
    v83 = 0;
    sub_1BAEF8BB0();
    v42 = v77;
    v43 = v78;
    sub_1BB8740D4();
    *(_QWORD *)&v56 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v42, v43);
    v32 = v71;
    v44 = v63;
    v45 = v62;
    v46 = v61;
    LOBYTE(v42) = v55;
  }
  else
  {
    *(_QWORD *)&v56 = MEMORY[0x1E0DEE9D8];
    v44 = v63;
    v45 = v62;
    v46 = v61;
  }
  v81[1](v11, v18);
  type metadata accessor for FormatIssueCoverNodeStyle();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  v47 = v68;
  *(_QWORD *)(KeyPath + 16) = v60;
  *(_QWORD *)(KeyPath + 24) = v47;
  *(_QWORD *)(KeyPath + 32) = v72;
  *(_QWORD *)(KeyPath + 40) = v32;
  swift_beginAccess();
  v48 = v80;
  *(_QWORD *)(KeyPath + 48) = v67;
  *(_QWORD *)(KeyPath + 56) = v48;
  v49 = v70;
  *(_QWORD *)(KeyPath + 64) = v74;
  *(_OWORD *)(KeyPath + 72) = __PAIR128__(*((unint64_t *)&v70 + 1), v49);
  *(_BYTE *)(KeyPath + 88) = v73;
  v50 = *((_QWORD *)&v64 + 1);
  *(_QWORD *)(KeyPath + 96) = v64;
  *(_QWORD *)(KeyPath + 104) = v50;
  v51 = v66;
  *(_QWORD *)(KeyPath + 112) = v65;
  *(_QWORD *)(KeyPath + 120) = v51;
  *(_QWORD *)(KeyPath + 128) = v46;
  *(_QWORD *)(KeyPath + 136) = v45;
  v52 = v69;
  *(_QWORD *)(KeyPath + 144) = v44;
  *(_QWORD *)(KeyPath + 152) = v52;
  v53 = v58;
  *(_QWORD *)(KeyPath + 160) = v59;
  *(_QWORD *)(KeyPath + 168) = v53;
  *(_BYTE *)(KeyPath + 176) = v57;
  *(_BYTE *)(KeyPath + 177) = (_BYTE)v42;
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 184) = v56;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  return KeyPath;
}

uint64_t type metadata accessor for FormatIssueCoverNodeStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA56CC28()
{
  unint64_t result;

  result = qword_1ED3A76A0;
  if (!qword_1ED3A76A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFB90, &_s10CodingKeysON_213);
    atomic_store(result, (unint64_t *)&qword_1ED3A76A0);
  }
  return result;
}

uint64_t sub_1BA56CC6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatAssetURL.init(from:)(a1, a2);
}

uint64_t FormatAssetURL.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;

  v45 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C4690, (void (*)(void))sub_1BA82CA18, (void (*)(void))sub_1BA82CA5C);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - v4;
  sub_1BAE8183C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE818B4();
  sub_1BA4A2870(&qword_1ED3D1530, (uint64_t (*)(uint64_t))sub_1BAE818B4, (uint64_t)&unk_1BB8FFC6C);
  v11 = v46;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
    goto LABEL_14;
  v40 = v5;
  *(_QWORD *)&v41 = 0;
  v42 = v8;
  v13 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v7;
  v17 = v44;
  v16 = v45;
  v18 = v43;
  if ((v13 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v30 = v15;
      v31 = *((_QWORD *)v21 - 2);
      v32 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v33 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v33);
      *(&v39 - 4) = (uint64_t)&_s10CodingKeysON_185;
      *(&v39 - 3) = sub_1BAE81934();
      *(&v39 - 2) = sub_1BA56D090();
      *(&v39 - 1) = sub_1BAE81978();
      swift_getKeyPath();
      swift_retain();
      v34 = sub_1BAE71220((uint64_t)&unk_1E726A6B0);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v35 = v31;
      *(_QWORD *)(v35 + 8) = v32;
      *(_QWORD *)(v35 + 16) = v34;
      *(_OWORD *)(v35 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v31, v32, 1);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v30);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v49 = 0uLL;
  v50 = 0;
  v22 = (void *)v41;
  v23 = sub_1BB874098();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v15);
    v12 = v22;
LABEL_13:
    a1 = v46;
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v36 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  v25 = v23;
  v26 = v24;
  v41 = xmmword_1BB8A1A10;
  v49 = xmmword_1BB8A1A10;
  v50 = 0;
  v27 = sub_1BB8740F8();
  v28 = v42;
  if ((v27 & 1) != 0)
  {
    v39 = v25;
    v47 = v41;
    v48 = 0;
    sub_1BAE7ED88();
    v29 = v40;
    sub_1BB8740D4();
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v29, v17);
    v25 = v39;
    v28 = v42;
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v15);
  *v16 = v25;
  v16[1] = v26;
  v16[2] = v38;
  v36 = (uint64_t)v46;
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

unint64_t sub_1BA56D090()
{
  unint64_t result;

  result = qword_1ED3C6B68;
  if (!qword_1ED3C6B68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDF20, &_s10CodingKeysON_185);
    atomic_store(result, (unint64_t *)&qword_1ED3C6B68);
  }
  return result;
}

uint64_t destroy for FormatTypeDefinition.Case()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FeedBannerAd.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA56D130(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1BB871D64();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0B08);
  result = sub_1BB86DF48();
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4AAADC();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0BB0);
  result = sub_1BB86DF48();
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A5F40();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB871D58();
    sub_1BA58BC48();
    swift_allocObject();
    return sub_1BB871EA8();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA56D300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  v0 = sub_1BB86E7E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86E104();
  type metadata accessor for FeedAdPipelineProcessor();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D2EF8);
  sub_1BB86E5E4();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2F00);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA58BC48();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, qword_1ED3D4BE0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3460);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4A5F40();
  sub_1BB86E5D8();
  swift_release();
  v4 = *MEMORY[0x1E0DB4A18];
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3468);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4BB020();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4AE8F4();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4B9268();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4A5D50();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4AB620();
  sub_1BB86E5D8();
  swift_release();
  v5(v3, v4, v0);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1BB86E104();
  type metadata accessor for FeedPrerollAdRequester();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4BB0E8();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4AF14C();
  sub_1BB86E5D8();
  swift_release();
  v5(v3, v4, v0);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1BB86E104();
  sub_1BA4AE3C8();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  swift_retain();
  sub_1BB86E5CC();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA56D918(_QWORD *a1, void (*a2)(_QWORD), void (*a3)(_QWORD), void (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_1BB871D64();
  MEMORY[0x1E0C80A78](v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B0B80);
  result = sub_1BB86DF48();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0B08);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a2(0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3(0);
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB871D58();
    a4(0);
    swift_allocObject();
    return sub_1BB871D04();
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1BA56DAFC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_1BA56DB30(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA56DB38(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1BA56DB38(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1BA56DB58(void *a1)
{
  uint64_t v1;

  sub_1BA56DB60(a1, *(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24));
}

void sub_1BA56DB60(void *a1, CGFloat a2, CGFloat a3)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  CGColorSpaceRef DeviceRGB;
  const __CFArray *v17;
  CGGradient *v18;
  CGContext *v19;
  CGContext *v20;
  CGColorSpace *space;
  CGPoint v22;
  CGPoint v23;

  sub_1BB873DD4();
  sub_1BA748DB8();
  v6 = (void *)sub_1BB8737E0();
  v7 = objc_msgSend(v6, sel_CGColor);

  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  v8 = (void *)sub_1BB8737E0();
  v9 = objc_msgSend(v8, sel_CGColor);

  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  v10 = (void *)sub_1BB8737E0();
  v11 = objc_msgSend(v10, sel_CGColor);

  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  v12 = (void *)sub_1BB8737E0();
  v13 = objc_msgSend(v12, sel_CGColor);

  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  v14 = (void *)sub_1BB8737E0();
  v15 = objc_msgSend(v14, sel_CGColor);

  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  type metadata accessor for CGColor(0);
  space = DeviceRGB;
  v17 = (const __CFArray *)sub_1BB872D9C();
  swift_release();
  v18 = CGGradientCreateWithColors(space, v17, 0);

  if (v18)
  {
    v19 = (CGContext *)objc_msgSend(a1, sel_CGContext);
    v22.x = 0.0;
    v22.y = 0.0;
    v23.x = a2;
    v23.y = a3;
    CGContextDrawLinearGradient(v19, v18, v22, v23, 2u);

    v20 = v19;
  }
  else
  {
    v20 = space;
  }

}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1BA4AD288(a1, &qword_1ED39DA48, (uint64_t)&unk_1E7272118, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BA56DE4C()
{
  unsigned __int8 *v0;

  return sub_1BADBB8FC(*v0);
}

uint64_t sub_1BA56DE54()
{
  unsigned __int8 *v0;

  return sub_1BADF7594(*v0);
}

uint64_t sub_1BA56DE5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatCustomNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatCustomNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v35 = a2;
  sub_1BAE79C78();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE79CF0();
  sub_1BA4A2870(&qword_1ED3D0FB0, (uint64_t (*)(uint64_t))sub_1BAE79CF0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v17 - 2);
      v24 = *((_QWORD *)v17 - 1);
      v35 = a1;
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      v26 = v12;
      MEMORY[0x1E0C80A78](v25);
      *(&v34 - 4) = (uint64_t)&_s10CodingKeysON_214;
      *(&v34 - 3) = sub_1BAE79D70();
      *(&v34 - 2) = sub_1BA56E2E4();
      *(&v34 - 1) = sub_1BAE79DB4();
      swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E7268A78);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v28 = v23;
      *(_QWORD *)(v28 + 8) = v24;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v35;
      sub_1BA69C828(v23, v24, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v36 = 0uLL;
  v37 = 0;
  sub_1BB8740D4();
  v18 = v9;
  v19 = v6;
  v20 = v12;
  v21 = v38;
  v22 = v39;
  v36 = xmmword_1BB8A1A10;
  v37 = 0;
  v30 = sub_1BB874038();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v36 = xmmword_1BB8D2D60;
  v37 = 0;
  sub_1BA56E250();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  v31 = v38;
  v32 = v21;
  v33 = v35;
  *v35 = v32;
  v33[1] = v22;
  *((_BYTE *)v33 + 16) = v30;
  v33[3] = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA56E250()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3B9450;
  if (!qword_1ED3B9450)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA50AD30(&qword_1ED3B37E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9450);
  }
  return result;
}

unint64_t sub_1BA56E2E4()
{
  unint64_t result;

  result = qword_1ED3C9750;
  if (!qword_1ED3C9750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFC68, &_s10CodingKeysON_214);
    atomic_store(result, (unint64_t *)&qword_1ED3C9750);
  }
  return result;
}

uint64_t sub_1BA56E328@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerOptions.init(from:)(a1, a2);
}

uint64_t FormatCompilerOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (**v17)(char *, _QWORD);
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  void (**v51)(char *, _QWORD);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  char v75;
  __int128 v76;
  char v77;
  void (**v78)(char *, _QWORD);

  v64 = a2;
  sub_1BA7607C8();
  v63 = v3;
  v61 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v67 = (char *)&v57 - v6;
  v66 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v66);
  *(_QWORD *)&v73 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v68 = (uint64_t)&v57 - v9;
  sub_1BA56EC24();
  v72 = v10;
  v65 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA56EB3C();
  v71 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE752A4();
  v70 = v16;
  v17 = *(void (***)(char *, _QWORD))(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7531C();
  sub_1BA4A2870(&qword_1ED3D0F70, (uint64_t (*)(uint64_t))sub_1BAE7531C, (uint64_t)&unk_1BB8FFC6C);
  v20 = v78;
  sub_1BB87468C();
  v21 = v20;
  if (v20)
  {
LABEL_21:
    sub_1BA7F8B78(a1, (uint64_t)v21);
    swift_willThrow();

    v48 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v48);
  }
  v59 = v15;
  v58 = v13;
  v78 = v17;
  v22 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v23 = sub_1BB872874();
  LOBYTE(v22) = Dictionary<>.errorOnUnknownKeys.getter(v23);
  swift_bridgeObjectRelease();
  v24 = v70;
  v25 = v71;
  v26 = v72;
  v27 = v73;
  if ((v22 & 1) != 0)
  {
    v28 = sub_1BB8740EC();
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      v30 = (_BYTE *)(v28 + 48);
      while (*v30 != 1)
      {
        v30 += 24;
        if (!--v29)
          goto LABEL_7;
      }
      v44 = *((_QWORD *)v30 - 2);
      v45 = *((_QWORD *)v30 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v46 = sub_1BAE1550C();
      sub_1BA98D1F0();
      v21 = (void *)swift_allocError();
      *(_QWORD *)v47 = v44;
      *(_QWORD *)(v47 + 8) = v45;
      *(_QWORD *)(v47 + 16) = v46;
      *(_OWORD *)(v47 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v44, v45, 1);
      v78[1](v19, v24);
      a1 = v60;
      goto LABEL_21;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v76 = 0uLL;
  v77 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    sub_1BA4A2870(&qword_1ED3C46B0, (uint64_t (*)(uint64_t))sub_1BA56EB3C, MEMORY[0x1E0DB3610]);
    v74 = 0uLL;
    v75 = 0;
    v31 = v59;
    sub_1BB8740D4();
    v32 = v69;
    v33 = sub_1BB86DD08();
    v34 = v25;
    v35 = v33;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v34);
    v27 = v73;
  }
  else
  {
    v35 = MEMORY[0x1E0DEE9D8];
    v32 = v69;
  }
  v73 = xmmword_1BB8A1A10;
  v76 = xmmword_1BB8A1A10;
  v77 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v74 = v73;
    v75 = 0;
    sub_1BA4A2870(&qword_1ED3C4730, (uint64_t (*)(uint64_t))sub_1BA56EC24, MEMORY[0x1E0DB3610]);
    sub_1BB8740D4();
    v36 = v32;
    v38 = (uint64_t)v67;
    v37 = v68;
    v39 = sub_1BB86DD08();
    v40 = v26;
    v41 = v39;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v40);
  }
  else
  {
    v41 = MEMORY[0x1E0DEE9D8];
    v38 = (uint64_t)v67;
    v37 = v68;
  }
  v73 = xmmword_1BB8D2D60;
  v76 = xmmword_1BB8D2D60;
  v77 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v74 = v73;
    v75 = 0;
    sub_1BA4A2870(&qword_1ED3B6510, type metadata accessor for FormatCompilerOptions.Newsroom, (uint64_t)&protocol conformance descriptor for FormatCompilerOptions.Newsroom);
    sub_1BB8740D4();
    sub_1BA5193C4(v27, v37, type metadata accessor for FormatCompilerOptions.Newsroom);
  }
  else
  {
    v42 = v66;
    if (qword_1EF2A6C88 != -1)
      swift_once();
    v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EF2AC5B8);
    sub_1BA4C2DD8(v43, v37, type metadata accessor for FormatCompilerOptions.Newsroom);
  }
  sub_1BB86E710();
  v76 = xmmword_1BB8D2D70;
  v77 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v73 = xmmword_1BB8D2D90;
  v76 = xmmword_1BB8D2D90;
  v77 = 0;
  v50 = sub_1BB8740F8();
  v51 = v78;
  if ((v50 & 1) != 0)
  {
    v72 = v35;
    v74 = v73;
    v75 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v53 = v62;
    v52 = v63;
    sub_1BB8740D4();
    v54 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v53, v52);
    v35 = v72;
  }
  else
  {
    v54 = MEMORY[0x1E0DEE9E8];
  }
  v51[1](v19, v24);
  v55 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v56 = v64;
  sub_1BA5193C4(v68, (uint64_t)v64 + v55[6], type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1BA646EFC(v38, (uint64_t)v56 + v55[7], (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *v56 = v35;
  v56[1] = v41;
  *(uint64_t *)((char *)v56 + v55[8]) = v54;
  v48 = (uint64_t)v60;
  return __swift_destroy_boxed_opaque_existential_1(v48);
}

void sub_1BA56EB3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C46B8)
  {
    type metadata accessor for FormatCompilerProperty(255);
    sub_1BA4A2870(&qword_1ED3B6A00, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
    sub_1BA4A2870(&qword_1ED3B0128, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C46B8);
  }
}

unint64_t sub_1BA56EBE0()
{
  unint64_t result;

  result = qword_1ED3C9418;
  if (!qword_1ED3C9418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0D68, &_s10CodingKeysON_236);
    atomic_store(result, (unint64_t *)&qword_1ED3C9418);
  }
  return result;
}

void sub_1BA56EC24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4738)
  {
    type metadata accessor for FormatCompilerSlotDefinition(255);
    sub_1BA4A2870((unint64_t *)&unk_1ED3B8240, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinition);
    sub_1BA4A2870(&qword_1ED3B01E8, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinition);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4738);
  }
}

uint64_t *FeedGroupEmitter.init<A>(emitter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;

  v5 = sub_1BA56ED10(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t *sub_1BA56ED10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  double v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, double);
  uint64_t v47;
  uint64_t v48;

  v47 = *v3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v46(v10, a1, a2, v9);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 40) & ~v11;
  v13 = v11 | 7;
  v45 = v12 + v8;
  v14 = (char *)swift_allocObject();
  v47 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v14 + 2) = v47;
  *((_QWORD *)v14 + 3) = a2;
  *((_QWORD *)v14 + 4) = a3;
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v43 = v12;
  v44 = v15;
  v15(&v14[v12], v10, a2);
  v3[2] = (uint64_t)sub_1BA6537F8;
  v3[3] = (uint64_t)v14;
  v16 = (void (*)(char *, uint64_t, uint64_t))v46;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v10, a1, a2);
  v17 = (_QWORD *)swift_allocObject();
  v18 = v47;
  v17[2] = v47;
  v17[3] = a2;
  v17[4] = a3;
  v19 = (char *)v17 + v12;
  v20 = v44;
  v44(v19, v10, a2);
  v3[4] = (uint64_t)sub_1BA4F9C64;
  v3[5] = (uint64_t)v17;
  v42 = a1;
  v16(v10, a1, a2);
  v48 = v13;
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = v18;
  *((_QWORD *)v21 + 3) = a2;
  *((_QWORD *)v21 + 4) = a3;
  v20(&v21[v43], v10, a2);
  v3[6] = (uint64_t)sub_1BA5F1290;
  v3[7] = (uint64_t)v21;
  v22 = a1;
  v23 = (void (*)(char *, uint64_t, uint64_t))v46;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v10, v22, a2);
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = v18;
  *((_QWORD *)v24 + 3) = a2;
  *((_QWORD *)v24 + 4) = a3;
  v26 = v43;
  v25 = v44;
  v44(&v24[v43], v10, a2);
  v3[8] = (uint64_t)sub_1BB2ED72C;
  v3[9] = (uint64_t)v24;
  v23(v10, v42, a2);
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = v18;
  *((_QWORD *)v27 + 3) = a2;
  *((_QWORD *)v27 + 4) = a3;
  v41 = a3;
  v25(&v27[v26], v10, a2);
  v3[10] = (uint64_t)sub_1BA5F37AC;
  v3[11] = (uint64_t)v27;
  v28 = v42;
  v29 = (void (*)(char *, uint64_t, uint64_t))v46;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v10, v42, a2);
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = v47;
  *((_QWORD *)v30 + 3) = a2;
  *((_QWORD *)v30 + 4) = a3;
  v31 = v44;
  v44(&v30[v26], v10, a2);
  v3[12] = (uint64_t)sub_1BB2ED76C;
  v3[13] = (uint64_t)v30;
  v29(v10, v28, a2);
  v32 = (char *)swift_allocObject();
  v33 = v47;
  *((_QWORD *)v32 + 2) = v47;
  *((_QWORD *)v32 + 3) = a2;
  v34 = v41;
  *((_QWORD *)v32 + 4) = v41;
  v31(&v32[v26], v10, a2);
  v3[14] = (uint64_t)sub_1BA4F5AFC;
  v3[15] = (uint64_t)v32;
  v29(v10, v28, a2);
  v35 = (char *)swift_allocObject();
  *((_QWORD *)v35 + 2) = v33;
  *((_QWORD *)v35 + 3) = a2;
  *((_QWORD *)v35 + 4) = v34;
  v31(&v35[v26], v10, a2);
  v3[16] = (uint64_t)sub_1BB2ED7AC;
  v3[17] = (uint64_t)v35;
  v3[18] = (uint64_t)sub_1BA56F268(v28, v33, a2, v34);
  v3[19] = v36;
  v3[20] = (uint64_t)sub_1BA56F1A0(v28, v33, a2, v34);
  v3[21] = v37;
  v3[22] = (uint64_t)sub_1BA56F0D8(v28, v33, a2, v34);
  v3[23] = v38;
  v3[24] = (uint64_t)sub_1BA56F330(v28, v33, a2, v34);
  v3[25] = v39;
  return v3;
}

uint64_t (*sub_1BA56F0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v9);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1BA5F3774;
}

uint64_t (*sub_1BA56F1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v9);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1BA5F39CC;
}

uint64_t (*sub_1BA56F268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v9);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1BA653C04;
}

uint64_t (*sub_1BA56F330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v9);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1BA4A3CF4;
}

void sub_1BA56F3F8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BA56F438()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA56F4B0(_QWORD *a1)
{
  return FormatColorColorExpression.encode(to:)(a1);
}

uint64_t FormatColorColorExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAE89100(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE88FF8();
  v15 = sub_1BA4A2870(&qword_1ED3ABF88, (uint64_t (*)(uint64_t))sub_1BAE88FF8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorColorExpression, v16, v12, (uint64_t)&type metadata for FormatColorColorExpression, v14, (uint64_t)&type metadata for FormatVersions.StarSky, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BDC0);
  v17 = qword_1ED3C6D58;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C08);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD25A80(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = v25;
    swift_retain();
    sub_1BAD25BDC(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE89100);
}

uint64_t sub_1BA56F77C()
{
  char *v0;

  return sub_1BADFA468(*v0);
}

uint64_t sub_1BA56F788(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3B9838);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B97B0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF940);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4C40);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D39B8);
  result = sub_1BB86DF48();
  if (v9)
  {
    type metadata accessor for FeedHeadlineFactory();
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v3;
    v7[3] = v4;
    v7[4] = v5;
    v7[5] = v6;
    sub_1BA4CECCC(&v10, (uint64_t)(v7 + 6));
    sub_1BA4CECCC(&v8, (uint64_t)(v7 + 11));
    return (uint64_t)v7;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BA56F9BC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF980);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B27E0);
  result = sub_1BB86DF48();
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3C60E8);
    sub_1BB86DF48();
    type metadata accessor for FeedIssueFactory();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v3;
    sub_1BA4CECCC(&v8, (uint64_t)(v6 + 3));
    v6[8] = v4;
    v6[9] = v5;
    sub_1BA8394F4((uint64_t)&v7, (uint64_t)(v6 + 10));
    return (uint64_t)v6;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA56FB9C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _UNKNOWN **v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF48();
  if (!(_QWORD)v21)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3478);
  result = sub_1BB86DF48();
  if (!v20)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = type metadata accessor for FeedLayoutCache();
  v4 = sub_1BB86DF3C();
  v17 = v3;
  v18 = &protocol witness table for FeedLayoutCache;
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = swift_allocObject();
    sub_1BA8414AC();
    swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_1BB86E7AC();
    *(_OWORD *)(v5 + 24) = 0u;
    *(_OWORD *)(v5 + 40) = 0u;
    *(_OWORD *)(v5 + 56) = 0u;
    *(_QWORD *)(v5 + 72) = 0;
  }
  *(_QWORD *)&v16 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D52D0);
  result = sub_1BB86DF48();
  if (!v15)
    goto LABEL_12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = type metadata accessor for FeedModelFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v12 = v6;
  v13 = &protocol witness table for FeedModelFactory;
  *(_QWORD *)&v11 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3360);
  result = sub_1BB86DF48();
  if (v9)
  {
    sub_1BA50CAA8(0, qword_1ED3D3178, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver);
    v7 = swift_allocObject();
    v8 = v22;
    *(_OWORD *)(v7 + 16) = v21;
    *(_OWORD *)(v7 + 32) = v8;
    *(_OWORD *)(v7 + 48) = v23;
    *(_QWORD *)(v7 + 64) = v24;
    sub_1BA4CECCC(&v16, v7 + 72);
    sub_1BA4CECCC(&v19, v7 + 112);
    sub_1BA4CECCC(&v14, v7 + 152);
    sub_1BA4CECCC(&v11, v7 + 192);
    *(_QWORD *)(v7 + 232) = v9;
    *(_QWORD *)(v7 + 240) = v10;
    return v7;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1BA56FE64(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C42A8);
  result = sub_1BB86DF48();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&qword_1ED3C4370);
  result = sub_1BB86DF48();
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3C4250);
  result = sub_1BB86DF48();
  if (v5)
  {
    type metadata accessor for FeedPuzzleFactory();
    v3 = swift_allocObject();
    sub_1BA4CECCC(&v10, v3 + 16);
    sub_1BA4CECCC(&v8, v3 + 56);
    sub_1BA4CECCC(&v6, v3 + 96);
    sub_1BA4CECCC(&v4, v3 + 136);
    return v3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA570018@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4030);
  result = sub_1BB86DF48();
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9900);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  result = sub_1BB86DF48();
  if (!v15)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4980);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D52C0);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  if (qword_1ED3C10B8 != -1)
    swift_once();
  v7 = qword_1ED3C10A0;
  v8 = unk_1ED3C10A8;
  type metadata accessor for FeedContextFactory();
  v9 = (_QWORD *)swift_allocObject();
  sub_1BA4CECCC(&v16, (uint64_t)(v9 + 2));
  v9[7] = v5;
  v9[8] = v6;
  sub_1BA4CECCC(&v14, (uint64_t)(v9 + 9));
  sub_1BA4CECCC(&v12, (uint64_t)(v9 + 14));
  v9[19] = v7;
  v9[20] = v8;
  sub_1BA4CECCC(&v10, (uint64_t)(v9 + 21));
  *a2 = v9;
  a2[1] = &protocol witness table for FeedContextFactory;
  return sub_1BA653B2C(v7, v8);
}

uint64_t type metadata accessor for FeedContextFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA5702E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39A8);
  result = sub_1BB86DF48();
  if (!v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E0);
  result = sub_1BB86DF48();
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for CategoryViewLayoutAttributesFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  v6 = swift_allocObject();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8720E8();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaRenderedViewModelFactory();
  result = sub_1BB86DF3C();
  if (result)
  {
    v9 = result;
    type metadata accessor for FeedLayoutAttributesFactoryProvider();
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v5;
    v10[3] = v6;
    v10[4] = v7;
    v10[5] = v8;
    v10[6] = v9;
    v11 = type metadata accessor for FeedLayoutContextFactory();
    v12 = swift_allocObject();
    sub_1BA4CECCC(&v15, v12 + 56);
    result = sub_1BA4CECCC(&v13, v12 + 16);
    *(_QWORD *)(v12 + 96) = v10;
    a2[3] = v11;
    a2[4] = (uint64_t)&protocol witness table for FeedLayoutContextFactory;
    *a2 = v12;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BA570528(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v2 = sub_1BB86EB84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D52C0);
  result = sub_1BB86DF48();
  if (!v17)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  result = sub_1BB86DF48();
  if (!v15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4980);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA81CF84();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3C4178, (uint64_t)&type metadata for FormatOfflineModel, (uint64_t)&off_1E730DCF8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for OfflineManager);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v8 = result;
  if (qword_1ED3BB468 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3B8FC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  type metadata accessor for FormatSystemFactory();
  v10 = swift_allocObject();
  sub_1BA4CECCC(&v16, v10 + 16);
  sub_1BA4CECCC(&v14, v10 + 56);
  sub_1BA4CECCC(&v12, v10 + 96);
  *(_QWORD *)(v10 + 136) = v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v10 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion, v5, v2);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_offlineManager) = v8;
  return v10;
}

uint64_t sub_1BA5707D4()
{
  sub_1BB86E104();
  sub_1BA50CAA8(0, qword_1ED3D3178, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver);
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D52D0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FormatSystemFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FormatDecorationProviderFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3478);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39E0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39A8);
  sub_1BB86E5E4();
  swift_release();
  return swift_release();
}

uint64_t FormatContent.Resolved.tags.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v66 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  result = MEMORY[0x1E0DEE9D8];
  v70 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(v4 + 16);
  if (v41)
  {
    v40 = v4 + 32;
    v39 = v4;
    swift_bridgeObjectRetain_n();
    v6 = 0;
    v7 = 0;
    v56 = v1;
    do
    {
      v53 = v7;
      v43 = v6;
      v9 = (uint64_t *)(v40 + 80 * v6);
      v10 = *v9;
      v55 = v9[1];
      v11 = v9[2];
      v50 = v9[3];
      v12 = v9[4];
      v13 = v9[5];
      v14 = v9[6];
      v51 = v9[7];
      v16 = v9[8];
      v15 = v9[9];
      v49 = v12 & 0x7FFFFFFFFFFFFFFFLL;
      v48 = v15;
      v52 = v11;
      v45 = v13;
      sub_1BA6D78DC();
      v46 = v10;
      v54 = v14;
      v17 = v51;
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      v44 = v12;
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v18 = v53;
      v19 = sub_1BB4A4184(v16);
      v53 = v18;
      swift_bridgeObjectRelease();
      v69 = v17;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v19);
      swift_bridgeObjectRelease();
      v47 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v69;
      v21 = MEMORY[0x1E0DEE9D8];
      v69 = MEMORY[0x1E0DEE9D8];
      v58 = *(_QWORD *)(v20 + 16);
      if (v58)
      {
        v57 = v20 + 32;
        v42 = v20;
        swift_bridgeObjectRetain();
        v22 = 0;
        v23 = v21;
        do
        {
          v24 = (_QWORD *)(v57 + (v22 << 6));
          v25 = v24[1];
          v26 = v24[2];
          v27 = v24[3];
          v28 = v24[4];
          v30 = v24[5];
          v29 = v24[6];
          v31 = v24[7];
          v68 = v23;
          v32 = v23;
          v33 = *(_QWORD *)(v28 + 16);
          if (v33)
          {
            v34 = v29;
            v35 = v30;
            v36 = v28 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
            v65 = v25;
            swift_bridgeObjectRetain();
            v63 = v26;
            swift_bridgeObjectRetain();
            v62 = v27;
            swift_bridgeObjectRetain();
            v64 = v28;
            swift_bridgeObjectRetain_n();
            v61 = v35;
            swift_bridgeObjectRetain();
            v60 = v34;
            swift_bridgeObjectRetain();
            v59 = v31;
            swift_bridgeObjectRetain();
            v37 = *(_QWORD *)(v66 + 72);
            do
            {
              sub_1BA4C2DD8(v36, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                MEMORY[0x1BCCE36AC]();
                if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1BB872E44();
                sub_1BB872E8C();
                sub_1BB872DCC();
              }
              else
              {
                sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              }
              v36 += v37;
              --v33;
            }
            while (v33);
            v67 = v68;
            v23 = MEMORY[0x1E0DEE9D8];
          }
          else
          {
            v38 = v32;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v67 = v38;
            v23 = v38;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          ++v22;
          sub_1BB383FF4(v67);
        }
        while (v22 != v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v67 = v69;
        v8 = v43;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = v21;
        v8 = v43;
      }
      v6 = v8 + 1;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BB383FF4(v67);
      v7 = v53;
    }
    while (v6 != v41);
    swift_bridgeObjectRelease_n();
    return v70;
  }
  return result;
}

uint64_t sub_1BA57119C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPointEquation.init(from:)(a1, a2);
}

uint64_t FormatPointEquation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAEAB29C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEAB314();
  sub_1BA4A2870(&qword_1ED3D0E20, (uint64_t (*)(uint64_t))sub_1BAEAB314, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v19);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_78;
      *(&v25 - 3) = sub_1BAEAB394();
      *(&v25 - 2) = sub_1BA571534();
      *(&v25 - 1) = sub_1BAEAB3D8();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E726D5A8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v16 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = v28;
  v24 = v25;
  *(_QWORD *)v25 = v16;
  *(_QWORD *)(v24 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA571534()
{
  unint64_t result;

  result = qword_1ED3C8578;
  if (!qword_1ED3C8578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8230, &_s10CodingKeysON_78);
    atomic_store(result, (unint64_t *)&qword_1ED3C8578);
  }
  return result;
}

uint64_t sub_1BA571578()
{
  double v0;
  void *v1;
  uint64_t v2;
  id v3;
  CFTimeInterval v4;
  uint64_t v5;
  double v7;

  v0 = CACurrentMediaTime();
  sub_1BA57188C((uint64_t)&unk_1E7327198, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_84_1);
  sub_1BA57188C((uint64_t)&unk_1E7327148, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_78);
  sub_1BA57188C((uint64_t)&unk_1E73270F8, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_72);
  sub_1BA57188C((uint64_t)&unk_1E73270A8, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_66);
  sub_1BA57188C((uint64_t)&unk_1E7327058, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_60_0);
  sub_1BA57188C((uint64_t)&unk_1E7327008, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_54);
  sub_1BA57188C((uint64_t)&unk_1E7326FB8, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_48);
  sub_1BA57188C((uint64_t)&unk_1E7326F68, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_42);
  sub_1BA57188C((uint64_t)&unk_1E7326F68, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_42);
  sub_1BA57188C((uint64_t)&unk_1E7326F18, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_36);
  sub_1BA57188C((uint64_t)&unk_1E7326EC8, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_30_0);
  sub_1BA57188C((uint64_t)&unk_1E7326E78, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_24_3);
  sub_1BA57188C((uint64_t)&unk_1E7326E28, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_18_3);
  sub_1BA57188C((uint64_t)&unk_1E7326DD8, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_12_4);
  sub_1BA57188C((uint64_t)&unk_1E7326D88, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_6_5);
  sub_1BA57188C((uint64_t)&unk_1E7326D38, (uint64_t)sub_1BA4F1E04, (uint64_t)&block_descriptor_91);
  if (qword_1ED3BA7F8 != -1)
    swift_once();
  v1 = (void *)qword_1ED476860;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  v3 = v1;
  v4 = CACurrentMediaTime();
  v5 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v2 + 64) = v5;
  *(CFTimeInterval *)(v2 + 32) = (v4 - v0) * 1000.0;
  sub_1BB87330C();
  sub_1BB86EF44("Format layout view pool manager prepared, time=%fms", v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA57188C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v24 = a2;
  v25 = a3;
  v23 = a1;
  v4 = v3;
  v5 = sub_1BB872610();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB872664();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = *(_QWORD *)(v3 + 16);
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = sub_1BA571AF4(*(_QWORD *)(v4 + 56));
  v16 = result - v14;
  if (__OFSUB__(result, v14))
  {
    __break(1u);
  }
  else if (v16 >= 1)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v17 = sub_1BB87345C();
    v22 = v6;
    v18 = (void *)v17;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v14;
    v19[3] = v16;
    v19[4] = v4;
    aBlock[4] = v24;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = v25;
    v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1BB872634();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA571CB8();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA571C58();
    sub_1BB873BC4();
    MEMORY[0x1BCCE3D90](0, v12, v8, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t sub_1BA571AF4(unint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if (a1 < 4)
    return qword_1BB8D83D0[a1];
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = (void *)objc_opt_self();
  sub_1BAF6A4E4(v2);
  sub_1BAF6A4E4(v3);
  v5 = objc_msgSend(v4, sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (!v6)
    goto LABEL_9;
  v7 = sub_1BB8729A0();
  v9 = v8;

  if (v7 == 0x6C7070612E6D6F63 && v9 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v11 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_11:
    v12 = v2;
    goto LABEL_12;
  }
LABEL_9:
  v12 = v3;
LABEL_12:
  v13 = sub_1BA571AF4(v12);
  sub_1BAF6A4F4(v3);
  sub_1BAF6A4F4(v2);
  return v13;
}

unint64_t sub_1BA571C58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9320;
  if (!qword_1ED3B9320)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9320);
  }
  return result;
}

unint64_t sub_1BA571CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0C40;
  if (!qword_1ED3B0C40)
  {
    v1 = sub_1BB872610();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0C40);
  }
  return result;
}

void sub_1BA571D00(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1BA571D38();
  *a1 = v2;
}

void sub_1BA571D38()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA571D6C@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x18) + 112);
}

void sub_1BA572014(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_1BA4B07F0(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA5720A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5720C8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5720C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _QWORD *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  sub_1BAEFBAC0(0, &qword_1ED3C46E8, (void (*)(void))sub_1BA8275E0, (void (*)(void))sub_1BA827624);
  *(_QWORD *)&v64 = *(_QWORD *)(v2 - 8);
  *((_QWORD *)&v64 + 1) = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v52 - v3;
  sub_1BAEF2600();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAE9706C();
  sub_1BA4A2870(&qword_1ED3D1120, (uint64_t (*)(uint64_t))sub_1BAE9706C, (uint64_t)&unk_1BB8FFC6C);
  v11 = (void *)v65;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v62 = v4;
  v13 = *((_QWORD *)&v64 + 1);
  *(_QWORD *)&v63 = v7;
  *(_QWORD *)&v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = v65;
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v19 - 2);
      v25 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      v27 = a1;
      MEMORY[0x1E0C80A78](v26);
      *((_QWORD *)&v52 - 4) = &_s10CodingKeysON_123;
      *((_QWORD *)&v52 - 3) = sub_1BAE970EC();
      v50 = sub_1BA572920();
      v51 = sub_1BAE97130();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7252A80);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v29 = v24;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      a1 = v27;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v16);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF2600);
  v22 = v21;
  v61 = a1;
  v68 = xmmword_1BB8A1A10;
  LOBYTE(v69) = 0;
  v23 = v65;
  v30 = sub_1BB874098();
  v32 = v31;
  v60 = xmmword_1BB8D2D60;
  v68 = xmmword_1BB8D2D60;
  LOBYTE(v69) = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v59 = v30;
    v66 = v60;
    v67 = 0;
    sub_1BAEF2678();
    v34 = v62;
    sub_1BB8740D4();
    v35 = sub_1BB86DD08();
    v36 = v13;
    v37 = v35;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v36);
    v30 = v59;
  }
  else
  {
    v37 = MEMORY[0x1E0DEE9D8];
  }
  v66 = xmmword_1BB8D2D70;
  v67 = 0;
  sub_1BA56978C();
  sub_1BB874068();
  v59 = v30;
  v62 = v32;
  v56 = *((_QWORD *)&v68 + 1);
  v39 = v68;
  v57 = v69;
  *(_QWORD *)&v60 = *((_QWORD *)&v70 + 1);
  v58 = v70;
  v64 = v71;
  v40 = v72;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v68 = xmmword_1BB8D2D90;
  LOBYTE(v69) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v54 = v40;
  v55 = v39;
  v41 = v66;
  v66 = xmmword_1BB8D2D80;
  v67 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v23);
  v65 = v68;
  v63 = v69;
  v53 = v70;
  v52 = v71;
  v42 = v37;
  v43 = v72;
  v44 = v73;
  LOBYTE(v40) = v74;
  type metadata accessor for FormatGroupNodeMaskStyle();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v20;
  *(_QWORD *)(KeyPath + 24) = v22;
  v45 = v62;
  *(_QWORD *)(KeyPath + 32) = v59;
  *(_QWORD *)(KeyPath + 40) = v45;
  swift_beginAccess();
  v46 = v55;
  *(_QWORD *)(KeyPath + 48) = v42;
  *(_QWORD *)(KeyPath + 56) = v46;
  v47 = v57;
  *(_QWORD *)(KeyPath + 64) = v56;
  *(_QWORD *)(KeyPath + 72) = v47;
  v48 = v58;
  *(_QWORD *)(KeyPath + 80) = *((_QWORD *)&v57 + 1);
  *(_QWORD *)(KeyPath + 88) = v48;
  v49 = v64;
  *(_QWORD *)(KeyPath + 96) = v60;
  *(_OWORD *)(KeyPath + 104) = __PAIR128__(*((unint64_t *)&v64 + 1), v49);
  *(_BYTE *)(KeyPath + 120) = v54;
  *(_QWORD *)(KeyPath + 128) = v41;
  *(_OWORD *)(KeyPath + 136) = v65;
  *(_OWORD *)(KeyPath + 152) = v63;
  *(_OWORD *)(KeyPath + 168) = v53;
  *(_OWORD *)(KeyPath + 184) = v52;
  *(_QWORD *)(KeyPath + 200) = v43;
  *(_QWORD *)(KeyPath + 208) = v44;
  *(_BYTE *)(KeyPath + 216) = v40;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  return KeyPath;
}

uint64_t type metadata accessor for FormatGroupNodeMaskStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA572920()
{
  unint64_t result;

  result = qword_1ED3CAA88;
  if (!qword_1ED3CAA88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA948, &_s10CodingKeysON_123);
    atomic_store(result, (unint64_t *)&qword_1ED3CAA88);
  }
  return result;
}

uint64_t _s8NewsFeed18FormatCornerRadiusOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA6F2B04(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1BA5729AC(uint64_t a1)
{
  return sub_1BA5729C8(a1, sub_1BA5729EC);
}

uint64_t sub_1BA5729C8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1BA5729EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BA71996C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1BA572A00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  return FeedGroupKnobsRepool.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t FeedGroupKnobsRepool.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v15 = a5;
  v7 = type metadata accessor for FeedGroupKnobsRepool.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB93E968, v7);
  v8 = sub_1BB874104();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB87468C();
  if (!v5)
  {
    v12 = v15;
    sub_1BA572B88();
    sub_1BA572C08(&qword_1ED3A5058, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *v12 = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA572B88()
{
  uint64_t result;

  result = qword_1ED3A5060;
  if (!qword_1ED3A5060)
  {
    sub_1BA518CFC();
    sub_1BA4CD054();
    sub_1BA83CCE4();
    type metadata accessor for FeedGroupKnobsRuleValue();
  }
  return result;
}

uint64_t sub_1BA572C08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BA572B88();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupKnobsRepool.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupKnobsRepool.CodingKeys);
}

void sub_1BA572C54()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA4A3FB4(319, &qword_1ED3B7C20, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, &qword_1ED3B56D0, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t GroupLayoutKey.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, &qword_1ED3B7C20, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
  swift_bridgeObjectRelease();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory, (unint64_t *)&unk_1ED3B6FD0, (void (*)(uint64_t))sub_1BA829AA0);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, &qword_1ED3B56D0, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA572DAC(_QWORD *a1)
{
  return FormatButtonNodeStateMask.encode(to:)(a1);
}

uint64_t FormatButtonNodeStateMask.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[3];
  char v23;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE87A88(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE87980();
  v13 = sub_1BA4A2870(&qword_1ED3D1190, (uint64_t (*)(uint64_t))sub_1BAE87980, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatButtonNodeStateMask, v14, v10, (uint64_t)&type metadata for FormatButtonNodeStateMask, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v9, v13, (uint64_t)&off_1E734BD80);
  v15 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v18 = sub_1BAE45E94((uint64_t)v6, 0, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  if (!v2 && (v18 & 1) != 0)
  {
    v22[1] = 0;
    v22[2] = 0;
    v23 = 0;
    v19 = swift_bridgeObjectRetain();
    v20 = sub_1BA79BAA0(v19);
    swift_bridgeObjectRelease();
    v22[0] = v20;
    swift_retain();
    sub_1BA67FABC(v22, sub_1BA683F3C, (uint64_t (*)(_QWORD *))sub_1BA683F64);
    swift_release();
    sub_1BAE87B00();
    sub_1BA4A2870(&qword_1ED3AEDD0, (uint64_t (*)(uint64_t))sub_1BAE87B00, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3A0890, (uint64_t)&type metadata for FormatButtonNodeState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5730B0();
    sub_1BB874464();
    swift_release();
  }
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAE87A88);
}

unint64_t sub_1BA5730B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0898;
  if (!qword_1ED3A0898)
  {
    sub_1BA4AD288(255, &qword_1ED3A0890, (uint64_t)&type metadata for FormatButtonNodeState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82BCAC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0898);
  }
  return result;
}

uint64_t sub_1BA573128@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotTransform.init(from:)(a1, a2);
}

uint64_t FormatSlotTransform.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  void (**v27)(char *, _QWORD);

  v24 = a2;
  v23 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v23);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v10 = v27;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_10;
  v22[1] = v4;
  v27 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v14 = v9;
  if ((v13 & 1) == 0)
  {
LABEL_8:
    sub_1BA57376C();
    v26 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v15 = sub_1BB8740EC();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v17 = (unint64_t *)(v15 + 40);
  while (1)
  {
    v18 = *v17;
    if (*v17 >= 4)
      break;
    v17 += 2;
    if (!--v16)
      goto LABEL_7;
  }
  v19 = *(v17 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v11 = (void *)swift_allocError();
  *(_QWORD *)v20 = v19;
  *(_QWORD *)(v20 + 8) = v18;
  *(_QWORD *)(v20 + 16) = &unk_1E726E578;
  *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v19, v18);
  v27[1](v14, v6);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v11);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FormatSlotItemCountLimit()
{
  uint64_t result;

  result = qword_1ED3CAD38;
  if (!qword_1ED3CAD38)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA57376C()
{
  unint64_t result;

  result = qword_1ED3C86C0;
  if (!qword_1ED3C86C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C67D0, &_s10CodingTypeON_25);
    atomic_store(result, (unint64_t *)&qword_1ED3C86C0);
  }
  return result;
}

unint64_t sub_1BA5737B0()
{
  unint64_t result;

  result = qword_1ED3BE6C0;
  if (!qword_1ED3BE6C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotTransform, &type metadata for FormatSlotTransform);
    atomic_store(result, (unint64_t *)&qword_1ED3BE6C0);
  }
  return result;
}

void sub_1BA5737F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED39F818)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A08D0, (uint64_t (*)(void))sub_1BA833F0C, (uint64_t)&type metadata for FormatItemTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v3 = v2;
    v4 = sub_1BAEBABF4();
    v6 = type metadata accessor for FormatValue(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED39F818);
  }
}

void sub_1BA573874(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1BA5738C4(void *a1)
{
  uint64_t v1;

  sub_1BA5738D4(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)())(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1BA5738D4(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(), uint64_t a6)
{
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)();
  uint64_t v37;
  id v38;
  unint64_t v39;
  uint64_t v40;

  v11 = objc_msgSend(a1, sel_error);
  if (v11)
  {
    v38 = v11;
    a2();

    return;
  }
  if (!objc_msgSend(a1, sel_fetchedObject)
    || (sub_1BA573E74(), (swift_dynamicCast() & 1) == 0))
  {
    v24 = sub_1BB86E5C0();
    sub_1BA4A2870(&qword_1ED39A578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4398], MEMORY[0x1E0DB43A0]);
    v25 = swift_allocError();
    v27 = v26;
    if (qword_1ED39E360 != -1)
      swift_once();
    v28 = sub_1BB86E008();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED39A530);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v29, v28);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, *MEMORY[0x1E0DB4388], v24);
    ((void (*)(uint64_t))a2)(v25);
    v30 = (void *)v25;
    goto LABEL_20;
  }
  v12 = v39;
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v36 = a5;
    v37 = a4;
    v40 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v13 & ~(v13 >> 63), 0);
    if (v13 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    v15 = 0;
    v14 = v40;
    do
    {
      if ((v39 & 0xC000000000000001) != 0)
      {
        v16 = (void *)MEMORY[0x1BCCE4630](v15);
      }
      else
      {
        v16 = *(void **)(v39 + 8 * v15 + 32);
        swift_unknownObjectRetain();
      }
      v17 = objc_msgSend(v16, sel_identifier);
      v18 = sub_1BB8729A0();
      v20 = v19;
      swift_unknownObjectRelease();

      v22 = *(_QWORD *)(v40 + 16);
      v21 = *(_QWORD *)(v40 + 24);
      if (v22 >= v21 >> 1)
        sub_1BA7447E8(v21 > 1, v22 + 1, 1);
      ++v15;
      *(_QWORD *)(v40 + 16) = v22 + 1;
      v23 = v40 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 40) = v20;
    }
    while (v13 != v15);
    a5 = v36;
    a4 = v37;
  }
  v13 = sub_1BA6E43EC(v14);
  swift_bridgeObjectRelease();
  if ((sub_1BA6EB330(v13, a4) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    a5 = (void (*)())sub_1BB86E5C0();
    sub_1BA4A2870(&qword_1ED39A578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4398], MEMORY[0x1E0DB43A0]);
    a6 = swift_allocError();
    v12 = v31;
    if (qword_1ED39E360 == -1)
    {
LABEL_24:
      v32 = sub_1BB86E008();
      v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED39A530);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v12, v33, v32);
      if (*(_QWORD *)(v13 + 16) <= *(_QWORD *)(a4 + 16) >> 3)
      {
        swift_bridgeObjectRetain();
        sub_1BB024F00(v13);
        swift_bridgeObjectRelease();
        v34 = a4;
      }
      else
      {
        swift_bridgeObjectRetain();
        v34 = sub_1BA4BDEF4(v13, a4);
        swift_bridgeObjectRelease();
      }
      sub_1BB0F4138();
      *(_QWORD *)(v12 + *(int *)(v35 + 48)) = v34;
      (*(void (**)(unint64_t, _QWORD, void (*)()))(*((_QWORD *)a5 - 1) + 104))(v12, *MEMORY[0x1E0DB4390], a5);
      ((void (*)(uint64_t))a2)(a6);
      v30 = (void *)a6;
LABEL_20:

      return;
    }
LABEL_30:
    swift_once();
    goto LABEL_24;
  }
  a5();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BA573D50(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  sub_1BA573E74();
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86DEAC();
  sub_1BA4A2870((unint64_t *)&qword_1ED39BF90, (uint64_t (*)(uint64_t))sub_1BA573E74, MEMORY[0x1E0DEAF38]);
  v4 = sub_1BB86EA7C();
  swift_release();

  return v4;
}

void sub_1BA573E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D4440)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3D4450);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D4440);
  }
}

uint64_t sub_1BA573ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1BA573F08(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB0F4058(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

void sub_1BA573F10(void *a1)
{
  uint64_t v1;

  sub_1BA573F20(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40));
}

void sub_1BA573F20(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v9 = objc_msgSend(a1, sel_error);
  if (v9)
  {
    v27 = v9;
    a2();

    return;
  }
  if (objc_msgSend(a1, sel_fetchedObject)
    && (sub_1BA5746F8(), (swift_dynamicCast() & 1) != 0))
  {
    v10 = swift_bridgeObjectRetain();
    v11 = sub_1BA574368(v10);
    if ((sub_1BA6EB330(v11, a4) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v12 = ((uint64_t (*)())sub_1BA574364)();
      swift_bridgeObjectRelease();
      a5(v12);
      swift_release();
      return;
    }
    swift_bridgeObjectRelease();
    v20 = sub_1BB86E5C0();
    sub_1BA4A2870(&qword_1ED39A578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4398], MEMORY[0x1E0DB43A0]);
    v21 = swift_allocError();
    v23 = v22;
    if (qword_1ED39E310 != -1)
      swift_once();
    v24 = sub_1BB86E008();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED39A4E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, v25, v24);
    if (*(_QWORD *)(v11 + 16) <= *(_QWORD *)(a4 + 16) >> 3)
    {
      swift_bridgeObjectRetain();
      sub_1BB024F00(v11);
    }
    else
    {
      swift_bridgeObjectRetain();
      a4 = sub_1BA4BDEF4(v11, a4);
    }
    swift_bridgeObjectRelease();
    sub_1BB0F4138();
    *(_QWORD *)(v23 + *(int *)(v26 + 48)) = a4;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v23, *MEMORY[0x1E0DB4390], v20);
    ((void (*)(uint64_t))a2)(v21);
    v19 = (void *)v21;
  }
  else
  {
    v13 = sub_1BB86E5C0();
    sub_1BA4A2870(&qword_1ED39A578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4398], MEMORY[0x1E0DB43A0]);
    v14 = swift_allocError();
    v16 = v15;
    if (qword_1ED39E310 != -1)
      swift_once();
    v17 = sub_1BB86E008();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED39A4E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v18, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v16, *MEMORY[0x1E0DB4388], v13);
    ((void (*)(uint64_t))a2)(v14);
    v19 = (void *)v14;
  }

}

_QWORD *sub_1BA574264(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1BA574500((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BA6EBD18();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BA57436C(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1BB873060();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BA574500(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_unknownObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1BA5746F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B91F0)
  {
    sub_1BA78682C();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B91F0);
  }
}

uint64_t sub_1BA57475C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatTextNodeAttachment.init(from:)(a1, a2);
}

uint64_t FormatTextNodeAttachment.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  char v39;
  __int128 v40;
  char v41;

  v3 = v2;
  v34 = a2;
  sub_1BAEC51DC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC5254();
  sub_1BA4A2870(&qword_1ED3D1180, (uint64_t (*)(uint64_t))sub_1BAEC5254, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v25 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v25);
  }
  v10 = v7;
  v11 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *((_QWORD *)&v32 - 4) = &_s10CodingKeysON_18;
      *((_QWORD *)&v32 - 3) = sub_1BAEC52D4();
      *((_QWORD *)&v32 - 2) = sub_1BA574B7C();
      *((_QWORD *)&v32 - 1) = sub_1BAEC5318();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726F1D0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      a1 = v33;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA574BC0();
  v40 = 0uLL;
  v41 = 0;
  sub_1BB8740D4();
  v18 = v38;
  v32 = xmmword_1BB8A1A10;
  v40 = xmmword_1BB8A1A10;
  v41 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v38 = v32;
    v39 = 0;
    sub_1BA574C04();
    sub_1BB8740D4();
    v19 = v35;
  }
  else
  {
    v19 = 0;
  }
  v32 = xmmword_1BB8D2D60;
  v40 = xmmword_1BB8D2D60;
  v41 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v38 = v32;
    v39 = 0;
    sub_1BA7967E4();
    sub_1BB8740D4();
    v27 = v6;
    v29 = v35;
    v28 = v36;
    v30 = v37;
  }
  else
  {
    v27 = v6;
    v28 = 0;
    v30 = 0;
    v29 = 1;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v27);
  v25 = (uint64_t)v33;
  v31 = v34;
  *v34 = v18;
  *((_BYTE *)v31 + 8) = v19;
  v31[2] = v29;
  v31[3] = v28;
  *((_BYTE *)v31 + 32) = v30;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

unint64_t sub_1BA574B7C()
{
  unint64_t result;

  result = qword_1ED3CADE0;
  if (!qword_1ED3CADE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4C90, &_s10CodingKeysON_18);
    atomic_store(result, (unint64_t *)&qword_1ED3CADE0);
  }
  return result;
}

unint64_t sub_1BA574BC0()
{
  unint64_t result;

  result = qword_1ED3B6DC0;
  if (!qword_1ED3B6DC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSyncImageContent, &type metadata for FormatSyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B6DC0);
  }
  return result;
}

unint64_t sub_1BA574C04()
{
  unint64_t result;

  result = qword_1ED3B8A50;
  if (!qword_1ED3B8A50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachmentAlignment, &type metadata for FormatTextNodeAttachmentAlignment);
    atomic_store(result, (unint64_t *)&qword_1ED3B8A50);
  }
  return result;
}

uint64_t sub_1BA574C48(_QWORD *a1)
{
  return FormatVideoPlayerNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatVideoPlayerNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[12];
  int v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[96];
  uint64_t v72;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v57 = &v55[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v59 = &v55[-v6];
  MEMORY[0x1E0C80A78](v7);
  v60 = &v55[-v8];
  MEMORY[0x1E0C80A78](v9);
  v64 = &v55[-v10];
  MEMORY[0x1E0C80A78](v11);
  v66 = &v55[-v12];
  MEMORY[0x1E0C80A78](v13);
  v68 = &v55[-v14];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v55[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v55[-v19];
  sub_1BAECE604(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = &v55[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = *(_QWORD *)v1;
  v24 = *(_QWORD *)(v1 + 8);
  v69 = *(_QWORD *)(v1 + 16);
  v67 = *(_QWORD *)(v1 + 24);
  v65 = *(_QWORD *)(v1 + 32);
  v26 = *(_QWORD *)(v1 + 40);
  v62 = *(_QWORD *)(v1 + 48);
  v63 = v26;
  v61 = *(unsigned __int8 *)(v1 + 56);
  sub_1BA6A09F0(v1 + 64, (uint64_t)v71, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v58 = *(_QWORD *)(v1 + 152);
  v56 = *(unsigned __int8 *)(v1 + 160);
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v29 = sub_1BAECE4FC();
  v30 = sub_1BA4A2870(&qword_1ED3D1280, (uint64_t (*)(uint64_t))sub_1BAECE4FC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector, v31, v27, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector, v29, (uint64_t)&type metadata for FormatVersions.StarSkyC, v28, (uint64_t)v23, v30, (uint64_t)&off_1E734BC40);
  v32 = qword_1ED3C6D70;
  swift_bridgeObjectRetain();
  if (v32 != -1)
    swift_once();
  v33 = sub_1BB86EB84();
  v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C50);
  v35 = *(void (**)(_BYTE *))(*(_QWORD *)(v33 - 8) + 16);
  v70 = v34;
  v35(v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v36 = (uint64_t)v23;
  v37 = v72;
  sub_1BAD0F608(v25, v24, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0);
  if (v37)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v38 = v70;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v35)(v17, v70, v33);
    swift_storeEnumTagMultiPayload();
    v39 = swift_bridgeObjectRetain();
    sub_1BAD3DF60(v39, 1, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
    v41 = (void (*)(_BYTE *, uint64_t, uint64_t))v35;
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = (uint64_t)v68;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v35)(v68, v38, v33);
    swift_storeEnumTagMultiPayload();
    v43 = v67;
    sub_1BA6E6C68(v67);
    sub_1BAD3E180(v43, 2, 0, 0, v42, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v43);
    v44 = (uint64_t)v66;
    v41(v66, v38, v33);
    swift_storeEnumTagMultiPayload();
    v45 = swift_bridgeObjectRetain();
    sub_1BAD3E398(v45, 3, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v46 = v38;
    v47 = (uint64_t)v64;
    v41(v64, v46, v33);
    swift_storeEnumTagMultiPayload();
    v49 = v62;
    v48 = v63;
    LOBYTE(v44) = v61;
    sub_1BA6E6C54(v63, v62, v61);
    sub_1BAD3E5C8(v48, v49, v44, 4, 0, 0, v47, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v48, v49, v44);
    v50 = (uint64_t)v60;
    v41(v60, v70, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD3E7FC((uint64_t)v71, 5, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v51 = (uint64_t)v59;
    v41(v59, v70, v33);
    swift_storeEnumTagMultiPayload();
    v52 = v58;
    sub_1BA5E7FF4(v58);
    sub_1BAD3EAE4(v52, 6, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v52);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v53 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476B78);
    v54 = (uint64_t)v57;
    v41(v57, v53, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BAD3ECFC(v56, 7, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BAECE604);
}

uint64_t sub_1BA5753A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5753D8 + 4 * byte_1BB8AE202[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA5753D8()
{
  return 0x79747265706F7270;
}

uint64_t sub_1BA5753F0()
{
  return 0x6164696C61766E69;
}

uint64_t sub_1BA575410()
{
  return 1885433183;
}

uint64_t sub_1BA575420(char a1)
{
  if (!a1)
    return 0x726F7463656C6573;
  if (a1 == 1)
    return 0x65756C6176;
  return 1885433183;
}

uint64_t sub_1BA57546C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCompilerOptions.Newsroom.Environment.init(from:)(a1, a2);
}

uint64_t FormatCompilerOptions.Newsroom.Environment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  char v28;

  v3 = v2;
  v27[0] = a2;
  sub_1BAE74DC4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE74E3C();
  sub_1BA4A2870(&qword_1ED3D0F90, (uint64_t (*)(uint64_t))sub_1BAE74E3C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v27[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v27[0] = v13;
      MEMORY[0x1E0C80A78](v23);
      v27[-4] = &_s10CodingKeysON_238;
      v27[-3] = sub_1BAE74EBC();
      v27[-2] = sub_1BA575774();
      v27[-1] = sub_1BAE74F00();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71130((uint64_t)&unk_1E7253D08);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v27[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27[1] = 0;
  v27[2] = 0;
  v28 = 0;
  v18 = sub_1BB874098();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  v12[1] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA575774()
{
  unint64_t result;

  result = qword_1ED3C9448;
  if (!qword_1ED3C9448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0EC8, &_s10CodingKeysON_238);
    atomic_store(result, (unint64_t *)&qword_1ED3C9448);
  }
  return result;
}

uint64_t sub_1BA5757B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5757E0 + 4 * byte_1BB8AF1F7[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1BA5757E0()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA575800()
{
  return 0x6974696E69666564;
}

uint64_t sub_1BA57581C()
{
  return 1885433183;
}

uint64_t sub_1BA575828@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Command.init(from:)(a1, a2);
}

uint64_t FormatGroupBinding.Command.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA575C84();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E7269560;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA575C40()
{
  unint64_t result;

  result = qword_1ED3B4AB0;
  if (!qword_1ED3B4AB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Command, &type metadata for FormatTagBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3B4AB0);
  }
  return result;
}

unint64_t sub_1BA575C84()
{
  unint64_t result;

  result = qword_1ED3C7C90;
  if (!qword_1ED3C7C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CECA0, &_s10CodingTypeON_144);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C90);
  }
  return result;
}

uint64_t sub_1BA575CC8(_QWORD *a1)
{
  return FormatOperator.encode(to:)(a1);
}

uint64_t FormatOperator.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[13];
  uint64_t v38;
  uint64_t v39;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v37[11] = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v37[10] = (char *)v37 - v6;
  MEMORY[0x1E0C80A78](v7);
  v37[9] = (char *)v37 - v8;
  MEMORY[0x1E0C80A78](v9);
  v37[8] = (char *)v37 - v10;
  MEMORY[0x1E0C80A78](v11);
  v37[7] = (char *)v37 - v12;
  MEMORY[0x1E0C80A78](v13);
  v37[6] = (char *)v37 - v14;
  MEMORY[0x1E0C80A78](v15);
  v37[5] = (char *)v37 - v16;
  MEMORY[0x1E0C80A78](v17);
  v37[4] = (char *)v37 - v18;
  MEMORY[0x1E0C80A78](v19);
  v37[3] = (char *)v37 - v20;
  MEMORY[0x1E0C80A78](v21);
  v37[2] = (char *)v37 - v22;
  MEMORY[0x1E0C80A78](v23);
  v37[1] = (char *)v37 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v37 - v27;
  v29 = *v1;
  v37[12] = a1;
  v38 = v29;
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v33, v32);
  v34 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = v39;
  sub_1BA69F160((uint64_t)v28, (uint64_t)sub_1BA90CF04, 0, v30, v31);
  if (!v35)
  {
    v39 = v34;
    sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatOperator.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5764B0 + 4 * byte_1BB891AA8[*v0]))(0x6C61757165, 0xE500000000000000);
}

uint64_t sub_1BA5764B0()
{
  return 0x6C61757145746F6ELL;
}

uint64_t sub_1BA5764C8()
{
  return 0x6E6168547373656CLL;
}

uint64_t sub_1BA5764F4()
{
  return 0x5472657461657267;
}

unint64_t sub_1BA576514()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA576530()
{
  return 29029;
}

uint64_t sub_1BA57653C()
{
  return 7431534;
}

uint64_t sub_1BA57654C()
{
  return 29804;
}

uint64_t sub_1BA576558()
{
  return 6648940;
}

uint64_t sub_1BA57656C()
{
  return 29799;
}

uint64_t sub_1BA576578()
{
  return 6648935;
}

uint64_t sub_1BA576588@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1BB86DEE8();
  v7 = v6;
  v8 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 160));
  swift_beginAccess();
  v9 = *v8;
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1BA6E35A8(v5, v7), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
    swift_endAccess();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    result = swift_endAccess();
    v12 = 0;
  }
  *a3 = v12;
  return result;
}

uint64_t sub_1BA576654()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 32));
  return sub_1BB86DEE8();
}

uint64_t sub_1BA57668C()
{
  return sub_1BB874734();
}

uint64_t sub_1BA576694(_QWORD *a1)
{
  return FormatBindingImageExpression.encode(to:)(a1);
}

uint64_t FormatBindingImageExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  __int128 v22;
  char v23;
  _BYTE v24[48];
  int v25;
  char v26;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  sub_1BAE847F0(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA728238(v1, (uint64_t)v24);
  v25 = *(unsigned __int8 *)(v1 + 41);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE846E8();
  v16 = sub_1BA4A2870(&qword_1ED3D12D0, (uint64_t (*)(uint64_t))sub_1BAE846E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingImageExpression, v17, v13, (uint64_t)&type metadata for FormatBindingImageExpression, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v16, (uint64_t)&off_1E734BD80);
  sub_1BA5769D0((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7147C0);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v9, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0E430((uint64_t)v24, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1BA5769D0((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF82C);
  if (!v2)
  {
    v20(v6, v19, v18);
    swift_storeEnumTagMultiPayload();
    if ((v25 & 1) == 0 && (sub_1BAE42B1C((uint64_t)v6, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v22 = xmmword_1BB8A1A10;
      v23 = 0;
      v26 = 0;
      sub_1BAE84868();
      sub_1BA4A2870(&qword_1ED3AEF80, (uint64_t (*)(uint64_t))sub_1BAE84868, MEMORY[0x1E0DED188]);
      sub_1BA90B4E0();
      sub_1BB874464();
    }
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE847F0);
}

uint64_t sub_1BA5769D0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t sub_1BA576A08@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA576A30(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA576A30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  __int128 v91;
  __int128 v92;
  char v93;
  __int128 v94;
  char v95;

  sub_1BA69292C();
  v80 = v2;
  v77 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v90 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  v82 = v4;
  v78 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v85 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v84 = v6;
  v79 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  *(_QWORD *)&v87 = v8;
  v81 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v86 = (char *)&v68 - v9;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v68 - v13;
  sub_1BAEF7508();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7D8E8();
  sub_1BA4A2870(&qword_1ED3D10D0, (uint64_t (*)(uint64_t))sub_1BAE7D8E8, (uint64_t)&unk_1BB8FFC6C);
  v19 = (void *)v91;
  sub_1BB87468C();
  v20 = v19;
  if (v19)
    goto LABEL_13;
  v21 = v14;
  v75 = v12;
  *(_QWORD *)&v91 = 0;
  v22 = a1[3];
  v76 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v18 = sub_1BB872874();
  LOBYTE(v22) = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  v24 = v88;
  v23 = v89;
  v25 = v90;
  if ((v22 & 1) != 0)
  {
    v26 = sub_1BB8740EC();
    v18 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v28 = (_BYTE *)(v26 + 48);
      while (*v28 != 1)
      {
        v28 += 24;
        if (!--v27)
          goto LABEL_7;
      }
      v34 = *((_QWORD *)v28 - 2);
      v33 = *((_QWORD *)v28 - 1);
      swift_bridgeObjectRetain_n();
      v35 = swift_bridgeObjectRelease();
      v36 = v23;
      MEMORY[0x1E0C80A78](v35);
      sub_1BAE7D968();
      sub_1BA5775EC();
      sub_1BAE7D9AC();
      swift_getKeyPath();
      swift_retain();
      v37 = sub_1BAE71220((uint64_t)&unk_1E7252898);
      swift_release_n();
      sub_1BA98D1F0();
      v18 = swift_allocError();
      *(_QWORD *)v38 = v34;
      *(_QWORD *)(v38 + 8) = v33;
      *(_QWORD *)(v38 + 16) = v37;
      *(_OWORD *)(v38 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v39 = v33;
      v20 = (void *)v18;
      sub_1BA69C828(v34, v39, 1);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v36);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v29 = (void *)v91;
  v30 = sub_1BAE0F8F8((uint64_t)v17, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF7508);
  v20 = v29;
  if (!v29)
  {
    v32 = v31;
    v74 = v30;
    v94 = xmmword_1BB8A1A10;
    v95 = 0;
    v72 = sub_1BB874098();
    v73 = v40;
    v94 = xmmword_1BB8D2D60;
    v95 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v71 = v92;
    v94 = xmmword_1BB8D2D70;
    v95 = 0;
    sub_1BA650B18();
    sub_1BB874068();
    v70 = v92;
    v91 = xmmword_1BB8D2D90;
    v94 = xmmword_1BB8D2D90;
    v95 = 0;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v92 = v91;
      v93 = 0;
      sub_1BAEB7D04();
      sub_1BB8740D4();
      v69 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v11);
    }
    else
    {
      v69 = MEMORY[0x1E0DEE9D8];
    }
    v91 = xmmword_1BB8D2D80;
    v94 = xmmword_1BB8D2D80;
    v95 = 0;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v92 = v91;
      v93 = 0;
      sub_1BAE7C214();
      v42 = v86;
      v43 = v87;
      sub_1BB8740D4();
      v75 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v42, v43);
    }
    else
    {
      v75 = MEMORY[0x1E0DEE9D8];
    }
    v91 = xmmword_1BB8D2DA0;
    v94 = xmmword_1BB8D2DA0;
    v95 = 0;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v92 = v91;
      v93 = 0;
      sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      v44 = v83;
      v45 = v84;
      sub_1BB8740D4();
      *(_QWORD *)&v91 = 0;
      v46 = sub_1BB86DD08();
      v47 = v44;
      v48 = v46;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v45);
    }
    else
    {
      *(_QWORD *)&v91 = 0;
      v48 = MEMORY[0x1E0DEE9E8];
    }
    v87 = xmmword_1BB8D2DB0;
    v94 = xmmword_1BB8D2DB0;
    v95 = 0;
    v49 = sub_1BB8740F8();
    v50 = v85;
    if ((v49 & 1) != 0)
    {
      v92 = v87;
      v93 = 0;
      sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
      v51 = v82;
      v18 = (uint64_t)v17;
      v52 = v91;
      sub_1BB8740D4();
      *(_QWORD *)&v91 = v52;
      if (v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA719718(v71);
LABEL_32:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
        a1 = v76;
        v20 = (void *)v91;
        goto LABEL_13;
      }
      *(_QWORD *)&v87 = v32;
      v53 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v51);
    }
    else
    {
      *(_QWORD *)&v87 = v32;
      v53 = MEMORY[0x1E0DEE9D8];
    }
    v86 = xmmword_1BB8D2DD0;
    v94 = xmmword_1BB8D2DD0;
    v95 = 0;
    v54 = sub_1BB8740F8();
    v55 = v71;
    if ((v54 & 1) != 0)
    {
      v56 = v48;
      v92 = v86;
      v93 = 0;
      sub_1BA4A2870(&qword_1ED3BBE58, (uint64_t (*)(uint64_t))sub_1BA69292C, MEMORY[0x1E0DB3610]);
      v57 = v80;
      v18 = (uint64_t)v17;
      v58 = v91;
      sub_1BB8740D4();
      *(_QWORD *)&v91 = v58;
      if (v58)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA719718(v55);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      v60 = sub_1BB86DD08();
      v61 = v25;
      v59 = v60;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v61, v57);
      v48 = v56;
    }
    else
    {
      v59 = MEMORY[0x1E0DEE9D8];
    }
    v94 = xmmword_1BB8D2DE0;
    v95 = 0;
    v18 = (uint64_t)v17;
    v62 = (void *)v91;
    v63 = sub_1BB874050();
    if (!v62)
    {
      v65 = v63;
      v66 = v23;
      v67 = v64 & 1;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v66);
      *(_QWORD *)&v94 = v55;
      *(_QWORD *)&v92 = v70;
      type metadata accessor for FormatSupplementaryNode();
      swift_allocObject();
      v18 = sub_1BA577630(v74, v87, v72, v73, (uint64_t *)&v94, (uint64_t *)&v92, v69, v75, v48, v53, v59, v65, v67);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
      return v18;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
    sub_1BA719718(v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v20 = v62;
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
LABEL_12:
  a1 = v76;
LABEL_13:
  sub_1BA7F8B78(a1, (uint64_t)v20);
  swift_willThrow();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v18;
}

unint64_t sub_1BA5775EC()
{
  unint64_t result;

  result = qword_1ED3CA538;
  if (!qword_1ED3CA538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEB18, &_s10CodingKeysON_196);
    atomic_store(result, (unint64_t *)&qword_1ED3CA538);
  }
  return result;
}

uint64_t sub_1BA577630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;
  uint64_t v20;
  uint64_t v21;

  v20 = *a5;
  v21 = *a6;
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a4;
  *(_QWORD *)(v13 + 48) = v20;
  *(_QWORD *)(v13 + 56) = v21;
  swift_beginAccess();
  *(_QWORD *)(v13 + 64) = a7;
  swift_beginAccess();
  *(_QWORD *)(v13 + 72) = a8;
  swift_beginAccess();
  *(_QWORD *)(v13 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v13 + 88) = a10;
  swift_beginAccess();
  *(_QWORD *)(v13 + 96) = a11;
  *(_QWORD *)(v13 + 104) = a12;
  *(_BYTE *)(v13 + 112) = a13 & 1;
  return v13;
}

uint64_t sub_1BA577768(char a1)
{
  if (!a1)
    return 0x6973736572707865;
  if (a1 == 1)
    return 0x65756C6176;
  return 1885433183;
}

uint64_t sub_1BA5777B8(_QWORD *a1)
{
  return FormatGroupNodeMaskStyle.encode(to:)(a1);
}

uint64_t FormatGroupNodeMaskStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[88];
  _BYTE v53[72];
  uint64_t v54;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v45 - v8;
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v45 - v10;
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v45 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v45 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - v17;
  sub_1BAE96F7C(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v24 = sub_1BAE9706C();
  v25 = sub_1BA4A2870(&qword_1ED3D1120, (uint64_t (*)(uint64_t))sub_1BAE9706C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v26, v23, v4, v24, (uint64_t)&type metadata for FormatVersions.StarSky, v22, (uint64_t)v21, v25, (uint64_t)&off_1E734BDC0);
  swift_beginAccess();
  v27 = v2[2];
  v28 = v2[3];
  v29 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v29 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C08);
  v32 = *(void (**)(char *))(*(_QWORD *)(v30 - 8) + 16);
  v50 = v31;
  v32(v18);
  v51 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v33 = v54;
  sub_1BAD265E8(v27, v28, 0, 0, 0, (uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE47EFC, (uint64_t (*)(uint64_t))sub_1BAE96FF4, &qword_1ED3AED50);
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v33)
  {
    v34 = v2[4];
    v35 = v2[5];
    v36 = v50;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v15, v50, v30);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD14238(v34, v35, 1, 0, 0, (uint64_t)v15, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v37 = (uint64_t)v49;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v49, v36, v30);
    swift_storeEnumTagMultiPayload();
    v38 = swift_bridgeObjectRetain();
    sub_1BAD27EEC(v38, 2, 0, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)(v2 + 7), (uint64_t)v53, &qword_1ED3A0240, (uint64_t)&type metadata for FormatGroupNodeMaskPath);
    v40 = v36;
    v41 = (uint64_t)v48;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v48, v40, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BA5A5A64((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA7AF9CC);
    sub_1BAD46890((uint64_t)v53, 3, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    sub_1BA5A5A64((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA7AF9E4);
    v42 = (uint64_t)v47;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v47, v50, v30);
    swift_storeEnumTagMultiPayload();
    v43 = swift_bridgeObjectRetain();
    sub_1BAD46BA0(v43, 4, 0, 0, v42, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)(v2 + 17), (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v44 = (uint64_t)v46;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v46, v50, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD46DD0((uint64_t)v52, 5, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
  }
  return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BAE96F7C);
}

unint64_t sub_1BA577E00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF10;
  if (!qword_1ED3AAF10)
  {
    sub_1BA4AD288(255, &qword_1ED3AAF08, (uint64_t)&type metadata for FormatGroupNodeMaskStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA827624();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF10);
  }
  return result;
}

uint64_t sub_1BA577E78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA577EA0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA577EA0(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (unint64_t *)(v11 + 40);
      while (1)
      {
        v14 = *v13;
        if (*v13 >= 4)
          break;
        v13 += 2;
        if (!--v12)
          goto LABEL_7;
      }
      v15 = *(v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v16 = v15;
      *(_QWORD *)(v16 + 8) = v14;
      *(_QWORD *)(v16 + 16) = &unk_1E726CB80;
      *(_OWORD *)(v16 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v15, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA578174();
  v18 = 0uLL;
  sub_1BB8740D4();
  sub_1BA50CAA8(0, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
  v18 = xmmword_1BB87FC90;
  sub_1BAE7CD60();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v5 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

unint64_t sub_1BA578174()
{
  unint64_t result;

  result = qword_1ED3C7E60;
  if (!qword_1ED3C7E60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2958, &_s10CodingTypeON_188);
    atomic_store(result, (unint64_t *)&qword_1ED3C7E60);
  }
  return result;
}

uint64_t sub_1BA5781B8(_QWORD *a1)
{
  return FormatNodeAccessibilityRole.encode(to:)(a1);
}

uint64_t FormatNodeAccessibilityRole.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)v1;
  v18 = *(unsigned __int8 *)(v1 + 8);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatNodeAccessibilityRole, v22, v19, (uint64_t)&type metadata for FormatNodeAccessibilityRole, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v21, (uint64_t)&off_1E734BD80);
  if (v18 >> 6)
  {
    if (v18 >> 6 == 1)
    {
      if (qword_1ED3C4168 != -1)
        swift_once();
      v23 = sub_1BB86EB84();
      v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476900);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v24, v23);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5785E4(3, v34, v18 & 1, (uint64_t)v5);
      v25 = (uint64_t)v5;
    }
    else if (v34 | v18 ^ 0x80)
    {
      if (qword_1ED3C6D00 != -1)
        swift_once();
      v30 = sub_1BB86EB84();
      v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476B48);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v8, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD753C0(2, (uint64_t)v8);
      v25 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C2478 != -1)
        swift_once();
      v28 = sub_1BB86EB84();
      v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v14, v29, v28);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD753C0(0, (uint64_t)v14);
      v25 = (uint64_t)v14;
    }
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v26 = sub_1BB86EB84();
    v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v27, v26);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5785E4(1, v34, v18 & 1, (uint64_t)v11);
    v25 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5785E4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF70A8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA578794();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA578750();
    sub_1BB874458();
  }
  return swift_release();
}

unint64_t sub_1BA578750()
{
  unint64_t result;

  result = qword_1ED3A7FD0;
  if (!qword_1ED3A7FD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole.Position, &type metadata for FormatNodeAccessibilityRole.Position);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FD0);
  }
  return result;
}

unint64_t sub_1BA578794()
{
  unint64_t result;

  result = qword_1ED3A7FC8;
  if (!qword_1ED3A7FC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4C60, &_s10CodingTypeON_137);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FC8);
  }
  return result;
}

uint64_t sub_1BA5787D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA69A57C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1BA578800(_QWORD *a1)
{
  return FormatImageRenderingMode.encode(to:)(a1);
}

unint64_t FormatImageRenderingMode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageRenderingMode, v22, v19, (uint64_t)&type metadata for FormatImageRenderingMode, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v21, (uint64_t)&off_1E734BD80);
  switch(v18)
  {
    case 0:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v26 = sub_1BB86EB84();
      v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v14, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA578C3C(0, (uint64_t)v14);
      v25 = (uint64_t)v14;
      goto LABEL_13;
    case 1:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v28 = sub_1BB86EB84();
      v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA578C3C(1, (uint64_t)v11);
      v25 = (uint64_t)v11;
      goto LABEL_13;
    case 2:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v23 = sub_1BB86EB84();
      v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA578C3C(2, (uint64_t)v8);
      v25 = (uint64_t)v8;
LABEL_13:
      sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
      return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v32 = *(_QWORD *)(v18 + 16);
  v31 = *(_QWORD *)(v18 + 24);
  sub_1BA6E6E84(v32);
  sub_1BA6E6E84(v31);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v33 = sub_1BB86EB84();
  v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v5, v34, v33);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA578DA4(3, v32, v31, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  sub_1BA6E7468(v32);
  return sub_1BA6E7468(v31);
}

uint64_t sub_1BA578C3C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1148;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA578D60();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA578D60()
{
  unint64_t result;

  result = qword_1ED3A7400;
  if (!qword_1ED3A7400)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB2E8, &_s10CodingTypeON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3A7400);
  }
  return result;
}

uint64_t sub_1BA578DA4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF1148;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA578D60();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B79E0, (uint64_t (*)(void))sub_1BA827154, (uint64_t)&type metadata for FormatImageRenderingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BA578F30();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA578F30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B940;
  if (!qword_1ED39B940)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B79E0, (uint64_t (*)(void))sub_1BA827154, (uint64_t)&type metadata for FormatImageRenderingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B940);
  }
  return result;
}

uint64_t FeedGroupDebugFormat.subgroup.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1[2];
  v2 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v11 = v1[10];
  v10 = v1[11];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v11;
  a1[9] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s8ResolvedVwxx_1()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA579080(unsigned int *a1, int a2, int a3)
{
  unint64_t v6;
  int v7;
  unsigned int v8;
  int v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v6 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 <= 0x10)
    v6 = 16;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 > v6)
    v6 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (a3 < 0)
  {
    v8 = a3 - 2147483646;
    if ((((((((v6 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 49) & 0xFFFFFFF8) != 0xFFFFFFF8)
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v7 = 1;
    else
      v7 = v9;
    if ((a2 & 0x80000000) == 0)
LABEL_9:
      __asm { BR              X11 }
  }
  else
  {
    v7 = 0u;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_9;
  }
  if ((((((((v6 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 49) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    bzero(a1, (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = a2 ^ 0x80000000;
  }
  __asm { BR              X10 }
}

void sub_1BA579248()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (!v1)
    JUMPOUT(0x1BA579230);
  JUMPOUT(0x1BA57921CLL);
}

void sub_1BA579254()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA579230);
}

void sub_1BA57925C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA579230);
}

uint64_t sub_1BA579268(_DWORD *a1, int a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 <= 0x10)
    v4 = 16;
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 > v4)
    v4 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_9;
  v7 = (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  v8 = v7 & 0xFFFFFFF8;
  v9 = a2 - 2147483646;
  if ((v7 & 0xFFFFFFF8) != 0)
    v9 = 2;
  if (v9 >= 0x10000)
    v10 = 4;
  else
    v10 = 2;
  if (v9 < 0x100)
    v11 = 1;
  else
    v11 = v10;
  if (v11 == 4)
  {
    v12 = *(_DWORD *)((char *)a1 + v7);
    if (!v12)
      goto LABEL_9;
  }
  else if (v11 == 2)
  {
    v12 = *(unsigned __int16 *)((char *)a1 + v7);
    if (!v12)
      goto LABEL_9;
  }
  else
  {
    v12 = *((unsigned __int8 *)a1 + v7);
    if (!v12)
    {
LABEL_9:
      v5 = *(_QWORD *)(((unint64_t)a1 + v4 + 8) & 0xFFFFFFFFFFFFF8);
      if (v5 >= 0xFFFFFFFF)
        LODWORD(v5) = -1;
      return (v5 + 1);
    }
  }
  v13 = v12 - 1;
  if (v8)
  {
    v13 = 0;
    LODWORD(v8) = *a1;
  }
  return (v8 | v13) ^ 0x80000000;
}

uint64_t sub_1BA579404()
{
  return sub_1BA4D7950();
}

uint64_t sub_1BA579424(_QWORD *a1)
{
  return FormatDecoration.encode(to:)(a1);
}

uint64_t FormatDecoration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  _QWORD *v75;
  __int128 v76;
  char v77;
  uint64_t v78;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v57 - v6;
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v57 - v8;
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v57 - v10;
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v57 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v57 - v18;
  sub_1BAE8EEA0(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v1 + 8);
  v73 = *(_QWORD *)v1;
  v70 = *(_QWORD *)(v1 + 48);
  v68 = *(_QWORD *)(v1 + 56);
  v66 = *(_QWORD *)(v1 + 64);
  v65 = *(unsigned __int8 *)(v1 + 72);
  v63 = *(_QWORD *)(v1 + 80);
  v24 = *(_QWORD *)(v1 + 88);
  v60 = *(_QWORD *)(v1 + 96);
  v61 = v24;
  LODWORD(v24) = *(unsigned __int8 *)(v1 + 106);
  v57 = *(unsigned __int16 *)(v1 + 104);
  v58 = v24;
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v27 = sub_1BAE8ED98();
  v28 = sub_1BA4A2870(&qword_1ED3D0C10, (uint64_t (*)(uint64_t))sub_1BAE8ED98, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDecoration, v29, v25, (uint64_t)&type metadata for FormatDecoration, v27, (uint64_t)&type metadata for FormatVersions.JazzkonC, v26, (uint64_t)v22, v28, (uint64_t)&off_1E734BD80);
  v30 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v30 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C20);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v33(v19, v32, v31);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v34 = v74;
  sub_1BAD265E8(v73, v23, 0, 0, 0, (uint64_t)v19, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE53D44, (uint64_t (*)(uint64_t))sub_1BAE8EF18, &qword_1ED3AE708);
  if (v34)
  {
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v71;
    v33(v71, v32, v31);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    v33((char *)v35, v32, v31);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    v36 = (uint64_t)v72;
    v33(v72, v32, v31);
    swift_storeEnumTagMultiPayload();
    v37 = v70;
    swift_retain();
    sub_1BAD200A8(v37, 3, 0, 0, v36, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v39 = (uint64_t)v69;
    v33(v69, v32, v31);
    swift_storeEnumTagMultiPayload();
    v40 = swift_bridgeObjectRetain();
    sub_1BAD2C1D0(v40, 4, 0, 0, v39, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v41 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C08);
    v42 = (uint64_t)v67;
    v33(v67, v41, v31);
    swift_storeEnumTagMultiPayload();
    sub_1BAD65970(v66, v65, 5, 0, 0, v42, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
    v43 = (uint64_t)v64;
    v33(v64, v32, v31);
    swift_storeEnumTagMultiPayload();
    v44 = swift_bridgeObjectRetain();
    sub_1BAD2C3B8(v44, 6, 0, 0);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v45 = qword_1ED3C6D20;
    v46 = v61;
    swift_bridgeObjectRetain();
    if (v45 != -1)
      swift_once();
    v47 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476B78);
    v48 = (uint64_t)v62;
    v74 = v33;
    v33(v62, v47, v31);
    swift_storeEnumTagMultiPayload();
    v49 = v60;
    if (*(_QWORD *)(v46 + 16) && (sub_1BAE53D44(v48, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v76 = xmmword_1BB8D2DB0;
      v77 = 0;
      v50 = swift_bridgeObjectRetain();
      v51 = sub_1BA67F4CC(v50);
      swift_bridgeObjectRelease();
      v75 = v51;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v75, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v78 = (uint64_t)v75;
      sub_1BAE8EF18();
      v73 = v52;
      sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
      v53 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v53, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v48 = (uint64_t)v62;
      v49 = v60;
    }
    v54 = v57 | (v58 << 16);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA771834(v49, v54);
    if (qword_1ED3C4168 != -1)
      swift_once();
    v55 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476900);
    v56 = (uint64_t)v59;
    v74(v59, v55, v31);
    swift_storeEnumTagMultiPayload();
    sub_1BAD65B30(v49, v54 & 0xFFFFFF, 8, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    sub_1BA771864(v49, v54);
  }
  return sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BAE8EEA0);
}

uint64_t sub_1BA579D0C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_32;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    result = sub_1BB8745C0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

unint64_t sub_1BA579ED0()
{
  unint64_t result;

  result = qword_1ED3B0140;
  if (!qword_1ED3B0140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecorationContent, &type metadata for FormatDecorationContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B0140);
  }
  return result;
}

uint64_t sub_1BA579F14(_QWORD *a1)
{
  return FormatAccessibilityTrait.encode(to:)(a1);
}

uint64_t FormatAccessibilityTrait.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[18];
  uint64_t v50;
  uint64_t v51;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v49[16] = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v49[15] = (char *)v49 - v6;
  MEMORY[0x1E0C80A78](v7);
  v49[14] = (char *)v49 - v8;
  MEMORY[0x1E0C80A78](v9);
  v49[13] = (char *)v49 - v10;
  MEMORY[0x1E0C80A78](v11);
  v49[12] = (char *)v49 - v12;
  MEMORY[0x1E0C80A78](v13);
  v49[11] = (char *)v49 - v14;
  MEMORY[0x1E0C80A78](v15);
  v49[10] = (char *)v49 - v16;
  MEMORY[0x1E0C80A78](v17);
  v49[9] = (char *)v49 - v18;
  MEMORY[0x1E0C80A78](v19);
  v49[8] = (char *)v49 - v20;
  MEMORY[0x1E0C80A78](v21);
  v49[7] = (char *)v49 - v22;
  MEMORY[0x1E0C80A78](v23);
  v49[6] = (char *)v49 - v24;
  MEMORY[0x1E0C80A78](v25);
  v49[5] = (char *)v49 - v26;
  MEMORY[0x1E0C80A78](v27);
  v49[4] = (char *)v49 - v28;
  MEMORY[0x1E0C80A78](v29);
  v49[3] = (char *)v49 - v30;
  MEMORY[0x1E0C80A78](v31);
  v49[2] = (char *)v49 - v32;
  MEMORY[0x1E0C80A78](v33);
  v49[1] = (char *)v49 - v34;
  MEMORY[0x1E0C80A78](v35);
  v49[0] = (char *)v49 - v36;
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v49 - v39;
  v41 = *v1;
  v49[17] = a1;
  v50 = v41;
  v42 = a1[3];
  v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v44 = sub_1BB86EB84();
  v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v40, v45, v44);
  v46 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v47 = v51;
  sub_1BA69F160((uint64_t)v40, (uint64_t)sub_1BA90CF04, 0, v42, v43);
  if (!v47)
  {
    v51 = v46;
    sub_1BA4A2E80((uint64_t)v40, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v40, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatAccessibilityTrait.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA57A958 + 4 * byte_1BB94C7D0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1BA57A958()
{
  return 0x6E6F74747562;
}

uint64_t sub_1BA57A96C()
{
  return 1802398060;
}

uint64_t sub_1BA57A978()
{
  return 0x6946686372616573;
}

uint64_t sub_1BA57A998()
{
  return 0x6567616D69;
}

uint64_t sub_1BA57A9AC()
{
  return 0x64657463656C6573;
}

uint64_t sub_1BA57A9C4()
{
  return 0x756F537379616C70;
}

uint64_t sub_1BA57A9E4()
{
  return 0x6472616F6279656BLL;
}

uint64_t sub_1BA57AA04()
{
  return 0x6554636974617473;
}

uint64_t sub_1BA57AA20()
{
  return 0x457972616D6D7573;
}

uint64_t sub_1BA57AA44()
{
  return 0x6C62616E45746F6ELL;
}

unint64_t sub_1BA57AA60()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA57AA7C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA57AAD4()
{
  return 0x6150736573756163;
}

uint64_t sub_1BA57AAF8()
{
  return 0x726564616568;
}

uint64_t sub_1BA57AB0C()
{
  return 0x726142626174;
}

uint64_t sub_1BA57AB20(_QWORD *a1)
{
  return FormatNotExpression.encode(to:)(a1);
}

uint64_t FormatNotExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEA7BC8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAEA7AC0();
  v13 = sub_1BA4A2870(&qword_1ED3D0E00, (uint64_t (*)(uint64_t))sub_1BAEA7AC0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatNotExpression, v14, v10, (uint64_t)&type metadata for FormatNotExpression, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD80);
  v15 = qword_1ED3C2478;
  swift_retain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1BFE4(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_release();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAEA7BC8);
}

void sub_1BA57AD30()
{
  FeedGroupKnobsRuleSet.__allocating_init(from:)();
}

uint64_t sub_1BA57AD44(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void FeedGroupKnobsRuleSet.__allocating_init(from:)()
{
  swift_allocObject();
  FeedGroupKnobsRuleSet.init(from:)();
}

uint64_t sub_1BA57AD90()
{
  uint64_t v0;

  return v0;
}

void FeedGroupKnobsRuleSet.init(from:)()
{
  type metadata accessor for FeedGroupKnobsRuleSet.Selector();
}

void sub_1BA57ADFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>.Selector<A1>, a1);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>.Selector<A1>, a1);
  *(_QWORD *)(v13 - 168) = a1;
  *(_QWORD *)(v13 - 184) = sub_1BB86DF60();
  v15 = sub_1BB873A2C();
  *(_QWORD *)(v13 - 208) = v15;
  *(_QWORD *)(v13 - 256) = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v9;
  *(_QWORD *)(v13 - 136) = v10;
  *(_QWORD *)(v13 - 128) = v12;
  sub_1BB86DD14();
  v17 = sub_1BB873A2C();
  *(_QWORD *)(v13 - 240) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v13 - 232) = v17;
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v13 - 192) = (char *)&a9 - v20;
  *(_QWORD *)(v13 - 224) = v12;
  *(_QWORD *)(v13 - 216) = v11;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v9;
  *(_QWORD *)(v13 - 136) = v10;
  *(_QWORD *)(v13 - 128) = v12;
  type metadata accessor for FeedGroupKnobsRuleSet.CodingKeys();
}

uint64_t sub_1BA57AF10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  MEMORY[0x1BCCE5B24](&unk_1BB8F3B98, a1);
  v4 = sub_1BB874104();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v8 = *(void **)(v3 - 72);
  sub_1BB87468C();
  if (v8)
  {
    v9 = v1;
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_1BB874674();
    v10 = (uint64_t)v2;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 128));
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3140], v1);
    v15 = *(_QWORD *)(v3 - 248);
    sub_1BB8743A4();
    v16 = *(_QWORD *)(v1 - 8);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v1);
    v18 = *(_QWORD *)(v3 - 160);
    if (v17 == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 240) + 8))(v15, *(_QWORD *)(v3 - 232));
      v19 = sub_1BB872754();
    }
    else
    {
      v19 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v9);
    }
    *(_QWORD *)(v18 + 16) = v19;
    v26 = sub_1BB872E68();

    *(_QWORD *)(v18 + 24) = v26;
    __swift_destroy_boxed_opaque_existential_1(v3 - 152);
  }
  else
  {
    *(_QWORD *)(v3 - 176) = v5;
    v11 = *(_QWORD *)(v3 - 184);
    *(_BYTE *)(v3 - 152) = 0;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3140], v1);
    v12 = *(_QWORD *)(v3 - 192);
    *(_QWORD *)(v3 - 72) = v4;
    sub_1BB874020();
    v13 = *(_QWORD *)(v1 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v1) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 240) + 8))(v12, *(_QWORD *)(v3 - 232));
      v14 = sub_1BB872754();
    }
    else
    {
      v14 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v1);
    }
    v18 = *(_QWORD *)(v3 - 160);
    v10 = (uint64_t)v2;
    v20 = v11;
    v21 = *(_QWORD *)(v3 - 208);
    v22 = *(_QWORD *)(v3 - 200);
    *(_QWORD *)(v18 + 16) = v14;
    *(_BYTE *)(v3 - 152) = 1;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v20);
    v23 = v7;
    sub_1BB874020();
    v24 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v20) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8))(v22, v21);
      v25 = sub_1BB872E68();
    }
    else
    {
      v25 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v20);
    }
    (*(void (**)(char *, _QWORD))(*(_QWORD *)(v3 - 176) + 8))(v23, *(_QWORD *)(v3 - 72));
    *(_QWORD *)(v18 + 24) = v25;
  }
  __swift_destroy_boxed_opaque_existential_1(v10);
  return v18;
}

void type metadata accessor for FeedGroupKnobsRuleSet.Selector()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FeedGroupKnobsRuleSet.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA57B29C()
{
  uint64_t v0;

  if (*(char *)(v0 + 16) < 0)
    return 0x6465646E756F72;
  else
    return FormatCornerRadius.Value.description.getter();
}

uint64_t FormatCornerRadius.Value.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872FDC();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x1BCCE36DC](v2, &type metadata for FormatCorner);
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  swift_bridgeObjectRelease();
  return 0x3D737569646172;
}

uint64_t FeedItemSupplementaryAttributes.pinTrait.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB074930(&qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640], MEMORY[0x1E0DBB628], &OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, a1);
}

uint64_t FeedItemSupplementaryAttributes.rubberbandTrait.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB074930((unint64_t *)&unk_1ED3C2260, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8], MEMORY[0x1E0DBBEA8], &OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, a1);
}

uint64_t sub_1BA57B488(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA4A3FB4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BA57B4D4(_QWORD *a1)
{
  uint64_t *v1;

  sub_1BA57B4EC(a1, *v1);
}

void sub_1BA57B4EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v4);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[1] = v12;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatMenuItemAction, v16, v13, (uint64_t)&type metadata for FormatMenuItemAction, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Azden, v14, (uint64_t)v12, v15, (uint64_t)&off_1E734BC80);
  __asm { BR              X10 }
}

uint64_t sub_1BA57B684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = swift_projectBox();
  v3 = *(_QWORD *)(v1 - 96);
  sub_1BA4C2DD8(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  if (qword_1ED3C6D20 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v1 - 88);
  sub_1BACF13D8(1, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA57B9B8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFC6C0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57BB1C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA6007E8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA57BB1C()
{
  unint64_t result;

  result = qword_1ED3A6840;
  if (!qword_1ED3A6840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2C10, &_s10CodingTypeON_189);
    atomic_store(result, (unint64_t *)&qword_1ED3A6840);
  }
  return result;
}

uint64_t sub_1BA57BB60(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFC6C0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57BB1C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA57BC84(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFC6C0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57BB1C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B50C0, (uint64_t (*)(void))sub_1BA82CF34, (uint64_t)&type metadata for FormatMenuItemAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BA57BE10();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA57BE10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B440;
  if (!qword_1ED39B440)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50C0, (uint64_t (*)(void))sub_1BA82CF34, (uint64_t)&type metadata for FormatMenuItemAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B440);
  }
  return result;
}

uint64_t sub_1BA57BE78(_QWORD *a1)
{
  return FormatAdMetricsNodeBinding.init(from:)(a1);
}

uint64_t FormatAdMetricsNodeBinding.init(from:)(_QWORD *a1)
{
  return sub_1BA57BEB8(a1, (void (*)(uint64_t))sub_1BA57C11C, (uint64_t)&_s10CodingTypeON_130, (uint64_t)&unk_1E726A4F8);
}

uint64_t sub_1BA57BEB8(_QWORD *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a4;
  v26 = a2;
  v29 = a3;
  v5 = v4;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v25 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v4)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v5);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  v14 = swift_bridgeObjectRelease();
  v15 = v9;
  v16 = v8;
  if ((v13 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    v19 = v25;
    if (v18)
    {
      v20 = (unint64_t *)(v17 + 40);
      while (1)
      {
        v21 = *v20;
        if (*v20 >= 4)
          break;
        v20 += 2;
        if (!--v18)
          goto LABEL_7;
      }
      v22 = *(v20 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v5 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v21;
      *(_QWORD *)(v23 + 16) = v19;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v21);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v16);
      goto LABEL_10;
    }
LABEL_7:
    v14 = swift_bridgeObjectRelease();
  }
  v26(v14);
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA57C11C()
{
  unint64_t result;

  result = qword_1ED3CB690;
  if (!qword_1ED3CB690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE5A0, &_s10CodingTypeON_130);
    atomic_store(result, (unint64_t *)&qword_1ED3CB690);
  }
  return result;
}

unint64_t sub_1BA57C160()
{
  unint64_t result;

  result = qword_1ED3CA3B0;
  if (!qword_1ED3CA3B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8979C0, &_s3URLO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3CA3B0);
  }
  return result;
}

unint64_t sub_1BA57C1A4()
{
  unint64_t result;

  result = qword_1ED3C9898;
  if (!qword_1ED3C9898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA648, &_s10CodingTypeON_83);
    atomic_store(result, (unint64_t *)&qword_1ED3C9898);
  }
  return result;
}

unint64_t sub_1BA57C1E8()
{
  unint64_t result;

  result = qword_1ED3C9888;
  if (!qword_1ED3C9888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA620, &_s10CodingTypeON_82);
    atomic_store(result, (unint64_t *)&qword_1ED3C9888);
  }
  return result;
}

unint64_t sub_1BA57C22C()
{
  unint64_t result;

  result = qword_1ED3A61F8;
  if (!qword_1ED3A61F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9E38, &_s10CodingTypeON_71);
    atomic_store(result, (unint64_t *)&qword_1ED3A61F8);
  }
  return result;
}

uint64_t sub_1BA57C270@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSelectorsExpression.init(from:)(a1, a2);
}

uint64_t FormatSelectorsExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v25[0] = a2;
  sub_1BAE723D8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE72450();
  sub_1BA4A2870(&qword_1ED3D11C0, (uint64_t (*)(uint64_t))sub_1BAE72450, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v25[0] = v13;
      MEMORY[0x1E0C80A78](v21);
      v25[-4] = &_s10CodingKeysON_252;
      v25[-3] = sub_1BAE724D0();
      v25[-2] = sub_1BA57C58C();
      v25[-1] = sub_1BAE72514();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71130((uint64_t)&unk_1E724DFD8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v25[1] = 0;
  v25[2] = 0;
  v26 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v18 = v28;
  *v12 = v27;
  v12[1] = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA57C58C()
{
  unint64_t result;

  result = qword_1ED3CB248;
  if (!qword_1ED3CB248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1B48, &_s10CodingKeysON_252);
    atomic_store(result, (unint64_t *)&qword_1ED3CB248);
  }
  return result;
}

uint64_t sub_1BA57C5D0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F737365636F7270;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F6C6F63;
}

void sub_1BA57C624(uint64_t a1, uint64_t a2)
{
  FormatSwitchListValue.encode(to:)(a1, a2);
}

void FormatSwitchListValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = v6;
  v8 = _s10CodingKeysOMa_41(255, v6, v13, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8C5AE0, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C5A90, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C5A68, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA57C718(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 128) = v11;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  v14 = *v1;
  *(_QWORD *)(v5 - 176) = v1[1];
  v15 = v2[3];
  v16 = v2[4];
  v17 = __swift_project_boxed_opaque_existential_1(v2, v15);
  sub_1BA6EC1EC(v4, (uint64_t)v17, v15, v4, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v13, v7, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v5 - 72) = v14;
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  v18 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v3, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = type metadata accessor for FormatSwitchListValue.CaseValue(255, *(_QWORD *)(v5 - 136), *(_QWORD *)(v5 - 144), v22);
  v24 = sub_1BB872EE0();
  *(_QWORD *)(v5 - 120) = MEMORY[0x1BCCE5B24](&unk_1BB916488, v23);
  v25 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v24, v5 - 120);
  v26 = *(_QWORD *)(v5 - 152);
  sub_1BA6EE974(v5 - 72, v5 - 112, v3, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 128), v24, v25);
  sub_1BA4A2E80(v3, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v26)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 160) + 8))(v13, *(_QWORD *)(v5 - 128));
  v28 = *(_QWORD *)(v5 - 168);
  *(_QWORD *)(v5 - 72) = *(_QWORD *)(v5 - 176);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v21(v28, v20, v19);
  swift_storeEnumTagMultiPayload();
  v30 = type metadata accessor for FormatSwitchListValue.DefaultValue(0, *(_QWORD *)(v5 - 136), *(_QWORD *)(v5 - 144), v29);
  swift_bridgeObjectRetain();
  v31 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchListValue<A>.DefaultValue, v30);
  v32 = *(_QWORD *)(v5 - 128);
  sub_1BA6232B0(v5 - 72, v5 - 112, v28, (uint64_t)sub_1BA90CF04, 0, v32, v30, v31);
  sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 160) + 8))(v13, v32);
}

uint64_t sub_1BA57CA18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA57CA44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA57CA44()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1BA57CA8C()
{
  return sub_1BB8744AC();
}

uint64_t sub_1BA57CAB4(_QWORD *a1)
{
  return FormatImageResize.encode(to:)(a1);
}

uint64_t FormatImageResize.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[4];
  uint64_t v21;
  _QWORD *v22;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v20[3] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v20[2] = (char *)v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  v20[1] = (char *)v20 - v9;
  MEMORY[0x1E0C80A78](v10);
  v20[0] = (char *)v20 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - v13;
  v21 = *v1;
  v15 = a1[3];
  v16 = a1[4];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v14, (uint64_t)sub_1BA90CF04, 0, v15, v16);
  result = sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1BA57CFB4()
{
  unsigned __int8 *v0;

  return sub_1BAD9CD38(*v0);
}

uint64_t sub_1BA57CFBC()
{
  unsigned __int8 *v0;

  return sub_1BADF73E4(*v0);
}

uint64_t sub_1BA57CFC4()
{
  unsigned __int8 *v0;

  return sub_1BADB6A28(*v0);
}

uint64_t sub_1BA57CFCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatFileReference.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BA57CFE8(_QWORD *a1)
{
  return FormatProgressViewNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatProgressViewNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[4];
  int v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v40 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v42 = &v38[-v6];
  MEMORY[0x1E0C80A78](v7);
  v44 = &v38[-v8];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v38[-v10];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v38[-v13];
  sub_1BAE7A75C(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = &v38[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = *(_QWORD *)v1;
  v18 = *(_QWORD *)(v1 + 8);
  v45 = *(_QWORD *)(v1 + 16);
  v43 = *(_QWORD *)(v1 + 24);
  v41 = *(_QWORD *)(v1 + 32);
  v39 = *(unsigned __int8 *)(v1 + 40);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BAE7A654();
  v23 = sub_1BA4A2870(&qword_1ED3ABF18, (uint64_t (*)(uint64_t))sub_1BAE7A654, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, v24, v20, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, v22, (uint64_t)&type metadata for FormatVersions.StarSkyC, v21, (uint64_t)v17, v23, (uint64_t)&off_1E734BC40);
  v25 = qword_1ED3C6D70;
  swift_bridgeObjectRetain();
  if (v25 != -1)
    swift_once();
  v26 = sub_1BB86EB84();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C50);
  v28 = *(void (**)(_BYTE *))(*(_QWORD *)(v26 - 8) + 16);
  v46 = v27;
  v28(v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v29 = v47;
  sub_1BAD0EC84(v19, v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1BA90CF04, 0);
  if (v29)
  {
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    ((void (*)(_BYTE *, uint64_t, uint64_t))v28)(v11, v46, v26);
    swift_storeEnumTagMultiPayload();
    v30 = swift_bridgeObjectRetain();
    sub_1BAD3A6A4(v30, 1, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v44;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v28)(v44, v46, v26);
    swift_storeEnumTagMultiPayload();
    v32 = v43;
    sub_1BA5E7FF4(v43);
    sub_1BAD3A8C4(v32, 2, 0, 0, v31, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v32);
    v33 = (uint64_t)v42;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v28)(v42, v46, v26);
    swift_storeEnumTagMultiPayload();
    v34 = v41;
    sub_1BA5E7FF4(v41);
    sub_1BAD3A8C4(v34, 3, 0, 0, v33, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v34);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476B78);
    v36 = (uint64_t)v40;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v28)(v40, v35, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BAD3AADC(v39, 4, 0, 0, v36, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BAE7A75C);
}

void sub_1BA57D4C4(_QWORD *a1)
{
  FormatSymbolConfig.encode(to:)(a1);
}

void FormatSymbolConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v18[1] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v20 = v1[1];
  v21 = v12;
  v19 = *((unsigned __int8 *)v1 + 16);
  v13 = *((unsigned __int8 *)v1 + 17);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BA6B8518();
  v22 = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSymbolConfig, v17, v14, (uint64_t)&type metadata for FormatSymbolConfig, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA57D66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 - 96);
  v3 = qword_1ED3C2478;
  swift_retain();
  if (v3 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v1 - 104);
  v7 = *(_QWORD *)(v1 - 72);
  sub_1BACF33A0(0, v2, v6, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA740434(v2, v6, *(unsigned int *)(v1 - 108), 0);
}

uint64_t sub_1BA57D9EC(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEA3C0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57DBA0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA57DB5C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA57DB5C()
{
  unint64_t result;

  result = qword_1ED39B4E8;
  if (!qword_1ED39B4E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Size, &type metadata for FormatSymbolConfig.Size);
    atomic_store(result, (unint64_t *)&qword_1ED39B4E8);
  }
  return result;
}

unint64_t sub_1BA57DBA0()
{
  unint64_t result;

  result = qword_1ED3A62C8;
  if (!qword_1ED3A62C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1788, &_s10CodingTypeON_13);
    atomic_store(result, (unint64_t *)&qword_1ED3A62C8);
  }
  return result;
}

uint64_t sub_1BA57DBE4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BA57DBFC(a1, *v1);
}

uint64_t sub_1BA57DBFC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLayoutOption, v13, v10, (uint64_t)&type metadata for FormatLayoutOption, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v9, v12, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v14 = sub_1BB86EB84();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v6, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA57DDA8(a2, (uint64_t)v6);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA57DDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  uint64_t v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEE4A2C;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57DF24();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE4A4C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA57DF24()
{
  unint64_t result;

  result = qword_1ED3A6208[0];
  if (!qword_1ED3A6208[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2680, &_s10CodingTypeON_188);
    atomic_store(result, qword_1ED3A6208);
  }
  return result;
}

uint64_t sub_1BA57DF68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNotExpression.init(from:)(a1, a2);
}

uint64_t FormatNotExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAEA7A48();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA7AC0();
  sub_1BA4A2870(&qword_1ED3D0E00, (uint64_t (*)(uint64_t))sub_1BAEA7AC0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_91;
      *(&v24 - 3) = sub_1BAEA7B40();
      *(&v24 - 2) = sub_1BA57E284();
      *(&v24 - 1) = sub_1BAEA7B84();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726D058);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA63C7BC();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA57E284()
{
  unint64_t result;

  result = qword_1ED3C8480;
  if (!qword_1ED3C8480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8CE8, &_s10CodingKeysON_91);
    atomic_store(result, (unint64_t *)&qword_1ED3C8480);
  }
  return result;
}

uint64_t sub_1BA57E2C8(_QWORD *a1)
{
  return FormatAccessibilityRole.init(from:)(a1);
}

uint64_t FormatAccessibilityRole.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_1BB872874();
  v9 = Dictionary<>.errorOnUnknownKeys.getter(v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
LABEL_8:
    sub_1BA57E5A0();
    v17 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v10 = sub_1BB8740EC();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v12 = (unint64_t *)(v10 + 40);
  while (1)
  {
    v13 = *v12;
    if (*v12 >= 4)
      break;
    v12 += 2;
    if (!--v11)
      goto LABEL_7;
  }
  v14 = *(v12 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v15 = v14;
  *(_QWORD *)(v15 + 8) = v13;
  *(_QWORD *)(v15 + 16) = &unk_1E7269A88;
  *(_OWORD *)(v15 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v14, v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA57E5A0()
{
  unint64_t result;

  result = qword_1ED3B70E0;
  if (!qword_1ED3B70E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD21C, &type metadata for FormatAccessibilityRole.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B70E0);
  }
  return result;
}

unint64_t sub_1BA57E5E4()
{
  unint64_t result;

  result = qword_1ED3B8230;
  if (!qword_1ED3B8230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityContainer, &type metadata for FormatAccessibilityContainer);
    atomic_store(result, (unint64_t *)&qword_1ED3B8230);
  }
  return result;
}

uint64_t sub_1BA57E628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTagBinding.Command.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Command.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA57E9FC();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726EE38;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA57E8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA57E980);
}

void sub_1BA57E8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAEC3B2C();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA57E980);
  }
  JUMPOUT(0x1BA57E7B4);
}

void sub_1BA57E964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA57E97CLL);
}

void sub_1BA57E990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA57EA40();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA57E980);
  }
  JUMPOUT(0x1BA57E7B4);
}

unint64_t sub_1BA57E9FC()
{
  unint64_t result;

  result = qword_1ED3B4AA0;
  if (!qword_1ED3B4AA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E01BC, &_s14descr1E72DA4C9V7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3B4AA0);
  }
  return result;
}

unint64_t sub_1BA57EA40()
{
  unint64_t result;

  result = qword_1ED3B5140;
  if (!qword_1ED3B5140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagNavigate, &type metadata for FormatTagNavigate);
    atomic_store(result, (unint64_t *)&qword_1ED3B5140);
  }
  return result;
}

uint64_t sub_1BA57EA84(_QWORD *a1)
{
  return FormatStyleImage.encode(to:)(a1);
}

uint64_t FormatStyleImage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  __int128 v41;
  char v42;
  _QWORD *v43;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v35 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - v10;
  sub_1BAEC0740(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v1;
  v15 = v1[1];
  v37 = v1[2];
  v38 = v15;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAEC0638();
  v20 = sub_1BA4A2870(&qword_1ED3D0C60, (uint64_t (*)(uint64_t))sub_1BAEC0638, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStyleImage, v21, v17, (uint64_t)&type metadata for FormatStyleImage, v19, (uint64_t)&type metadata for FormatVersions.JazzkonG, v18, (uint64_t)v14, v20, (uint64_t)&off_1E734BD00);
  v22 = qword_1ED3C6D60;
  swift_retain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C38);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v40(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = (uint64_t)v14;
  sub_1BAD1F594(v16, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v3)
  {
    v26 = (uint64_t)v39;
    v40(v39, v24, v23);
    swift_storeEnumTagMultiPayload();
    v27 = swift_retain();
    sub_1BAD1F6F0(v27, 1, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v28 = (uint64_t)v36;
    v40(v36, v24, v23);
    swift_storeEnumTagMultiPayload();
    v29 = *(_QWORD *)(v37 + 16);
    swift_bridgeObjectRetain();
    if (v29 && (sub_1BAE52FEC(v28, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v30 = v14;
      v41 = xmmword_1BB8D2D60;
      v42 = 0;
      v31 = swift_bridgeObjectRetain();
      v32 = sub_1BA67F4CC(v31);
      swift_bridgeObjectRelease();
      v43 = v32;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v43, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      sub_1BAEC07B8();
      sub_1BA4A2870(&qword_1ED3AE778, (uint64_t (*)(uint64_t))sub_1BAEC07B8, MEMORY[0x1E0DED188]);
      v33 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v33, MEMORY[0x1E0DEA970]);
      v25 = (uint64_t)v30;
      sub_1BB874464();
      swift_release();
    }
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BAEC0740);
}

uint64_t sub_1BA57EF0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA57EF40 + 4 * byte_1BB8AEB1C[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA57EF40()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA57EF60()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA57EF7C()
{
  return 1885433183;
}

void sub_1BA57EF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  _QWORD *v23;
  void *v24;
  id v25;
  _QWORD v26[6];

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = *(void **)(a5 + 16);
  swift_retain();
  swift_unknownObjectRetain();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1BA67F4CC(v16);
  swift_bridgeObjectRelease();
  sub_1BA57F420((uint64_t)v17);
  swift_release();
  v18 = objc_allocWithZone(MEMORY[0x1E0D58948]);
  v19 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_1BB872D9C();
  v21 = objc_msgSend(v18, sel_initWithContext_articleIDs_ignoreCacheForArticleIDs_, v15, v19, v20);

  swift_unknownObjectRelease();
  objc_msgSend(v21, sel_setQualityOfService_, 25);
  objc_msgSend(v21, sel_setRelativePriority_, 1);
  objc_msgSend(v21, sel_setShouldFailOnMissingObjects_, 1);
  objc_msgSend(v21, sel_setCachePolicy_, a7);
  objc_msgSend(v21, sel_setMaximumCachedAge_, 1.79769313e308);
  v22 = objc_msgSend(objc_msgSend(v15, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  if (v22)
  {
    objc_msgSend(v21, sel_setConfiguration_, v22);
    swift_unknownObjectRelease();
    objc_msgSend(v21, sel_setCanSendFetchCompletionSynchronously_, a7 == 3);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a3;
    v23[3] = a4;
    v23[4] = a6;
    v23[5] = sub_1BA573ED8;
    v23[6] = v14;
    v26[4] = sub_1BA5738C4;
    v26[5] = v23;
    v26[0] = MEMORY[0x1E0C809B0];
    v26[1] = 1107296256;
    v26[2] = sub_1BA573874;
    v26[3] = &block_descriptor_89;
    v24 = _Block_copy(v26);
    swift_bridgeObjectRetain();
    v25 = v21;
    swift_retain();
    swift_release();
    objc_msgSend(v25, sel_setFetchCompletionBlock_, v24);
    _Block_release(v24);

    objc_msgSend(v25, sel_start);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BA57F260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v22 = a4;
  v23 = a5;
  sub_1BA6F7A88(0, &qword_1ED3AB138, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v22 - v14;
  v16 = *(void **)(a2 + 64);
  sub_1BA57F420(a3);
  v17 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v18, v15, v11);
  v20 = v19 + ((v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v20 = a3;
  *(_BYTE *)(v20 + 8) = a6;
  aBlock[4] = sub_1BA511F74;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA814B30;
  aBlock[3] = &block_descriptor_192;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v16, sel_fetchPuzzlesForPuzzleIDs_cachePolicy_qualityOfService_callbackQueue_completionHandler_, v17, v22, 25, v23, v21);
  _Block_release(v21);

}

uint64_t sub_1BA57F420(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA57F544(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA57F544(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BA57F544(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BA76EAE0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA57F544(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA57F560(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA57F560(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3D4478, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA57F6E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageRenderingMode.init(from:)(a1, a2);
}

uint64_t FormatImageRenderingMode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v22[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v6;
  v13 = v5;
  v14 = v8;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA57FA4C();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v15 = sub_1BB8740EC();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v17 = (unint64_t *)(v15 + 40);
  while (1)
  {
    v18 = *v17;
    if (*v17 >= 4)
      break;
    v17 += 2;
    if (!--v16)
      goto LABEL_7;
  }
  v19 = *(v17 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v20 = v19;
  *(_QWORD *)(v20 + 8) = v18;
  *(_QWORD *)(v20 + 16) = &unk_1E726C590;
  *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v19, v18);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v13);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA57F984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  *v3 = 1;
  JUMPOUT(0x1BA57F958);
}

void sub_1BA57F99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  *v3 = 2;
  JUMPOUT(0x1BA57F958);
}

void sub_1BA57F9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4CDF6C(0, &qword_1ED3B79E0, (uint64_t (*)(void))sub_1BA827154, (uint64_t)&type metadata for FormatImageRenderingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BA57FA90();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_QWORD *)(v4 - 96);
    v5 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v5;
    JUMPOUT(0x1BA57FA44);
  }
  JUMPOUT(0x1BA57F874);
}

unint64_t sub_1BA57FA4C()
{
  unint64_t result;

  result = qword_1ED3CABA8;
  if (!qword_1ED3CABA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9EB0, &_s10CodingTypeON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3CABA8);
  }
  return result;
}

unint64_t sub_1BA57FA90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B79D8;
  if (!qword_1ED3B79D8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B79E0, (uint64_t (*)(void))sub_1BA827154, (uint64_t)&type metadata for FormatImageRenderingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B79D8);
  }
  return result;
}

uint64_t sub_1BA57FAF8()
{
  uint64_t v0;

  return sub_1BA57FB14(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BA57FB14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v17[5];
  uint64_t v18;
  unint64_t v19;

  v4 = *a2;
  v19 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v7 = *(_QWORD *)(type metadata accessor for FormatResource(0) - 8);
    v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v9 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v10 = *(_OWORD *)(a3 + 48);
      v17[2] = *(_OWORD *)(a3 + 32);
      v17[3] = v10;
      v17[4] = *(_OWORD *)(a3 + 64);
      v18 = *(_QWORD *)(a3 + 80);
      v11 = *(_OWORD *)(a3 + 16);
      v17[0] = *(_OWORD *)a3;
      v17[1] = v11;
      FormatResource.loadableFonts(in:)((uint64_t)v17);
      if (v3)
        break;
      sub_1BB384364(v12);
      v8 += v9;
      if (!--v5)
      {
        v13 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_7:
    v14 = sub_1BA57FC74(v13);
    swift_bridgeObjectRelease();
    v15 = FeedFontManager.load(fonts:downloadIfNeeded:)(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
}

uint64_t sub_1BA57FC74(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97E0);
  sub_1BAC87674();
  result = sub_1BB873060();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1BCCE4630](i, a1);
        sub_1BA9D7034(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1BA9D7034(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA57FDCC()
{
  unint64_t result;

  result = qword_1ED3B97E0;
  if (!qword_1ED3B97E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B97E0);
  }
  return result;
}

uint64_t sub_1BA57FE08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1BB86DD20();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BB873DD4();
    result = sub_1BA580CE4(v3);
    v7 = result;
    v9 = v8;
    v11 = v10 & 1;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v3 + 32))
    {
      if (((*(_QWORD *)(v3 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v3 + 36) != v9)
        goto LABEL_18;
      v12 = *(id *)(*(_QWORD *)(v3 + 48) + 16 * v7);
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      result = sub_1BA57FFE8(v7, v9, v11 & 1, v3);
      v7 = result;
      v9 = v13;
      v11 = v14 & 1;
      if (!--v4)
      {
        sub_1BA8CA884(result, v13, v14 & 1);
        v5 = v18;
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_9:
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v15 = a1;
      else
        v15 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v16 = sub_1BB873BF4();
      a1 = sub_1BA9DBE30(v15, v16);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v17 = sub_1BA5803BC(v5, a1);
    swift_bridgeObjectRelease();
    sub_1BB86DD2C();
    return v17;
  }
  return result;
}

uint64_t FeedFontManager.load(fonts:downloadIfNeeded:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  __int128 v10;

  v2 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v3 = sub_1BA57FE08(a1);
  v4 = v3;
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v3 + 16))
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    sub_1BA5801DC(a1, &v10);
    swift_release();
    sub_1BA4AD288(0, &qword_1ED3B0840, (uint64_t)&type metadata for FeedFontLoadResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v8 = sub_1BB86E9E0();
    swift_release();
    return v8;
  }
  if (!sub_1BB873BF4())
    goto LABEL_5;
LABEL_3:
  v5 = swift_release();
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4AD288(0, &qword_1ED39DA30, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86EC14();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = sub_1BA83DDE4;
  v6[3] = v2;
  v6[4] = v4;
  swift_retain();
  v7 = (void *)sub_1BB86E854();
  v8 = sub_1BB86E968();
  swift_release();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1BA5801DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1BB86DD20();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    sub_1BA580860(v5, a1);
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BB86DD2C();
    swift_release();
    v8 = *(_QWORD *)(v7 + 16);
    v9 = MEMORY[0x1E0DEE9D8];
    if (v8)
    {
      v17 = MEMORY[0x1E0DEE9D8];
      sub_1BB873DD4();
      v10 = (void **)(v7 + 32);
      do
      {
        v11 = *v10;
        v10 += 2;
        v12 = v11;
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
        --v8;
      }
      while (v8);
      v9 = v17;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v13 = a1;
      else
        v13 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v14 = sub_1BB873BF4();
      a1 = sub_1BA9DBE30(v13, v14);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v16 = sub_1BA5803BC(v9, a1);
    swift_bridgeObjectRelease();
    v15 = sub_1BA580750(v16);
    swift_release();
    result = swift_release();
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v15 = MEMORY[0x1E0DEE9D8];
  }
  *a2 = v7;
  a2[1] = v15;
  return result;
}

uint64_t sub_1BA5803BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t isStackAllocationSafe;
  char v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v35[3];

  v2 = a2;
  v35[2] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v35[0] = a1;
  v33 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    if (sub_1BB873F30())
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease();
    return v2;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_21;
LABEL_4:
  v5 = 0;
  v6 = v2 + 56;
  v34 = a1 & 0xC000000000000001;
  v7 = a1 & 0xFFFFFFFFFFFFFF8;
  v32 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0)
    v7 = a1;
  v30 = a1 + 32;
  v31 = v7;
  while (1)
  {
    if (v34)
    {
      v8 = (id)MEMORY[0x1BCCE4630](v5, a1);
    }
    else
    {
      if (v5 >= *(_QWORD *)(v32 + 16))
        __break(1u);
      v8 = *(id *)(v30 + 8 * v5);
    }
    v9 = v8;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    v11 = sub_1BB8738AC();
    v12 = -1 << *(_BYTE *)(v2 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
      break;
LABEL_19:

    if (v33)
    {
      swift_bridgeObjectRetain();
      v19 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v5 == v19)
        goto LABEL_21;
    }
    else if (v5 == *(_QWORD *)(v32 + 16))
    {
      goto LABEL_21;
    }
  }
  sub_1BA57FDCC();
  v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
  v15 = sub_1BB8738B8();

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_19;
      v17 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      v18 = sub_1BB8738B8();

    }
    while ((v18 & 1) == 0);
  }

  v35[1] = v5;
  v21 = *(_BYTE *)(v2 + 32);
  v22 = (unint64_t)((1 << v21) + 63) >> 6;
  v23 = 8 * v22;
  if ((v21 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v29 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v23);
    sub_1BA4B5700((unint64_t *)((char *)&v29 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0)), v22, v2, v13, v35);
    v25 = v24;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = (void *)swift_slowAlloc();
    memcpy(v26, (const void *)(v2 + 56), v23);
    sub_1BA4B5700((unint64_t *)v26, v22, v2, v13, v35);
    v25 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE5C38](v26, -1, -1);
  }
  return v25;
}

uint64_t sub_1BA580750(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1BB873BF4();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BA85F600(&v8, v3 + 4, v2, a1);
  result = sub_1BA6EBD18();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

void sub_1BA580860(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  id v9;
  id v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = a1;
  v36 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  v37 = a2 & 0xC000000000000001;
  v38 = a2 + 56;
  v7 = swift_bridgeObjectRetain();
  v8 = 0;
  v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v32 = v6;
  v33 = v7;
  while (1)
  {
    if (v5)
    {
      v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v13 = v12 | (v8 << 6);
      goto LABEL_24;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v6)
      goto LABEL_38;
    v15 = *(_QWORD *)(v36 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v6)
        goto LABEL_38;
      v15 = *(_QWORD *)(v36 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v6)
          goto LABEL_38;
        v15 = *(_QWORD *)(v36 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v6)
            goto LABEL_38;
          v15 = *(_QWORD *)(v36 + 8 * v8);
          if (!v15)
          {
            v16 = v14 + 4;
            if (v16 >= v6)
            {
LABEL_38:
              swift_release();
              return;
            }
            v15 = *(_QWORD *)(v36 + 8 * v16);
            v8 = v16;
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_23:
    v5 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v2 + 48) + 16 * v13;
    v18 = *(void **)v17;
    v19 = *(void **)(v17 + 8);
    if (v37)
    {
      v9 = v19;
      v10 = v18;
      v11 = sub_1BB873C18();

      if ((v11 & 1) == 0)
        goto LABEL_6;
      goto LABEL_32;
    }
    if (*(_QWORD *)(a2 + 16))
    {
      v34 = *(void **)(v17 + 8);
      v35 = v19;
      v9 = v18;
      v20 = sub_1BB8738AC();
      v21 = -1 << *(_BYTE *)(a2 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v38 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97E0);
        v23 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
        v24 = sub_1BB8738B8();

        if ((v24 & 1) == 0)
        {
          v25 = ~v21;
          do
          {
            v22 = (v22 + 1) & v25;
            if (((*(_QWORD *)(v38 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
              goto LABEL_37;
            v26 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
            v27 = sub_1BB8738B8();

          }
          while ((v27 & 1) == 0);
        }

        v6 = v32;
        v2 = v33;
        v19 = v34;
LABEL_32:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_1BA580BC4(0, v31[2] + 1, 1, v31);
        v29 = v31[2];
        v28 = v31[3];
        if (v29 >= v28 >> 1)
          v31 = sub_1BA580BC4((_QWORD *)(v28 > 1), v29 + 1, 1, v31);
        v31[2] = v29 + 1;
        v30 = &v31[2 * v29];
        v30[4] = v18;
        v30[5] = v19;
      }
      else
      {
LABEL_37:

        v6 = v32;
        v2 = v33;
LABEL_6:

      }
    }
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v6)
      goto LABEL_38;
    v15 = *(_QWORD *)(v36 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

_QWORD *sub_1BA580BC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED39DC48, (uint64_t)&type metadata for LoadedFont, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA81CA70(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA580CE8(_QWORD *a1)
{
  return FormatWebEmbedNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatWebEmbedNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v50[4];
  int v51;
  _BYTE *v52;
  int v53;
  _BYTE *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v52 = &v50[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v54 = &v50[-v6];
  MEMORY[0x1E0C80A78](v7);
  v58 = &v50[-v8];
  MEMORY[0x1E0C80A78](v9);
  v62 = &v50[-v10];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v50[-v12];
  sub_1BAE7B880(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v50[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *(_QWORD *)v1;
  v17 = *(_QWORD *)(v1 + 8);
  v19 = *(_QWORD *)(v1 + 16);
  v60 = *(_QWORD *)(v1 + 24);
  v61 = v19;
  v59 = *(unsigned __int8 *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 40);
  v56 = *(_QWORD *)(v1 + 48);
  v57 = v20;
  v55 = *(unsigned __int8 *)(v1 + 56);
  v53 = *(unsigned __int8 *)(v1 + 57);
  v51 = *(unsigned __int8 *)(v1 + 58);
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BAE7B778();
  v24 = sub_1BA4A2870(&qword_1ED3D1100, (uint64_t (*)(uint64_t))sub_1BAE7B778, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, v25, v21, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v16, v24, (uint64_t)&off_1E734BD80);
  v26 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v26 != -1)
    swift_once();
  v27 = sub_1BB86EB84();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C20);
  v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v29(v13, v28, v27);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v30 = v63;
  sub_1BAD14EB8(v18, v17, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  if (v30)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v16;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v32 = (uint64_t)v62;
    v29(v62, v28, v27);
    swift_storeEnumTagMultiPayload();
    v34 = v60;
    v33 = v61;
    v63 = v27;
    v35 = v59;
    sub_1BA6E6C54(v61, v60, v59);
    sub_1BAD4880C(v33, v34, v35, 1, 0, 0, v32, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v33, v34, v35);
    v31 = (uint64_t)v16;
    v36 = v29;
    v38 = v56;
    v37 = v57;
    v39 = v55;
    sub_1BA6E6C54(v57, v56, v55);
    if (qword_1ED3C4168 != -1)
      swift_once();
    v40 = v63;
    v41 = __swift_project_value_buffer(v63, (uint64_t)qword_1ED476900);
    v42 = (uint64_t)v58;
    v36(v58, v41, v40);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4880C(v37, v38, v39, 2, 0, 0, v42, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v37, v38, v39);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v43 = v63;
    v44 = __swift_project_value_buffer(v63, (uint64_t)qword_1ED476B78);
    v45 = (uint64_t)v54;
    v36(v54, v44, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD48A40(v53, 3, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    if (qword_1ED3C6D00 != -1)
      swift_once();
    v46 = v63;
    v47 = __swift_project_value_buffer(v63, (uint64_t)qword_1ED476B48);
    v48 = (uint64_t)v52;
    v36(v52, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BAD48A40(v51, 4, 0, 0, v48, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BAE7B880);
}

uint64_t sub_1BA5812A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5812C8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5812C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  void *v47;
  __int128 v48;
  char v49;
  __int128 v50;
  char v51;
  unint64_t v52;

  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  *(_QWORD *)&v46 = v2;
  *(_QWORD *)&v45 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v38 - v3;
  sub_1BAEFAF0C();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE73434();
  sub_1BA4A2870(&qword_1ED3D0D90, (uint64_t (*)(uint64_t))sub_1BAE73434, (uint64_t)&unk_1BB8FFC6C);
  v11 = v47;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v43 = v4;
  v44 = v7;
  v13 = v46;
  v47 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = v47;
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v10 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      sub_1BAE734B4();
      sub_1BA581B14();
      sub_1BAE734F8();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E724FE88);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v10;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v10, v23, 1);
      (*(void (**)(char *, void *))(v44 + 8))(v9, v16);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFAF0C);
  v22 = v21;
  v50 = xmmword_1BB8A1A10;
  v51 = 0;
  sub_1BA581B58();
  sub_1BB8740D4();
  v42 = a1;
  v50 = xmmword_1BB8D2D60;
  v51 = 0;
  v28 = sub_1BB874098();
  v30 = v29;
  v50 = xmmword_1BB8D2D70;
  v51 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v40 = v28;
  v41 = v48;
  v50 = xmmword_1BB8D2D90;
  v51 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v39 = v48;
  v38 = xmmword_1BB8D2D80;
  v50 = xmmword_1BB8D2D80;
  v51 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v48 = v38;
    v49 = 0;
    sub_1BAEB7D04();
    v31 = v43;
    sub_1BB8740D4();
    *(_QWORD *)&v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v13);
  }
  else
  {
    *(_QWORD *)&v38 = MEMORY[0x1E0DEE9D8];
  }
  v46 = xmmword_1BB8D2DA0;
  v50 = xmmword_1BB8D2DA0;
  v51 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v48 = v46;
    v49 = 0;
    sub_1BB8740D4();
    v32 = v30;
    v33 = v52;
  }
  else
  {
    v32 = v30;
    v33 = 0;
  }
  v46 = xmmword_1BB8D2DB0;
  v50 = xmmword_1BB8D2DB0;
  v51 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v48 = v46;
    v49 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)&v46 = v20;
    v34 = v52;
  }
  else
  {
    *(_QWORD *)&v46 = v20;
    v34 = 0x8000000000000000;
  }
  v45 = xmmword_1BB8D2DD0;
  v50 = xmmword_1BB8D2DD0;
  v51 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v48 = v45;
    v49 = 0;
    sub_1BB8740D4();
    v35 = v52;
  }
  else
  {
    v35 = 1;
  }
  v36 = v41;
  (*(void (**)(char *, void *))(v44 + 8))(v9, v47);
  *(_QWORD *)&v50 = v36;
  *(_QWORD *)&v48 = v39;
  v52 = v34;
  type metadata accessor for FormatAdMetricsNode();
  swift_allocObject();
  v10 = FormatAdMetricsNode.init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)(v46, v22, v37, v40, v32, (uint64_t *)&v50, (uint64_t *)&v48, v38, v33, (uint64_t *)&v52, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v10;
}

unint64_t sub_1BA581B14()
{
  unint64_t result;

  result = qword_1ED3C80B8;
  if (!qword_1ED3C80B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1720, &_s10CodingKeysON_248);
    atomic_store(result, (unint64_t *)&qword_1ED3C80B8);
  }
  return result;
}

unint64_t sub_1BA581B58()
{
  unint64_t result;

  result = qword_1ED3B7E00;
  if (!qword_1ED3B7E00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeContent, &type metadata for FormatAdMetricsNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7E00);
  }
  return result;
}

uint64_t FormatAdMetricsNode.init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = *a6;
  v18 = *a7;
  v19 = *a10;
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a4;
  *(_QWORD *)(v11 + 40) = a5;
  *(_QWORD *)(v11 + 48) = v17;
  *(_QWORD *)(v11 + 56) = v18;
  swift_beginAccess();
  *(_QWORD *)(v11 + 64) = a8;
  swift_beginAccess();
  *(_QWORD *)(v11 + 72) = a9;
  swift_beginAccess();
  *(_QWORD *)(v11 + 80) = v19;
  swift_beginAccess();
  *(_BYTE *)(v11 + 88) = a11;
  return v11;
}

uint64_t sub_1BA581C90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatColorConditionalProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorConditionalProcessor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  sub_1BA5821B0(0, &qword_1ED39DBB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA582108();
  sub_1BB87468C();
  if (!v2)
  {
    v34 = 2;
    sub_1BA58289C();
    sub_1BB874068();
    v10 = v35;
    sub_1BA58252C(0, &qword_1ED3B94D0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v34 = 1;
    sub_1BA60FB80();
    sub_1BB874068();
    v29 = a2;
    v32 = v7;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v35)
      v13 = v35;
    else
      v13 = MEMORY[0x1E0DEE9D8];
    sub_1BA58214C();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(inited + 32) = v10;
    v31 = v10;
    sub_1BA582874(v10);
    v15 = sub_1BA58220C(v13);
    swift_bridgeObjectRelease();
    v35 = inited;
    sub_1BA582574(v15);
    v16 = v35;
    v17 = *(_QWORD *)(v35 + 16);
    if (v17)
    {
      v30 = v6;
      swift_bridgeObjectRetain();
      v18 = 0;
      v33 = v16;
      do
      {
        v19 = v16 + 8 * v18;
        v20 = *(_QWORD *)(v19 + 32);
        if ((~v20 & 0xF000000000000007) != 0)
        {
          sub_1BA74444C(*(_QWORD *)(v19 + 32));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1BA582518(0, v12[2] + 1, 1, v12);
          v22 = v12[2];
          v21 = v12[3];
          if (v22 >= v21 >> 1)
            v12 = sub_1BA582518((_QWORD *)(v21 > 1), v22 + 1, 1, v12);
          v12[2] = v22 + 1;
          v12[v22 + 4] = v20;
          v16 = v33;
        }
        ++v18;
      }
      while (v17 != v18);
      swift_bridgeObjectRelease();
      v6 = v30;
    }
    swift_bridgeObjectRelease();
    v23 = v32;
    if (v12[2])
    {
      v34 = 0;
      sub_1BA5820C4();
      sub_1BB8740D4();
      sub_1BA582888(v31);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
      v27 = v29;
      *v29 = v35;
      v27[1] = (uint64_t)v12;
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = sub_1BB873D68();
      swift_allocError();
      v26 = v25;
      sub_1BA909FB4();
      *v26 = &type metadata for FormatColorProcessor;
      sub_1BB874008();
      sub_1BB873D38();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC460], v24);
      swift_willThrow();
      sub_1BA582888(v31);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5820C4()
{
  unint64_t result;

  result = qword_1ED39D098;
  if (!qword_1ED39D098)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorExpression, &type metadata for FormatColorExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39D098);
  }
  return result;
}

unint64_t sub_1BA582108()
{
  unint64_t result;

  result = qword_1ED39D488;
  if (!qword_1ED39D488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EE24C, &type metadata for FormatColorConditionalProcessor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39D488);
  }
  return result;
}

void sub_1BA58214C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A0A18)
  {
    sub_1BA58252C(255, &qword_1ED39FF70, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEB940]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A0A18);
  }
}

void sub_1BA5821B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA582108();
    v7 = a3(a1, &type metadata for FormatColorConditionalProcessor.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA58220C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t *v4;
  uint64_t (*v5)(void);
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA582344(0, v1, 0);
    v4 = (unint64_t *)(a1 + 32);
    v5 = MEMORY[0x1E0DEB940];
    do
    {
      v6 = *v4++;
      sub_1BA74444C(v6);
      sub_1BA4AD288(0, &qword_1ED39FF70, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))v5);
      swift_dynamicCast();
      v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA582344(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v2 = v11;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BA582344(v7 > 1, v8 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      *(_QWORD *)(v2 + 8 * v8 + 32) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA582344(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA582360(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BA582360(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA58281C(0, (unint64_t *)&qword_1ED3A0A18, &qword_1ED39FF70, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BA4AD288(0, &qword_1ED39FF70, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *sub_1BA582518(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1ED3C0568, (uint64_t)&type metadata for FormatColorProcessor);
}

void sub_1BA58252C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for FormatColorProcessor);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA582574(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BA5826F4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  sub_1BA4AD288(0, &qword_1ED39FF70, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *sub_1BA5826F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA58281C(0, (unint64_t *)&qword_1ED3A0A18, &qword_1ED39FF70, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39742C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1BA58281C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4AD288(255, a3, a4, a5);
    v6 = sub_1BB874218();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BA582874(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA74444C(result);
  return result;
}

unint64_t sub_1BA582888(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA74447C(result);
  return result;
}

unint64_t sub_1BA58289C()
{
  unint64_t result;

  result = qword_1ED3B60E0;
  if (!qword_1ED3B60E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorProcessor, &type metadata for FormatColorProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED3B60E0);
  }
  return result;
}

uint64_t sub_1BA5828E0@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatContentSizeCategory.init(from:)(a1, a2);
}

uint64_t FormatContentSizeCategory.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  v10 = v2;
  if (v2)
  {
    v31 = v7;
    goto LABEL_4;
  }
  __swift_project_boxed_opaque_existential_1(&v32, v33);
  v11 = sub_1BB8743B0();
  v21 = v11;
  v22 = v12;
  v23 = v11 == 7958113 && v12 == 0xE300000000000000;
  if (v23 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v24 = -64;
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    *a2 = v24;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  if (v21 == 1480683374 && v22 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v24 = -63;
    goto LABEL_18;
  }
  if (v21 == 0x5841796C6E6FLL && v22 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v24 = -62;
    goto LABEL_18;
  }
  v31 = v7;
  sub_1BA98D1F0();
  v28 = swift_allocError();
  *v29 = v21;
  v29[1] = v22;
  v29[2] = 0;
  v29[3] = 0;
  v29[4] = 0xE000000000000000;
  v10 = (void *)v28;
  swift_willThrow();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_4:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v30 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v31;
  if ((v14 & 1) == 0)
    goto LABEL_10;
  v16 = sub_1BB8740EC();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1BB3B623C();
    v32 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v18 = (unint64_t *)(v16 + 40);
  while (1)
  {
    v19 = *v18;
    if (*v18 >= 4)
      break;
    v18 += 2;
    if (!--v17)
      goto LABEL_9;
  }
  v25 = *(v18 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v26 = (void *)swift_allocError();
  *(_QWORD *)v27 = v25;
  *(_QWORD *)(v27 + 8) = v19;
  *(_QWORD *)(v27 + 16) = &unk_1E726FC78;
  *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v25, v19);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v6);

  sub_1BA7F8B78(a1, (uint64_t)v26);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA5830F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGradientDirection.init(from:)(a1, a2);
}

uint64_t FormatGradientDirection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  __int128 v30;

  v3 = v2;
  v27 = a2;
  sub_1BAE94810();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE94888();
  sub_1BA4A2870(&qword_1ED3D1070, (uint64_t (*)(uint64_t))sub_1BAE94888, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_OWORD *)v27;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v27 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_128;
      *(&v26 - 3) = sub_1BAE94908();
      *(&v26 - 2) = sub_1BA583470();
      *(&v26 - 1) = sub_1BAE9494C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726BB18);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5834B4();
  v28 = 0uLL;
  v29 = 0;
  sub_1BB8740D4();
  v18 = v30;
  v28 = xmmword_1BB8A1A10;
  v29 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v30;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA583470()
{
  unint64_t result;

  result = qword_1ED3CA470;
  if (!qword_1ED3CA470)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAED0, &_s10CodingKeysON_128);
    atomic_store(result, (unint64_t *)&qword_1ED3CA470);
  }
  return result;
}

unint64_t sub_1BA5834B4()
{
  unint64_t result;

  result = qword_1ED3B3308;
  if (!qword_1ED3B3308)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPoint, &type metadata for FormatPoint);
    atomic_store(result, (unint64_t *)&qword_1ED3B3308);
  }
  return result;
}

uint64_t sub_1BA5834F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSlot.Resolved.init(from:)(a1, a2);
}

uint64_t FormatContentSlot.Resolved.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  sub_1BA583F90(0, &qword_1ED39C158, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - v6;
  v8 = v1[2];
  v25 = v1[3];
  v26 = v8;
  v9 = v1[4];
  v23 = v1[5];
  v24 = v9;
  v10 = v1[6];
  v21 = v1[7];
  v22 = v10;
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1BA583F4C();
  sub_1BB8746C8();
  LOBYTE(v28) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v16 = v24;
    v15 = v25;
    v17 = v22;
    v18 = v23;
    v28 = v26;
    v27 = 1;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA639454();
    sub_1BB8741AC();
    v28 = v15;
    v27 = 2;
    sub_1BA6BCC84();
    sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    v28 = v16;
    v27 = 3;
    sub_1BA4B07F0(0, &qword_1ED3AAF70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB62CAC8(&qword_1ED3AAF78, (unint64_t *)&unk_1ED3A7F30, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemObject.Resolved, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v28 = v18;
    v27 = 4;
    sub_1BB62C97C();
    sub_1BA584250();
    sub_1BB8741AC();
    v28 = v17;
    v27 = 5;
    sub_1BB62C9E0();
    sub_1BB62CA5C(&qword_1ED3A07A0, (uint64_t (*)(uint64_t))sub_1BB62C9E0, (uint64_t (*)(void))sub_1BA639454);
    sub_1BB8741AC();
    v28 = v21;
    v27 = 6;
    sub_1BA583EE8();
    sub_1BB62CA5C((unint64_t *)&unk_1ED3AAC70, (uint64_t (*)(uint64_t))sub_1BA583EE8, (uint64_t (*)(void))sub_1BA82237C);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t FormatContentSlot.Resolved.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BA583F90(0, &qword_1ED39C0B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA583F4C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v33) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v31 = v10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v32 = 1;
  sub_1BA56E250();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v30 = v12;
  v13 = v33;
  sub_1BA6BCC84();
  v32 = 2;
  sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v29 = v13;
  v15 = v33;
  sub_1BA4B07F0(0, &qword_1ED3AAF70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v32 = 3;
  sub_1BB62CAC8(&qword_1ED3AAF80, (unint64_t *)&unk_1ED3A7F40, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemObject.Resolved, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v16 = v33;
  sub_1BB62C97C();
  v32 = 4;
  sub_1BA5841D4();
  swift_bridgeObjectRetain();
  v26 = 0;
  sub_1BB8740D4();
  v27 = v16;
  v17 = v33;
  sub_1BB62C9E0();
  v32 = 5;
  sub_1BA584168(&qword_1ED3A07A8, (uint64_t (*)(uint64_t))sub_1BB62C9E0, (uint64_t (*)(void))sub_1BA56E250);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v28 = v17;
  v18 = v33;
  sub_1BA583EE8();
  v32 = 6;
  sub_1BA584168(&qword_1ED3AAC80, (uint64_t (*)(uint64_t))sub_1BA583EE8, (uint64_t (*)(void))sub_1BA822338);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = v33;
  v20 = v30;
  swift_bridgeObjectRetain();
  v21 = v15;
  v22 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v18;
  v23 = v27;
  swift_bridgeObjectRetain();
  v24 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v31;
  a2[1] = v20;
  a2[2] = v22;
  a2[3] = v21;
  a2[4] = v23;
  a2[5] = v24;
  a2[6] = v26;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA583EE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC68)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC68);
  }
}

unint64_t sub_1BA583F4C()
{
  unint64_t result;

  result = qword_1ED39B3D0;
  if (!qword_1ED39B3D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB935570, &_s8ResolvedV10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1ED39B3D0);
  }
  return result;
}

void sub_1BA583F90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA583F4C();
    v7 = a3(a1, &_s8ResolvedV10CodingKeysON_3, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA583FEC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA584084(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA81D804(255, (unint64_t *)&qword_1ED3B9440, (void (*)(uint64_t))type metadata accessor for FormatOption);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA584114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9440)
  {
    type metadata accessor for FormatOption();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9440);
  }
}

uint64_t sub_1BA584168(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    v7 = a3();
    v8[0] = MEMORY[0x1E0DEA9A0];
    v8[1] = v7;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5841D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED3A07E0;
  if (!qword_1ED3A07E0)
  {
    sub_1BB62C97C();
    v2 = v1;
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A07E0);
  }
  return result;
}

unint64_t sub_1BA584250()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED3A07D0;
  if (!qword_1ED3A07D0)
  {
    sub_1BB62C97C();
    v2 = v1;
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A07D0);
  }
  return result;
}

void sub_1BA5842CC(_QWORD *a1)
{
  FormatHeadlineBinding.Image.encode(to:)(a1);
}

void FormatHeadlineBinding.Image.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v17[0] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[3] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatHeadlineBinding.Image, v16, v13, (uint64_t)&type metadata for FormatHeadlineBinding.Image, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA584460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA5847A4(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5847A4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1E68;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5848C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5848C8()
{
  unint64_t result;

  result = qword_1ED3A6B98;
  if (!qword_1ED3A6B98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA608, &_s10CodingTypeON_84);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B98);
  }
  return result;
}

void sub_1BA58490C(_QWORD *a1)
{
  FormatOptionsNodeStatementValue.encode(to:)(a1);
}

void FormatOptionsNodeStatementValue.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[26];

  v2 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v2);
  v32[8] = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA75BCB4(0);
  MEMORY[0x1E0C80A78](v4);
  v32[7] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v6);
  v32[6] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v32[5] = (char *)v32 - v9;
  MEMORY[0x1E0C80A78](v10);
  v32[4] = (char *)v32 - v11;
  MEMORY[0x1E0C80A78](v12);
  v32[3] = (char *)v32 - v13;
  MEMORY[0x1E0C80A78](v14);
  v32[2] = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v16);
  v32[1] = (char *)v32 - v17;
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v21 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v29 = sub_1BA6B8518();
  v32[25] = v26;
  sub_1BA6EC1EC(v21, v30, v27, v21, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v28, (uint64_t)v26, v29, (uint64_t)&off_1E734BD00);
  sub_1BA4C2DD8(v32[9], (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  v31 = (char *)sub_1BA584BE8 + 4 * word_1BB91A8BA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA584BE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v2 - 72);
  sub_1BA58531C(1, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA58531C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4D7C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA63658C(0);
    sub_1BA4A2870(&qword_1ED39B060, (uint64_t (*)(uint64_t))sub_1BA63658C, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5854A0()
{
  unint64_t result;

  result = qword_1ED39BD18;
  if (!qword_1ED39BD18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AAC0, &type metadata for FormatOptionsNodeStatementValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39BD18);
  }
  return result;
}

uint64_t sub_1BA5854E4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BAEE4DCC(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4D7C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA585654();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA585654()
{
  unint64_t result;

  result = qword_1ED3A9938;
  if (!qword_1ED3A9938)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementBinding, &type metadata for FormatOptionsNodeStatementBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A9938);
  }
  return result;
}

uint64_t sub_1BA585698(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4D7C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA75BCB4(0);
    sub_1BA4A2870(&qword_1ED3A5C98, (uint64_t (*)(uint64_t))sub_1BA75BCB4, (uint64_t)&protocol conformance descriptor for FormatSwitchValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA585824@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FormatVersionableValue.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t FormatVersionableValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  char v43;

  v32 = a5;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatVersionableValue.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1BCCE5B24](&unk_1BB949168, v13);
  v39 = sub_1BB874104();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v15 = (char *)&v30 - v14;
  v38 = a2;
  v34 = a3;
  v31 = type metadata accessor for FormatVersionableValue(0, a2, a3, a4);
  v16 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v18 = (char *)&v30 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v36 = v15;
  v19 = (uint64_t)v40;
  sub_1BB87468C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = v16;
  v40 = a1;
  v21 = v18;
  v22 = v33;
  v43 = 0;
  v24 = v35;
  v23 = v36;
  v25 = v38;
  v26 = v39;
  sub_1BB8740D4();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v24, v25);
  sub_1BA6D249C();
  v42 = 1;
  sub_1BA585B78((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v26);
  v28 = v31;
  v27 = v32;
  *(_QWORD *)&v21[*(int *)(v31 + 44)] = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v27, v21, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v28);
}

uint64_t type metadata accessor for FormatVersionableValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatVersionableValue);
}

uint64_t sub_1BA585B04(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA585B78(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA6D249C();
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA585BD4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA585C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for FormatVersionableValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatVersionableValue.CodingKeys);
}

uint64_t sub_1BA585C80@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatSyncImageContent.init(from:)(a1, a2);
}

uint64_t FormatSyncImageContent.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __int128 v53;
  unint64_t *v54;

  v3 = v2;
  v54 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v34 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  v10 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v24 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v24;
      *(_QWORD *)(v25 + 8) = v16;
      *(_QWORD *)(v25 + 16) = &unk_1E724CD38;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v24, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      a1 = v42;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA586148();
  v43 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v53)
  {
    if (v53 == 1)
    {
      v53 = xmmword_1BB87FC90;
      sub_1BA58618C();
      sub_1BB8740D4();
      v17 = v54;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v40 = v44;
      v41 = v43;
      v18 = v45;
      v19 = v46;
      v20 = v47;
      v21 = swift_allocObject();
      v22 = v40;
      *(_OWORD *)(v21 + 16) = v41;
      *(_OWORD *)(v21 + 32) = v22;
      *(_QWORD *)(v21 + 48) = v18;
      *(_QWORD *)(v21 + 56) = v19;
      v23 = v21 | 0x4000000000000000;
      *(_BYTE *)(v21 + 64) = v20;
    }
    else
    {
      sub_1BA4CDF6C(0, &qword_1EF2B2370, (uint64_t (*)(void))sub_1BA829C74, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      v53 = xmmword_1BB87FC90;
      sub_1BAE70EC0();
      sub_1BB8740D4();
      v17 = v54;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v36 = v43;
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v36;
      v23 = v37 | 0x8000000000000000;
    }
  }
  else
  {
    v53 = xmmword_1BB87FC90;
    sub_1BA586104();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v26 = v44;
    v27 = BYTE8(v44);
    v28 = v45;
    v29 = v46;
    v30 = v47;
    v40 = v48;
    v41 = v43;
    v31 = v49;
    v32 = v50;
    v33 = v51;
    v39 = v52;
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v41;
    *(_QWORD *)(v23 + 32) = v26;
    *(_BYTE *)(v23 + 40) = v27;
    *(_QWORD *)(v23 + 48) = v28;
    *(_QWORD *)(v23 + 56) = v29;
    *(_WORD *)(v23 + 64) = v30;
    *(_OWORD *)(v23 + 72) = v40;
    *(_QWORD *)(v23 + 88) = v31;
    *(_QWORD *)(v23 + 96) = v32;
    *(_BYTE *)(v23 + 104) = v33;
    *(_QWORD *)(v23 + 112) = v39;
    v17 = v54;
  }
  *v17 = v23;
  v34 = (uint64_t)v42;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

unint64_t sub_1BA586104()
{
  unint64_t result;

  result = qword_1ED3B5108;
  if (!qword_1ED3B5108)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolImage, &type metadata for FormatSymbolImage);
    atomic_store(result, (unint64_t *)&qword_1ED3B5108);
  }
  return result;
}

unint64_t sub_1BA586148()
{
  unint64_t result;

  result = qword_1ED3CA198;
  if (!qword_1ED3CA198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1F90, &_s10CodingTypeON_182);
    atomic_store(result, (unint64_t *)&qword_1ED3CA198);
  }
  return result;
}

unint64_t sub_1BA58618C()
{
  unint64_t result;

  result = qword_1ED3B4B70;
  if (!qword_1ED3B4B70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImage, &type metadata for FormatBundleImage);
    atomic_store(result, (unint64_t *)&qword_1ED3B4B70);
  }
  return result;
}

uint64_t FeedGroupKnobsRules.merge(rankMultiplier:baseScore:scoreThreshold:maxOccurrence:daysOfWeek:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, unsigned __int8 *a10, uint64_t a11)
{
  __int128 *v11;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;

  v19 = *a10;
  v20 = v11[13];
  v92 = v11[12];
  v93 = v20;
  v94 = v11[14];
  v21 = v11[9];
  v88 = v11[8];
  v89 = v21;
  v22 = v11[11];
  v90 = v11[10];
  v91 = v22;
  v23 = v11[5];
  v84 = v11[4];
  v85 = v23;
  v24 = v11[7];
  v86 = v11[6];
  v87 = v24;
  v25 = v11[1];
  v80 = *v11;
  v81 = v25;
  v26 = v11[3];
  v82 = v11[2];
  v83 = v26;
  if ((a2 & 1) != 0 && (a4 & 1) != 0 && (a6 & 1) != 0 && (a8 & 1) != 0 && v19 == 9)
  {
    v27 = v11[13];
    *(_OWORD *)(a9 + 192) = v11[12];
    *(_OWORD *)(a9 + 208) = v27;
    *(_OWORD *)(a9 + 224) = v11[14];
    v28 = v11[9];
    *(_OWORD *)(a9 + 128) = v11[8];
    *(_OWORD *)(a9 + 144) = v28;
    v29 = v11[11];
    *(_OWORD *)(a9 + 160) = v11[10];
    *(_OWORD *)(a9 + 176) = v29;
    v30 = v11[5];
    *(_OWORD *)(a9 + 64) = v11[4];
    *(_OWORD *)(a9 + 80) = v30;
    v31 = v11[7];
    *(_OWORD *)(a9 + 96) = v11[6];
    *(_OWORD *)(a9 + 112) = v31;
    v32 = v11[1];
    *(_OWORD *)a9 = *v11;
    *(_OWORD *)(a9 + 16) = v32;
    v33 = v11[3];
    *(_OWORD *)(a9 + 32) = v11[2];
    *(_OWORD *)(a9 + 48) = v33;
    return sub_1BAAA7418((uint64_t)&v80);
  }
  v57 = v19;
  v35 = v80;
  if (!(_QWORD)v80)
  {
    v78 = a1;
    v79 = a2 & 1;
    v35 = sub_1BA586704((uint64_t)&v78, *(_QWORD *)(a11 + 16), MEMORY[0x1E0DEB070], *(_QWORD *)(a11 + 24), MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEB0A0]);
  }
  v68 = v35;
  v36 = *((_QWORD *)&v80 + 1);
  if (*((_QWORD *)&v80 + 1))
  {
    swift_retain();
    v67 = v36;
    v37 = v81;
    if ((_QWORD)v81)
      goto LABEL_11;
LABEL_14:
    v78 = a5;
    v79 = a6 & 1;
    v42 = *(_QWORD *)(a11 + 16);
    v43 = *(_QWORD *)(a11 + 24);
    swift_retain();
    v66 = sub_1BA586704((uint64_t)&v78, v42, MEMORY[0x1E0DEB070], v43, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEB0A0]);
    v39 = *((_QWORD *)&v81 + 1);
    v38 = v82;
    if ((_QWORD)v82)
      goto LABEL_12;
LABEL_15:
    v78 = a7;
    v79 = a8 & 1;
    v44 = *(_QWORD *)(a11 + 16);
    v45 = *(_QWORD *)(a11 + 24);
    swift_retain();
    swift_retain();
    v65 = sub_1BA586704((uint64_t)&v78, v44, MEMORY[0x1E0DEB418], v45, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEB420], MEMORY[0x1E0DEB438]);
    goto LABEL_16;
  }
  v78 = a3;
  v79 = a4 & 1;
  v40 = *(_QWORD *)(a11 + 16);
  v41 = *(_QWORD *)(a11 + 24);
  swift_retain();
  v67 = sub_1BA586704((uint64_t)&v78, v40, MEMORY[0x1E0DEB070], v41, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEB0A0]);
  v37 = v81;
  if (!(_QWORD)v81)
    goto LABEL_14;
LABEL_11:
  swift_retain();
  v66 = v37;
  v39 = *((_QWORD *)&v81 + 1);
  v38 = v82;
  if (!(_QWORD)v82)
    goto LABEL_15;
LABEL_12:
  swift_retain();
  swift_retain();
  v65 = v38;
LABEL_16:
  v76 = *((_QWORD *)&v85 + 1);
  v77 = v85;
  v74 = *((_QWORD *)&v86 + 1);
  v75 = v86;
  v72 = *((_QWORD *)&v87 + 1);
  v73 = v87;
  v70 = *((_QWORD *)&v88 + 1);
  v71 = v88;
  v69 = v89;
  v46 = v90;
  v63 = v83;
  v64 = *((_QWORD *)&v82 + 1);
  v61 = v84;
  v62 = *((_QWORD *)&v83 + 1);
  v59 = *((_QWORD *)&v89 + 1);
  v60 = *((_QWORD *)&v84 + 1);
  if ((_QWORD)v90)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v47 = v46;
  }
  else
  {
    LOBYTE(v78) = v57;
    v48 = *(_QWORD *)(a11 + 24);
    v58 = *(_QWORD *)(a11 + 16);
    v56 = sub_1BA5ED190();
    v55 = sub_1BA586B7C();
    v54 = sub_1BA586B38();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v47 = sub_1BA5868A8((uint64_t)&v78, v58, (uint64_t)&type metadata for FeedDaysOfWeek, v48, v56, v55, v54);
  }
  v49 = *((_QWORD *)&v90 + 1);
  v50 = v91;
  v51 = v92;
  v52 = v93;
  v53 = v94;
  *(_QWORD *)a9 = v68;
  *(_QWORD *)(a9 + 8) = v67;
  *(_QWORD *)(a9 + 16) = v66;
  *(_QWORD *)(a9 + 24) = v39;
  *(_QWORD *)(a9 + 32) = v65;
  *(_QWORD *)(a9 + 40) = v64;
  *(_QWORD *)(a9 + 48) = v63;
  *(_QWORD *)(a9 + 56) = v62;
  *(_QWORD *)(a9 + 64) = v61;
  *(_QWORD *)(a9 + 72) = v60;
  *(_QWORD *)(a9 + 80) = v77;
  *(_QWORD *)(a9 + 88) = v76;
  *(_QWORD *)(a9 + 96) = v75;
  *(_QWORD *)(a9 + 104) = v74;
  *(_QWORD *)(a9 + 112) = v73;
  *(_QWORD *)(a9 + 120) = v72;
  *(_QWORD *)(a9 + 128) = v71;
  *(_QWORD *)(a9 + 136) = v70;
  *(_QWORD *)(a9 + 144) = v69;
  *(_QWORD *)(a9 + 152) = v59;
  *(_QWORD *)(a9 + 160) = v47;
  *(_QWORD *)(a9 + 168) = v49;
  *(_OWORD *)(a9 + 176) = v50;
  *(_OWORD *)(a9 + 192) = v51;
  *(_OWORD *)(a9 + 208) = v52;
  *(_OWORD *)(a9 + 224) = v53;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_1BA586704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a7;
  v11 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v14, a1, v11, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v14, a3);
    v24 = a3;
    v25 = a5;
    v26 = a6;
    v27 = v23;
    type metadata accessor for FeedGroupKnobsRuleValue();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return 0;
}

uint64_t sub_1BA5868A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  _QWORD v22[4];

  v12 = sub_1BB873A2C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v22 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v15, a1, v12, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v15, a3);
    v22[0] = a3;
    v22[1] = a5;
    v22[2] = a6;
    v22[3] = a7;
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 0;
}

uint64_t getEnumTagSinglePayload for FormatNumberFormatStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_1BA586B38()
{
  unint64_t result;

  result = qword_1ED3B0DC0;
  if (!qword_1ED3B0DC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDaysOfWeek, &type metadata for FeedDaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_1ED3B0DC0);
  }
  return result;
}

unint64_t sub_1BA586B7C()
{
  unint64_t result;

  result = qword_1ED3B0DB8;
  if (!qword_1ED3B0DB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDaysOfWeek, &type metadata for FeedDaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_1ED3B0DB8);
  }
  return result;
}

uint64_t sub_1BA586BC0(_QWORD *a1)
{
  return FormatFontTrait.encode(to:)(a1);
}

uint64_t FormatFontTrait.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[20];
  uint64_t v54;
  uint64_t v55;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v53[18] = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v53[17] = (char *)v53 - v6;
  MEMORY[0x1E0C80A78](v7);
  v53[16] = (char *)v53 - v8;
  MEMORY[0x1E0C80A78](v9);
  v53[15] = (char *)v53 - v10;
  MEMORY[0x1E0C80A78](v11);
  v53[14] = (char *)v53 - v12;
  MEMORY[0x1E0C80A78](v13);
  v53[13] = (char *)v53 - v14;
  MEMORY[0x1E0C80A78](v15);
  v53[12] = (char *)v53 - v16;
  MEMORY[0x1E0C80A78](v17);
  v53[11] = (char *)v53 - v18;
  MEMORY[0x1E0C80A78](v19);
  v53[10] = (char *)v53 - v20;
  MEMORY[0x1E0C80A78](v21);
  v53[9] = (char *)v53 - v22;
  MEMORY[0x1E0C80A78](v23);
  v53[8] = (char *)v53 - v24;
  MEMORY[0x1E0C80A78](v25);
  v53[7] = (char *)v53 - v26;
  MEMORY[0x1E0C80A78](v27);
  v53[6] = (char *)v53 - v28;
  MEMORY[0x1E0C80A78](v29);
  v53[5] = (char *)v53 - v30;
  MEMORY[0x1E0C80A78](v31);
  v53[4] = (char *)v53 - v32;
  MEMORY[0x1E0C80A78](v33);
  v53[3] = (char *)v53 - v34;
  MEMORY[0x1E0C80A78](v35);
  v53[2] = (char *)v53 - v36;
  MEMORY[0x1E0C80A78](v37);
  v53[1] = (char *)v53 - v38;
  MEMORY[0x1E0C80A78](v39);
  v53[0] = (char *)v53 - v40;
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v53 - v43;
  v45 = *v1;
  v53[19] = a1;
  v54 = v45;
  v46 = a1[3];
  v47 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v46);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v48 = sub_1BB86EB84();
  v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v44, v49, v48);
  v50 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v51 = v55;
  sub_1BA69F160((uint64_t)v44, (uint64_t)sub_1BA90CF04, 0, v46, v47);
  if (!v51)
  {
    v55 = v50;
    sub_1BA4A2E80((uint64_t)v44, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v44, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA58766C()
{
  sub_1BB8745CC();
  FormatFontTrait.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t FormatFontTrait.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5876F8 + 4 * byte_1BB8927EC[*v0]))(0x63696C617469, 0xE600000000000000);
}

uint64_t sub_1BA5876F8()
{
  return 1684828002;
}

uint64_t sub_1BA587708()
{
  return 0x6465646E61707865;
}

uint64_t sub_1BA587720()
{
  return 0x65736E65646E6F63;
}

uint64_t sub_1BA58773C()
{
  return 0x636170536F6E6F6DLL;
}

uint64_t sub_1BA58775C()
{
  return 0x6C61636974726576;
}

uint64_t sub_1BA587774()
{
  return 0x696D6974704F6975;
}

uint64_t sub_1BA587794()
{
  return 0x61654C7468676974;
}

uint64_t sub_1BA5877C4()
{
  return 1802723693;
}

uint64_t sub_1BA5877D4()
{
  return 0x656C797453646C6FLL;
}

void sub_1BA587880()
{
  JUMPOUT(0x1BA587894);
}

uint64_t sub_1BA5878A0()
{
  return 0x746E656D616E726FLL;
}

uint64_t sub_1BA5878C0()
{
  return 0x73747069726373;
}

uint64_t sub_1BA5878D8()
{
  return 0x63696C6F626D7973;
}

uint64_t sub_1BA5878F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatURLBinding.init(from:)(a1, a2);
}

uint64_t FormatURLBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[3];
  uint64_t v21;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA587CC4();
    v20[1] = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7268030;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA587CC4()
{
  unint64_t result;

  result = qword_1ED3C77B0;
  if (!qword_1ED3C77B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0410, &_s10CodingTypeON_162);
    atomic_store(result, (unint64_t *)&qword_1ED3C77B0);
  }
  return result;
}

unint64_t sub_1BA587D08()
{
  unint64_t result;

  result = qword_1ED3CA3B8;
  if (!qword_1ED3CA3B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.URL, &type metadata for FormatCustomItemBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1ED3CA3B8);
  }
  return result;
}

void sub_1BA587D4C(_QWORD *a1)
{
  FormatColorExpression.encode(to:)(a1);
}

void FormatColorExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v17[1] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[3] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorExpression, v16, v13, (uint64_t)&type metadata for FormatColorExpression, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA587EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = qword_1ED3C2478;
  swift_retain();
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v1, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v8 = *(_QWORD *)(v2 - 88);
  sub_1BA588668(0, v3, v4, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  swift_release();
  return swift_release();
}

uint64_t sub_1BA58830C(char a1, __int16 a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int16 v17;
  double v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a4;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4AD0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA58847C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5884C0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA58847C()
{
  unint64_t result;

  result = qword_1ED3A6A50;
  if (!qword_1ED3A6A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7668, &_s10CodingTypeON_114);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A50);
  }
  return result;
}

unint64_t sub_1BA5884C0()
{
  unint64_t result;

  result = qword_1ED39BCE8;
  if (!qword_1ED39BCE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponentExpression, &type metadata for FormatColorComponentExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BCE8);
  }
  return result;
}

uint64_t sub_1BA588504(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4AD0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA58847C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA588810();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA588668(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4AD0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA58847C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5887CC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5887CC()
{
  unint64_t result;

  result = qword_1ED39EC70;
  if (!qword_1ED39EC70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAndExpression, &type metadata for FormatColorAndExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39EC70);
  }
  return result;
}

unint64_t sub_1BA588810()
{
  unint64_t result;

  result = qword_1ED3A4200;
  if (!qword_1ED3A4200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorColorExpression, &type metadata for FormatColorColorExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A4200);
  }
  return result;
}

uint64_t sub_1BA588854(_QWORD *a1)
{
  return FormatBorderEdge.encode(to:)(a1);
}

uint64_t FormatBorderEdge.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[6];
  uint64_t v23;
  _QWORD *v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v22[5] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v22[4] = (char *)v22 - v7;
  MEMORY[0x1E0C80A78](v8);
  v22[3] = (char *)v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  v22[2] = (char *)v22 - v11;
  MEMORY[0x1E0C80A78](v12);
  v22[1] = (char *)v22 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  v23 = *v1;
  v17 = a1[3];
  v18 = a1[4];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, v17, v18);
  result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1BA588D84(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _DWORD *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  void (*v29)(_DWORD *, uint64_t);
  _DWORD *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v12 = v9 + 16;
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v13 + v9;
  v15 = (v13 + v9 + ((v13 + v9 + ((v9 + 16) & ~v9)) & ~v9)) & ~v9;
  if (!*(_DWORD *)(v8 + 84))
    ++v13;
  v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v17 = v16 + (v11 & ~(v9 | 7));
  v18 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v19 = *(_QWORD *)(v18 + 64) + v10;
  v20 = v16 + (v19 & ~v10);
  if (v20 > v17)
    v17 = v20;
  v21 = a1;
  v22 = *((unsigned __int8 *)a1 + v17);
  v23 = v17 & 0xFFFFFFF8;
  if (v22 >= 2 && v23 != 0)
    v22 = *a1 + 2;
  v25 = ~v10;
  v26 = ~v9;
  if (v22 == 1)
  {
    v27 = v21;
    (*(void (**)(_DWORD *))(v18 + 8))(v21);
    v28 = (uint64_t)v27 + v19;
  }
  else
  {
    v29 = *(void (**)(_DWORD *, uint64_t))(v5 + 8);
    v30 = v21;
    v29(v21, v4);
    v28 = (uint64_t)v30 + v11;
  }
  v31 = v28 & v25;
  swift_bridgeObjectRelease();
  v32 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v32((v12 + v31) & v26, v7);
  v33 = (v14 + ((v12 + v31) & v26)) & v26;
  v32(v33, v7);
  v34 = (v14 + v33) & v26;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v34, 1, v7))
    v32(v34, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatTypeDefinition.Case(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA588FE4(_QWORD *a1)
{
  return FormatSyncImageContent.encode(to:)(a1);
}

uint64_t FormatSyncImageContent.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[6];
  uint64_t v34;
  __int128 v35[3];
  char v36;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v33 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v33 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSyncImageContent, v19, v16, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  if (v15 >> 62)
  {
    if (v15 >> 62 == 1)
    {
      v20 = *(_OWORD *)(v15 + 32);
      v35[0] = *(_OWORD *)(v15 + 16);
      v35[1] = v20;
      v35[2] = *(_OWORD *)(v15 + 48);
      v36 = *(_BYTE *)(v15 + 64);
      if (qword_1ED3C2478 != -1)
        swift_once();
      v21 = sub_1BB86EB84();
      v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v22, v21);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5895E4(1, v35, (uint64_t)v8);
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
      return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    }
    else
    {
      v28 = *(_QWORD *)(v15 + 16);
      v29 = *(_QWORD *)(v15 + 24);
      v30 = qword_1ED3C6D58;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v30 != -1)
        swift_once();
      v31 = sub_1BB86EB84();
      v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v5, v32, v31);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACEB6D4(2, v28, v29, (uint64_t)v5);
      sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    v24 = *(_OWORD *)(v15 + 80);
    v33[3] = *(_OWORD *)(v15 + 64);
    v33[4] = v24;
    v33[5] = *(_OWORD *)(v15 + 96);
    v34 = *(_QWORD *)(v15 + 112);
    v25 = *(_OWORD *)(v15 + 32);
    v33[0] = *(_OWORD *)(v15 + 16);
    v33[1] = v25;
    v33[2] = *(_OWORD *)(v15 + 48);
    sub_1BAE70FF8((uint64_t)v33);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v26 = sub_1BB86EB84();
    v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v27, v26);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5893DC(0, v33, (uint64_t)v11);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BAE71094((uint64_t)v33);
  }
}

uint64_t sub_1BA5893DC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;

  v26 = a1;
  v7 = a2[5];
  v23 = a2[4];
  v24 = v7;
  v25 = *((_QWORD *)a2 + 12);
  v8 = a2[1];
  v19 = *a2;
  v20 = v8;
  v9 = a2[3];
  v21 = a2[2];
  v22 = v9;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEFBE2C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5895A0();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA58955C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA58955C()
{
  unint64_t result;

  result = qword_1ED39B468;
  if (!qword_1ED39B468)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolImage, &type metadata for FormatSymbolImage);
    atomic_store(result, (unint64_t *)&qword_1ED39B468);
  }
  return result;
}

unint64_t sub_1BA5895A0()
{
  unint64_t result;

  result = qword_1ED3A6FF0;
  if (!qword_1ED3A6FF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0048, &_s10CodingTypeON_182);
    atomic_store(result, (unint64_t *)&qword_1ED3A6FF0);
  }
  return result;
}

uint64_t sub_1BA5895E4(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  char v21;

  v21 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  v20 = *((_BYTE *)a2 + 48);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFBE2C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5895A0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA58975C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA58975C()
{
  unint64_t result;

  result = qword_1ED39B3C0;
  if (!qword_1ED39B3C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImage, &type metadata for FormatBundleImage);
    atomic_store(result, (unint64_t *)&qword_1ED39B3C0);
  }
  return result;
}

uint64_t sub_1BA5897A0()
{
  sub_1BA589848();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5897EC()
{
  sub_1BA589848();
  return sub_1BB872D60();
}

unint64_t sub_1BA589848()
{
  unint64_t result;

  result = qword_1ED3C9B60;
  if (!qword_1ED3C9B60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1B38, &_s10CodingTypeON_167);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B60);
  }
  return result;
}

uint64_t sub_1BA58988C(_QWORD *a1)
{
  return FormatSupplementaryNode.encode(to:)(a1);
}

uint64_t FormatSupplementaryNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t *v93;
  uint64_t v94;
  __int128 v95;
  char v96;
  uint64_t v97;
  __int128 v98;
  char v99;
  unint64_t v100;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v81 - v8;
  MEMORY[0x1E0C80A78](v9);
  v86 = (char *)&v81 - v10;
  MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v81 - v12;
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v81 - v14;
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)&v81 - v16;
  MEMORY[0x1E0C80A78](v17);
  v90 = (char *)&v81 - v18;
  MEMORY[0x1E0C80A78](v19);
  v91 = (char *)&v81 - v20;
  MEMORY[0x1E0C80A78](v21);
  v92 = (char *)&v81 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v81 - v24;
  sub_1BAE7D7F8(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  v31 = sub_1BAE7D8E8();
  v32 = sub_1BA4A2870(&qword_1ED3D10D0, (uint64_t (*)(uint64_t))sub_1BAE7D8E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v33, v29, v4, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v30, (uint64_t)v28, v32, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v35 = v2[2];
  v34 = v2[3];
  v93 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v25, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v94;
  sub_1BAD265E8(v35, v34, 0, 0, 0, (uint64_t)v25, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE48E3C, (uint64_t (*)(uint64_t))sub_1BAE7D870, &qword_1ED3AECD0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))sub_1BAE7D7F8);
  }
  sub_1BA4A2E80((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v42 = v93;
  v43 = v37;
  v45 = v93[4];
  v44 = v93[5];
  v46 = (uint64_t)v92;
  v83 = v43;
  ((void (*)(char *, uint64_t))v39)(v92, v38);
  v94 = v40;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BAD15014(v45, v44, 1, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v47 = v42[6];
  v48 = v28;
  v49 = (uint64_t)v91;
  v50 = v83;
  v39(v91, v38, v83);
  swift_storeEnumTagMultiPayload();
  sub_1BA71CA6C(v47);
  v92 = v48;
  sub_1BAD1516C(v47, 2, 0, 0, v49, (uint64_t)sub_1BA90CF04, 0);
  v82 = v38;
  sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
  sub_1BA719718(v47);
  v51 = v42[7];
  v52 = qword_1ED3C6D50;
  swift_retain();
  if (v52 != -1)
    swift_once();
  v53 = __swift_project_value_buffer(v50, (uint64_t)qword_1ED476BF0);
  v54 = (uint64_t)v90;
  v39(v90, v53, v50);
  swift_storeEnumTagMultiPayload();
  v28 = v92;
  sub_1BAD48C08(v51, 3, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  v56 = (uint64_t)v89;
  v57 = v82;
  v39(v89, v82, v50);
  swift_storeEnumTagMultiPayload();
  v58 = swift_bridgeObjectRetain();
  sub_1BAD2827C(v58, 4, 0, 0);
  sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v59 = (char *)v42[9];
  v60 = (uint64_t)v88;
  v39(v88, v57, v50);
  swift_storeEnumTagMultiPayload();
  v61 = swift_bridgeObjectRetain();
  v91 = v59;
  sub_1BAD283AC(v61, 5, 0, 0);
  sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v62 = v42[10];
  v63 = (uint64_t)v87;
  v39(v87, v57, v50);
  swift_storeEnumTagMultiPayload();
  v64 = *(_QWORD *)(v62 + 16);
  swift_bridgeObjectRetain();
  if (v64 && (sub_1BAE48E3C(v63, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
  {
    v98 = xmmword_1BB8D2DA0;
    v99 = 0;
    v65 = swift_bridgeObjectRetain();
    v66 = sub_1BA67F4CC(v65);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v95 = v66;
    swift_retain();
    sub_1BA67FABC((uint64_t *)&v95, sub_1BA67FB34, sub_1BA6801F8);
    swift_release();
    v91 = (char *)v95;
    v97 = v95;
    sub_1BAE7D870();
    v90 = v67;
    sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
    v68 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v68, MEMORY[0x1E0DEA970]);
    sub_1BB874464();
    swift_release();
    v63 = (uint64_t)v87;
  }
  sub_1BA4A2E80(v63, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v69 = v93;
  swift_beginAccess();
  v70 = (uint64_t)v86;
  v39(v86, v82, v50);
  swift_storeEnumTagMultiPayload();
  v71 = swift_bridgeObjectRetain();
  sub_1BAD284DC(v71, 7, 0, 0);
  sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v72 = v69[12];
  v73 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v73 != -1)
    swift_once();
  v74 = __swift_project_value_buffer(v50, (uint64_t)qword_1ED476C08);
  v75 = (uint64_t)v85;
  v39(v85, v74, v50);
  swift_storeEnumTagMultiPayload();
  if (v72 >> 62)
  {
    swift_bridgeObjectRetain();
    v76 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v76)
    {
LABEL_16:
      if ((sub_1BAE48E3C(v75, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v95 = xmmword_1BB8D2DD0;
        v96 = 0;
        v100 = v72;
        sub_1BAE7D870();
        sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
        sub_1BA4B07F0(0, &qword_1ED3C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA683888();
        sub_1BB874464();
        v75 = (uint64_t)v85;
      }
    }
  }
  else if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_16;
  }
  sub_1BA4A2E80(v75, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v77 = v93[13];
  v78 = *((_BYTE *)v93 + 112);
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v79 = __swift_project_value_buffer(v50, (uint64_t)qword_1ED476BC0);
  v80 = (uint64_t)v84;
  v39(v84, v79, v50);
  swift_storeEnumTagMultiPayload();
  sub_1BAD48E18(v77, v78, 9, 0, 0, v80, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v80, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))sub_1BAE7D7F8);
}

void sub_1BA58A560(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  _UNKNOWN **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  unint64_t *v23;
  unint64_t (*v24)();
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  unint64_t *v39;
  unint64_t (*v40)();
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
    case 9u:
    case 0x3Eu:
      goto LABEL_18;
    case 3u:
    case 0x12u:
    case 0x14u:
    case 0x16u:
    case 0x20u:
    case 0x22u:
    case 0x25u:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
    case 0x38u:
    case 0x3Cu:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 5u:
    case 0x21u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 6u:
      swift_bridgeObjectRelease();
      v2 = *(void **)(a1 + 16);
      goto LABEL_5;
    case 7u:
    case 0xBu:
    case 0x15u:
    case 0x17u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x24u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x31u:
    case 0x33u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x39u:
    case 0x3Au:
    case 0x3Bu:
      goto LABEL_2;
    case 8u:

      goto LABEL_2;
    case 0xAu:
      swift_release();
      swift_release();
      goto LABEL_18;
    case 0xCu:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      return;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 0xEu:
      swift_bridgeObjectRelease();
      sub_1BB7B6BD4(0, (unint64_t *)&qword_1EF2BF058, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
      v4 = a1 + *(int *)(v3 + 48);
      type metadata accessor for FormatCompilerProperty(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_12;
        case 1u:
          goto LABEL_35;
        case 2u:
          goto LABEL_38;
        case 3u:
          goto LABEL_39;
        case 4u:
          goto LABEL_40;
        case 5u:
          goto LABEL_41;
        case 6u:
          goto LABEL_42;
        case 7u:
          goto LABEL_44;
        case 8u:
          goto LABEL_48;
        case 9u:
          goto LABEL_51;
        default:
          return;
      }
      return;
    case 0xFu:
      swift_bridgeObjectRelease();
      sub_1BB7B6BD4(0, (unint64_t *)&qword_1EF2BF058, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
      v4 = a1 + *(int *)(v5 + 48);
      type metadata accessor for FormatCompilerProperty(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_12:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = (unint64_t *)&unk_1ED3CD660;
          v7 = MEMORY[0x1E0DEAFA0];
          v8 = &protocol witness table for Bool;
          goto LABEL_43;
        case 1u:
LABEL_35:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 56) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v23 = &qword_1ED3CD640;
          v24 = sub_1BA7FDD98;
          v25 = &type metadata for FormatColor;
          goto LABEL_54;
        case 2u:
LABEL_38:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          v27 = v26;
          v28 = v4 + *(int *)(v26 + 48);
          v29 = sub_1BB86C8B0();
          goto LABEL_45;
        case 3u:
LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
          goto LABEL_84;
        case 4u:
LABEL_40:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v23 = &qword_1ED3CD610;
          v24 = sub_1BA841CF4;
          v25 = (ValueMetadata *)MEMORY[0x1E0DEF040];
          goto LABEL_54;
        case 5u:
LABEL_41:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = &qword_1ED3CD670;
          v7 = MEMORY[0x1E0DEB418];
          v8 = &protocol witness table for Int;
          goto LABEL_43;
        case 6u:
LABEL_42:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = &qword_1ED3CD650;
          v7 = MEMORY[0x1E0DEA968];
          v8 = &protocol witness table for String;
LABEL_43:
          sub_1BA50CAA8(0, v6, v7, (uint64_t)v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          goto LABEL_55;
        case 7u:
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          v27 = v31;
          v28 = v4 + *(int *)(v31 + 48);
          v29 = sub_1BB86C67C();
LABEL_45:
          v32 = v29;
          v33 = *(_QWORD *)(v29 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v28, 1, v29))
            (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v32);
          swift_bridgeObjectRelease();
          v10 = *(int *)(v27 + 60);
          goto LABEL_84;
        case 8u:
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 56) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v23 = &qword_1ED3CD630;
          v24 = sub_1BA8378F4;
          v25 = &type metadata for FormatFont;
          goto LABEL_54;
        case 9u:
LABEL_51:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 56) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v23 = (unint64_t *)&unk_1ED3CD620;
          v24 = sub_1BA7F6E24;
          v25 = &type metadata for FormatAsyncImageContent;
LABEL_54:
          sub_1BA4CDF6C(0, v23, (uint64_t (*)(void))v24, (uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_55:
          v10 = *(int *)(v30 + 60);
          goto LABEL_84;
        default:
          return;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      goto LABEL_2;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
      return;
    case 0x13u:
      swift_bridgeObjectRelease();
      sub_1BB7B6BD4(0, &qword_1EF2CD150, (void (*)(uint64_t))type metadata accessor for FormatEnumPropertyDefinition);
      v4 = a1 + *(int *)(v9 + 48);
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
LABEL_84:
      v50 = v4 + v10;
      v51 = sub_1BB86E710();
      v52 = *(_QWORD *)(v51 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
      return;
    case 0x18u:
      swift_release();
LABEL_18:
      swift_release();
      return;
    case 0x23u:
      swift_bridgeObjectRelease();
      swift_release();
      if (*(_QWORD *)(a1 + 24) != 1)
        swift_bridgeObjectRelease();
      v19 = a1 + *(int *)(type metadata accessor for FormatOption() + 28);
      v20 = type metadata accessor for FormatVersionRequirement(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
        return;
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          v34 = sub_1BB86EB84();
          v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8);
          v35(v19, v34);
          sub_1BA6F3F88();
          v35(v19 + *(int *)(v36 + 48), v34);
LABEL_2:
          swift_bridgeObjectRelease();
          return;
        case 1:
          v37 = sub_1BB86EB84();
          v38 = (void (*)(uint64_t))MEMORY[0x1E0DB4DC8];
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v19, v37);
          sub_1BB50E6FC(0, (unint64_t *)&qword_1EF2A98B0, v38, (void (*)(uint64_t))sub_1BA76D834);
          goto LABEL_2;
        case 0:
          v22 = sub_1BB86EB84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v19, v22);
          break;
      }
      return;
    case 0x32u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
      return;
    case 0x34u:
      swift_bridgeObjectRelease();
      v11 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v11 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v13 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        v14 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
      }
      swift_bridgeObjectRelease();
      sub_1BB50E6FC(0, (unint64_t *)&qword_1EF2C4520, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, (void (*)(uint64_t))type metadata accessor for FormatPropertyDefinition);
      v4 = a1 + *(int *)(v15 + 48);
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = &qword_1ED3CE138;
          v17 = MEMORY[0x1E0DEAFA0];
          v18 = &protocol witness table for Bool;
          goto LABEL_65;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v39 = &qword_1ED3CE128;
          v40 = sub_1BA7FDD98;
          v41 = &type metadata for FormatColor;
          goto LABEL_82;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B8A38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          v43 = v42;
          v44 = v4 + *(int *)(v42 + 52);
          v45 = sub_1BB86C8B0();
          goto LABEL_67;
        case 3u:
          goto LABEL_16;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39 = &qword_1ED3CE100;
          v40 = sub_1BA841CF4;
          v41 = (ValueMetadata *)MEMORY[0x1E0DEF040];
          goto LABEL_82;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = &qword_1ED3CE140;
          v17 = MEMORY[0x1E0DEB418];
          v18 = &protocol witness table for Int;
          goto LABEL_65;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = &qword_1ED3CE130;
          v17 = MEMORY[0x1E0DEA968];
          v18 = &protocol witness table for String;
LABEL_65:
          sub_1BA50CAA8(0, v16, v17, (uint64_t)v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          goto LABEL_83;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B8A30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          v43 = v47;
          v44 = v4 + *(int *)(v47 + 52);
          v45 = sub_1BB86C67C();
LABEL_67:
          v48 = v45;
          v49 = *(_QWORD *)(v45 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v44, 1, v45))
            (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v44, v48);
          swift_bridgeObjectRelease();
          v10 = *(int *)(v43 + 64);
          goto LABEL_84;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v39 = &qword_1ED3CE110;
          v40 = sub_1BA7F6E24;
          v41 = &type metadata for FormatAsyncImageContent;
          goto LABEL_82;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v39 = &qword_1ED3CE108;
          v40 = sub_1BA829B34;
          v41 = &type metadata for FormatVideoNodeContent;
          goto LABEL_82;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v39 = &qword_1ED3CE120;
          v40 = sub_1BA8378F4;
          v41 = &type metadata for FormatFont;
          goto LABEL_82;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v39 = &qword_1ED3CE118;
          v40 = sub_1BA8266B0;
          v41 = &type metadata for FormatVideoPlayerContent;
LABEL_82:
          sub_1BA4CDF6C(0, v39, (uint64_t (*)(void))v40, (uint64_t)v41, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_83:
          v10 = *(int *)(v46 + 64);
          goto LABEL_84;
        default:
          return;
      }
    case 0x3Fu:
      swift_bridgeObjectRelease();
      v2 = *(void **)(a1 + 16);
      goto LABEL_5;
    case 0x40u:
      swift_bridgeObjectRelease();
      v2 = *(void **)(a1 + 8);
LABEL_5:

      return;
    default:
      return;
  }
}

void sub_1BA58B288(uint64_t a1, uint64_t a2)
{
  sub_1BA58B29C(a1, a2);
}

void sub_1BA58B29C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v17 = (char *)&v13 - v6;
  v7 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = v7;
  v9 = _s10CodingKeysOMa_280(255, v14, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8D28F8, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8D28A8, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8D2880, v9);
  v18 = v9;
  v19 = v10;
  v20 = v11;
  v21 = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA58B380(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  v13 = *v1;
  *(_QWORD *)(v4 - 176) = v1[1];
  v15 = v3[3];
  v14 = v3[4];
  v16 = __swift_project_boxed_opaque_existential_1(v3, v15);
  sub_1BA6EC1EC(v2, (uint64_t)v16, v15, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 72) = v13;
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v21 = *(_QWORD *)(v4 - 136);
  v20(v21, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = sub_1BA654038();
  v23 = *(_QWORD *)(v4 - 128);
  sub_1BA6EE974(v4 - 72, v4 - 112, v21, (uint64_t)sub_1BA90CF04, 0, v10, (uint64_t)&type metadata for FormatExpression, v22);
  sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v23)
  {
    *(_QWORD *)(v4 - 72) = *(_QWORD *)(v4 - 176);
    *(_OWORD *)(v4 - 112) = xmmword_1BB8A1A10;
    *(_BYTE *)(v4 - 96) = 0;
    v24 = *(_QWORD *)(v4 - 152);
    v20(v24, v19, v18);
    swift_storeEnumTagMultiPayload();
    v25 = sub_1BB872EE0();
    *(_QWORD *)(v4 - 120) = *(_QWORD *)(*(_QWORD *)(v4 - 160) + 16);
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v25, v4 - 120);
    sub_1BA6EE974(v4 - 72, v4 - 112, v24, (uint64_t)sub_1BA90CF04, 0, v10, v25, v26);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
}

uint64_t sub_1BA58B64C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FormatFileVersionURIReference.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t FormatFileVersionURIReference.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  char v40;

  v29 = a5;
  v32 = type metadata accessor for FormatVersionableValue(0, a2, a3, a4);
  v28 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = (char *)&v25 - v9;
  v10 = type metadata accessor for FormatFileVersionURIReference.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8DA750, v10);
  v36 = sub_1BB874104();
  v30 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v12 = (char *)&v25 - v11;
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v13 = type metadata accessor for FormatFileVersionURIReference(0, a2, a3, a4);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v37 = v12;
  v17 = v38;
  sub_1BB87468C();
  if (!v17)
  {
    v26 = v16;
    v27 = v14;
    v38 = v13;
    v19 = v30;
    v18 = v31;
    v20 = v32;
    v21 = type metadata accessor for FormatFileVersionURIReference.CodingType(0, v33, v34, v35);
    v40 = 0;
    MEMORY[0x1BCCE5B24](&unk_1BB8DA728, v21);
    v22 = v36;
    sub_1BB8740D4();
    v39 = 1;
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVersionableValue<A>, v20);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v37, v22);
    v24 = v26;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v26, v18, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v24, v38);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FormatFileVersionURIReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileVersionURIReference);
}

uint64_t type metadata accessor for FormatFileVersionURIReference.CodingType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileVersionURIReference.CodingType);
}

uint64_t type metadata accessor for FormatFileVersionURIReference.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileVersionURIReference.CodingKeys);
}

uint64_t sub_1BA58B924()
{
  sub_1BA58B980();
  return sub_1BB872D60();
}

unint64_t sub_1BA58B980()
{
  unint64_t result;

  result = qword_1ED3B5130;
  if (!qword_1ED3B5130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemColor, &type metadata for FormatSystemColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B5130);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleNavigationBarThemeProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA58B9E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, &qword_1ED3D2EC8);
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB86F928();
    swift_allocObject();
    sub_1BB86F91C();
    sub_1BB86FB68();
    swift_allocObject();
    sub_1BB86FB5C();
    v4 = sub_1BB86F484();
    swift_allocObject();
    result = sub_1BB86F478();
    v5 = MEMORY[0x1E0DB68A0];
    a2[3] = v4;
    a2[4] = v5;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA58BAF0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, &qword_1ED3D2EC8);
  result = sub_1BB86DF3C();
  if (result)
  {
    a2(0);
    swift_allocObject();
    sub_1BA50AD30(a3, 255, a2, a4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3D2EC0);
    result = sub_1BB86DF48();
    if (v13)
    {
      v11 = sub_1BB86F484();
      swift_allocObject();
      result = sub_1BB86F478();
      v12 = MEMORY[0x1E0DB68A0];
      a5[3] = v11;
      a5[4] = v12;
      *a5 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BA58BC48()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D2EE8)
  {
    sub_1BB871ECC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1BB871EFC();
    sub_1BB871F5C();
    type metadata accessor for FeedBannerAd();
    sub_1BA50AD30(&qword_1ED3D2EF0, 255, v0, MEMORY[0x1E0D53028]);
    sub_1BA50AD30(&qword_1ED3D35E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
    v1 = sub_1BB871EC0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3D2EE8);
  }
}

uint64_t sub_1BA58BD50@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E0);
  result = sub_1BB86DF48();
  if (!v12)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4110);
  result = sub_1BB86DF48();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4118);
  result = sub_1BB86DF48();
  if (v7)
  {
    v5 = type metadata accessor for FeedItemSupplementaryRenderer();
    swift_allocObject();
    v6 = sub_1BB814BCC((uint64_t)v11, v9, v10, v7, v8);
    swift_unknownObjectRelease();
    result = swift_unknownObjectRelease();
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for FeedItemSupplementaryRenderer;
    *a2 = v6;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedItemSupplementaryRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA58BF00(_QWORD *a1)
{
  return FormatPreviewParameters.encode(to:)(a1);
}

uint64_t FormatPreviewParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BYTE v30[12];
  int v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE v35[40];
  _BYTE *v36;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v34 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v36 = &v30[-v7];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v30[-v9];
  sub_1BAEAB68C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)v1;
  sub_1BA6A09F0(v1 + 8, (uint64_t)v35, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  v15 = *(_QWORD *)(v1 + 48);
  v32 = *(_QWORD *)(v1 + 56);
  v33 = v15;
  v31 = *(unsigned __int8 *)(v1 + 64);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAEAB584();
  v19 = sub_1BA4A2870(&qword_1ED3D10A0, (uint64_t (*)(uint64_t))sub_1BAEAB584, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPreviewParameters, v20, v16, (uint64_t)&type metadata for FormatPreviewParameters, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v13, v19, (uint64_t)&off_1E734BD80);
  sub_1BA5E7FF4(v14);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v10, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD491A0(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  sub_1BA5E800C(v14);
  if (!v2)
  {
    v24 = (uint64_t)v36;
    v23(v36, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BAD493B8((uint64_t)v35, 1, 0, 0, v24, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    v25 = (uint64_t)v34;
    v23(v34, v22, v21);
    swift_storeEnumTagMultiPayload();
    v27 = v32;
    v26 = v33;
    v28 = v31;
    sub_1BA6E6C54(v33, v32, v31);
    sub_1BAD495F8(v26, v27, v28, 2, 0, 0, v25, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v26, v27, v28);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAEAB68C);
}

unint64_t sub_1BA58C294()
{
  unint64_t result;

  result = qword_1ED39B338;
  if (!qword_1ED39B338)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsets, &type metadata for FormatEdgeInsets);
    atomic_store(result, (unint64_t *)&qword_1ED39B338);
  }
  return result;
}

uint64_t sub_1BA58C2D8(_QWORD *a1)
{
  return FormatPointEquation.encode(to:)(a1);
}

uint64_t FormatPointEquation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  char *v27;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v27 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - v8;
  sub_1BAEAB41C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v26[1] = v1[1];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAEAB314();
  v17 = sub_1BA4A2870(&qword_1ED3D0E20, (uint64_t (*)(uint64_t))sub_1BAEAB314, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPointEquation, v18, v14, (uint64_t)&type metadata for FormatPointEquation, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BD80);
  v19 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1BD08(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v27;
    v22(v27, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = swift_bridgeObjectRetain();
    sub_1BAD1BD08(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAEAB41C);
}

uint64_t sub_1BA58C594()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA58C5E8(_QWORD *a1)
{
  return FormatTextAdjustmentBaseline.encode(to:)(a1);
}

uint64_t FormatTextAdjustmentBaseline.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE7CBC4(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE7CABC();
  v13 = sub_1BA4A2870(&qword_1ED3D1330, (uint64_t (*)(uint64_t))sub_1BAE7CABC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextAdjustmentBaseline, v14, v10, (uint64_t)&type metadata for FormatTextAdjustmentBaseline, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD80);
  v15 = qword_1ED3C2478;
  swift_retain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0DD50(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_release();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE7CBC4);
}

uint64_t FeedCursor.__deallocating_deinit()
{
  FeedCursor.deinit();
  return swift_deallocClassInstance();
}

uint64_t *FeedCursor.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = *v0;
  swift_bridgeObjectRelease();
  v2 = (uint64_t)v0 + qword_1ED4767C0;
  v3 = sub_1BB86C8B0();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v4((uint64_t)v0 + qword_1ED476780, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = *(void **)((char *)v0 + qword_1ED476788);
  v6 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 32);
  v7 = *(uint64_t *)((char *)v0 + qword_1ED476788 + 40);
  v8 = *(void **)((char *)v0 + qword_1ED476788 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 248));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1BA58CA14()
{
  sub_1BA58CABC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA58CA60()
{
  sub_1BA58CABC();
  return sub_1BB872D60();
}

unint64_t sub_1BA58CABC()
{
  unint64_t result;

  result = qword_1ED3C63F0;
  if (!qword_1ED3C63F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8D50, &_s10CodingTypeON_100);
    atomic_store(result, (unint64_t *)&qword_1ED3C63F0);
  }
  return result;
}

uint64_t sub_1BA58CB00(_QWORD *a1, uint64_t a2)
{
  return FormatFileReference.encode(to:)(a1, a2);
}

uint64_t FormatFileReference.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  _QWORD *v69;
  char v70;
  char *v71;
  _QWORD *v72;
  char v73;
  uint64_t v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  __n128 *v78;
  __n128 *v79;
  uint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  __n128 *v84;
  __n128 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t (*v94)();
  uint64_t v95;
  uint64_t (*v96)();
  __n128 *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  __int128 v116;
  _OWORD v117[2];
  uint64_t v118;

  v109 = *(_QWORD *)(a2 + 16);
  v106 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](a1);
  v118 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v99 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v103 = (char *)&v98 - v8;
  MEMORY[0x1E0C80A78](v9);
  v100 = (char *)&v98 - v10;
  MEMORY[0x1E0C80A78](v11);
  v104 = (char *)&v98 - v12;
  sub_1BA6C0E30(0);
  v102 = v13;
  MEMORY[0x1E0C80A78](v13);
  v110 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v105);
  v112 = (uint64_t *)((char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v101 = (char *)&v98 - v17;
  MEMORY[0x1E0C80A78](v18);
  v113 = (uint64_t *)((char *)&v98 - v19);
  v107 = sub_1BB86C67C();
  v20 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v22 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  v114 = v27;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  sub_1BA6B8518();
  v115 = v29;
  sub_1BA6EC090((uint64_t)&type metadata for FormatCodingKeys, v32, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v31, (uint64_t)&off_1E734BD80, (uint64_t)v29);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v26, v108, a2);
  v33 = a2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v34 = v109;
    v35 = (uint64_t)&v26[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v118, v26, v34);
    sub_1BA6BFCE4(v35, (uint64_t)v112);
    LOBYTE(v117[0]) = 1;
    if (qword_1ED3C2478 != -1)
      swift_once();
    v36 = sub_1BB86EB84();
    v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C20);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    v39 = (uint64_t)v103;
    v38(v103, v37, v36);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v40 = *(_QWORD *)(a2 + 24);
    v42 = type metadata accessor for FormatFileReference.CodingType(0, v34, *(_QWORD *)(v33 + 24), v41);
    v43 = MEMORY[0x1BCCE5B24](&unk_1BB8F53C0, v42);
    v44 = *(_QWORD *)(v40 + 16);
    v45 = v118;
    v46 = v42;
    v47 = (uint64_t)v115;
    v48 = v111;
    sub_1BA58D5E0((uint64_t)v117, v118, v39, v114, v46, v34, v43, v44);
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    if (v48)
    {
      sub_1BA4A2E80((uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v49 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      v50 = v45;
LABEL_17:
      v92 = v34;
LABEL_18:
      v49(v50, v92);
      return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    }
    v68 = v101;
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v101, 0, 0, 0, 0);
    v69 = v112;
    v70 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v112, v68);
    sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    if ((v70 & 1) == 0)
    {
      v74 = (uint64_t)v99;
      v38(v99, v37, v36);
      swift_storeEnumTagMultiPayload();
      v116 = xmmword_1BB886E80;
      v117[0] = xmmword_1BB886E80;
      v47 = (uint64_t)v115;
      v75 = (unint64_t *)&v115[*(int *)(v114 + 44)];
      v76 = *v75;
      v77 = v75[1];
      v78 = (__n128 *)swift_allocObject();
      v79 = sub_1BA6EE228((__n128 *)&v116, v78 + 1);
      v78[2].n128_u64[0] = v76;
      v78[2].n128_u64[1] = v77;
      MEMORY[0x1E0C80A78](v79);
      v94 = sub_1BA90CF04;
      v95 = 0;
      v96 = sub_1BAEE4820;
      v97 = v78;
      swift_retain();
      sub_1BA58D7CC(v74, 0, 2uLL, (uint64_t)sub_1BAE76064, (uint64_t)(&v98 - 6));
      sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
      sub_1BA6EE264();
      sub_1BA4A2870(&qword_1ED39CBE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
      v91 = v112;
      sub_1BB874464();
      swift_release();
      sub_1BA4A2E80((uint64_t)v99, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v49 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      v50 = v118;
      goto LABEL_17;
    }
    sub_1BA4A2E80((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v118, v34);
    v47 = (uint64_t)v115;
  }
  else
  {
    v51 = v109;
    sub_1BA6BE23C();
    v53 = (uint64_t)&v26[*(int *)(v52 + 48)];
    v54 = v107;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v26, v107);
    sub_1BA6BFCE4(v53, (uint64_t)v113);
    LOBYTE(v117[0]) = 0;
    v112 = (_QWORD *)v20;
    v55 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
    v108 = v22;
    v55(v110, v22, v54);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v56 = sub_1BB86EB84();
    v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1ED476C20);
    v58 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
    v59 = (uint64_t)v104;
    v58(v104, v57, v56);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v61 = type metadata accessor for FormatFileReference.CodingType(0, v51, *(_QWORD *)(v33 + 24), v60);
    v62 = MEMORY[0x1BCCE5B24](&unk_1BB8F53C0, v61);
    v63 = sub_1BA4A2870(&qword_1ED39C9B8, (uint64_t (*)(uint64_t))sub_1BA6C0E30, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    v65 = v110;
    v64 = v111;
    v66 = v62;
    v47 = (uint64_t)v115;
    sub_1BA58D5E0((uint64_t)v117, v110, v59, v114, v61, v102, v66, v63);
    v118 = v64;
    if (v64)
    {
      sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))sub_1BA6C0E30);
      sub_1BA4A2E80((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      ((void (*)(char *, uint64_t))v112[1])(v108, v107);
      return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    }
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))sub_1BA6C0E30);
    v71 = v101;
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v101, 0, 0, 0, 0);
    v72 = v113;
    v73 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v113, v71);
    sub_1BA4A2E80((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    if ((v73 & 1) == 0)
    {
      v80 = (uint64_t)v100;
      v58(v100, v57, v56);
      swift_storeEnumTagMultiPayload();
      v116 = xmmword_1BB886E80;
      v117[0] = xmmword_1BB886E80;
      v81 = (unint64_t *)(v47 + *(int *)(v114 + 44));
      v82 = *v81;
      v83 = v81[1];
      v84 = (__n128 *)swift_allocObject();
      v85 = sub_1BA6EE228((__n128 *)&v116, v84 + 1);
      v84[2].n128_u64[0] = v82;
      v84[2].n128_u64[1] = v83;
      MEMORY[0x1E0C80A78](v85);
      v94 = sub_1BA90CF04;
      v95 = 0;
      v96 = sub_1BAEE4820;
      v97 = v84;
      swift_retain();
      v86 = v118;
      sub_1BA58D7CC(v80, 0, 2uLL, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v98 - 6));
      if (v86)
      {
        swift_release();
        v87 = v107;
        v88 = (uint64_t)v108;
        v89 = v112;
        v90 = v113;
        sub_1BA4A2E80((uint64_t)v100, type metadata accessor for FormatVersionRequirement);
        sub_1BA4A2E80((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v49 = (void (*)(uint64_t, uint64_t))v89[1];
        v50 = v88;
      }
      else
      {
        sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
        sub_1BA6EE264();
        sub_1BA4A2870(&qword_1ED39CBE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
        v93 = v113;
        sub_1BB874464();
        v87 = v107;
        swift_release();
        sub_1BA4A2E80((uint64_t)v100, type metadata accessor for FormatVersionRequirement);
        sub_1BA4A2E80((uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v49 = (void (*)(uint64_t, uint64_t))v112[1];
        v50 = (uint64_t)v108;
      }
      v92 = v87;
      goto LABEL_18;
    }
    sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    ((void (*)(char *, uint64_t))v112[1])(v108, v107);
  }
  return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA58D5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(char *, double);
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  _QWORD v29[5];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[16];
  uint64_t (*v35)();
  char *v36;
  __int128 v37;
  uint64_t v38;

  v33 = a7;
  v38 = a8;
  v31 = a3;
  v29[3] = a2;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v16 = (uint64_t *)(v8 + *(int *)(v15 + 44));
  v17 = v16[1];
  v30 = *v16;
  v18 = *(void (**)(char *, double))(v12 + 16);
  v29[2] = v19;
  v18((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = (char *)swift_allocObject();
  v22 = *(_QWORD *)(a4 + 16);
  v29[0] = *(_QWORD *)(a4 + 24);
  v23 = v29[0];
  v29[1] = v22;
  *((_QWORD *)v21 + 2) = v22;
  *((_QWORD *)v21 + 3) = a5;
  v29[4] = a6;
  *((_QWORD *)v21 + 4) = a6;
  *((_QWORD *)v21 + 5) = v23;
  v24 = v38;
  *((_QWORD *)v21 + 6) = v33;
  *((_QWORD *)v21 + 7) = v24;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v21[v20], (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  v25 = &v21[(v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v25 = v30;
  *((_QWORD *)v25 + 1) = v17;
  v37 = 0uLL;
  v35 = sub_1BB7E296C;
  v36 = v21;
  swift_retain();
  v26 = v32;
  v27 = sub_1BA647A44(v31, (uint64_t)&v37, (uint64_t)sub_1BB7E29A4, (uint64_t)v34, a4);
  if (!v26 && (v27 & 1) != 0)
  {
    v37 = 0uLL;
    sub_1BB874464();
    v37 = xmmword_1BB87FC90;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA58D7CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  char v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  __n128 *v24;
  char v25[16];
  uint64_t (*v26)();
  uint64_t v27;
  __n128 v28;
  uint64_t v29;

  sub_1BA6EE1B8(0);
  v11 = v10;
  v12 = (unint64_t *)(v5 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v28.n128_u64[0] = a2;
  v28.n128_u64[1] = a3;
  v15 = (__n128 *)swift_allocObject();
  sub_1BA6EE228(&v28, v15 + 1);
  v15[2].n128_u64[0] = v14;
  v15[2].n128_u64[1] = v13;
  sub_1BA6EE1A4(a2, a3);
  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA6EE264();
  swift_retain();
  v16 = sub_1BB87444C();
  v28.n128_u64[0] = a2;
  v28.n128_u64[1] = a3;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA6EE228(&v28, (__n128 *)(v17 + 24));
  sub_1BA4C010C(v5 + *(int *)(v11 + 36), (uint64_t)&v28);
  __swift_project_boxed_opaque_existential_1(&v28, v29);
  v26 = sub_1BAEFD940;
  v27 = v17;
  v21 = a4;
  v22 = a5;
  v23 = sub_1BAEE4820;
  v24 = v15;
  sub_1BA6EE1A4(a2, a3);
  sub_1BA6EC658(a1, (uint64_t)sub_1BAEFCC04, (uint64_t)v25, (uint64_t)sub_1BAEFCC08, (uint64_t)v20);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
}

uint64_t sub_1BA58D988@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatShadow.init(from:)(a1, a2);
}

uint64_t FormatShadow.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v3 = v2;
  v42 = a2;
  sub_1BAEB76A4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB771C();
  sub_1BA4A2870(&qword_1ED3D1500, (uint64_t (*)(uint64_t))sub_1BAEB771C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_20:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v42;
  v33 = v7;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v16 - 2);
      v22 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v24 = sub_1BAE15AAC();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v23;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v22, 1);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v6);
      goto LABEL_20;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v38 = 0uLL;
  LOBYTE(v39) = 0;
  v17 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v36 = 0uLL;
    v37 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v17 = v34;
  }
  v32 = xmmword_1BB8A1A10;
  v38 = xmmword_1BB8A1A10;
  LOBYTE(v39) = 0;
  v18 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v36 = v32;
    v37 = 0;
    sub_1BB8740D4();
    v18 = v34;
  }
  v32 = xmmword_1BB8D2D60;
  v38 = xmmword_1BB8D2D60;
  LOBYTE(v39) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v36 = v32;
    v37 = 0;
    sub_1BA58DEF0();
    sub_1BB8740D4();
    v19 = v34;
    v20 = v35;
  }
  else
  {
    if (qword_1ED3C1168 != -1)
      swift_once();
    v20 = *((_QWORD *)&xmmword_1ED3D25A0 + 1);
    v19 = xmmword_1ED3D25A0;
  }
  v32 = xmmword_1BB8D2D70;
  v38 = xmmword_1BB8D2D70;
  LOBYTE(v39) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v36 = v32;
    v37 = 0;
    sub_1BA62C9A0();
    sub_1BB8740D4();
    v21 = v34;
  }
  else
  {
    v27 = swift_allocObject();
    *(_BYTE *)(v27 + 16) = 2;
    *(_QWORD *)(v27 + 24) = 0x3FF0000000000000;
    *(_BYTE *)(v27 + 32) = 0;
    v21 = v27 | 0x1000000000000000;
  }
  v36 = xmmword_1BB8D2D90;
  v37 = 0;
  sub_1BA58DEAC();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v6);
  v28 = v40;
  v29 = v41;
  v30 = v38;
  v31 = v39;
  *(_QWORD *)v12 = v17;
  *(_DWORD *)(v12 + 8) = v18;
  *(_QWORD *)(v12 + 16) = v19;
  *(_QWORD *)(v12 + 24) = v20;
  *(_QWORD *)(v12 + 32) = v21;
  *(_OWORD *)(v12 + 40) = v30;
  *(_OWORD *)(v12 + 56) = v31;
  *(_QWORD *)(v12 + 72) = v28;
  *(_BYTE *)(v12 + 80) = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA58DE68()
{
  unint64_t result;

  result = qword_1ED3C6870;
  if (!qword_1ED3C6870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6FB8, &_s10CodingKeysON_57);
    atomic_store(result, (unint64_t *)&qword_1ED3C6870);
  }
  return result;
}

unint64_t sub_1BA58DEAC()
{
  unint64_t result;

  result = qword_1ED3B36B8[0];
  if (!qword_1ED3B36B8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion, &type metadata for FormatMotion);
    atomic_store(result, qword_1ED3B36B8);
  }
  return result;
}

unint64_t sub_1BA58DEF0()
{
  unint64_t result;

  result = qword_1ED3B37E8;
  if (!qword_1ED3B37E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow.Offset, &type metadata for FormatShadow.Offset);
    atomic_store(result, (unint64_t *)&qword_1ED3B37E8);
  }
  return result;
}

uint64_t sub_1BA58DF34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.init(from:)(a1, a2);
}

uint64_t FormatSymbolConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA58E3A8();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726ECA8;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA58E364()
{
  unint64_t result;

  result = qword_1ED3B5658;
  if (!qword_1ED3B5658)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Size, &type metadata for FormatSymbolConfig.Size);
    atomic_store(result, (unint64_t *)&qword_1ED3B5658);
  }
  return result;
}

unint64_t sub_1BA58E3A8()
{
  unint64_t result;

  result = qword_1ED3C7EB8;
  if (!qword_1ED3C7EB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C56D0, &_s10CodingTypeON_13);
    atomic_store(result, (unint64_t *)&qword_1ED3C7EB8);
  }
  return result;
}

uint64_t sub_1BA58E3EC@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatBindingImageExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingImageExpression.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  char v33;
  __int128 *v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  __int128 *v38;
  __int128 v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  char v46;

  v3 = v2;
  v38 = a2;
  sub_1BAE84670();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE846E8();
  sub_1BA4A2870(&qword_1ED3D12D0, (uint64_t (*)(uint64_t))sub_1BAE846E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v30 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v17 - 2);
      v25 = *((_QWORD *)v17 - 1);
      v37 = a1;
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      v27 = v12;
      MEMORY[0x1E0C80A78](v26);
      *((_QWORD *)&v35 - 4) = &_s10CodingKeysON_173;
      *((_QWORD *)&v35 - 3) = sub_1BAE84768();
      *((_QWORD *)&v35 - 2) = sub_1BA58E7E8();
      *((_QWORD *)&v35 - 1) = sub_1BAE847AC();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E726AAC0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v29 = v24;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v37;
      sub_1BA69C828(v24, v25, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v13);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5E8980();
  v39 = 0uLL;
  v40 = 0;
  sub_1BB8740D4();
  v36 = v12;
  v37 = a1;
  v18 = v6;
  v19 = v41;
  v21 = v42;
  v20 = v43;
  v22 = v44;
  v23 = v45;
  v35 = xmmword_1BB8A1A10;
  v41 = xmmword_1BB8A1A10;
  LOBYTE(v42) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v39 = v35;
    v40 = 0;
    sub_1BA820E18();
    sub_1BB8740D4();
    LODWORD(v35) = v23;
    v32 = v14;
    v33 = v46;
  }
  else
  {
    LODWORD(v35) = v23;
    v32 = v14;
    v33 = 1;
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v18);
  v30 = (uint64_t)v37;
  v34 = v38;
  *v38 = v19;
  *((_QWORD *)v34 + 2) = v21;
  *((_QWORD *)v34 + 3) = v20;
  *((_QWORD *)v34 + 4) = v22;
  *((_BYTE *)v34 + 40) = v35;
  *((_BYTE *)v34 + 41) = v33;
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

unint64_t sub_1BA58E7E8()
{
  unint64_t result;

  result = qword_1ED3CC418;
  if (!qword_1ED3CC418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD5C8, &_s10CodingKeysON_173);
    atomic_store(result, (unint64_t *)&qword_1ED3CC418);
  }
  return result;
}

uint64_t sub_1BA58E82C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatObject.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BA58E848()
{
  sub_1BA58E8F0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA58E894()
{
  sub_1BA58E8F0();
  return sub_1BB872D60();
}

unint64_t sub_1BA58E8F0()
{
  unint64_t result;

  result = qword_1ED3C7230;
  if (!qword_1ED3C7230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3708, &_s10CodingTypeON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3C7230);
  }
  return result;
}

uint64_t FormatImageNodeContext.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA58E960()
{
  sub_1BA58EA08();
  return sub_1BB872D0C();
}

uint64_t sub_1BA58E9AC()
{
  sub_1BA58EA08();
  return sub_1BB872D60();
}

unint64_t sub_1BA58EA08()
{
  unint64_t result;

  result = qword_1ED3B44D0;
  if (!qword_1ED3B44D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E42E8, &type metadata for FormatNodeStyle.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B44D0);
  }
  return result;
}

uint64_t sub_1BA58EA4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorExpression.init(from:)(a1, a2);
}

uint64_t FormatColorExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  __int128 v26;

  v3 = v2;
  v24[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v24[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA58EF38();
    v26 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v16 = sub_1BB8740EC();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v18 = (unint64_t *)(v16 + 40);
  while (1)
  {
    v19 = *v18;
    if (*v18 >= 4)
      break;
    v18 += 2;
    if (!--v17)
      goto LABEL_8;
  }
  v20 = v13;
  v21 = *(v18 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v22 = v21;
  *(_QWORD *)(v22 + 8) = v19;
  *(_QWORD *)(v22 + 16) = &unk_1E726B010;
  *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v21, v19);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v14);
  v10 = (_QWORD *)v24[0];
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA58EF38()
{
  unint64_t result;

  result = qword_1ED3A6A60;
  if (!qword_1ED3A6A60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC8B0, &_s10CodingTypeON_114);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A60);
  }
  return result;
}

unint64_t sub_1BA58EF7C()
{
  unint64_t result;

  result = qword_1ED39D458;
  if (!qword_1ED39D458)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponentExpression, &type metadata for FormatColorComponentExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39D458);
  }
  return result;
}

unint64_t sub_1BA58EFC0()
{
  unint64_t result;

  result = qword_1ED39EC78;
  if (!qword_1ED39EC78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAndExpression, &type metadata for FormatColorAndExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39EC78);
  }
  return result;
}

unint64_t sub_1BA58F004()
{
  unint64_t result;

  result = qword_1ED3A4208;
  if (!qword_1ED3A4208)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorColorExpression, &type metadata for FormatColorColorExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A4208);
  }
  return result;
}

uint64_t sub_1BA58F048@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatWebEmbedBinding.URL.init(from:)(a1, a2);
}

uint64_t FormatWebEmbedBinding.URL.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA58F300, (uint64_t)&type metadata for FormatWebEmbedBinding.URL.CodingType, (uint64_t)&unk_1E724E910, a2);
}

uint64_t sub_1BA58F088@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v26[1] = a3;
  v27 = a4;
  v26[0] = a2;
  v28 = a5;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)v26 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v12 = v5;
  if (v5)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v13 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  v16 = swift_bridgeObjectRelease();
  v17 = v28;
  if ((v15 & 1) != 0)
  {
    v18 = v28;
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (unint64_t *)(v19 + 40);
      while (1)
      {
        v22 = *v21;
        if (*v21 >= 4)
          break;
        v21 += 2;
        if (!--v20)
          goto LABEL_7;
      }
      v23 = *(v21 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v24 = v23;
      *(_QWORD *)(v24 + 8) = v22;
      *(_QWORD *)(v24 + 16) = v13;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v23, v22);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      goto LABEL_10;
    }
LABEL_7:
    v16 = swift_bridgeObjectRelease();
    v17 = v18;
  }
  ((void (*)(uint64_t))v26[0])(v16);
  v29 = 0;
  v30 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *v17 = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA58F300()
{
  unint64_t result;

  result = qword_1ED3C9B90;
  if (!qword_1ED3C9B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL.CodingType, &type metadata for FormatWebEmbedBinding.URL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B90);
  }
  return result;
}

unint64_t sub_1BA58F344()
{
  unint64_t result;

  result = qword_1ED3CB900;
  if (!qword_1ED3CB900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D12E8, &_s10CodingTypeON_169);
    atomic_store(result, (unint64_t *)&qword_1ED3CB900);
  }
  return result;
}

unint64_t sub_1BA58F388()
{
  unint64_t result;

  result = qword_1ED3BE250;
  if (!qword_1ED3BE250)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF53C, &_s5ImageO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3BE250);
  }
  return result;
}

unint64_t sub_1BA58F3CC()
{
  unint64_t result;

  result = qword_1ED3C7458;
  if (!qword_1ED3C7458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1310, &_s10CodingTypeON_170);
    atomic_store(result, (unint64_t *)&qword_1ED3C7458);
  }
  return result;
}

unint64_t sub_1BA58F410()
{
  unint64_t result;

  result = qword_1ED3C9928;
  if (!qword_1ED3C9928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA6C0, &_s10CodingTypeON_86);
    atomic_store(result, (unint64_t *)&qword_1ED3C9928);
  }
  return result;
}

unint64_t sub_1BA58F454()
{
  unint64_t result;

  result = qword_1ED3C5018;
  if (!qword_1ED3C5018)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA5D0, &_s10CodingTypeON_80);
    atomic_store(result, (unint64_t *)&qword_1ED3C5018);
  }
  return result;
}

uint64_t sub_1BA58F498(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, unint64_t, uint64_t);
  unint64_t v33;
  unint64_t v34;
  void *v35;
  const void *v36;
  void (*v37)(uint64_t, _DWORD *, uint64_t);
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  unint64_t v43;
  unint64_t v44;
  void *v45;
  const void *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  char v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  size_t __n;
  size_t v62;
  unint64_t v63;
  _DWORD *v65;

  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | 7;
  v12 = (v10 | 7) + v7;
  v13 = v10 + 16;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v14 + v10;
  v16 = (v14 + v10 + ((v14 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  if (!*(_DWORD *)(v9 + 84))
    ++v14;
  __n = v14;
  v62 = v14 + 7;
  v17 = ((((((((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v18 = v17 + (v12 & ~(v10 | 7));
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(_QWORD *)(v19 + 64) + v11;
  v21 = v17 + (v20 & ~v11);
  if (v21 > v18)
    v18 = v21;
  v65 = a2;
  v22 = *((unsigned __int8 *)a2 + v18);
  v63 = v18;
  v23 = v18 & 0xFFFFFFF8;
  if (v22 >= 2 && v23 != 0)
    v22 = *a2 + 2;
  v25 = ~v11;
  v26 = ~v10;
  if (v22 == 1)
  {
    v27 = a1;
    (*(void (**)(uint64_t, _DWORD *))(v19 + 16))(a1, v65);
    v28 = (_QWORD *)((v20 + a1) & v25);
    v29 = (_QWORD *)(((unint64_t)v65 + v20) & v25);
    *v28 = *v29;
    v28[1] = v29[1];
    v30 = ((unint64_t)v28 + v13) & v26;
    v31 = ((unint64_t)v29 + v13) & v26;
    v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v32(v30, v31, v8);
    v33 = (v15 + v30) & v26;
    v34 = (v15 + v31) & v26;
    v32(v33, v34, v8);
    v35 = (void *)((v15 + v33) & v26);
    v36 = (const void *)((v15 + v34) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v36, 1, v8))
    {
      memcpy(v35, v36, __n);
    }
    else
    {
      v32((unint64_t)v35, (unint64_t)v36, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v35, 0, 1, v8);
    }
    v47 = (_QWORD *)(((unint64_t)v35 + v62) & 0xFFFFFFFFFFFFF8);
    v48 = (_QWORD *)(((unint64_t)v36 + v62) & 0xFFFFFFFFFFFFFFF8);
    *v47 = *v48;
    v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
    v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v49 = *v50;
    v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFF8);
    v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v51 = *v52;
    *(_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
    v53 = 1;
  }
  else
  {
    v37 = *(void (**)(uint64_t, _DWORD *, uint64_t))(v6 + 16);
    v27 = a1;
    v37(a1, v65, v5);
    v38 = (_QWORD *)((v12 + a1) & v25);
    v39 = (_QWORD *)(((unint64_t)v65 + v12) & v25);
    *v38 = *v39;
    v38[1] = v39[1];
    v40 = ((unint64_t)v38 + v13) & v26;
    v41 = ((unint64_t)v39 + v13) & v26;
    v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v42(v40, v41, v8);
    v43 = (v15 + v40) & v26;
    v44 = (v15 + v41) & v26;
    v42(v43, v44, v8);
    v45 = (void *)((v15 + v43) & v26);
    v46 = (const void *)((v15 + v44) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v46, 1, v8))
    {
      memcpy(v45, v46, __n);
    }
    else
    {
      v42((unint64_t)v45, (unint64_t)v46, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v45, 0, 1, v8);
    }
    v53 = 0;
    v54 = (_QWORD *)(((unint64_t)v45 + v62) & 0xFFFFFFFFFFFFF8);
    v55 = (_QWORD *)(((unint64_t)v46 + v62) & 0xFFFFFFFFFFFFFFF8);
    *v54 = *v55;
    v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
    v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v56 = *v57;
    v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFF8);
    v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v58 = *v59;
    *(_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8);
  }
  *(_BYTE *)(v27 + v63) = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)((v63 + 8 + v27) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v65 + v63 + 8) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return v27;
}

uint64_t sub_1BA58F884(_QWORD *a1)
{
  return FormatTextNodeAttachment.encode(to:)(a1);
}

uint64_t FormatTextNodeAttachment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  int v45;
  char v46;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v37 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  sub_1BAEC535C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)v1;
  v40 = *(unsigned __int8 *)(v1 + 8);
  v14 = *(_QWORD *)(v1 + 16);
  v38 = *(_QWORD *)(v1 + 24);
  v39 = v14;
  v45 = *(unsigned __int8 *)(v1 + 32);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEC5254();
  v18 = sub_1BA4A2870(&qword_1ED3D1180, (uint64_t (*)(uint64_t))sub_1BAEC5254, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeAttachment, v19, v15, (uint64_t)&type metadata for FormatTextNodeAttachment, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  v20 = qword_1ED3C2478;
  swift_retain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  v24 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v42;
  sub_1BAD119B8(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v25)
  {
    v26 = (uint64_t)v12;
  }
  else
  {
    v27 = (uint64_t)v41;
    v23(v41, v22, v21);
    v42 = v24;
    swift_storeEnumTagMultiPayload();
    v28 = v23;
    if (v40)
    {
      v29 = v12;
      v30 = sub_1BAE4607C(v27, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      v31 = v38;
      v32 = v39;
      v33 = v45;
      if ((v30 & 1) != 0)
      {
        v43 = xmmword_1BB8A1A10;
        v44 = 0;
        v46 = 1;
        sub_1BAEC53D4();
        sub_1BA4A2870(&qword_1ED3AEDC0, (uint64_t (*)(uint64_t))sub_1BAEC53D4, MEMORY[0x1E0DED188]);
        sub_1BA58FD8C();
        v27 = (uint64_t)v41;
        v33 = v45;
        sub_1BB874464();
      }
      v28 = v23;
    }
    else
    {
      v29 = v12;
      v31 = v38;
      v32 = v39;
      v33 = v45;
    }
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    sub_1BA69C808(v32, v31, v33);
    if (qword_1ED3C4168 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476900);
    v35 = (uint64_t)v37;
    v28(v37, v34, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BAD27858(v32, v31, v33, 2, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4607C, (uint64_t (*)(uint64_t))sub_1BAEC53D4, &qword_1ED3AEDC0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    sub_1BA69C828(v32, v31, v33);
    v26 = (uint64_t)v29;
  }
  return sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BAEC535C);
}

unint64_t sub_1BA58FD48()
{
  unint64_t result;

  result = qword_1ED3B6DB8;
  if (!qword_1ED3B6DB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSyncImageContent, &type metadata for FormatSyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B6DB8);
  }
  return result;
}

unint64_t sub_1BA58FD8C()
{
  unint64_t result;

  result = qword_1ED39BD48;
  if (!qword_1ED39BD48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachmentAlignment, &type metadata for FormatTextNodeAttachmentAlignment);
    atomic_store(result, (unint64_t *)&qword_1ED39BD48);
  }
  return result;
}

uint64_t sub_1BA58FDD0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA58FDF8 + 4 * byte_1BB8AECE1[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1BA58FDF8()
{
  return 0x65756C6176;
}

uint64_t sub_1BA58FE0C()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA58FE28()
{
  return 1885433183;
}

void FeedItemLayoutAttributes.issueCoverImageRequests(options:)()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA58FEB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BA58FEDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  v4 = a1 & 0xFFFFFFFFFFFFFFFLL;
  v5 = v4 + 16;
  memcpy((void *)(v1 + 1104), (const void *)(v4 + 408), 0x180uLL);
  sub_1BA915B28(v5, v1 + 568);
  *(_QWORD *)(v1 + 560) = MEMORY[0x1E0DEE9D8];
  v6 = *(_OWORD *)(v3 + 88);
  v7 = *(_OWORD *)(v3 + 120);
  *(_OWORD *)(v1 + 1056) = *(_OWORD *)(v3 + 104);
  *(_OWORD *)(v1 + 1072) = v7;
  *(_OWORD *)(v1 + 1081) = *(_OWORD *)(v3 + 129);
  v8 = *(_OWORD *)(v3 + 24);
  v9 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(v1 + 992) = *(_OWORD *)(v3 + 40);
  *(_OWORD *)(v1 + 1008) = v9;
  v10 = *(_OWORD *)(v3 + 72);
  *(_OWORD *)(v1 + 1040) = v6;
  *(_OWORD *)(v1 + 1024) = v10;
  *(_OWORD *)(v1 + 960) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(v1 + 976) = v8;
  v11 = *(void **)(v1 + 960);
  if (*(_QWORD *)(v1 + 1040) == 1 || (v12 = *(void **)(v1 + 1064)) == 0)
  {
    sub_1BA8D1F08(v1 + 960);
    FCIssue.issueCoverModel.getter(v1 + 496);
    sub_1BA8D1FE4(v1 + 960);
    v11 = *(void **)(v1 + 496);
    v13 = *(_QWORD *)(v1 + 504);
    v12 = *(void **)(v1 + 512);
    v20 = *(_QWORD *)(v1 + 520);
    v19 = *(void **)(v1 + 528);
    v18 = *(_QWORD *)(v1 + 536);
    v17 = *(void **)(v1 + 544);
    v16 = *(_BYTE *)(v1 + 552);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 1072);
    v14 = v12;
    v15 = v11;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
  }
  *(_QWORD *)(v1 + 352) = v11;
  *(_QWORD *)(v1 + 360) = v13;
  *(_QWORD *)(v1 + 368) = v12;
  *(_QWORD *)(v1 + 376) = v20;
  *(_QWORD *)(v1 + 384) = v19;
  *(_QWORD *)(v1 + 392) = v18;
  *(_QWORD *)(v1 + 400) = v17;
  *(_BYTE *)(v1 + 408) = v16;
  sub_1BB5B0754(v1 + 352, (uint64_t *)(v1 + 560), v1 + 1104, v2);
  sub_1BA899748(v11, v13, v12, v20, v19, v18, v17, v16);
  sub_1BA8EDBB0(v1 + 720, v1 + 208);
  sub_1BA8EDBB0(v1 + 208, v1 + 352);
  if (sub_1BA84DAF0((uint64_t *)(v1 + 352)) == 1)
  {
    sub_1BA915C30(v1 + 568);
  }
  else
  {
    v21 = *(void **)(v1 + 352);
    if (*(_QWORD *)(v1 + 432) == 1 || (v22 = *(void **)(v1 + 456)) == 0)
    {
      sub_1BA8EDBB0(v1 + 208, v1);
      sub_1BA8D1F08(v1);
      FCIssue.issueCoverModel.getter(v1 + 144);
      sub_1BA90EECC(v1 + 208);
      v21 = *(void **)(v1 + 144);
      v23 = *(_QWORD *)(v1 + 152);
      v22 = *(void **)(v1 + 160);
      v30 = *(_QWORD *)(v1 + 168);
      v29 = *(void **)(v1 + 176);
      v28 = *(_QWORD *)(v1 + 184);
      v27 = *(void **)(v1 + 192);
      v26 = *(_BYTE *)(v1 + 200);
    }
    else
    {
      v23 = *(_QWORD *)(v1 + 464);
      v24 = v22;
      v25 = v21;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
    }
    *(_QWORD *)v1 = v21;
    *(_QWORD *)(v1 + 8) = v23;
    *(_QWORD *)(v1 + 16) = v22;
    *(_QWORD *)(v1 + 24) = v30;
    *(_QWORD *)(v1 + 32) = v29;
    *(_QWORD *)(v1 + 40) = v28;
    *(_QWORD *)(v1 + 48) = v27;
    *(_BYTE *)(v1 + 56) = v26;
    sub_1BB5B0754(v1, (uint64_t *)(v1 + 560), v1 + 1104, v2);
    sub_1BA915C30(v1 + 568);
    sub_1BA899748(v21, v23, v22, v30, v29, v28, v27, v26);
  }
  return sub_1BA58FEB8();
}

uint64_t sub_1BA5901A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1BA590720()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = v2 + 32;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1BA592DC0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BA592E0C(_QWORD *a1)
{
  return FormatCompilerOptions.Newsroom.encode(to:)(a1);
}

uint64_t FormatCompilerOptions.Newsroom.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[8];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  sub_1BAE751B4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  v16 = sub_1BAE750AC();
  v17 = sub_1BA4A2870(&qword_1ED3D0F80, (uint64_t (*)(uint64_t))sub_1BAE750AC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v15, v18, v13, v15, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v17, (uint64_t)&off_1E734BD80);
  v31 = v2;
  sub_1BA6A09F0(v2, (uint64_t)v32, &qword_1ED3A6A68, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environments);
  sub_1BA593184(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA5931BC);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v9, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v32[7];
  sub_1BAD4E714(v32, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1BA593184(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA5931FC);
  if (!v22)
  {
    v23 = v31 + *(int *)(v15 + 20);
    sub_1BA6F3F88();
    v25 = &v6[*(int *)(v24 + 48)];
    v26 = &v6[*(int *)(v24 + 64)];
    if (qword_1ED3C6D48 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476BD8);
    v21(v6, v27, v19);
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476BF0);
    v21(v25, v28, v19);
    *(_QWORD *)v26 = 0;
    *((_QWORD *)v26 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BAD4EA70(v23, 1, 0, 0, (uint64_t)v6, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE751B4);
}

_QWORD *sub_1BA593184(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_1BA5931BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA5931FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA59323C()
{
  unint64_t result;

  result = qword_1ED39B760;
  if (!qword_1ED39B760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerOptions.Newsroom.Environments, &type metadata for FormatCompilerOptions.Newsroom.Environments);
    atomic_store(result, (unint64_t *)&qword_1ED39B760);
  }
  return result;
}

uint64_t sub_1BA593280(_QWORD *a1)
{
  return FormatSelectorsExpression.encode(to:)(a1);
}

uint64_t FormatSelectorsExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE72558(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAE72450();
  v14 = sub_1BA4A2870(&qword_1ED3D11C0, (uint64_t (*)(uint64_t))sub_1BAE72450, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSelectorsExpression, v15, v11, (uint64_t)&type metadata for FormatSelectorsExpression, v13, (uint64_t)&type metadata for FormatVersions.AzdenE, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BD20);
  v16 = qword_1ED3C6D40;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BC0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD112E8(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE72558);
}

void sub_1BA593498(_QWORD *a1)
{
  FormatImageNodeBinding.encode(to:)(a1);
}

void FormatImageNodeBinding.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[26];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v28[5] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v28[4] = (char *)v28 - v6;
  MEMORY[0x1E0C80A78](v7);
  v28[3] = (char *)v28 - v8;
  MEMORY[0x1E0C80A78](v9);
  v28[2] = (char *)v28 - v10;
  MEMORY[0x1E0C80A78](v11);
  v28[1] = (char *)v28 - v12;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v28[0] = (char *)v28 - v15;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v1;
  v22 = v1[1];
  v28[8] = v1[2];
  v28[9] = v21;
  v28[6] = v1[4];
  v28[7] = v22;
  v23 = *((unsigned __int8 *)v1 + 40);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1BA6B8518();
  v28[25] = v20;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageNodeBinding, v27, v24, (uint64_t)&type metadata for FormatImageNodeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v20, v26, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5936D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA593D94(0, *(_QWORD *)(v1 - 200), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA593D94(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1704;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA593F3C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA593EF8()
{
  unint64_t result;

  result = qword_1ED3A6DD0;
  if (!qword_1ED3A6DD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAE88, &_s10CodingTypeON_76);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DD0);
  }
  return result;
}

unint64_t sub_1BA593F3C()
{
  unint64_t result;

  result = qword_1ED39B7E8;
  if (!qword_1ED39B7E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Image, &type metadata for FormatHeadlineBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED39B7E8);
  }
  return result;
}

uint64_t sub_1BA593F80(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1704;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5940E8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5940E8()
{
  unint64_t result;

  result = qword_1ED39FD68;
  if (!qword_1ED39FD68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Image, &type metadata for FormatIssueBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED39FD68);
  }
  return result;
}

uint64_t sub_1BA59412C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B0738, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA5955DC(0, &qword_1ED3B05D8, MEMORY[0x1E0DB5A10]);
  sub_1BA59559C(&qword_1ED3B05D0, &qword_1ED3B05D8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BA594538(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD);
  uint64_t v19;
  void (*v20)(uint64_t *);
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t, uint64_t);
  void (*v27)(uint64_t *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t);
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  void **v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *, uint64_t);
  uint64_t result;
  unint64_t v64;
  unint64_t v65;
  double v66;
  double v67;
  double v68;
  double v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  int *v81;
  char *v82;
  void *v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  unint64_t v92;
  void (*v93)(void);
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  id v101;
  void (*v102)(char *, _QWORD, uint64_t, uint64_t);
  void (*v103)(char *, _QWORD, uint64_t);
  uint64_t v104;
  unsigned int v105;
  int *v106;
  void (*v107)(uint64_t *, uint64_t);
  void (*v108)(uint64_t *, uint64_t, uint64_t);
  unsigned int v109;
  void (*v110)(uint64_t, _QWORD, uint64_t);
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v89 = a2;
  v114 = a1;
  v96 = sub_1BB86DA38();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v98 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1BB86D93C();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v97 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for HeadlineViewLayout.Context(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v94 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B0738, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v86 - v14);
  v117 = a1;
  v16 = sub_1BB86D438();
  v17 = swift_allocBox();
  v18 = *(void (**)(_QWORD))(*(_QWORD *)(v16 - 8) + 104);
  v111 = *MEMORY[0x1E0DB5A38];
  v113 = v16;
  v110 = (void (*)(uint64_t, _QWORD, uint64_t))v18;
  v18(v19);
  *v15 = v17;
  v20 = *(void (**)(uint64_t *))(v13 + 104);
  v109 = *MEMORY[0x1E0DB6318];
  v20(v15);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA5955DC(0, &qword_1ED3B05D8, MEMORY[0x1E0DB5A10]);
  v23 = v22;
  v24 = sub_1BA59559C(&qword_1ED3B05D0, &qword_1ED3B05D8, v21, MEMORY[0x1E0DB5A18]);
  v116 = v23;
  v25 = v24;
  sub_1BB86D4EC();
  v26 = (void (*)(uint64_t *, uint64_t, uint64_t))v20;
  v27 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
  v27(v15, v12);
  v117 = v114;
  swift_getKeyPath();
  v28 = *MEMORY[0x1E0DB6410];
  v112 = v12;
  v26(v15, v28, v12);
  v92 = *(_QWORD *)(v89 + 16);
  if (v92)
  {
    v107 = v27;
    v108 = v26;
    v115 = v25;
    v91 = v9;
    v87 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v9 = v94;
    sub_1BA4C2DD8(v89 + v87, v94, type metadata accessor for HeadlineViewLayout.Context);
    v29 = (char *)v7 + v5[5];
    v30 = *MEMORY[0x1E0DB61C8];
    v31 = sub_1BB86DA20();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(void (**)(char *, _QWORD, uint64_t))(v32 + 104);
    v105 = v30;
    v103 = v33;
    v33(v29, v30, v31);
    v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
    v104 = v31;
    v102 = v34;
    v34(v29, 0, 1, v31);
    v35 = (void **)MEMORY[0x1E0DC4918];
    *v7 = 0;
    *(_QWORD *)((char *)v7 + v5[6]) = 0;
    v36 = *v35;
    v106 = v5;
    *(_QWORD *)((char *)v7 + v5[7]) = v36;
    v37 = qword_1ED3BC390;
    v101 = v36;
    v12 = (uint64_t)v7;
    if (v37 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_retain();
  v38 = v97;
  sub_1BB86D2B8();
  v39 = swift_release();
  v40 = MEMORY[0x1E0C80A78](v39);
  *(&v86 - 4) = v9;
  *(&v86 - 3) = v12;
  v85 = (unint64_t)v38;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v95 + 104))(v98, *MEMORY[0x1E0DB6208], v96, v40);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, unint64_t))(v99 + 8))(v38, v100);
  v88 = (_QWORD *)v12;
  sub_1BA4A2E80(v12, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80(v9, type metadata accessor for HeadlineViewLayout.Context);
  v100 = sub_1BA595D14();
  v85 = v100;
  v41 = v115;
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  v42 = v112;
  v43 = v107;
  v107(v15, v112);
  v44 = v113;
  v45 = v114;
  v117 = v114;
  v46 = swift_allocBox();
  v110(v47, v111, v44);
  *v15 = v46;
  v48 = v108;
  v108(v15, v109, v42);
  sub_1BB86D4EC();
  v43(v15, v42);
  v117 = v45;
  v48(v15, v28, v42);
  sub_1BA594F34();
  v50 = v49;
  sub_1BA4CDF6C(0, &qword_1ED3B0670, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v52 = v51;
  v53 = *((_QWORD *)v51 - 1);
  v54 = *(unsigned __int8 *)(v53 + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = v55 + *(_QWORD *)(v53 + 72);
  v99 = v50;
  v96 = v56;
  v95 = v54 | 7;
  v57 = swift_allocObject();
  v94 = xmmword_1BB87CE70;
  *(_OWORD *)(v57 + 16) = xmmword_1BB87CE70;
  v97 = (char *)v55;
  v58 = *MEMORY[0x1E0DB5C80];
  v59 = *(void (**)(void))(v53 + 104);
  v98 = v52;
  v93 = v59;
  v60 = ((uint64_t (*)(uint64_t, uint64_t, char *))v59)(v57 + v55, v58, v52);
  MEMORY[0x1E0C80A78](v60);
  v61 = v89;
  v85 = v41;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v62 = v43;
  result = ((uint64_t (*)(uint64_t *, uint64_t))v43)(v15, v42);
  v64 = v92;
  if (v92 >= 4)
  {
    v65 = *(_QWORD *)(v91 + 72);
    LODWORD(v91) = *MEMORY[0x1E0DB6330];
    v90 = *MEMORY[0x1E0DB5CB8];
    v66 = *MEMORY[0x1E0DC49E8];
    v67 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v68 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v69 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    swift_bridgeObjectRetain();
    v70 = v64 - 3;
    v92 = v65;
    v71 = v61 + v87 + 3 * v65;
    v72 = v88;
    v73 = v112;
    v74 = v104;
    do
    {
      v117 = v45;
      v75 = v113;
      v76 = swift_allocBox();
      v110(v77, v111, v75);
      *v15 = v76;
      v78 = v108;
      v108(v15, v109, v73);
      sub_1BB86D4EC();
      v62(v15, v73);
      v117 = v45;
      swift_getKeyPath();
      v79 = swift_allocObject();
      *(_QWORD *)(v79 + 16) = 0x4060200000000000;
      *v15 = v79;
      v78(v15, v91, v73);
      v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = v94;
      *(_QWORD *)&v97[v80] = 0x4058C00000000000;
      v93();
      v81 = v106;
      v82 = (char *)v72 + v106[5];
      v103(v82, v105, v74);
      v102(v82, 0, 1, v74);
      *v72 = 0;
      *(_QWORD *)((char *)v72 + v81[6]) = 0;
      v83 = v101;
      *(_QWORD *)((char *)v72 + v81[7]) = v101;
      v84 = v83;
      _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v71, (uint64_t)v72, v66, v67, v68, v69);
      sub_1BA4A2E80((uint64_t)v72, type metadata accessor for HeadlineViewLayout.Options);
      v85 = v100;
      sub_1BB86D4C8();
      v62 = v107;
      swift_release();
      swift_bridgeObjectRelease();
      v45 = v114;
      swift_release();
      v62(v15, v73);
      v71 += v92;
      --v70;
    }
    while (v70);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA594EF0()
{
  unint64_t result;

  result = qword_1ED3B8EE8;
  if (!qword_1ED3B8EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB953FA0, &type metadata for A6_V3.Layout);
    atomic_store(result, (unint64_t *)&qword_1ED3B8EE8);
  }
  return result;
}

void sub_1BA594F34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9C78)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B0670, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9C78);
  }
}

uint64_t sub_1BA594FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B0738, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA5955DC(0, &qword_1ED3B05D8, MEMORY[0x1E0DB5A10]);
  sub_1BA59559C(&qword_1ED3B05D0, &qword_1ED3B05D8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BA5953B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1ED3B0738, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 3;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA5955DC(0, &qword_1ED3B05D8, MEMORY[0x1E0DB5A10]);
  sub_1BA59559C(&qword_1ED3B05D0, &qword_1ED3B05D8, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 3;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BA59559C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA5955DC(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA5955DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A6_V3.Layout;
    v8[1] = &type metadata for A6_V3.Layout.Attributes;
    v8[2] = sub_1BA594EF0();
    v8[3] = sub_1BA595658();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BA595658()
{
  unint64_t result;

  result = qword_1ED3B8ED0;
  if (!qword_1ED3B8ED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB953F70, &type metadata for A6_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3B8ED0);
  }
  return result;
}

uint64_t sub_1BA59569C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1ED39DE00, (uint64_t (*)(void))sub_1BA5961E8, (uint64_t)&type metadata for A6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 6;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BA595D7C(0, &qword_1ED39DDD8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA596134(&qword_1ED39DDD0, &qword_1ED39DDD8, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BA5957F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v35)(uint64_t, _QWORD *);
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  void *v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;

  v6 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1ED39DE00, (uint64_t (*)(void))sub_1BA5961E8, (uint64_t)&type metadata for A6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (_QWORD *)((char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v68 = (_QWORD *)((char *)v53 - v15);
  v16 = type metadata accessor for HeadlineViewLayout.Context(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a2 + 16);
  if (v20)
  {
    v73 = v19;
    v21 = a3 + *(int *)(type metadata accessor for A6_V1.Bound() + 24);
    v22 = v21 + *(int *)(type metadata accessor for GroupLayoutContext() + 24);
    v65 = v11;
    v66 = v22;
    v23 = *(unsigned __int8 *)(v17 + 80);
    v64 = v13;
    v24 = a2 + ((v23 + 32) & ~v23);
    v63 = *(_QWORD *)(v17 + 72);
    v62 = *MEMORY[0x1E0DB5A38];
    v61 = *MEMORY[0x1E0DB6318];
    v60 = *MEMORY[0x1E0DB6330];
    v59 = *MEMORY[0x1E0DB5CB8];
    v58 = *MEMORY[0x1E0DB61C8];
    v57 = (void *)*MEMORY[0x1E0DC4918];
    v25 = *MEMORY[0x1E0DC49E8];
    v26 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v27 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v28 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v53[1] = a2;
    swift_bridgeObjectRetain();
    v56 = xmmword_1BB87CE70;
    v55 = v6;
    v67 = a1;
    v54 = v10;
    do
    {
      v72 = v20;
      sub_1BA4C2DD8(v24, (uint64_t)v73, type metadata accessor for HeadlineViewLayout.Context);
      v74 = a1;
      v29 = sub_1BB86D438();
      v30 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, v62, v29);
      v32 = v68;
      *v68 = v30;
      v33 = v65;
      v34 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v65 + 104);
      v34(v32, v61, v10);
      v35 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA595D7C(0, &qword_1ED39DDA8, MEMORY[0x1E0DB5A10]);
      v70 = v36;
      v69 = sub_1BA596134(&qword_1ED39DDA0, &qword_1ED39DDA8, v35, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4EC();
      v71 = *(void (**)(uint64_t *, uint64_t))(v33 + 8);
      v71(v32, v10);
      v74 = a1;
      swift_getKeyPath();
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = 0x4060200000000000;
      v38 = v64;
      *v64 = v37;
      v34(v38, v60, v10);
      sub_1BA596174();
      sub_1BA4CDF6C(0, &qword_1ED39DDC0, (uint64_t (*)(void))sub_1BA5961E8, (uint64_t)&type metadata for A6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v40 = *(_QWORD *)(v39 - 8);
      v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v56;
      *(_QWORD *)(v42 + v41) = 0x4058C00000000000;
      (*(void (**)(void))(v40 + 104))();
      v43 = *(unsigned __int8 *)(v66 + 17);
      v44 = v55;
      v45 = (char *)v8 + *(int *)(v55 + 20);
      v46 = sub_1BB86DA20();
      v47 = *(_QWORD *)(v46 - 8);
      (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v45, v58, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v45, 0, 1, v46);
      *v8 = v43;
      *(_QWORD *)((char *)v8 + *(int *)(v44 + 24)) = 0;
      v48 = v57;
      *(_QWORD *)((char *)v8 + *(int *)(v44 + 28)) = v57;
      v49 = v48;
      v50 = (uint64_t)v73;
      _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0((uint64_t)v73, (uint64_t)v8, v25, v26, v27, v28);
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for HeadlineViewLayout.Options);
      sub_1BA595D14();
      sub_1BB86D4C8();
      a1 = v67;
      swift_release();
      v10 = v54;
      swift_bridgeObjectRelease();
      swift_release();
      v51 = v38;
      v52 = v72;
      v71(v51, v10);
      sub_1BA4A2E80(v50, type metadata accessor for HeadlineViewLayout.Context);
      v24 += v63;
      v20 = v52 - 1;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1BA595D14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B06C8;
  if (!qword_1ED3B06C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B06D0, (uint64_t (*)(void))sub_1BA82F598, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5EB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B06C8);
  }
  return result;
}

void sub_1BA595D7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A6_V1.Layout;
    v8[1] = &type metadata for A6_V1.Layout.Attributes;
    v8[2] = sub_1BA5961E8();
    v8[3] = sub_1BA59622C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v12 = sub_1BB86DA38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BB86D93C();
  v16 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasThumbnail);
  sub_1BA4C2DD8(a2, (uint64_t)v21, type metadata accessor for HeadlineViewLayout.Options);
  if (v22)
  {
    v23 = *v21;
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for HeadlineViewLayout.Options);
    if ((v23 & 2) == 0)
    {
      if (qword_1ED3BC390 != -1)
        swift_once();
      swift_retain();
      sub_1BB86D2B8();
      v24 = swift_release();
      v25 = MEMORY[0x1E0C80A78](v24);
      *((double *)&v30 - 8) = a3;
      *((double *)&v30 - 7) = a4;
      *((double *)&v30 - 6) = a5;
      *((double *)&v30 - 5) = a6;
      *(&v30 - 4) = a2;
      *(&v30 - 3) = (uint64_t)v18;
      *(&v30 - 2) = a1;
      (*(void (**)(char *, _QWORD, uint64_t, double))(v13 + 104))(v15, *MEMORY[0x1E0DB6208], v12, v25);
      sub_1BA65781C(0, (unint64_t *)&qword_1ED3B06F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
      swift_allocObject();
      goto LABEL_10;
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for HeadlineViewLayout.Options);
  }
  if (qword_1ED3BC390 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v26 = swift_release();
  v27 = MEMORY[0x1E0C80A78](v26);
  *((double *)&v30 - 8) = a3;
  *((double *)&v30 - 7) = a4;
  *((double *)&v30 - 6) = a5;
  *((double *)&v30 - 5) = a6;
  *(&v30 - 4) = (uint64_t)v18;
  *(&v30 - 3) = a1;
  *(&v30 - 2) = a2;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v13 + 104))(v15, *MEMORY[0x1E0DB6208], v12, v27);
  sub_1BA65781C(0, (unint64_t *)&qword_1ED3B06F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
LABEL_10:
  v28 = sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v31);
  return v28;
}

uint64_t sub_1BA596134(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA595D7C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA596174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DF60)
  {
    sub_1BA4CDF6C(255, &qword_1ED39DDC0, (uint64_t (*)(void))sub_1BA5961E8, (uint64_t)&type metadata for A6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DF60);
  }
}

unint64_t sub_1BA5961E8()
{
  unint64_t result;

  result = qword_1ED39DEF8;
  if (!qword_1ED39DEF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89AAF8, &type metadata for A6_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1ED39DEF8);
  }
  return result;
}

unint64_t sub_1BA59622C()
{
  unint64_t result;

  result = qword_1ED39DEE0;
  if (!qword_1ED39DEE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89AAC8, &type metadata for A6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39DEE0);
  }
  return result;
}

uint64_t sub_1BA596270@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA596298(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA596298(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (**v11)(char *, uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  int v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  __int128 v73;
  char v74;
  __int128 v75;
  char v76;
  uint64_t v77;
  char *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  __int128 v89;
  char v90;
  void (**v91)(char *, uint64_t);

  sub_1BAEFBAC0(0, &qword_1ED3C4718, (void (*)(void))sub_1BA823E08, (void (*)(void))sub_1BA823E4C);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v72 = (char *)&v48 - v5;
  sub_1BAEF0214();
  v71 = v6;
  v7 = *(void (***)(char *, uint64_t))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA0FEC();
  sub_1BA4A2870(&qword_1ED3D12B0, (uint64_t (*)(uint64_t))sub_1BAEA0FEC, (uint64_t)&unk_1BB8FFC6C);
  v11 = v91;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v68 = v4;
  v69 = v3;
  v91 = v7;
  v13 = a1[3];
  v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v71;
  v16 = v72;
  if ((v13 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v10 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      sub_1BAEA106C();
      sub_1BA597200();
      sub_1BAEA10B0();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E7253118);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v10;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v10, v23, 1);
      v91[1](v9, v15);
      a1 = v70;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF0214);
  v22 = v21;
  v79 = xmmword_1BB8A1A10;
  LOBYTE(v80) = 0;
  v27 = sub_1BB874098();
  v29 = v28;
  v30 = v9;
  v31 = v15;
  v67 = xmmword_1BB8D2D60;
  v79 = xmmword_1BB8D2D60;
  LOBYTE(v80) = 0;
  v32 = sub_1BB8740F8();
  if ((v32 & 1) != 0)
  {
    v89 = v67;
    v90 = 0;
    sub_1BAEF028C();
    v33 = v69;
    sub_1BB8740D4();
    v66 = v27;
    v34 = v16;
    v35 = v30;
    *(_QWORD *)&v67 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v33);
  }
  else
  {
    v66 = v27;
    v35 = v30;
    *(_QWORD *)&v67 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v79 = xmmword_1BB8D2D70;
  LOBYTE(v80) = 0;
  sub_1BA69C018();
  v36 = v31;
  v37 = v35;
  sub_1BB874068();
  v39 = (char *)v89;
  v79 = xmmword_1BB8D2D90;
  LOBYTE(v80) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v72 = v39;
  v40 = v89;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v79 = xmmword_1BB8D2D80;
  LOBYTE(v80) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v71 = v40;
  v41 = v89;
  v89 = xmmword_1BB8D2DA0;
  v90 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v69 = v41;
  v42 = *((_QWORD *)&v79 + 1);
  v65 = v79;
  LODWORD(v68) = v80;
  v89 = xmmword_1BB8D2DB0;
  v90 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v62 = v42;
  v63 = v29;
  v64 = v22;
  v55 = v79;
  v56 = v80;
  v57 = v81;
  v58 = v82;
  v59 = v83;
  v60 = v84;
  v43 = v86;
  v61 = v85;
  v44 = v87;
  v45 = v88;
  v89 = xmmword_1BB8D2DD0;
  v90 = 0;
  sub_1BA7967E4();
  sub_1BB874068();
  v50 = v45;
  v51 = v44;
  v52 = v43;
  v53 = v79;
  v54 = v80;
  v89 = xmmword_1BB8D2DE0;
  v90 = 0;
  sub_1BB874068();
  v46 = v79;
  LOBYTE(v44) = v80;
  v79 = xmmword_1BB8D2DF0;
  LOBYTE(v80) = 0;
  v49 = sub_1BB874038();
  sub_1BA4AD288(0, &qword_1ED3CF7C0, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v79 = xmmword_1BB8D2E00;
  LOBYTE(v80) = 0;
  sub_1BA597244();
  sub_1BB874068();
  v91[1](v37, v36);
  v47 = v89;
  v77 = v71;
  v78 = v72;
  *(_QWORD *)&v89 = v65;
  *((_QWORD *)&v89 + 1) = v62;
  v90 = v68;
  v79 = v55;
  v80 = v56;
  v81 = v57;
  v82 = v58;
  v83 = v59;
  v84 = v60;
  v85 = v61;
  v86 = v52;
  v87 = v51;
  v88 = v50;
  v75 = v53;
  v76 = v54;
  v73 = v46;
  v74 = v44;
  type metadata accessor for FormatLayeredMediaNodeStyle();
  swift_allocObject();
  v10 = sub_1BA5972BC(v20, v64, v66, v63, v67, (uint64_t *)&v78, &v77, v69, (uint64_t *)&v89, &v79, (uint64_t *)&v75, (uint64_t *)&v73, v49, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  return v10;
}

uint64_t type metadata accessor for FormatLayeredMediaNodeStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA597200()
{
  unint64_t result;

  result = qword_1ED3CC0A8;
  if (!qword_1ED3CC0A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9718, &_s10CodingKeysON_103);
    atomic_store(result, (unint64_t *)&qword_1ED3CC0A8);
  }
  return result;
}

unint64_t sub_1BA597244()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF7C8;
  if (!qword_1ED3CF7C8)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7C0, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA826FE4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF7C8);
  }
  return result;
}

uint64_t sub_1BA5972BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, __int128 *a10, uint64_t *a11, uint64_t *a12, char a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = *a7;
  v37 = *a6;
  v19 = *a9;
  v18 = a9[1];
  v20 = *((_BYTE *)a9 + 16);
  v27 = a10[1];
  v28 = *a10;
  v25 = a10[3];
  v26 = a10[2];
  v22 = *((_QWORD *)a10 + 8);
  v21 = *((_QWORD *)a10 + 9);
  v23 = *((_BYTE *)a10 + 80);
  v34 = a11[1];
  v35 = *a11;
  v33 = *((_BYTE *)a11 + 16);
  v31 = a12[1];
  v32 = *a12;
  v30 = *((_BYTE *)a12 + 16);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 72) = a8;
  *(_QWORD *)(v14 + 80) = v19;
  *(_QWORD *)(v14 + 88) = v18;
  *(_BYTE *)(v14 + 96) = v20;
  *(_OWORD *)(v14 + 104) = v28;
  *(_OWORD *)(v14 + 120) = v27;
  *(_OWORD *)(v14 + 136) = v26;
  *(_OWORD *)(v14 + 152) = v25;
  *(_QWORD *)(v14 + 168) = v22;
  *(_QWORD *)(v14 + 176) = v21;
  *(_BYTE *)(v14 + 184) = v23;
  *(_QWORD *)(v14 + 56) = v37;
  *(_QWORD *)(v14 + 64) = v36;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 192) = v35;
  *(_QWORD *)(v14 + 200) = v34;
  *(_BYTE *)(v14 + 208) = v33;
  *(_QWORD *)(v14 + 216) = v32;
  *(_QWORD *)(v14 + 224) = v31;
  *(_BYTE *)(v14 + 232) = v30;
  *(_BYTE *)(v14 + 233) = a13;
  *(_QWORD *)(v14 + 240) = a14;
  return v14;
}

uint64_t sub_1BA597440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatStateMachineEventValue.init(from:)(a1, a2);
}

uint64_t FormatStateMachineEventValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  char v28;

  v3 = v2;
  v27[0] = a2;
  sub_1BAEBF2B8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEBF330();
  sub_1BA4A2870(&qword_1ED3D1300, (uint64_t (*)(uint64_t))sub_1BAEBF330, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v27[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v27[0] = v13;
      MEMORY[0x1E0C80A78](v23);
      v27[-4] = &_s10CodingKeysON_38;
      v27[-3] = sub_1BAEBF3B0();
      v27[-2] = sub_1BA597748();
      v27[-1] = sub_1BAEBF3F4();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71130((uint64_t)&unk_1E726EA50);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v27[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27[1] = 0;
  v27[2] = 0;
  v28 = 0;
  v18 = sub_1BB874098();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  v12[1] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA597748()
{
  unint64_t result;

  result = qword_1ED3CC6A8;
  if (!qword_1ED3CC6A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5F78, &_s10CodingKeysON_38);
    atomic_store(result, (unint64_t *)&qword_1ED3CC6A8);
  }
  return result;
}

uint64_t sub_1BA59778C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRepeatNodeIteration.init(from:)(a1, a2);
}

uint64_t FormatRepeatNodeIteration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = a1;
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  v10 = v25;
  v11 = v9[3];
  v24 = v9;
  __swift_project_boxed_opaque_existential_1(v9, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v8;
  if ((v11 & 1) == 0)
    goto LABEL_8;
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1BA597B78();
    v26 = 0uLL;
    sub_1BB8740D4();
    v18 = v27;
    if ((v27 & 1) != 0)
    {
      sub_1BA63658C(0);
      v26 = xmmword_1BB87FC90;
      sub_1BB828F18(&qword_1ED3B34A8, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      v19 = v27;
    }
    else
    {
      sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3C2450, (uint64_t (*)(void))sub_1BB828F58, (uint64_t)&type metadata for FormatRepeatNodeBindIteration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      v23 = xmmword_1BB87FC90;
      v26 = xmmword_1BB87FC90;
      sub_1BB828F9C(&qword_1ED3C6750, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      v19 = v27;
    }
    v9 = v24;
    *(_QWORD *)v10 = v19;
    *(_BYTE *)(v10 + 8) = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_7;
  }
  v20 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v21 = v20;
  *(_QWORD *)(v21 + 8) = v17;
  *(_QWORD *)(v21 + 16) = &unk_1E726FCC8;
  *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v20, v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  v9 = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

unint64_t sub_1BA597B78()
{
  unint64_t result;

  result = qword_1ED3B7B88;
  if (!qword_1ED3B7B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9545E4, &type metadata for FormatRepeatNodeIteration.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B7B88);
  }
  return result;
}

unint64_t sub_1BA597BBC()
{
  unint64_t result;

  result = qword_1ED3C2920;
  if (!qword_1ED3C2920)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRepeatNodeBindIteration, &type metadata for FormatRepeatNodeBindIteration);
    atomic_store(result, (unint64_t *)&qword_1ED3C2920);
  }
  return result;
}

uint64_t sub_1BA597C00(_QWORD *a1)
{
  return FormatItemNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatItemNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  unint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  int *v72;
  char *v73;
  char *v74;
  uint64_t *v75;
  _BYTE v76[40];
  _BYTE v77[64];
  _BYTE v78[72];
  uint64_t v79;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v65 - v7;
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v65 - v9;
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v65 - v11;
  MEMORY[0x1E0C80A78](v12);
  v71 = (char *)&v65 - v13;
  MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v65 - v15;
  MEMORY[0x1E0C80A78](v16);
  v74 = (char *)&v65 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v65 - v19;
  sub_1BAE9F458(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  v27 = sub_1BAE9F30C();
  v28 = sub_1BA4A2870(&qword_1ED3D0DF0, (uint64_t (*)(uint64_t))sub_1BAE9F30C, (uint64_t)&unk_1BB8FFC6C);
  v72 = (int *)v26;
  sub_1BA6EC1EC(v26, v29, v24, v26, v27, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v23, v28, (uint64_t)&off_1E734BD80);
  v30 = *v2;
  v31 = v2[1];
  v75 = v2;
  v32 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v32 != -1)
    swift_once();
  v33 = sub_1BB86EB84();
  v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C20);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v35(v20, v34, v33);
  v36 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v37 = v79;
  sub_1BAD1C54C(v30, v31, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0);
  if (v37)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v38 = v75;
    sub_1BA6A09F0((uint64_t)(v75 + 2), (uint64_t)v78, &qword_1ED3A7208, (uint64_t)&type metadata for FormatPreviewParameters);
    v39 = (uint64_t)v74;
    v35(v74, v34, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BA764394((uint64_t)v78, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BAD5F890((uint64_t)v78, 1, 0, 0, v39, (uint64_t)sub_1BA90CF04, 0);
    v40 = v35;
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    sub_1BA764394((uint64_t)v78, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
    sub_1BA6A09F0((uint64_t)(v38 + 11), (uint64_t)v77, &qword_1ED39FE68, (uint64_t)&type metadata for FormatCellSelection);
    v41 = (uint64_t)v73;
    v40(v73, v34, v33);
    swift_storeEnumTagMultiPayload();
    sub_1BA76445C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA764498);
    v42 = v40;
    sub_1BAD5FC98((uint64_t)v77, 2, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    v79 = v36;
    v43 = v33;
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    sub_1BA76445C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7644AC);
    v44 = v72;
    v45 = (uint64_t)v38 + v72[7];
    if (qword_1ED3C6D78 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C68);
    v47 = (uint64_t)v71;
    v42(v71, v46, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5FF80(v45, 3, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    v48 = *((_BYTE *)v38 + v44[8]);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v49 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C38);
    v50 = (uint64_t)v70;
    v42(v70, v49, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD60288(v48, 4, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    v51 = *((_BYTE *)v38 + v44[9]);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v52 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476B78);
    v53 = (uint64_t)v69;
    v42(v69, v52, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD60288(v51, 5, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    v74 = 0;
    v54 = v42;
    v55 = (unint64_t *)((char *)v38 + v44[10]);
    v56 = *v55;
    v57 = v55[1];
    sub_1BA77567C(*v55);
    if (qword_1ED3C6D00 != -1)
      swift_once();
    v58 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476B48);
    v59 = (uint64_t)v68;
    v66 = v54;
    v54(v68, v58, v43);
    swift_storeEnumTagMultiPayload();
    v60 = v74;
    sub_1BAD60450(v56, v57, 6, 0, 0, v59, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    v61 = v66;
    sub_1BA7644C0(v56);
    if (!v60)
    {
      sub_1BA6A09F0((uint64_t)v38 + v44[11], (uint64_t)v76, &qword_1ED3AD6C0, (uint64_t)&type metadata for FormatFocusParameters);
      if (qword_1ED3C4170 != -1)
        swift_once();
      v63 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476998);
      v64 = (uint64_t)v67;
      v61(v67, v63, v43);
      swift_storeEnumTagMultiPayload();
      sub_1BAD60670((uint64_t)v76, 7, 0, 0, v64, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BAE9F458);
}

uint64_t FeedGroupDebugFormat.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA598594(v0 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA598594(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatContent.Resolved();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA5985D0(_QWORD *a1)
{
  return FormatPublisherLogoSize.encode(to:)(a1);
}

uint64_t FormatPublisherLogoSize.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[12];
  int v29;
  _BYTE *v30;
  _BYTE *v31;
  unint64_t v32;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v30 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v31 = &v28[-v7];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-v9];
  sub_1BAEAFCC4(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_BYTE *)v1;
  v32 = *(_QWORD *)(v1 + 8);
  v29 = *(unsigned __int8 *)(v1 + 16);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEAFBBC();
  v18 = sub_1BA4A2870(&qword_1ED3D10B0, (uint64_t (*)(uint64_t))sub_1BAEAFBBC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPublisherLogoSize, v19, v15, (uint64_t)&type metadata for FormatPublisherLogoSize, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v13, v18, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v10, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD15420(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v23 = (uint64_t)v31;
    v22(v31, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = v32;
    sub_1BA738D44(v32);
    sub_1BAD1557C(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    sub_1BA738D54(v24);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
    v26 = (uint64_t)v30;
    v22(v30, v25, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD48FD8(v29, 2, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAEAFCC4);
}

unint64_t sub_1BA59894C()
{
  unint64_t result;

  result = qword_1ED39BCF8;
  if (!qword_1ED39BCF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizeBinding, &type metadata for FormatPublisherLogoSizeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39BCF8);
  }
  return result;
}

unint64_t sub_1BA598990()
{
  unint64_t result;

  result = qword_1ED39BA10;
  if (!qword_1ED39BA10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizing, &type metadata for FormatPublisherLogoSizing);
    atomic_store(result, (unint64_t *)&qword_1ED39BA10);
  }
  return result;
}

uint64_t sub_1BA5989D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA5989F0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BA5989F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA598A04(a1, a2, a3, a4);
}

uint64_t sub_1BA598A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  uint64_t v16;

  swift_beginAccess();
  result = sub_1BB86D414();
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (i = 32; ; i += 40)
    {
      v13 = *(_OWORD *)(v10 + i);
      v14 = *(_OWORD *)(v10 + i + 16);
      v16 = *(_QWORD *)(v10 + i + 32);
      v15[0] = v13;
      v15[1] = v14;
      sub_1BA7086BC((uint64_t)v15);
      sub_1BA719A9C(a1, a3, a4);
      if (v4)
        break;
      sub_1BA708680((uint64_t)v15);
      if (!--v11)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return sub_1BA708680((uint64_t)v15);
  }
  return result;
}

uint64_t sub_1BA598AFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.Size.init(from:)(a1, a2);
}

uint64_t FormatSymbolConfig.Size.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;

  v3 = v2;
  v28 = a2;
  sub_1BAEC30E4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC315C();
  sub_1BA4A2870(&qword_1ED3D0D50, (uint64_t (*)(uint64_t))sub_1BAEC315C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v28 = v13;
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_29;
      *(&v28 - 3) = sub_1BAEC31DC();
      *(&v28 - 2) = sub_1BA598EF8();
      *(&v28 - 1) = sub_1BAEC3220();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726ED48);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v29 = 0uLL;
  v30 = 0;
  sub_1BB8740D4();
  v19 = v31;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA598F3C();
  sub_1BB874068();
  v26 = v31;
  v29 = xmmword_1BB8D2D60;
  v30 = 0;
  sub_1BA598F80();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v27 = v31;
  *(_QWORD *)v12 = v19;
  *(_BYTE *)(v12 + 8) = v26;
  *(_BYTE *)(v12 + 9) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA598EF8()
{
  unint64_t result;

  result = qword_1ED3C7EC0;
  if (!qword_1ED3C7EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C54E8, &_s10CodingKeysON_29);
    atomic_store(result, (unint64_t *)&qword_1ED3C7EC0);
  }
  return result;
}

unint64_t sub_1BA598F3C()
{
  unint64_t result;

  result = qword_1ED3B5670;
  if (!qword_1ED3B5670)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolWeight, &type metadata for FormatSymbolWeight);
    atomic_store(result, (unint64_t *)&qword_1ED3B5670);
  }
  return result;
}

unint64_t sub_1BA598F80()
{
  unint64_t result;

  result = qword_1ED3B5110;
  if (!qword_1ED3B5110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolScale, &type metadata for FormatSymbolScale);
    atomic_store(result, (unint64_t *)&qword_1ED3B5110);
  }
  return result;
}

uint64_t sub_1BA598FC4()
{
  sub_1BB8745CC();
  FormatItemKind.hash(into:)();
  return sub_1BB874608();
}

uint64_t FormatItemKind.hash(into:)()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
      result = sub_1BB8745D8();
      break;
    default:
      sub_1BB8745D8();
      result = sub_1BB872A90();
      break;
  }
  return result;
}

uint64_t sub_1BA5990F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGradient.init(from:)(a1, a2);
}

uint64_t FormatGradient.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v32 = a2;
  sub_1BAE945A0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE94618();
  sub_1BA4A2870(&qword_1ED3D1540, (uint64_t (*)(uint64_t))sub_1BAE94618, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v32;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v32 = v13;
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_129;
      *(&v31 - 3) = sub_1BAE94698();
      *(&v31 - 2) = sub_1BA5995D4();
      *(&v31 - 1) = sub_1BAE946DC();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726BAF0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, &qword_1ED3B93B0, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA599688();
  v35 = 0uLL;
  LOBYTE(v36) = 0;
  sub_1BB8740D4();
  v19 = v33;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95F8, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v35 = xmmword_1BB8A1A10;
  LOBYTE(v36) = 0;
  sub_1BA599618();
  sub_1BB874068();
  v25 = v33;
  v33 = xmmword_1BB8D2D60;
  v34 = 0;
  sub_1BA599700();
  sub_1BB8740D4();
  v27 = v35;
  v28 = v36;
  v29 = v37;
  v35 = xmmword_1BB8D2D70;
  LOBYTE(v36) = 0;
  sub_1BA599590();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v30 = v33;
  *(_QWORD *)v12 = v19;
  *(_QWORD *)(v12 + 8) = v25;
  *(_OWORD *)(v12 + 16) = v27;
  *(_QWORD *)(v12 + 32) = v28;
  *(_QWORD *)(v12 + 40) = v29;
  *(_OWORD *)(v12 + 48) = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA599590()
{
  unint64_t result;

  result = qword_1ED3B5E40;
  if (!qword_1ED3B5E40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPointEquation, &type metadata for FormatPointEquation);
    atomic_store(result, (unint64_t *)&qword_1ED3B5E40);
  }
  return result;
}

unint64_t sub_1BA5995D4()
{
  unint64_t result;

  result = qword_1ED3C6BA0;
  if (!qword_1ED3C6BA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAF80, &_s10CodingKeysON_129);
    atomic_store(result, (unint64_t *)&qword_1ED3C6BA0);
  }
  return result;
}

unint64_t sub_1BA599618()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED3B9600;
  if (!qword_1ED3B9600)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95F8, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B9600);
  }
  return result;
}

unint64_t sub_1BA599688()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B93B8;
  if (!qword_1ED3B93B8)
  {
    sub_1BA4AD288(255, &qword_1ED3B93B0, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA62C9A0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B93B8);
  }
  return result;
}

unint64_t sub_1BA599700()
{
  unint64_t result;

  result = qword_1ED3B71D8;
  if (!qword_1ED3B71D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradientDirection, &type metadata for FormatGradientDirection);
    atomic_store(result, (unint64_t *)&qword_1ED3B71D8);
  }
  return result;
}

void sub_1BA599744(_QWORD *a1)
{
  FormatHeadlineBinding.Bool.encode(to:)(a1);
}

void FormatHeadlineBinding.Bool.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD v52[24];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v52[19] = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52[18] = (char *)v52 - v6;
  MEMORY[0x1E0C80A78](v7);
  v52[17] = (char *)v52 - v8;
  MEMORY[0x1E0C80A78](v9);
  v52[16] = (char *)v52 - v10;
  MEMORY[0x1E0C80A78](v11);
  v52[15] = (char *)v52 - v12;
  MEMORY[0x1E0C80A78](v13);
  v52[14] = (char *)v52 - v14;
  MEMORY[0x1E0C80A78](v15);
  v52[13] = (char *)v52 - v16;
  MEMORY[0x1E0C80A78](v17);
  v52[12] = (char *)v52 - v18;
  MEMORY[0x1E0C80A78](v19);
  v52[11] = (char *)v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v52[10] = (char *)v52 - v22;
  MEMORY[0x1E0C80A78](v23);
  v52[9] = (char *)v52 - v24;
  MEMORY[0x1E0C80A78](v25);
  v52[7] = (char *)v52 - v26;
  MEMORY[0x1E0C80A78](v27);
  v52[6] = (char *)v52 - v28;
  MEMORY[0x1E0C80A78](v29);
  v52[5] = (char *)v52 - v30;
  MEMORY[0x1E0C80A78](v31);
  v52[4] = (char *)v52 - v32;
  MEMORY[0x1E0C80A78](v33);
  v52[3] = (char *)v52 - v34;
  MEMORY[0x1E0C80A78](v35);
  v52[2] = (char *)v52 - v36;
  MEMORY[0x1E0C80A78](v37);
  v52[8] = (char *)v52 - v38;
  MEMORY[0x1E0C80A78](v39);
  v52[1] = (char *)v52 - v40;
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)v52 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *v1;
  v48 = a1[3];
  v49 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v48);
  v50 = sub_1BA6B8518();
  v52[23] = v46;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatHeadlineBinding.Bool, v51, v48, (uint64_t)&type metadata for FormatHeadlineBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v49, (uint64_t)v46, v50, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA599AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA59A67C(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA59A67C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1F20;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA59A7A0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA59A7A0()
{
  unint64_t result;

  result = qword_1ED3A6B40;
  if (!qword_1ED3A6B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94E560, &_s14descr1E7342C99C4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B40);
  }
  return result;
}

NewsFeed::FormatCorner_optional __swiftcall FormatCorner.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatCorner_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AnyFeedManager.fetchNextGroup(from:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 88);
  v4 = *a1;
  return v2(&v4);
}

uint64_t sub_1BA59A870(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 32);
  v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)(v2 + 8) + 32))(&v4);
}

uint64_t sub_1BA59A8C0(uint64_t *a1)
{
  return FeedManager.fetchNextGroup(from:)(a1);
}

uint64_t FeedManager.fetchNextGroup(from:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 48);
  v4 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager fetch next group waiting on loading gate", 53, 2, &dword_1BA493000, v3, v4, MEMORY[0x1E0DEE9D8]);
  sub_1BB86EC14();
  v5 = (void *)sub_1BB86E6F8();
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  swift_retain();
  v9 = sub_1BB86E980();
  swift_release();

  swift_release();
  return v9;
}

Swift::Void __swiftcall FeedLoadingGate.lift(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  v5 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  sub_1BB86DD20();
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 32) = countAndFlagsBits;
  *(_QWORD *)(v12 + 40) = object;
  v13 = v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BA59ACB4(v13, (uint64_t)v10);
  sub_1BA59ACB4((uint64_t)v10, (uint64_t)v7);
  v14 = sub_1BB86C8B0();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14);
  swift_bridgeObjectRetain();
  if (v15 != 1)
    sub_1BA59AC78((uint64_t)v7);
  sub_1BA59AC78((uint64_t)v10);
  v16 = MEMORY[0x1E0DEAFA0];
  v17 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v12 + 96) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v12 + 104) = v17;
  *(_BYTE *)(v12 + 72) = v15 != 1;
  v18 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift;
  v19 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift);
  *(_QWORD *)(v12 + 136) = v16;
  *(_QWORD *)(v12 + 144) = v17;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth);
  v21 = MEMORY[0x1E0DEB418];
  *(_BYTE *)(v12 + 112) = v19;
  v22 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v12 + 176) = v21;
  *(_QWORD *)(v12 + 184) = v22;
  *(_QWORD *)(v12 + 152) = v20;
  v23 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate lift, reason='%{public}@' sealed=%d, waitingForLift=%d, waitingForPopDepth=%ld", 96, 2, &dword_1BA493000, v11, v23, v12);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 + v18) = 0;
  sub_1BA59AD0C(countAndFlagsBits, (uint64_t)object);
  sub_1BB86DD2C();
}

uint64_t sub_1BA59AC78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedLoadingGate.Seal(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA59ACB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedLoadingGate.Seal(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeedLoadingGate.Seal(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A1108);
}

uint64_t sub_1BA59AD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;

  v5 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v13 = v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BA59ACB4(v13, (uint64_t)v10);
  sub_1BA59ACB4((uint64_t)v10, (uint64_t)v7);
  v14 = sub_1BB86C8B0();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14);
  swift_bridgeObjectRetain();
  if (v15 != 1)
    sub_1BA59AC78((uint64_t)v7);
  sub_1BA59AC78((uint64_t)v10);
  v16 = MEMORY[0x1E0DEAFA0];
  v17 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v12 + 96) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v12 + 104) = v17;
  *(_BYTE *)(v12 + 72) = v15 != 1;
  v18 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift;
  v19 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift);
  *(_QWORD *)(v12 + 136) = v16;
  *(_QWORD *)(v12 + 144) = v17;
  v20 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth;
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth);
  v22 = MEMORY[0x1E0DEB418];
  *(_BYTE *)(v12 + 112) = v19;
  v23 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v12 + 176) = v22;
  *(_QWORD *)(v12 + 184) = v23;
  *(_QWORD *)(v12 + 152) = v21;
  v24 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate seal if ready, reason='%{public}@' sealed=%d, waitingForLift=%d, waitingForPopDepth=%ld", 105, 2, &dword_1BA493000, v11, v24, v12);
  result = swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v2 + v18) & 1) == 0 && !*(_QWORD *)(v2 + v20))
    return sub_1BA59AF20(a1, a2);
  return result;
}

uint64_t sub_1BA59AF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v5 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v18[-v9];
  v11 = v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BA59ACB4(v11, (uint64_t)v10);
  v12 = sub_1BB86C8B0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return sub_1BA59AC78((uint64_t)v10);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  swift_bridgeObjectRetain();
  v16 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate sealed, reason='%{public}@'", 45, 2, &dword_1BA493000, v14, v16, v15);
  swift_bridgeObjectRelease();
  sub_1BB86E218();
  sub_1BB86C8A4();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess();
  sub_1BA59C084((uint64_t)v7, v11);
  return swift_endAccess();
}

uint64_t sub_1BA59B108(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  sub_1BB86EAAC();
  swift_getTupleTypeMetadata2();
  v5 = sub_1BB873A2C();
  v6 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, double))(v7 + 16))((char *)&v10 - v8, a1, v6);
  swift_retain();
  sub_1BB86E884();
  return swift_release();
}

uint64_t sub_1BA59B24C()
{
  return sub_1BA59B288();
}

uint64_t sub_1BA59B288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager ungated fetch next group", 37, 2, &dword_1BA493000, v1, v2, MEMORY[0x1E0DEE9D8]);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
  sub_1BB86EC14();
  v6 = (void *)sub_1BB86E854();
  v7 = sub_1BB86E98C();
  swift_release();

  return v7;
}

uint64_t sub_1BA59B3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = **(_QWORD **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  return (*(uint64_t (**)(uint64_t *, _QWORD))(*(_QWORD *)(v1 + 112) + 32))(&v3, *(_QWORD *)(v1 + 88));
}

_QWORD *FeedManager.init(feed:database:offlineDatabase:service:serviceConfigFetcher:loadingGate:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v11 = *v6;
  v12 = sub_1BAA3C628(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 80) - 8) + 8))(a5);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 88) - 8) + 8))(a4);
  v13 = sub_1BB873A2C();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(a3, v13);
  v14(a2, v13);
  return v12;
}

uint64_t sub_1BA59B49C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  sub_1BB86EAAC();
  swift_getTupleTypeMetadata2();
  v5 = sub_1BB873A2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  sub_1BB86E890();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  return sub_1BB86E860();
}

uint64_t sub_1BA59B5D4(uint64_t *a1)
{
  return FeedService.fetchNextGroup(from:)(a1);
}

uint64_t FeedService.fetchNextGroup(from:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
  sub_1BB86EAAC();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v2;
  swift_retain();
  swift_retain();
  return sub_1BB86E95C();
}

void FeedServiceFetchResult.shortDescription.getter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  __asm { BR              X10 }
}

uint64_t sub_1BA59B7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  uint64_t v19;

  *v4 = type metadata accessor for FeedCursorContainer(255, v7, v6, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = swift_projectBox();
  v13 = *(_QWORD *)(v12 + *(int *)(TupleTypeMetadata2 + 48));
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v14(v9, v12, v8);
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = 0x756F72477478656ELL;
  *(_QWORD *)(inited + 56) = 0xE900000000000070;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 80) = 0x70756F7267;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
  v14((uint64_t)boxed_opaque_existential_0, v9, v8);
  *(_QWORD *)(inited + 128) = 0x726F73727563;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  *(_QWORD *)(inited + 168) = *v4;
  *(_QWORD *)(inited + 144) = v13;
  swift_retain_n();
  sub_1BA76E994(inited);
  type metadata accessor for FeedServiceFetchResult(255, v7, v6, v18);
  v19 = sub_1BB86E320();
  v5[3] = v19;
  v5[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v19);
  __swift_allocate_boxed_opaque_existential_0(v5);
  sub_1BB86E314();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v8);
}

uint64_t type metadata accessor for FeedServiceFetchResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedServiceFetchResult);
}

uint64_t type metadata accessor for FeedLoadingGate(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED39F320);
}

uint64_t sub_1BA59BD6C(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  int v20;
  uint64_t v21;

  v3 = v2;
  v20 = a1;
  v5 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v8);
  sub_1BA59C0C8();
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1BB86E224();
  v9 = (char *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal);
  v10 = sub_1BB86C8B0();
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth) = 0;
  v12 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_lock;
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1BA59C120();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C02E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA59C024();
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v3 + v12) = sub_1BB86DD50();
  v13 = v20;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log) = a2;
  v14 = a2;
  if ((v13 & 1) != 0)
  {
    sub_1BB86E218();
    sub_1BB86C8A4();
    v11(v7, 0, 1, v10);
    v15 = v3 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
    swift_beginAccess();
    sub_1BA59C084((uint64_t)v7, v15);
    swift_endAccess();
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
  v17 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v16 + 64) = v17;
  *(_BYTE *)(v16 + 32) = v13 & 1;
  sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate created and sealed=%d", v19);
  swift_bridgeObjectRelease();

  return v3;
}

unint64_t sub_1BA59C024()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C02F0;
  if (!qword_1ED3C02F0)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3C02E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C02F0);
  }
  return result;
}

uint64_t sub_1BA59C084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedLoadingGate.Seal(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BA59C0C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3988)
  {
    v0 = sub_1BB86E230();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3988);
  }
}

unint64_t sub_1BA59C120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBE30;
  if (!qword_1ED3BBE30)
  {
    v1 = sub_1BB86DD44();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3208], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBE30);
  }
  return result;
}

uint64_t sub_1BA59C168@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA59C194();
  *a1 = result;
  return result;
}

uint64_t sub_1BA59C194()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14)
    return 20;
  else
    return v0;
}

uint64_t sub_1BA59C1E4()
{
  sub_1BA59C28C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA59C230()
{
  sub_1BA59C28C();
  return sub_1BB872D60();
}

unint64_t sub_1BA59C28C()
{
  unint64_t result;

  result = qword_1ED3C7A20;
  if (!qword_1ED3C7A20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2070, &_s10CodingTypeON_9);
    atomic_store(result, (unint64_t *)&qword_1ED3C7A20);
  }
  return result;
}

uint64_t sub_1BA59C2D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAbsoluteURL.init(from:)(a1, a2);
}

uint64_t FormatAbsoluteURL.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  char v47;
  __int128 v48;
  char v49;

  v41 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C4690, (void (*)(void))sub_1BA82CA18, (void (*)(void))sub_1BA82CA5C);
  v44 = v3;
  v39 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v35 - v4;
  v43 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE7EC08();
  v42 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7EC80();
  sub_1BA4A2870(&qword_1ED3AD828, (uint64_t (*)(uint64_t))sub_1BAE7EC80, (uint64_t)&unk_1BB8FFC6C);
  v12 = v45;
  sub_1BB87468C();
  v13 = v12;
  if (v12)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v13);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  v45 = v7;
  v37 = v5;
  v38 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v17 = v42;
  v16 = v43;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v26 = v11;
      v28 = *((_QWORD *)v20 - 2);
      v27 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v29 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v29);
      *((_QWORD *)&v35 - 4) = &_s10CodingKeysON_192;
      *((_QWORD *)&v35 - 3) = sub_1BAE7ED00();
      *((_QWORD *)&v35 - 2) = sub_1BA59C79C();
      *((_QWORD *)&v35 - 1) = sub_1BAE7ED44();
      swift_getKeyPath();
      swift_retain();
      v30 = sub_1BAE71220((uint64_t)&unk_1E726A318);
      swift_release_n();
      sub_1BA98D1F0();
      v13 = (void *)swift_allocError();
      *(_QWORD *)v31 = v28;
      *(_QWORD *)(v31 + 8) = v27;
      *(_QWORD *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v28, v27, 1);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v17);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v48 = 0uLL;
  v49 = 0;
  sub_1BB8740D4();
  v36 = a1;
  v35 = xmmword_1BB8A1A10;
  v48 = xmmword_1BB8A1A10;
  v49 = 0;
  v21 = sub_1BB8740F8();
  v22 = v38;
  if ((v21 & 1) != 0)
  {
    v46 = v35;
    v47 = 0;
    sub_1BAE7ED88();
    v23 = v40;
    sub_1BB8740D4();
    v24 = v41;
    v25 = v37;
    v34 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v44);
  }
  else
  {
    v34 = MEMORY[0x1E0DEE9D8];
    v24 = v41;
    v25 = v37;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v24, v45, v16);
  *(_QWORD *)(v24 + *(int *)(type metadata accessor for FormatAbsoluteURL() + 20)) = v34;
  v32 = (uint64_t)v36;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA59C79C()
{
  unint64_t result;

  result = qword_1ED3A5B58;
  if (!qword_1ED3A5B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE768, &_s10CodingKeysON_192);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B58);
  }
  return result;
}

_QWORD *initializeWithCopy for SlotReference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = a2 + 4;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = a2[5];
    a1[4] = v6;
    a1[5] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v7;
  }
  return a1;
}

uint64_t sub_1BA59C86C(_QWORD *a1)
{
  return FormatAccessibilityRole.encode(to:)(a1);
}

uint64_t FormatAccessibilityRole.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAccessibilityRole, v19, v16, (uint64_t)&type metadata for FormatAccessibilityRole, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  if (v15 == 5)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA59CBB4(2, (uint64_t)v8);
    v22 = (uint64_t)v8;
  }
  else if (v15 == 6)
  {
    if (qword_1ED3C4168 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476900);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA59CBB4(3, (uint64_t)v5);
    v22 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v25 = sub_1BB86EB84();
    v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v11, v26, v25);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA59CD1C(0, v15, (uint64_t)v11);
    v22 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA59CBB4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7118;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA59CCD8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA59CCD8()
{
  unint64_t result;

  result = qword_1ED39B8A0;
  if (!qword_1ED39B8A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD154, &type metadata for FormatAccessibilityRole.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39B8A0);
  }
  return result;
}

uint64_t sub_1BA59CD1C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7118;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA59CCD8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA59CE80();
    sub_1BB874458();
  }
  return swift_release();
}

unint64_t sub_1BA59CE80()
{
  unint64_t result;

  result = qword_1ED39BB40;
  if (!qword_1ED39BB40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityContainer, &type metadata for FormatAccessibilityContainer);
    atomic_store(result, (unint64_t *)&qword_1ED39BB40);
  }
  return result;
}

void sub_1BA59CEC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BA59CEE4(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BA59CEE4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];

  v13[8] = a3;
  v13[12] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[13] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[10] = (char *)v13 - v6;
  v13[11] = v5;
  v13[9] = v7;
  v13[14] = v8;
  v9 = _s10CodingKeysOMa_281(255, v5, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8D29F8, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8D29A8, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8D2980, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[6] = v11;
  v13[7] = v10;
  v13[18] = v11;
  v13[19] = v12;
  v13[5] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_281(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_281);
}

uint64_t sub_1BA59D320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1BA59D338@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCommandBinding.init(from:)(a1, a2);
}

uint64_t FormatCommandBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA59D904();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726B150;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA59D904()
{
  unint64_t result;

  result = qword_1ED3C8C50;
  if (!qword_1ED3C8C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC5A0, &_s10CodingTypeON_112);
    atomic_store(result, (unint64_t *)&qword_1ED3C8C50);
  }
  return result;
}

unint64_t sub_1BA59D948()
{
  unint64_t result;

  result = qword_1ED3B5580;
  if (!qword_1ED3B5580)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Command, &type metadata for FormatGroupBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3B5580);
  }
  return result;
}

unint64_t sub_1BA59D98C()
{
  unint64_t result;

  result = qword_1ED3B66C0;
  if (!qword_1ED3B66C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Command, &type metadata for FormatHeadlineBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3B66C0);
  }
  return result;
}

uint64_t sub_1BA59D9D0@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatSymbolImage.init(from:)(a1, a2);
}

uint64_t FormatSymbolImage.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  int v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  int v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  __int128 *v52;

  v3 = v2;
  v52 = a2;
  sub_1BAE74558();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE745D0();
  sub_1BA4A2870(&qword_1ED3D0CD0, (uint64_t (*)(uint64_t))sub_1BAE745D0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v25 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v25);
  }
  v10 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v10 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v22 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v23 = sub_1BAE1547C();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v22;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v21, 1);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
      a1 = v43;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA59DFDC();
  v47 = 0uLL;
  v48 = 0;
  sub_1BB8740D4();
  v18 = v49;
  v19 = v50;
  v20 = v51;
  v47 = xmmword_1BB8A1A10;
  v48 = 0;
  sub_1BA59DF98();
  sub_1BB874068();
  v41 = v19;
  v42 = v20;
  v27 = v49;
  v28 = (unsigned __int16)v50;
  v49 = xmmword_1BB8D2D60;
  LOBYTE(v50) = 0;
  sub_1BA59DF54();
  sub_1BB874068();
  v40 = v28;
  v39 = v27;
  v29 = v47;
  v38 = xmmword_1BB8D2D70;
  v49 = xmmword_1BB8D2D70;
  LOBYTE(v50) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v47 = v38;
    v48 = 0;
    sub_1BA7967E4();
    sub_1BB8740D4();
    *(_QWORD *)&v38 = *((_QWORD *)&v29 + 1);
    v30 = v44;
    v37 = v45;
    HIDWORD(v36) = v46;
  }
  else
  {
    *(_QWORD *)&v38 = *((_QWORD *)&v29 + 1);
    v30 = 0;
    v37 = 0;
    HIDWORD(v36) = 0;
  }
  v49 = xmmword_1BB8D2D90;
  LOBYTE(v50) = 0;
  sub_1BA9AECA4();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v13);
  v31 = v47;
  v32 = v52;
  *v52 = v18;
  *((_QWORD *)v32 + 2) = v41;
  *((_BYTE *)v32 + 24) = v42;
  v33 = *((_QWORD *)&v39 + 1);
  *((_QWORD *)v32 + 4) = v39;
  *((_QWORD *)v32 + 5) = v33;
  *((_WORD *)v32 + 24) = v40;
  v34 = v38;
  *((_QWORD *)v32 + 7) = v29;
  *((_QWORD *)v32 + 8) = v34;
  v35 = v37;
  *((_QWORD *)v32 + 9) = v30;
  *((_QWORD *)v32 + 10) = v35;
  *((_BYTE *)v32 + 88) = BYTE4(v36);
  *((_QWORD *)v32 + 12) = v31;
  v25 = (uint64_t)v43;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

unint64_t sub_1BA59DF10()
{
  unint64_t result;

  result = qword_1ED3C79F0;
  if (!qword_1ED3C79F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1100, &_s10CodingKeysON_241);
    atomic_store(result, (unint64_t *)&qword_1ED3C79F0);
  }
  return result;
}

unint64_t sub_1BA59DF54()
{
  unint64_t result;

  result = qword_1ED3BA7C0;
  if (!qword_1ED3BA7C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolImageFill, &type metadata for FormatSymbolImageFill);
    atomic_store(result, (unint64_t *)&qword_1ED3BA7C0);
  }
  return result;
}

unint64_t sub_1BA59DF98()
{
  unint64_t result;

  result = qword_1ED3B5660;
  if (!qword_1ED3B5660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig, &type metadata for FormatSymbolConfig);
    atomic_store(result, (unint64_t *)&qword_1ED3B5660);
  }
  return result;
}

unint64_t sub_1BA59DFDC()
{
  unint64_t result;

  result = qword_1ED3B4A68;
  if (!qword_1ED3B4A68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolName, &type metadata for FormatSymbolName);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A68);
  }
  return result;
}

uint64_t sub_1BA59E020(_QWORD *a1)
{
  return FormatCompilerEnumProperty.encode(to:)(a1);
}

uint64_t FormatCompilerEnumProperty.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  char v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  __int128 v87;
  char v88;
  uint64_t *v89;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v78 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v77 = (char *)&v75 - v7;
  MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v75 - v9;
  MEMORY[0x1E0C80A78](v10);
  v80 = (char *)&v75 - v11;
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v75 - v13;
  MEMORY[0x1E0C80A78](v14);
  v82 = (char *)&v75 - v15;
  MEMORY[0x1E0C80A78](v16);
  v83 = (char *)&v75 - v17;
  MEMORY[0x1E0C80A78](v18);
  v84 = (char *)&v75 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v75 - v21;
  sub_1BAE8A28C(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v28 = type metadata accessor for FormatCompilerEnumProperty(0);
  v29 = sub_1BAE8A184();
  v30 = sub_1BA4A2870(&qword_1ED3D11F0, (uint64_t (*)(uint64_t))sub_1BAE8A184, (uint64_t)&unk_1BB8FFC6C);
  v76 = v28;
  sub_1BA6EC1EC(v28, v31, v26, v28, v29, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v30, (uint64_t)&off_1E734BD80);
  v32 = *v2;
  v33 = v2[1];
  v34 = v2;
  v35 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C20);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  v38(v22, v37, v36);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v89;
  sub_1BAD10AC4(v32, v33, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = (uint64_t)v25;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = v34[2];
    v42 = v34[3];
    v89 = v34;
    v43 = v36;
    v44 = (uint64_t)v84;
    v38(v84, v37, v43);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD10AC4(v41, v42, 1, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v46 = v89[4];
    v45 = v89[5];
    v47 = (uint64_t)v83;
    v38(v83, v37, v43);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v48 = v46;
    v49 = v25;
    sub_1BAD10AC4(v48, v45, 2, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    v52 = v38;
    v53 = v43;
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v54 = v89;
    v55 = (char *)v89[7];
    v56 = (uint64_t)v82;
    v52(v82, v37, v53);
    swift_storeEnumTagMultiPayload();
    v84 = v55;
    swift_bridgeObjectRetain();
    v57 = sub_1BAE44F54(v56, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v58 = v49;
    v59 = v52;
    v75 = v37;
    v83 = (char *)v39;
    if ((v57 & 1) != 0)
    {
      v87 = xmmword_1BB8D2D70;
      v88 = 0;
      v85 = 0;
      v86 = 0xE000000000000000;
      sub_1BAE8A304();
      sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
      sub_1BB874464();
      v56 = (uint64_t)v82;
    }
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v60 = *((_BYTE *)v54 + 64);
    v61 = (uint64_t)v81;
    v52(v81, v75, v53);
    swift_storeEnumTagMultiPayload();
    if ((v60 & 1) == 0 && (sub_1BAE44F54(v61, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v87 = xmmword_1BB8D2D90;
      v88 = 0;
      LOBYTE(v85) = 0;
      sub_1BAE8A304();
      sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
    v62 = v54[9];
    v63 = v54[10];
    v64 = (uint64_t)v80;
    v59(v80, v75, v53);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD3FAA0(v62, v63, 5, 0, 0, v64, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v65 = *((unsigned __int8 *)v54 + 88);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v66 = __swift_project_value_buffer(v53, (uint64_t)qword_1ED476C08);
    v67 = (uint64_t)v79;
    v59(v79, v66, v53);
    swift_storeEnumTagMultiPayload();
    if (v65 && (sub_1BAE44F54(v67, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v87 = xmmword_1BB8D2DA0;
      v88 = 0;
      LOBYTE(v85) = 1;
      sub_1BAE8A304();
      sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    v84 = v58;
    sub_1BA4A2E80(v67, type metadata accessor for FormatVersionRequirement);
    v68 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v68 != -1)
      swift_once();
    v69 = __swift_project_value_buffer(v53, (uint64_t)qword_1ED476BD8);
    v70 = (uint64_t)v77;
    v59(v77, v69, v53);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v71 = (uint64_t)v54 + *(int *)(v76 + 48);
    v72 = (uint64_t)v78;
    v59(v78, v69, v53);
    swift_storeEnumTagMultiPayload();
    v73 = v71;
    v74 = v84;
    sub_1BAD3FCA8(v73, 8, 0, 0, v72, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
    v50 = (uint64_t)v74;
  }
  return sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BAE8A28C);
}

uint64_t FeedBannerAd.cacheIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD v16[2];

  v1 = sub_1BB871A70();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB871B6C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D527C0];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0[1];
  v16[0] = *v0;
  v16[1] = v10;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v11);
  type metadata accessor for FeedBannerAd();
  sub_1BB8721A8();
  sub_1BA4A2870(&qword_1ED3BBD58, v6, MEMORY[0x1E0D527D0]);
  sub_1BB87420C();
  sub_1BB872AFC(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  sub_1BB872AFC(v13);
  sub_1BB8721B4();
  sub_1BB8719F8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BB872AFC(v14);
  swift_bridgeObjectRelease();
  return v16[0];
}

uint64_t sub_1BA59EB40(_QWORD *a1)
{
  return FormatStateMachineEventValue.encode(to:)(a1);
}

uint64_t FormatStateMachineEventValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEBF438(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAEBF330();
  v14 = sub_1BA4A2870(&qword_1ED3D1300, (uint64_t (*)(uint64_t))sub_1BAEBF330, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStateMachineEventValue, v15, v11, (uint64_t)&type metadata for FormatStateMachineEventValue, v13, (uint64_t)&type metadata for FormatVersions.JazzkonG, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BD00);
  v16 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0E180(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAEBF438);
}

uint64_t AdFeedGroup.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA59ED84(_QWORD *a1)
{
  return FormatCompilerOptions.encode(to:)(a1);
}

uint64_t FormatCompilerOptions.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  __int128 v62;
  char v63;
  uint64_t v64;

  v2 = v1;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v57 = (uint64_t)&v52 - v5;
  v55 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v55);
  v60 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v52 - v10;
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v52 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v52 - v17;
  sub_1BAE75424(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = type metadata accessor for FormatCompilerOptions(0);
  v25 = sub_1BAE7531C();
  v26 = sub_1BA4A2870(&qword_1ED3D0F70, (uint64_t (*)(uint64_t))sub_1BAE7531C, (uint64_t)&unk_1BB8FFC6C);
  v59 = v24;
  sub_1BA6EC1EC(v24, v27, v22, v24, v25, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v21, v26, (uint64_t)&off_1E734BD80);
  v61 = v2;
  v28 = *v2;
  v29 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v29 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32(v18, v31, v30);
  v33 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v34 = v64;
  sub_1BAD291B0(v28, 0, 0, 0);
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v34)
    return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BAE75424);
  v32(v15, v31, v30);
  swift_storeEnumTagMultiPayload();
  v35 = swift_bridgeObjectRetain();
  sub_1BAD292E0(v35, 1, 0, 0);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v36 = v61;
  v37 = v57;
  sub_1BAE75514((uint64_t)v61 + *(int *)(v59 + 24), v57, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy);
  sub_1BA5193C4(v37, v60, type metadata accessor for FormatCompilerOptions.Newsroom);
  v38 = (uint64_t)v58;
  v32(v58, v31, v30);
  swift_storeEnumTagMultiPayload();
  v39 = sub_1BAE4B404(v38, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  v57 = v30;
  v64 = v33;
  v53 = v32;
  if ((v39 & 1) != 0)
  {
    v62 = xmmword_1BB8D2D60;
    v63 = 0;
    sub_1BAE7549C();
    sub_1BA4A2870(&qword_1ED3AEB00, (uint64_t (*)(uint64_t))sub_1BAE7549C, MEMORY[0x1E0DED188]);
    sub_1BA4A2870(&qword_1ED39B768, type metadata accessor for FormatCompilerOptions.Newsroom, (uint64_t)&protocol conformance descriptor for FormatCompilerOptions.Newsroom);
    v41 = v60;
    sub_1BB874464();
    v42 = v59;
    v38 = (uint64_t)v58;
  }
  else
  {
    v42 = v59;
    v41 = v60;
  }
  sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v41, type metadata accessor for FormatCompilerOptions.Newsroom);
  v43 = (uint64_t)v36 + *(int *)(v42 + 28);
  v44 = v57;
  if (qword_1ED3C6D50 != -1)
    swift_once();
  v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1ED476BF0);
  v46 = (uint64_t)v56;
  v47 = v53;
  v53(v56, v45, v44);
  swift_storeEnumTagMultiPayload();
  sub_1BAD4E400(v43, 3, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
  v48 = qword_1ED3C6D00;
  swift_bridgeObjectRetain();
  if (v48 != -1)
    swift_once();
  v49 = v57;
  v50 = __swift_project_value_buffer(v57, (uint64_t)qword_1ED476B48);
  v51 = (uint64_t)v54;
  v47(v54, v50, v49);
  swift_storeEnumTagMultiPayload();
  sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BAE75424);
}

unint64_t sub_1BA59F44C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39BF48;
  if (!qword_1ED39BF48)
  {
    sub_1BA4B07F0(255, &qword_1ED3B95A8, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3B01E8, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinition);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF48);
  }
  return result;
}

uint64_t sub_1BA59F4DC(_QWORD *a1)
{
  return FormatAnchor.encode(to:)(a1);
}

uint64_t FormatAnchor.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[7];
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[6] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[5] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[4] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v25[3] = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  v25[2] = (char *)v25 - v12;
  MEMORY[0x1E0C80A78](v13);
  v25[1] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  v26 = *v1;
  v27 = a1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = v28;
  sub_1BA69F160((uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, v19, v20);
  if (!v23)
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
}

uint64_t FeedLayoutSolver.Cursor.layout<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;
  uint64_t v7[5];

  v6 = 0;
  memset(v5, 0, sizeof(v5));
  FeedLayoutSolver.Cursor.layout<A>(group:decorationProvider:)(a1, (uint64_t)v5, a2, a3, v7);
  sub_1BA65DBBC((uint64_t)v5, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  v3 = v7[4];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t FeedLayoutSolver.Cursor.layout<A>(group:decorationProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void (*v23)(_QWORD, _QWORD, _QWORD);
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v27 = a4;
  v25[1] = *v5;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C2200, (void (*)(uint64_t))MEMORY[0x1E0DB6148]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v25 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v25 - v19;
  v21 = sub_1BB86D9C0();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  v22(v17, 1, 1, v21);
  v22(v14, 1, 1, v21);
  v22(v11, 1, 1, v21);
  sub_1BB86D990();
  swift_allocObject();
  v23 = (void (*)(_QWORD, _QWORD, _QWORD))sub_1BB86D984();
  sub_1BA6A14C8(a1, a2, v23, v26, v27, a5);
  return swift_release();
}

uint64_t sub_1BA59FEDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA6C0064(a1, *(char **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA59FEF8(_QWORD *a1)
{
  return FormatOptionsNodeStatement.encode(to:)(a1);
}

uint64_t FormatOptionsNodeStatement.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __int128 v49;
  char v50;
  __int128 v51;
  char v52;
  char *v53;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v43 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - v9;
  sub_1BAEA9B18(0);
  v46 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = type metadata accessor for FormatOptionsNodeStatement();
  v17 = sub_1BAEA99A8();
  v18 = sub_1BA4A2870(&qword_1ED3D1240, (uint64_t (*)(uint64_t))sub_1BAEA99A8, (uint64_t)&unk_1BB8FFC6C);
  v47 = v16;
  sub_1BA6EC1EC(v16, v19, v14, v16, v17, (uint64_t)&type metadata for FormatVersions.JazzkonG, v15, (uint64_t)v13, v18, (uint64_t)&off_1E734BD00);
  v20 = *v2;
  v21 = v2[1];
  v45 = v2;
  v22 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C38);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v10, v24, v23);
  v26 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v27 = v53;
  sub_1BAD10268(v20, v21, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v28 = (uint64_t)v13;
  if (!v27)
  {
    v29 = (uint64_t)v48;
    v43 = *(int *)(v47 + 20);
    v25(v48, v24, v23);
    swift_storeEnumTagMultiPayload();
    v51 = xmmword_1BB8A1A10;
    v52 = 0;
    v30 = &v13[*(int *)(v46 + 44)];
    v53 = v13;
    v32 = *(_QWORD *)v30;
    v31 = *((_QWORD *)v30 + 1);
    v49 = xmmword_1BB8A1A10;
    v50 = 0;
    v33 = swift_allocObject();
    v34 = sub_1BA5193C4((uint64_t)&v49, v33 + 16, (uint64_t (*)(_QWORD))sub_1BAEA99A8);
    *(_QWORD *)(v33 + 40) = v32;
    *(_QWORD *)(v33 + 48) = v31;
    MEMORY[0x1E0C80A78](v34);
    *(&v43 - 4) = (uint64_t)sub_1BA90CF04;
    *(&v43 - 3) = 0;
    v41 = sub_1BAEA9C14;
    v42 = v33;
    swift_retain();
    sub_1BAE1CC44(v29, 1, 0, 0, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v43 - 6));
    v46 = v26;
    v35 = v45;
    sub_1BAEA9B90();
    sub_1BA4A2870(&qword_1ED3AEEA0, (uint64_t (*)(uint64_t))sub_1BAEA9B90, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatOptionsNodeStatementValue();
    sub_1BA4A2870(&qword_1ED3B02D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
    v28 = (uint64_t)v53;
    sub_1BB874464();
    swift_release();
    sub_1BA4A2E80((uint64_t)v48, type metadata accessor for FormatVersionRequirement);
    v37 = *(uint64_t *)((char *)v35 + *(int *)(v47 + 24));
    v38 = qword_1ED3C6D88;
    swift_bridgeObjectRetain();
    if (v38 != -1)
      swift_once();
    v39 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C80);
    v40 = (uint64_t)v44;
    v25(v44, v39, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BAD27138(v37, 2, 0, 0);
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BAEA9B18);
}

Swift::Void __swiftcall FormatLayoutView.layoutSubviews()()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char **);
  char *v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      v6 = *(void (**)(char **))(v5 - 8);
      v7 = v1;
      swift_retain();
      v6(&v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA5A04F4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_1BA5A0518(uint64_t a1, void *a2, void *a3)
{
  double v4;
  int v5;
  double v6;
  double v7;
  id v8;
  id v9;
  double v10;
  void *v11;
  void *v12;
  id v13;

  v4 = *(double *)a1;
  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(double *)(a1 + 16);
  v7 = *(double *)(a1 + 24);
  v8 = sub_1BA5A0628(a2);
  v9 = objc_msgSend(v8, sel_CGPath);

  objc_msgSend(a3, sel_setShadowPath_, v9);
  objc_msgSend(a3, sel_setShadowRadius_, v4);
  objc_msgSend(a3, sel_setShadowOffset_, v7, v6);
  LODWORD(v10) = v5;
  objc_msgSend(a3, sel_setShadowOpacity_, v10);
  FormatColor.color.getter();
  v12 = v11;
  v13 = objc_msgSend(v11, sel_CGColor);

  objc_msgSend(a3, sel_setShadowColor_, v13);
}

id sub_1BA5A0628(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  double v41;
  double v42;

  v2 = objc_msgSend(a1, sel_layer);
  v3 = objc_msgSend(v2, sel_cornerCurve);

  v4 = sub_1BB8729A0();
  v6 = v5;
  if (v4 == sub_1BB8729A0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  v9 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_12:

    objc_msgSend(a1, sel_bounds);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v23 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v23, sel_maskedCorners);

    v24 = sub_1BB8732B8();
    v25 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v25, sel_cornerRadius);
    v27 = v26;

    v28 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v28, sel_cornerRadius);
    v30 = v29;

    v31 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, v24, v16, v18, v20, v22, v27, v30);
    return v31;
  }
  v10 = sub_1BB8729A0();
  v12 = v11;
  if (v10 == sub_1BB8729A0() && v12 == v13)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1BB874398();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_bounds);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v40, sel_cornerRadius);
  v42 = v41;

  v31 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v33, v35, v37, v39, v42);
  return v31;
}

uint64_t type metadata accessor for FormatButtonNodeLayoutAttributes()
{
  return objc_opt_self();
}

unint64_t sub_1BA5A0938(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6924(0, &qword_1ED3B9A58, (void (*)(void))sub_1BA8262E8);
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 1);
    v11 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    result = sub_1BA5A0BD8(v5);
    if ((v7 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    v8 = v2[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      goto LABEL_11;
    v2[2] = v10;
    v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA5A0A7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA5A0BD8(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C2EA4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      swift_release();
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v23 = (_QWORD *)(v18[7] + 16 * v12);
    *v23 = a1;
    v23[1] = a2;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA5A0F48(v15, a4 & 1);
  v21 = sub_1BA5A0BD8(a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

unint64_t sub_1BA5A0BD8(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_1BB8745CC();
  sub_1BA5A0D54((uint64_t)v4, a1);
  v2 = sub_1BB874608();
  return sub_1BA5A0C30(a1, v2);
}

unint64_t sub_1BA5A0C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1BA8588BC(v7, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        swift_bridgeObjectRetain();
        v10 = swift_bridgeObjectRetain();
        v11 = sub_1BA8588BC(v10, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1BA5A0D54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BB874608();
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v8 = __clz(__rbit64(v5));
    goto LABEL_14;
  }
  v9 = 1;
  if (v6 <= 1)
    goto LABEL_15;
  v10 = *(_QWORD *)(a2 + 64);
  if (v10)
  {
LABEL_13:
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
LABEL_14:
    v12 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v8);
    sub_1BB8745CC();
    __asm { BR              X8 }
  }
  v11 = 2;
  if (v6 <= 2)
  {
LABEL_15:
    swift_release();
    return sub_1BB8745D8();
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 72);
    if (v10)
    {
      v9 = 2;
      goto LABEL_13;
    }
    while (1)
    {
      v9 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      if (v9 >= v6)
        goto LABEL_15;
      v10 = *(_QWORD *)(a2 + 56 + 8 * v9);
      ++v11;
      if (v10)
        goto LABEL_13;
    }
    __break(1u);
    __break(1u);
  }
  return result;
}

unint64_t sub_1BA5A0F48(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _BYTE v24[72];

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1ED3B9A58, (void (*)(void))sub_1BA8262E8);
  v6 = sub_1BB873F54();
  v7 = (_QWORD *)v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v15 << 6);
      }
      else
      {
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v18 >= v12)
          goto LABEL_23;
        v19 = v9[v18];
        ++v15;
        if (!v19)
        {
          v15 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_23;
          v19 = v9[v15];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_23:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v15 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_30;
                if (v15 >= v12)
                  goto LABEL_23;
                v19 = v9[v15];
                ++v20;
                if (v19)
                  goto LABEL_20;
              }
            }
            v15 = v20;
          }
        }
LABEL_20:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v15 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v23 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v17);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
      }
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v24, v21);
      sub_1BB874608();
      result = sub_1BB873BDC();
      *(_QWORD *)(v13 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v21;
      *(_OWORD *)(v7[7] + 16 * result) = v23;
      ++v7[2];
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BA5A11DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolName.init(from:)(a1, a2);
}

uint64_t FormatSymbolName.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB874674();
    __swift_project_boxed_opaque_existential_1(&v29, v32);
    v22 = sub_1BB8743B0();
    v23 = v26;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    v20 = 0;
    v21 = 0;
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v24 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v24;
      *(_QWORD *)(v25 + 8) = v16;
      *(_QWORD *)(v25 + 16) = &unk_1E7269230;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v24, v16);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5A15A4();
  v29 = 0;
  v30 = 0;
  sub_1BB8740D4();
  if ((v28 & 1) != 0)
  {
    sub_1BA6462A8(0, v17, v18, v19);
    v28 = xmmword_1BB87FC90;
    sub_1BA4A2870((unint64_t *)&qword_1ED3B34B8, (uint64_t (*)(uint64_t))sub_1BA6462A8, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v20 = 0;
    v21 = 0;
    v22 = v29;
    v23 = v30;
  }
  else
  {
    v28 = xmmword_1BB87FC90;
    sub_1BA64437C();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v22 = v29;
    v23 = v30;
    v21 = 1;
    v20 = v31;
  }
LABEL_12:
  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = v23;
  *(_QWORD *)(a2 + 16) = v20;
  *(_BYTE *)(a2 + 24) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5A15A4()
{
  unint64_t result;

  result = qword_1ED3B4A60;
  if (!qword_1ED3B4A60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A20E0, &type metadata for FormatSymbolName.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A60);
  }
  return result;
}

uint64_t sub_1BA5A15E8(_QWORD *a1)
{
  return FormatSupplementary.encode(to:)(a1);
}

uint64_t FormatSupplementary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[4];
  int v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  int v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  __int128 v88;
  char v89;
  uint64_t v90;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v69 = &v67[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v71 = &v67[-v6];
  MEMORY[0x1E0C80A78](v7);
  v73 = &v67[-v8];
  MEMORY[0x1E0C80A78](v9);
  v75 = &v67[-v10];
  MEMORY[0x1E0C80A78](v11);
  v76 = &v67[-v12];
  MEMORY[0x1E0C80A78](v13);
  v80 = &v67[-v14];
  MEMORY[0x1E0C80A78](v15);
  v79 = &v67[-v16];
  MEMORY[0x1E0C80A78](v17);
  v83 = &v67[-v18];
  MEMORY[0x1E0C80A78](v19);
  v82 = &v67[-v20];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v67[-v22];
  sub_1BAE7C27C(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = &v67[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = *(_QWORD *)v1;
  v28 = *(_QWORD *)(v1 + 8);
  v84 = *(_BYTE **)(v1 + 48);
  v85 = v27;
  v81 = *(_QWORD *)(v1 + 56);
  v29 = *(_QWORD *)(v1 + 64);
  v77 = *(_QWORD *)(v1 + 72);
  v78 = v29;
  v74 = *(unsigned __int8 *)(v1 + 80);
  v72 = *(_QWORD *)(v1 + 88);
  v70 = *(_QWORD *)(v1 + 96);
  v68 = *(unsigned __int8 *)(v1 + 104);
  v31 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  v32 = sub_1BAE7C0A4();
  v33 = sub_1BA4A2870(&qword_1ED3D0E40, (uint64_t (*)(uint64_t))sub_1BAE7C0A4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSupplementary, v34, v31, (uint64_t)&type metadata for FormatSupplementary, v32, (uint64_t)&type metadata for FormatVersions.JazzkonC, v30, (uint64_t)v26, v33, (uint64_t)&off_1E734BD80);
  v35 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C20);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  v38((uint64_t)v23, v37, v36);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v86;
  sub_1BAD1B780(v85, v28, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1BA90CF04, 0);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    v86 = v37;
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v82;
    v38((uint64_t)v82, v86, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    v38(v41, v86, v36);
    swift_storeEnumTagMultiPayload();
    v42 = v86;
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    v43 = (uint64_t)v83;
    v38((uint64_t)v83, v42, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v44 = sub_1BAE4E964(v43, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v46 = v38;
    if ((v44 & 1) != 0)
    {
      v88 = xmmword_1BB8D2D70;
      v89 = 0;
      v90 = (uint64_t)v84;
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
      v47 = v81;
      v42 = v86;
      v43 = (uint64_t)v83;
    }
    else
    {
      v47 = v81;
    }
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v48 = qword_1ED3C6D60;
    swift_retain();
    v49 = (uint64_t)v79;
    v50 = (uint64_t)v80;
    if (v48 != -1)
      swift_once();
    v51 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C38);
    v46(v49, v51, v36);
    swift_storeEnumTagMultiPayload();
    v85 = v39;
    sub_1BAD5C9BC(v47, 4, 0, 0, v49, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v46(v50, v42, v36);
    swift_storeEnumTagMultiPayload();
    v52 = swift_bridgeObjectRetain();
    sub_1BAD29D90(v52, 5, 0, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = (uint64_t)v76;
    v46((uint64_t)v76, v42, v36);
    swift_storeEnumTagMultiPayload();
    v54 = *(_QWORD *)(v77 + 16);
    swift_bridgeObjectRetain();
    if (v54)
    {
      v55 = sub_1BAE4E964(v53, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if ((v55 & 1) != 0)
      {
        v84 = v26;
        v88 = xmmword_1BB8D2DA0;
        v89 = 0;
        v57 = swift_bridgeObjectRetain();
        v58 = sub_1BA67F4CC(v57);
        swift_bridgeObjectRelease();
        v87 = v58;
        swift_retain();
        sub_1BA67FABC((uint64_t *)&v87, sub_1BA67FB34, sub_1BA6801F8);
        swift_release();
        v90 = (uint64_t)v87;
        sub_1BAE7C2F4();
        sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
        v59 = MEMORY[0x1E0DEA968];
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v59, MEMORY[0x1E0DEA970]);
        v26 = v84;
        sub_1BB874464();
        swift_release();
      }
      v56 = v46;
      v53 = (uint64_t)v76;
    }
    else
    {
      v56 = v46;
    }
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v60 = (uint64_t)v75;
    v61 = v86;
    v56((uint64_t)v75, v86, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BAD29EC0(v74, 7, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    v62 = (uint64_t)v73;
    v56((uint64_t)v73, v61, v36);
    swift_storeEnumTagMultiPayload();
    v63 = swift_bridgeObjectRetain();
    sub_1BAD2A030(v63, 8, 0, 0);
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v64 = (uint64_t)v71;
    v56((uint64_t)v71, v61, v36);
    swift_storeEnumTagMultiPayload();
    v65 = swift_bridgeObjectRetain();
    sub_1BAD2A160(v65, 9, 0, 0);
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v66 = (uint64_t)v69;
    v56((uint64_t)v69, v61, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5CBD4(v68, 10, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BAE7C27C);
}

unint64_t sub_1BA5A205C()
{
  unint64_t result;

  result = qword_1ED39B560;
  if (!qword_1ED39B560)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary.Kind, &type metadata for FormatSupplementary.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED39B560);
  }
  return result;
}

uint64_t sub_1BA5A20A0(_QWORD *a1)
{
  return FormatRatio.encode(to:)(a1);
}

uint64_t FormatRatio.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)v1;
  v16 = *(unsigned __int8 *)(v1 + 8);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatRatio, v20, v17, (uint64_t)&type metadata for FormatRatio, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v14, v19, (uint64_t)&off_1E734BD80);
  if (v16)
  {
    if (v16 == 1)
    {
      v21 = qword_1ED3C2478;
      swift_bridgeObjectRetain();
      if (v21 != -1)
        swift_once();
      v22 = sub_1BB86EB84();
      v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v23, v22);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5A2408(1, v15, (uint64_t)v8);
      v24 = (uint64_t)v8;
    }
    else
    {
      v28 = qword_1ED3C2478;
      swift_bridgeObjectRetain();
      if (v28 != -1)
        swift_once();
      v29 = sub_1BB86EB84();
      v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v5, v30, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5A2408(2, v15, (uint64_t)v5);
      v24 = (uint64_t)v5;
    }
  }
  else
  {
    v25 = qword_1ED3C2478;
    swift_bridgeObjectRetain();
    if (v25 != -1)
      swift_once();
    v26 = sub_1BB86EB84();
    v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v27, v26);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5A2408(0, v15, (uint64_t)v11);
    v24 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5A2408(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEED054;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A258C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5A258C()
{
  unint64_t result;

  result = qword_1ED3A5478;
  if (!qword_1ED3A5478)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEBB8, &_s10CodingTypeON_40);
    atomic_store(result, (unint64_t *)&qword_1ED3A5478);
  }
  return result;
}

uint64_t sub_1BA5A25D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCommand.init(from:)(a1, a2);
}

uint64_t FormatCommand.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t *v29;

  v3 = v2;
  v29 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v29;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E726B100;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5A2910();
  v25 = 0uLL;
  sub_1BB8740D4();
  v24[1] = xmmword_1BB87FC90;
  sub_1BA5A28CC();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24[0] = v25;
  v20 = v26;
  v21 = v27;
  v22 = v28;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v24[0];
  *(_QWORD *)(v23 + 32) = v20;
  *(_BYTE *)(v23 + 40) = v21;
  *(_BYTE *)(v23 + 41) = v22;
  *v12 = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5A28CC()
{
  unint64_t result;

  result = qword_1ED3B60E8;
  if (!qword_1ED3B60E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandBinding, &type metadata for FormatCommandBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B60E8);
  }
  return result;
}

unint64_t sub_1BA5A2910()
{
  unint64_t result;

  result = qword_1ED3C6990;
  if (!qword_1ED3C6990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC5C8, &_s10CodingTypeON_113);
    atomic_store(result, (unint64_t *)&qword_1ED3C6990);
  }
  return result;
}

uint64_t FormatCommandActionValue.__deallocating_deinit()
{
  FormatCommandActionValue.deinit();
  return swift_deallocClassInstance();
}

uint64_t *FormatCommandActionValue.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v5 = type metadata accessor for FormatCommandActionValue.DefaultValue(0, *(_QWORD *)(v1 + 80), v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t destroy for FormatColorNotExpression()
{
  return swift_release();
}

uint64_t sub_1BA5A29E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t type metadata accessor for FormatCommandActionValue.DefaultValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCommandActionValue.DefaultValue);
}

void sub_1BA5A2A04(_QWORD *a1)
{
  FormatURLBinding.encode(to:)(a1);
}

void FormatURLBinding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[8];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v18[3] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[4] = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v18[1] = *(_QWORD *)(v1 + 16);
  v18[2] = v12;
  v13 = *(unsigned __int8 *)(v1 + 24);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BA6B8518();
  v18[7] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatURLBinding, v17, v14, (uint64_t)&type metadata for FormatURLBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA5A2BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA5A2EF8(0, *(_QWORD *)(v1 - 96), *(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 120), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5A2EF8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF9754;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A3060();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5A3060()
{
  unint64_t result;

  result = qword_1ED3A5B38;
  if (!qword_1ED3A5B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2528, &_s10CodingTypeON_162);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B38);
  }
  return result;
}

uint64_t sub_1BA5A30A4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF9754;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A3060();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BA5A3200();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5A3200()
{
  unint64_t result;

  result = qword_1ED3A7198;
  if (!qword_1ED3A7198)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.URL, &type metadata for FormatCustomItemBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1ED3A7198);
  }
  return result;
}

uint64_t sub_1BA5A3244(_QWORD *a1)
{
  return FormatColorConditionalProcessor.encode(to:)(a1);
}

uint64_t sub_1BA5A3258(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v19 = a1;
  v18 = a2;
  sub_1BA5A39AC(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE7414;
  v17[5] = v15;
  swift_retain();
  sub_1BA5A3824(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C198, (uint64_t (*)(void))sub_1BA582108, (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA5A3A2C();
    sub_1BA4AD288(0, &qword_1ED3B94D0, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6132EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t FormatColorConditionalProcessor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v29 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  sub_1BA5A39AC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v32 = v1[1];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1BA582108();
  sub_1BA6EC090((uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, v16, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)&off_1E734BD80, (uint64_t)v12);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v9, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v33;
  sub_1BA5A36F4(v13, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = v32;
    if (*(_QWORD *)(v32 + 16) == 1)
    {
      v23 = *(_QWORD *)(v32 + 32);
      v24 = (uint64_t)v30;
      v20(v30, v19, v18);
      swift_storeEnumTagMultiPayload();
      sub_1BA74444C(v23);
      sub_1BA5A3D8C(v23, 2, v24, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
      sub_1BA74447C(v23);
    }
    else
    {
      v25 = qword_1ED3C6D58;
      swift_bridgeObjectRetain();
      if (v25 != -1)
        swift_once();
      v26 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C08);
      v27 = (uint64_t)v31;
      v20(v31, v26, v18);
      swift_storeEnumTagMultiPayload();
      sub_1BA5A3258(v22, 1, v27, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
    }
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA5A39AC);
}

uint64_t sub_1BA5A36F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v19 = a1;
  v18 = a2;
  sub_1BA5A39AC(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE7414;
  v17[5] = v15;
  swift_retain();
  sub_1BA5A3824(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C198, (uint64_t (*)(void))sub_1BA582108, (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA5A3A2C();
    sub_1BA5A3D48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5A3824(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA5A39AC(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1ED39C198, (uint64_t (*)(void))sub_1BA582108, (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA5A3A2C();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEE7444;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEE7414;
  v18[5] = v14;
  sub_1BA6EC658(a1, (uint64_t)sub_1BAEFCC04, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void sub_1BA5A39AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9560)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C198, (uint64_t (*)(void))sub_1BA582108, (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BA5A3A2C();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9560);
  }
}

unint64_t sub_1BA5A3A2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB720;
  if (!qword_1ED3AB720)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C198, (uint64_t (*)(void))sub_1BA582108, (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB720);
  }
  return result;
}

uint64_t FormatColorAndExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - v6;
  sub_1BAE888E4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE887DC();
  v15 = sub_1BA4A2870(&qword_1ED3ABEE8, (uint64_t (*)(uint64_t))sub_1BAE887DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorAndExpression, v16, v12, (uint64_t)&type metadata for FormatColorAndExpression, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD14950(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = v25;
    swift_retain();
    sub_1BAD14950(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE888E4);
}

unint64_t sub_1BA5A3D48()
{
  unint64_t result;

  result = qword_1ED39B750;
  if (!qword_1ED39B750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorExpression, &type metadata for FormatColorExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39B750);
  }
  return result;
}

uint64_t sub_1BA5A3D8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v19 = a1;
  v18 = a2;
  sub_1BA5A39AC(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE7414;
  v17[5] = v15;
  swift_retain();
  sub_1BA5A3824(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C198, (uint64_t (*)(void))sub_1BA582108, (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA5A3A2C();
    sub_1BA5A3EBC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5A3EBC()
{
  unint64_t result;

  result = qword_1ED39B630;
  if (!qword_1ED39B630)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorProcessor, &type metadata for FormatColorProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED39B630);
  }
  return result;
}

uint64_t sub_1BA5A3F00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5A3F28(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5A3F28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (**v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  void (**v42)(_BYTE *, _QWORD);
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  _BYTE *v55;
  uint64_t v56;
  unsigned __int8 v57;
  __int128 v58;
  char v59;
  __int128 v60;
  char v61;
  void (**v62)(_BYTE *, _QWORD);

  sub_1BA6927D0();
  v56 = v2;
  v52 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v55 = &v45[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA692844();
  *(_QWORD *)&v53 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEF5544();
  *(_QWORD *)&v54 = v8;
  v9 = *(void (***)(_BYTE *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BAE87148();
  sub_1BA4A2870(&qword_1ED3D15C0, (uint64_t (*)(uint64_t))sub_1BAE87148, (uint64_t)&unk_1BB8FFC6C);
  v13 = v62;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v12;
  }
  v51 = v7;
  v50 = v5;
  v62 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v54;
  v18 = v55;
  v19 = v56;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v12 = *((_QWORD *)v22 - 2);
      v27 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v28 = sub_1BAE158FC();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v12;
      *(_QWORD *)(v29 + 8) = v27;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v12, v27, 1);
      v62[1](v11, v17);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v23 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF5544);
  v25 = v24;
  v49 = v23;
  v60 = xmmword_1BB8A1A10;
  v61 = 0;
  v26 = sub_1BB874098();
  v32 = v31;
  v47 = v26;
  v48 = xmmword_1BB8D2D60;
  v60 = xmmword_1BB8D2D60;
  v61 = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v58 = v48;
    v59 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v48 = v25;
    v34 = v17;
    v35 = v57;
  }
  else
  {
    *(_QWORD *)&v48 = v25;
    v34 = v17;
    v35 = 1;
  }
  v46 = v35;
  v36 = v53;
  v54 = xmmword_1BB8D2D70;
  v60 = xmmword_1BB8D2D70;
  v61 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    *(_QWORD *)&v53 = v32;
    v58 = v54;
    v59 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v37 = v51;
    sub_1BB8740D4();
    v38 = sub_1BB86DD08();
    v39 = v36;
    v40 = v38;
    (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v37, v39);
    v32 = v53;
  }
  else
  {
    v40 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v54 = a1;
  v53 = xmmword_1BB8D2D90;
  v60 = xmmword_1BB8D2D90;
  v61 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v58 = v53;
    v59 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v41 = v18;
    v42 = v62;
    v43 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v41, v19);
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9E8];
    v42 = v62;
  }
  v42[1](v11, v34);
  type metadata accessor for FormatBlockNode();
  v12 = swift_allocObject();
  swift_beginAccess();
  v44 = v48;
  *(_QWORD *)(v12 + 16) = v49;
  *(_QWORD *)(v12 + 24) = v44;
  *(_QWORD *)(v12 + 32) = v47;
  *(_QWORD *)(v12 + 40) = v32;
  swift_beginAccess();
  *(_BYTE *)(v12 + 48) = v46;
  swift_beginAccess();
  *(_QWORD *)(v12 + 56) = v40;
  swift_beginAccess();
  *(_QWORD *)(v12 + 64) = v43;
  __swift_destroy_boxed_opaque_existential_1(v54);
  return v12;
}

uint64_t type metadata accessor for FormatBlockNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA5A45C8()
{
  unint64_t result;

  result = qword_1ED3C6E98;
  if (!qword_1ED3C6E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD0A8, &_s10CodingKeysON_167);
    atomic_store(result, (unint64_t *)&qword_1ED3C6E98);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PuzzleStatsService.UpdatingState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1BA5A4638@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5A4660(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5A4660(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(char *, uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  void (**v13)(char *, uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (**v69)(char *, uint64_t);
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  char v75;
  uint64_t v76;

  sub_1BA6927D0();
  v66 = v2;
  v64 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v65 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v67 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v52 - v6;
  sub_1BAEE7ECC();
  v68 = v8;
  v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAED0BD8();
  sub_1BA4A2870(&qword_1ED3D0D80, (uint64_t (*)(uint64_t))sub_1BAED0BD8, (uint64_t)&unk_1BB8FFC6C);
  v13 = v69;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v61 = v5;
  *(_QWORD *)&v62 = v7;
  v69 = v9;
  v15 = a1[3];
  v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v68;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v20 - 2);
      v24 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      sub_1BAED0C58();
      sub_1BA5A53CC();
      sub_1BAED0C9C();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E7251848);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v28 = v25;
      *(_QWORD *)(v28 + 8) = v24;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v24, 1);
      v69[1](v11, v17);
      a1 = v63;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE7ECC);
  v23 = v22;
  v74 = xmmword_1BB8A1A10;
  v75 = 0;
  sub_1BA5A5410();
  sub_1BB8740D4();
  v30 = v70;
  v74 = xmmword_1BB8D2D60;
  v75 = 0;
  v31 = sub_1BB87402C();
  v33 = v32;
  type metadata accessor for FormatJsonConfig();
  v74 = xmmword_1BB8D2D70;
  v75 = 0;
  sub_1BA4A2870(&qword_1ED3C7478, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonConfig, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
  sub_1BB874068();
  v60 = v33;
  v34 = v70;
  v74 = xmmword_1BB8D2D90;
  v75 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  *(_QWORD *)&v59 = v34;
  v58 = v31;
  v35 = v70;
  v74 = xmmword_1BB8D2D80;
  v75 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v57 = v35;
  v55 = v21;
  v36 = v70;
  v56 = xmmword_1BB8D2DA0;
  v74 = xmmword_1BB8D2DA0;
  v75 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v56;
    v71 = 0;
    sub_1BAEB7D04();
    v37 = v62;
    v38 = v67;
    sub_1BB8740D4();
    *(_QWORD *)&v56 = v36;
    v39 = sub_1BB86DD08();
    v40 = v38;
    v41 = v39;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v37, v40);
  }
  else
  {
    *(_QWORD *)&v56 = v36;
    v41 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatWebEmbedNodeStyle();
  v74 = xmmword_1BB8D2DB0;
  v75 = 0;
  sub_1BA4A2870(&qword_1ED3CA660, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeStyle, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  sub_1BB874068();
  v67 = v70;
  v62 = xmmword_1BB8D2DD0;
  v74 = xmmword_1BB8D2DD0;
  v75 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v62;
    v71 = 0;
    sub_1BB8740D4();
    v42 = v76;
  }
  else
  {
    v42 = 0;
  }
  v62 = xmmword_1BB8D2DE0;
  v74 = xmmword_1BB8D2DE0;
  v75 = 0;
  v43 = sub_1BB8740F8();
  v54 = v42;
  if ((v43 & 1) != 0)
  {
    v70 = v62;
    v71 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)&v62 = v41;
    v44 = v59;
    v45 = v76;
  }
  else
  {
    *(_QWORD *)&v62 = v41;
    v44 = v59;
    v45 = 0x8000000000000000;
  }
  v61 = v45;
  v59 = xmmword_1BB8D2DF0;
  v74 = xmmword_1BB8D2DF0;
  v75 = 0;
  v46 = v11;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v59;
    v71 = 0;
    sub_1BB8740D4();
    LODWORD(v59) = v76;
  }
  else
  {
    LODWORD(v59) = 1;
  }
  v74 = xmmword_1BB8D2E00;
  v75 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v47 = v70;
  v53 = BYTE8(v70);
  v74 = xmmword_1BB8D2E10;
  v75 = 0;
  v48 = sub_1BB87402C();
  v68 = v49;
  v50 = v48;
  v52 = xmmword_1BB8868A0;
  v74 = xmmword_1BB8868A0;
  v75 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v52;
    v71 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v51 = v65;
    *(_QWORD *)&v52 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v66);
  }
  else
  {
    *(_QWORD *)&v52 = MEMORY[0x1E0DEE9E8];
  }
  v69[1](v46, v17);
  *(_QWORD *)&v70 = v30;
  v76 = v57;
  v72 = v61;
  v73 = v56;
  *(_QWORD *)&v74 = v47;
  BYTE8(v74) = v53;
  type metadata accessor for FormatWebEmbedNode();
  swift_allocObject();
  KeyPath = FormatWebEmbedNode.init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)(v55, v23, (uint64_t *)&v70, v58, v60, v44, &v76, &v73, v62, v67, v54, &v72, v59, (uint64_t *)&v74, v50, v68, v52);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  return KeyPath;
}

unint64_t sub_1BA5A53CC()
{
  unint64_t result;

  result = qword_1ED3C7FF0;
  if (!qword_1ED3C7FF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3AA8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7FF0);
  }
  return result;
}

unint64_t sub_1BA5A5410()
{
  unint64_t result;

  result = qword_1ED3B7BA8;
  if (!qword_1ED3B7BA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeContent, &type metadata for FormatWebEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7BA8);
  }
  return result;
}

uint64_t FormatWebEmbedNode.init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v23 = *a3;
  v24 = *a7;
  v25 = *a8;
  v27 = *a12;
  v29 = *a14;
  v28 = *((_BYTE *)a14 + 8);
  swift_beginAccess();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = v23;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = a6;
  *(_QWORD *)(v17 + 64) = v24;
  *(_QWORD *)(v17 + 72) = v25;
  swift_beginAccess();
  *(_QWORD *)(v17 + 80) = a9;
  *(_QWORD *)(v17 + 88) = a10;
  swift_beginAccess();
  *(_QWORD *)(v17 + 96) = a11;
  swift_beginAccess();
  *(_QWORD *)(v17 + 104) = v27;
  swift_beginAccess();
  *(_BYTE *)(v17 + 112) = a13;
  *(_QWORD *)(v17 + 120) = v29;
  *(_BYTE *)(v17 + 128) = v28;
  *(_QWORD *)(v17 + 136) = a15;
  *(_QWORD *)(v17 + 144) = a16;
  swift_beginAccess();
  *(_QWORD *)(v17 + 152) = a17;
  return v17;
}

uint64_t type metadata accessor for FormatJsonConfig()
{
  return objc_opt_self();
}

uint64_t sub_1BA5A55F8(_QWORD *a1)
{
  return FormatGroupNodeMaskStyle.Selector.encode(to:)(a1);
}

uint64_t FormatGroupNodeMaskStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  _BYTE v36[88];
  _BYTE v37[80];
  uint64_t v38;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v31 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - v11;
  sub_1BAE972F4(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v16 = v1[1];
  sub_1BA6A09F0((uint64_t)(v1 + 2), (uint64_t)v37, &qword_1ED3A0240, (uint64_t)&type metadata for FormatGroupNodeMaskPath);
  v33 = v1[11];
  sub_1BA6A09F0((uint64_t)(v1 + 12), (uint64_t)v36, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = sub_1BAE971EC();
  v21 = sub_1BA4A2870(&qword_1ED3D1130, (uint64_t (*)(uint64_t))sub_1BAE971EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupNodeMaskStyle.Selector, v22, v18, (uint64_t)&type metadata for FormatGroupNodeMaskStyle.Selector, v20, (uint64_t)&type metadata for FormatVersions.StarSky, v19, (uint64_t)v15, v21, (uint64_t)&off_1E734BDC0);
  v23 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v23 != -1)
    swift_once();
  v24 = sub_1BB86EB84();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C08);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v35(v12, v25, v24);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v38;
  sub_1BAD14390(v17, v16, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v35(v9, v25, v24);
    swift_storeEnumTagMultiPayload();
    sub_1BA5A5A64((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA7AF9CC);
    sub_1BAD470B8((uint64_t)v37, 1, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
    sub_1BA5A5A64((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA7AF9E4);
    v27 = (uint64_t)v34;
    v35(v34, v25, v24);
    swift_storeEnumTagMultiPayload();
    v28 = swift_bridgeObjectRetain();
    sub_1BAD473C8(v28, 2, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v29 = (uint64_t)v32;
    v35(v32, v25, v24);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD475F8((uint64_t)v36, 3, 0, 0, v29, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
  }
  return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BAE972F4);
}

uint64_t sub_1BA5A5A64(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 64);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_1BA5A5AB0(_QWORD *a1)
{
  return FormatSelectorExpression.encode(to:)(a1);
}

uint64_t FormatSelectorExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE722E8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAE721E0();
  v14 = sub_1BA4A2870(&qword_1ED3D1170, (uint64_t (*)(uint64_t))sub_1BAE721E0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSelectorExpression, v15, v11, (uint64_t)&type metadata for FormatSelectorExpression, v13, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BD80);
  v16 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD11B14(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE722E8);
}

void sub_1BA5A5CC8(uint64_t a1, uint64_t *a2)
{
  sub_1BA5A5CDC(a1, a2);
}

void sub_1BA5A5CDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = _s10CodingKeysOMa_281(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1BCCE5B24](&unk_1BB8D29F8, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8D29A8, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8D2980, v4);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5A5DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  v13 = v3[3];
  v14 = v3[4];
  v15 = __swift_project_boxed_opaque_existential_1(v3, v13);
  sub_1BA6EC1EC(v1, (uint64_t)v15, v13, v1, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v2, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA6EE974(*(_QWORD *)(v4 - 120), v4 - 112, v2, (uint64_t)sub_1BA90CF04, 0, v10, *(_QWORD *)(v4 - 128), *(_QWORD *)(*(_QWORD *)(v4 - 136) + 16));
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
}

void sub_1BA5A5F64(uint64_t a1, uint64_t a2)
{
  FormatSizeColumn.encode(to:)(a1, a2);
}

void FormatSizeColumn.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v12 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = v6;
  v8 = _s10CodingKeysOMa_62(255, v6, v13, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8C6C80, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C6C30, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C6C08, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5A605C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v14 = v1[3];
  v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v15, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v3, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v19 = *(_QWORD *)(v4 - 136);
  sub_1BA6EE974(*(_QWORD *)(v4 - 120), v4 - 112, v3, (uint64_t)sub_1BA90CF04, 0, v10, *(_QWORD *)(v4 - 144), *(_QWORD *)(*(_QWORD *)(v4 - 152) + 16));
  v20 = v3;
  if (!v19)
  {
    sub_1BA4A2E80(v3, type metadata accessor for FormatVersionRequirement);
    *(_BYTE *)(v4 - 65) = FormatSizeColumn.alignOrigin.getter(v2) & 1;
    *(_OWORD *)(v4 - 112) = xmmword_1BB8A1A10;
    *(_BYTE *)(v4 - 96) = 0;
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476B78);
    v22 = *(_QWORD *)(v4 - 160);
    v18(v22, v21, v16);
    swift_storeEnumTagMultiPayload();
    sub_1BA6478CC(v4 - 65, (uint64_t)&type metadata for FormatCodingTrueStrategy, v4 - 112, v22, (uint64_t)sub_1BA90CF04, 0, v10, (uint64_t)&type metadata for FormatCodingTrueStrategy, (uint64_t)&protocol witness table for FormatCodingTrueStrategy);
    v20 = v22;
  }
  sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 128) + 8))(v12, v10);
}

uint64_t FormatSizeColumn.alignOrigin.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

_QWORD *sub_1BA5A6304@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA5A632C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA5A632C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  _QWORD *KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  void (**v32)(char *, _QWORD);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(char *, _QWORD);
  __int128 v45;
  char v46;
  __int128 v47;
  char v48;

  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - v3;
  sub_1BAEF9870();
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = (_QWORD *)sub_1BAE77E54();
  sub_1BA4A2870(&qword_1ED3D15D0, (uint64_t (*)(uint64_t))sub_1BAE77E54, (uint64_t)&unk_1BB8FFC6C);
  v11 = v44;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v41 = v4;
  v44 = v7;
  v13 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v17 = v42;
  v16 = v43;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v20 - 2);
      v25 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      *(&v36 - 4) = (uint64_t)&_s10CodingKeysON_224;
      *(&v36 - 3) = sub_1BAE77ED4();
      *(&v36 - 2) = sub_1BA5A67F4();
      *(&v36 - 1) = sub_1BAE77F18();
      KeyPath = (_QWORD *)swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E7267F40);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v28 = v24;
      *(_QWORD *)(v28 + 8) = v25;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      v44[1](v9, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF9870);
  v23 = v22;
  v40 = v21;
  v47 = xmmword_1BB8A1A10;
  v48 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v39 = v23;
  v30 = v45;
  v38 = xmmword_1BB8D2D60;
  v47 = xmmword_1BB8D2D60;
  v48 = 0;
  v31 = sub_1BB8740F8();
  v32 = v44;
  if ((v31 & 1) != 0)
  {
    v37 = v30;
    v45 = v38;
    v46 = 0;
    sub_1BAEB7D04();
    v33 = v41;
    sub_1BB8740D4();
    v34 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v16);
    v30 = v37;
  }
  else
  {
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v32[1](v9, v13);
  type metadata accessor for FormatFrameNode();
  KeyPath = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v35 = v39;
  KeyPath[2] = v40;
  KeyPath[3] = v35;
  KeyPath[4] = v30;
  swift_beginAccess();
  KeyPath[5] = v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

unint64_t sub_1BA5A67F4()
{
  unint64_t result;

  result = qword_1ED3C6EB0;
  if (!qword_1ED3C6EB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0488, &_s10CodingKeysON_224);
    atomic_store(result, (unint64_t *)&qword_1ED3C6EB0);
  }
  return result;
}

uint64_t sub_1BA5A6838(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t FeedLayoutSolver.Cursor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  v4 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1BA4A2E80(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128), type metadata accessor for FeedLayoutSolverOptions);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_bridgeObjectRelease();

  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 184);
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 32);
  v8 = *(_QWORD *)(v5 + 40);
  v9 = *(void **)(v5 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t destroy for GroupLayoutInventory(uint64_t a1)
{
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

unint64_t sub_1BA5A6A08(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA5A6A28(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BA5A6A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v6;

  sub_1BA5A6AB4(a1, a4, a2, a3, &v6);
  v4 = v6;
  sub_1BA717E88();
  return sub_1BA719718(v4);
}

uint64_t sub_1BA5A6AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_1BA71C8F4(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BA71CA6C, (void (*)(uint64_t))sub_1BA719718, a5);
}

uint64_t sub_1BA5A6AC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5A6AF0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5A6AF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (**v55)(char *, _QWORD);
  __int128 v56;
  char v57;
  __int128 v58;
  unsigned __int8 v59;

  sub_1BAEFBAC0(0, &qword_1ED3C46D8, (void (*)(void))sub_1BA828874, (void (*)(void))sub_1BA8288B8);
  v3 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  v54 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v41 - v4;
  sub_1BAEF8150();
  v7 = v6;
  v8 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAE7B5F8();
  sub_1BA4A2870(&qword_1ED3D10F0, (uint64_t (*)(uint64_t))sub_1BAE7B5F8, (uint64_t)&unk_1BB8FFC6C);
  v12 = v55;
  sub_1BB87468C();
  v13 = v12;
  if (v12)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v52 = v5;
  v55 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v16 = v7;
  v17 = v53;
  v18 = v54;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v21 - 2);
      v26 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      *((_QWORD *)&v41 - 4) = &_s10CodingKeysON_206;
      *((_QWORD *)&v41 - 3) = sub_1BAE7B678();
      *((_QWORD *)&v41 - 2) = sub_1BA5A71F8();
      *((_QWORD *)&v41 - 1) = sub_1BAE7B6BC();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E72528F0);
      swift_release_n();
      sub_1BA98D1F0();
      v13 = (void *)swift_allocError();
      *(_QWORD *)v29 = v25;
      *(_QWORD *)(v29 + 8) = v26;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      v55[1](v10, v16);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v10, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF8150);
  v24 = v23;
  v58 = xmmword_1BB8A1A10;
  v59 = 0;
  v49 = sub_1BB874098();
  v50 = v22;
  v51 = v30;
  v56 = xmmword_1BB8D2D60;
  v57 = 0;
  sub_1BA69A4F4();
  v31 = v16;
  sub_1BB874068();
  v47 = v58;
  v48 = v59;
  v56 = xmmword_1BB8D2D70;
  v57 = 0;
  sub_1BB874068();
  v45 = *((_QWORD *)&v58 + 1);
  v33 = v58;
  v46 = v59;
  v58 = xmmword_1BB8D2D90;
  v59 = 0;
  v43 = sub_1BB874038();
  v44 = v33;
  v58 = xmmword_1BB8D2D80;
  v59 = 0;
  v42 = sub_1BB874038();
  v41 = xmmword_1BB8D2DA0;
  v58 = xmmword_1BB8D2DA0;
  v59 = 0;
  v34 = sub_1BB8740F8();
  if ((v34 & 1) != 0)
  {
    v56 = v41;
    v57 = 0;
    sub_1BAEF81C8();
    v35 = v52;
    sub_1BB8740D4();
    v36 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v17);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
  }
  v37 = v48;
  v38 = v47;
  v55[1](v10, v31);
  type metadata accessor for FormatWebEmbedNodeStyle();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v50;
  *(_QWORD *)(KeyPath + 24) = v24;
  v39 = v51;
  *(_QWORD *)(KeyPath + 32) = v49;
  *(_QWORD *)(KeyPath + 40) = v39;
  *(_OWORD *)(KeyPath + 48) = v38;
  *(_BYTE *)(KeyPath + 64) = v37;
  v40 = v45;
  *(_QWORD *)(KeyPath + 72) = v44;
  *(_QWORD *)(KeyPath + 80) = v40;
  *(_BYTE *)(KeyPath + 88) = v46;
  *(_BYTE *)(KeyPath + 89) = v43;
  *(_BYTE *)(KeyPath + 90) = v42;
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 96) = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t type metadata accessor for FormatWebEmbedNodeStyle()
{
  return objc_opt_self();
}

unint64_t sub_1BA5A71F8()
{
  unint64_t result;

  result = qword_1ED3CA620;
  if (!qword_1ED3CA620)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF4E8, &_s10CodingKeysON_206);
    atomic_store(result, (unint64_t *)&qword_1ED3CA620);
  }
  return result;
}

uint64_t sub_1BA5A723C(_QWORD *a1)
{
  return FormatBorderInset.encode(to:)(a1);
}

uint64_t FormatBorderInset.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v21 - v6;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)&v21 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v25 = *v1;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v14 = sub_1BB86EB84();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C08);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v17 = v28;
  sub_1BA69F160((uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, v12, v13);
  result = sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    v19 = a1[3];
    v28 = a1[4];
    if (v25)
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v23;
      v16(v23, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v20, (uint64_t)sub_1BA90CF04, 0, v19, v28);
    sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t sub_1BA5A7618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDimensionSizing.init(from:)(a1, a2);
}

uint64_t FormatDimensionSizing.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE8F16C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8F1E4();
  sub_1BA4A2870(&qword_1ED3D0FC0, (uint64_t (*)(uint64_t))sub_1BAE8F1E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v26 = v13;
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_144;
      *(&v26 - 3) = sub_1BAE8F264();
      *(&v26 - 2) = sub_1BA5A798C();
      *(&v26 - 1) = sub_1BAE8F2A8();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726B640);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5A79D0();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5A798C()
{
  unint64_t result;

  result = qword_1ED3C9850;
  if (!qword_1ED3C9850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBAE8, &_s10CodingKeysON_144);
    atomic_store(result, (unint64_t *)&qword_1ED3C9850);
  }
  return result;
}

unint64_t sub_1BA5A79D0()
{
  unint64_t result;

  result = qword_1ED3B7E10;
  if (!qword_1ED3B7E10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizingValue, &type metadata for FormatDimensionSizingValue);
    atomic_store(result, (unint64_t *)&qword_1ED3B7E10);
  }
  return result;
}

uint64_t sub_1BA5A7A14()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5A7A40 + 4 * byte_1BB8AE5BD[*v0]))(0x737569646172, 0xE600000000000000);
}

uint64_t sub_1BA5A7A40()
{
  return 0x7372656E726F63;
}

uint64_t sub_1BA5A7A58()
{
  return 0x6F756E69746E6F63;
}

uint64_t sub_1BA5A7A74()
{
  return 1885433183;
}

uint64_t sub_1BA5A7A84(_QWORD *a1)
{
  return FormatURL.encode(to:)(a1);
}

uint64_t FormatURL.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v39[0] = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v39 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v39 - v8;
  v10 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC(v13, v22, v20, v13, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v18, v21, (uint64_t)&off_1E734BD80);
  sub_1BA4C2DD8(v39[3], (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v24 = *(_QWORD *)v15;
      v25 = *((_QWORD *)v15 + 1);
      v26 = *((_QWORD *)v15 + 2);
      if (qword_1ED3C2478 != -1)
        swift_once();
      v27 = sub_1BB86EB84();
      v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v6, v28, v27);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACDE9F4(1, v24, v25, v26, (uint64_t)v6);
      sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v32 = *(_QWORD *)v15;
      v33 = *((_QWORD *)v15 + 1);
      v34 = *((_QWORD *)v15 + 2);
      v35 = v15[24];
      if (qword_1ED3C2478 != -1)
        swift_once();
      v36 = sub_1BB86EB84();
      v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C20);
      v38 = v39[0];
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v39[0], v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5A7F2C(2, v32, v33, v34, v35, v38);
      sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
      return sub_1BA5A7EF8(v32, v33, v34, v35);
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v30 = sub_1BB86EB84();
    v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v9, v31, v30);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACDE868(0, (uint64_t)v12, (uint64_t)v9);
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    return sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
}

uint64_t sub_1BA5A7EF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA5A7F2C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF95FC;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A80DC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5A8098();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5A8098()
{
  unint64_t result;

  result = qword_1ED39B3B0;
  if (!qword_1ED39B3B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLBinding, &type metadata for FormatURLBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B3B0);
  }
  return result;
}

unint64_t sub_1BA5A80DC()
{
  unint64_t result;

  result = qword_1ED3AAB60;
  if (!qword_1ED3AAB60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B26B8, &_s10CodingTypeON_160);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB60);
  }
  return result;
}

uint64_t sub_1BA5A8120(_QWORD *a1)
{
  return FormatLayoutExpression.encode(to:)(a1);
}

uint64_t FormatLayoutExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  _BYTE v23[12];
  int v24;
  _BYTE *v25;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v25 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v23[-v7];
  sub_1BAEA1798(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)v1;
  v24 = *(unsigned __int8 *)(v1 + 8);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAEA1690();
  v16 = sub_1BA4A2870(&qword_1ED3D1030, (uint64_t (*)(uint64_t))sub_1BAEA1690, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLayoutExpression, v17, v13, (uint64_t)&type metadata for FormatLayoutExpression, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD168B8(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v25;
    v20(v25, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BAD28978(v24);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAEA1798);
}

unint64_t sub_1BA5A83C0()
{
  unint64_t result;

  result = qword_1ED39B4D8;
  if (!qword_1ED39B4D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92420C, &type metadata for FormatLayoutOption);
    atomic_store(result, (unint64_t *)&qword_1ED39B4D8);
  }
  return result;
}

uint64_t destroy for SlotReference(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA5A8454@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatPropertyValue.init(from:)(a1, a2);
}

uint64_t FormatPropertyValue.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t *v22;
  _QWORD v23[5];
  unint64_t v24;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23[-1] - v8;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v23);
  FormatOptionValue.init(from:)(v23, (uint64_t)&v24);
  if (!v2)
  {
    v17 = v24;
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = v2;
  sub_1BA6B8518();
  sub_1BB87468C();
  v22 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    sub_1BA5A86EC();
    v23[0] = 0;
    v23[1] = 0;
    sub_1BB8740D4();
    a2 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    v17 = 0xF000000000000007;
LABEL_10:
    *a2 = v17;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v19 = (void *)swift_allocError();
  *(_QWORD *)v20 = v18;
  *(_QWORD *)(v20 + 8) = v16;
  *(_QWORD *)(v20 + 16) = &unk_1E72680D0;
  *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5A86EC()
{
  unint64_t result;

  result = qword_1ED3B5E50;
  if (!qword_1ED3B5E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8948B8, &type metadata for FormatPropertyValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B5E50);
  }
  return result;
}

uint64_t destroy for FeedLayoutCacheItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatTextNodeLayoutAttributes.__deallocating_deinit()
{
  FormatTextNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatTextNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA5A87E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCommandState.init(from:)(a1, a2);
}

uint64_t FormatCommandState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v17;
      *(_QWORD *)(v22 + 16) = &unk_1E726B1A0;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5A8BE4();
  v25 = 0uLL;
  sub_1BB8740D4();
  v18 = v24;
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      sub_1BA50CAA8(0, &qword_1ED3B34D0, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
      v25 = xmmword_1BB87FC90;
      sub_1BAE8A0A4();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v19 = 0;
      v20 = v24;
    }
    else
    {
      sub_1BA50CAA8(0, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
      v25 = xmmword_1BB87FC90;
      sub_1BAE7CD60();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v19 = 0;
      v20 = v24;
    }
  }
  else
  {
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    v24 = xmmword_1BB87FC90;
    sub_1BAE767F4();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v19 = *((_QWORD *)&v25 + 1);
    v20 = v25;
  }
  *(_QWORD *)v12 = v20;
  *(_QWORD *)(v12 + 8) = v19;
  *(_BYTE *)(v12 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5A8BE4()
{
  unint64_t result;

  result = qword_1ED3C7BC8;
  if (!qword_1ED3C7BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC578, &_s10CodingTypeON_111);
    atomic_store(result, (unint64_t *)&qword_1ED3C7BC8);
  }
  return result;
}

uint64_t sub_1BA5A8C28(_QWORD *a1)
{
  return FormatCustomNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatCustomNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  char *v31;
  int v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v30 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v30 - v9;
  sub_1BAE79DF8(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)v1;
  v14 = *(_QWORD *)(v1 + 8);
  v32 = *(unsigned __int8 *)(v1 + 16);
  v30[1] = *(_QWORD *)(v1 + 24);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAE79CF0();
  v19 = sub_1BA4A2870(&qword_1ED3D0FB0, (uint64_t (*)(uint64_t))sub_1BAE79CF0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCustomNodeStyle.Selector, v20, v16, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, v18, (uint64_t)&type metadata for FormatVersions.JazzkonG, v17, (uint64_t)v13, v19, (uint64_t)&off_1E734BD00);
  v21 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C38);
  v24 = *(void (**)(char *))(*(_QWORD *)(v22 - 8) + 16);
  v30[0] = v23;
  v24(v10);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v33;
  sub_1BAD182F8(v15, v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476B78);
    ((void (*)(char *, uint64_t, uint64_t))v24)(v7, v26, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4E008(v32, 1, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
    v27 = (uint64_t)v31;
    ((void (*)(char *, _QWORD, uint64_t))v24)(v31, v30[0], v22);
    swift_storeEnumTagMultiPayload();
    v28 = swift_bridgeObjectRetain();
    sub_1BAD4E1D0(v28, 2, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAE79DF8);
}

void sub_1BA5A8FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  FormatSwitchListValue.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

void FormatSwitchListValue.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = _s10CodingKeysOMa_41(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C5AE0, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C5A90, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C5A68, v4);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_41);
}

uint64_t type metadata accessor for FormatSwitchListValue.DefaultValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSwitchListValue.DefaultValue);
}

uint64_t type metadata accessor for FormatSwitchListValue.CaseValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSwitchListValue.CaseValue);
}

uint64_t sub_1BA5A946C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *a3 = result;
  a3[1] = v3;
  return result;
}

uint64_t sub_1BA5A9478@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v12;

  sub_1BA5AA370(0, &qword_1ED3A3C78, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  sub_1BA5AA2AC(0, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10(v7, 1, 1, v8);
  v10(v4, 1, 1, v9);
  sub_1BA5AA2AC(0, &qword_1ED3A3CD0, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  result = sub_1BB86F058();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5A9620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(uint64_t, uint64_t, unint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t, unint64_t);
  uint64_t (*v34)(uint64_t, uint64_t, unint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  char *v44;
  char *v45;
  uint64_t (*v46)(uint64_t, uint64_t, unint64_t);
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t *v94;
  char *v95;
  char *v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  char *v98;

  v94 = a1;
  sub_1BA5AA370(0, &qword_1ED3A3C78, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4);
  MEMORY[0x1E0C80A78](v1);
  v93 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v92 = (char *)&v76 - v4;
  sub_1BA5AA370(0, &qword_1ED3A3C58, &qword_1ED3A3C50, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8);
  MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v89 = (char *)&v76 - v8;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED3A3C48, (uint64_t)&qword_1ED3A3C40, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA50CB54);
  MEMORY[0x1E0C80A78](v9);
  v79 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v78 = (char *)&v76 - v12;
  sub_1BA5AA370(0, &qword_1ED39A6B0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328);
  MEMORY[0x1E0C80A78](v13);
  v81 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v76 - v16;
  sub_1BA5AA584();
  MEMORY[0x1E0C80A78](v18);
  v98 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v76 - v21;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6D0, (uint64_t)&qword_1ED39A6C8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA31C);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v76 - v27;
  v29 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v31 = v30;
  v76 = v30;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v97 = v32;
  v95 = v28;
  v32(v28, 1, 1, v30);
  v96 = v25;
  v32(v25, 1, 1, v31);
  v33 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  v34 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980];
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v91 = sub_1BB86F058();
  sub_1BA5AA3D4(0, (unint64_t *)&qword_1ED39A6B8, v29);
  v36 = v35;
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v86 = v37;
  v87 = v35;
  v82 = v22;
  v37(v22, 1, 1, v35);
  v37(v98, 1, 1, v36);
  sub_1BA5AA3D4(0, (unint64_t *)&qword_1ED39A710, v33);
  v84 = v38;
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA3D4(0, (unint64_t *)&qword_1ED39A678, v34);
  v83 = v39;
  swift_allocObject();
  v88 = sub_1BB86F058();
  v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5AA2AC(0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29);
  v42 = v41;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v44 = v17;
  v43(v17, 1, 1, v41);
  v45 = v81;
  v43(v81, 1, 1, v42);
  sub_1BA5AA2AC(0, &qword_1ED39A700, v40, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  v46 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980];
  sub_1BA5AA2AC(0, &qword_1ED39A668, v40, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v85 = sub_1BB86F058();
  v43(v44, 1, 1, v42);
  v43(v45, 1, 1, v42);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v81 = (char *)sub_1BB86F058();
  v47 = v76;
  v48 = v97;
  v97(v95, 1, 1, v76);
  v48(v96, 1, 1, v47);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v80 = sub_1BB86F058();
  sub_1BA50CB54(0, &qword_1ED3A3C40, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v50 = v49;
  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v52 = v78;
  v51(v78, 1, 1, v49);
  v53 = v79;
  v51(v79, 1, 1, v50);
  sub_1BA50CB54(0, &qword_1ED3A3CB0, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CB54(0, &qword_1ED3A3BD8, v46);
  swift_allocObject();
  v77 = sub_1BB86F058();
  v51(v52, 1, 1, v50);
  v51(v53, 1, 1, v50);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v79 = (char *)sub_1BB86F058();
  v54 = v95;
  v55 = v97;
  v97(v95, 1, 1, v47);
  v56 = v96;
  v55(v96, 1, 1, v47);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v78 = (char *)sub_1BB86F058();
  v55(v54, 1, 1, v47);
  v55(v56, 1, 1, v47);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v57 = sub_1BB86F058();
  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA2AC(0, &qword_1ED3A3C50, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v60 = v59;
  v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
  v61(v89, 1, 1, v59);
  v61(v90, 1, 1, v60);
  v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA5AA2AC(0, &qword_1ED3A3CC0, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BE8, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v63 = sub_1BB86F058();
  v65 = v86;
  v64 = v87;
  v86(v82, 1, 1, v87);
  v65(v98, 1, 1, v64);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v66 = sub_1BB86F058();
  sub_1BA5AA2AC(0, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, v58);
  v68 = v67;
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56);
  v69(v92, 1, 1, v67);
  v69(v93, 1, 1, v68);
  sub_1BA5AA2AC(0, &qword_1ED3A3CD0, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, v62);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  result = sub_1BB86F058();
  v71 = v94;
  v72 = v88;
  *v94 = v91;
  v71[1] = v72;
  v73 = v81;
  v71[2] = v85;
  v71[3] = (uint64_t)v73;
  v74 = v77;
  v71[4] = v80;
  v71[5] = v74;
  v75 = v78;
  v71[6] = (uint64_t)v79;
  v71[7] = (uint64_t)v75;
  v71[8] = v57;
  v71[9] = v63;
  v71[10] = v66;
  v71[11] = result;
  return result;
}

void sub_1BA5AA2AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_1BA5AA31C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BA5AA370(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA5AA2AC(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
    v6 = sub_1BB873A2C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA5AA3D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BA81E2B4();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA5AA450(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA6A0B5C(255, (unint64_t *)&qword_1ED3B9200, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BA81E2B4();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA5AA4C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA76D834();
    v7 = v6;
    v8 = sub_1BA81E2B4();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA5AA528(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(void)))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    a4(255, a3, MEMORY[0x1E0DB2C88]);
    v5 = sub_1BB873A2C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BA5AA584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A6C0)
  {
    sub_1BA5AA3D4(255, (unint64_t *)&qword_1ED39A6B8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A6C0);
  }
}

void sub_1BA5AA5E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3D18)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA585B04((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1BA585B04((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    v0 = sub_1BB86F34C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3D18);
  }
}

uint64_t sub_1BA5AA6A4()
{
  return sub_1BA4A2870(&qword_1ED3A3D10, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, MEMORY[0x1E0DB2E78]);
}

void sub_1BA5AA6C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3CF8)
  {
    sub_1BA4AD288(255, &qword_1ED39AB78, (uint64_t)&type metadata for FeedGroupRepooling, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA5AA77C(qword_1ED39AB88, (uint64_t (*)(void))sub_1BA66192C, MEMORY[0x1E0DEE9A0]);
    sub_1BA5AA77C(&qword_1ED39AB80, (uint64_t (*)(void))sub_1BA660540, MEMORY[0x1E0DEE988]);
    v0 = sub_1BB86F34C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3CF8);
  }
}

uint64_t sub_1BA5AA77C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED39AB78, (uint64_t)&type metadata for FeedGroupRepooling, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA5AA7F8()
{
  return sub_1BA4A2870(&qword_1ED3A3CF0, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, MEMORY[0x1E0DB2E78]);
}

uint64_t sub_1BA5AA814(_QWORD *a1)
{
  return FormatSlotDefinition.encode(to:)(a1);
}

uint64_t FormatSlotDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)&v64 - v7;
  MEMORY[0x1E0C80A78](v8);
  v67 = (char *)&v64 - v9;
  MEMORY[0x1E0C80A78](v10);
  v68 = (char *)&v64 - v11;
  MEMORY[0x1E0C80A78](v12);
  v69 = (char *)&v64 - v13;
  MEMORY[0x1E0C80A78](v14);
  v70 = (char *)&v64 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v64 - v17;
  sub_1BAEB85A4(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = type metadata accessor for FormatSlotDefinition();
  v25 = sub_1BAEB849C();
  v26 = sub_1BA4A2870(&qword_1ED3D0F20, (uint64_t (*)(uint64_t))sub_1BAEB849C, (uint64_t)&unk_1BB8FFC6C);
  v64 = v24;
  sub_1BA6EC1EC(v24, v27, v22, v24, v25, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v21, v26, (uint64_t)&off_1E734BD80);
  v29 = *v2;
  v28 = v2[1];
  v71 = v2;
  v30 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v30 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C20);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v33(v18, v32, v31);
  v34 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = v72;
  sub_1BAD18F48(v29, v28, 0, 0, 0, (uint64_t)v18, (uint64_t)sub_1BA90CF04, 0);
  if (v35)
  {
    v53 = (uint64_t)v21;
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v36 = v32;
    v37 = (uint64_t)v70;
    v38 = v71;
    v40 = v71[2];
    v39 = v71[3];
    v72 = v36;
    ((void (*)(char *))v33)(v70);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD18F48(v40, v39, 1, 0, 0, v37, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v38[4];
    v41 = v38[5];
    v43 = (uint64_t)v69;
    v44 = v72;
    v33(v69, v72, v31);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD18F48(v42, v41, 2, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    v46 = v34;
    v47 = v44;
    v48 = v31;
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v49 = v71;
    v50 = (uint64_t)v68;
    v33(v68, v47, v48);
    swift_storeEnumTagMultiPayload();
    v51 = swift_bridgeObjectRetain();
    v52 = (char *)v46;
    v53 = (uint64_t)v21;
    sub_1BAD190A0(v51, 3, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (char *)v33;
    v70 = v52;
    v54 = v49[7];
    v55 = qword_1ED3C6D58;
    swift_bridgeObjectRetain();
    if (v55 != -1)
      swift_once();
    v56 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476C08);
    v57 = (uint64_t)v67;
    v58 = (void (*)(char *, uint64_t, uint64_t))v69;
    ((void (*)(char *, uint64_t, uint64_t))v69)(v67, v56, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BAD29540(v54, 4, 0, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v59 = (uint64_t)v66;
    v58(v66, v72, v48);
    swift_storeEnumTagMultiPayload();
    v60 = swift_bridgeObjectRetain();
    sub_1BAD1921C(v60, 5, 0, 0, v59, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v61 = (uint64_t)v49 + *(int *)(v64 + 40);
    if (qword_1ED3C6D48 != -1)
      swift_once();
    v62 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476BD8);
    v63 = (uint64_t)v65;
    ((void (*)(char *, uint64_t, uint64_t))v69)(v65, v62, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BAD51168(v61, 6, 0, 0, v63, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v63, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))sub_1BAEB85A4);
}

unint64_t sub_1BA5AAEA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3AAFB8;
  if (!qword_1ED3AAFB8)
  {
    sub_1BA4B07F0(255, &qword_1ED3C03D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3A80E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatSlotDefinitionItemSet);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAFB8);
  }
  return result;
}

unint64_t sub_1BA5AAF38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39EA30;
  if (!qword_1ED39EA30)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3BB1A0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39EA30);
  }
  return result;
}

uint64_t sub_1BA5AAFC8(_QWORD *a1)
{
  return FormatCompilerOptions.Newsroom.Environments.encode(to:)(a1);
}

uint64_t FormatCompilerOptions.Newsroom.Environments.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v32 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - v8;
  sub_1BAE74CD4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  v15 = v1[3];
  v35 = v1[2];
  v36 = v15;
  v16 = v1[5];
  v32 = v1[4];
  v33 = v16;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE74BCC();
  v20 = sub_1BA4A2870(&qword_1ED3D0FA0, (uint64_t (*)(uint64_t))sub_1BAE74BCC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environments, v21, v17, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environments, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v12, v20, (uint64_t)&off_1E734BD80);
  v22 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v9, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v38;
  sub_1BAD4ED84(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v27 = (uint64_t)v37;
    v25(v37, v24, v23);
    swift_storeEnumTagMultiPayload();
    v28 = v36;
    swift_bridgeObjectRetain();
    sub_1BAD4ED84(v35, v28, 1, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v29 = (uint64_t)v34;
    v25(v34, v24, v23);
    swift_storeEnumTagMultiPayload();
    v30 = v33;
    swift_bridgeObjectRetain();
    sub_1BAD4ED84(v32, v30, 2, 0, 0, v29, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE74CD4);
}

unint64_t sub_1BA5AB344()
{
  unint64_t result;

  result = qword_1ED39B758;
  if (!qword_1ED39B758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerOptions.Newsroom.Environment, &type metadata for FormatCompilerOptions.Newsroom.Environment);
    atomic_store(result, (unint64_t *)&qword_1ED39B758);
  }
  return result;
}

uint64_t sub_1BA5AB388@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return FormatCodingColumnSetStrategy.SetOrSingle.init(from:)(a1, a2[3], a2[8], a3, a2[9], a2[10]);
}

uint64_t FormatCodingColumnSetStrategy.SetOrSingle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X7>, uint64_t *a4@<X8>, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD v20[3];
  uint64_t *v21;
  char *v22;
  _QWORD v23[3];
  uint64_t v24;
  _QWORD *v25;

  v21 = a4;
  v23[0] = a2;
  v23[1] = a3;
  v23[2] = a5;
  v24 = a6;
  v8 = sub_1BB86DD14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v22 = (char *)v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = v25;
  sub_1BB874674();
  if (v11)
  {
    v12 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v12);
  }
  v20[0] = v9;
  v20[1] = a6;
  v20[2] = a3;
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3140], v8);
  v14 = v22;
  sub_1BB8743D4();
  v15 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v20[0] + 8))(v14, v8);
  v16 = v21;
  v17 = (uint64_t)v25;
  swift_bridgeObjectRetain();
  v18 = sub_1BB873078();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    *v16 = v15;
    v12 = v17;
    return __swift_destroy_boxed_opaque_existential_1(v12);
  }
  sub_1BA98D1F0();
  swift_allocError();
  *v19 = 1;
  v19[1] = 0;
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = 0xF000000000000000;
  swift_willThrow();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA5AB6EC()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F5320);
  return sub_1BB872D60();
}

uint64_t sub_1BA5AB750@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatEdgeInsetsEquation.init(from:)(a1, a2);
}

uint64_t FormatEdgeInsetsEquation.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  char v32;
  uint64_t v33;

  v3 = v2;
  v30 = a2;
  sub_1BAE8F6D4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8F74C();
  sub_1BA4A2870(&qword_1ED3D1110, (uint64_t (*)(uint64_t))sub_1BAE8F74C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  v28 = a1;
  v29 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v6;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v19);
      *(&v28 - 4) = &_s10CodingKeysON_142;
      *(&v28 - 3) = (_QWORD *)sub_1BAE8F7CC();
      *(&v28 - 2) = (_QWORD *)sub_1BA5ABBB0();
      *(&v28 - 1) = (_QWORD *)sub_1BAE8F810();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E726B730);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v12);
      a1 = v28;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v31 = 0uLL;
  v32 = 0;
  sub_1BB8740D4();
  v16 = v33;
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  sub_1BB8740D4();
  v22 = v33;
  v31 = xmmword_1BB8D2D60;
  v32 = 0;
  sub_1BB8740D4();
  v24 = v33;
  v31 = xmmword_1BB8D2D70;
  v32 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v12);
  v25 = v33;
  v26 = v30;
  *v30 = v16;
  v26[1] = v22;
  v26[2] = v24;
  v26[3] = v25;
  v27 = (uint64_t)v28;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_1BA5ABBB0()
{
  unint64_t result;

  result = qword_1ED3CAA70;
  if (!qword_1ED3CAA70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB938, &_s10CodingKeysON_142);
    atomic_store(result, (unint64_t *)&qword_1ED3CAA70);
  }
  return result;
}

uint64_t FeedHeadline.debugDescription.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  void *v10;
  _QWORD *v11;

  sub_1BB873CB4();
  sub_1BB872AFC("like-state-disliked");
  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 48));
  v2 = *v1;
  v3 = v1[1];
  sub_1BA75A650(*v1, v3);
  sub_1BA5ABD90(v2, v3);
  sub_1BA6E0CBC(v2, v3);
  sub_1BB872AFC(v4);
  v5 = *(void **)(v0 + 40);
  v6 = objc_msgSend(v5, sel_identifier);
  sub_1BB8729A0();

  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  v9 = objc_msgSend(v5, sel_title);
  if (v9)
  {
    v10 = v9;
    sub_1BB8729A0();

  }
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9200, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BA5ABD90(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;

  sub_1BA75A650(a1, a2);
  sub_1BB872AFC(v2);
  return swift_bridgeObjectRelease();
}

void sub_1BA5ABF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BA5ABFA0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

void sub_1BA5ABFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = _s10CodingKeysOMa_280(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8D28F8, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8D28A8, v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8D2880, v4);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_280);
}

_QWORD *sub_1BA5AC3E8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1BA5AC3F4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v4 + 8;
  v6 = v4 + 24;
  if (v5 <= v6)
    v7 = v6;
  else
    v7 = v5;
  result = sub_1BB86EB84();
  v9 = result;
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84))
    v11 = *(_QWORD *)(v10 + 64);
  else
    v11 = *(_QWORD *)(v10 + 64) + 1;
  if (v7 > v11)
    v11 = v7;
  if (v11 <= 0x10)
    v11 = 16;
  if (v11 > 3)
    goto LABEL_14;
  v12 = ((1 << (8 * v11)) + 3) >> (8 * v11);
  if (v12 <= 0xFFDD)
  {
    if (v12 > 0xDD)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (v13 < 0x22)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_14:
    v13 = *(unsigned __int8 *)(a1 + v11);
    if (v13 < 0x22)
      goto LABEL_23;
LABEL_19:
    if (v11 <= 3)
      v14 = v11;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  v13 = *(_DWORD *)(a1 + v11);
  if (v13 >= 0x22)
    goto LABEL_19;
LABEL_23:
  switch(v13)
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 0xCu:
    case 0xDu:
      v15 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
      v16 = a1;
      v17 = AssociatedTypeWitness;
      goto LABEL_26;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
      result = swift_bridgeObjectRelease();
      break;
    case 0x1Au:
    case 0x1Bu:
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, result);
      if (!(_DWORD)result)
      {
        v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
        v16 = a1;
        v17 = v9;
LABEL_26:
        result = v15(v16, v17);
      }
      break;
    case 0x21u:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA5AC68C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BA708474(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BA5AC6A8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FormatVersionRequirement.Value(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA5AC744()
{
  sub_1BA5AC7EC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5AC790()
{
  sub_1BA5AC7EC();
  return sub_1BB872D60();
}

unint64_t sub_1BA5AC7EC()
{
  unint64_t result;

  result = qword_1ED3C7BB0;
  if (!qword_1ED3C7BB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7418, &_s10CodingTypeON_115);
    atomic_store(result, (unint64_t *)&qword_1ED3C7BB0);
  }
  return result;
}

uint64_t sub_1BA5AC830(_QWORD *a1)
{
  return FormatFontScaling.encode(to:)(a1);
}

uint64_t FormatFontScaling.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v13 = *(_WORD *)(v1 + 8);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFontScaling, v17, v14, (uint64_t)&type metadata for FormatFontScaling, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  if ((v13 & 0xFF00) == 0xC00)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v18 = sub_1BB86EB84();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v19, v18);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD7962C(0, (uint64_t)v8);
    v20 = (uint64_t)v8;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5ACAC8(1, v12, v13 & 0xFF01, (uint64_t)v5);
    v20 = (uint64_t)v5;
  }
  sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5ACAC8(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3 & 0xFF01;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3478;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5ACC80();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5ACC3C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5ACC3C()
{
  unint64_t result;

  result = qword_1ED39B7C0;
  if (!qword_1ED39B7C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingData, &type metadata for FormatFontScalingData);
    atomic_store(result, (unint64_t *)&qword_1ED39B7C0);
  }
  return result;
}

unint64_t sub_1BA5ACC80()
{
  unint64_t result;

  result = qword_1ED3A5C30;
  if (!qword_1ED3A5C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9250, &_s10CodingTypeON_97);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C30);
  }
  return result;
}

uint64_t sub_1BA5ACCC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeFormat.init(from:)(a1, a2);
}

uint64_t FormatTextNodeFormat.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAE7D08C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7D104();
  sub_1BA4A2870(&qword_1ED3D1640, (uint64_t (*)(uint64_t))sub_1BAE7D104, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_198;
      *(&v25 - 3) = sub_1BAE7D184();
      *(&v25 - 2) = sub_1BA5AD050();
      *(&v25 - 1) = sub_1BAE7D1C8();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E72694E8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA650B5C();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v17 = v28;
  sub_1BA4AD288(0, &qword_1ED3B9328, (uint64_t)&type metadata for FormatTextNodeFormat.Token, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA5AD094();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v28;
  *v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5AD050()
{
  unint64_t result;

  result = qword_1ED3C4D58;
  if (!qword_1ED3C4D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CECF0, &_s10CodingKeysON_198);
    atomic_store(result, (unint64_t *)&qword_1ED3C4D58);
  }
  return result;
}

unint64_t sub_1BA5AD094()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9330;
  if (!qword_1ED3B9330)
  {
    sub_1BA4AD288(255, &qword_1ED3B9328, (uint64_t)&type metadata for FormatTextNodeFormat.Token, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA83F148();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9330);
  }
  return result;
}

uint64_t sub_1BA5AD10C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStateMachineEvent.init(from:)(a1, a2);
}

uint64_t FormatStateMachineEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;
  char v33;

  v3 = v2;
  v31 = a2;
  sub_1BAEBF048();
  v6 = v5;
  v7 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEBF0C0();
  sub_1BA4A2870(&qword_1ED3D10C0, (uint64_t (*)(uint64_t))sub_1BAEBF0C0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v31;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v12 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v16 - 2);
      v21 = *((_QWORD *)v16 - 1);
      v31 = v6;
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_39;
      *(&v30 - 3) = sub_1BAEBF140();
      *(&v30 - 2) = sub_1BA5AD4C0();
      *(&v30 - 1) = sub_1BAEBF184();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726EA28);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t *))(v7 + 8))(v13, v31);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v32 = 0uLL;
  v33 = 0;
  v17 = sub_1BB874098();
  v19 = v18;
  v30 = sub_1BAE10070((uint64_t)v9, 1, 0, 0, (uint64_t (*)(uint64_t))sub_1BA6927D0, (void (*)(_QWORD, double))sub_1BAEBF048, &qword_1ED3BBE20);
  v32 = xmmword_1BB8D2D60;
  v33 = 0;
  v26 = sub_1BB874098();
  v27 = v9;
  v29 = v28;
  (*(void (**)(char *, uint64_t *))(v7 + 8))(v27, v6);
  *v10 = v17;
  v10[1] = v19;
  v10[2] = v30;
  v10[3] = v26;
  v10[4] = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5AD4C0()
{
  unint64_t result;

  result = qword_1ED3CA510;
  if (!qword_1ED3CA510)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6028, &_s10CodingKeysON_39);
    atomic_store(result, (unint64_t *)&qword_1ED3CA510);
  }
  return result;
}

uint64_t sub_1BA5AD504(_QWORD *a1)
{
  return FormatOrExpression.encode(to:)(a1);
}

uint64_t FormatOrExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAEA9E28(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAEA9D20();
  v15 = sub_1BA4A2870(&qword_1ED3D0D40, (uint64_t (*)(uint64_t))sub_1BAEA9D20, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOrExpression, v16, v12, (uint64_t)&type metadata for FormatOrExpression, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  v17 = qword_1ED3C2478;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD1E7A8(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = v25;
    swift_retain();
    sub_1BAD1E7A8(v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEA9E28);
}

uint64_t sub_1BA5AD7CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOrExpression.init(from:)(a1, a2);
}

uint64_t FormatOrExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAEA9CA8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA9D20();
  sub_1BA4A2870(&qword_1ED3D0D40, (uint64_t (*)(uint64_t))sub_1BAEA9D20, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v26 = v13;
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s14descr1E72CBEB9O10CodingKeysON;
      *(&v26 - 3) = sub_1BAEA9DA0();
      *(&v26 - 2) = sub_1BA5ADB40();
      *(&v26 - 1) = sub_1BAEA9DE4();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726D350);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA63C7BC();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5ADB40()
{
  unint64_t result;

  result = qword_1ED3C7E80;
  if (!qword_1ED3C7E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8750, &_s14descr1E72CBEB9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7E80);
  }
  return result;
}

uint64_t sub_1BA5ADB84(_QWORD *a1)
{
  return FormatTypeDefinition.encode(to:)(a1);
}

uint64_t FormatTypeDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[4];
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v46 = &v41[-v7];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v41[-v9];
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v1 + 8);
  v48 = *(_QWORD *)v1;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v44 = *(_QWORD *)(v1 + 32);
  v45 = v15;
  v43 = *(_QWORD *)(v1 + 40);
  v17 = *(unsigned __int8 *)(v1 + 48);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = sub_1BA6B8518();
  v47 = v13;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTypeDefinition, v21, v18, (uint64_t)&type metadata for FormatTypeDefinition, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v13, v20, (uint64_t)&off_1E734BD80);
  if (!(v17 >> 6))
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v33 = sub_1BB86EB84();
    v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C20);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v10, v34, v33);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v35 = (uint64_t)v47;
    sub_1BA5ADFA4(0, v48, (uint64_t)v10);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
    v36 = v35;
    return sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  if (v17 >> 6 != 1)
  {
    v37 = v48;
    if (qword_1ED3C6D30 != -1)
      swift_once();
    v38 = sub_1BB86EB84();
    v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED476B90);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v5, v39, v38);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v40 = (uint64_t)v47;
    sub_1BA4ACF3C(2, v37, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    v36 = v40;
    return sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v22 = v48;
  *(_QWORD *)&v49 = v48;
  *((_QWORD *)&v49 + 1) = v14;
  v23 = v14;
  v24 = v16;
  v26 = v44;
  v25 = v45;
  v50 = v16;
  v51 = v45;
  v27 = v43;
  v52 = v44;
  v53 = v43;
  v42 = v17;
  v54 = v17 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v24, v25, v26, v27, v17 & 1);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C38);
  v30 = (uint64_t)v46;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v46, v29, v28);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v31 = (uint64_t)v47;
  sub_1BA5AE190(1, &v49, v30);
  sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA6C0C20(v22, v23, v24, v25, v26, v27, v42);
}

uint64_t sub_1BA5ADFA4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE95C0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AE108();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5AE14C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5AE108()
{
  unint64_t result;

  result = qword_1ED3A6888;
  if (!qword_1ED3A6888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C27B0, &_s10CodingTypeON_6);
    atomic_store(result, (unint64_t *)&qword_1ED3A6888);
  }
  return result;
}

unint64_t sub_1BA5AE14C()
{
  unint64_t result;

  result = qword_1ED39B690;
  if (!qword_1ED39B690)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition.Enum, &type metadata for FormatTypeDefinition.Enum);
    atomic_store(result, (unint64_t *)&qword_1ED39B690);
  }
  return result;
}

uint64_t sub_1BA5AE190(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  char v21;

  v21 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  v20 = *((_BYTE *)a2 + 48);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE95C0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AE108();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5AE308();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5AE308()
{
  unint64_t result;

  result = qword_1ED39BB50;
  if (!qword_1ED39BB50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineDefinition, &type metadata for FormatStateMachineDefinition);
    atomic_store(result, (unint64_t *)&qword_1ED39BB50);
  }
  return result;
}

uint64_t FormatOptionCollection.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BA5AE378(_QWORD *a1)
{
  FormatGroupBinding.Command.encode(to:)(a1);
}

void FormatGroupBinding.Command.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v18[2] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v18[1] = (char *)v18 - v6;
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v18[0] = (char *)v18 - v9;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(unsigned __int8 *)(v1 + 24);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BA6B8518();
  v18[3] = v12;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupBinding.Command, v17, v14, (uint64_t)&type metadata for FormatGroupBinding.Command, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v16, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5AE508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = v0;
  v6 = v1;
  sub_1BA856DD0(v0, v1, v2);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C20);
  v9 = *(_QWORD *)(v4 - 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v9, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v10 = v1;
  v11 = *(_QWORD *)(v4 - 88);
  sub_1BA5AE884(0, v5, v10, v2, v9);
  sub_1BA4A2E80(v9, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA856ECC(v5, v6, v2, v3, (uint64_t (*)(void))sub_1BA7EDFFC);
}

uint64_t sub_1BA5AE884(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF776C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AEA30();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5AE9EC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5AE9EC()
{
  unint64_t result;

  result = qword_1ED39B3A8;
  if (!qword_1ED39B3A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Command, &type metadata for FormatTagBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED39B3A8);
  }
  return result;
}

unint64_t sub_1BA5AEA30()
{
  unint64_t result;

  result = qword_1ED3A61E0;
  if (!qword_1ED3A61E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4418, &_s10CodingTypeON_144);
    atomic_store(result, (unint64_t *)&qword_1ED3A61E0);
  }
  return result;
}

uint64_t sub_1BA5AEA74@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5AEB44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5AEAA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5AEB44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5AEADC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5AEB44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5AEB10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5AEB44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5AEB44()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1BA5AEB88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5AEBB4();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5AEBB4()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

NewsFeed::FormatBorderInset_optional __swiftcall FormatBorderInset.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatBorderInset_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatAccessibility_optional __swiftcall FormatAccessibility.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatAccessibility_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatOptionType_optional __swiftcall FormatOptionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatOptionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t type metadata accessor for AudioCommandContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AudioCommandContext);
}

void sub_1BA5AED18(_QWORD *a1)
{
  FormatBoolBinding.encode(to:)(a1);
}

void FormatBoolBinding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[8];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v23[3] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23[2] = (char *)v23 - v6;
  MEMORY[0x1E0C80A78](v7);
  v23[0] = (char *)v23 - v8;
  MEMORY[0x1E0C80A78](v9);
  v23[1] = (char *)v23 - v10;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[4] = *(_QWORD *)v1;
  v18 = *(unsigned __int16 *)(v1 + 8);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  v23[7] = v17;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBoolBinding, v22, v19, (uint64_t)&type metadata for FormatBoolBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v21, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5AEF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA5AF7D8(0, *(_QWORD *)(v1 - 96), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5AF438(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5478;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5AF5E0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5AF59C()
{
  unint64_t result;

  result = qword_1ED3A5B78;
  if (!qword_1ED3A5B78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6CE0, &_s10CodingTypeON_119);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B78);
  }
  return result;
}

unint64_t sub_1BA5AF5E0()
{
  unint64_t result;

  result = qword_1ED39B7D0;
  if (!qword_1ED39B7D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Bool, &type metadata for FormatHeadlineBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39B7D0);
  }
  return result;
}

uint64_t sub_1BA5AF624(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5478;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5AF794();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5AF794()
{
  unint64_t result;

  result = qword_1ED39B4C0;
  if (!qword_1ED39B4C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Bool, &type metadata for FormatGroupBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39B4C0);
  }
  return result;
}

uint64_t sub_1BA5AF7D8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5478;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5AF93C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5AF93C()
{
  unint64_t result;

  result = qword_1ED39B820;
  if (!qword_1ED39B820)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool, &type metadata for FormatWebEmbedBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39B820);
  }
  return result;
}

void sub_1BA5AF980(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BA5AF9A0(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BA5AF9A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[28];

  v13[6] = a3;
  v13[27] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[16] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[10] = (char *)v13 - v6;
  v13[11] = v5;
  v13[15] = v7;
  v13[7] = v8;
  v9 = _s10CodingKeysOMa_282(255, v7, v8, v5);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8D2AA8, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8D2A58, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8D2A30, v9);
  v13[20] = v9;
  v13[21] = v10;
  v13[8] = v11;
  v13[9] = v10;
  v13[22] = v11;
  v13[23] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_282(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_282);
}

uint64_t sub_1BA5AFEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  uint64_t v10;

  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(_BYTE *)(a6 + 16) = v9;
  v10 = a6 + *(int *)(type metadata accessor for FormatCommandValue.CaseValue(0, a3, a4, a5) + 44);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v10, a2, a3);
}

uint64_t type metadata accessor for FormatCommandValue.CaseValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCommandValue.CaseValue);
}

unint64_t sub_1BA5AFF14()
{
  unint64_t result;

  result = qword_1ED3B5380[0];
  if (!qword_1ED3B5380[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandState, &type metadata for FormatCommandState);
    atomic_store(result, qword_1ED3B5380);
  }
  return result;
}

uint64_t sub_1BA5AFF58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPoint.init(from:)(a1, a2);
}

uint64_t FormatPoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE73640();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE736B8();
  sub_1BA4A2870(&qword_1ED3D14B0, (uint64_t (*)(uint64_t))sub_1BAE736B8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_247;
      *(&v26 - 3) = sub_1BAE73738();
      *(&v26 - 2) = sub_1BA5B02CC();
      *(&v26 - 1) = sub_1BAE7377C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E724FF08);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA689CD8();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5B02CC()
{
  unint64_t result;

  result = qword_1ED3C6650;
  if (!qword_1ED3C6650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1648, &_s10CodingKeysON_247);
    atomic_store(result, (unint64_t *)&qword_1ED3C6650);
  }
  return result;
}

void sub_1BA5B0310(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BA5B0330(a1, *(_QWORD *)(v2 + 32), a2);
}

void sub_1BA5B0330(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16[1] = a2;
  v18 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = swift_getAssociatedConformanceWitness();
  v9 = type metadata accessor for FeedGroupEmitterOutput(0, v6, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - v11;
  v17 = type metadata accessor for FeedScoredResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v14 = *(int *)(v17 + 44);
  v19 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1 + v14, v9);
  v15 = (char *)sub_1BA5B04D4 + 4 * byte_1BB89CF54[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA5B04D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_1BA5B08FC(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 104));
}

uint64_t sub_1BA5B0708@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA5B071C(a1);
}

uint64_t sub_1BA5B071C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FeedDatabaseGroup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FeedDatabaseGroup.identifier.getter()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v2)
    return v1;
  __break(1u);
  return result;
}

void type metadata accessor for FeedCursorFactory()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA5B07AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
  return swift_release();
}

void sub_1BA5B089C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BA4D9CE8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA5B08FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  double v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[72];

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1BA5B1148((uint64_t)v38, (uint64_t)&v26, v2, v5, v6);
  v23 = v26;
  v7 = v27;
  v8 = v2 + *(int *)(a1 + 44);
  v10 = (int *)type metadata accessor for FeedGroupEmitTask.Result(0, v5, v6, v9);
  v11 = *(_QWORD *)(v8 + v10[9]);
  v36 = type metadata accessor for FeedGroupEmitter(0, v5, v6, v12);
  v37 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v36);
  v35[0] = v11;
  v13 = *(_QWORD *)(v8 + v10[10]);
  v14 = v8 + v10[11];
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = *(_BYTE *)(v14 + 24);
  v19 = *(_QWORD *)(v14 + 32);
  v20 = *(_BYTE *)(v14 + 40);
  LOBYTE(v14) = *(_BYTE *)(v14 + 41);
  v28 = v15;
  v29 = v16;
  v30 = v17;
  v31 = v18;
  v32 = v19;
  v33 = v20;
  v34 = v14;
  sub_1BA5B0E6C((uint64_t)v38, (uint64_t)&v26);
  v24 = v23;
  v25 = v7;
  v21 = *(double *)(v8 + v10[12]);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA5B0AFC(v35, v13, &v28, (uint64_t)&v26, (uint64_t *)&v24, a2, v21);
  return sub_1BA5B0A58((uint64_t)v38);
}

uint64_t sub_1BA5B0A58(uint64_t a1)
{
  destroy for FeedJournalGroupResultOutput(a1);
  return a1;
}

uint64_t destroy for FeedJournalGroupResultOutput(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 64);
  while (2)
  {
    switch(v1)
    {
      case 0:
      case 1:
      case 2:
        return __swift_destroy_boxed_opaque_existential_1(a1);
      case 3:
        __swift_destroy_boxed_opaque_existential_1(a1);
        return swift_bridgeObjectRelease();
      case 4:
      case 5:
      case 6:
        return swift_bridgeObjectRelease();
      default:
        v1 = *(_DWORD *)a1 + 7;
        continue;
    }
  }
}

uint64_t sub_1BA5B0AFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  _BYTE v38[72];
  _QWORD v39[4];
  _BYTE v40[40];
  uint64_t v41[6];

  v31 = *a3;
  v30 = *((_BYTE *)a3 + 8);
  v29 = a3[2];
  v28 = *((_BYTE *)a3 + 24);
  v27 = a3[4];
  v26 = *((_BYTE *)a3 + 40);
  v32 = *((_BYTE *)a3 + 41);
  v35 = a5[1];
  v36 = *a5;
  v34 = a5[2];
  v11 = FeedJournalGroupResultOutput.identifier.getter();
  v13 = v12;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v39);
  if (v13)
  {
    v24 = v13;
    v25 = v11;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    v14 = sub_1BB86DEE8();
    v24 = v15;
    v25 = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v23 = *(void (**)(uint64_t, uint64_t))(v17 + 48);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41[3] = swift_getAssociatedTypeWitness();
  v41[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v41);
  v23(v16, v17);
  v18 = sub_1BB86DEE8();
  v20 = v19;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v40);
  sub_1BA5B0E6C(a4, (uint64_t)v39);
  sub_1BA5B1000(a4, (uint64_t)v38);
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v37);
  v21 = swift_allocObject();
  sub_1BA5B1000((uint64_t)v38, v21 + 16);
  sub_1BA4CECCC(v37, v21 + 88);
  *(_QWORD *)a6 = v25;
  *(_QWORD *)(a6 + 8) = v24;
  *(_QWORD *)(a6 + 16) = v18;
  *(_QWORD *)(a6 + 24) = v20;
  sub_1BA5B103C((uint64_t)v40, a6 + 32);
  *(_QWORD *)(a6 + 72) = a2;
  *(_QWORD *)(a6 + 80) = v31;
  *(_BYTE *)(a6 + 88) = v30;
  *(_QWORD *)(a6 + 96) = v29;
  *(_BYTE *)(a6 + 104) = v28;
  *(_QWORD *)(a6 + 112) = v27;
  *(_BYTE *)(a6 + 120) = v26;
  *(_BYTE *)(a6 + 121) = v32;
  sub_1BA5B1000((uint64_t)v39, a6 + 128);
  *(_QWORD *)(a6 + 200) = v36;
  *(_QWORD *)(a6 + 208) = v35;
  *(_QWORD *)(a6 + 216) = v34;
  *(double *)(a6 + 224) = a7;
  *(_QWORD *)(a6 + 232) = sub_1BB204800;
  *(_QWORD *)(a6 + 240) = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA5B0E6C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedJournalGroupResultOutput(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for FeedJournalGroupResultOutput(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(unsigned __int8 *)(a2 + 64);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v5;
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 64) = 0;
        return a1;
      case 1:
        v6 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v6;
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 64) = 1;
        return a1;
      case 2:
        v7 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 64) = 2;
        return a1;
      case 3:
        v8 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v8;
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        v9 = 3;
        goto LABEL_11;
      case 4:
        v10 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v10;
        v9 = 4;
        goto LABEL_11;
      case 5:
        v11 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v11;
        v9 = 5;
        goto LABEL_11;
      case 6:
        v12 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v12;
        v9 = 6;
LABEL_11:
        *(_BYTE *)(a1 + 64) = v9;
        swift_bridgeObjectRetain();
        return a1;
      default:
        v4 = *(_DWORD *)a2 + 7;
        continue;
    }
  }
}

uint64_t sub_1BA5B1000(uint64_t a1, uint64_t a2)
{
  __swift_memcpy65_8(a2, a1);
  return a2;
}

uint64_t sub_1BA5B103C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3C57E0, (unint64_t *)&unk_1ED3C57D0, (uint64_t)&protocol descriptor for FeedGroupEmitterType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedJournalGroupResultOutput.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3[3];
  unsigned __int8 v4;
  _QWORD v5[4];

  sub_1BA5B0E6C(v0, (uint64_t)v3);
  if (v4 < 3u)
    goto LABEL_5;
  if (v4 - 4 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1BA4CECCC(v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v1 = sub_1BB86DEE8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return v1;
  }
  sub_1BA5B0A58((uint64_t)v3);
  return 0;
}

void sub_1BA5B1148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[8];

  v18[2] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - v13;
  v16 = type metadata accessor for FeedScoredResult(0, a4, a5, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3 + *(int *)(v16 + 44), v11);
  v17 = (char *)sub_1BA5B12C8 + 4 * byte_1BB89CF65[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA5B12C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v10;

  v6 = MEMORY[0x1E0DEE9B8] + 8;
  v7 = MEMORY[0x1E0DEB940];
  sub_1BA4AD288(255, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = v2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 32))(boxed_opaque_existential_0, v3, v1);
  *(_QWORD *)(v0 + 40) = *v4;
  *(_BYTE *)(v0 + 64) = 0;
  v10 = *(_QWORD **)(v5 - 128);
  v10[1] = 0;
  v10[2] = 0;
  *v10 = 0;
  return sub_1BA66EA88(v8, (unint64_t *)&qword_1ED3BA040, v6, (uint64_t (*)(_QWORD, uint64_t))v7);
}

void sub_1BA5B1478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 *v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  type metadata accessor for FeedGroupEmitterEmbeddedOutput(255, v5, v7, a4);
  sub_1BA4D9CE8(255, &qword_1ED3A4CB0);
  v11 = (__int128 *)((char *)v8 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v13 = *(_QWORD *)(v10 - 136);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v13 + 32))(v6, v8, v5);
      sub_1BA4CECCC(v11, v10 - 120);
      *(_QWORD *)(v4 + 24) = v5;
      *(_QWORD *)(v4 + 32) = v7;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v4);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(boxed_opaque_existential_0, v6, v5);
      *(_QWORD *)(v4 + 40) = *v9;
      *(_BYTE *)(v4 + 64) = 1;
      v16 = *(_QWORD *)(v10 - 96);
      v15 = *(_QWORD *)(v10 - 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 - 120), v16);
      v17 = sub_1BB86DEE8();
      sub_1BB0A2A28(v17, v18, v16, v15, *(_QWORD **)(v10 - 128));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v5);
    }
    else
    {
      v25 = *v8;
      v26 = v8[1];
      sub_1BA4CECCC(v11, v10 - 120);
      *(_QWORD *)v4 = v25;
      *(_QWORD *)(v4 + 8) = v26;
      *(_BYTE *)(v4 + 64) = 6;
      v27 = *(_QWORD *)(v10 - 96);
      v28 = *(_QWORD *)(v10 - 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 - 120), v27);
      sub_1BB0A2A28(0, 0, v27, v28, *(_QWORD **)(v10 - 128));
    }
    __swift_destroy_boxed_opaque_existential_1(v10 - 120);
    JUMPOUT(0x1BA5B1458);
  }
  sub_1BA4AD288(255, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v10 - 144) = (char *)v8 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v19 = *(_QWORD *)(v10 - 136);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v19 + 32))(v6, v8, v5);
  sub_1BA4CECCC(v11, v10 - 120);
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 32) = v7;
  v20 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(v20, v6, v5);
  *(_QWORD *)(v4 + 40) = *v9;
  *(_BYTE *)(v4 + 64) = 0;
  v22 = *(_QWORD *)(v10 - 96);
  v21 = *(_QWORD *)(v10 - 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 - 120), v22);
  v23 = sub_1BB86DEE8();
  sub_1BB0A2A28(v23, v24, v22, v21, *(_QWORD **)(v10 - 128));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v6, v5);
  __swift_destroy_boxed_opaque_existential_1(v10 - 120);
  JUMPOUT(0x1BA5B13E0);
}

unint64_t sub_1BA5B16F4(unint64_t result, unint64_t a2)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_1BA67035C(a2);
  }
  return result;
}

unint64_t sub_1BA5B1720(unint64_t result, unint64_t a2)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1BA5B18CC(a2);
  }
  return result;
}

uint64_t sub_1BA5B174C()
{
  return sub_1BA5F1270();
}

uint64_t sub_1BA5B176C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + qword_1ED476460);
  v6 = type metadata accessor for FeedDeferredCursorGroup(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  result = MEMORY[0x1BCCE37B4](v5, v6);
  v8 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
  v9 = *(_QWORD *)(v4 + qword_1ED476470);
  result = v8 + v9;
  if (__OFADD__(v8, v9))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedDeferredCursorGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedDeferredCursorGroup);
}

uint64_t sub_1BA5B17DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v6 = *a2;
  sub_1BB86C8A4();
  v8 = type metadata accessor for FeedDeferredCursorGroup(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v7);
  v9 = a3 + *(int *)(v8 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v9, a1, AssociatedTypeWitness);
  *(_QWORD *)(a3 + *(int *)(v8 + 40)) = a2;
  return result;
}

unint64_t sub_1BA5B18CC(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA5B18DC(uint64_t a1, uint64_t *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61[3];
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  __int128 v73;
  __int128 v74;

  v3 = v2;
  v53 = a1;
  v5 = *(_QWORD *)v2;
  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - v10;
  v56 = (uint64_t)&v46 - v10;
  v55 = *a2;
  v54 = a2[1];
  v12 = a2[2];
  *(_QWORD *)&v73 = *(_QWORD *)&v3[qword_1ED476468];
  v59 = v5;
  v13 = *(_QWORD *)(v5 + 88);
  v50 = *(_QWORD *)(v5 + 80);
  v14 = v50;
  v49 = v13;
  type metadata accessor for FeedDatabaseGroup(255, v50, v13, v15);
  v16 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v16);
  sub_1BB873174();
  v73 = v64;
  v74 = v65;
  v17 = sub_1BB873B70();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF78], v17);
  v58 = sub_1BB872EF8();
  v18 = *((_QWORD *)v3 + 3);
  v57 = *((_QWORD *)v3 + 2);
  v52 = v18;
  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v19(v11, &v3[qword_1ED476458], v6);
  v19(v60, &v3[qword_1ED476440], v6);
  v72 = v3[qword_1ED476480];
  v51 = *(_QWORD *)&v3[qword_1EF3D04D0];
  v21 = type metadata accessor for FeedDeferredCursorGroup(255, v14, v13, v20);
  sub_1BB874218();
  v22 = *(_QWORD *)(v21 - 8);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  v23 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v53, v21);
  sub_1BA69C794(v23);
  v53 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)&v3[qword_1ED476488];
  v27 = v3[qword_1ED476448 + 8];
  v28 = v3[qword_1ED476448 + 9];
  v29 = v3[qword_1ED476448 + 10];
  v30 = v3[qword_1ED476448 + 11];
  v32 = *(_QWORD *)&v3[qword_1ED476448 + 16];
  v31 = *(_QWORD *)&v3[qword_1ED476448 + 24];
  v33 = *(_QWORD *)&v3[qword_1ED476448 + 32];
  v34 = *(_QWORD *)&v3[qword_1ED476448 + 40];
  v35 = v3[qword_1ED476448 + 48];
  v37 = *(void **)&v3[qword_1ED476448 + 56];
  v36 = *(_QWORD *)&v3[qword_1ED476448 + 64];
  v38 = *(_QWORD *)&v3[qword_1ED476448 + 72];
  *(_QWORD *)&v64 = *(_QWORD *)&v3[qword_1ED476448];
  v26 = (void *)v64;
  BYTE8(v64) = v27;
  BYTE9(v64) = v28;
  BYTE10(v64) = v29;
  BYTE11(v64) = v30;
  *(_QWORD *)&v65 = v32;
  *((_QWORD *)&v65 + 1) = v31;
  v66 = v33;
  v67 = v34;
  v68 = v35;
  v69 = v37;
  v70 = v36;
  v71 = v38;
  v48 = *(_QWORD *)&v3[qword_1ED476470];
  v47 = *(_QWORD *)&v3[qword_1ED476478];
  v39 = *(_QWORD *)&v3[qword_1ED476450 + 16];
  v62 = *(_OWORD *)&v3[qword_1ED476450];
  v63 = v39;
  v61[0] = v55;
  v61[1] = v54;
  v61[2] = v12;
  swift_retain();
  v40 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v33, v34);
  v41 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA66AB08(&v62, v61, v50, v49, &v73);
  v62 = v73;
  v63 = v74;
  v43 = *(_QWORD *)&v3[qword_1ED39F5C0];
  v42 = *(_QWORD *)&v3[qword_1ED39F5C0 + 8];
  swift_allocObject();
  v44 = sub_1BA8FE044(v57, v52, v56, (uint64_t)v60, &v72, v51, v58, v53, v25, (uint64_t *)&v64, v48, v47, &v62, v43, v42);
  swift_retain();
  return v44;
}

uint64_t sub_1BA5B1DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4);
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_1BA5B1EC4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v2)
    return v1;
  __break(1u);
  return result;
}

unint64_t sub_1BA5B1F10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = FeedCursorContainer.init(deferredCursor:)(a1);
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t FeedCursorContainer.init(deferredCursor:)(uint64_t a1)
{
  return a1 | 0x8000000000000000;
}

uint64_t sub_1BA5B1F40(_QWORD *a1)
{
  return FormatRemoteImage.encode(to:)(a1);
}

uint64_t FormatRemoteImage.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  char *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)();
  uint64_t v102;
  _QWORD v103[4];
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  __int128 v126;
  char v127;
  __int128 v128;
  char v129;
  uint64_t v130;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v105 = (char *)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v106 = (char *)v103 - v5;
  MEMORY[0x1E0C80A78](v6);
  v107 = (char *)v103 - v7;
  MEMORY[0x1E0C80A78](v8);
  v108 = (char *)v103 - v9;
  MEMORY[0x1E0C80A78](v10);
  v109 = (uint64_t)v103 - v11;
  MEMORY[0x1E0C80A78](v12);
  v110 = (uint64_t)v103 - v13;
  MEMORY[0x1E0C80A78](v14);
  v111 = (uint64_t)v103 - v15;
  MEMORY[0x1E0C80A78](v16);
  v112 = (char *)v103 - v17;
  MEMORY[0x1E0C80A78](v18);
  v113 = (char *)v103 - v19;
  MEMORY[0x1E0C80A78](v20);
  v114 = (char *)v103 - v21;
  MEMORY[0x1E0C80A78](v22);
  v115 = (char *)v103 - v23;
  MEMORY[0x1E0C80A78](v24);
  v116 = (char *)v103 - v25;
  MEMORY[0x1E0C80A78](v26);
  v117 = (uint64_t)v103 - v27;
  MEMORY[0x1E0C80A78](v28);
  v121 = (uint64_t)v103 - v29;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v103 - v31;
  sub_1BAEB37A4(0);
  v34 = v33;
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)v103 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1[3];
  v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  v39 = type metadata accessor for FormatRemoteImage();
  v40 = sub_1BAEB369C();
  v41 = sub_1BA4A2870(&qword_1ED3D0CB0, (uint64_t (*)(uint64_t))sub_1BAEB369C, (uint64_t)&unk_1BB8FFC6C);
  v118 = (int *)v39;
  sub_1BA6EC1EC(v39, v42, v37, v39, v40, (uint64_t)&type metadata for FormatVersions.JazzkonC, v38, (uint64_t)v36, v41, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v43 = sub_1BB86EB84();
  v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C20);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
  v122 = v44;
  v120 = v45;
  ((void (*)(char *))v45)(v32);
  v119 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v128 = 0uLL;
  v129 = 0;
  v46 = &v36[*(int *)(v34 + 44)];
  v48 = *(_QWORD *)v46;
  v47 = *((_QWORD *)v46 + 1);
  v126 = 0uLL;
  v127 = 0;
  v49 = swift_allocObject();
  v50 = sub_1BA5193C4((uint64_t)&v126, v49 + 16, (uint64_t (*)(_QWORD))sub_1BAEB369C);
  v124 = v103;
  *(_QWORD *)(v49 + 40) = v48;
  *(_QWORD *)(v49 + 48) = v47;
  MEMORY[0x1E0C80A78](v50);
  v103[-4] = sub_1BA90CF04;
  v103[-3] = 0;
  v101 = sub_1BAEB38A0;
  v102 = v49;
  v51 = v128;
  LOBYTE(v48) = v129;
  swift_retain();
  v130 = (uint64_t)v32;
  v52 = v125;
  sub_1BAE2B460((uint64_t)v32, v51, *((uint64_t *)&v51 + 1), v48, (uint64_t)sub_1BAEFCC08, (uint64_t)&v103[-6]);
  if (v52)
  {
    swift_release();
    v100 = v130;
  }
  else
  {
    v125 = v46;
    v104 = v43;
    sub_1BAEB381C();
    v54 = v53;
    v55 = sub_1BA4A2870(&qword_1ED3AE7E0, (uint64_t (*)(uint64_t))sub_1BAEB381C, MEMORY[0x1E0DED188]);
    v56 = type metadata accessor for FormatURL();
    v57 = sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
    sub_1BB874464();
    v103[1] = v57;
    v103[2] = v56;
    v103[3] = v55;
    v124 = v54;
    swift_release();
    sub_1BA4A2E80(v130, type metadata accessor for FormatVersionRequirement);
    v130 = v118[5];
    v59 = v121;
    v120(v121, v122, v104);
    swift_storeEnumTagMultiPayload();
    v128 = xmmword_1BB8A1A10;
    v129 = 0;
    v61 = *(_QWORD *)v125;
    v60 = *((_QWORD *)v125 + 1);
    v126 = xmmword_1BB8A1A10;
    v127 = 0;
    v62 = swift_allocObject();
    v63 = sub_1BA5193C4((uint64_t)&v126, v62 + 16, (uint64_t (*)(_QWORD))sub_1BAEB369C);
    *(_QWORD *)(v62 + 40) = v61;
    *(_QWORD *)(v62 + 48) = v60;
    MEMORY[0x1E0C80A78](v63);
    v103[-4] = sub_1BA90CF04;
    v103[-3] = 0;
    v101 = sub_1BAEB38A0;
    v102 = v62;
    v64 = v128;
    LOBYTE(v57) = v129;
    swift_retain();
    sub_1BAE2B460(v59, v64, *((uint64_t *)&v64 + 1), v57, (uint64_t)sub_1BAEFCC08, (uint64_t)&v103[-6]);
    v65 = v122;
    sub_1BB874464();
    swift_release();
    sub_1BA4A2E80(v121, type metadata accessor for FormatVersionRequirement);
    v67 = v117;
    v66 = v118;
    v130 = v118[6];
    v68 = v104;
    v120(v117, v65, v104);
    swift_storeEnumTagMultiPayload();
    v128 = xmmword_1BB8D2D60;
    v129 = 0;
    v70 = *(_QWORD *)v125;
    v69 = *((_QWORD *)v125 + 1);
    v126 = xmmword_1BB8D2D60;
    v127 = 0;
    v71 = swift_allocObject();
    v72 = sub_1BA5193C4((uint64_t)&v126, v71 + 16, (uint64_t (*)(_QWORD))sub_1BAEB369C);
    *(_QWORD *)(v71 + 40) = v70;
    *(_QWORD *)(v71 + 48) = v69;
    MEMORY[0x1E0C80A78](v72);
    v103[-4] = sub_1BA90CF04;
    v103[-3] = 0;
    v101 = sub_1BAEB38A0;
    v102 = v71;
    swift_retain();
    sub_1BAE2B460(v67, 2, 0, 0, (uint64_t)sub_1BAEFCC08, (uint64_t)&v103[-6]);
    v73 = v123;
    sub_1BB874464();
    swift_release();
    sub_1BA4A2E80(v117, type metadata accessor for FormatVersionRequirement);
    v74 = v66;
    v75 = v73 + v66[7];
    v76 = (uint64_t)v116;
    v77 = (void (*)(char *, uint64_t, uint64_t))v120;
    v120((uint64_t)v116, v122, v68);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v75, 3, 0, 0, v76, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v76, type metadata accessor for FormatVersionRequirement);
    v78 = v73 + v74[8];
    v79 = (uint64_t)v115;
    v77(v115, v122, v68);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v78, 4, 0, 0, v79, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v79, type metadata accessor for FormatVersionRequirement);
    v80 = v73 + v74[9];
    v81 = (uint64_t)v114;
    v77(v114, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v80, 5, 0, 0, v81, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v81, type metadata accessor for FormatVersionRequirement);
    v82 = v73 + v74[10];
    v83 = (uint64_t)v113;
    v77(v113, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v82, 6, 0, 0, v83, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v83, type metadata accessor for FormatVersionRequirement);
    v84 = v73 + v74[11];
    v85 = (uint64_t)v112;
    v77(v112, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v84, 7, 0, 0, v85, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v112, type metadata accessor for FormatVersionRequirement);
    v86 = v123 + v118[12];
    v87 = v111;
    v120(v111, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v86, 8, 0, 0, v87, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v111, type metadata accessor for FormatVersionRequirement);
    v88 = v123 + v118[13];
    v89 = v110;
    v120(v110, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v88, 9, 0, 0, v89, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v110, type metadata accessor for FormatVersionRequirement);
    v90 = v123 + v118[14];
    v91 = v109;
    v120(v109, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v90, 10, 0, 0, v91, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v109, type metadata accessor for FormatVersionRequirement);
    v92 = v123 + v118[15];
    v93 = (uint64_t)v108;
    v120((uint64_t)v108, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v92, 11, 0, 0, v93, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v93, type metadata accessor for FormatVersionRequirement);
    v94 = v123 + v118[16];
    v95 = (uint64_t)v107;
    v120((uint64_t)v107, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v94, 12, 0, 0, v95, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v95, type metadata accessor for FormatVersionRequirement);
    v96 = v123 + v118[17];
    v97 = (uint64_t)v106;
    v120((uint64_t)v106, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v96, 13, 0, 0, v97, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v97, type metadata accessor for FormatVersionRequirement);
    v98 = v123 + v118[18];
    v99 = (uint64_t)v105;
    v120((uint64_t)v105, v122, v104);
    swift_storeEnumTagMultiPayload();
    sub_1BAD63A4C(v98, 14, 0, 0, v99, (uint64_t)sub_1BA90CF04, 0);
    v100 = v99;
  }
  sub_1BA4A2E80(v100, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))sub_1BAEB37A4);
}

uint64_t sub_1BA5B2DB8(_QWORD *a1)
{
  return FormatTagBinding.Command.encode(to:)(a1);
}

uint64_t FormatTagBinding.Command.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v47 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  MEMORY[0x1E0C80A78](v11);
  v48 = (char *)&v47 - v12;
  MEMORY[0x1E0C80A78](v13);
  v47 = (char *)&v47 - v14;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)v1;
  v18 = *(_QWORD *)(v1 + 8);
  v20 = *(unsigned __int8 *)(v1 + 16);
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BA6B8518();
  v50 = v17;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTagBinding.Command, v24, v21, (uint64_t)&type metadata for FormatTagBinding.Command, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v17, v23, (uint64_t)&off_1E734BD80);
  if (v20)
  {
    if (v20 == 1)
    {
      if (qword_1ED3C2478 != -1)
        swift_once();
      v25 = sub_1BB86EB84();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v27 = (uint64_t)v50;
      sub_1BA5B3470(4, v19, (uint64_t)v5);
      v28 = (uint64_t)v5;
    }
    else
    {
      if (v19 | v18)
      {
        if (v19 ^ 1 | v18)
        {
          if (qword_1ED3C6D18 != -1)
            swift_once();
          v45 = sub_1BB86EB84();
          v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476B60);
          v41 = (uint64_t)v49;
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v49, v46, v45);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          v42 = 3;
        }
        else
        {
          if (qword_1ED3C2478 != -1)
            swift_once();
          v39 = sub_1BB86EB84();
          v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476C20);
          v41 = (uint64_t)v48;
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v48, v40, v39);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          v42 = 1;
        }
      }
      else
      {
        if (qword_1ED3C2478 != -1)
          swift_once();
        v43 = sub_1BB86EB84();
        v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C20);
        v41 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v47, v44, v43);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        v42 = 0;
      }
      v27 = (uint64_t)v50;
      sub_1BA5B3308(v42, v41);
      v28 = v41;
    }
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  else
  {
    sub_1BA6F3F88();
    v30 = &v10[*(int *)(v29 + 48)];
    v31 = &v10[*(int *)(v29 + 64)];
    sub_1BA5E7FF4(v19);
    v32 = qword_1ED3C2478;
    swift_bridgeObjectRetain();
    if (v32 != -1)
      swift_once();
    v33 = sub_1BB86EB84();
    v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C20);
    v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
    v35(v10, v34, v33);
    if (qword_1ED3C6D18 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476B60);
    v35(v30, v36, v33);
    type metadata accessor for FormatVersionRequirement.Value(0);
    *(_QWORD *)v31 = 0;
    *((_QWORD *)v31 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    v37 = (uint64_t)v50;
    sub_1BACFAC50(2, v19, v18, (uint64_t)v10);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BA7EDFFC(v19, v18, 0);
  }
}

uint64_t sub_1BA5B3308(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE9FFC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B342C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5B342C()
{
  unint64_t result;

  result = qword_1ED39B3A0;
  if (!qword_1ED39B3A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DFFB4, &_s14descr1E72DA4C9V7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED39B3A0);
  }
  return result;
}

uint64_t sub_1BA5B3470(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE9FFC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEE47D0, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B342C();
    v15 = 0uLL;
    sub_1BB874464();
    if ((sub_1BA5B35E8(v16, MEMORY[0x1E0DEE9D8]) & 1) == 0)
    {
      v15 = xmmword_1BB87FC90;
      sub_1BA5B369C();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BA5B35E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 48);
    for (i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      v5 = *i;
      v6 = *v3;
      v7 = *(i - 2) == *(v3 - 2) && *(i - 1) == *(v3 - 1);
      if (!v7 && (sub_1BB874398() & 1) == 0)
        break;
      v8 = *(_QWORD *)(v5 + 16) == *(_QWORD *)(v6 + 16) && *(_QWORD *)(v5 + 24) == *(_QWORD *)(v6 + 24);
      if (!v8 && (sub_1BB874398() & 1) == 0)
        break;
      v3 += 3;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

unint64_t sub_1BA5B369C()
{
  unint64_t result;

  result = qword_1ED39B478;
  if (!qword_1ED39B478)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagNavigate, &type metadata for FormatTagNavigate);
    atomic_store(result, (unint64_t *)&qword_1ED39B478);
  }
  return result;
}

id FeedContext.premiumBadge(for:hasAccess:)@<X0>(id result@<X0>, char a2@<W1>, char *a3@<X8>)
{
  uint64_t v3;
  char v5;
  char v7;

  if ((*(_BYTE *)(v3 + 11) & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    v7 = *(_BYTE *)(v3 + 10);
    result = objc_msgSend(*(id *)v3, sel_containsHeadline_, result);
    v5 = v7 & 1 | ((a2 & 1) == 0);
    if (!(_DWORD)result)
      v5 = 0;
  }
  *a3 = v5;
  return result;
}

uint64_t sub_1BA5B3744(_QWORD *a1)
{
  return FormatInteger.encode(to:)(a1);
}

uint64_t FormatInteger.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[3];
  _BYTE v27[24];
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - v7;
  v9 = *v1;
  v10 = v1[1];
  v11 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  if (v11 == 1)
  {
    v12 = a1[3];
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v12);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v14 = sub_1BB86EB84();
    v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v5, v15, v14);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v16 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1E0C80A78](v16);
    v26[-2] = v9;
    v26[-1] = v10;
    v17 = v29;
    sub_1BA69F160((uint64_t)v5, (uint64_t)sub_1BA9C04CC, (uint64_t)&v26[-4], v12, v13);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    if (!v17)
    {
      v26[1] = 0x286E6F6974706FLL;
      v26[2] = 0xE700000000000000;
      sub_1BB872AFC((_QWORD *)0x286E6F6974706FLL);
      sub_1BB872AFC(v18);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
      sub_1BB8743E0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v23 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1E0C80A78](v23);
    v26[-2] = v9;
    v24 = v29;
    sub_1BA69F160((uint64_t)v8, (uint64_t)sub_1BA9C04D4, (uint64_t)&v26[-4], v19, v20);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    if (!v24)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
      sub_1BB8743F8();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

_QWORD *initializeWithCopy for FeedSlot(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA5B3B24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingTextExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int16 v56;
  unsigned __int8 v57;
  __int128 v58;
  char v59;
  __int128 v60;
  char v61;

  v3 = v2;
  v49 = a2;
  sub_1BAE84E04();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE84E7C();
  sub_1BA4A2870(&qword_1ED3D12A0, (uint64_t (*)(uint64_t))sub_1BAE84E7C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v48 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v6;
  v13 = v49;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *(&v36 - 4) = (uint64_t)&_s14descr1E72CC7E9O10CodingKeysON;
      *(&v36 - 3) = sub_1BAE84EFC();
      *(&v36 - 2) = sub_1BA5B3FF0();
      *(&v36 - 1) = sub_1BAE84F40();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726AB88);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v12);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA646348();
  v60 = 0uLL;
  v61 = 0;
  sub_1BB8740D4();
  v43 = v50;
  v44 = v51;
  v45 = v52;
  v46 = v53;
  v18 = v55;
  v47 = v54;
  v19 = v56;
  v20 = HIBYTE(v56);
  v42 = xmmword_1BB8A1A10;
  v60 = xmmword_1BB8A1A10;
  v61 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v58 = v42;
    v59 = 0;
    sub_1BA5B4034();
    sub_1BB8740D4();
    v40 = v18;
    v41 = v19;
    LODWORD(v42) = v20;
    v27 = v50;
    v39 = v51;
    v38 = v52;
    v28 = v54;
    v37 = v53;
    v29 = v55;
    v30 = v56 | (v57 << 16);
  }
  else
  {
    v40 = v18;
    v41 = v19;
    LODWORD(v42) = v20;
    v39 = 0;
    v38 = 0;
    v37 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 12582912;
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v12);
  v31 = v44;
  *(_QWORD *)v13 = v43;
  *(_QWORD *)(v13 + 8) = v31;
  v32 = v46;
  *(_QWORD *)(v13 + 16) = v45;
  *(_QWORD *)(v13 + 24) = v32;
  v33 = v40;
  *(_QWORD *)(v13 + 32) = v47;
  *(_QWORD *)(v13 + 40) = v33;
  *(_BYTE *)(v13 + 48) = v41;
  *(_BYTE *)(v13 + 49) = v42;
  v34 = v39;
  *(_QWORD *)(v13 + 56) = v27;
  *(_QWORD *)(v13 + 64) = v34;
  v35 = v37;
  *(_QWORD *)(v13 + 72) = v38;
  *(_QWORD *)(v13 + 80) = v35;
  *(_QWORD *)(v13 + 88) = v28;
  *(_QWORD *)(v13 + 96) = v29;
  *(_BYTE *)(v13 + 106) = BYTE2(v30);
  *(_WORD *)(v13 + 104) = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5B3FF0()
{
  unint64_t result;

  result = qword_1ED3CBEC0;
  if (!qword_1ED3CBEC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD390, &_s14descr1E72CC7E9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CBEC0);
  }
  return result;
}

unint64_t sub_1BA5B4034()
{
  unint64_t result;

  result = qword_1ED3B8790;
  if (!qword_1ED3B8790)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic, &type metadata for FormatBindingTextExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3B8790);
  }
  return result;
}

uint64_t sub_1BA5B4078(_QWORD *a1)
{
  return FormatAccessibility.encode(to:)(a1);
}

uint64_t FormatAccessibility.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[7];
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[6] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[5] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[4] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v25[3] = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  v25[2] = (char *)v25 - v12;
  MEMORY[0x1E0C80A78](v13);
  v25[1] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  v26 = *v1;
  v27 = a1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = v28;
  sub_1BA69F160((uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, v19, v20);
  if (!v23)
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA5B4710@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontScaling.init(from:)(a1, a2);
}

uint64_t FormatFontScaling.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  __int128 v26;
  uint64_t v27;

  v3 = v2;
  v27 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v16;
      *(_QWORD *)(v21 + 16) = &unk_1E726B9B0;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5B4A4C();
  v26 = 0uLL;
  sub_1BB8740D4();
  if ((v23 & 1) != 0)
  {
    v26 = xmmword_1BB87FC90;
    sub_1BA5B4A08();
    sub_1BB8740D4();
    v17 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v23;
    v19 = v24 | (v25 << 8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = 0;
    v19 = 3072;
    v17 = v27;
  }
  *(_QWORD *)v17 = v18;
  *(_WORD *)(v17 + 8) = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5B4A08()
{
  unint64_t result;

  result = qword_1ED3B6688;
  if (!qword_1ED3B6688)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingData, &type metadata for FormatFontScalingData);
    atomic_store(result, (unint64_t *)&qword_1ED3B6688);
  }
  return result;
}

unint64_t sub_1BA5B4A4C()
{
  unint64_t result;

  result = qword_1ED3C7960;
  if (!qword_1ED3C7960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB428, &_s10CodingTypeON_97);
    atomic_store(result, (unint64_t *)&qword_1ED3C7960);
  }
  return result;
}

uint64_t sub_1BA5B4A90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontScalingData.init(from:)(a1, a2);
}

uint64_t FormatFontScalingData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  char v32;

  v3 = v2;
  v28 = a2;
  sub_1BAE90F04();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE90F7C();
  sub_1BA4A2870(&qword_1ED3D0FD0, (uint64_t (*)(uint64_t))sub_1BAE90F7C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v28 = v13;
      v20 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v27 - 4) = (uint64_t)&_s10CodingKeysON_135;
      *(&v27 - 3) = sub_1BAE90FFC();
      *(&v27 - 2) = sub_1BA5B4E08();
      *(&v27 - 1) = sub_1BAE91040();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726BA00);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA689CD8();
  v29 = 0uLL;
  v30 = 0;
  sub_1BB874068();
  v18 = v31;
  v19 = v32;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA5B4E4C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v26 = v31;
  *(_QWORD *)v12 = v18;
  *(_BYTE *)(v12 + 8) = v19;
  *(_BYTE *)(v12 + 9) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5B4E08()
{
  unint64_t result;

  result = qword_1ED3C9868;
  if (!qword_1ED3C9868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB3A0, &_s10CodingKeysON_135);
    atomic_store(result, (unint64_t *)&qword_1ED3C9868);
  }
  return result;
}

unint64_t sub_1BA5B4E4C()
{
  unint64_t result;

  result = qword_1ED3B6AC0;
  if (!qword_1ED3B6AC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3B6AC0);
  }
  return result;
}

void sub_1BA5B4E90(_QWORD *a1)
{
  FormatAsyncImageContent.encode(to:)(a1);
}

void FormatAsyncImageContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[38];

  v2 = v1;
  v4 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v4);
  v30[6] = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v6);
  v30[5] = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v30[4] = (char *)v30 - v9;
  MEMORY[0x1E0C80A78](v10);
  v30[3] = (char *)v30 - v11;
  MEMORY[0x1E0C80A78](v12);
  v30[2] = (char *)v30 - v13;
  MEMORY[0x1E0C80A78](v14);
  v30[0] = (char *)v30 - v15;
  MEMORY[0x1E0C80A78](v16);
  v30[1] = (char *)v30 - v17;
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v2;
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v28 = sub_1BA6B8518();
  v30[37] = v24;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAsyncImageContent, v29, v26, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v24, v28, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5B5120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA728238(v1 + 16, v2 - 304);
  sub_1BA5769D0(v2 - 304, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7147C0);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v3 = sub_1BB86EB84();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v4, v3);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v5 = *(_QWORD *)(v2 - 72);
  sub_1BA5B5A08(1, v2 - 304, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v5, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA5769D0(v2 - 304, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF82C);
}

uint64_t sub_1BA5B5A08(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[48];

  v16[47] = a1;
  sub_1BA728238(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF63FC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5B5BBC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5B5B78()
{
  unint64_t result;

  result = qword_1ED3A70B8;
  if (!qword_1ED3A70B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5B28, &_s10CodingTypeON_127);
    atomic_store(result, (unint64_t *)&qword_1ED3A70B8);
  }
  return result;
}

unint64_t sub_1BA5B5BBC()
{
  unint64_t result;

  result = qword_1ED39B830;
  if (!qword_1ED39B830)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeBinding, &type metadata for FormatImageNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B830);
  }
  return result;
}

uint64_t sub_1BA5B5C00(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;

  v26 = a1;
  v7 = a2[5];
  v23 = a2[4];
  v24 = v7;
  v25 = *((_QWORD *)a2 + 12);
  v8 = a2[1];
  v19 = *a2;
  v20 = v8;
  v9 = a2[3];
  v21 = a2[2];
  v22 = v9;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF63FC;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA58955C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5B5D80(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF63FC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5B60E0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5B5EE8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF63FC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA55B8C4(0, &qword_1ED3B5528, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t)&type metadata for FormatImage);
    sub_1BA5B6078();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5B6078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B498;
  if (!qword_1ED39B498)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5528, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t)&type metadata for FormatImage);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B498);
  }
  return result;
}

unint64_t sub_1BA5B60E0()
{
  unint64_t result;

  result = qword_1ED39B370;
  if (!qword_1ED39B370)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStyleImage, &type metadata for FormatStyleImage);
    atomic_store(result, (unint64_t *)&qword_1ED39B370);
  }
  return result;
}

uint64_t sub_1BA5B6124(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF63FC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatRemoteImage();
    sub_1BA4A2870(&qword_1ED39B430, (uint64_t (*)(uint64_t))type metadata accessor for FormatRemoteImage, (uint64_t)&protocol conformance descriptor for FormatRemoteImage);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5B62B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5B62D8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5B62D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (**v47)(char *, _QWORD);
  unint64_t v48;
  unsigned __int8 v49;
  __int128 v50;
  char v51;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v3 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  v46 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v35 - v4;
  sub_1BAEECEFC();
  v7 = v6;
  v8 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAEB5FC8();
  sub_1BA4A2870(&qword_1ED3D0C50, (uint64_t (*)(uint64_t))sub_1BAEB5FC8, (uint64_t)&unk_1BB8FFC6C);
  v12 = v47;
  sub_1BB87468C();
  v13 = v12;
  if (v12)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v44 = v5;
  v47 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v16 = v45;
  v17 = v46;
  if ((v15 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v46 = v7;
      v24 = *((_QWORD *)v20 - 2);
      v25 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      *(&v35 - 4) = (uint64_t)&_s10CodingKeysON_62;
      *(&v35 - 3) = sub_1BAEB6048();
      *(&v35 - 2) = sub_1BA5B69EC();
      *(&v35 - 1) = sub_1BAEB608C();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E7251028);
      swift_release_n();
      sub_1BA98D1F0();
      v13 = (void *)swift_allocError();
      *(_QWORD *)v28 = v24;
      *(_QWORD *)(v28 + 8) = v25;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      v47[1](v10, v46);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v10, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEECEFC);
  v23 = v22;
  v50 = xmmword_1BB8A1A10;
  v51 = 0;
  sub_1BA5B6A30();
  sub_1BB8740D4();
  v40 = v21;
  v42 = v48;
  v43 = v49;
  sub_1BA4CDF6C(0, &qword_1ED3B4028, (uint64_t (*)(void))sub_1BA835D64, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v50 = xmmword_1BB8D2D60;
  v51 = 0;
  v41 = sub_1BA5B6A74();
  sub_1BB874068();
  v39 = v48;
  v50 = xmmword_1BB8D2D70;
  v51 = 0;
  sub_1BB874068();
  v38 = v48;
  v50 = xmmword_1BB8D2D90;
  v51 = 0;
  sub_1BB874068();
  v41 = v48;
  v50 = xmmword_1BB8D2D80;
  v51 = 0;
  v36 = sub_1BB87402C();
  v37 = v29;
  v50 = xmmword_1BB8D2DA0;
  v51 = 0;
  sub_1BA4FB6A0();
  sub_1BB8740D4();
  v31 = v44;
  v32 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v16);
  v47[1](v10, v7);
  type metadata accessor for FormatRepeatNode();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v40;
  *(_QWORD *)(KeyPath + 24) = v23;
  *(_QWORD *)(KeyPath + 32) = v42;
  *(_BYTE *)(KeyPath + 40) = v43;
  v33 = v38;
  *(_QWORD *)(KeyPath + 48) = v39;
  *(_QWORD *)(KeyPath + 56) = v33;
  v34 = v36;
  *(_QWORD *)(KeyPath + 64) = v41;
  *(_QWORD *)(KeyPath + 72) = v34;
  *(_QWORD *)(KeyPath + 80) = v37;
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 88) = v32;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

unint64_t sub_1BA5B69EC()
{
  unint64_t result;

  result = qword_1ED3C7608;
  if (!qword_1ED3C7608)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7418, &_s10CodingKeysON_62);
    atomic_store(result, (unint64_t *)&qword_1ED3C7608);
  }
  return result;
}

unint64_t sub_1BA5B6A30()
{
  unint64_t result;

  result = qword_1ED3B7B90;
  if (!qword_1ED3B7B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRepeatNodeIteration, &type metadata for FormatRepeatNodeIteration);
    atomic_store(result, (unint64_t *)&qword_1ED3B7B90);
  }
  return result;
}

unint64_t sub_1BA5B6A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B4020;
  if (!qword_1ED3B4020)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B4028, (uint64_t (*)(void))sub_1BA835D64, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B4020);
  }
  return result;
}

uint64_t sub_1BA5B6ADC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v21;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E726BFA0;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5B6D6C();
  v22 = 0;
  v23 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v12 = byte_1BB8D2D12[v24];
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5B6D6C()
{
  unint64_t result;

  result = qword_1ED3C98D8;
  if (!qword_1ED3C98D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94E628, &_s14descr1E7342C99C4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C98D8);
  }
  return result;
}

uint64_t sub_1BA5B6DB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatItem.init(from:)(a1, a2);
}

uint64_t FormatItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  __int128 v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  char *v116;
  __int128 v117;
  char v118;
  __int128 v119;
  char v120;

  v99 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3BBE50, (void (*)(void))sub_1BA8374B4, (void (*)(void))sub_1BA8374F8);
  v103 = v3;
  v98 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v102 = (char *)&v87 - v4;
  sub_1BA692844();
  v105 = v5;
  v100 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v115 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v106 = v7;
  v101 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v109 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  v108 = v9;
  v104 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v107 = (char *)&v87 - v10;
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v113 = v11;
  *(_QWORD *)&v110 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v112 = (char *)&v87 - v12;
  sub_1BAEFBAC0(0, &qword_1ED3BBE80, (void (*)(void))sub_1BA833E84, (void (*)(void))sub_1BA833F50);
  *(_QWORD *)&v111 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v87 - v15;
  sub_1BAE9B970();
  v114 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9B9E8();
  sub_1BA4A2870(&qword_1ED3D1470, (uint64_t (*)(uint64_t))sub_1BAE9B9E8, (uint64_t)&unk_1BB8FFC6C);
  v21 = v116;
  sub_1BB87468C();
  v22 = v21;
  if (v21)
  {
    v23 = a1;
LABEL_11:
    sub_1BA7F8B78(v23, (uint64_t)v22);
    swift_willThrow();

    v47 = (uint64_t)v23;
    return __swift_destroy_boxed_opaque_existential_1(v47);
  }
  v116 = v16;
  v96 = v14;
  v97 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24 = sub_1BB872874();
  v25 = Dictionary<>.errorOnUnknownKeys.getter(v24);
  swift_bridgeObjectRelease();
  v23 = a1;
  v26 = v20;
  v27 = v114;
  v28 = v115;
  if ((v25 & 1) != 0)
  {
    v29 = sub_1BB8740EC();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = (_BYTE *)(v29 + 48);
      while (*v31 != 1)
      {
        v31 += 24;
        if (!--v30)
          goto LABEL_8;
      }
      v36 = v26;
      v37 = *((_QWORD *)v31 - 2);
      v38 = *((_QWORD *)v31 - 1);
      swift_bridgeObjectRetain_n();
      v39 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v39);
      *(&v87 - 4) = (uint64_t)&_s10CodingKeysON_110;
      *(&v87 - 3) = sub_1BAE9BA68();
      *(&v87 - 2) = sub_1BA5B7CAC();
      *(&v87 - 1) = sub_1BAE9BAAC();
      swift_getKeyPath();
      swift_retain();
      v40 = sub_1BAE71220((uint64_t)&unk_1E7250810);
      swift_release_n();
      sub_1BA98D1F0();
      v22 = (void *)swift_allocError();
      *(_QWORD *)v41 = v37;
      *(_QWORD *)(v41 + 8) = v38;
      *(_QWORD *)(v41 + 16) = v40;
      *(_OWORD *)(v41 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v37, v38, 1);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v36, v27);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  v119 = 0uLL;
  v120 = 0;
  v32 = sub_1BB874098();
  v34 = v33;
  v119 = xmmword_1BB8A1A10;
  v120 = 0;
  v35 = sub_1BB87402C();
  v43 = v42;
  v94 = v35;
  v95 = v32;
  v119 = xmmword_1BB8D2D60;
  v120 = 0;
  v44 = sub_1BB87402C();
  v46 = v45;
  v93 = v44;
  v119 = xmmword_1BB8D2D70;
  v120 = 0;
  sub_1BA5B7D34();
  sub_1BB8740D4();
  v91 = v34;
  v49 = *((_QWORD *)&v117 + 1);
  v90 = v117;
  v89 = xmmword_1BB8D2D90;
  v119 = xmmword_1BB8D2D90;
  v120 = 0;
  v50 = sub_1BB8740F8();
  v92 = v49;
  if ((v50 & 1) != 0)
  {
    v117 = v89;
    v118 = 0;
    sub_1BAE8370C();
    v51 = v111;
    sub_1BB8740D4();
    *(_QWORD *)&v89 = v46;
    v52 = v116;
    v88 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v52, v51);
  }
  else
  {
    *(_QWORD *)&v89 = v46;
    v88 = MEMORY[0x1E0DEE9D8];
  }
  v119 = xmmword_1BB8D2D80;
  v120 = 0;
  sub_1BA4FB6A0();
  v53 = v112;
  v54 = v113;
  sub_1BB8740D4();
  v116 = v43;
  v55 = sub_1BB86DD08();
  v56 = v54;
  v57 = v55;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v53, v56);
  type metadata accessor for FormatItemNodeStyle(0);
  v119 = xmmword_1BB8D2DA0;
  v120 = 0;
  sub_1BA4A2870(&qword_1ED3C8418, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  sub_1BB874068();
  v113 = v57;
  v58 = (char *)v117;
  v111 = xmmword_1BB8D2DB0;
  v119 = xmmword_1BB8D2DB0;
  v120 = 0;
  v59 = sub_1BB8740F8();
  v60 = v89;
  v112 = v58;
  if ((v59 & 1) != 0)
  {
    v117 = v111;
    v118 = 0;
    sub_1BAE7C214();
    v61 = v107;
    v62 = v108;
    sub_1BB8740D4();
    *(_QWORD *)&v111 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v61, v62);
  }
  else
  {
    *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
  }
  v63 = v109;
  v110 = xmmword_1BB8D2DD0;
  v119 = xmmword_1BB8D2DD0;
  v120 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v117 = v110;
    v118 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v64 = v106;
    sub_1BB8740D4();
    *(_QWORD *)&v89 = v60;
    v65 = sub_1BB86DD08();
    v66 = v64;
    v67 = v65;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v63, v66);
  }
  else
  {
    *(_QWORD *)&v89 = v60;
    v67 = MEMORY[0x1E0DEE9E8];
  }
  v110 = xmmword_1BB8D2DE0;
  v119 = xmmword_1BB8D2DE0;
  v120 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v117 = v110;
    v118 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v68 = v105;
    sub_1BB8740D4();
    v69 = v28;
    v70 = v26;
    *(_QWORD *)&v110 = v23;
    v109 = (char *)sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v69, v68);
  }
  else
  {
    v70 = v26;
    *(_QWORD *)&v110 = v23;
    v109 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v71 = v67;
  v115 = xmmword_1BB8D2DF0;
  v119 = xmmword_1BB8D2DF0;
  v120 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v117 = v115;
    v118 = 0;
    sub_1BAE7C1AC();
    v72 = v102;
    v73 = v27;
    v74 = v103;
    sub_1BB8740D4();
    v75 = sub_1BB86DD08();
    v76 = v74;
    v77 = v75;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v72, v76);
  }
  else
  {
    v73 = v27;
    v77 = MEMORY[0x1E0DEE9D8];
  }
  v119 = xmmword_1BB8D2E00;
  v120 = 0;
  sub_1BA5B7CF0();
  sub_1BB874068();
  v78 = v113;
  (*(void (**)(char *, uint64_t))(v97 + 8))(v70, v73);
  v79 = v117;
  v80 = v99;
  v81 = v91;
  *v99 = v95;
  v80[1] = v81;
  v82 = v116;
  v80[2] = v94;
  v80[3] = (uint64_t)v82;
  v83 = v89;
  v80[4] = v93;
  v80[5] = v83;
  v84 = v92;
  v80[6] = v90;
  v80[7] = v84;
  v80[8] = v88;
  v80[9] = v78;
  v85 = v111;
  v80[10] = (uint64_t)v112;
  v80[11] = v85;
  v86 = v109;
  v47 = v110;
  v80[12] = v71;
  v80[13] = (uint64_t)v86;
  v80[14] = v77;
  *((_BYTE *)v80 + 120) = v79;
  return __swift_destroy_boxed_opaque_existential_1(v47);
}

unint64_t sub_1BA5B7CAC()
{
  unint64_t result;

  result = qword_1ED3C6418;
  if (!qword_1ED3C6418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9D38, &_s10CodingKeysON_110);
    atomic_store(result, (unint64_t *)&qword_1ED3C6418);
  }
  return result;
}

unint64_t sub_1BA5B7CF0()
{
  unint64_t result;

  result = qword_1ED3B7100;
  if (!qword_1ED3B7100)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityRole, &type metadata for FormatAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1ED3B7100);
  }
  return result;
}

unint64_t sub_1BA5B7D34()
{
  unint64_t result;

  result = qword_1ED3B4070;
  if (!qword_1ED3B4070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemKind, &type metadata for FormatItemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3B4070);
  }
  return result;
}

uint64_t sub_1BA5B7D78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5B7DA0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5B7DA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  int v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  int v62;
  __int128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  __int128 v88;
  __int128 v89;
  char v90;
  __int128 v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;

  sub_1BA5B8DAC();
  v86 = v2;
  v84 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v85 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v87 = (char *)&v59 - v8;
  sub_1BAEF093C();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9F18C();
  sub_1BA4A2870(&qword_1ED3D0DE0, (uint64_t (*)(uint64_t))sub_1BAE9F18C, (uint64_t)&unk_1BB8FFC6C);
  v15 = (void *)v88;
  sub_1BB87468C();
  v16 = v15;
  if (v15)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  v83 = v6;
  *(_QWORD *)&v88 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_1BB872874();
  v18 = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v10;
  v20 = v87;
  if ((v18 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v29 = *((_QWORD *)v23 - 2);
      v28 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BAE9F20C();
      sub_1BA5B8C9C();
      sub_1BAE9F250();
      swift_getKeyPath();
      swift_retain();
      v14 = sub_1BAE71220((uint64_t)&unk_1E72519E8);
      swift_release_n();
      sub_1BA98D1F0();
      v31 = swift_allocError();
      *(_QWORD *)v32 = v29;
      *(_QWORD *)(v32 + 8) = v28;
      *(_QWORD *)(v32 + 16) = v14;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v33 = v28;
      v16 = (void *)v31;
      sub_1BA69C828(v29, v33, 1);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v13, v19);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v24 = sub_1BAE0F8F8((uint64_t)v13, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF093C);
  v26 = v25;
  v82 = v24;
  v91 = xmmword_1BB8A1A10;
  LOBYTE(v92) = 0;
  v27 = sub_1BB874098();
  v35 = v34;
  v81 = v27;
  v89 = xmmword_1BB8D2D60;
  v90 = 0;
  sub_1BA5B8D24();
  sub_1BB874068();
  v72 = v35;
  v74 = v26;
  v75 = *((_QWORD *)&v91 + 1);
  v73 = v91;
  v76 = v92;
  v77 = v93;
  v37 = v95;
  v78 = v94;
  v79 = v96;
  v80 = v97;
  v38 = v98;
  v89 = xmmword_1BB8D2D70;
  v90 = 0;
  sub_1BA5B8D68();
  sub_1BB874068();
  v70 = v38;
  v71 = v37;
  v39 = v91;
  v64 = v92;
  v65 = v93;
  v66 = v94;
  v67 = v95;
  v68 = v96;
  v69 = v97;
  type metadata accessor for FormatItemNodeAction();
  v91 = xmmword_1BB8D2D90;
  LOBYTE(v92) = 0;
  sub_1BA4A2870(&qword_1ED3C8EF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
  sub_1BB874068();
  v63 = v39;
  v91 = xmmword_1BB8D2D80;
  LOBYTE(v92) = 0;
  v62 = sub_1BB874038();
  v91 = xmmword_1BB8D2DA0;
  LOBYTE(v92) = 0;
  v61 = sub_1BB874038();
  v91 = xmmword_1BB8D2DB0;
  LOBYTE(v92) = 0;
  sub_1BA5B8CE0();
  sub_1BB874068();
  v40 = *((_QWORD *)&v89 + 1);
  v60 = v89;
  v59 = xmmword_1BB8D2DD0;
  v91 = xmmword_1BB8D2DD0;
  LOBYTE(v92) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v41 = v80;
    v42 = (uint64_t)v20;
    v89 = v59;
    v90 = 0;
    sub_1BA4A2870(&qword_1ED3C4630, (uint64_t (*)(uint64_t))sub_1BA5B8DAC, MEMORY[0x1E0DB3610]);
    sub_1BB8740D4();
    v43 = v85;
    v44 = v86;
    *(_QWORD *)&v59 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v43, v44);
  }
  else
  {
    v41 = v80;
    v42 = (uint64_t)v20;
    *(_QWORD *)&v59 = MEMORY[0x1E0DEE9D8];
  }
  v89 = xmmword_1BB8D2DE0;
  v90 = 0;
  sub_1BAE9F414();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v13, v19);
  v88 = v91;
  v45 = v93;
  v87 = v92;
  LODWORD(v86) = (unsigned __int16)v94;
  v46 = (uint64_t)v83;
  sub_1BA646EFC(v42, (uint64_t)v83, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  type metadata accessor for FormatItemNodeStyle(0);
  v14 = swift_allocObject();
  swift_beginAccess();
  v47 = v74;
  *(_QWORD *)(v14 + 16) = v82;
  *(_QWORD *)(v14 + 24) = v47;
  v48 = v72;
  *(_QWORD *)(v14 + 32) = v81;
  *(_QWORD *)(v14 + 40) = v48;
  v49 = v75;
  *(_QWORD *)(v14 + 48) = v73;
  *(_QWORD *)(v14 + 56) = v49;
  v50 = v77;
  *(_QWORD *)(v14 + 64) = v76;
  *(_QWORD *)(v14 + 72) = v50;
  v51 = v71;
  *(_QWORD *)(v14 + 80) = v78;
  *(_QWORD *)(v14 + 88) = v51;
  *(_QWORD *)(v14 + 96) = v79;
  *(_QWORD *)(v14 + 104) = v41;
  *(_BYTE *)(v14 + 112) = v70;
  v52 = *((_QWORD *)&v63 + 1);
  *(_QWORD *)(v14 + 120) = v63;
  *(_QWORD *)(v14 + 128) = v52;
  v53 = v65;
  *(_QWORD *)(v14 + 136) = v64;
  *(_QWORD *)(v14 + 144) = v53;
  v54 = v67;
  *(_QWORD *)(v14 + 152) = v66;
  *(_QWORD *)(v14 + 160) = v54;
  *(_QWORD *)(v14 + 168) = v68;
  v55 = v14 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(_BYTE *)(v14 + 176) = v69;
  sub_1BA646EFC(v46, v55, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  *(_BYTE *)(v14 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v62;
  *(_BYTE *)(v14 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v61;
  v56 = (_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *v56 = v60;
  v56[1] = v40;
  v57 = (_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v57 = v59;
  v58 = v14 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)v58 = v88;
  *(_QWORD *)(v58 + 16) = v87;
  *(_QWORD *)(v58 + 24) = v45;
  *(_WORD *)(v58 + 32) = v86;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v14;
}

uint64_t type metadata accessor for FormatItemNodeStyle(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C8420);
}

unint64_t sub_1BA5B8C9C()
{
  unint64_t result;

  result = qword_1ED3C8310;
  if (!qword_1ED3C8310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9B00, &_s10CodingKeysON_107);
    atomic_store(result, (unint64_t *)&qword_1ED3C8310);
  }
  return result;
}

unint64_t sub_1BA5B8CE0()
{
  unint64_t result;

  result = qword_1ED3CCF80;
  if (!qword_1ED3CCF80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyle, &type metadata for FormatItemNodeSwipeActionStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3CCF80);
  }
  return result;
}

unint64_t sub_1BA5B8D24()
{
  unint64_t result;

  result = qword_1ED3B7380;
  if (!qword_1ED3B7380)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPreviewParameters, &type metadata for FormatPreviewParameters);
    atomic_store(result, (unint64_t *)&qword_1ED3B7380);
  }
  return result;
}

unint64_t sub_1BA5B8D68()
{
  unint64_t result;

  result = qword_1ED3B5B30;
  if (!qword_1ED3B5B30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection, &type metadata for FormatCellSelection);
    atomic_store(result, (unint64_t *)&qword_1ED3B5B30);
  }
  return result;
}

void sub_1BA5B8DAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4638)
  {
    type metadata accessor for FormatItemNodeStyle.Selector(255);
    sub_1BA4A2870((unint64_t *)&unk_1ED3C8350, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
    sub_1BA4A2870(&qword_1ED3C8348, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4638);
  }
}

uint64_t sub_1BA5B8E50(_QWORD *a1)
{
  return FormatWebEmbedNodeStyle.encode(to:)(a1);
}

uint64_t FormatWebEmbedNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t *v73;
  char *v74;

  v2 = v1;
  v4 = *v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v67 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v68 = (char *)&v64 - v8;
  MEMORY[0x1E0C80A78](v9);
  v69 = (char *)&v64 - v10;
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v64 - v12;
  MEMORY[0x1E0C80A78](v13);
  v71 = (char *)&v64 - v14;
  MEMORY[0x1E0C80A78](v15);
  v72 = (char *)&v64 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v64 - v18;
  sub_1BAE7B508(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v25 = sub_1BAE7B5F8();
  v26 = sub_1BA4A2870(&qword_1ED3D10F0, (uint64_t (*)(uint64_t))sub_1BAE7B5F8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v27, v24, v4, v25, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v22, v26, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v29 = v2[2];
  v28 = v2[3];
  v73 = v2;
  v30 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v30 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C20);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v33(v19, v32, v31);
  v34 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = (uint64_t)v74;
  sub_1BAD265E8(v29, v28, 0, 0, 0, (uint64_t)v19, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE48884, (uint64_t (*)(uint64_t))sub_1BAE7B580, &qword_1ED3AECF0);
  if (v35)
  {
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v39 = (uint64_t)v22;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v72;
    v37 = v73;
    v38 = v73[5];
    v74 = (char *)v73[4];
    v33(v72, v32, v31);
    v66 = v34;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD14D60((uint64_t)v74, v38, 1, 0, 0, v36, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = v37[6];
    v42 = v37[7];
    v43 = v32;
    v44 = v33;
    v45 = v37;
    v46 = *((_BYTE *)v37 + 64);
    v47 = (uint64_t)v71;
    v64 = v43;
    v65 = v44;
    ((void (*)(char *))v44)(v71);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C54(v41, v42, v46);
    v72 = (char *)v42;
    v74 = v22;
    sub_1BAD48410(v41, v42, v46, 2, 0, 0, v47, (uint64_t)sub_1BA90CF04);
    v48 = v31;
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v41, (uint64_t)v72, v46);
    v49 = v45[9];
    v50 = v45[10];
    v51 = *((_BYTE *)v45 + 88);
    sub_1BA6E6C54(v49, v50, v51);
    if (qword_1ED3C4168 != -1)
      swift_once();
    v52 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476900);
    v53 = (uint64_t)v70;
    v65(v70, v52, v48);
    swift_storeEnumTagMultiPayload();
    v39 = (uint64_t)v74;
    sub_1BAD48410(v49, v50, v51, 3, 0, 0, v53, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v49, v50, v51);
    v54 = v64;
    v55 = *((_BYTE *)v73 + 89);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v56 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476B78);
    v57 = (uint64_t)v69;
    v65(v69, v56, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BAD48644(v55, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = *((_BYTE *)v73 + 90);
    if (qword_1ED3C6D00 != -1)
      swift_once();
    v59 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED476B48);
    v60 = (uint64_t)v68;
    v61 = v65;
    v65(v68, v59, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BAD48644(v58, 5, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v62 = (uint64_t)v67;
    v61(v67, v54, v48);
    swift_storeEnumTagMultiPayload();
    v63 = swift_bridgeObjectRetain();
    sub_1BAD2814C(v63, 6, 0, 0);
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BAE7B508);
}

uint64_t sub_1BA5B95D4(_QWORD *a1)
{
  return FormatGradientDirection.encode(to:)(a1);
}

uint64_t FormatGradientDirection.encode(to:)(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v26;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  sub_1BAE94990(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  v15 = v1[2];
  v16 = v1[3];
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE94888();
  v20 = sub_1BA4A2870(&qword_1ED3D1070, (uint64_t (*)(uint64_t))sub_1BAE94888, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGradientDirection, v21, v17, (uint64_t)&type metadata for FormatGradientDirection, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v12, v20, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD15B18(0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v13, v14);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v24(v6, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BAD15B18(1, 0, 0, (uint64_t)v6, (uint64_t)sub_1BA90CF04, 0, v15, v16);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE94990);
}

unint64_t sub_1BA5B987C()
{
  unint64_t result;

  result = qword_1ED39B020;
  if (!qword_1ED39B020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPoint, &type metadata for FormatPoint);
    atomic_store(result, (unint64_t *)&qword_1ED39B020);
  }
  return result;
}

uint64_t FormatImageNodeLayoutAttributes.__deallocating_deinit()
{
  FormatImageNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatImageNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t *initializeWithCopy for FormatNodeStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  sub_1BA76B724(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t sub_1BA5B99C0(_QWORD *a1)
{
  return FormatPackageInventory.encode(to:)(a1);
}

uint64_t FormatPackageInventory.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int8 *v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  char v65;
  char v66;
  char v67;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED39C180, (uint64_t (*)(void))sub_1BA5BA454, (uint64_t)&type metadata for FormatPackageInventory.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v45 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5BA454();
  sub_1BB8746C8();
  v66 = 0;
  v9 = v45;
  sub_1BB87417C();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v66 = 1;
  sub_1BB86EB84();
  sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
  sub_1BB8741AC();
  v66 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
  v65 = 2;
  sub_1BA5BBBE0();
  sub_1BB8741AC();
  v45 = v5;
  v11 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  v12 = *v11;
  if (v12 != 4)
  {
    v65 = 3;
    LOBYTE(v63) = v12;
    sub_1BA5BA3EC();
    sub_1BAB26FC0();
    sub_1BB874464();
  }
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  v14 = *v13;
  if (*(_QWORD *)(*v13 + 16))
  {
    LOBYTE(v61) = 6;
    v63 = v14;
    v64 = *(_OWORD *)(v13 + 1);
    sub_1BA5BA3EC();
    sub_1BA5BC37C();
    sub_1BB874464();
  }
  v15 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
  swift_beginAccess();
  v16 = *v15;
  if (*(_QWORD *)(*v15 + 16))
  {
    v17 = v15[1];
    LOBYTE(v59) = 7;
    v61 = v16;
    v62 = v17;
    sub_1BA5BA3EC();
    sub_1BA82D024();
    sub_1BB874464();
  }
  v18 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
  swift_beginAccess();
  v19 = *v18;
  if (*(_QWORD *)(*v18 + 16))
  {
    v20 = v18[1];
    LOBYTE(v57) = 8;
    v59 = v19;
    v60 = v20;
    sub_1BA5BA3EC();
    sub_1BA5BC338();
    sub_1BB874464();
  }
  v21 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
  swift_beginAccess();
  v22 = *v21;
  if (*(_QWORD *)(*v21 + 16))
  {
    v23 = v21[1];
    LOBYTE(v55) = 9;
    v57 = v22;
    v58 = v23;
    sub_1BA5BA3EC();
    sub_1BA5BC974();
    sub_1BB874464();
  }
  v24 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v25 = *v24;
  if (*(_QWORD *)(*v24 + 16))
  {
    v26 = v24[1];
    LOBYTE(v53) = 10;
    v55 = v25;
    v56 = v26;
    sub_1BA5BA3EC();
    sub_1BA5BC014();
    sub_1BB874464();
  }
  v27 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
  swift_beginAccess();
  v28 = *v27;
  if (*(_QWORD *)(*v27 + 16))
  {
    v29 = v27[1];
    LOBYTE(v51) = 11;
    v53 = v28;
    v54 = v29;
    sub_1BA5BA3EC();
    sub_1BA5BC2B0();
    sub_1BB874464();
  }
  v30 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  v31 = *v30;
  if (*(_QWORD *)(*v30 + 16))
  {
    v32 = v30[1];
    LOBYTE(v50) = 12;
    v51 = v31;
    v52 = v32;
    sub_1BA5BA3EC();
    sub_1BA5BC9FC();
    sub_1BB874464();
  }
  v33 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  v34 = *v33;
  if (*(_QWORD *)(*v33 + 16))
  {
    LOBYTE(v49) = 13;
    v50 = v34;
    sub_1BA5BA3EC();
    sub_1BA5BC9B8();
    sub_1BB874464();
  }
  v35 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  v36 = *v35;
  if (*(_QWORD *)(*v35 + 16))
  {
    LOBYTE(v48) = 14;
    v49 = v36;
    sub_1BA5BA3EC();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA583FEC((unint64_t *)&qword_1ED39BE80, &qword_1ED3AFE80, (uint64_t)&protocol conformance descriptor for FormatOption, MEMORY[0x1E0DEAF10]);
    sub_1BB874464();
  }
  v37 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  v38 = *v37;
  if (*(_QWORD *)(*v37 + 16))
  {
    LOBYTE(v46) = 15;
    swift_bridgeObjectRetain_n();
    v39 = sub_1BA67F4CC(v38);
    swift_bridgeObjectRelease();
    v47[0] = (uint64_t)v39;
    swift_retain();
    sub_1BA5BBDDC(v47);
    swift_release();
    v48 = v47[0];
    sub_1BA5BA3EC();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5BBCE4();
    sub_1BB874464();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v40 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  v41 = *v40;
  if (*(_QWORD *)(*v40 + 16))
  {
    v42 = v40[1];
    LOBYTE(v46) = 16;
    v47[0] = v41;
    v47[1] = v42;
    sub_1BA5BA3EC();
    sub_1BA5BC2F4();
    sub_1BB874464();
  }
  *(_OWORD *)v47 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  LOBYTE(v46) = 17;
  sub_1BA5BC058();
  sub_1BB87414C();
  v43 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  v44 = *v43;
  if (*(_QWORD *)(*v43 + 16))
  {
    v67 = 18;
    v46 = v44;
    sub_1BA5BA3EC();
    sub_1BA4B07F0(0, &qword_1ED3BBA78, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5BBD4C();
    sub_1BB874464();
  }
  LOBYTE(v46) = 19;
  type metadata accessor for FormatCompilerOptions(0);
  sub_1BA4A2870(&qword_1ED39B770, type metadata accessor for FormatCompilerOptions, (uint64_t)&protocol conformance descriptor for FormatCompilerOptions);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v45);
}

unint64_t sub_1BA5BA3EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB6B0;
  if (!qword_1ED3AB6B0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C180, (uint64_t (*)(void))sub_1BA5BA454, (uint64_t)&type metadata for FormatPackageInventory.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB6B0);
  }
  return result;
}

unint64_t sub_1BA5BA454()
{
  unint64_t result;

  result = qword_1ED39B850;
  if (!qword_1ED39B850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92807C, &type metadata for FormatPackageInventory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39B850);
  }
  return result;
}

_QWORD *FormatPackageInventory.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  _QWORD *v95;
  _QWORD *v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  char v120;
  _QWORD v121[4];
  int v122;
  char v123;

  v92 = *v1;
  sub_1BA5BBC24(0);
  MEMORY[0x1E0C80A78](v3);
  v88 = (uint64_t)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1E0C80A78](v86);
  v87 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v6);
  v90 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86EB84();
  v83 = *(_QWORD *)(v8 - 8);
  v84 = v8;
  MEMORY[0x1E0C80A78](v8);
  v89 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C0D0, (uint64_t (*)(void))sub_1BA5BA454, (uint64_t)&type metadata for FormatPackageInventory.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v11 = v10;
  v12 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v83 - v13;
  v15 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  *v15 = 0;
  v15[1] = 0;
  v93 = v15;
  v95 = a1;
  v96 = v1;
  v16 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  *v16 = 0;
  v16[1] = 0;
  v94 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5BA454();
  v17 = v91;
  sub_1BB87468C();
  if (v17)
  {
    v122 = 0;
    LODWORD(v85) = 0;
    LODWORD(v86) = 0;
    LODWORD(v87) = 0;
    LODWORD(v88) = 0;
    LODWORD(v89) = 0;
    LODWORD(v91) = 0;
    LODWORD(v90) = 0;
    v18 = v96;
    goto LABEL_12;
  }
  v20 = (uint64_t)v89;
  v19 = v90;
  v91 = v12;
  LOBYTE(v121[0]) = 0;
  v21 = sub_1BB874098();
  v22 = v14;
  v23 = v96;
  v96[2] = v21;
  v23[3] = v24;
  LOBYTE(v121[0]) = 1;
  sub_1BA4A2870(&qword_1ED3B0918, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF0]);
  v25 = (uint64_t)v19;
  v26 = v84;
  sub_1BB874068();
  v85 = 0;
  sub_1BA4C010C((uint64_t)v95, (uint64_t)v121);
  v27 = v83;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v25, 1, v26) == 1)
  {
    __swift_project_boxed_opaque_existential_1(v121, v121[3]);
    v26 = v84;
    v28 = sub_1BB872874();
    Dictionary<>.formatVersion.getter(v28, v20);
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v20, v25, v26);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
  v29 = v96;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))((uint64_t)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v20, v26);
  v119 = 2;
  sub_1BA5BBB9C();
  v30 = v85;
  sub_1BB8740D4();
  v31 = v93;
  if (v30)
  {
    (*(void (**)(char *, char *))(v91 + 8))(v22, v11);
    v18 = v29;
    v122 = 0;
    LODWORD(v85) = 0;
    LODWORD(v86) = 0;
    LODWORD(v87) = 0;
    LODWORD(v88) = 0;
    LODWORD(v89) = 0;
    LODWORD(v91) = 0;
    LODWORD(v90) = 0;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))((uint64_t)v29 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v84);
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v122)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!(_DWORD)v85)
      {
LABEL_14:
        if (!(_DWORD)v86)
          goto LABEL_15;
        goto LABEL_25;
      }
    }
    else if (!(_DWORD)v85)
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(_DWORD)v86)
    {
LABEL_15:
      if (!(_DWORD)v87)
        goto LABEL_16;
      goto LABEL_26;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    if (!(_DWORD)v87)
    {
LABEL_16:
      if (!(_DWORD)v88)
        goto LABEL_17;
      goto LABEL_27;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    if (!(_DWORD)v88)
    {
LABEL_17:
      if (!(_DWORD)v89)
        goto LABEL_18;
      goto LABEL_28;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    if (!(_DWORD)v89)
    {
LABEL_18:
      if (!(_DWORD)v91)
        goto LABEL_19;
      goto LABEL_29;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(_DWORD)v91)
    {
LABEL_19:
      if (!(_DWORD)v90)
      {
LABEL_21:
        swift_deallocPartialClassInstance();
        goto LABEL_22;
      }
LABEL_20:
      sub_1BA4A2E80((uint64_t)v18 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, type metadata accessor for FormatCompilerOptions);
      goto LABEL_21;
    }
LABEL_29:
    sub_1BA79DDC8(*(_QWORD *)((char *)v18 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem), *(_QWORD *)((char *)v18 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8));
    if (!(_DWORD)v90)
      goto LABEL_21;
    goto LABEL_20;
  }
  *((_BYTE *)v29 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) = v120;
  v119 = 3;
  sub_1BA5BBA8C();
  sub_1BB874068();
  v32 = v29;
  if (v120 == 5)
    v33 = 4;
  else
    v33 = v120;
  v34 = (char *)v32 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction;
  swift_beginAccess();
  *v34 = v33;
  v119 = 4;
  v35 = sub_1BB87402C();
  v37 = v36;
  swift_beginAccess();
  *v31 = v35;
  v31[1] = v37;
  swift_bridgeObjectRelease();
  v118 = 5;
  v38 = sub_1BB87402C();
  v40 = v39;
  v41 = v94;
  swift_beginAccess();
  *v41 = v38;
  v41[1] = v40;
  swift_bridgeObjectRelease();
  LOBYTE(v113) = 6;
  sub_1BA5BBAD0();
  sub_1BB874068();
  v90 = v11;
  v43 = v115;
  v44 = v22;
  if (v115)
  {
    v46 = v116;
    v45 = v117;
  }
  else
  {
    v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v45 = sub_1BA5BC54C(MEMORY[0x1E0DEE9D8]);
    v46 = sub_1BA8F50B4(v43);
  }
  v47 = (_QWORD *)((char *)v32 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  *v47 = v43;
  v47[1] = v46;
  v47[2] = v45;
  LOBYTE(v111) = 7;
  sub_1BA5BBB58();
  v48 = v44;
  sub_1BB874068();
  v49 = v113;
  if (v113)
  {
    v50 = v114;
  }
  else
  {
    v49 = MEMORY[0x1E0DEE9D8];
    v50 = sub_1BA5BBE00(MEMORY[0x1E0DEE9D8]);
  }
  v51 = (_QWORD *)((char *)v32 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
  swift_beginAccess();
  *v51 = v49;
  v51[1] = v50;
  LOBYTE(v109) = 8;
  sub_1BA5BBA48();
  sub_1BB874068();
  v52 = v48;
  v53 = v111;
  if (v111)
  {
    v54 = v112;
  }
  else
  {
    v53 = MEMORY[0x1E0DEE9D8];
    v54 = sub_1BA5BC530(MEMORY[0x1E0DEE9D8]);
  }
  v55 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
  swift_beginAccess();
  *v55 = v53;
  v55[1] = v54;
  LOBYTE(v107) = 9;
  sub_1BA5BB938();
  sub_1BB874068();
  v56 = v109;
  if (v109)
  {
    v57 = v110;
  }
  else
  {
    v56 = MEMORY[0x1E0DEE9D8];
    v57 = sub_1BA5BC09C(MEMORY[0x1E0DEE9D8]);
  }
  v58 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
  swift_beginAccess();
  *v58 = v56;
  v58[1] = v57;
  LOBYTE(v105) = 10;
  sub_1BA5BBA04();
  sub_1BB874068();
  v59 = v107;
  if (v107)
  {
    v60 = v108;
  }
  else
  {
    v59 = MEMORY[0x1E0DEE9D8];
    v60 = sub_1BA8F27B4(MEMORY[0x1E0DEE9D8]);
  }
  v61 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  *v61 = v59;
  v61[1] = v60;
  LOBYTE(v103) = 11;
  sub_1BA5BB8F4();
  sub_1BB874068();
  v62 = v105;
  if (v105)
  {
    v63 = v106;
  }
  else
  {
    v62 = MEMORY[0x1E0DEE9D8];
    v63 = sub_1BA5BC514(MEMORY[0x1E0DEE9D8]);
  }
  v64 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
  swift_beginAccess();
  *v64 = v62;
  v64[1] = v63;
  LOBYTE(v102) = 12;
  sub_1BA5BBB14();
  sub_1BB874068();
  v65 = v103;
  if (v103)
  {
    v66 = v104;
  }
  else
  {
    v65 = MEMORY[0x1E0DEE9D8];
    v66 = sub_1BA5BC760(MEMORY[0x1E0DEE9D8]);
  }
  v67 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  *v67 = v65;
  v67[1] = v66;
  LOBYTE(v101) = 13;
  sub_1BA5BB9C0();
  sub_1BB874068();
  v68 = MEMORY[0x1E0DEE9D8];
  if (v102)
    v69 = v102;
  else
    v69 = MEMORY[0x1E0DEE9D8];
  v70 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  *v70 = v69;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v100) = 14;
  sub_1BA583FEC((unint64_t *)&qword_1ED3B9450, &qword_1ED3B37E0, (uint64_t)&protocol conformance descriptor for FormatOption, MEMORY[0x1E0DEAF40]);
  sub_1BB874068();
  if (v101)
    v68 = v101;
  v71 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  *v71 = v68;
  sub_1BA6BCC84();
  LOBYTE(v98) = 15;
  sub_1BA5DBC84();
  sub_1BB874068();
  if (v100)
    v72 = v100;
  else
    v72 = MEMORY[0x1E0DEE9E8];
  v73 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  *v73 = v72;
  LOBYTE(v97) = 16;
  sub_1BA5BB97C();
  sub_1BB874068();
  v74 = v98;
  if (v98)
  {
    v75 = v99;
  }
  else
  {
    v74 = MEMORY[0x1E0DEE9D8];
    v75 = sub_1BA5BC3C0(MEMORY[0x1E0DEE9D8]);
  }
  v76 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  *v76 = v74;
  v76[1] = v75;
  LOBYTE(v97) = 19;
  sub_1BA4A2870(&qword_1ED3B6518, type metadata accessor for FormatCompilerOptions, (uint64_t)&protocol conformance descriptor for FormatCompilerOptions);
  sub_1BB8740D4();
  sub_1BA5193C4(v87, (uint64_t)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, type metadata accessor for FormatCompilerOptions);
  v123 = 17;
  sub_1BA5EF7E4();
  sub_1BB874068();
  *(_OWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem) = v97;
  sub_1BA5BBC40();
  v78 = v77;
  LOBYTE(v97) = 18;
  sub_1BA4A2870(&qword_1ED3A37A8, (uint64_t (*)(uint64_t))sub_1BA5BBC40, MEMORY[0x1E0DB3610]);
  sub_1BB874068();
  v79 = *(_QWORD *)(v78 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v88, 1, v78) == 1)
  {
    sub_1BA4A2E80(v88, (uint64_t (*)(_QWORD))sub_1BA5BBC24);
    v80 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v81 = v88;
    v80 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v81, v78);
  }
  (*(void (**)(char *, char *))(v91 + 8))(v52, v90);
  v18 = v96;
  v82 = (_QWORD *)((char *)v96 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  *v82 = v80;
LABEL_22:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
  return v18;
}

uint64_t sub_1BA5BB878(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5BB8F4()
{
  unint64_t result;

  result = qword_1ED3C1BE0;
  if (!qword_1ED3C1BE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotDefinitionCollection, &type metadata for FormatSlotDefinitionCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3C1BE0);
  }
  return result;
}

unint64_t sub_1BA5BB938()
{
  unint64_t result;

  result = qword_1ED3B0218;
  if (!qword_1ED3B0218)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryCollection, &type metadata for FormatSupplementaryCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B0218);
  }
  return result;
}

unint64_t sub_1BA5BB97C()
{
  unint64_t result;

  result = qword_1ED3B01F8;
  if (!qword_1ED3B01F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLocalizationCollection, &type metadata for FormatLocalizationCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B01F8);
  }
  return result;
}

unint64_t sub_1BA5BB9C0()
{
  unint64_t result;

  result = qword_1ED3B01D0;
  if (!qword_1ED3B01D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecorationCollection, &type metadata for FormatDecorationCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B01D0);
  }
  return result;
}

unint64_t sub_1BA5BBA04()
{
  unint64_t result;

  result = qword_1ED3B01C0;
  if (!qword_1ED3B01C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeStyleCollection, &type metadata for FormatNodeStyleCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B01C0);
  }
  return result;
}

unint64_t sub_1BA5BBA48()
{
  unint64_t result;

  result = qword_1ED3B0158;
  if (!qword_1ED3B0158)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSnippetCollection, &type metadata for FormatSnippetCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B0158);
  }
  return result;
}

unint64_t sub_1BA5BBA8C()
{
  unint64_t result;

  result = qword_1ED3BEC90;
  if (!qword_1ED3BEC90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirection, &type metadata for FormatPackageDirection);
    atomic_store(result, (unint64_t *)&qword_1ED3BEC90);
  }
  return result;
}

unint64_t sub_1BA5BBAD0()
{
  unint64_t result;

  result = qword_1ED3B0118;
  if (!qword_1ED3B0118)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupCollection, &type metadata for FormatGroupCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B0118);
  }
  return result;
}

unint64_t sub_1BA5BBB14()
{
  unint64_t result;

  result = qword_1ED3B00F0;
  if (!qword_1ED3B00F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeCollection, &type metadata for FormatTypeCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B00F0);
  }
  return result;
}

unint64_t sub_1BA5BBB58()
{
  unint64_t result;

  result = qword_1ED3B00D8;
  if (!qword_1ED3B00D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemCollection, &type metadata for FormatItemCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B00D8);
  }
  return result;
}

unint64_t sub_1BA5BBB9C()
{
  unint64_t result;

  result = qword_1ED3B4E28;
  if (!qword_1ED3B4E28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageRole, &type metadata for FormatPackageRole);
    atomic_store(result, (unint64_t *)&qword_1ED3B4E28);
  }
  return result;
}

unint64_t sub_1BA5BBBE0()
{
  unint64_t result;

  result = qword_1ED39B420;
  if (!qword_1ED39B420)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageRole, &type metadata for FormatPackageRole);
    atomic_store(result, (unint64_t *)&qword_1ED39B420);
  }
  return result;
}

void sub_1BA5BBC24(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A37B8, (uint64_t (*)(uint64_t))sub_1BA5BBC40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA5BBC40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A37B0)
  {
    sub_1BA6BCBF8(255);
    sub_1BA4A2870(&qword_1ED3A6618, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t)&protocol conformance descriptor for FormatFileReference<A>);
    sub_1BA4A2870(&qword_1ED3A6610, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t)&protocol conformance descriptor for FormatFileReference<A>);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A37B0);
  }
}

unint64_t sub_1BA5BBCE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED39DA10;
  if (!qword_1ED39DA10)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1ED3B95C0);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED39DA10);
  }
  return result;
}

unint64_t sub_1BA5BBD4C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3AAE40;
  if (!qword_1ED3AAE40)
  {
    sub_1BA4B07F0(255, &qword_1ED3BBA78, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3A6610, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t)&protocol conformance descriptor for FormatFileReference<A>);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE40);
  }
  return result;
}

uint64_t sub_1BA5BBDDC(uint64_t *a1)
{
  return sub_1BA67FABC(a1, sub_1BA67FB34, sub_1BA6801F8);
}

unint64_t sub_1BA5BBE00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA8F612C(0, (unint64_t *)&unk_1ED3AACE0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v23 - v5);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6194(0, &qword_1ED39DB08, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  v7 = sub_1BB873F6C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v26 = (uint64_t)v6 + *(int *)(v3 + 48);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v23 = a1;
  v11 = a1 + ((v10 + 32) & ~v10);
  v24 = *(_QWORD *)(v4 + 72);
  v25 = v7 + 64;
  swift_retain();
  while (1)
  {
    sub_1BA8F6870(v11, (uint64_t)v6, (unint64_t *)&unk_1ED3AACE0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    v12 = *v6;
    v13 = v6[1];
    result = sub_1BA6E35A8(*v6, v13);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = (uint64_t *)(v8[6] + 16 * result);
    *v17 = v12;
    v17[1] = v13;
    v18 = v8[7];
    sub_1BA7BCBF0(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    result = sub_1BA8F61FC(v26, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v16, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v11 += v24;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA5BC014()
{
  unint64_t result;

  result = qword_1ED3B01B8;
  if (!qword_1ED3B01B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeStyleCollection, &type metadata for FormatNodeStyleCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B01B8);
  }
  return result;
}

unint64_t sub_1BA5BC058()
{
  unint64_t result;

  result = qword_1ED3A0230;
  if (!qword_1ED3A0230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystem, &type metadata for FormatGroupColumnSystem);
    atomic_store(result, (unint64_t *)&qword_1ED3A0230);
  }
  return result;
}

unint64_t sub_1BA5BC09C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA8F612C(0, (unint64_t *)&unk_1ED3AACD0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v23 - v5);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6194(0, &qword_1ED39DB00, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  v7 = sub_1BB873F6C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v26 = (uint64_t)v6 + *(int *)(v3 + 48);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v23 = a1;
  v11 = a1 + ((v10 + 32) & ~v10);
  v24 = *(_QWORD *)(v4 + 72);
  v25 = v7 + 64;
  swift_retain();
  while (1)
  {
    sub_1BA8F6870(v11, (uint64_t)v6, (unint64_t *)&unk_1ED3AACD0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    v12 = *v6;
    v13 = v6[1];
    result = sub_1BA6E35A8(*v6, v13);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = (uint64_t *)(v8[6] + 16 * result);
    *v17 = v12;
    v17[1] = v13;
    v18 = v8[7];
    sub_1BA7BCBF0(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    result = sub_1BA8F61FC(v26, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v16, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v11 += v24;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA5BC2B0()
{
  unint64_t result;

  result = qword_1ED3CCFB8;
  if (!qword_1ED3CCFB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotDefinitionCollection, &type metadata for FormatSlotDefinitionCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3CCFB8);
  }
  return result;
}

unint64_t sub_1BA5BC2F4()
{
  unint64_t result;

  result = qword_1ED3B01F0;
  if (!qword_1ED3B01F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLocalizationCollection, &type metadata for FormatLocalizationCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B01F0);
  }
  return result;
}

unint64_t sub_1BA5BC338()
{
  unint64_t result;

  result = qword_1ED3B0150;
  if (!qword_1ED3B0150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSnippetCollection, &type metadata for FormatSnippetCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B0150);
  }
  return result;
}

unint64_t sub_1BA5BC37C()
{
  unint64_t result;

  result = qword_1ED3B0110;
  if (!qword_1ED3B0110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupCollection, &type metadata for FormatGroupCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B0110);
  }
  return result;
}

unint64_t sub_1BA5BC3C0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA60192C();
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v20 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *(v5 - 1);
    v7 = *v5;
    v8 = v5[1];
    v9 = v5[2];
    v11 = v5[3];
    v10 = v5[4];
    v12 = v5[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v6, v7);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v15 = (uint64_t *)(v3[6] + 16 * result);
    *v15 = v6;
    v15[1] = v7;
    v16 = (uint64_t *)(v3[7] + 40 * result);
    *v16 = v8;
    v16[1] = v9;
    v16[2] = v11;
    v16[3] = v10;
    v16[4] = v12;
    v17 = v3[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v3[2] = v19;
    v5 += 7;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA5BC514(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, (unint64_t *)&unk_1ED3AAD08, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (void (*)(_QWORD, double))sub_1BA8F6780);
}

unint64_t sub_1BA5BC530(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, &qword_1ED3AAD00, sub_1BA709CA4, (void (*)(_QWORD, double))sub_1BA8F65D0);
}

unint64_t sub_1BA5BC54C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA8F612C(0, &qword_1ED3AACF8, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v23 - v5);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6194(0, &qword_1ED39DB10, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
  v7 = sub_1BB873F6C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v26 = (uint64_t)v6 + *(int *)(v3 + 48);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v23 = a1;
  v11 = a1 + ((v10 + 32) & ~v10);
  v24 = *(_QWORD *)(v4 + 72);
  v25 = v7 + 64;
  swift_retain();
  while (1)
  {
    sub_1BA8F6870(v11, (uint64_t)v6, &qword_1ED3AACF8, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
    v12 = *v6;
    v13 = v6[1];
    result = sub_1BA6E35A8(*v6, v13);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = (uint64_t *)(v8[6] + 16 * result);
    *v17 = v12;
    v17[1] = v13;
    v18 = v8[7];
    sub_1BA7BCBF0(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
    result = sub_1BA8F61FC(v26, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v16, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v11 += v24;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA5BC760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA8F612C(0, &qword_1ED3AACF0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v23 - v5);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6194(0, (unint64_t *)&unk_1ED3B9AC8, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
  v7 = sub_1BB873F6C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v26 = (uint64_t)v6 + *(int *)(v3 + 48);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v23 = a1;
  v11 = a1 + ((v10 + 32) & ~v10);
  v24 = *(_QWORD *)(v4 + 72);
  v25 = v7 + 64;
  swift_retain();
  while (1)
  {
    sub_1BA8F6870(v11, (uint64_t)v6, &qword_1ED3AACF0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
    v12 = *v6;
    v13 = v6[1];
    result = sub_1BA6E35A8(*v6, v13);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = (uint64_t *)(v8[6] + 16 * result);
    *v17 = v12;
    v17[1] = v13;
    v18 = v8[7];
    sub_1BA7BCBF0(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
    result = sub_1BA8F61FC(v26, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v16, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v11 += v24;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA5BC974()
{
  unint64_t result;

  result = qword_1ED3B0210;
  if (!qword_1ED3B0210)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryCollection, &type metadata for FormatSupplementaryCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B0210);
  }
  return result;
}

unint64_t sub_1BA5BC9B8()
{
  unint64_t result;

  result = qword_1ED3B01C8;
  if (!qword_1ED3B01C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecorationCollection, &type metadata for FormatDecorationCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B01C8);
  }
  return result;
}

unint64_t sub_1BA5BC9FC()
{
  unint64_t result;

  result = qword_1ED3B00E8;
  if (!qword_1ED3B00E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeCollection, &type metadata for FormatTypeCollection);
    atomic_store(result, (unint64_t *)&qword_1ED3B00E8);
  }
  return result;
}

uint64_t sub_1BA5BCA40(_QWORD *a1)
{
  return FormatFontScalingStyle.encode(to:)(a1);
}

uint64_t FormatFontScalingStyle.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[13];
  uint64_t v38;
  uint64_t v39;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v37[11] = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v37[10] = (char *)v37 - v6;
  MEMORY[0x1E0C80A78](v7);
  v37[9] = (char *)v37 - v8;
  MEMORY[0x1E0C80A78](v9);
  v37[8] = (char *)v37 - v10;
  MEMORY[0x1E0C80A78](v11);
  v37[7] = (char *)v37 - v12;
  MEMORY[0x1E0C80A78](v13);
  v37[6] = (char *)v37 - v14;
  MEMORY[0x1E0C80A78](v15);
  v37[5] = (char *)v37 - v16;
  MEMORY[0x1E0C80A78](v17);
  v37[4] = (char *)v37 - v18;
  MEMORY[0x1E0C80A78](v19);
  v37[3] = (char *)v37 - v20;
  MEMORY[0x1E0C80A78](v21);
  v37[2] = (char *)v37 - v22;
  MEMORY[0x1E0C80A78](v23);
  v37[1] = (char *)v37 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v37 - v27;
  v29 = *v1;
  v37[12] = a1;
  v38 = v29;
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v33, v32);
  v34 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = v39;
  sub_1BA69F160((uint64_t)v28, (uint64_t)sub_1BA90CF04, 0, v30, v31);
  if (!v35)
  {
    v39 = v34;
    sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatFontScalingStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5BD224 + 4 * byte_1BB93796C[*v0]))(2036625250, 0xE400000000000000);
}

uint64_t sub_1BA5BD224()
{
  return 0x74756F6C6C6163;
}

uint64_t sub_1BA5BD23C()
{
  return 0x316E6F6974706163;
}

uint64_t sub_1BA5BD254()
{
  return 0x326E6F6974706163;
}

uint64_t sub_1BA5BD26C()
{
  return 0x65746F6E746F6F66;
}

uint64_t sub_1BA5BD284()
{
  return 0x656E696C64616568;
}

uint64_t sub_1BA5BD29C()
{
  return 0x6C64616568627573;
}

uint64_t sub_1BA5BD2BC()
{
  return 0x746954656772616CLL;
}

uint64_t sub_1BA5BD2D8()
{
  return 0x31656C746974;
}

uint64_t sub_1BA5BD2EC()
{
  return 0x32656C746974;
}

uint64_t sub_1BA5BD300()
{
  return 0x33656C746974;
}

uint64_t sub_1BA5BD314()
{
  return 0x326E6F6974636573;
}

uint64_t sub_1BA5BD32C(_QWORD *a1)
{
  return FormatShadow.encode(to:)(a1);
}

uint64_t FormatShadow.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  double v19;
  float v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  _QWORD v52[5];
  char v53;
  _BYTE *v54;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v49 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v51 = &v42[-v7];
  MEMORY[0x1E0C80A78](v8);
  v54 = &v42[-v9];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v42[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v42[-v14];
  sub_1BAEB7824(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v42[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = *(double *)v1;
  v20 = *(float *)(v1 + 8);
  v21 = *(double *)(v1 + 16);
  v22 = *(double *)(v1 + 24);
  v50 = *(_QWORD *)(v1 + 32);
  v23 = *(_QWORD *)(v1 + 40);
  v47 = *(_QWORD *)(v1 + 48);
  v48 = v23;
  v24 = *(_QWORD *)(v1 + 56);
  v45 = *(_QWORD *)(v1 + 64);
  v46 = v24;
  v44 = *(_QWORD *)(v1 + 72);
  v43 = *(unsigned __int8 *)(v1 + 80);
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v27 = sub_1BAEB771C();
  v28 = sub_1BA4A2870(&qword_1ED3D1500, (uint64_t (*)(uint64_t))sub_1BAEB771C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatShadow, v29, v25, (uint64_t)&type metadata for FormatShadow, v27, (uint64_t)&type metadata for FormatVersions.JazzkonC, v26, (uint64_t)v18, v28, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
  v32 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32(v15, v31, v30);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2EEAC(0, 0, 0, v19, (uint64_t)v15, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5724C, (uint64_t (*)(uint64_t))sub_1BAEB789C, &qword_1ED3AF248);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v32(v12, v31, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2EFC0(1, 0, 0, v20);
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
    v33 = (uint64_t)v54;
    v32(v54, v31, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2F0D8(2, 0, 0, v33, (uint64_t)sub_1BA90CF04, 0, v21, v22);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    v34 = (uint64_t)v51;
    v32(v51, v31, v30);
    swift_storeEnumTagMultiPayload();
    v35 = v50;
    swift_retain();
    sub_1BAD2F244(v35, 3, 0, 0, v34, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v52[0] = v48;
    v52[1] = v47;
    v52[2] = v46;
    v52[3] = v45;
    v52[4] = v44;
    v53 = v43;
    sub_1BA6F3F88();
    v37 = (uint64_t)v49;
    v38 = &v49[*(int *)(v36 + 48)];
    v39 = &v49[*(int *)(v36 + 64)];
    v32(v49, v31, v30);
    if (qword_1ED3C4170 != -1)
      swift_once();
    v40 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476998);
    v32(v38, v40, v30);
    *v39 = 0;
    v39[1] = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BAD6D060((uint64_t)v52, 4, 0, 0, v37, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BAEB7824);
}

unint64_t sub_1BA5BD86C()
{
  unint64_t result;

  result = qword_1ED39B190;
  if (!qword_1ED39B190)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow.Offset, &type metadata for FormatShadow.Offset);
    atomic_store(result, (unint64_t *)&qword_1ED39B190);
  }
  return result;
}

uint64_t sub_1BA5BD8B0(_QWORD *a1)
{
  return FormatCompilerSlotDefinition.encode(to:)(a1);
}

uint64_t FormatCompilerSlotDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD);
  char v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t *v72;
  uint64_t v73;
  unint64_t v74;
  __int128 v75;
  char v76;
  void (*v77)(_QWORD, _QWORD, _QWORD);

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)&v63 - v7;
  MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v63 - v9;
  MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v63 - v11;
  MEMORY[0x1E0C80A78](v12);
  v70 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v14);
  v71 = (char *)&v63 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v63 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v63 - v20;
  sub_1BAE76704(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v27 = type metadata accessor for FormatCompilerSlotDefinition(0);
  v28 = sub_1BAE76594();
  v29 = sub_1BA4A2870(&qword_1ED3D12E0, (uint64_t (*)(uint64_t))sub_1BAE76594, (uint64_t)&unk_1BB8FFC6C);
  v67 = v27;
  sub_1BA6EC1EC(v27, v30, v25, v27, v28, (uint64_t)&type metadata for FormatVersions.JazzkonC, v26, (uint64_t)v24, v29, (uint64_t)&off_1E734BD80);
  v31 = *v2;
  v32 = v2[1];
  v72 = v2;
  v33 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v33 != -1)
    swift_once();
  v34 = sub_1BB86EB84();
  v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476C20);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
  v36(v21, v35, v34);
  v37 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v38 = v77;
  sub_1BAD0E2D8(v31, v32, 0, 0, 0, (uint64_t)v21, (uint64_t)sub_1BA90CF04, 0);
  if (v38)
  {
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v39 = v72[2];
    v40 = v72[3];
    v77 = (void (*)(_QWORD, _QWORD, _QWORD))v34;
    ((void (*)(char *, uint64_t))v36)(v18, v35);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD0E2D8(v39, v40, 1, 0, 0, (uint64_t)v18, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = (uint64_t)v71;
    v43 = v77;
    v36(v71, v35, (uint64_t)v77);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v44 = sub_1BAE42934(v42, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v45 = (uint64_t)v43;
    v64 = v35;
    if ((v44 & 1) != 0)
    {
      v75 = xmmword_1BB8D2D60;
      v76 = 0;
      v73 = 0;
      v74 = 0xE000000000000000;
      sub_1BAE7677C();
      sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
      v46 = (uint64_t)v70;
      v47 = (void (*)(uint64_t, uint64_t, uint64_t))v36;
    }
    else
    {
      v47 = (void (*)(uint64_t, uint64_t, uint64_t))v36;
      v46 = (uint64_t)v70;
    }
    sub_1BA4A2E80((uint64_t)v71, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v48 = v72;
    v47(v46, v64, v45);
    swift_storeEnumTagMultiPayload();
    v49 = swift_bridgeObjectRetain();
    sub_1BAD268E8(v49, 3, 0, 0);
    v70 = 0;
    v71 = (char *)v37;
    v77 = v47;
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = v48[7];
    v51 = qword_1ED3C6D58;
    swift_bridgeObjectRetain();
    if (v51 != -1)
      swift_once();
    v52 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476C08);
    v53 = (uint64_t)v69;
    v54 = (void (*)(char *, uint64_t, uint64_t))v77;
    v77(v69, v52, v45);
    swift_storeEnumTagMultiPayload();
    v55 = v70;
    sub_1BAD26A18(v50, 4, 0, 0);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (!v55)
    {
      v56 = v48[8];
      v57 = (uint64_t)v68;
      v54(v68, v64, v45);
      swift_storeEnumTagMultiPayload();
      if (v56 != 1)
      {
        if ((sub_1BAE42934(v57, 5, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
        {
          v75 = xmmword_1BB8D2D80;
          v76 = 0;
          v73 = v56;
          sub_1BAE7677C();
          sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
          sub_1BB874464();
        }
        v57 = (uint64_t)v68;
      }
      sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
      v58 = (uint64_t)v66;
      v59 = (uint64_t)v48 + *(int *)(v67 + 40);
      v77(v66, v52, v45);
      swift_storeEnumTagMultiPayload();
      sub_1BAD39878(v59, 6, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
      v60 = (uint64_t)v48 + *(int *)(v67 + 44);
      if (qword_1ED3C6D48 != -1)
        swift_once();
      v61 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476BD8);
      v62 = (uint64_t)v65;
      v77(v65, v61, v45);
      swift_storeEnumTagMultiPayload();
      sub_1BAD39B80(v60, 7, 0, 0, v62, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BAE76704);
}

unint64_t sub_1BA5BE138()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39BEE8;
  if (!qword_1ED39BEE8)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3B0128, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEE8);
  }
  return result;
}

unint64_t sub_1BA5BE1C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0888;
  if (!qword_1ED3A0888)
  {
    sub_1BA4AD288(255, &qword_1ED3C03C8, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA55DA08();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0888);
  }
  return result;
}

void sub_1BA5BE240(uint64_t a1, _QWORD *a2)
{
  sub_1BA5BE254(a1, a2);
}

void sub_1BA5BE254(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v14 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = a2[3];
  v7 = a2[4];
  v13 = a2[2];
  v12[1] = v7;
  v8 = _s10CodingKeysOMa_282(255, v13, v6, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8D2AA8, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8D2A58, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8D2A30, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5BE340(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 72) = v11;
  *(_QWORD *)(v5 - 152) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BD80);
  v17 = *(_QWORD *)v3;
  v18 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v5 - 176) = v3;
  v19 = *(_BYTE *)(v3 + 16);
  *(_QWORD *)(v5 - 112) = v17;
  *(_QWORD *)(v5 - 104) = v18;
  *(_BYTE *)(v5 - 96) = v19;
  *(_QWORD *)(v5 - 136) = 0;
  *(_QWORD *)(v5 - 128) = 0;
  *(_BYTE *)(v5 - 120) = 0;
  sub_1BA73B1CC(v17, v18, v19);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v4, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = sub_1BA5BE5E4();
  v24 = *(_QWORD *)(v5 - 144);
  sub_1BA6EE974(v5 - 112, v5 - 136, v4, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 72), (uint64_t)&type metadata for FormatCommandState, v23);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersionRequirement);
  sub_1BA73B1B8(*(_QWORD *)(v5 - 112), *(_QWORD *)(v5 - 104), *(_BYTE *)(v5 - 96));
  if (v24)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 152) + 8))(v13, *(_QWORD *)(v5 - 72));
  v26 = *(_QWORD *)(v5 - 176) + *(int *)(v2 + 44);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v27 = *(_QWORD *)(v5 - 160);
  v22(v27, v21, v20);
  swift_storeEnumTagMultiPayload();
  v28 = *(_QWORD *)(v5 - 72);
  sub_1BA6EE974(v26, v5 - 112, v27, (uint64_t)sub_1BA90CF04, 0, v28, *(_QWORD *)(v5 - 168), *(_QWORD *)(*(_QWORD *)(v5 - 184) + 16));
  sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v13, v28);
}

unint64_t sub_1BA5BE5E4()
{
  unint64_t result;

  result = qword_1ED39B488;
  if (!qword_1ED39B488)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandState, &type metadata for FormatCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED39B488);
  }
  return result;
}

uint64_t sub_1BA5BE628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRemoteImage.init(from:)(a1, a2);
}

uint64_t FormatRemoteImage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  char v78;

  v60 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v61 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v62 = (uint64_t)&v57 - v6;
  MEMORY[0x1E0C80A78](v7);
  v63 = (uint64_t)&v57 - v8;
  MEMORY[0x1E0C80A78](v9);
  v64 = (uint64_t)&v57 - v10;
  MEMORY[0x1E0C80A78](v11);
  v65 = (uint64_t)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v66 = (uint64_t)&v57 - v14;
  MEMORY[0x1E0C80A78](v15);
  v67 = (uint64_t)&v57 - v16;
  MEMORY[0x1E0C80A78](v17);
  v68 = (uint64_t)&v57 - v18;
  MEMORY[0x1E0C80A78](v19);
  v69 = (uint64_t)&v57 - v20;
  MEMORY[0x1E0C80A78](v21);
  v70 = (uint64_t)&v57 - v22;
  MEMORY[0x1E0C80A78](v23);
  v71 = (uint64_t)&v57 - v24;
  MEMORY[0x1E0C80A78](v25);
  v75 = (uint64_t)&v57 - v26;
  v27 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v27);
  v72 = (uint64_t)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v73 = (uint64_t)&v57 - v30;
  MEMORY[0x1E0C80A78](v31);
  v74 = (char *)&v57 - v32;
  sub_1BAEB3624();
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v57 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB369C();
  sub_1BA4A2870(&qword_1ED3D0CB0, (uint64_t (*)(uint64_t))sub_1BAEB369C, (uint64_t)&unk_1BB8FFC6C);
  v38 = (void *)v76;
  sub_1BB87468C();
  v39 = v38;
  if (!v38)
  {
    v76 = v27;
    v59 = v35;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v41 = sub_1BB872874();
    v42 = Dictionary<>.errorOnUnknownKeys.getter(v41);
    swift_bridgeObjectRelease();
    v43 = v34;
    v40 = a1;
    v44 = (uint64_t)v74;
    if ((v42 & 1) != 0)
    {
      v45 = v34;
      v46 = sub_1BB8740EC();
      v47 = *(_QWORD *)(v46 + 16);
      if (v47)
      {
        v48 = (_BYTE *)(v46 + 48);
        while (*v48 != 1)
        {
          v48 += 24;
          if (!--v47)
            goto LABEL_8;
        }
        v50 = *((_QWORD *)v48 - 2);
        v49 = *((_QWORD *)v48 - 1);
        swift_bridgeObjectRetain_n();
        v51 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v51);
        *(&v57 - 4) = (uint64_t)&_s10CodingKeysON_64;
        *(&v57 - 3) = sub_1BAEB371C();
        *(&v57 - 2) = sub_1BA5BF42C();
        *(&v57 - 1) = sub_1BAEB3760();
        swift_getKeyPath();
        swift_retain();
        v52 = sub_1BAE71220((uint64_t)&unk_1E7251300);
        swift_release_n();
        sub_1BA98D1F0();
        v39 = (void *)swift_allocError();
        *(_QWORD *)v53 = v50;
        *(_QWORD *)(v53 + 8) = v49;
        *(_QWORD *)(v53 + 16) = v52;
        *(_OWORD *)(v53 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA69C828(v50, v49, 1);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v45);
        goto LABEL_10;
      }
LABEL_8:
      swift_bridgeObjectRelease();
      v43 = v34;
    }
    sub_1BA4A2870(&qword_1ED3B9028, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
    v77 = 0uLL;
    v78 = 0;
    sub_1BB8740D4();
    v77 = xmmword_1BB8A1A10;
    v78 = 0;
    sub_1BB8740D4();
    v77 = xmmword_1BB8D2D60;
    v78 = 0;
    sub_1BB8740D4();
    v77 = xmmword_1BB8D2D70;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2D90;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2D80;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2DA0;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2DB0;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2DD0;
    v78 = 0;
    sub_1BB874068();
    v58 = a1;
    v77 = xmmword_1BB8D2DE0;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2DF0;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2E00;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2E10;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8868A0;
    v78 = 0;
    sub_1BB874068();
    v77 = xmmword_1BB8D2E20;
    v78 = 0;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v43);
    v54 = v60;
    sub_1BA5193C4(v44, v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v55 = (int *)type metadata accessor for FormatRemoteImage();
    sub_1BA5193C4(v73, v54 + v55[5], (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA5193C4(v72, v54 + v55[6], (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA646EFC(v75, v54 + v55[7], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v71, v54 + v55[8], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v70, v54 + v55[9], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v69, v54 + v55[10], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v68, v54 + v55[11], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v67, v54 + v55[12], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v66, v54 + v55[13], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v65, v54 + v55[14], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v64, v54 + v55[15], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v63, v54 + v55[16], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v62, v54 + v55[17], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA646EFC(v61, v54 + v55[18], (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  v40 = a1;
LABEL_10:
  sub_1BA7F8B78(v40, (uint64_t)v39);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

unint64_t sub_1BA5BF42C()
{
  unint64_t result;

  result = qword_1ED3C79A0;
  if (!qword_1ED3C79A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7578, &_s10CodingKeysON_64);
    atomic_store(result, (unint64_t *)&qword_1ED3C79A0);
  }
  return result;
}

uint64_t sub_1BA5BF470(_QWORD *a1)
{
  return FormatGroupNode.encode(to:)(a1);
}

uint64_t FormatGroupNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t *v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  __int128 v117;
  char v118;
  __int128 v119;
  char v120;
  __int128 v121;
  char v122;
  __int128 v123;
  char v124;
  __int128 v125;
  char v126;
  unint64_t v127;
  __int128 v128;
  char v129;
  uint64_t v130;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v101 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v102 = (char *)&v99 - v8;
  MEMORY[0x1E0C80A78](v9);
  v103 = (char *)&v99 - v10;
  MEMORY[0x1E0C80A78](v11);
  v104 = (char *)&v99 - v12;
  MEMORY[0x1E0C80A78](v13);
  v105 = (char *)&v99 - v14;
  MEMORY[0x1E0C80A78](v15);
  v106 = (char *)&v99 - v16;
  MEMORY[0x1E0C80A78](v17);
  v107 = (char *)&v99 - v18;
  MEMORY[0x1E0C80A78](v19);
  v108 = (char *)&v99 - v20;
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v99 - v22;
  MEMORY[0x1E0C80A78](v23);
  v111 = (char *)&v99 - v24;
  MEMORY[0x1E0C80A78](v25);
  v112 = (char *)&v99 - v26;
  MEMORY[0x1E0C80A78](v27);
  v114 = (char *)&v99 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v99 - v30;
  sub_1BAE96400(0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v37 = sub_1BAE964F0();
  v38 = sub_1BA4A2870(&qword_1ED3D15E0, (uint64_t (*)(uint64_t))sub_1BAE964F0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v39, v35, v4, v37, (uint64_t)&type metadata for FormatVersions.AzdenE, v36, (uint64_t)v34, v38, (uint64_t)&off_1E734BD20);
  swift_beginAccess();
  v40 = v2[2];
  v41 = v2[3];
  v113 = v2;
  v42 = qword_1ED3C6D40;
  swift_bridgeObjectRetain();
  if (v42 != -1)
    swift_once();
  v43 = sub_1BB86EB84();
  v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476BC0);
  v45 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
  v45(v31, v44, v43);
  v46 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v47 = v40;
  v48 = (uint64_t)v34;
  v49 = v115;
  sub_1BAD265E8(v47, v41, 0, 0, 0, (uint64_t)v31, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5560C, (uint64_t (*)(uint64_t))sub_1BAE96478, &qword_1ED3AF340);
  if (v49)
  {
    sub_1BA4A2E80((uint64_t)v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    v110 = v34;
    sub_1BA4A2E80((uint64_t)v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = v113;
    swift_beginAccess();
    v52 = v51[4];
    v100 = v44;
    v45(v114, v44, v43);
    swift_storeEnumTagMultiPayload();
    if (((v52 >> 59) & 0x1E | (v52 >> 2) & 1) != 0x16 || v52 != 0xB000000000000008)
    {
      sub_1BA71CA6C(v52);
      if ((sub_1BAE5560C((uint64_t)v114, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v115 = v46;
        v128 = xmmword_1BB8A1A10;
        v129 = 0;
        v127 = v52;
        sub_1BAE96478();
        sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
        sub_1BA6371A0();
        sub_1BB874464();
        v51 = v113;
        v46 = v115;
      }
    }
    sub_1BA4A2E80((uint64_t)v114, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v52);
    v53 = v51[5];
    v54 = qword_1ED3C6D50;
    swift_retain();
    v55 = (uint64_t)v112;
    if (v54 != -1)
      swift_once();
    v56 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476BF0);
    v45((char *)v55, v56, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6923C(v53, 2, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v57 = (uint64_t)v111;
    v58 = v100;
    v45(v111, v100, v43);
    swift_storeEnumTagMultiPayload();
    v59 = swift_bridgeObjectRetain();
    sub_1BAD2D144(v59, 3, 0, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v60 = v113;
    swift_beginAccess();
    v61 = v60[7];
    v62 = v58;
    v63 = (uint64_t)v109;
    v99 = v43;
    v45(v109, v62, v43);
    swift_storeEnumTagMultiPayload();
    if (v61)
    {
      sub_1BAE5560C(v63, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      v125 = xmmword_1BB8D2D90;
      v126 = 0;
      *(_QWORD *)&v123 = v61;
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      sub_1BB874464();
      v64 = (uint64_t)v109;
    }
    else
    {
      v64 = v63;
    }
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    v65 = v113;
    swift_beginAccess();
    v66 = v65[8];
    sub_1BA67D3F4(v66);
    v67 = v99;
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v68 = __swift_project_value_buffer(v67, (uint64_t)qword_1ED476C08);
    v69 = (uint64_t)v108;
    v114 = (char *)v68;
    ((void (*)(char *))v45)(v108);
    swift_storeEnumTagMultiPayload();
    if (v66 == 0x8000000000000000)
    {
      v70 = v69;
    }
    else
    {
      if ((sub_1BAE5560C(v69, 5, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v123 = xmmword_1BB8D2D80;
        v124 = 0;
        *(_QWORD *)&v121 = v66;
        sub_1BAE96478();
        sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
        sub_1BA84B088();
        sub_1BB874464();
        v67 = v99;
      }
      v70 = (uint64_t)v108;
    }
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EEDB4(v66);
    v71 = v113;
    swift_beginAccess();
    v72 = *((_BYTE *)v71 + 72);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v73 = __swift_project_value_buffer(v67, (uint64_t)qword_1ED476C50);
    v74 = (uint64_t)v107;
    v45(v107, v73, v67);
    swift_storeEnumTagMultiPayload();
    if ((v72 & 1) == 0 && (sub_1BAE5560C(v74, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v121 = xmmword_1BB8D2DA0;
      v122 = 0;
      LOBYTE(v119) = 0;
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      sub_1BB874464();
      v74 = (uint64_t)v107;
    }
    sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
    v75 = v113;
    v76 = (uint64_t)v106;
    v45(v106, (uint64_t)v114, v67);
    swift_storeEnumTagMultiPayload();
    v77 = swift_retain();
    v115 = v46;
    sub_1BAD6944C(v77, 7, 0, 0, v76, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v76, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v78 = v75[11];
    v79 = (uint64_t)v105;
    v45(v105, v100, v67);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE5560C(v79, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v119 = xmmword_1BB8D2DD0;
      v120 = 0;
      *(_QWORD *)&v117 = v78;
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
      v112 = 0;
      v67 = v99;
    }
    else
    {
      v112 = 0;
    }
    sub_1BA4A2E80((uint64_t)v105, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v80 = v113;
    v81 = v113[12];
    LODWORD(v115) = *((unsigned __int8 *)v113 + 104);
    v82 = (uint64_t)v104;
    v83 = v100;
    v45(v104, v100, v67);
    swift_storeEnumTagMultiPayload();
    v84 = v112;
    sub_1BAD69664(v81, v115, 9, 0, 0, v82, (uint64_t)sub_1BA90CF04, 0);
    if (v84)
    {
      sub_1BA4A2E80(v82, type metadata accessor for FormatVersionRequirement);
      v48 = (uint64_t)v110;
    }
    else
    {
      sub_1BA4A2E80(v82, type metadata accessor for FormatVersionRequirement);
      swift_beginAccess();
      v85 = v67;
      v86 = v80[14];
      v87 = (uint64_t)v103;
      v45(v103, v83, v85);
      swift_storeEnumTagMultiPayload();
      v88 = *(_QWORD *)(v86 + 16);
      swift_bridgeObjectRetain();
      if (v88)
      {
        v89 = sub_1BAE5560C(v87, 10, 0, 0, (uint64_t)sub_1BA90CF04, 0);
        if ((v89 & 1) != 0)
        {
          v117 = xmmword_1BB8D2DF0;
          v118 = 0;
          v91 = swift_bridgeObjectRetain();
          v92 = sub_1BA67F4CC(v91);
          swift_bridgeObjectRelease();
          v116 = v92;
          swift_retain();
          sub_1BA67FABC((uint64_t *)&v116, sub_1BA67FB34, sub_1BA6801F8);
          swift_release();
          v115 = (uint64_t)v116;
          v130 = (uint64_t)v116;
          sub_1BAE96478();
          v112 = v93;
          sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
          v94 = MEMORY[0x1E0DEA968];
          sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v94, MEMORY[0x1E0DEA970]);
          sub_1BB874464();
          swift_release();
        }
        v48 = (uint64_t)v110;
        v90 = (uint64_t)v102;
      }
      else
      {
        v90 = (uint64_t)v102;
        v48 = (uint64_t)v110;
      }
      sub_1BA4A2E80((uint64_t)v103, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v95 = v99;
      v45((char *)v90, (uint64_t)v114, v99);
      swift_storeEnumTagMultiPayload();
      v96 = swift_retain();
      sub_1BAD69838(v96, 11, 0, 0, v90, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v90, type metadata accessor for FormatVersionRequirement);
      swift_release();
      swift_beginAccess();
      v97 = (uint64_t)v101;
      v45(v101, (uint64_t)v114, v95);
      swift_storeEnumTagMultiPayload();
      v98 = swift_retain();
      sub_1BAD69A50(v98, 12, 0, 0, v97, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v97, type metadata accessor for FormatVersionRequirement);
      swift_release();
    }
  }
  return sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BAE96400);
}

uint64_t *sub_1BA5C04E4@<X0>(_QWORD *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;
  uint64_t *result;

  result = sub_1BA5C050C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t *sub_1BA5C050C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (**v11)(char *, _QWORD);
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (**v38)(char *, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  void (**v56)(char *, _QWORD);
  __int128 v57;
  char v58;
  __int128 v59;
  char v60;

  sub_1BA6927D0();
  v52 = v2;
  v48 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  *(_QWORD *)&v55 = v4;
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v53 = v6;
  v7 = *(uint64_t **)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - v8;
  sub_1BAEF569C();
  v54 = v10;
  v11 = *(void (***)(char *, _QWORD))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE869B8();
  sub_1BA4A2870(&qword_1ED3D1490, (uint64_t (*)(uint64_t))sub_1BAE869B8, (uint64_t)&unk_1BB8FFC6C);
  v14 = v56;
  sub_1BB87468C();
  v15 = v14;
  if (v14)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v15);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  v16 = v9;
  v46 = v7;
  v56 = v11;
  v17 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = sub_1BB872874();
  LOBYTE(v17) = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  v20 = v54;
  v19 = v55;
  if ((v17 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v27 = *((_QWORD *)v23 - 2);
      v26 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      v7 = &v43;
      MEMORY[0x1E0C80A78](v28);
      *(&v43 - 4) = (uint64_t)&_s10CodingKeysON_169;
      *(&v43 - 3) = sub_1BAE86A38();
      *(&v43 - 2) = sub_1BA5C0BA0();
      *(&v43 - 1) = sub_1BAE86A7C();
      swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E726AC28);
      swift_release_n();
      sub_1BA98D1F0();
      v15 = (void *)swift_allocError();
      *(_QWORD *)v30 = v27;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v27, v26, 1);
      v56[1](v13, v20);
      a1 = v47;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v59 = 0uLL;
  v60 = 0;
  v44 = sub_1BB874098();
  v45 = v24;
  v59 = xmmword_1BB8A1A10;
  v60 = 0;
  sub_1BA4FB6A0();
  v25 = v53;
  sub_1BB8740D4();
  v32 = sub_1BB86DD08();
  ((void (*)(char *, uint64_t))v46[1])(v16, v25);
  v53 = xmmword_1BB8D2D60;
  v59 = xmmword_1BB8D2D60;
  v60 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v46 = (_QWORD *)v32;
    v57 = v53;
    v58 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v33 = v50;
    sub_1BB8740D4();
    v35 = v51;
    v34 = v52;
    v36 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v19);
    v32 = (uint64_t)v46;
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
    v35 = v51;
    v34 = v52;
  }
  v55 = xmmword_1BB8D2D70;
  v59 = xmmword_1BB8D2D70;
  v60 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v57 = v55;
    v58 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v37 = v35;
    v38 = v56;
    v39 = sub_1BB86DD08();
    v40 = v34;
    v41 = v39;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v40);
  }
  else
  {
    v41 = MEMORY[0x1E0DEE9E8];
    v38 = v56;
  }
  v38[1](v13, v20);
  type metadata accessor for FormatBlock();
  v7 = (uint64_t *)swift_allocObject();
  v42 = v45;
  v7[2] = v44;
  v7[3] = v42;
  swift_beginAccess();
  v7[4] = v32;
  swift_beginAccess();
  v7[5] = v36;
  swift_beginAccess();
  v7[6] = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return v7;
}

unint64_t sub_1BA5C0BA0()
{
  unint64_t result;

  result = qword_1ED3C6618;
  if (!qword_1ED3C6618)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD208, &_s10CodingKeysON_169);
    atomic_store(result, (unint64_t *)&qword_1ED3C6618);
  }
  return result;
}

uint64_t type metadata accessor for FormatBlock()
{
  return objc_opt_self();
}

uint64_t sub_1BA5C0C04(_QWORD *a1)
{
  return FormatColorComponentExpression.encode(to:)(a1);
}

uint64_t FormatColorComponentExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  int v29;
  char *v30;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v27 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  sub_1BAE89370(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_BYTE *)v1;
  v29 = *(unsigned __int8 *)(v1 + 1);
  v15 = *(double *)(v1 + 8);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAE89268();
  v19 = sub_1BA4A2870(&qword_1ED3ABF38, (uint64_t (*)(uint64_t))sub_1BAE89268, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorComponentExpression, v20, v16, (uint64_t)&type metadata for FormatColorComponentExpression, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v13, v19, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v10, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0CFB8(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v24 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0D114(v29, 1, 0, 0, v24, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    v25 = (uint64_t)v28;
    v23(v28, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0D270(2, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0, v15);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAE89370);
}

unint64_t sub_1BA5C0F38()
{
  unint64_t result;

  result = qword_1ED39B208;
  if (!qword_1ED39B208)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOperator, &type metadata for FormatOperator);
    atomic_store(result, (unint64_t *)&qword_1ED39B208);
  }
  return result;
}

uint64_t sub_1BA5C0F7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatImageNodeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA5C15B4();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726C478;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA5C15B4()
{
  unint64_t result;

  result = qword_1ED3C9E18;
  if (!qword_1ED3C9E18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA270, &_s10CodingTypeON_76);
    atomic_store(result, (unint64_t *)&qword_1ED3C9E18);
  }
  return result;
}

unint64_t sub_1BA5C15F8()
{
  unint64_t result;

  result = qword_1ED3B66A8;
  if (!qword_1ED3B66A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Image, &type metadata for FormatHeadlineBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3B66A8);
  }
  return result;
}

unint64_t sub_1BA5C163C()
{
  unint64_t result;

  result = qword_1ED3BE258;
  if (!qword_1ED3BE258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Image, &type metadata for FormatIssueBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3BE258);
  }
  return result;
}

unint64_t sub_1BA5C1680()
{
  unint64_t result;

  result = qword_1ED3B5578;
  if (!qword_1ED3B5578)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Image, &type metadata for FormatGroupBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3B5578);
  }
  return result;
}

unint64_t sub_1BA5C16C4()
{
  unint64_t result;

  result = qword_1ED3B4A90;
  if (!qword_1ED3B4A90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Image, &type metadata for FormatTagBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A90);
  }
  return result;
}

uint64_t sub_1BA5C1708@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5C1730(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5C1730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void (**v17)(_BYTE *, _QWORD);
  uint64_t v18;
  _BYTE *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE v69[4];
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  unint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  __int128 v82;
  __int128 v83;
  _BYTE *v84;
  uint64_t v85;
  __int128 v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  void (**v94)(_BYTE *, _QWORD);
  __int128 v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  char v103;
  unint64_t v104;

  sub_1BAEFBAC0(0, &qword_1ED3D2A08, (void (*)(void))sub_1BAEF0B18, (void (*)(void))sub_1BAEF0A38);
  v80 = v2;
  v77 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v79 = &v69[-v3];
  sub_1BA5C2BE8();
  *(_QWORD *)&v82 = v4;
  v78 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v81 = &v69[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6927D0();
  v85 = v6;
  *(_QWORD *)&v83 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v84 = &v69[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBEA0, (void (*)(void))sub_1BA826260, (void (*)(void))sub_1BA82632C);
  v88 = v8;
  *(_QWORD *)&v86 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v87 = &v69[-v9];
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v89 = *(_QWORD *)(v10 - 8);
  v90 = v10;
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)&v92 = &v69[-v11];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  *(_QWORD *)&v91 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v69[-v14];
  sub_1BAEFBB30();
  v93 = v16;
  v17 = *(void (***)(_BYTE *, _QWORD))(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = &v69[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = a1;
  v21 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE719B8();
  sub_1BA4A2870(&qword_1ED3D0BF0, (uint64_t (*)(uint64_t))sub_1BAE719B8, (uint64_t)&unk_1BB8FFC6C);
  v22 = v94;
  sub_1BB87468C();
  v23 = v22;
  if (v22)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v23);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v21;
  }
  *(_QWORD *)&v76 = v15;
  v75 = v13;
  v94 = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24 = sub_1BB872874();
  v25 = Dictionary<>.errorOnUnknownKeys.getter(v24);
  swift_bridgeObjectRelease();
  v26 = v93;
  v27 = v19;
  if ((v25 & 1) != 0)
  {
    v28 = sub_1BB8740EC();
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      v30 = (_BYTE *)(v28 + 48);
      while (*v30 != 1)
      {
        v30 += 24;
        if (!--v29)
          goto LABEL_7;
      }
      v36 = *((_QWORD *)v30 - 2);
      v35 = *((_QWORD *)v30 - 1);
      swift_bridgeObjectRetain_n();
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v37);
      sub_1BAE71A38();
      sub_1BA5C2B60();
      sub_1BAE71A7C();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E724D648);
      swift_release_n();
      sub_1BA98D1F0();
      v23 = (void *)swift_allocError();
      *(_QWORD *)v38 = v36;
      *(_QWORD *)(v38 + 8) = v35;
      *(_QWORD *)(v38 + 16) = v21;
      *(_OWORD *)(v38 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v36, v35, 1);
      v94[1](v19, v26);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v32 = sub_1BAE0F8F8((uint64_t)v19, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFBB30);
  v34 = v33;
  v74 = xmmword_1BB8A1A10;
  v102 = xmmword_1BB8A1A10;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v95 = v74;
    v96 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v39 = v104;
  }
  else
  {
    v39 = 0xB000000000000008;
  }
  v102 = xmmword_1BB8D2D60;
  v103 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v40 = v95;
  v74 = xmmword_1BB8D2D70;
  v102 = xmmword_1BB8D2D70;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v72 = v34;
    v73 = v40;
    v95 = v74;
    v96 = 0;
    sub_1BAEB7D04();
    v41 = v76;
    v42 = v91;
    sub_1BB8740D4();
    *(_QWORD *)&v74 = v39;
    v71 = v32;
    v43 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v41, v42);
    v40 = v73;
    v34 = v72;
  }
  else
  {
    *(_QWORD *)&v74 = v39;
    v71 = v32;
    v43 = MEMORY[0x1E0DEE9D8];
  }
  v91 = xmmword_1BB8D2D90;
  v102 = xmmword_1BB8D2D90;
  v103 = 0;
  v44 = sub_1BB8740F8();
  v45 = v92;
  if ((v44 & 1) != 0)
  {
    v95 = v91;
    v96 = 0;
    sub_1BB8740D4();
    v75 = v104;
  }
  else
  {
    v75 = 0;
  }
  v91 = xmmword_1BB8D2D80;
  v102 = xmmword_1BB8D2D80;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v95 = v91;
    v96 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v46 = v104;
  }
  else
  {
    v46 = 0x8000000000000000;
  }
  *(_QWORD *)&v91 = v46;
  v76 = xmmword_1BB8D2DA0;
  v102 = xmmword_1BB8D2DA0;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v95 = v76;
    v96 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v76 = v43;
    v47 = v104;
  }
  else
  {
    *(_QWORD *)&v76 = v43;
    v47 = 1;
  }
  v70 = v47;
  v102 = xmmword_1BB8D2DB0;
  v103 = 0;
  sub_1BA4FB6A0();
  v48 = v45;
  v49 = v90;
  sub_1BB8740D4();
  v73 = v40;
  v50 = sub_1BB86DD08();
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v48, v49);
  v92 = xmmword_1BB8D2DD0;
  v102 = xmmword_1BB8D2DD0;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v51 = v50;
    v95 = v92;
    v96 = 0;
    sub_1BAEFBBA8();
    v52 = v87;
    v53 = v88;
    sub_1BB8740D4();
    *(_QWORD *)&v92 = v51;
    v54 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v86 + 8))(v52, v53);
  }
  else
  {
    *(_QWORD *)&v92 = v50;
    v54 = MEMORY[0x1E0DEE9D8];
  }
  v102 = xmmword_1BB8D2DE0;
  v103 = 0;
  sub_1BA5C2BA4();
  sub_1BB8740D4();
  v90 = v54;
  v55 = v95;
  v102 = xmmword_1BB8D2DF0;
  v103 = 0;
  sub_1BA650B5C();
  sub_1BB874068();
  v56 = v27;
  v57 = v95;
  v102 = xmmword_1BB8D2E00;
  v103 = 0;
  sub_1BB874068();
  v58 = (uint64_t)v20;
  v59 = v95;
  v102 = xmmword_1BB8D2E10;
  v103 = 0;
  sub_1BB874068();
  v72 = v34;
  v89 = v95;
  v102 = xmmword_1BB8868A0;
  v103 = 0;
  sub_1BA650BA0();
  v60 = v56;
  sub_1BB874068();
  v88 = v95;
  LODWORD(v87) = BYTE8(v95);
  type metadata accessor for FormatAnimationNodeStyle();
  v102 = xmmword_1BB8D2E20;
  v103 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v61 = v95;
  v86 = xmmword_1BB8D2DC0;
  v102 = xmmword_1BB8D2DC0;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v95 = v86;
    v96 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v62 = v85;
    v63 = v84;
    *(_QWORD *)&v86 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v63, v62);
  }
  else
  {
    *(_QWORD *)&v86 = MEMORY[0x1E0DEE9E8];
  }
  v102 = xmmword_1BB8D2E30;
  v103 = 0;
  v84 = (_BYTE *)sub_1BB87402C();
  v85 = v64;
  v83 = xmmword_1BB8D2E40;
  v102 = xmmword_1BB8D2E40;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v95 = v83;
    v96 = 0;
    sub_1BA4A2870(&qword_1EF2B6090, (uint64_t (*)(uint64_t))sub_1BA5C2BE8, MEMORY[0x1E0DB3610]);
    sub_1BB8740D4();
    v65 = v82;
    v66 = v81;
    *(_QWORD *)&v83 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v66, v65);
  }
  else
  {
    *(_QWORD *)&v83 = MEMORY[0x1E0DEE9D8];
  }
  v82 = xmmword_1BB8D2E50;
  v102 = xmmword_1BB8D2E50;
  v103 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v95 = v82;
    v96 = 0;
    sub_1BAEF0BD4();
    sub_1BB8740D4();
    v67 = v79;
    v68 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v67, v80);
  }
  else
  {
    v68 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v95 = v74;
  v104 = v73;
  v100 = v55;
  v101 = v91;
  v98 = v59;
  v99 = v57;
  v97 = v89;
  *(_QWORD *)&v102 = v88;
  BYTE8(v102) = (_BYTE)v87;
  type metadata accessor for FormatButtonNode();
  swift_allocObject();
  v21 = FormatButtonNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(v71, v72, (uint64_t *)&v95, (uint64_t *)&v104, v76, v75, &v101, v70, v92, v90, &v100, &v99, &v98, &v97, (uint64_t *)&v102, v61, v86, (uint64_t)v84, v85,
          v83,
          v68);
  v94[1](v60, v93);
  __swift_destroy_boxed_opaque_existential_1(v58);
  return v21;
}

unint64_t sub_1BA5C2B60()
{
  unint64_t result;

  result = qword_1ED3C7258;
  if (!qword_1ED3C7258)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1D80, &_s10CodingKeysON_255);
    atomic_store(result, (unint64_t *)&qword_1ED3C7258);
  }
  return result;
}

unint64_t sub_1BA5C2BA4()
{
  unint64_t result;

  result = qword_1ED3B69F8;
  if (!qword_1ED3B69F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeAction, &type metadata for FormatButtonNodeAction);
    atomic_store(result, (unint64_t *)&qword_1ED3B69F8);
  }
  return result;
}

void sub_1BA5C2BE8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3C4768)
  {
    sub_1BB86E710();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
    sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, v0, MEMORY[0x1E0DB48C0]);
    v1 = sub_1BB86DF60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3C4768);
  }
}

uint64_t sub_1BA5C2C8C(_QWORD *a1)
{
  return FormatViewNode.encode(to:)(a1);
}

uint64_t FormatViewNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t *v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  char v94;
  uint64_t v95;
  char *v96;
  char v97;
  char *v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t *v118;
  void (*v119)(char *, uint64_t, uint64_t);
  _QWORD *v120;
  __int128 v121;
  char v122;
  __int128 v123;
  char v124;
  __int128 v125;
  char v126;
  __int128 v127;
  char v128;
  uint64_t v129;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v108 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v109 = (uint64_t)&v107 - v8;
  MEMORY[0x1E0C80A78](v9);
  v110 = (char *)&v107 - v10;
  MEMORY[0x1E0C80A78](v11);
  v111 = (char *)&v107 - v12;
  MEMORY[0x1E0C80A78](v13);
  v112 = (char *)&v107 - v14;
  MEMORY[0x1E0C80A78](v15);
  v113 = (char *)&v107 - v16;
  MEMORY[0x1E0C80A78](v17);
  v114 = (char *)&v107 - v18;
  MEMORY[0x1E0C80A78](v19);
  v115 = (char *)&v107 - v20;
  MEMORY[0x1E0C80A78](v21);
  v116 = (char *)&v107 - v22;
  MEMORY[0x1E0C80A78](v23);
  v117 = (char *)&v107 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v107 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v107 - v29;
  sub_1BAECF594(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v36 = sub_1BAECF684();
  v37 = sub_1BA4A2870(&qword_1ED3D15B0, (uint64_t (*)(uint64_t))sub_1BAECF684, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v38, v35, v4, v36, (uint64_t)&type metadata for FormatVersions.JazzkonC, v34, (uint64_t)v33, v37, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v39 = v2[2];
  v40 = v2[3];
  v118 = v2;
  v41 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v41 != -1)
    swift_once();
  v42 = sub_1BB86EB84();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C20);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
  v44(v30, v43, v42);
  v45 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v46 = v39;
  v47 = v33;
  v48 = v119;
  sub_1BAD265E8(v46, v40, 0, 0, 0, (uint64_t)v30, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE55BC4, (uint64_t (*)(uint64_t))sub_1BAECF60C, &qword_1ED3AF310);
  if (v48)
  {
    sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_11:
    v67 = (uint64_t)v47;
    return sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))sub_1BAECF594);
  }
  sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v49 = v118;
  v50 = v118[4];
  v44(v27, v43, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BA71CA6C(v50);
  sub_1BAD21950(v50, 1, 0, 0, (uint64_t)v27, (uint64_t)sub_1BA90CF04, 0);
  v107 = v43;
  v51 = (char *)v45;
  v119 = v44;
  sub_1BA4A2E80((uint64_t)v27, type metadata accessor for FormatVersionRequirement);
  sub_1BA719718(v50);
  v52 = v49[5];
  v53 = qword_1ED3C6D50;
  swift_retain();
  if (v53 != -1)
    swift_once();
  v54 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476BF0);
  v55 = (uint64_t)v117;
  v56 = v119;
  v119(v117, v54, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BAD69C68(v52, 2, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  v57 = (uint64_t)v116;
  v58 = v107;
  v56(v116, v107, v42);
  swift_storeEnumTagMultiPayload();
  v59 = swift_bridgeObjectRetain();
  sub_1BAD2D4D4(v59, 3, 0, 0);
  sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v60 = (uint64_t)v115;
  v56(v115, v58, v42);
  swift_storeEnumTagMultiPayload();
  v61 = swift_retain();
  sub_1BAD69E78(v61, 4, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
  v117 = 0;
  sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v62 = v49[8];
  v63 = qword_1ED3C6D58;
  swift_retain();
  if (v63 != -1)
    swift_once();
  v64 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C08);
  v65 = (uint64_t)v114;
  v56(v114, v64, v42);
  swift_storeEnumTagMultiPayload();
  v66 = v117;
  sub_1BAD6A090(v62, 5, 0, 0, v65, (uint64_t)sub_1BA90CF04, 0);
  v117 = v66;
  if (v66)
  {
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    swift_release();
    goto LABEL_11;
  }
  v116 = (char *)v64;
  sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  v69 = v49[9];
  v70 = (uint64_t)v113;
  v56(v113, v58, v42);
  swift_storeEnumTagMultiPayload();
  if (v69)
  {
    v71 = v117;
    v72 = sub_1BAE55BC4(v70, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v117 = v71;
    if (v71)
      goto LABEL_15;
    if ((v72 & 1) != 0)
    {
      v127 = xmmword_1BB8D2DA0;
      v128 = 0;
      *(_QWORD *)&v125 = v69;
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      v74 = v117;
      sub_1BB874464();
      v117 = v74;
      if (v74)
      {
LABEL_15:
        sub_1BA4A2E80((uint64_t)v113, type metadata accessor for FormatVersionRequirement);
        goto LABEL_11;
      }
    }
    v73 = (uint64_t)v113;
  }
  else
  {
    v73 = v70;
  }
  sub_1BA4A2E80(v73, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  v75 = v49[10];
  v76 = (uint64_t)v112;
  v56(v112, (uint64_t)v116, v42);
  swift_storeEnumTagMultiPayload();
  if (v75 == 0x8000000000000000)
  {
    v77 = v76;
    goto LABEL_22;
  }
  sub_1BA67D3F4(v75);
  v93 = v117;
  v94 = sub_1BAE55BC4(v76, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  v117 = v93;
  if (v93)
  {
    v95 = (uint64_t)v112;
LABEL_33:
    sub_1BA4A2E80(v95, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EEDB4(v75);
    goto LABEL_11;
  }
  if ((v94 & 1) != 0)
  {
    v125 = xmmword_1BB8D2DB0;
    v126 = 0;
    *(_QWORD *)&v123 = v75;
    sub_1BAECF60C();
    sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
    sub_1BA84B088();
    v98 = v117;
    sub_1BB874464();
    if (v98)
    {
      v95 = (uint64_t)v112;
      goto LABEL_33;
    }
    v117 = 0;
    v49 = v118;
    v77 = (uint64_t)v112;
    v56 = v119;
  }
  else
  {
    v77 = (uint64_t)v112;
  }
LABEL_22:
  sub_1BA4A2E80(v77, type metadata accessor for FormatVersionRequirement);
  sub_1BA6EEDB4(v75);
  swift_beginAccess();
  v78 = *((_BYTE *)v49 + 88);
  if (qword_1ED3C6D70 != -1)
    swift_once();
  v79 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C50);
  v80 = (uint64_t)v111;
  v56(v111, v79, v42);
  swift_storeEnumTagMultiPayload();
  if ((v78 & 1) != 0)
    goto LABEL_25;
  v96 = v117;
  v97 = sub_1BAE55BC4(v80, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  v117 = v96;
  if (v96)
  {
LABEL_35:
    sub_1BA4A2E80(v80, type metadata accessor for FormatVersionRequirement);
    goto LABEL_11;
  }
  if ((v97 & 1) == 0)
  {
LABEL_25:
    v81 = (uint64_t)v47;
    goto LABEL_26;
  }
  v123 = xmmword_1BB8D2DD0;
  v124 = 0;
  LOBYTE(v121) = 0;
  sub_1BAECF60C();
  sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
  v99 = v117;
  sub_1BB874464();
  v117 = v99;
  if (v99)
  {
    v80 = (uint64_t)v111;
    goto LABEL_35;
  }
  v81 = (uint64_t)v47;
  v49 = v118;
  v80 = (uint64_t)v111;
LABEL_26:
  sub_1BA4A2E80(v80, type metadata accessor for FormatVersionRequirement);
  v82 = v49[12];
  v83 = *((_BYTE *)v49 + 104);
  v84 = (uint64_t)v110;
  v85 = (void (*)(uint64_t, uint64_t, uint64_t))v119;
  v119(v110, v107, v42);
  swift_storeEnumTagMultiPayload();
  v86 = v82;
  v47 = (char *)v81;
  v87 = v117;
  sub_1BAD6A2A8(v86, v83, 9, 0, 0, v84, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v84, type metadata accessor for FormatVersionRequirement);
  if (v87)
    goto LABEL_11;
  swift_beginAccess();
  v88 = v49[14];
  v89 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v89 != -1)
    swift_once();
  v90 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C38);
  v91 = v109;
  v85(v109, v90, v42);
  swift_storeEnumTagMultiPayload();
  if (*(_QWORD *)(v88 + 16))
  {
    v92 = sub_1BAE55BC4(v91, 10, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v117 = v51;
    if ((v92 & 1) != 0)
    {
      v121 = xmmword_1BB8D2DF0;
      v122 = 0;
      v100 = swift_bridgeObjectRetain();
      v101 = sub_1BA67F4CC(v100);
      swift_bridgeObjectRelease();
      v120 = v101;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v120, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v129 = (uint64_t)v120;
      sub_1BAECF60C();
      v115 = v102;
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      v103 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v103, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
    }
    v49 = v118;
    v85 = (void (*)(uint64_t, uint64_t, uint64_t))v119;
  }
  sub_1BA4A2E80(v109, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v104 = v49[15];
  v105 = v49[16];
  v106 = (uint64_t)v108;
  v85((uint64_t)v108, (uint64_t)v116, v42);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BAD6A47C(v104, v105, 11, 0, 0, v106, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v106, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v67 = v81;
  return sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))sub_1BAECF594);
}

uint64_t sub_1BA5C3BE8(_QWORD *a1)
{
  return FormatCommandState.encode(to:)(a1);
}

uint64_t FormatCommandState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + 8);
  v33 = *(_QWORD *)v1;
  v16 = *(unsigned __int8 *)(v1 + 16);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCommandState, v20, v17, (uint64_t)&type metadata for FormatCommandState, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v14, v19, (uint64_t)&off_1E734BD80);
  if (v16)
  {
    if (v16 == 1)
    {
      if (qword_1ED3C2478 != -1)
        swift_once();
      v21 = v33 & 1;
      v22 = sub_1BB86EB84();
      v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v23, v22);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5C413C(1, v21, (uint64_t)v8);
      v24 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C4168 != -1)
        swift_once();
      v29 = sub_1BB86EB84();
      v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476900);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v5, v30, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACF7DD4(2, v33, (uint64_t)v5);
      v24 = (uint64_t)v5;
    }
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    v25 = qword_1ED3C2478;
    swift_bridgeObjectRetain();
    if (v25 != -1)
      swift_once();
    v26 = sub_1BB86EB84();
    v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v27, v26);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v28 = v33;
    sub_1BA5C3F6C(0, v33, v15, (uint64_t)v11);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    sub_1BA73B1B8(v28, v15, 0);
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5C3F6C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4790;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C40F8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5C40F8()
{
  unint64_t result;

  result = qword_1ED3A5FE8;
  if (!qword_1ED3A5FE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7B00, &_s10CodingTypeON_111);
    atomic_store(result, (unint64_t *)&qword_1ED3A5FE8);
  }
  return result;
}

uint64_t sub_1BA5C413C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4790;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C40F8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B34D0, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF479C();
    sub_1BB874464();
  }
  return swift_release();
}

void sub_1BA5C42C8(uint64_t a1, uint64_t a2)
{
  FormatSwitchValue.DefaultValue.encode(to:)(a1, a2);
}

void FormatSwitchValue.DefaultValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = _s10CodingKeysOMa_36(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v4);
  MEMORY[0x1BCCE5B24](&unk_1BB8C5770, v5);
  MEMORY[0x1BCCE5B24](&unk_1BB8C5720, v5);
  MEMORY[0x1BCCE5B24](&unk_1BB8C56F8, v5);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5C43A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  v13 = v3[3];
  v14 = v3[4];
  v15 = __swift_project_boxed_opaque_existential_1(v3, v13);
  sub_1BA6EC1EC(v1, (uint64_t)v15, v13, v1, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v2, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA6EE974(*(_QWORD *)(v4 - 120), v4 - 112, v2, (uint64_t)sub_1BA90CF04, 0, v10, *(_QWORD *)(v4 - 128), *(_QWORD *)(*(_QWORD *)(v4 - 136) + 16));
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
}

uint64_t sub_1BA5C4560@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionsNodeStatementValue.init(from:)(a1, a2);
}

uint64_t FormatOptionsNodeStatementValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v30;

  v24[2] = a2;
  sub_1BA75BCB4(0);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v24[1] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v25);
  v24[0] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v27 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - v8;
  v10 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v11 = v30;
  sub_1BB87468C();
  if (v11)
  {
    v12 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v12);
  }
  v30 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = a1;
  v16 = v27;
  if ((v14 & 1) == 0)
  {
LABEL_9:
    sub_1BA5C4DFC();
    v28 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v17 = sub_1BB8740EC();
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v19 = (unint64_t *)(v17 + 40);
  while (1)
  {
    v20 = *v19;
    if (*v19 >= 4)
      break;
    v19 += 2;
    if (!--v18)
      goto LABEL_8;
  }
  v21 = *(v19 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v22 = v21;
  *(_QWORD *)(v22 + 8) = v20;
  *(_QWORD *)(v22 + 16) = &unk_1E726FEF8;
  *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v21, v20);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  v12 = (uint64_t)v15;
  return __swift_destroy_boxed_opaque_existential_1(v12);
}

unint64_t sub_1BA5C4DFC()
{
  unint64_t result;

  result = qword_1ED3B8780;
  if (!qword_1ED3B8780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91ABF0, &type metadata for FormatOptionsNodeStatementValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B8780);
  }
  return result;
}

void sub_1BA5C4E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BA75BC00(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA75C064(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA75BCB4(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1BA5C4F7C + 4 * byte_1BB91A8AC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA5C4F7C()
{
  swift_bridgeObjectRelease();
  return sub_1BA864858((uint64_t)&unk_1E726FD18);
}

void sub_1BA5C5070()
{
  uint64_t v0;

  sub_1BA864858((uint64_t)&unk_1E726FED0);
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  JUMPOUT(0x1BA5C504CLL);
}

void sub_1BA5C5094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *v4;
  v8 = swift_projectBox();
  sub_1BA4C2DD8(v8, (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA75BCB4);
  sub_1BA4C2DD8((uint64_t)v2 + *(int *)(v3 + 36), v0, (uint64_t (*)(_QWORD))sub_1BA75C064);
  sub_1BA5C4E40();
  v10 = v9;
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  v11 = *v2;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 - 88) = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(v11 + 16);
  if (v13)
  {
    *(_QWORD *)(v6 - 104) = v10;
    *(_QWORD *)(v6 - 96) = v7;
    v14 = v11 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v15 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v14, v1, (uint64_t (*)(_QWORD))sub_1BA75BC00);
      sub_1BA5C4E40();
      v17 = v16;
      sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BA75BC00);
      sub_1BA5C525C(v17);
      v14 += v15;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v6 - 88);
    v10 = *(_QWORD *)(v6 - 104);
  }
  sub_1BA5C59A8(v12, v10);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA75BCB4);
  swift_release();
  JUMPOUT(0x1BA5C504CLL);
}

void sub_1BA5C51A8()
{
  JUMPOUT(0x1BA5C5044);
}

void sub_1BA5C51B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BA864858((uint64_t)&unk_1E726FE08);
  sub_1BAC68BE0(v6, v5, v4, v3, v2, v1, v0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
  JUMPOUT(0x1BA5C504CLL);
}

unint64_t sub_1BA5C5218()
{
  unint64_t result;

  result = qword_1ED3CDF80;
  if (!qword_1ED3CDF80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementBinding, &type metadata for FormatOptionsNodeStatementBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3CDF80);
  }
  return result;
}

uint64_t sub_1BA5C525C(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  int64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  int64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  int64_t v45;
  unint64_t v46;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = a1;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = *((_QWORD *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1BA5C57B8(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = *((_QWORD *)v3 + 3) >> 1;
  }
  v10 = *((_QWORD *)v3 + 2);
  v11 = v8 - v10;
  result = (uint64_t)sub_1BA5C5624(v44, &v3[v10 + 32], v8 - v10, v6);
  if (result < v2)
    goto LABEL_15;
  if (result)
  {
    v16 = *((_QWORD *)v3 + 2);
    v17 = __OFADD__(v16, result);
    v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_51;
    }
    *((_QWORD *)v3 + 2) = v18;
  }
  if (result != v11)
    goto LABEL_13;
LABEL_16:
  v6 = *((_QWORD *)v3 + 2);
  result = v44[0];
  v13 = (char *)v44[1];
  v14 = v44[2];
  v15 = v45;
  if (!v46)
  {
LABEL_51:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      return result;
    }
    v24 = (unint64_t)(v14 + 64) >> 6;
    if (v22 >= v24)
      goto LABEL_13;
    v25 = v13;
    v37 = *(_QWORD *)&v13[8 * v22];
    if (!v37)
    {
      v38 = v15 + 2;
      if (v15 + 2 >= v24)
        goto LABEL_13;
      v37 = *(_QWORD *)&v13[8 * v38];
      if (v37)
      {
LABEL_59:
        v22 = v38;
      }
      else
      {
        if (v15 + 3 >= v24)
          goto LABEL_13;
        v37 = *(_QWORD *)&v13[8 * v15 + 24];
        if (!v37)
          goto LABEL_65;
        v22 = v15 + 3;
      }
    }
LABEL_54:
    v19 = (v37 - 1) & v37;
    v20 = __clz(__rbit64(v37)) + (v22 << 6);
    v15 = v22;
    v13 = v25;
    goto LABEL_18;
  }
  v19 = (v46 - 1) & v46;
  v20 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_18:
  v21 = *(unsigned __int8 *)(*(_QWORD *)(result + 48) + v20);
  if (v21 == 13)
    goto LABEL_13;
  v22 = (unint64_t)(v14 + 64) >> 6;
  while (1)
  {
    v23 = *((_QWORD *)v3 + 3);
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v6 + 1)
    {
      v42 = v22;
      v43 = result;
      v40 = v14;
      v41 = v13;
      v33 = v15;
      v34 = v3;
      v35 = v19;
      v36 = sub_1BA5C57B8((char *)(v23 > 1), v6 + 1, 1, v34);
      v13 = v41;
      v22 = v42;
      v19 = v35;
      v15 = v33;
      v14 = v40;
      v3 = v36;
      result = v43;
      v24 = *((_QWORD *)v3 + 3) >> 1;
    }
    v25 = v3 + 32;
    if (v6 < v24)
      break;
LABEL_20:
    *((_QWORD *)v3 + 2) = v6;
    if (v21 == 13)
      goto LABEL_13;
  }
  while (1)
  {
    v25[v6++] = v21;
    if (!v19)
      break;
    v26 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v27 = v26 | (v15 << 6);
LABEL_26:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(result + 48) + v27);
    if (v21 == 13 || v6 >= v24)
      goto LABEL_20;
  }
  v29 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    if (v29 >= v22)
      goto LABEL_55;
    v30 = *(_QWORD *)&v13[8 * v29];
    if (v30)
      goto LABEL_41;
    v31 = v15 + 2;
    if (v15 + 2 >= v22)
      goto LABEL_55;
    v30 = *(_QWORD *)&v13[8 * v31];
    if (!v30)
    {
      if (v15 + 3 >= v22)
        goto LABEL_55;
      v30 = *(_QWORD *)&v13[8 * v15 + 24];
      if (v30)
      {
        v29 = v15 + 3;
        goto LABEL_41;
      }
      v31 = v15 + 4;
      if (v15 + 4 >= v22)
        goto LABEL_55;
      v30 = *(_QWORD *)&v13[8 * v31];
      if (!v30)
      {
        v29 = v15 + 5;
        if (v15 + 5 >= v22)
          goto LABEL_55;
        v30 = *(_QWORD *)&v13[8 * v29];
        if (!v30)
        {
          v32 = v15 + 6;
          while (v22 != v32)
          {
            v30 = *(_QWORD *)&v13[8 * v32++];
            if (v30)
            {
              v29 = v32 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          *((_QWORD *)v3 + 2) = v6;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v29 = v31;
LABEL_41:
    v19 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v29 << 6);
    v15 = v29;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v38 = v22 + 3;
  if (v22 + 3 < v24)
  {
    v37 = *(_QWORD *)&v25[8 * v38];
    if (v37)
      goto LABEL_59;
    v22 += 4;
    if (v22 >= v24)
      goto LABEL_13;
    v37 = *(_QWORD *)&v25[8 * v22];
    if (!v37)
    {
      v39 = v15 + 6;
      while (v24 != v39)
      {
        v37 = *(_QWORD *)&v25[8 * v39++];
        if (v37)
        {
          v22 = v39 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_1BA6EBD18();
  *v1 = v3;
  return result;
}

_QWORD *sub_1BA5C5624(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

char *sub_1BA5C57B8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3CFC78, (uint64_t)&type metadata for FormatOptionsNodeStatementValue.CodingValidationType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA5C58C4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BA5C58C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA5C59A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int v4;
  char v6;
  uint64_t v7;

  v7 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v4 = *v3++;
      sub_1BA5C5A00(&v6, v4);
      --v2;
    }
    while (v2);
    return v7;
  }
  return a2;
}

uint64_t sub_1BA5C5A00(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _BYTE *v15;
  uint64_t v16;

  v3 = v2;
  v4 = a2;
  v6 = a2;
  v7 = *v3;
  sub_1BB8745CC();
  sub_1BB8745D8();
  if (v6 == 12)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    FormatOptionType.rawValue.getter();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  v8 = sub_1BB874608();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    do
    {
      v12 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 48) + v10);
      if ((_DWORD)v12 == 12)
      {
        if (v4 == 12)
        {
          swift_bridgeObjectRelease();
          v15 = a1;
          result = 0;
          LOBYTE(v4) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
          goto LABEL_13;
        }
      }
      else if (v4 != 12)
      {
        __asm { BR              X9 }
      }
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v3;
  *v3 = 0x8000000000000000;
  sub_1BA9E4F70(v4, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v16;
  swift_bridgeObjectRelease();
  result = 1;
  v15 = a1;
LABEL_13:
  *v15 = v4;
  return result;
}

uint64_t sub_1BA5C5E54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTypeDefinition.Enum.init(from:)(a1, a2);
}

uint64_t FormatTypeDefinition.Enum.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAEC8AF0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC8B68();
  sub_1BA4A2870(&qword_1ED3D0F50, (uint64_t (*)(uint64_t))sub_1BAEC8B68, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_12;
      *(&v24 - 3) = sub_1BAEC8BE8();
      *(&v24 - 2) = sub_1BA5C6190();
      *(&v24 - 1) = sub_1BAEC8C2C();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726F310);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, &qword_1ED3B9500, (uint64_t)&type metadata for FormatTypeDefinition.Case, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C61D4();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5C6190()
{
  unint64_t result;

  result = qword_1ED3C9318;
  if (!qword_1ED3C9318)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4770, &_s10CodingKeysON_12);
    atomic_store(result, (unint64_t *)&qword_1ED3C9318);
  }
  return result;
}

unint64_t sub_1BA5C61D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9508;
  if (!qword_1ED3B9508)
  {
    sub_1BA4AD288(255, &qword_1ED3B9500, (uint64_t)&type metadata for FormatTypeDefinition.Case, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82C340();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9508);
  }
  return result;
}

uint64_t sub_1BA5C624C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5C6278();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5C6278()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

uint64_t sub_1BA5C62C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA5C655C(*(_QWORD **)(v1 + 88), a1);
}

uint64_t type metadata accessor for FeedDatabaseStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedDatabaseStore);
}

void sub_1BA5C6308(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1BA5C64C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA5C6540);
}

void sub_1BA5C64CC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BA5C64D4);
  JUMPOUT(0x1BA5C6540);
}

void sub_1BA5C651C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA5C6540);
}

void sub_1BA5C6524()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA5C6540);
}

uint64_t sub_1BA5C652C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1BA5C6540);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1BA5C653CLL);
    JUMPOUT(0x1BA5C6538);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t sub_1BA5C655C@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t result;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v37 - v4;
  v5 = sub_1BB86F04C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v37 - v16;
  MEMORY[0x1E0C80A78](v18);
  v38 = (char *)&v37 - v19;
  sub_1BA5C6A80();
  v37 = sub_1BB86F208();
  v21 = a1[2];
  v20 = a1[3];
  v22 = MEMORY[0x1E0DEA968];
  v23 = MEMORY[0x1E0DB2EC8];
  v44 = MEMORY[0x1E0DEA968];
  v45 = MEMORY[0x1E0DB2EC8];
  v42 = v21;
  v43 = v20;
  swift_bridgeObjectRetain();
  sub_1BB86F160();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  v24 = a1[12];
  v44 = MEMORY[0x1E0DEB418];
  v45 = MEMORY[0x1E0DB2EF0];
  v42 = v24;
  sub_1BB86F160();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  sub_1BB86F154();
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v8, v5);
  v25(v11, v5);
  v26 = UIContentSizeCategory.description.getter();
  v44 = v22;
  v45 = v23;
  v42 = v26;
  v43 = v27;
  sub_1BB86F160();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  sub_1BB86F154();
  v25(v11, v5);
  v25(v14, v5);
  v42 = a1[6];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v22, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v22, MEMORY[0x1E0DEAF20]);
  swift_bridgeObjectRetain();
  v28 = sub_1BB872904();
  v30 = v29;
  v31 = (uint64_t)v39;
  swift_bridgeObjectRelease();
  v44 = v22;
  v45 = MEMORY[0x1E0DB2EC8];
  v42 = v28;
  v43 = v30;
  v32 = v38;
  sub_1BB86F160();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  sub_1BB86F154();
  v25(v14, v5);
  v25(v17, v5);
  v33 = sub_1BB86F274();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 1, 1, v33);
  v34 = v40;
  sub_1BB86F364();
  if (v34)
  {
    swift_release();

    sub_1BA5C699C(v31, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    result = ((uint64_t (*)(char *, uint64_t))v25)(v32, v5);
LABEL_3:
    v36 = v41;
    *v41 = 0;
    v36[1] = 0;
    return result;
  }
  swift_release();
  sub_1BA5C699C(v31, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
  result = ((uint64_t (*)(char *, uint64_t))v25)(v32, v5);
  if (!v46)
    goto LABEL_3;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA5C699C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BA4B07F0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA5C69E0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA5C6A28(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5C6A80()
{
  unint64_t result;

  result = qword_1ED3A4A70;
  if (!qword_1ED3A4A70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915C5C, &type metadata for FeedLayoutEntity.LayoutEntity);
    atomic_store(result, (unint64_t *)&qword_1ED3A4A70);
  }
  return result;
}

void sub_1BA5C6AC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A16F8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BB873D74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A16F8);
  }
}

unint64_t sub_1BA5C6B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9240;
  if (!qword_1ED3B9240)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9240);
  }
  return result;
}

uint64_t sub_1BA5C6B84(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorTrackerSnapshot(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = sub_1BB873A2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  sub_1BB86E890();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  return sub_1BB86E860();
}

uint64_t type metadata accessor for FeedCursorTrackerSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorTrackerSnapshot);
}

unint64_t sub_1BA5C6C84()
{
  unint64_t result;

  result = qword_1ED39ACC0;
  if (!qword_1ED39ACC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EB488, &type metadata for FeedGroupTrackerEntity);
    atomic_store(result, (unint64_t *)&qword_1ED39ACC0);
  }
  return result;
}

unint64_t sub_1BA5C6CC8()
{
  unint64_t result;

  result = qword_1ED3A4F38;
  if (!qword_1ED3A4F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896E88, &type metadata for FeedGroupJournalEntity);
    atomic_store(result, (unint64_t *)&qword_1ED3A4F38);
  }
  return result;
}

unint64_t sub_1BA5C6D0C()
{
  unint64_t result;

  result = qword_1ED39F410;
  if (!qword_1ED39F410)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915AD4, &type metadata for FeedLayoutEntity);
    atomic_store(result, (unint64_t *)&qword_1ED39F410);
  }
  return result;
}

unint64_t sub_1BA5C6D50()
{
  unint64_t result;

  result = qword_1ED39AA58;
  if (!qword_1ED39AA58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1CF4, &type metadata for FeedCursorEntity);
    atomic_store(result, (unint64_t *)&qword_1ED39AA58);
  }
  return result;
}

unint64_t sub_1BA5C6D94()
{
  unint64_t result;

  result = qword_1ED39AA28;
  if (!qword_1ED39AA28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89012C, &type metadata for FeedGroupEntity);
    atomic_store(result, (unint64_t *)&qword_1ED39AA28);
  }
  return result;
}

unint64_t sub_1BA5C6DD8()
{
  unint64_t result;

  result = qword_1ED3A4920;
  if (!qword_1ED3A4920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897DF4, &type metadata for FeedBlobEntity);
    atomic_store(result, (unint64_t *)&qword_1ED3A4920);
  }
  return result;
}

uint64_t sub_1BA5C6E1C(_QWORD *a1)
{
  return FormatLayeredMediaNodeStyle.encode(to:)(a1);
}

uint64_t FormatLayeredMediaNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *);
  char v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *);
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  _BYTE v109[96];
  uint64_t v110;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v97 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v98 = (char *)&v95 - v8;
  MEMORY[0x1E0C80A78](v9);
  v99 = (char *)&v95 - v10;
  MEMORY[0x1E0C80A78](v11);
  v100 = (char *)&v95 - v12;
  MEMORY[0x1E0C80A78](v13);
  v101 = (char *)&v95 - v14;
  MEMORY[0x1E0C80A78](v15);
  v102 = (char *)&v95 - v16;
  MEMORY[0x1E0C80A78](v17);
  v103 = (char *)&v95 - v18;
  MEMORY[0x1E0C80A78](v19);
  v104 = (char *)&v95 - v20;
  MEMORY[0x1E0C80A78](v21);
  v105 = (char *)&v95 - v22;
  MEMORY[0x1E0C80A78](v23);
  v106 = (char *)&v95 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v95 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v95 - v29;
  sub_1BAEA0EFC(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1[3];
  v35 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v34);
  v36 = sub_1BAEA0FEC();
  v37 = sub_1BA4A2870(&qword_1ED3D12B0, (uint64_t (*)(uint64_t))sub_1BAEA0FEC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v38, v34, v4, v36, (uint64_t)&type metadata for FormatVersions.AzdenC, v35, (uint64_t)v33, v37, (uint64_t)&off_1E734BCC0);
  swift_beginAccess();
  v40 = v2[2];
  v39 = v2[3];
  v107 = v2;
  v41 = qword_1ED3C6D38;
  swift_bridgeObjectRetain();
  if (v41 != -1)
    swift_once();
  v42 = sub_1BB86EB84();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476BA8);
  v44 = *(void (**)(char *))(*(_QWORD *)(v42 - 8) + 16);
  v108 = v43;
  v44(v30);
  v45 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v46 = v110;
  sub_1BAD265E8(v40, v39, 0, 0, 0, (uint64_t)v30, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE43874, (uint64_t (*)(uint64_t))sub_1BAEA0F74, &qword_1ED3AEF20);
  v47 = v33;
  if (v46)
  {
    sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_6:
    v56 = (uint64_t)v47;
    return sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))sub_1BAEA0EFC);
  }
  sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v48 = v107;
  v50 = v107[4];
  v49 = v107[5];
  ((void (*)(char *, uint64_t, uint64_t))v44)(v27, v108, v42);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BAD0EF38(v50, v49, 1, 0, 0, (uint64_t)v27, (uint64_t)sub_1BA90CF04, 0);
  v51 = v45;
  sub_1BA4A2E80((uint64_t)v27, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v52 = (uint64_t)v106;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v106, v108, v42);
  swift_storeEnumTagMultiPayload();
  v53 = swift_bridgeObjectRetain();
  sub_1BAD26C78(v53, 2, 0, 0);
  sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v54 = (uint64_t)v105;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v105, v108, v42);
  swift_storeEnumTagMultiPayload();
  v55 = swift_bridgeObjectRetain();
  sub_1BAD3ACA4(v55, 3, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v58 = v48[8];
  v59 = (uint64_t)v104;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v104, v108, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BA6E6C68(v58);
  sub_1BAD3AEC4(v58, 4, 0, 0, v59, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v59, type metadata accessor for FormatVersionRequirement);
  sub_1BA6E6CD8(v58);
  v60 = (uint64_t)v103;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v103, v108, v42);
  swift_storeEnumTagMultiPayload();
  v61 = swift_bridgeObjectRetain();
  sub_1BAD3B0DC(v61, 5, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v62 = v47;
  v63 = v48[10];
  v64 = v48[11];
  v65 = v44;
  v66 = *((_BYTE *)v48 + 96);
  v67 = (uint64_t)v102;
  v96 = v65;
  ((void (*)(char *, uint64_t, uint64_t))v65)(v102, v108, v42);
  v110 = v51;
  swift_storeEnumTagMultiPayload();
  sub_1BA6E6C54(v63, v64, v66);
  sub_1BAD3B30C(v63, v64, v66, 6, 0, 0, v67, (uint64_t)sub_1BA90CF04);
  sub_1BA4A2E80(v67, type metadata accessor for FormatVersionRequirement);
  sub_1BA6E6CC4(v63, v64, v66);
  sub_1BA6A09F0((uint64_t)(v48 + 13), (uint64_t)v109, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v68 = (uint64_t)v101;
  v69 = (void (*)(char *, uint64_t, uint64_t))v96;
  ((void (*)(char *, uint64_t, uint64_t))v96)(v101, v108, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BA6A0BFC((uint64_t)v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
  sub_1BAD3B540((uint64_t)v109, 7, 0, 0, v68, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
  sub_1BA6A0BFC((uint64_t)v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
  v70 = v48[24];
  v71 = v48[25];
  v72 = v69;
  v73 = *((_BYTE *)v48 + 208);
  v74 = (uint64_t)v100;
  v72(v100, v108, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BA796C58(v70, v71, v73);
  v106 = v62;
  sub_1BAD3B828(v70, v71, v73, 8, 0, 0, v74, (uint64_t)sub_1BA90CF04);
  v105 = 0;
  sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
  sub_1BA796C70(v70, v71, v73);
  v75 = v48[27];
  v76 = v48[28];
  v77 = *((_BYTE *)v48 + 232);
  sub_1BA6F3F88();
  v79 = (uint64_t)v99;
  v80 = &v99[*(int *)(v78 + 48)];
  v81 = &v99[*(int *)(v78 + 64)];
  v82 = (void (*)(char *, uint64_t, uint64_t))v96;
  ((void (*)(char *, uint64_t, uint64_t))v96)(v99, v108, v42);
  sub_1BA796C58(v75, v76, v77);
  if (qword_1ED3C4170 != -1)
    swift_once();
  v83 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476998);
  v82(v80, v83, v42);
  *(_QWORD *)v81 = 0;
  *((_QWORD *)v81 + 1) = 0;
  swift_storeEnumTagMultiPayload();
  v85 = v105;
  v84 = v106;
  sub_1BAD3B828(v75, v76, v77, 9, 0, 0, v79, (uint64_t)sub_1BA90CF04);
  sub_1BA4A2E80(v79, type metadata accessor for FormatVersionRequirement);
  v86 = v76;
  v47 = v84;
  sub_1BA796C70(v75, v86, v77);
  if (v85)
    goto LABEL_6;
  v87 = *((_BYTE *)v48 + 233);
  if (qword_1ED3C6D20 != -1)
    swift_once();
  v88 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476B78);
  v89 = (uint64_t)v98;
  ((void (*)(char *, uint64_t, uint64_t))v96)(v98, v88, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BAD3BA58(v87, 10, 0, 0, v89, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v89, type metadata accessor for FormatVersionRequirement);
  v90 = v107[30];
  v91 = qword_1ED3C6D70;
  swift_bridgeObjectRetain();
  if (v91 != -1)
    swift_once();
  v92 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C50);
  v93 = (uint64_t)v97;
  ((void (*)(char *, uint64_t, uint64_t))v96)(v97, v92, v42);
  swift_storeEnumTagMultiPayload();
  v94 = v106;
  sub_1BAD3BC20(v90, 11, 0, 0, v93, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v93, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v56 = (uint64_t)v94;
  return sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))sub_1BAEA0EFC);
}

unint64_t sub_1BA5C79F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAFA0;
  if (!qword_1ED3AAFA0)
  {
    sub_1BA4AD288(255, &qword_1ED3AAF98, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA823E4C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAFA0);
  }
  return result;
}

uint64_t sub_1BA5C7A68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5C7A90(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5C7A90(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __int128 v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  __int128 v69;
  char v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  unint64_t v74;

  sub_1BA6927D0();
  v67 = v2;
  v60 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v61 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v62 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v63 = v4;
  MEMORY[0x1E0C80A78](v4);
  v64 = (uint64_t)&v51 - v5;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  *(_QWORD *)&v65 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - v8;
  sub_1BAEF2864();
  v66 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE964F0();
  sub_1BA4A2870(&qword_1ED3D15E0, (uint64_t (*)(uint64_t))sub_1BAE964F0, (uint64_t)&unk_1BB8FFC6C);
  v15 = (uint64_t)v68;
  sub_1BB87468C();
  v16 = (void *)v15;
  if (v15)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  *(_QWORD *)&v58 = v9;
  v57 = v7;
  v17 = v65;
  v59 = v11;
  v18 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BB872874();
  LOBYTE(v18) = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v21 = v66;
  v20 = v67;
  if ((v18 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v28 = *((_QWORD *)v24 - 2);
      v27 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v29 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v29);
      sub_1BAE96570();
      sub_1BA5C87F0();
      sub_1BAE965B4();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v30 = sub_1BAE71220((uint64_t)&unk_1E7250CB8);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v31 = v28;
      *(_QWORD *)(v31 + 8) = v27;
      *(_QWORD *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v28, v27, 1);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v21);
      a1 = v68;
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v56 = sub_1BAE0F8F8((uint64_t)v13, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF2864);
  v26 = v25;
  v55 = xmmword_1BB8A1A10;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v69 = v55;
    v70 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v33 = v74;
  }
  else
  {
    v33 = 0xB000000000000008;
  }
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v34 = v69;
  v55 = xmmword_1BB8D2D70;
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v52 = v26;
    v69 = v55;
    v70 = 0;
    sub_1BAEB7D04();
    v35 = v58;
    sub_1BB8740D4();
    v54 = v33;
    v53 = v34;
    *(_QWORD *)&v55 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v35, v17);
    v26 = v52;
  }
  else
  {
    v54 = v33;
    v53 = v34;
    *(_QWORD *)&v55 = MEMORY[0x1E0DEE9D8];
  }
  v65 = xmmword_1BB8D2D90;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v36 = sub_1BB8740F8();
  v37 = v64;
  if ((v36 & 1) != 0)
  {
    v69 = v65;
    v70 = 0;
    sub_1BB8740D4();
    v57 = v74;
  }
  else
  {
    v57 = 0;
  }
  v65 = xmmword_1BB8D2D80;
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v69 = v65;
    v70 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v38 = v74;
  }
  else
  {
    v38 = 0x8000000000000000;
  }
  *(_QWORD *)&v65 = v38;
  v58 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v69 = v58;
    v70 = 0;
    sub_1BB8740D4();
    v39 = v74;
  }
  else
  {
    v39 = 1;
  }
  LODWORD(v58) = v39;
  type metadata accessor for FormatGroupNodeStyle();
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  sub_1BA4A2870(&qword_1ED3C8D60, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeStyle);
  sub_1BB874068();
  v40 = v69;
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  sub_1BA4FB6A0();
  v41 = v37;
  v42 = v63;
  sub_1BB8740D4();
  v51 = v40;
  v43 = sub_1BB86DD08();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v41, v42);
  v72 = xmmword_1BB8D2DE0;
  v73 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v64 = v43;
  v44 = v69;
  LODWORD(v62) = BYTE8(v69);
  v63 = xmmword_1BB8D2DF0;
  v72 = xmmword_1BB8D2DF0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v52 = v44;
    v69 = v63;
    v70 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v45 = v61;
    sub_1BB8740D4();
    v46 = sub_1BB86DD08();
    v47 = v20;
    v48 = v46;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v47);
    v44 = v52;
  }
  else
  {
    v48 = MEMORY[0x1E0DEE9E8];
  }
  type metadata accessor for FormatAnimationNodeStyle();
  v72 = xmmword_1BB8D2E00;
  v73 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v52 = v26;
  v49 = v69;
  type metadata accessor for FormatGroupNodeMask();
  v72 = xmmword_1BB8D2E10;
  v73 = 0;
  sub_1BA4A2870(&qword_1ED3BE5E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMask, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMask);
  sub_1BB874068();
  v50 = v69;
  *(_QWORD *)&v69 = v54;
  v74 = v53;
  v71 = v65;
  *(_QWORD *)&v72 = v44;
  BYTE8(v72) = v62;
  type metadata accessor for FormatGroupNode();
  swift_allocObject();
  KeyPath = FormatGroupNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:style:children:accessibilityRole:selectors:animation:mask:)(v56, v52, (uint64_t *)&v69, (uint64_t *)&v74, v55, v57, &v71, v58, v51, v64, (uint64_t *)&v72, v48, v49, v50);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  return KeyPath;
}

unint64_t sub_1BA5C87F0()
{
  unint64_t result;

  result = qword_1ED3C6EC8;
  if (!qword_1ED3C6EC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAAA8, &_s14descr1E72CBFF1V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C6EC8);
  }
  return result;
}

uint64_t type metadata accessor for FormatGroupNodeStyle()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatGroupNodeMask()
{
  return objc_opt_self();
}

uint64_t FormatGroupNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:style:children:accessibilityRole:selectors:animation:mask:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;

  v19 = *a3;
  v20 = *a4;
  v21 = *a7;
  v23 = *a11;
  v24 = *((_BYTE *)a11 + 8);
  *(_QWORD *)(v14 + 128) = 0;
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v14 + 32) = v19;
  *(_QWORD *)(v14 + 40) = v20;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  swift_beginAccess();
  *(_QWORD *)(v14 + 56) = a6;
  swift_beginAccess();
  *(_QWORD *)(v14 + 64) = v21;
  swift_beginAccess();
  *(_BYTE *)(v14 + 72) = a8;
  *(_QWORD *)(v14 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v14 + 88) = a10;
  *(_QWORD *)(v14 + 96) = v23;
  *(_BYTE *)(v14 + 104) = v24;
  swift_beginAccess();
  *(_QWORD *)(v14 + 112) = a12;
  *(_QWORD *)(v14 + 120) = a13;
  swift_beginAccess();
  *(_QWORD *)(v14 + 128) = a14;
  swift_release();
  return v14;
}

void sub_1BA5C8A1C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatSizeColumn.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void FormatSizeColumn.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];

  v13[14] = a3;
  v13[8] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[13] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[15] = (char *)v13 - v5;
  v13[9] = v6;
  v13[10] = v7;
  v9 = _s10CodingKeysOMa_62(255, v6, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C6C80, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C6C30, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8C6C08, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[6] = v11;
  v13[7] = v10;
  v13[18] = v11;
  v13[19] = v12;
  v13[5] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_62(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_62);
}

uint64_t sub_1BA5C8EE4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for FormatSizeColumn(0, a3, a4, v9);
  *(_BYTE *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for FormatSizeColumn(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatSizeColumn);
}

void sub_1BA5C8F4C(_QWORD *a1)
{
  FormatCommandBinding.encode(to:)(a1);
}

void FormatCommandBinding.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  _QWORD v27[12];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27[4] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27[5] = (char *)v27 - v6;
  MEMORY[0x1E0C80A78](v7);
  v27[2] = (char *)v27 - v8;
  MEMORY[0x1E0C80A78](v9);
  v27[1] = (char *)v27 - v10;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v27[3] = (char *)v27 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v1;
  v27[6] = v1[1];
  v27[7] = v1[2];
  v27[8] = v19;
  v20 = *((unsigned __int8 *)v1 + 24);
  v21 = *((unsigned __int8 *)v1 + 25);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = sub_1BA6B8518();
  v27[11] = v18;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCommandBinding, v25, v22, (uint64_t)&type metadata for FormatCommandBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v18, v24, (uint64_t)&off_1E734BD80);
  if (v21)
    v26 = 4;
  else
    v26 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BA5C9174()
{
  unsigned int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v3 - 104);
  v4 = *(_QWORD *)(v3 - 96);
  v6 = *(_QWORD *)(v3 - 112);
  sub_1BA856ECC(v4, v6, v5, v0, (uint64_t (*)(void))sub_1BA856DD0);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v1, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v3 - 72);
  sub_1BA5C982C(0, v4, v6, v5, v0, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAE70D80(v4, v6, v5, v0, v2, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BA5C982C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF4804;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5C99DC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5C9998()
{
  unint64_t result;

  result = qword_1ED3A67E8;
  if (!qword_1ED3A67E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7A38, &_s10CodingTypeON_112);
    atomic_store(result, (unint64_t *)&qword_1ED3A67E8);
  }
  return result;
}

unint64_t sub_1BA5C99DC()
{
  unint64_t result;

  result = qword_1ED39B4D0;
  if (!qword_1ED39B4D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Command, &type metadata for FormatGroupBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED39B4D0);
  }
  return result;
}

uint64_t sub_1BA5C9A20(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4804;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5C9B84();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5C9B84()
{
  unint64_t result;

  result = qword_1ED39B7F8;
  if (!qword_1ED39B7F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Command, &type metadata for FormatHeadlineBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED39B7F8);
  }
  return result;
}

uint64_t sub_1BA5C9BC8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4804;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5AE9EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5C9D30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B9820);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
    result = sub_1BB86DF3C();
    if (result)
    {
      v6 = result;
      v7 = type metadata accessor for TagService();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v5;
      *(_QWORD *)(result + 24) = v6;
      a2[3] = v7;
      a2[4] = (uint64_t)&protocol witness table for TagService;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TagService()
{
  return objc_opt_self();
}

void sub_1BA5C9E38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4010)
  {
    type metadata accessor for PuzzleStatsState();
    sub_1BA4A2870(&qword_1ED3C41A8, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsState, (uint64_t)&protocol conformance descriptor for PuzzleStatsState);
    sub_1BA4A2870(&qword_1ED3C41A0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsState, (uint64_t)&protocol conformance descriptor for PuzzleStatsState);
    v0 = sub_1BB86E35C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4010);
  }
}

_QWORD *sub_1BA5C9EDC(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, __int128 *a6, _QWORD *a7)
{
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;

  v22 = type metadata accessor for SportsDataServiceRequestBuilder();
  v23 = &off_1E727F6F8;
  *(_QWORD *)&v21 = a1;
  v19 = type metadata accessor for SportsDataServiceRequestFetcher();
  v20 = &off_1E72DB4B8;
  *(_QWORD *)&v18 = a2;
  v16 = type metadata accessor for SportsDataConfigurationManager();
  v17 = &off_1E72E49B8;
  *(_QWORD *)&v15 = a4;
  sub_1BA8413E8();
  swift_allocObject();
  a7[28] = sub_1BB86E7AC();
  sub_1BA84144C();
  swift_allocObject();
  a7[29] = sub_1BB86E7AC();
  sub_1BA4CECCC(&v21, (uint64_t)(a7 + 2));
  sub_1BA4CECCC(a3, (uint64_t)(a7 + 12));
  sub_1BA4CECCC(&v18, (uint64_t)(a7 + 7));
  sub_1BA4CECCC(&v15, (uint64_t)(a7 + 17));
  a7[22] = a5;
  sub_1BA4CECCC(a6, (uint64_t)(a7 + 23));
  return a7;
}

uint64_t sub_1BA5C9FFC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3CF938);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF9A0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39D0);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E8);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v7 = result;
    v8 = type metadata accessor for PuzzleService();
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0x73656C7A7A7570;
    v9[3] = 0xE700000000000000;
    v9[4] = 3421794;
    v9[5] = 0xE300000000000000;
    v9[6] = 0x726F7773736F7263;
    v9[7] = 0xE900000000000064;
    v9[8] = v5;
    v9[9] = v6;
    sub_1BA4CECCC(&v12, (uint64_t)(v9 + 10));
    result = sub_1BA4CECCC(&v10, (uint64_t)(v9 + 15));
    v9[20] = v7;
    a2[3] = v8;
    a2[4] = &protocol witness table for PuzzleService;
    *a2 = v9;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PuzzleImageShareAttributeProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA5CA260@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  result = sub_1BB86DF48();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3CF9E0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v7 = result;
    v8 = type metadata accessor for HeadlineService();
    v9 = (_QWORD *)swift_allocObject();
    result = sub_1BA4CECCC(&v10, (uint64_t)(v9 + 2));
    v9[7] = v5;
    v9[8] = v6;
    v9[9] = v7;
    a2[3] = v8;
    a2[4] = &protocol witness table for HeadlineService;
    *a2 = v9;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HeadlineService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PuzzleService()
{
  return objc_opt_self();
}

uint64_t sub_1BA5CA444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (*v9)(_BYTE *, uint64_t, uint64_t);
  void (*v10)(_BYTE *, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v18[4];
  unsigned int v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t);
  void (*v23)(_BYTE *);
  unsigned int v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  v0 = sub_1BB86DFCC();
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  MEMORY[0x1E0C80A78](v0);
  v25 = &v18[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = sub_1BB86ECEC();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v20 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86E7E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  sub_1BB86E5E4();
  swift_release();
  v9 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 104);
  v19 = *MEMORY[0x1E0DB4A18];
  v8 = v19;
  v9(v7, v19, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA4EFE00(0, &qword_1ED3C0B30);
  sub_1BB86E5D8();
  swift_release();
  v9(v7, v8, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D39B8);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4830);
  sub_1BB86E5E4();
  swift_release();
  v24 = *MEMORY[0x1E0DB5028];
  v23 = *(void (**)(_BYTE *))(v2 + 104);
  v12 = v20;
  v11 = v21;
  v23(v20);
  sub_1BB86DCB4();
  swift_release();
  v22 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v22(v12, v11);
  v13 = v19;
  v9(v7, v19, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E110();
  sub_1BA505288(0, &qword_1ED3D47E8);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39A0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3C4100);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39C8);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39D0);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39E8);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3CCD80);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5E68);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5E60);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FormatBackgroundLayoutSolver();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D2D08);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BB86CCAC();
  sub_1BB86E5D8();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&qword_1ED3D3990);
  sub_1BB86E5E4();
  swift_release();
  ((void (*)(_BYTE *, _QWORD, uint64_t))v23)(v12, v24, v11);
  sub_1BB86DCB4();
  swift_release();
  v22(v12, v11);
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D58C8);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E110();
  sub_1BA505288(0, &qword_1ED3D5E90);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3C4F00);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5E80);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5A48);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5190);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D4B48, (uint64_t (*)(uint64_t))type metadata accessor for FormatPictureInPictureModel, MEMORY[0x1E0DB3938]);
  sub_1BB86E5D8();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5790);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D0B58);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3C4300);
  sub_1BB86E5E4();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E110();
  sub_1BA505288(0, &qword_1ED3C42B0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3C42E8);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3C4260);
  sub_1BB86E5E4();
  swift_release();
  v9(v7, v13, v4);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&qword_1ED3C4370);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D52C0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  sub_1BB86E2F0();
  v15 = v25;
  v14 = v26;
  v16 = v27;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v26 + 104))(v25, *MEMORY[0x1E0DB36E0], v27);
  sub_1BB86E68C();
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  sub_1BB86E110();
  sub_1BB86E5CC();
  return swift_release();
}

uint64_t sub_1BA5CB44C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D39B8);
  result = sub_1BB86DF48();
  if (!v36)
  {
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4830);
  result = sub_1BB86DF48();
  if (!v34)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  result = sub_1BB86DF48();
  if (!v32)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedFontManager();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39D0);
  result = sub_1BB86DF48();
  if (!v30)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E8);
  result = sub_1BB86DF48();
  if (!v28)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5790);
  result = sub_1BB86DF48();
  if (!v26)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C4260);
  result = sub_1BB86DF48();
  if (!v24)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B27E0);
  result = sub_1BB86DF48();
  if (!v22)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF9C0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D58C8);
  result = sub_1BB86DF48();
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3CCD80);
  result = sub_1BB86DF48();
  if (!v18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3CCD70);
  result = sub_1BB86DF48();
  if (!v16)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3CF2E0);
  result = sub_1BB86DF48();
  if (v14)
  {
    v11 = type metadata accessor for FormatService();
    swift_allocObject();
    *((_QWORD *)&v12 + 1) = v10;
    *(_QWORD *)&v12 = v9;
    result = sub_1BA5E3530(&v35, &v33, &v31, v5, v6, v7, &v29, &v27, &v25, &v23, v8, &v21, v12, v19, v20, &v17, &v15, &v13);
    a2[3] = v11;
    a2[4] = (uint64_t)&protocol witness table for FormatService;
    *a2 = result;
    return result;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedFontManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA5CBAC8(_QWORD *a1)
{
  return FormatFrameNode.encode(to:)(a1);
}

uint64_t FormatFrameNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);

  v3 = v2;
  v4 = v1;
  v6 = *v4;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v32 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - v12;
  sub_1BAE77D64(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE77E54();
  v20 = sub_1BA4A2870(&qword_1ED3D15D0, (uint64_t (*)(uint64_t))sub_1BAE77E54, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v21, v17, v6, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v16, v20, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v22 = v4[2];
  v23 = v4[3];
  v24 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v34(v13, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD265E8(v22, v23, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE557F4, (uint64_t (*)(uint64_t))sub_1BAE77DDC, &qword_1ED3AF330);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v27 = v4[4];
    v28 = (uint64_t)v33;
    v34(v33, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BA71CA6C(v27);
    sub_1BAD2169C(v27, 1, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v27);
    swift_beginAccess();
    v29 = (uint64_t)v32;
    v34(v32, v26, v25);
    swift_storeEnumTagMultiPayload();
    v30 = swift_bridgeObjectRetain();
    sub_1BAD2D274(v30, 2, 0, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAE77D64);
}

uint64_t sub_1BA5CBE90(_QWORD *a1)
{
  return FormatCommand.encode(to:)(a1);
}

uint64_t FormatCommand.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCommand, v13, v10, (uint64_t)&type metadata for FormatCommand, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v12, (uint64_t)&off_1E734BD80);
  v14 = *(_QWORD *)(v9 + 16);
  v15 = *(_QWORD *)(v9 + 24);
  v16 = *(_QWORD *)(v9 + 32);
  v17 = *(unsigned __int8 *)(v9 + 40);
  v18 = *(unsigned __int8 *)(v9 + 41);
  sub_1BAE70D80(v14, v15, v16, v17, v18, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA5CC0C8(v14, v15, v16, v17 | (v18 << 8), (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAE70D80(v14, v15, v16, v17, v18, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BA5CC0C8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;

  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 0x1FF;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v5 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v15[2] = sub_1BAEF4920;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v6 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5CC270();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5CC22C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5CC22C()
{
  unint64_t result;

  result = qword_1ED39B640;
  if (!qword_1ED39B640)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandBinding, &type metadata for FormatCommandBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B640);
  }
  return result;
}

unint64_t sub_1BA5CC270()
{
  unint64_t result;

  result = qword_1ED3A5750;
  if (!qword_1ED3A5750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7970, &_s10CodingTypeON_113);
    atomic_store(result, (unint64_t *)&qword_1ED3A5750);
  }
  return result;
}

void sub_1BA5CC2B4(_QWORD *a1)
{
  FormatDimensionSizingValue.encode(to:)(a1);
}

void FormatDimensionSizingValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v26[4] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v26[3] = (char *)v26 - v7;
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v26[2] = (char *)v26 - v10;
  MEMORY[0x1E0C80A78](v11);
  v26[1] = (char *)v26 - v12;
  MEMORY[0x1E0C80A78](v13);
  v26[0] = (char *)v26 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v2;
  v23 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v24 = sub_1BA6B8518();
  v26[5] = v20;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDimensionSizingValue, v25, v23, (uint64_t)&type metadata for FormatDimensionSizingValue, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v20, v24, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5CC4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 16);
  v4 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 88);
  sub_1BA5CCAD8(0, v3, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5CCAD8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7960;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5CCC5C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5CCC5C()
{
  unint64_t result;

  result = qword_1ED3A7B58;
  if (!qword_1ED3A7B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4168, &_s10CodingTypeON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B58);
  }
  return result;
}

uint64_t sub_1BA5CCCA0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7960;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5CCC5C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5CCDC4(uint64_t a1)
{
  return sub_1BA5CCDFC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA5CCE20);
}

uint64_t sub_1BA5CCDE0(uint64_t a1)
{
  return sub_1BA5CCDFC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA733A84);
}

uint64_t sub_1BA5CCDFC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1BA5CCE20(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t result;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v8 = v7;
  swift_beginAccess();
  v15 = *(_QWORD *)(a2[10] + 16);
  result = v15 + 3;
  if (__OFADD__(v15, 3))
  {
    __break(1u);
  }
  else
  {
    v31 = a7;
    sub_1BB86D6A8();
    swift_getKeyPath();
    v35 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0DB64C8];
    v33 = a3;
    v34 = a4;
    v17 = MEMORY[0x1E0DB5DD0];
    sub_1BA735194(0, (unint64_t *)&qword_1ED3C4578, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
    sub_1BA735154(&qword_1ED3C4570, (unint64_t *)&qword_1ED3C4578, (uint64_t (*)(uint64_t, _QWORD *))v17, MEMORY[0x1E0DB5DD8]);
    sub_1BA50AD30((unint64_t *)&qword_1ED3B05F8, 255, (uint64_t (*)(uint64_t))sub_1BA62E870, MEMORY[0x1E0DB5A60]);
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    v39 = a1;
    swift_getKeyPath();
    v18 = *(_QWORD *)(a5 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_beginAccess();
    v20 = a2[2];
    v19 = a2[3];
    v21 = *(_QWORD *)(v18 + 40);
    if (v21)
    {
      v33 = *(_QWORD *)(v18 + 32);
      v34 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v22);
      sub_1BB872AFC(v23);
      swift_bridgeObjectRelease();
      v20 = v33;
      v19 = v34;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v35 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0DB64C8];
    v33 = v20;
    v34 = v19;
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    v39 = a1;
    swift_getKeyPath();
    v25 = a2[2];
    v24 = a2[3];
    v35 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0DB64C8];
    v33 = v25;
    v34 = v24;
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    v26 = a2[10];
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain();
      for (i = 32; ; i += 40)
      {
        v29 = *(_OWORD *)(v26 + i);
        v30 = *(_OWORD *)(v26 + i + 16);
        v38 = *(_QWORD *)(v26 + i + 32);
        v37[0] = v29;
        v37[1] = v30;
        sub_1BA7086BC((uint64_t)v37);
        sub_1BA733DB8(a1, a6, v31);
        if (v8)
          break;
        sub_1BA708680((uint64_t)v37);
        if (!--v27)
          return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return sub_1BA708680((uint64_t)v37);
    }
  }
  return result;
}

uint64_t sub_1BA5CD154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BA5CD194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BA5CD1D4(_QWORD *a1)
{
  return FormatItemNode.encode(to:)(a1);
}

uint64_t FormatItemNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  char v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t *v114;
  uint64_t v115;
  __int128 v116;
  char v117;
  __int128 v118;
  char v119;
  __int128 v120;
  char v121;
  uint64_t v122;
  __int128 v123;
  char v124;
  unint64_t v125;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v104 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v105 = (char *)&v100 - v8;
  MEMORY[0x1E0C80A78](v9);
  v106 = (uint64_t)&v100 - v10;
  MEMORY[0x1E0C80A78](v11);
  v107 = (uint64_t)&v100 - v12;
  MEMORY[0x1E0C80A78](v13);
  v108 = (char *)&v100 - v14;
  MEMORY[0x1E0C80A78](v15);
  v109 = (char *)&v100 - v16;
  MEMORY[0x1E0C80A78](v17);
  v110 = (char *)&v100 - v18;
  MEMORY[0x1E0C80A78](v19);
  v111 = (char *)&v100 - v20;
  MEMORY[0x1E0C80A78](v21);
  v112 = (char *)&v100 - v22;
  MEMORY[0x1E0C80A78](v23);
  v113 = (char *)&v100 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v100 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v100 - v29;
  sub_1BAE9E954(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v36 = sub_1BAE9EA44();
  v37 = sub_1BA4A2870(&qword_1ED3D1560, (uint64_t (*)(uint64_t))sub_1BAE9EA44, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v38, v35, v4, v36, (uint64_t)&type metadata for FormatVersions.JazzkonC, v34, (uint64_t)v33, v37, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v39 = v2[2];
  v40 = v2[3];
  v114 = v2;
  v41 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v41 != -1)
    swift_once();
  v42 = sub_1BB86EB84();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C20);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
  v44(v30, v43, v42);
  v45 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v46 = v115;
  sub_1BAD265E8(v39, v40, 0, 0, 0, (uint64_t)v30, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5654C, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, &qword_1ED3AF2B0);
  if (v46)
  {
    sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v62 = (uint64_t)v33;
    return sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))sub_1BAE9E954);
  }
  sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v47 = v42;
  v48 = v33;
  v49 = v114;
  v50 = v114[4];
  v51 = v114[5];
  v115 = v47;
  ((void (*)(char *, uint64_t))v44)(v27, v43);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BAD226E4(v50, v51, 1, 0, 0, (uint64_t)v27, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v27, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v52 = v49[6];
  v53 = (uint64_t)v113;
  v44(v113, v43, v115);
  swift_storeEnumTagMultiPayload();
  sub_1BA71CA6C(v52);
  v54 = v48;
  sub_1BAD2283C(v52, 2, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
  v55 = v44;
  v103 = v45;
  v101 = v43;
  sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
  sub_1BA719718(v52);
  v56 = v49[7];
  v57 = qword_1ED3C6D50;
  swift_retain();
  if (v57 != -1)
    swift_once();
  v58 = v115;
  v59 = __swift_project_value_buffer(v115, (uint64_t)qword_1ED476BF0);
  v60 = (uint64_t)v112;
  v55(v112, v59, v58);
  v102 = v55;
  swift_storeEnumTagMultiPayload();
  v61 = v54;
  sub_1BAD6BFB8(v56, 3, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
  v113 = (char *)v59;
  sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v64 = v114;
  swift_beginAccess();
  v65 = (uint64_t)v111;
  v66 = v101;
  v102(v111, v101, v58);
  swift_storeEnumTagMultiPayload();
  v67 = swift_bridgeObjectRetain();
  sub_1BAD2DAC4(v67, 4, 0, 0);
  sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v68 = (uint64_t)v110;
  v102(v110, v66, v58);
  swift_storeEnumTagMultiPayload();
  v69 = swift_bridgeObjectRetain();
  sub_1BAD2DBF4(v69, 5, 0, 0);
  sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v70 = v64[10];
  v71 = v66;
  v72 = (uint64_t)v109;
  v73 = v58;
  v74 = (void (*)(uint64_t, uint64_t, uint64_t))v102;
  v102(v109, v71, v73);
  swift_storeEnumTagMultiPayload();
  v75 = *(_QWORD *)(v70 + 16);
  swift_bridgeObjectRetain();
  if (v75)
  {
    v76 = sub_1BAE5654C(v72, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v77 = (uint64_t)v108;
    if ((v76 & 1) != 0)
    {
      v112 = v61;
      v123 = xmmword_1BB8D2DA0;
      v124 = 0;
      v79 = swift_bridgeObjectRetain();
      v80 = sub_1BA67F4CC(v79);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v120 = v80;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v120, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v122 = v120;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      v81 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v81, MEMORY[0x1E0DEA970]);
      v61 = v112;
      sub_1BB874464();
      swift_release();
      v64 = v114;
      v78 = (void (*)(uint64_t, uint64_t, uint64_t))v102;
      v77 = (uint64_t)v108;
      v72 = (uint64_t)v109;
    }
    else
    {
      v78 = v74;
    }
  }
  else
  {
    v78 = v74;
    v77 = (uint64_t)v108;
  }
  sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v78(v77, v101, v115);
  swift_storeEnumTagMultiPayload();
  v82 = swift_bridgeObjectRetain();
  sub_1BAD2DD24(v82, 7, 0, 0);
  sub_1BA4A2E80(v77, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v83 = v64[12];
  v84 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v84 != -1)
    swift_once();
  v85 = v115;
  v86 = __swift_project_value_buffer(v115, (uint64_t)qword_1ED476C08);
  v78(v107, v86, v85);
  swift_storeEnumTagMultiPayload();
  v87 = v113;
  if (v83 >> 62)
  {
    swift_bridgeObjectRetain();
    v99 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v99)
    {
LABEL_19:
      if ((sub_1BAE5654C(v107, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v120 = xmmword_1BB8D2DD0;
        v121 = 0;
        *(_QWORD *)&v118 = v83;
        sub_1BAE9E9CC();
        sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
        sub_1BA4B07F0(0, &qword_1ED3C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA683888();
        sub_1BB874464();
        v64 = v114;
        v78 = (void (*)(uint64_t, uint64_t, uint64_t))v102;
        v87 = v113;
      }
    }
  }
  else if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_19;
  }
  sub_1BA4A2E80(v107, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v88 = v64[13];
  v89 = v106;
  v78(v106, (uint64_t)v87, v115);
  swift_storeEnumTagMultiPayload();
  if (v88)
  {
    v90 = sub_1BAE5654C(v89, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v91 = (uint64_t)v61;
    if ((v90 & 1) != 0)
    {
      v118 = xmmword_1BB8D2DE0;
      v119 = 0;
      *(_QWORD *)&v116 = v88;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    v64 = v114;
    v92 = (uint64_t)v105;
  }
  else
  {
    v91 = (uint64_t)v61;
    v92 = (uint64_t)v105;
  }
  sub_1BA4A2E80(v106, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  v93 = v64[14];
  v94 = v115;
  v78(v92, (uint64_t)v113, v115);
  swift_storeEnumTagMultiPayload();
  if (v93 != 0x8000000000000000)
  {
    sub_1BA67D3F4(v93);
    if ((sub_1BAE5654C(v92, 10, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v116 = xmmword_1BB8D2DF0;
      v117 = 0;
      v125 = v93;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BA84B088();
      sub_1BB874464();
    }
    v64 = v114;
    v92 = (uint64_t)v105;
  }
  sub_1BA4A2E80(v92, type metadata accessor for FormatVersionRequirement);
  sub_1BA6EEDB4(v93);
  swift_beginAccess();
  v95 = v64[15];
  v96 = qword_1ED3C4170;
  swift_bridgeObjectRetain();
  if (v96 != -1)
    swift_once();
  v97 = __swift_project_value_buffer(v94, (uint64_t)qword_1ED476998);
  v98 = (uint64_t)v104;
  v78((uint64_t)v104, v97, v94);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2DE54(v95, 11, 0, 0);
  sub_1BA4A2E80(v98, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v62 = v91;
  return sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))sub_1BAE9E954);
}

uint64_t FormatLayoutAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1BA5CE264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatInteger.init(from:)(a1, a2);
}

unint64_t FormatInteger.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  char v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v69, v70);
    v6 = sub_1BB8743C8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    v7 = 0;
    v8 = 0;
LABEL_40:
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v7;
    *(_BYTE *)(a2 + 16) = v8;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  __swift_project_boxed_opaque_existential_1(v69, v70);
  result = sub_1BB8743B0();
  v9 = result;
  v11 = v10;
  v12 = HIBYTE(v10) & 0xF;
  v13 = result & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v14 = v12;
  else
    v14 = result & 0xFFFFFFFFFFFFLL;
  if (!v14)
    goto LABEL_59;
  if ((v11 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t)sub_1BA9BF9A4(v9, v11, 10);
    v31 = v30;
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
      goto LABEL_38;
    goto LABEL_59;
  }
  if ((v11 & 0x2000000000000000) != 0)
  {
    v67 = result;
    v68 = v11 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v12)
        goto LABEL_83;
      if (v12 == 1)
        goto LABEL_81;
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v6 = (BYTE1(result) - 48);
      if (v12 != 2)
      {
        if ((BYTE2(result) - 48) > 9u)
          goto LABEL_34;
        v6 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        v18 = v12 - 3;
        if (v12 != 3)
        {
          v19 = (unsigned __int8 *)&v67 + 3;
          while (1)
          {
            v20 = *v19 - 48;
            if (v20 > 9)
              goto LABEL_34;
            v21 = 10 * v6;
            if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63)
              goto LABEL_34;
            v6 = v21 + v20;
            if (__OFADD__(v21, v20))
              goto LABEL_34;
            LOBYTE(v12) = 0;
            ++v19;
            if (!--v18)
              goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v12)
        {
          if (v12 != 1)
          {
            if ((BYTE1(result) - 48) > 9u)
              goto LABEL_34;
            if (v12 == 2)
            {
              LOBYTE(v12) = 0;
              v6 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_37;
            }
            if ((BYTE2(result) - 48) > 9u)
              goto LABEL_34;
            v6 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
            v26 = v12 - 3;
            if (v12 != 3)
            {
              v27 = (unsigned __int8 *)&v67 + 3;
              while (1)
              {
                v28 = *v27 - 48;
                if (v28 > 9)
                  goto LABEL_34;
                v29 = 10 * v6;
                if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63)
                  goto LABEL_34;
                v6 = v29 - v28;
                if (__OFSUB__(v29, v28))
                  goto LABEL_34;
                LOBYTE(v12) = 0;
                ++v27;
                if (!--v26)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_81:
          v6 = 0;
LABEL_37:
          if ((v12 & 1) == 0)
            goto LABEL_38;
          goto LABEL_59;
        }
        __break(1u);
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      if (!v12 || (result - 48) > 9u)
      {
LABEL_34:
        v6 = 0;
        LOBYTE(v12) = 1;
        goto LABEL_37;
      }
      v6 = (result - 48);
      if (v12 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_34;
        v6 = 10 * (result - 48) + (BYTE1(result) - 48);
        v22 = v12 - 2;
        if (v12 != 2)
        {
          v23 = (unsigned __int8 *)&v67 + 2;
          while (1)
          {
            v24 = *v23 - 48;
            if (v24 > 9)
              goto LABEL_34;
            v25 = 10 * v6;
            if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63)
              goto LABEL_34;
            v6 = v25 + v24;
            if (__OFADD__(v25, v24))
              goto LABEL_34;
            LOBYTE(v12) = 0;
            ++v23;
            if (!--v22)
              goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    LOBYTE(v12) = 0;
    goto LABEL_37;
  }
  if ((result & 0x1000000000000000) != 0)
    v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v15 = (unsigned __int8 *)sub_1BB873D80();
  v16 = sub_1BA5CEA5C(v15, v13, 10);
  if ((v17 & 1) == 0)
  {
    v6 = (uint64_t)v16;
LABEL_38:
    swift_bridgeObjectRelease();

    v7 = 0;
    v8 = 0;
LABEL_39:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    goto LABEL_40;
  }
LABEL_59:
  swift_bridgeObjectRetain();
  v32 = sub_1BA689E44(v9, v11);
  v34 = v33;
  swift_bridgeObjectRelease();
  if (!v34)
    goto LABEL_65;
  if (v32 == 36 && v34 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
      goto LABEL_65;
  }
  v67 = 0x286E6F6974706FLL;
  v68 = 0xE700000000000000;
  v36 = sub_1BA9C0430(1uLL, v9, v11);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_bridgeObjectRelease();
  MEMORY[0x1BCCE334C](v36, v38, v40, v42);
  sub_1BB872AFC(v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v44);
  v9 = v67;
  v11 = v68;
LABEL_65:
  swift_bridgeObjectRetain();
  sub_1BA689D58(40, 0xE100000000000000, v9, v11);
  v46 = v45;
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
    goto LABEL_75;
  swift_bridgeObjectRetain();
  v47 = sub_1BA689ECC(v9, v11);
  v49 = v48;
  swift_bridgeObjectRelease();
  if (!v49)
    goto LABEL_75;
  if (v47 == 41 && v49 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  v50 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v50 & 1) == 0)
  {
LABEL_75:
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v61 = v9;
    v61[1] = v11;
    goto LABEL_76;
  }
LABEL_71:
  swift_bridgeObjectRetain();
  v51 = sub_1BB872B98();
  v53 = v52;
  v65 = v54;
  v56 = v55;
  swift_bridgeObjectRelease();
  v63 = MEMORY[0x1BCCE334C](v51, v53, v65, v56);
  v66 = v57;
  swift_bridgeObjectRelease();
  v58 = sub_1BB872AC0();
  result = sub_1BB872ACC();
  if (result >> 14 >= v58 >> 14)
  {
    v59 = sub_1BB872B98();
    v6 = MEMORY[0x1BCCE334C](v59);
    v7 = v60;
    swift_bridgeObjectRelease();
    if (v63 == 0x6E6F6974706FLL && v66 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_78:
      swift_bridgeObjectRelease();

      v8 = 1;
      goto LABEL_39;
    }
    v64 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v64 & 1) != 0)
      goto LABEL_78;
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v62 = v9;
    v62[1] = v11;
LABEL_76:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_84:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1BA5CEA5C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BA5CECD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E0);
  result = sub_1BB86DF48();
  if (!v33)
  {
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3D50);
  result = sub_1BB86DF48();
  if (!v30)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39B0);
  result = sub_1BB86DF48();
  if (!v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3F68);
  result = sub_1BB86DF48();
  if (!v26)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0BB8);
  result = sub_1BB86DF48();
  if (!v25)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3F60);
  result = sub_1BB86DF48();
  if (!v22)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4108);
  result = sub_1BB86DF48();
  if (!v20)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4110);
  result = sub_1BB86DF48();
  if (!v18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA58BC48();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4F70);
  result = sub_1BB86DF48();
  if (!v17)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D48D0);
  result = sub_1BB86DF48();
  if (!v15)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, qword_1ED3D4A30);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3BBF18);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8711B8();
  v6 = sub_1BB86DF3C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D0108);
  result = sub_1BB86DF48();
  if (v9)
  {
    type metadata accessor for FeedItemRenderer();
    swift_allocObject();
    v7 = sub_1BB69C354((uint64_t)v32, v30, v31, v28, v29, v26, v27, (uint64_t)v24, v22, v23, v20, v21, v18, v19, v5, (uint64_t)v16, (uint64_t)v14, (uint64_t)v12, (uint64_t)v10,
           v6,
           (uint64_t)v8);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    result = swift_release();
    *a2 = v7;
    a2[1] = (uint64_t)&protocol witness table for FeedItemRenderer;
    return result;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BA5CF28C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *);
  void (*v50)(char *);
  uint64_t v51;
  unsigned int v52;
  _QWORD v53[4];

  v2 = sub_1BB86DFCC();
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  MEMORY[0x1E0C80A78](v2);
  v40 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1BB86E7E8();
  v4 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1BB86ECEC();
  v7 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3358);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, qword_1ED3D3550);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FeedItemRendererPipelineProcessor(0);
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FeedItemPrefetcher();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D0108);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D48D0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, qword_1ED3D4838);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for CategoryViewLayoutAttributesFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4DD3F4(0, (unint64_t *)&unk_1ED3D4820, (unint64_t *)&unk_1ED3D2EA8, MEMORY[0x1E0DB7438], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  v10 = sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  sub_1BB86E5E4();
  swift_release();
  v52 = *MEMORY[0x1E0DB5028];
  v11 = *(void (**)(char *))(v7 + 104);
  v12 = v51;
  v11(v9);
  v50 = v11;
  sub_1BB86DCB4();
  swift_release();
  v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v12);
  v14 = v13;
  v48 = v13;
  v44 = *MEMORY[0x1E0DB4A18];
  v49 = *(void (**)(char *))(v4 + 104);
  v15 = v45;
  v49(v6);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v43 = *(void (**)(char *, uint64_t))(v4 + 8);
  v43(v6, v15);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3F60);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4108);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  v46 = v10;
  sub_1BB86E5E4();
  swift_release();
  v16 = v9;
  v17 = v9;
  v18 = v51;
  ((void (*)(char *, _QWORD, uint64_t))v11)(v17, v52, v51);
  v39 = v16;
  sub_1BB86DCB4();
  swift_release();
  v14(v16, v18);
  v19 = v44;
  v20 = v45;
  v21 = (void (*)(char *, uint64_t, uint64_t))v49;
  ((void (*)(char *, _QWORD, uint64_t))v49)(v6, v44, v45);
  v22 = v6;
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v23 = v6;
  v24 = v20;
  v25 = v43;
  v43(v23, v20);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3D50);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for HeadlineViewRendererPipelineProcessor();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4118);
  swift_retain();
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3F70);
  sub_1BB86E5E4();
  swift_release();
  type metadata accessor for IssueCoverViewRenderer();
  sub_1BB86DCC0();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3D58);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4370);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4148);
  sub_1BB86E5E4();
  swift_release();
  type metadata accessor for ArticleThumbnailViewRenderer();
  sub_1BB86DCC0();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4120);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4418);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for ArticleThumbnailViewLayoutAttributesFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatLayeredMediaNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4210);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4138);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for LayeredMediaViewProvider();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for LayeredMediaViewRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for LayeredMediaLayerRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for LayeredMediaLayerRenderableProvider();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BA505288(0, &qword_1ED3D4160);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4218);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for LayeredMediaRenderedViewModelFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for LayeredMediaViewModelFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for LayeredMediaViewModelRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BA84136C();
  sub_1BB86E5D8();
  swift_release();
  v21(v22, v19, v20);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v20);
  sub_1BB86E110();
  sub_1BB86E5E4();
  swift_release();
  v21(v22, v19, v20);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v20);
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39B0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3F68);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5F60);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4110);
  sub_1BB86E5E4();
  swift_release();
  type metadata accessor for FormatLayoutViewRenderer();
  sub_1BB86DCC0();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatLayoutViewRouter();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatRunModeRunner();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatIssueCoverNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatVideoNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BA505288(0, &qword_1ED3D3B90);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BA505288(0, &qword_1ED3D39F8);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatVideoPlayerNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatProgressViewNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatAdMetricsNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FormatSponsoredBannerNodeRenderer();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4EFE00(0, &qword_1ED3D1990);
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FormatPuzzleEmbedViewController();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for PuzzleEmbedViewController();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BB86E5D8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3C42A8);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3CDE00);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, qword_1ED3CBC98);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3CA750);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3B0980);
  sub_1BB86E5E4();
  swift_release();
  v21(v22, *MEMORY[0x1E0DB4A00], v20);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v20);
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3CF2E0);
  sub_1BB86E5E4();
  swift_release();
  v21(v22, v19, v20);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v20);
  sub_1BB86E104();
  type metadata accessor for WebEmbedViewController(0);
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCCC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for WebEmbedManager();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  swift_retain();
  sub_1BB86E5CC();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for ShareAttributionViewReuseFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5E4();
  swift_release();
  v21(v22, v19, v20);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v20);
  sub_1BB86E110();
  sub_1BB86E5E4();
  swift_release();
  v21(v22, v19, v20);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v20);
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  v26 = v39;
  v27 = v51;
  ((void (*)(char *, _QWORD, uint64_t))v50)(v39, v52, v51);
  sub_1BB86DCB4();
  swift_release();
  v48(v26, v27);
  LODWORD(v47) = *MEMORY[0x1E0DB4A10];
  v28 = v47;
  v29 = (void (*)(char *, uint64_t, uint64_t))v49;
  ((void (*)(char *, _QWORD, uint64_t))v49)(v22, v47, v24);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v25(v22, v24);
  v38 = a1;
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  v29(v22, v28, v24);
  v30 = v29;
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v31 = v43;
  v43(v22, v24);
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  v32 = v51;
  ((void (*)(char *, _QWORD, uint64_t))v50)(v26, v52, v51);
  sub_1BB86DCB4();
  swift_release();
  v33 = v48;
  v48(v26, v32);
  v30(v22, v47, v24);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v31(v22, v24);
  sub_1BB86E104();
  sub_1BB86E5E4();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v50)(v26, v52, v32);
  sub_1BB86DCB4();
  swift_release();
  v33(v26, v32);
  ((void (*)(char *, _QWORD, uint64_t))v49)(v22, v44, v24);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  v31(v22, v24);
  sub_1BB86E104();
  sub_1BA4EFE00(0, &qword_1ED3D2EC8);
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D2EC0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  type metadata accessor for FeedItemRendererTool();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4428);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4F70);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4158);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D5020);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3C4250);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3C4360);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E11C();
  __swift_project_boxed_opaque_existential_1(v53, v53[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  v35 = v40;
  v34 = v41;
  v36 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x1E0DB36E0], v42);
  sub_1BB86E698();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t sub_1BA5D12AC(_QWORD *a1)
{
  return FormatOptionExpression.Exists.Operator.encode(to:)(a1);
}

uint64_t FormatOptionExpression.Exists.Operator.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v21 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v15 = v24;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    v17 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v18, (uint64_t)sub_1BA90CF04, 0, v17, v24);
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

uint64_t sub_1BA5D15C4()
{
  sub_1BA5D166C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5D1610()
{
  sub_1BA5D166C();
  return sub_1BB872D60();
}

unint64_t sub_1BA5D166C()
{
  unint64_t result;

  result = qword_1ED3C6460;
  if (!qword_1ED3C6460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFAA8, &_s10CodingTypeON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3C6460);
  }
  return result;
}

uint64_t sub_1BA5D16B0@<X0>(__int128 *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA5D16D0(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1BA5D16D0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t **a7@<X8>)
{
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t result;
  char v17;
  uint64_t *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v12 = a1[3];
  v30 = a1[2];
  v31 = v12;
  v13 = a1[5];
  v32 = a1[4];
  v33 = v13;
  v14 = a1[1];
  v28 = *a1;
  v29 = v14;
  v15 = *(_BYTE *)(a2 + 56);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v34)
  {
    sub_1BB86F328();
    result = swift_release();
    if (v27 - 5 < 0xFFFFFFFD)
      v17 = v15;
    else
      v17 = 0;
    if ((v17 & 1) != 0)
    {
      v18 = 0;
    }
    else
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedDatabaseGroup(0, AssociatedTypeWitness, AssociatedConformanceWitness, v21);
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a3;
      *(_QWORD *)(v22 + 24) = a4;
      *(_QWORD *)(v22 + 32) = a5;
      *(_QWORD *)(v22 + 40) = a6;
      v23 = v31;
      *(_OWORD *)(v22 + 80) = v30;
      *(_OWORD *)(v22 + 96) = v23;
      v24 = v33;
      *(_OWORD *)(v22 + 112) = v32;
      *(_OWORD *)(v22 + 128) = v24;
      v25 = v29;
      *(_OWORD *)(v22 + 48) = v28;
      *(_OWORD *)(v22 + 64) = v25;
      *(_QWORD *)(v22 + 144) = a2;
      sub_1BA4C9ACC((uint64_t)&v28);
      sub_1BA4C9ACC((uint64_t)&v28);
      swift_retain();
      v18 = sub_1BA5D18A0(&v28, (uint64_t)sub_1BA52CA38, v22);
      swift_release();
      result = sub_1BA5D1B6C((uint64_t)&v28);
    }
    *a7 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1BA5D18A0(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_1BA5D18F0(a1, a2, a3);
}

uint64_t *sub_1BA5D18F0(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = v3;
  v8 = *v4;
  v9 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v9);
  v10 = a1[3];
  *((_OWORD *)v4 + 3) = a1[2];
  *((_OWORD *)v4 + 4) = v10;
  v11 = a1[5];
  *((_OWORD *)v4 + 5) = a1[4];
  *((_OWORD *)v4 + 6) = v11;
  v12 = a1[1];
  *((_OWORD *)v4 + 1) = *a1;
  *((_OWORD *)v4 + 2) = v12;
  v15 = v8 + 80;
  v14 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v15 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1BB86EAAC();
  sub_1BB86E74C();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v14;
  v16[3] = v13;
  v16[4] = a2;
  v16[5] = a3;
  sub_1BA4C9ACC((uint64_t)a1);
  swift_retain();
  sub_1BA5D1A70();
  v4[14] = sub_1BB86E734();
  return v4;
}

uint64_t sub_1BA5D1A70()
{
  sub_1BB86DE7C();
  sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1BA5D1B18();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9240, (uint64_t (*)(uint64_t))sub_1BA5D1B18, MEMORY[0x1E0DEAF38]);
  return sub_1BB873BC4();
}

void sub_1BA5D1B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9230)
  {
    sub_1BB86DE7C();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9230);
  }
}

uint64_t sub_1BA5D1B6C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1BA5D1C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1BA4A2E80((uint64_t)&v11, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
}

uint64_t sub_1BA5D1CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAAC51E8(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1BA5D1CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA5D1CD0(a1, a2, a3, a4, *(unint64_t **)(v4 + 16));
}

uint64_t sub_1BA5D1CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t result;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)();
  char *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t *v58;
  uint64_t v59;
  id v60;
  _BYTE v61[24];
  uint64_t v62;

  v57 = a3;
  v58 = a5;
  v56 = a2;
  sub_1BA5D21D4();
  v55 = v6;
  v59 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v54 = (char **)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v10 = (char **)((char *)&v53 - v9);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v53 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v53 - v18;
  v20 = sub_1BB86C67C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v53 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v53 - v24;
  sub_1BA4C2DD8(a1, (uint64_t)v61, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
  if (v62)
  {
    v26 = swift_dynamicCast();
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v27(v19, v26 ^ 1u, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v19, v20);
      v28 = (char *)v10 + *(int *)(v55 + 48);
      v29 = v57;
      *v10 = v56;
      v10[1] = v29;
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v28, v25, v20);
      v30 = v58;
      v31 = *v58;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v30 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v31 = sub_1BB391518(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        *v30 = v31;
      }
      v34 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(v31 + 24);
      if (v34 >= v33 >> 1)
      {
        v31 = sub_1BB391518(v33 > 1, v34 + 1, 1, v31);
        *v30 = v31;
      }
      *(_QWORD *)(v31 + 16) = v34 + 1;
      sub_1BA5193C4((uint64_t)v10, v31+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v34, (uint64_t (*)(_QWORD))sub_1BA5D21D4);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v61, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v27(v19, 1, 1, v20);
  }
  sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8(a1, (uint64_t)v61, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
  if (!v62)
  {
    v51 = sub_1BA6EDAC4;
    v52 = v61;
    return sub_1BA4A2E80((uint64_t)v52, (uint64_t (*)(_QWORD))v51);
  }
  type metadata accessor for FormatAttributedStringLink();
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  v36 = v60;
  v37 = objc_msgSend(v60, sel_contents);
  if (!v37)
  {
    v27(v16, 1, 1, v20);
    goto LABEL_20;
  }
  v38 = v37;
  v39 = sub_1BB86C6E8();
  v41 = v40;

  v27(v13, 1, 1, v20);
  sub_1BB86C574();
  sub_1BA69D314(v39, v41);
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20) == 1)
  {
LABEL_20:

    v51 = sub_1BA6EF3B0;
    v52 = v16;
    return sub_1BA4A2E80((uint64_t)v52, (uint64_t (*)(_QWORD))v51);
  }
  v42 = v53;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v53, v16, v20);
  v43 = (uint64_t)v54;
  v44 = (char *)v54 + *(int *)(v55 + 48);
  v45 = v57;
  *v54 = v56;
  *(_QWORD *)(v43 + 8) = v45;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v44, v42, v20);
  v46 = v58;
  v47 = *v58;
  v48 = swift_isUniquelyReferenced_nonNull_native();
  *v46 = v47;
  if ((v48 & 1) == 0)
  {
    v47 = sub_1BB391518(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
    *v46 = v47;
  }
  v50 = *(_QWORD *)(v47 + 16);
  v49 = *(_QWORD *)(v47 + 24);
  if (v50 >= v49 >> 1)
  {
    v47 = sub_1BB391518(v49 > 1, v50 + 1, 1, v47);
    *v46 = v47;
  }
  *(_QWORD *)(v47 + 16) = v50 + 1;
  sub_1BA5193C4(v43, v47+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v50, (uint64_t (*)(_QWORD))sub_1BA5D21D4);

  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v42, v20);
}

void sub_1BA5D21D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3CFA10)
  {
    type metadata accessor for _NSRange(255);
    sub_1BB86C67C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3CFA10);
  }
}

uint64_t type metadata accessor for FormatAttributedStringLink()
{
  return objc_opt_self();
}

uint64_t sub_1BA5D2264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingBoolExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingBoolExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v3 = v2;
  v29 = a2;
  sub_1BAE83864();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE838DC();
  sub_1BA4A2870(&qword_1ED3D1290, (uint64_t (*)(uint64_t))sub_1BAE838DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v29;
  v14 = v6;
  v15 = v9;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v22 = *((_QWORD *)v18 - 1);
      v29 = *((_QWORD *)v18 - 2);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *((_QWORD *)&v28 - 4) = &_s10CodingKeysON_178;
      *((_QWORD *)&v28 - 3) = sub_1BAE8395C();
      *((_QWORD *)&v28 - 2) = sub_1BA5D25F4();
      *((_QWORD *)&v28 - 1) = sub_1BAE839A0();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726A958);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      v25 = v29;
      *(_QWORD *)v26 = v29;
      *(_QWORD *)(v26 + 8) = v22;
      *(_QWORD *)(v26 + 16) = v24;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v22, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v14);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5D2638();
  v32 = 0uLL;
  v33 = 0;
  sub_1BB8740D4();
  v19 = v30;
  v20 = WORD4(v30);
  v28 = xmmword_1BB8A1A10;
  v32 = xmmword_1BB8A1A10;
  v33 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = v28;
    v31 = 0;
    sub_1BB8740D4();
    v21 = v34;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v14);
  *(_QWORD *)v13 = v19;
  *(_WORD *)(v13 + 8) = v20;
  *(_BYTE *)(v13 + 10) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5D25F4()
{
  unint64_t result;

  result = qword_1ED3CBEA8;
  if (!qword_1ED3CBEA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD988, &_s10CodingKeysON_178);
    atomic_store(result, (unint64_t *)&qword_1ED3CBEA8);
  }
  return result;
}

unint64_t sub_1BA5D2638()
{
  unint64_t result;

  result = qword_1ED3B4B68;
  if (!qword_1ED3B4B68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolBinding, &type metadata for FormatBoolBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B4B68);
  }
  return result;
}

uint64_t sub_1BA5D267C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAE77D20();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5D26B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA620418();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5D26E4(_QWORD *a1)
{
  return PuzzleStatsState.encode(to:)(a1);
}

uint64_t PuzzleStatsState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BA5D29A4(0, &qword_1ED3A31A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5D2960();
  sub_1BB8746C8();
  LOBYTE(v12) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + 16);
    HIBYTE(v11) = 1;
    sub_1BA5D28FC();
    sub_1BA5D2A00(&qword_1ED3A2E28, (uint64_t (*)(void))sub_1BA8336A8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BB8741AC();
    v12 = *(_QWORD *)(v3 + 24);
    HIBYTE(v11) = 2;
    sub_1BA5D2AE8();
    sub_1BA5D2A70();
    sub_1BB8741AC();
    type metadata accessor for PuzzleStatsState();
    LOBYTE(v12) = 3;
    sub_1BB86C8B0();
    sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BA5D28FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2E20)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2E20);
  }
}

unint64_t sub_1BA5D2960()
{
  unint64_t result;

  result = qword_1ED3A2A08;
  if (!qword_1ED3A2A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88F984, &type metadata for PuzzleStatsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A08);
  }
  return result;
}

void sub_1BA5D29A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA5D2960();
    v7 = a3(a1, &type metadata for PuzzleStatsState.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA5D2A00(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1BA5D28FC();
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x1BCCE5B24](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5D2A70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED3A2E10;
  if (!qword_1ED3A2E10)
  {
    sub_1BA5D2AE8();
    v2 = v1;
    v3 = sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED3A2E10);
  }
  return result;
}

void sub_1BA5D2AE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2E08)
  {
    sub_1BB86C8B0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2E08);
  }
}

uint64_t sub_1BA5D2B4C()
{
  return sub_1BB86E338();
}

uint64_t sub_1BA5D2B70(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C4CC4((void (*)(_QWORD))sub_1BA5D2CEC);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CCE34((uint64_t)a1, v18[7] + 48 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + 48 * v12);
    v24 = *a1;
    v25 = a1[2];
    v23[1] = a1[1];
    v23[2] = v25;
    *v23 = v24;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4B26F8(v15, a4 & 1, (void (*)(_QWORD))sub_1BA5D2CEC);
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CCE34((uint64_t)a1, v18[7] + 48 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BA5D2CEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3048)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3048);
  }
}

uint64_t getEnumTagSinglePayload for PuzzleStatsState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for PuzzleStatsState()
{
  uint64_t result;

  result = qword_1ED3C2130;
  if (!qword_1ED3C2130)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for PuzzleStatsState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1BA5D2DF0()
{
  return sub_1BB86E32C();
}

uint64_t sub_1BA5D2E14(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BA5D2EE4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BA747A10((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BA747A10((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1BA5D2EE4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BB873A98();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BAF47810(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BB873D80();
  if (!v8)
  {
    sub_1BB873EA0();
    __break(1u);
LABEL_17:
    result = sub_1BB873F84();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BA5D309C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  v2 = (void *)sub_1BB872970();
  v3 = (void *)sub_1BB86C808();
  v4 = objc_msgSend(v1, sel_sortedPuzzleIDsForPuzzleTypeID_sinceLastPlayedDate_, v2, v3);

  v5 = sub_1BB872DB4();
  return v5;
}

_QWORD *sub_1BA5D312C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v4 = v3;
  sub_1BAA28A34(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3[35];
  v12 = v3[36];
  __swift_project_boxed_opaque_existential_1(v3 + 32, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  v13 = type metadata accessor for PuzzleStatsState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13) != 1)
  {
    v14 = *((_QWORD *)v10 + 2);
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatsState);
    if (*(_QWORD *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      v15 = sub_1BA6E35A8(a1, a2);
      if ((v16 & 1) != 0)
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 48 * v15);
        v44 = a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = sub_1BAA1CF50(v17);
        v20 = sub_1BA6E43EC(v19);
        swift_bridgeObjectRelease();
        v48 = *(_QWORD *)(v18 + 16);
        if (!v48)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        v43 = v17;
        v46 = v18 + 32;
        v47 = v4 + 14;
        v45 = v20 + 56;
        swift_bridgeObjectRetain();
        v21 = 0;
        v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v23 = (uint64_t *)(v46 + 16 * v21);
          v25 = *v23;
          v24 = v23[1];
          v27 = v4[17];
          v26 = v4[18];
          __swift_project_boxed_opaque_existential_1(v47, v27);
          v28 = *(_QWORD *)(v26 + 8);
          v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 16);
          swift_bridgeObjectRetain();
          if ((v29(v25, v24, v27, v28) & 1) == 0)
            goto LABEL_25;
          if (!*(_QWORD *)(v20 + 16))
            goto LABEL_25;
          sub_1BB8745CC();
          sub_1BB872A90();
          v30 = sub_1BB874608();
          v31 = -1 << *(_BYTE *)(v20 + 32);
          v32 = v30 & ~v31;
          if (((*(_QWORD *)(v45 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
            goto LABEL_25;
          v33 = *(_QWORD *)(v20 + 48);
          v34 = (_QWORD *)(v33 + 16 * v32);
          v35 = *v34 == v25 && v34[1] == v24;
          if (!v35 && (sub_1BB874398() & 1) == 0)
            break;
LABEL_7:
          swift_bridgeObjectRelease();
LABEL_8:
          if (++v21 == v48)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v22;
          }
        }
        v36 = ~v31;
        while (1)
        {
          v32 = (v32 + 1) & v36;
          if (((*(_QWORD *)(v45 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
            break;
          v37 = (_QWORD *)(v33 + 16 * v32);
          v38 = *v37 == v25 && v37[1] == v24;
          if (v38 || (sub_1BB874398() & 1) != 0)
            goto LABEL_7;
        }
LABEL_25:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_1BA6EA0D0(0, v22[2] + 1, 1, v22);
        v40 = v22[2];
        v39 = v22[3];
        if (v40 >= v39 >> 1)
          v22 = sub_1BA6EA0D0((_QWORD *)(v39 > 1), v40 + 1, 1, v22);
        v22[2] = v40 + 1;
        v41 = &v22[2 * v40];
        v41[4] = v25;
        v41[5] = v24;
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAA28A34);
LABEL_32:
  swift_bridgeObjectRetain();
  return (_QWORD *)a3;
}

uint64_t sub_1BA5D3510@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  int v5;
  char v6;

  result = swift_getObjectType();
  v5 = *(unsigned __int8 *)(v1 + 313);
  if (v5 == 8)
  {
    if (qword_1ED3D5158 != -1)
      swift_once();
    sub_1BA50AD30(&qword_1ED3A2A90, v4, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsService, (uint64_t)&unk_1BB891294);
    result = sub_1BB86D210();
    LOBYTE(v5) = v6;
    *(_BYTE *)(v1 + 313) = v6;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1BA5D35C0(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_1BA5D3654(unint64_t a1)
{
  return sub_1BA5D3668(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BA5D3668(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2250, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

void sub_1BA5D367C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  char *v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  int64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t);
  char *v143;
  char *v144;
  _QWORD *v145;
  int64_t v146;
  char *v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;

  v3 = sub_1BB86C8B0();
  v150 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v136 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v147 = (char *)&v132 - v6;
  MEMORY[0x1E0C80A78](v7);
  v144 = (char *)&v132 - v8;
  MEMORY[0x1E0C80A78](v9);
  v143 = (char *)&v132 - v10;
  v11 = a1[1];
  v12 = sub_1BB8741F4();
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_140;
    if (v11)
      sub_1BB5E2074(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_148;
  v133 = v12;
  v139 = v1;
  if (v11 < 2)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    v138 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
    if (v11 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v19 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_105:
      v132 = v17;
      if (v20 >= 2)
      {
        v123 = *a1;
        do
        {
          v124 = v20 - 2;
          if (v20 < 2)
            goto LABEL_135;
          if (!v123)
            goto LABEL_147;
          v125 = v19;
          v126 = v19 + 32;
          v127 = *(_QWORD *)&v19[16 * v124 + 32];
          v128 = *(_QWORD *)&v19[16 * v20 + 24];
          v129 = v139;
          sub_1BB5E288C(v123 + *(_QWORD *)(v150 + 72) * v127, v123 + *(_QWORD *)(v150 + 72) * *(_QWORD *)&v126[16 * v20 - 16], v123 + *(_QWORD *)(v150 + 72) * v128, v138);
          v139 = v129;
          if (v129)
            break;
          if (v128 < v127)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v125 = sub_1BACAB464((uint64_t)v125);
          if (v124 >= *((_QWORD *)v125 + 2))
            goto LABEL_137;
          v130 = &v125[16 * v124 + 32];
          *(_QWORD *)v130 = v127;
          *((_QWORD *)v130 + 1) = v128;
          v131 = *((_QWORD *)v125 + 2);
          if (v20 > v131)
            goto LABEL_138;
          v19 = v125;
          memmove(&v125[16 * v20 + 16], &v125[16 * v20 + 32], 16 * (v131 - v20));
          *((_QWORD *)v125 + 2) = v131 - 1;
          v20 = v131 - 1;
        }
        while (v131 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v132 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v132 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1BB872E74();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v150 + 80);
    v132 = v15;
    v138 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v19 = (char *)MEMORY[0x1E0DEE9D8];
  v145 = a1;
  while (1)
  {
    v21 = v18;
    v22 = v18 + 1;
    v137 = v18;
    if (v18 + 1 >= v11)
    {
      v34 = v18 + 1;
      v41 = v139;
    }
    else
    {
      v141 = *a1;
      v23 = v141;
      v148 = v11;
      v24 = v18;
      v25 = v150;
      v26 = *(_QWORD *)(v150 + 72);
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 16);
      v28 = v143;
      v27(v143, v141 + v26 * v22, v3);
      v29 = v23 + v26 * v24;
      v30 = v144;
      v27(v144, v29, v3);
      v146 = sub_1BB078C54();
      LODWORD(v142) = sub_1BB87291C();
      v31 = *(void (**)(char *, uint64_t))(v25 + 8);
      v32 = v30;
      v33 = v141;
      v31(v32, v3);
      v31(v28, v3);
      v34 = v24 + 2;
      v11 = v148;
      v149 = v26;
      if (v34 >= v148)
      {
        v41 = v139;
        v40 = v26;
      }
      else
      {
        v134 = v19;
        v140 = v26 * v22;
        v35 = v26 * v34;
        while (1)
        {
          v36 = v34;
          v37 = v143;
          v27(v143, v33 + v35, v3);
          v38 = v144;
          v27(v144, v33 + v140, v3);
          v39 = sub_1BB87291C();
          v31(v38, v3);
          v31(v37, v3);
          if (((v142 ^ v39) & 1) != 0)
            break;
          v34 = v36 + 1;
          v11 = v148;
          v40 = v149;
          v33 += v149;
          if (v148 == v34)
          {
            v34 = v148;
            v41 = v139;
            v19 = v134;
            goto LABEL_25;
          }
        }
        v41 = v139;
        v19 = v134;
        v34 = v36;
        v11 = v148;
        v40 = v149;
      }
LABEL_25:
      a1 = v145;
      v21 = v137;
      if ((v142 & 1) != 0)
      {
        if (v34 < v137)
          goto LABEL_141;
        if (v137 < v34)
        {
          v134 = v19;
          v42 = 0;
          v43 = v40 * (v34 - 1);
          v44 = v34 * v40;
          v45 = v137;
          v46 = v137 * v40;
          v146 = v34;
          do
          {
            if (v45 != v34 + v42 - 1)
            {
              if (!v141)
                goto LABEL_146;
              v47 = v41;
              v48 = v141 + v46;
              v49 = (char *)(v141 + v43);
              v142 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 32);
              v142(v136, v141 + v46, v3);
              if (v46 < v43 || v48 >= v141 + v44)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v46 != v43)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              v142(v49, (uint64_t)v136, v3);
              v41 = v47;
              a1 = v145;
              v34 = v146;
              v40 = v149;
            }
            ++v45;
            --v42;
            v43 -= v40;
            v44 -= v40;
            v46 += v40;
          }
          while (v45 < v34 + v42);
          v19 = v134;
          v21 = v137;
          v11 = v148;
        }
      }
    }
    if (v34 >= v11)
      goto LABEL_57;
    if (__OFSUB__(v34, v21))
      goto LABEL_139;
    if (v34 - v21 >= v133)
      goto LABEL_57;
    if (__OFADD__(v21, v133))
      goto LABEL_142;
    v50 = v21 + v133 >= v11 ? v11 : v21 + v133;
    if (v50 < v21)
      break;
    if (v34 != v50)
    {
      v134 = v19;
      v135 = v50;
      v51 = *(_QWORD *)(v150 + 72);
      v52 = *(char **)(v150 + 16);
      v139 = v41;
      v140 = (uint64_t)v52;
      v53 = v51 * (v34 - 1);
      v141 = v51;
      v54 = v34 * v51;
      do
      {
        v56 = 0;
        v146 = v34;
        v142 = (void (*)(char *, uint64_t, uint64_t))v54;
        while (1)
        {
          v57 = *a1;
          v148 = v54 + v56;
          v149 = v21;
          v58 = (char *)(v54 + v56 + v57);
          v59 = v143;
          v60 = (void (*)(char *, uint64_t, uint64_t))v140;
          ((void (*)(char *, char *, uint64_t))v140)(v143, v58, v3);
          v61 = v53;
          v62 = v53 + v56 + v57;
          v63 = a1;
          v64 = v144;
          v60(v144, v62, v3);
          sub_1BB078C54();
          LOBYTE(v57) = sub_1BB87291C();
          v65 = *(void (**)(char *, uint64_t))(v150 + 8);
          v65(v64, v3);
          v65(v59, v3);
          if ((v57 & 1) == 0)
            break;
          v66 = *v63;
          if (!*v63)
            goto LABEL_144;
          v54 = (uint64_t)v142;
          v53 = v61;
          v67 = (char *)(v66 + v61 + v56);
          v68 = *(void (**)(char *, char *, uint64_t))(v150 + 32);
          v68(v147, (char *)v142 + v66 + v56, v3);
          swift_arrayInitWithTakeFrontToBack();
          v68(v67, v147, v3);
          v56 -= v141;
          v21 = v149 + 1;
          a1 = v145;
          v55 = v146;
          if (v146 == v149 + 1)
            goto LABEL_50;
        }
        v55 = v146;
        a1 = v63;
        v53 = v61;
        v54 = (uint64_t)v142;
LABEL_50:
        v34 = v55 + 1;
        v53 += v141;
        v54 += v141;
        v21 = v137;
      }
      while (v34 != v135);
      v34 = v135;
      v41 = v139;
      v19 = v134;
    }
LABEL_57:
    if (v34 < v21)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v139 = v41;
    v146 = v34;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v19 = sub_1BACAA368(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v71 = *((_QWORD *)v19 + 2);
    v70 = *((_QWORD *)v19 + 3);
    v20 = v71 + 1;
    if (v71 >= v70 >> 1)
      v19 = sub_1BACAA368((char *)(v70 > 1), v71 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v20;
    v72 = v19 + 32;
    v73 = &v19[16 * v71 + 32];
    v74 = v146;
    *(_QWORD *)v73 = v21;
    *((_QWORD *)v73 + 1) = v74;
    if (v71)
    {
      while (1)
      {
        v75 = v20 - 1;
        if (v20 >= 4)
        {
          v80 = &v72[16 * v20];
          v81 = *((_QWORD *)v80 - 8);
          v82 = *((_QWORD *)v80 - 7);
          v86 = __OFSUB__(v82, v81);
          v83 = v82 - v81;
          if (v86)
            goto LABEL_123;
          v85 = *((_QWORD *)v80 - 6);
          v84 = *((_QWORD *)v80 - 5);
          v86 = __OFSUB__(v84, v85);
          v78 = v84 - v85;
          v79 = v86;
          if (v86)
            goto LABEL_124;
          v87 = v20 - 2;
          v88 = &v72[16 * v20 - 32];
          v90 = *(_QWORD *)v88;
          v89 = *((_QWORD *)v88 + 1);
          v86 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v86)
            goto LABEL_126;
          v86 = __OFADD__(v78, v91);
          v92 = v78 + v91;
          if (v86)
            goto LABEL_129;
          if (v92 >= v83)
          {
            v110 = &v72[16 * v75];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v86 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v86)
              goto LABEL_133;
            v103 = v78 < v113;
            goto LABEL_94;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v104 = *((_QWORD *)v19 + 4);
            v105 = *((_QWORD *)v19 + 5);
            v86 = __OFSUB__(v105, v104);
            v97 = v105 - v104;
            v98 = v86;
            goto LABEL_88;
          }
          v77 = *((_QWORD *)v19 + 4);
          v76 = *((_QWORD *)v19 + 5);
          v86 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          v79 = v86;
        }
        if ((v79 & 1) != 0)
          goto LABEL_125;
        v87 = v20 - 2;
        v93 = &v72[16 * v20 - 32];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v96 = __OFSUB__(v94, v95);
        v97 = v94 - v95;
        v98 = v96;
        if (v96)
          goto LABEL_128;
        v99 = &v72[16 * v75];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v86 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v86)
          goto LABEL_131;
        if (__OFADD__(v97, v102))
          goto LABEL_132;
        if (v97 + v102 >= v78)
        {
          v103 = v78 < v102;
LABEL_94:
          if (v103)
            v75 = v87;
          goto LABEL_96;
        }
LABEL_88:
        if ((v98 & 1) != 0)
          goto LABEL_127;
        v106 = &v72[16 * v75];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v86 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v86)
          goto LABEL_130;
        if (v109 < v97)
          goto LABEL_15;
LABEL_96:
        v114 = v75 - 1;
        if (v75 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v115 = *a1;
        if (!*a1)
          goto LABEL_145;
        v116 = v19;
        v117 = &v72[16 * v114];
        v118 = *(_QWORD *)v117;
        v119 = &v72[16 * v75];
        v120 = *((_QWORD *)v119 + 1);
        v121 = v139;
        sub_1BB5E288C(v115 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v117, v115 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v119, v115 + *(_QWORD *)(v150 + 72) * v120, v138);
        v139 = v121;
        if (v121)
          goto LABEL_116;
        if (v120 < v118)
          goto LABEL_120;
        if (v75 > *((_QWORD *)v116 + 2))
          goto LABEL_121;
        *(_QWORD *)v117 = v118;
        *(_QWORD *)&v72[16 * v114 + 8] = v120;
        v122 = *((_QWORD *)v116 + 2);
        if (v75 >= v122)
          goto LABEL_122;
        v19 = v116;
        v20 = v122 - 1;
        memmove(&v72[16 * v75], v119 + 16, 16 * (v122 - 1 - v75));
        *((_QWORD *)v116 + 2) = v122 - 1;
        a1 = v145;
        if (v122 <= 2)
          goto LABEL_15;
      }
    }
    v20 = 1;
LABEL_15:
    v11 = a1[1];
    v18 = v146;
    if (v146 >= v11)
    {
      v17 = v132;
      goto LABEL_105;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1BB873EA0();
  __break(1u);
}

unint64_t sub_1BA5D4094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  unint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  unint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t, double);
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;

  v86 = a1;
  v1 = type metadata accessor for PuzzleStreak();
  v88 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v90 = (uint64_t)&v82 - v5;
  v6 = sub_1BB86CAD8();
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  MEMORY[0x1E0C80A78](v6);
  v91 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86BEC0();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v85 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v95 = (char *)&v82 - v13;
  v14 = sub_1BB86C8B0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v102 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v105 = (char *)&v82 - v18;
  MEMORY[0x1E0C80A78](v19);
  v94 = (char *)&v82 - v20;
  MEMORY[0x1E0C80A78](v21);
  v110 = (char *)&v82 - v22;
  v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v25);
  v104 = (char *)&v82 - v26;
  v27 = v10;
  sub_1BA4B07F0(0, &qword_1ED3A2448, v9, v23);
  MEMORY[0x1E0C80A78](v28);
  v84 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v82 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v82 - v34;
  v37 = MEMORY[0x1E0C80A78](v36);
  v39 = (char *)&v82 - v38;
  v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v27 + 56);
  v103((char *)&v82 - v38, 1, 1, v8, v37);
  v40 = *(_QWORD *)(v86 + 16);
  v106 = v27;
  if (v40)
  {
    v83 = v3;
    v41 = v86 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v99 = *(_QWORD *)(v15 + 72);
    v101 = v15;
    v109 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    v96 = MEMORY[0x1E0DEE9D8];
    v87 = v8;
    v100 = v35;
    v42 = v8;
    v89 = v39;
    v98 = v32;
    do
    {
      v47 = v42;
      v48 = (uint64_t)v39;
      v49 = v104;
      v109(v104, v41, v14);
      v50 = v101;
      v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
      v51(v49, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v49, 1, v14) == 1)
      {
        v72 = v47;
        v3 = v83;
        v74 = v85;
        v75 = (uint64_t)v84;
        v39 = (char *)v48;
        goto LABEL_19;
      }
      v107 = v41;
      v108 = v40;
      v97 = v51;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v110, v49, v14);
      v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
      sub_1BA5E01A4(v48, (uint64_t)v35, &qword_1ED3A2448, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
      v53 = v106;
      v54 = v47;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v35, 1, v47) == 1)
      {
        sub_1BA5C699C((uint64_t)v35, &qword_1ED3A2448, v52);
        v44 = (void (*)(char *, char *, uint64_t))v109;
        v43 = v110;
        v109(v105, (uint64_t)v110, v14);
        v44(v102, v43, v14);
        v45 = (uint64_t)v98;
        v39 = (char *)v48;
        sub_1BB86BE84();
        v46 = *(void (**)(char *, uint64_t))(v50 + 8);
        v42 = v54;
      }
      else
      {
        v55 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
        v56 = v53;
        v57 = v50;
        v58 = v95;
        v55(v95, v35, v47);
        v59 = v94;
        sub_1BB86BE78();
        v60 = v91;
        sub_1BB86CA90();
        v61 = v105;
        sub_1BB86C778();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v60, v93);
        v62 = sub_1BB86C820();
        v46 = *(void (**)(char *, uint64_t))(v57 + 8);
        v46(v61, v14);
        if ((v62 & 1) != 0)
        {
          sub_1BB86BE9C();
          v109(v102, (uint64_t)v110, v14);
          v45 = (uint64_t)v98;
          sub_1BB86BE84();
          v46(v59, v14);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v54);
          v39 = v89;
          v42 = v54;
        }
        else
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v90, v58, v54);
          v63 = v46;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v64 = v96;
          else
            v64 = sub_1BB3905EC(0, *(_QWORD *)(v96 + 16) + 1, 1, v96);
          v65 = v105;
          v66 = v94;
          v67 = v110;
          v69 = *(_QWORD *)(v64 + 16);
          v68 = *(_QWORD *)(v64 + 24);
          if (v69 >= v68 >> 1)
            v64 = sub_1BB3905EC(v68 > 1, v69 + 1, 1, v64);
          *(_QWORD *)(v64 + 16) = v69 + 1;
          v70 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
          v96 = v64;
          sub_1BB5E2DAC(v90, v64 + v70 + *(_QWORD *)(v88 + 72) * v69);
          v71 = (void (*)(char *, char *, uint64_t))v109;
          v109(v65, (uint64_t)v67, v14);
          v71(v102, v67, v14);
          v45 = (uint64_t)v98;
          sub_1BB86BE84();
          v46 = v63;
          v63(v66, v14);
          v42 = v87;
          (*(void (**)(char *, uint64_t))(v106 + 8))(v95, v87);
          v39 = v89;
        }
        v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
      }
      v46(v110, v14);
      sub_1BA5C699C((uint64_t)v39, &qword_1ED3A2448, v52);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v103)(v45, 0, 1, v42);
      sub_1BA646EFC(v45, (uint64_t)v39, &qword_1ED3A2448, v52);
      v35 = v100;
      v41 = v107 + v99;
      v40 = v108 - 1;
    }
    while (v108 != 1);
    v72 = v42;
    v3 = v83;
    v74 = v85;
    v75 = (uint64_t)v84;
    v97(v104, 1, 1, v14);
  }
  else
  {
    v72 = v8;
    v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    swift_bridgeObjectRetain();
    v96 = MEMORY[0x1E0DEE9D8];
    v74 = v85;
    v75 = (uint64_t)v84;
    v73(v104, 1, 1, v14);
  }
LABEL_19:
  v76 = v106;
  swift_bridgeObjectRelease();
  sub_1BA5E01A4((uint64_t)v39, v75, &qword_1ED3A2448, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v75, 1, v72) == 1)
  {
    sub_1BA5C699C((uint64_t)v39, &qword_1ED3A2448, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
    v77 = v96;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v74, v75, v72);
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v3, v74, v72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v78 = v96;
    else
      v78 = sub_1BB3905EC(0, *(_QWORD *)(v96 + 16) + 1, 1, v96);
    v75 = (uint64_t)v39;
    v80 = *(_QWORD *)(v78 + 16);
    v79 = *(_QWORD *)(v78 + 24);
    if (v80 >= v79 >> 1)
      v78 = sub_1BB3905EC(v79 > 1, v80 + 1, 1, v78);
    *(_QWORD *)(v78 + 16) = v80 + 1;
    v77 = v78;
    sub_1BB5E2DAC((uint64_t)v3, v78+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v80);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v74, v72);
  }
  sub_1BA5C699C(v75, &qword_1ED3A2448, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  return v77;
}

uint64_t sub_1BA5D4968(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  char *v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  unint64_t v84;
  char *v85;
  char *v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v112 = a1;
  v3 = sub_1BB86C8B0();
  v108 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v95 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v94 = (char *)&v82 - v6;
  MEMORY[0x1E0C80A78](v7);
  v93 = (char *)&v82 - v8;
  MEMORY[0x1E0C80A78](v9);
  v99 = (char *)&v82 - v10;
  MEMORY[0x1E0C80A78](v11);
  v102 = (char *)&v82 - v12;
  MEMORY[0x1E0C80A78](v13);
  v101 = (char *)&v82 - v14;
  MEMORY[0x1E0C80A78](v15);
  v85 = (char *)&v82 - v16;
  v110 = sub_1BB86BEC0();
  v104 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v92 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v96 = (char *)&v82 - v19;
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v21);
  v103 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v91 = (uint64_t)&v82 - v24;
  v109 = type metadata accessor for PuzzleStreak();
  v107 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v86 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v98 = (char *)&v82 - v27;
  MEMORY[0x1E0C80A78](v28);
  v111 = (uint64_t)&v82 - v29;
  MEMORY[0x1E0C80A78](v30);
  v89 = (uint64_t)&v82 - v31;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], v20);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v82 - v33;
  v35 = sub_1BB86CB50();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v82 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1BB86C9E8();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v42 = (char *)&v82 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1BB86CAD8();
  v105 = *(_QWORD *)(v43 - 8);
  v106 = v43;
  MEMORY[0x1E0C80A78](v43);
  v100 = (char *)&v82 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x1E0C80A78](v45);
  v48 = (char *)&v82 - v47;
  if (!a2 || !*(_QWORD *)(a2 + 16))
  {
    v59 = v112;
    swift_bridgeObjectRetain();
    return v59;
  }
  (*(void (**)(char *, _QWORD, uint64_t, double))(v40 + 104))(v42, *MEMORY[0x1E0CB0EF8], v39, v46);
  swift_bridgeObjectRetain();
  sub_1BB86C9F4();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
  sub_1BB86CB2C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v34, v35);
    v97 = v48;
    sub_1BB86CAB4();
    v113 = v112;
    swift_bridgeObjectRetain();
    sub_1BB3847B0(a2);
    sub_1BA5D35C0(&v113, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t))sub_1BAA67E60, (uint64_t (*)(_QWORD *))sub_1BB5E12B4);
    v50 = v113;
    v51 = v111;
    if (*(_QWORD *)(v113 + 16))
    {
      v52 = v107;
      v84 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      v88 = v113 + v84;
      v53 = v91;
      sub_1BA4C2DD8(v113 + v84, v91, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak);
      v54 = v109;
      v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v90(v53, 0, 1, v109);
      v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      if (v87(v53, 1, v54) != 1)
      {
        v55 = v89;
        sub_1BB5E2DAC(v53, v89);
        v56 = v96;
        v83 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
        v83(v96, v55, v110);
        v82 = v50;
        v57 = *(_QWORD *)(v50 + 16);
        v58 = v57 != 0;
        v59 = MEMORY[0x1E0DEE9D8];
        if (v57 == v58)
        {
          v60 = (uint64_t)v103;
LABEL_8:
          v90(v60, 1, 1, v109);
LABEL_9:
          swift_bridgeObjectRelease();
          v51 = (uint64_t)v86;
          v83(v86, (uint64_t)v56, v110);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_10;
        }
        else
        {
          v60 = (uint64_t)v103;
          v63 = v85;
          v91 = *(_QWORD *)(v50 + 16);
          while (v58 < v57)
          {
            v71 = *(_QWORD *)(v52 + 72);
            sub_1BA4C2DD8(v88 + v71 * v58, v60, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak);
            v72 = v109;
            v90(v60, 0, 1, v109);
            if (v87(v60, 1, v72) == 1)
              goto LABEL_9;
            v112 = v59;
            sub_1BB5E2DAC(v60, v51);
            v73 = v101;
            sub_1BB86BE78();
            v74 = v100;
            sub_1BB86CA90();
            sub_1BB86C76C();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v74, v106);
            v75 = *(void (**)(char *, uint64_t))(v108 + 8);
            v75(v73, v3);
            v76 = v102;
            sub_1BB86BE9C();
            sub_1BB86CA00();
            v75(v76, v3);
            sub_1BB86CA00();
            sub_1BB078C54();
            v77 = v56;
            v78 = sub_1BB87291C();
            v75(v76, v3);
            v75(v73, v3);
            if ((v78 & 1) != 0)
            {
              v83(v98, (uint64_t)v56, v110);
              v79 = v112;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v79 = sub_1BB3905EC(0, *(_QWORD *)(v79 + 16) + 1, 1, v79);
              v52 = v107;
              v51 = v111;
              v81 = *(_QWORD *)(v79 + 16);
              v80 = *(_QWORD *)(v79 + 24);
              if (v81 >= v80 >> 1)
                v79 = sub_1BB3905EC(v80 > 1, v81 + 1, 1, v79);
              *(_QWORD *)(v79 + 16) = v81 + 1;
              v112 = v79;
              sub_1BB5E2DAC((uint64_t)v98, v79 + v84 + v81 * v71);
              v75(v63, v3);
              v68 = (char *)v51;
              v77 = v96;
            }
            else
            {
              sub_1BB86BE9C();
              v64 = v93;
              v65 = v94;
              sub_1BB86BE9C();
              v66 = v95;
              sub_1BB86BE78();
              if ((sub_1BB872928() & 1) != 0)
                v67 = v66;
              else
                v67 = v65;
              (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v64, v67, v3);
              v75(v66, v3);
              v75(v65, v3);
              v68 = v92;
              sub_1BB86BE84();
              v75(v63, v3);
              v51 = v111;
              sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak);
              v52 = v107;
            }
            ++v58;
            v69 = v104;
            v70 = v110;
            (*(void (**)(char *, uint64_t))(v104 + 8))(v77, v110);
            (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v77, v68, v70);
            v57 = v91;
            v56 = v77;
            v59 = v112;
            v60 = (uint64_t)v103;
            if (v91 == v58)
              goto LABEL_8;
          }
          __break(1u);
        }
        v59 = sub_1BB3905EC(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
LABEL_10:
        v62 = *(_QWORD *)(v59 + 16);
        v61 = *(_QWORD *)(v59 + 24);
        if (v62 >= v61 >> 1)
          v59 = sub_1BB3905EC(v61 > 1, v62 + 1, 1, v59);
        *(_QWORD *)(v59 + 16) = v62 + 1;
        sub_1BB5E2DAC(v51, v59 + v84 + *(_QWORD *)(v52 + 72) * v62);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v56, v110);
        sub_1BA4A2E80(v89, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak);
        (*(void (**)(char *, uint64_t))(v105 + 8))(v97, v106);
        return v59;
      }
    }
    else
    {
      v53 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v91, 1, 1, v109);
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v97, v106);
    sub_1BA5C699C(v53, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    return v113;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PuzzleStreak()
{
  uint64_t result;

  result = qword_1ED3C0A50;
  if (!qword_1ED3C0A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA5D53D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA5D5440(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA5D54AC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA5D5518(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA4A3FB4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA5D5564()
{
  sub_1BA5D560C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5D55B0()
{
  sub_1BA5D560C();
  return sub_1BB872D60();
}

unint64_t sub_1BA5D560C()
{
  unint64_t result;

  result = qword_1ED3C7978;
  if (!qword_1ED3C7978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2618, &_s10CodingTypeON_161);
    atomic_store(result, (unint64_t *)&qword_1ED3C7978);
  }
  return result;
}

void sub_1BA5D5650(_QWORD *a1)
{
  FormatBackground.encode(to:)(a1);
}

void FormatBackground.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v25[72];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v25[2] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v25[4] = (char *)v25 - v7;
  MEMORY[0x1E0C80A78](v8);
  v25[0] = (char *)v25 - v9;
  MEMORY[0x1E0C80A78](v10);
  v25[1] = (char *)v25 - v11;
  MEMORY[0x1E0C80A78](v12);
  v25[3] = (char *)v25 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v2;
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_1BA6B8518();
  v25[71] = v19;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBackground, v24, v21, (uint64_t)&type metadata for FormatBackground, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v19, v23, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5D5850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = qword_1ED3C2478;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 72);
  sub_1BA5D5F68(0, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return swift_release();
}

uint64_t sub_1BA5D5F68(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF61B4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D60CC()
{
  unint64_t result;

  result = qword_1ED3A58E0;
  if (!qword_1ED3A58E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5E10, &_s10CodingTypeON_124);
    atomic_store(result, (unint64_t *)&qword_1ED3A58E0);
  }
  return result;
}

uint64_t sub_1BA5D6110(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v22 = a1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF61B4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D6280()
{
  unint64_t result;

  result = qword_1ED39B1F8;
  if (!qword_1ED39B1F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradient, &type metadata for FormatGradient);
    atomic_store(result, (unint64_t *)&qword_1ED39B1F8);
  }
  return result;
}

uint64_t sub_1BA5D62C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRatio.init(from:)(a1, a2);
}

uint64_t FormatRatio.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v23;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v19 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v17;
      *(_QWORD *)(v20 + 16) = &unk_1E726DEE8;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5D65B8();
  v24 = 0uLL;
  sub_1BB8740D4();
  v18 = v25;
  sub_1BA655028(0);
  v24 = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  *(_QWORD *)v12 = v25;
  *(_BYTE *)(v12 + 8) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5D65B8()
{
  unint64_t result;

  result = qword_1ED3C6670;
  if (!qword_1ED3C6670)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7600, &_s10CodingTypeON_40);
    atomic_store(result, (unint64_t *)&qword_1ED3C6670);
  }
  return result;
}

void sub_1BA5D65FC(_QWORD *a1)
{
  FormatTextSize.encode(to:)(a1);
}

void FormatTextSize.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[7];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[5] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[4] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[3] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v25[2] = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v25[1] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  v25[0] = (char *)v25 - v16;
  MEMORY[0x1E0C80A78](v17);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v1;
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1BA6B8518();
  v25[6] = v20;
  sub_1BA6EC090((uint64_t)&type metadata for FormatCodingKeys, v24, v22, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)&off_1E734BD80, (uint64_t)v20);
  __asm { BR              X10 }
}

unint64_t sub_1BA5D6808()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v0[3];
  v5 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v4);
  sub_1BA71CA6C(v3);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476C20);
  v8 = *(_QWORD *)(v2 - 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v2 - 88);
  sub_1BA69F160(v8, (uint64_t)sub_1BB433958, 0, v4, v5);
  if (v9)
  {
    sub_1BA719718(v3);
    sub_1BA4A2E80(v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80(*(_QWORD *)(v2 - 96), (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  else
  {
    sub_1BA4A2E80(v8, type metadata accessor for FormatVersionRequirement);
    *(_QWORD *)(v2 - 72) = v3;
    FormatSize.encode(to:)(v0);
    sub_1BA4A2E80(*(_QWORD *)(v2 - 96), (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BA719718(v3);
  }
}

uint64_t sub_1BA5D6E84(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE4E08;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D6FA8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D6FA8()
{
  unint64_t result;

  result = qword_1ED39B210;
  if (!qword_1ED39B210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91775C, &type metadata for FormatTextSize.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39B210);
  }
  return result;
}

uint64_t sub_1BA5D6FEC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4E08;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D6FA8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5D7150(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4E08;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D6FA8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9590, (uint64_t)&type metadata for FormatTextNodeAlternative, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5D72D4();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D72D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF30;
  if (!qword_1ED39BF30)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9590, (uint64_t)&type metadata for FormatTextNodeAlternative, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA825C70();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF30);
  }
  return result;
}

uint64_t sub_1BA5D734C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatParagraphStyle.init(from:)(a1, a2);
}

uint64_t FormatParagraphStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unsigned __int8 v32;
  char v33;
  _BYTE *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _BYTE *v68;
  unsigned __int8 v69;
  _BYTE v70[7];
  char v71;
  _BYTE v72[7];
  char v73;
  _BYTE v74[7];
  char v75;
  _BYTE v76[7];
  char v77;
  _BYTE v78[7];
  char v79;
  _BYTE v80[7];
  char v81;
  _BYTE v82[7];
  char v83;
  _BYTE v84[7];
  char v85;
  int v86;
  char v87;
  char v88;
  _BYTE v89[7];
  char v90;
  uint64_t v91;
  unsigned __int8 v92;
  __int128 v93;
  char v94;
  unsigned __int8 v95;
  _BYTE v96[7];

  v3 = v2;
  v68 = a2;
  sub_1BAE72B5C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE72BD4();
  sub_1BA4A2870(&qword_1ED3D0EF0, (uint64_t (*)(uint64_t))sub_1BAE72BD4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (!v2)
  {
    v10 = a1[3];
    v67 = a1;
    __swift_project_boxed_opaque_existential_1(a1, v10);
    v11 = sub_1BB872874();
    LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
    swift_bridgeObjectRelease();
    v12 = v7;
    v13 = v6;
    v14 = v9;
    if ((v10 & 1) != 0)
    {
      v15 = sub_1BB8740EC();
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = (_BYTE *)(v15 + 48);
        while (*v17 != 1)
        {
          v17 += 24;
          if (!--v16)
            goto LABEL_7;
        }
        v19 = v12;
        v20 = *((_QWORD *)v17 - 2);
        v21 = *((_QWORD *)v17 - 1);
        swift_bridgeObjectRetain_n();
        v22 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v22);
        *(&v43 - 4) = (uint64_t)&_s10CodingKeysON_250;
        *(&v43 - 3) = sub_1BAE72C54();
        *(&v43 - 2) = sub_1BA5D7DA4();
        *(&v43 - 1) = sub_1BAE72C98();
        swift_getKeyPath();
        swift_retain();
        v23 = sub_1BAE71220((uint64_t)&unk_1E724F4C0);
        swift_release_n();
        sub_1BA98D1F0();
        v3 = (void *)swift_allocError();
        *(_QWORD *)v24 = v20;
        *(_QWORD *)(v24 + 8) = v21;
        *(_QWORD *)(v24 + 16) = v23;
        *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA69C828(v20, v21, 1);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v13);
        a1 = v67;
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA5D7E70();
    v93 = 0uLL;
    v94 = 0;
    sub_1BB874068();
    v18 = v91;
    v93 = xmmword_1BB8A1A10;
    v94 = 0;
    sub_1BA689CD8();
    sub_1BB874068();
    v66 = v12;
    v25 = v91;
    v26 = v92;
    v93 = xmmword_1BB8D2D60;
    v94 = 0;
    sub_1BB874068();
    v65 = v25;
    v27 = v91;
    v28 = v92;
    v93 = xmmword_1BB8D2D70;
    v94 = 0;
    sub_1BB874068();
    v63 = v28;
    v64 = v27;
    v29 = v91;
    LOBYTE(v28) = v92;
    v93 = xmmword_1BB8D2D90;
    v94 = 0;
    sub_1BA5D7DE8();
    sub_1BB874068();
    v62 = v29;
    LODWORD(v29) = v91;
    v93 = xmmword_1BB8D2D80;
    v94 = 0;
    sub_1BA5D7E2C();
    sub_1BB874068();
    v61 = v29;
    LOBYTE(v29) = v91;
    v93 = xmmword_1BB8D2DA0;
    v94 = 0;
    sub_1BB874068();
    v60 = v91;
    v59 = v92;
    v93 = xmmword_1BB8D2DB0;
    v94 = 0;
    sub_1BB874068();
    v58 = v91;
    v57 = v92;
    v93 = xmmword_1BB8D2DD0;
    v94 = 0;
    sub_1BB874068();
    v30 = v91;
    v55 = v92;
    v93 = xmmword_1BB8D2DE0;
    v94 = 0;
    v56 = v13;
    v31 = v14;
    sub_1BB874068();
    v54 = v91;
    v53 = v92;
    v93 = xmmword_1BB8D2DF0;
    v94 = 0;
    sub_1BB874068();
    v52 = v91;
    v51 = v92;
    v93 = xmmword_1BB8D2E00;
    v94 = 0;
    sub_1BB874068();
    v50 = v91;
    v49 = v92;
    v93 = xmmword_1BB8D2E10;
    v94 = 0;
    sub_1BB874068();
    v48 = v91;
    v47 = v92;
    v93 = xmmword_1BB8868A0;
    v94 = 0;
    sub_1BB874068();
    v46 = v91;
    v45 = v92;
    v93 = xmmword_1BB8D2E20;
    v94 = 0;
    sub_1BB874068();
    v44 = v91;
    v32 = v92;
    v93 = xmmword_1BB8D2DC0;
    v94 = 0;
    v33 = sub_1BB874038();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v56);
    v95 = v26;
    v90 = v63;
    v88 = v28;
    v85 = v59;
    v83 = v57;
    v81 = v55;
    v79 = v53;
    v77 = v51;
    v75 = v49;
    v73 = v47;
    v71 = v45;
    v69 = v32;
    v34 = v68;
    *v68 = v18;
    *(_DWORD *)(v34 + 1) = v91;
    *((_DWORD *)v34 + 1) = *(_DWORD *)((char *)&v91 + 3);
    *((_QWORD *)v34 + 1) = v65;
    v34[16] = v26;
    *(_DWORD *)(v34 + 17) = *(_DWORD *)v96;
    *((_DWORD *)v34 + 5) = *(_DWORD *)&v96[3];
    *((_QWORD *)v34 + 3) = v64;
    v34[32] = v90;
    *(_DWORD *)(v34 + 33) = *(_DWORD *)v89;
    *((_DWORD *)v34 + 9) = *(_DWORD *)&v89[3];
    *((_QWORD *)v34 + 5) = v62;
    v34[48] = v88;
    v34[49] = v61;
    v34[50] = v29;
    v35 = v86;
    v34[55] = v87;
    *(_DWORD *)(v34 + 51) = v35;
    *((_QWORD *)v34 + 7) = v60;
    v34[64] = v85;
    *((_DWORD *)v34 + 17) = *(_DWORD *)&v84[3];
    *(_DWORD *)(v34 + 65) = *(_DWORD *)v84;
    *((_QWORD *)v34 + 9) = v58;
    v34[80] = v83;
    *((_DWORD *)v34 + 21) = *(_DWORD *)&v82[3];
    *(_DWORD *)(v34 + 81) = *(_DWORD *)v82;
    *((_QWORD *)v34 + 11) = v30;
    v34[96] = v81;
    v36 = *(_DWORD *)v80;
    *((_DWORD *)v34 + 25) = *(_DWORD *)&v80[3];
    *(_DWORD *)(v34 + 97) = v36;
    *((_QWORD *)v34 + 13) = v54;
    v34[112] = v79;
    v37 = *(_DWORD *)v78;
    *((_DWORD *)v34 + 29) = *(_DWORD *)&v78[3];
    *(_DWORD *)(v34 + 113) = v37;
    *((_QWORD *)v34 + 15) = v52;
    v34[128] = v77;
    v38 = *(_DWORD *)v76;
    *((_DWORD *)v34 + 33) = *(_DWORD *)&v76[3];
    *(_DWORD *)(v34 + 129) = v38;
    *((_QWORD *)v34 + 17) = v50;
    v34[144] = v75;
    v39 = *(_DWORD *)v74;
    *((_DWORD *)v34 + 37) = *(_DWORD *)&v74[3];
    *(_DWORD *)(v34 + 145) = v39;
    *((_QWORD *)v34 + 19) = v48;
    v34[160] = v73;
    v40 = *(_DWORD *)v72;
    *((_DWORD *)v34 + 41) = *(_DWORD *)&v72[3];
    *(_DWORD *)(v34 + 161) = v40;
    *((_QWORD *)v34 + 21) = v46;
    v34[176] = v71;
    v41 = *(_DWORD *)v70;
    *((_DWORD *)v34 + 45) = *(_DWORD *)&v70[3];
    *(_DWORD *)(v34 + 177) = v41;
    *((_QWORD *)v34 + 23) = v44;
    v34[192] = v69;
    v34[193] = v33;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5D7DA4()
{
  unint64_t result;

  result = qword_1ED3C90B8;
  if (!qword_1ED3C90B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1970, &_s10CodingKeysON_250);
    atomic_store(result, (unint64_t *)&qword_1ED3C90B8);
  }
  return result;
}

unint64_t sub_1BA5D7DE8()
{
  unint64_t result;

  result = qword_1ED3B73B0;
  if (!qword_1ED3B73B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextLineBreakMode, &type metadata for FormatTextLineBreakMode);
    atomic_store(result, (unint64_t *)&qword_1ED3B73B0);
  }
  return result;
}

unint64_t sub_1BA5D7E2C()
{
  unint64_t result;

  result = qword_1ED3C4270;
  if (!qword_1ED3C4270)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineBreakStrategy, &type metadata for FormatLineBreakStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED3C4270);
  }
  return result;
}

unint64_t sub_1BA5D7E70()
{
  unint64_t result;

  result = qword_1ED3B5F70;
  if (!qword_1ED3B5F70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F70);
  }
  return result;
}

uint64_t sub_1BA5D7EB4(_QWORD *a1)
{
  return FormatBlock.encode(to:)(a1);
}

uint64_t FormatBlock.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  __int128 v51;
  char v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  uint64_t v56;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v45 - v8;
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v45 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  sub_1BAE868C8(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE869B8();
  v20 = sub_1BA4A2870(&qword_1ED3D1490, (uint64_t (*)(uint64_t))sub_1BAE869B8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v21, v17, v4, v19, (uint64_t)&type metadata for FormatVersions.StarSky, v18, (uint64_t)v16, v20, (uint64_t)&off_1E734BDC0);
  v22 = v2[2];
  v23 = v2[3];
  v24 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C08);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v27(v13, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v28 = v49;
  sub_1BAD24498(v22, v23, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v29 = (uint64_t)v16;
  if (!v28)
  {
    swift_beginAccess();
    v30 = v2[4];
    v31 = (uint64_t)v48;
    v27(v48, v26, v25);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v32 = sub_1BAE57DBC(v31, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v49 = 0;
    if ((v32 & 1) != 0)
    {
      v54 = xmmword_1BB8A1A10;
      v55 = 0;
      v53 = v30;
      sub_1BAE86940();
      v45 = v34;
      sub_1BA4A2870(&qword_1ED3AF1D8, (uint64_t (*)(uint64_t))sub_1BAE86940, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      v35 = v49;
      sub_1BB874464();
      v49 = v35;
      if (v35)
      {
        sub_1BA4A2E80((uint64_t)v48, type metadata accessor for FormatVersionRequirement);
LABEL_6:
        swift_bridgeObjectRelease();
        return sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BAE868C8);
      }
      v31 = (uint64_t)v48;
    }
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v36 = (uint64_t)v47;
    v27(v47, v26, v25);
    swift_storeEnumTagMultiPayload();
    v37 = swift_bridgeObjectRetain();
    v38 = v49;
    sub_1BAD30540(v37, 2, 0, 0);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (v38)
      return sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BAE868C8);
    swift_beginAccess();
    v39 = v2[6];
    v40 = (uint64_t)v46;
    v27(v46, v26, v25);
    swift_storeEnumTagMultiPayload();
    v41 = *(_QWORD *)(v39 + 16);
    swift_bridgeObjectRetain();
    if (v41 && (sub_1BAE57DBC(v40, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v51 = xmmword_1BB8D2D70;
      v52 = 0;
      v42 = swift_bridgeObjectRetain();
      v43 = sub_1BA67F4CC(v42);
      swift_bridgeObjectRelease();
      v50 = v43;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v50, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v56 = (uint64_t)v50;
      sub_1BAE86940();
      sub_1BA4A2870(&qword_1ED3AF1D8, (uint64_t (*)(uint64_t))sub_1BAE86940, MEMORY[0x1E0DED188]);
      v44 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v44, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v40 = (uint64_t)v46;
    }
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    goto LABEL_6;
  }
  return sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BAE868C8);
}

uint64_t sub_1BA5D84E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBoolBinding.init(from:)(a1, a2);
}

uint64_t FormatBoolBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA5D8A50();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726ACA0;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA5D8A50()
{
  unint64_t result;

  result = qword_1ED3C7888;
  if (!qword_1ED3C7888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD058, &_s10CodingTypeON_119);
    atomic_store(result, (unint64_t *)&qword_1ED3C7888);
  }
  return result;
}

unint64_t sub_1BA5D8A94()
{
  unint64_t result;

  result = qword_1ED3B6690;
  if (!qword_1ED3B6690)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Bool, &type metadata for FormatHeadlineBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED3B6690);
  }
  return result;
}

unint64_t sub_1BA5D8AD8()
{
  unint64_t result;

  result = qword_1ED3B6878;
  if (!qword_1ED3B6878)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool, &type metadata for FormatWebEmbedBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED3B6878);
  }
  return result;
}

unint64_t sub_1BA5D8B1C()
{
  unint64_t result;

  result = qword_1ED3B5568;
  if (!qword_1ED3B5568)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Bool, &type metadata for FormatGroupBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED3B5568);
  }
  return result;
}

unint64_t sub_1BA5D8B60()
{
  unint64_t result;

  result = qword_1ED3BE228;
  if (!qword_1ED3BE228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Bool, &type metadata for FormatIssueBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED3BE228);
  }
  return result;
}

void sub_1BA5D8BA4(_QWORD *a1)
{
  FormatColorProcessor.encode(to:)(a1);
}

void FormatColorProcessor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v24[1] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v24[3] = (char *)v24 - v7;
  MEMORY[0x1E0C80A78](v8);
  v24[2] = (char *)v24 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v24[0] = (char *)v24 - v14;
  MEMORY[0x1E0C80A78](v15);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v2;
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BA6B8518();
  v24[5] = v18;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorProcessor, v23, v20, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v18, v22, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5D8DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(double *)(v1 + 24);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 88);
  sub_1BA5D9350(2, v3, v0, v4);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5D9350(char a1, char a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  double v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a4;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB378;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D94B8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5D94FC();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D94B8()
{
  unint64_t result;

  result = qword_1ED3A67E0;
  if (!qword_1ED3A67E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0820, &_s10CodingTypeON_178);
    atomic_store(result, (unint64_t *)&qword_1ED3A67E0);
  }
  return result;
}

unint64_t sub_1BA5D94FC()
{
  unint64_t result;

  result = qword_1ED39BD58;
  if (!qword_1ED39BD58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAssignComponentProcessor, &type metadata for FormatColorAssignComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED39BD58);
  }
  return result;
}

uint64_t sub_1BA5D9540(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB378;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D94B8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5D96A4();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D96A4()
{
  unint64_t result;

  result = qword_1ED39BD10;
  if (!qword_1ED39BD10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorConditionalProcessor, &type metadata for FormatColorConditionalProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED39BD10);
  }
  return result;
}

uint64_t sub_1BA5D96E8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFB378;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D94B8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5D984C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFB378;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D94B8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D9B64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5D99B8(char a1, char a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  double v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a4;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB378;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D94B8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5D9B20();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5D9B20()
{
  unint64_t result;

  result = qword_1ED39BD60;
  if (!qword_1ED39BD60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorModifyComponentProcessor, &type metadata for FormatColorModifyComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED39BD60);
  }
  return result;
}

unint64_t sub_1BA5D9B64()
{
  unint64_t result;

  result = qword_1ED3A0330;
  if (!qword_1ED3A0330)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBlendProcessor, &type metadata for FormatColorBlendProcessor);
    atomic_store(result, (unint64_t *)&qword_1ED3A0330);
  }
  return result;
}

_QWORD *initializeWithCopy for HeadlineViewLayout(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA5D9C78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSelectorExpression.init(from:)(a1, a2);
}

uint64_t FormatSelectorExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v25[0] = a2;
  sub_1BAE72168();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE721E0();
  sub_1BA4A2870(&qword_1ED3D1170, (uint64_t (*)(uint64_t))sub_1BAE721E0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v25[0] = v13;
      MEMORY[0x1E0C80A78](v21);
      v25[-4] = &_s10CodingKeysON_253;
      v25[-3] = sub_1BAE72260();
      v25[-2] = sub_1BA5D9F94();
      v25[-1] = sub_1BAE722A4();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71130((uint64_t)&unk_1E724DFB0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v25[1] = 0;
  v25[2] = 0;
  v26 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v18 = v28;
  *v12 = v27;
  v12[1] = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5D9F94()
{
  unint64_t result;

  result = qword_1ED3CAD10;
  if (!qword_1ED3CAD10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1BF8, &_s10CodingKeysON_253);
    atomic_store(result, (unint64_t *)&qword_1ED3CAD10);
  }
  return result;
}

uint64_t sub_1BA5D9FD8()
{
  sub_1BB86EB84();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
  return sub_1BB87291C() & 1;
}

uint64_t sub_1BA5DA04C(_QWORD *a1)
{
  return FormatWebEmbedNode.encode(to:)(a1);
}

uint64_t FormatWebEmbedNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  char *v118;
  uint64_t *v119;
  uint64_t v120;
  _QWORD *v121;
  __int128 v122;
  char v123;
  __int128 v124;
  char v125;
  __int128 v126;
  char v127;
  __int128 v128;
  char v129;
  uint64_t v130;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v107 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v108 = (char *)&v104 - v8;
  MEMORY[0x1E0C80A78](v9);
  v109 = (char *)&v104 - v10;
  MEMORY[0x1E0C80A78](v11);
  v110 = (char *)&v104 - v12;
  MEMORY[0x1E0C80A78](v13);
  v111 = (uint64_t)&v104 - v14;
  MEMORY[0x1E0C80A78](v15);
  v112 = (char *)&v104 - v16;
  MEMORY[0x1E0C80A78](v17);
  v113 = (char *)&v104 - v18;
  MEMORY[0x1E0C80A78](v19);
  v114 = (char *)&v104 - v20;
  MEMORY[0x1E0C80A78](v21);
  v115 = (char *)&v104 - v22;
  MEMORY[0x1E0C80A78](v23);
  v116 = (char *)&v104 - v24;
  MEMORY[0x1E0C80A78](v25);
  v117 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v104 - v26);
  MEMORY[0x1E0C80A78](v27);
  v118 = (char *)&v104 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v104 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v104 - v33;
  sub_1BAED0AE8(0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v104 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1[3];
  v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  v40 = sub_1BAED0BD8();
  v41 = sub_1BA4A2870(&qword_1ED3D0D80, (uint64_t (*)(uint64_t))sub_1BAED0BD8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v42, v39, v4, v40, (uint64_t)&type metadata for FormatVersions.JazzkonC, v38, (uint64_t)v37, v41, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v43 = v2[2];
  v44 = v2[3];
  v119 = v2;
  v45 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v45 != -1)
    swift_once();
  v46 = sub_1BB86EB84();
  v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED476C20);
  v48 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
  v48(v34, v47, v46);
  v49 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v50 = v120;
  sub_1BAD265E8(v43, v44, 0, 0, 0, (uint64_t)v34, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5022C, (uint64_t (*)(uint64_t))sub_1BAED0B60, &qword_1ED3AE8D0);
  if (v50)
  {
    sub_1BA4A2E80((uint64_t)v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BAED0AE8);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = v46;
    v52 = v119;
    v53 = v119[4];
    v120 = v51;
    ((void (*)(char *, uint64_t))v48)(v31, v47);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1BAD1D01C(v53, 1, 0, 0, (uint64_t)v31, (uint64_t)sub_1BA90CF04, 0);
    v54 = v49;
    sub_1BA4A2E80((uint64_t)v31, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v56 = v52[5];
    v55 = v52[6];
    v57 = (uint64_t)v118;
    v48(v118, v47, v120);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v106 = v37;
    sub_1BAD617BC(v56, v55, 2, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    v105 = v47;
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v59 = v52[7];
    v60 = qword_1ED3C6D50;
    swift_retain();
    if (v60 != -1)
      swift_once();
    v61 = v120;
    v62 = __swift_project_value_buffer(v120, (uint64_t)qword_1ED476BF0);
    v63 = (uint64_t)v117;
    v48((char *)v117, v62, v61);
    v64 = (char *)v54;
    swift_storeEnumTagMultiPayload();
    v65 = v106;
    sub_1BAD619C4(v59, 3, 0, 0, v63, (uint64_t)sub_1BA90CF04, 0);
    v118 = (char *)v62;
    sub_1BA4A2E80(v63, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v66 = v119;
    v67 = v119[8];
    v68 = (uint64_t)v116;
    v69 = v105;
    v48(v116, v105, v61);
    swift_storeEnumTagMultiPayload();
    sub_1BA71CA6C(v67);
    sub_1BAD1D178(v67, 4, 0, 0, v68, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v67);
    v70 = (uint64_t)v115;
    v48(v115, (uint64_t)v118, v61);
    swift_storeEnumTagMultiPayload();
    v71 = swift_retain();
    sub_1BAD61BDC(v71, 5, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v72 = (uint64_t)v114;
    v48(v114, v69, v61);
    swift_storeEnumTagMultiPayload();
    v73 = swift_bridgeObjectRetain();
    sub_1BAD2ACA0(v73, 6, 0, 0);
    sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v74 = (uint64_t)v113;
    v48(v113, v69, v61);
    swift_storeEnumTagMultiPayload();
    v75 = swift_retain();
    sub_1BAD61DEC(v75, 7, 0, 0, v74, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v76 = v66[12];
    v77 = (uint64_t)v112;
    v117 = (void (*)(uint64_t, uint64_t, uint64_t))v48;
    v48(v112, v69, v61);
    swift_storeEnumTagMultiPayload();
    if (v76 && (sub_1BAE5022C(v77, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v128 = xmmword_1BB8D2DD0;
      v129 = 0;
      *(_QWORD *)&v126 = v76;
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80((uint64_t)v112, type metadata accessor for FormatVersionRequirement);
    v78 = v119;
    swift_beginAccess();
    v79 = v78[13];
    sub_1BA67D3F4(v79);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v80 = v120;
    v81 = __swift_project_value_buffer(v120, (uint64_t)qword_1ED476C08);
    v117(v111, v81, v80);
    v116 = v64;
    swift_storeEnumTagMultiPayload();
    if (v79 == 0x8000000000000000)
    {
      v82 = (uint64_t)v65;
    }
    else
    {
      v82 = (uint64_t)v65;
      if ((sub_1BAE5022C(v111, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v126 = xmmword_1BB8D2DE0;
        v127 = 0;
        *(_QWORD *)&v124 = v79;
        sub_1BAED0B60();
        sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
        sub_1BA84B088();
        sub_1BB874464();
      }
      v78 = v119;
    }
    v83 = (uint64_t)v110;
    sub_1BA4A2E80(v111, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EEDB4(v79);
    swift_beginAccess();
    v84 = *((_BYTE *)v78 + 112);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v85 = v120;
    v86 = __swift_project_value_buffer(v120, (uint64_t)qword_1ED476C50);
    v117(v83, v86, v85);
    swift_storeEnumTagMultiPayload();
    if ((v84 & 1) == 0)
    {
      if ((sub_1BAE5022C(v83, 10, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v124 = xmmword_1BB8D2DF0;
        v125 = 0;
        LOBYTE(v122) = 0;
        sub_1BAED0B60();
        sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      v78 = v119;
      v83 = (uint64_t)v110;
    }
    sub_1BA4A2E80(v83, type metadata accessor for FormatVersionRequirement);
    v87 = v78[15];
    v88 = *((_BYTE *)v78 + 128);
    v89 = (uint64_t)v109;
    v90 = (void (*)(char *, char *, uint64_t))v117;
    v117((uint64_t)v109, v105, v120);
    swift_storeEnumTagMultiPayload();
    v91 = v88;
    v92 = v82;
    sub_1BAD62004(v87, v91, 11, 0, 0, v89, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v89, type metadata accessor for FormatVersionRequirement);
    v93 = v78[17];
    v94 = v78[18];
    v95 = (uint64_t)v108;
    v90(v108, v118, v120);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD617BC(v93, v94, 12, 0, 0, v95, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v95, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v96 = v92;
    swift_beginAccess();
    v97 = v78[19];
    v98 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v98 != -1)
      swift_once();
    v99 = v120;
    v100 = __swift_project_value_buffer(v120, (uint64_t)qword_1ED476C38);
    v90(v107, (char *)v100, v99);
    swift_storeEnumTagMultiPayload();
    if (*(_QWORD *)(v97 + 16))
    {
      if ((sub_1BAE5022C((uint64_t)v107, 13, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v122 = xmmword_1BB8868A0;
        v123 = 0;
        v101 = swift_bridgeObjectRetain();
        v102 = sub_1BA67F4CC(v101);
        swift_bridgeObjectRelease();
        v121 = v102;
        swift_retain();
        sub_1BA67FABC((uint64_t *)&v121, sub_1BA67FB34, sub_1BA6801F8);
        swift_release();
        v130 = (uint64_t)v121;
        sub_1BAED0B60();
        sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
        v103 = MEMORY[0x1E0DEA968];
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v103, MEMORY[0x1E0DEA970]);
        sub_1BB874464();
        swift_release();
      }
    }
    sub_1BA4A2E80((uint64_t)v107, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80(v96, (uint64_t (*)(_QWORD))sub_1BAED0AE8);
  }
}

unint64_t sub_1BA5DB144()
{
  unint64_t result;

  result = qword_1ED39BA38;
  if (!qword_1ED39BA38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeContent, &type metadata for FormatWebEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED39BA38);
  }
  return result;
}

uint64_t sub_1BA5DB188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return FormatLatestCompatibleFileReference.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t FormatLatestCompatibleFileReference.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48;

  v44 = a5;
  v9 = type metadata accessor for FormatFileReference(255, a2, a3, a4);
  v10 = sub_1BB873A2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - v12;
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - v15;
  sub_1BA4C010C(a1, (uint64_t)v47);
  v17 = a2;
  FormatFileReferenceCollection.init(from:)(v47, a2, a3, v18, &v48);
  if (v5)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v41 = v16;
  v42 = 0;
  v43 = a1;
  v21 = v48;
  v47[0] = v48;
  v22 = type metadata accessor for FormatFileReferenceCollection(0, a2, a3, v19);
  FormatFileReferenceCollection.latestFormatCompatible.getter(v22, v23, v24, v25);
  v26 = v45;
  v27 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v13, 1, v46) == 1)
  {
    v28 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v47[0] = v21;
    MEMORY[0x1E0C80A78](v28);
    *(&v40 - 2) = v17;
    *(&v40 - 1) = a3;
    v29 = sub_1BB872EE0();
    v30 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v29);
    v32 = sub_1BAA52384((void (*)(char *, char *))sub_1BB6CAFE8, (uint64_t)(&v40 - 4), v29, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v30, MEMORY[0x1E0DEDD18], v31);
    swift_bridgeObjectRelease();
    v47[0] = v32;
    sub_1BA6D249C();
    sub_1BA6A0BA4();
    v33 = sub_1BB872904();
    v35 = v34;
    swift_bridgeObjectRelease();
    sub_1BA98D1F0();
    swift_allocError();
    *v36 = v33;
    v36[1] = v35;
    v36[3] = 0;
    v36[4] = 0;
    v36[2] = 0;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1(v43);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v43);
    v37 = *(uint64_t (**)(void))(v26 + 32);
    ((void (*)(char *, char *, uint64_t))v37)(v41, v13, v27);
    v39 = type metadata accessor for FormatLatestCompatibleFileReference(0, v17, a3, v38);
    *(_QWORD *)(v44 + *(int *)(v39 + 36)) = v21;
    return v37();
  }
}

uint64_t Array<A>.latestFormatCompatible.getter()
{
  uint64_t v0;

  if (qword_1ED3BB468 != -1)
    swift_once();
  v0 = sub_1BB86EB84();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED3B8FC8);
  return Array<A>.latestFormatCompatible(with:)();
}

uint64_t Array<A>.latestFormatCompatible(with:)()
{
  uint64_t v0;

  Array<A>.formatCompatible(with:)();
  sub_1BB86EB84();
  sub_1BA5DB598();
  sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v0 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF20], v0);
  sub_1BB8728E0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA5DB598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0910;
  if (!qword_1ED3B0910)
  {
    v1 = sub_1BB86EB84();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB4DE0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0910);
  }
  return result;
}

uint64_t Array<A>.formatCompatible(with:)()
{
  uint64_t v0;

  v0 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v0);
  return sub_1BB873DA4();
}

uint64_t type metadata accessor for FormatLatestCompatibleFileReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatLatestCompatibleFileReference);
}

uint64_t type metadata accessor for FormatFileReferenceCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileReferenceCollection);
}

uint64_t FormatFileReferenceCollection.latestFormatCompatible.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FormatFileReference(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  return Array<A>.latestFormatCompatible.getter();
}

uint64_t initializeWithCopy for FeedLayoutCacheItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA5DB724@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSlot.init(from:)(a1, a2);
}

uint64_t FormatContentSlot.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  sub_1BA5DBCDC(0, &qword_1ED3B9C18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5DBE4C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v27) = 0;
  v11 = sub_1BB874098();
  v25 = v12;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = 1;
  sub_1BA5DBC08((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
  sub_1BB874068();
  v13 = v27;
  if (!v27)
    v13 = MEMORY[0x1E0DEE9D8];
  v24 = v13;
  sub_1BA4AD288(0, &qword_1ED3C03C8, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = 2;
  sub_1BA5DBDD0(&qword_1ED3C03D0, (uint64_t (*)(void))sub_1BA5737B0, MEMORY[0x1E0DEAF40]);
  sub_1BB874068();
  v14 = v27;
  if (!v27)
    v14 = MEMORY[0x1E0DEE9D8];
  v23 = v14;
  sub_1BA4B07F0(0, &qword_1ED3CF780, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = 3;
  sub_1BA5DBD38(&qword_1ED3CF788, &qword_1ED3C9668, (uint64_t)&protocol conformance descriptor for FormatContentSlotItem, MEMORY[0x1E0DEAF40]);
  sub_1BB874068();
  v15 = v27;
  if (!v27)
    v15 = MEMORY[0x1E0DEE9D8];
  v22 = v15;
  sub_1BA6BCC84();
  v26 = 4;
  sub_1BA5DBC84();
  sub_1BB874068();
  if (v27)
    v16 = v27;
  else
    v16 = MEMORY[0x1E0DEE9E8];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v24;
  v17 = v25;
  *a2 = v11;
  a2[1] = v17;
  v20 = v22;
  v19 = v23;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA5DBB94(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1ED3B9470);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA5DBC08(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5DBC84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED3B96D0;
  if (!qword_1ED3B96D0)
  {
    sub_1BA6BCC84();
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B96D0);
  }
  return result;
}

void sub_1BA5DBCDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA5DBE4C();
    v7 = a3(a1, &type metadata for FormatContentSlot.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA5DBD38(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED3CF780, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA5DBDD0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED3C03C8, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5DBE4C()
{
  unint64_t result;

  result = qword_1ED3B4B88;
  if (!qword_1ED3B4B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB931D48, &type metadata for FormatContentSlot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B4B88);
  }
  return result;
}

uint64_t sub_1BA5DBE90(_QWORD *a1)
{
  return FormatColorComponent.encode(to:)(a1);
}

uint64_t FormatColorComponent.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[7];
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[6] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[5] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[4] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v25[3] = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  v25[2] = (char *)v25 - v12;
  MEMORY[0x1E0C80A78](v13);
  v25[1] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  v26 = *v1;
  v27 = a1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = v28;
  sub_1BA69F160((uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, v19, v20);
  if (!v23)
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA5DC52C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC560@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC594@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC5C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC5FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC630@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC664@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC698@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5DC6CC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BA5DC710(_QWORD *a1)
{
  return FormatGradient.encode(to:)(a1);
}

uint64_t FormatGradient.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v40 - v8;
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  sub_1BAE94720(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v45 = v1[1];
  v18 = *((double *)v1 + 2);
  v19 = *((double *)v1 + 3);
  v20 = *((double *)v1 + 4);
  v21 = *((double *)v1 + 5);
  v22 = v1[6];
  v41 = v1[7];
  v42 = v22;
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BAE94618();
  v26 = sub_1BA4A2870(&qword_1ED3D1540, (uint64_t (*)(uint64_t))sub_1BAE94618, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGradient, v27, v23, (uint64_t)&type metadata for FormatGradient, v25, (uint64_t)&type metadata for FormatVersions.JazzkonC, v24, (uint64_t)v16, v26, (uint64_t)&off_1E734BD80);
  v28 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v28 != -1)
    swift_once();
  v29 = sub_1BB86EB84();
  v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C20);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v31(v13, v30, v29);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD22998(v17, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v32 = (uint64_t)v46;
    v31(v46, v30, v29);
    swift_storeEnumTagMultiPayload();
    v33 = swift_bridgeObjectRetain();
    sub_1BAD6C3D4(v33, 1, 0, 0, v32, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34 = (uint64_t)v44;
    v31(v44, v30, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BAD22B14(2, 0, 0, v34, (uint64_t)sub_1BA90CF04, 0, v18, v19, v20, v21);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    v36 = v41;
    v35 = v42;
    sub_1BA5DCC20(v42);
    if (qword_1ED3C6D78 != -1)
      swift_once();
    v37 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C68);
    v38 = (uint64_t)v43;
    v31(v43, v37, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6C60C(v35, v36, 3, 0, 0, v38, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    sub_1BA5DCC4C(v35);
  }
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAE94720);
}

unint64_t sub_1BA5DCB64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BDF8;
  if (!qword_1ED39BDF8)
  {
    sub_1BA4AD288(255, &qword_1ED3B93B0, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA62BA1C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BDF8);
  }
  return result;
}

unint64_t sub_1BA5DCBDC()
{
  unint64_t result;

  result = qword_1ED39B8C0;
  if (!qword_1ED39B8C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradientDirection, &type metadata for FormatGradientDirection);
    atomic_store(result, (unint64_t *)&qword_1ED39B8C0);
  }
  return result;
}

uint64_t sub_1BA5DCC20(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA5DCC4C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA5DCC78(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA5DCC9C(a1, v1[5], v1[6], v1[2], v1[3]) & 1;
}

uint64_t sub_1BA5DCC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  char v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86F778();
  v33 = a5;
  v32 = a1;
  BlueprintItem<>.feedItem.getter(v13, a5);
  FeedItem.identifier.getter();
  v15 = v14;
  v17 = v16;
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
  LOBYTE(v15) = sub_1BA761FE4(v15, v17, a2);
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    return 1;
  v19 = *(_QWORD *)(a3 + 56);
  v29 = v5;
  v30 = a3 + 56;
  v20 = 1 << *(_BYTE *)(a3 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v31 = (unint64_t)(v20 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  while (v22)
  {
    v22 &= v22 - 1;
LABEL_7:
    swift_bridgeObjectRetain();
    BlueprintItem<>.feedItem.getter(v13, v33);
    FeedItem.identifier.getter();
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
    v25 = sub_1BB872B5C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      v18 = 1;
LABEL_25:
      swift_release();
      return v18;
    }
  }
  v26 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v26 >= v31)
    goto LABEL_24;
  v27 = *(_QWORD *)(v30 + 8 * v26);
  ++v24;
  if (v27)
    goto LABEL_22;
  v24 = v26 + 1;
  if (v26 + 1 >= v31)
    goto LABEL_24;
  v27 = *(_QWORD *)(v30 + 8 * v24);
  if (v27)
    goto LABEL_22;
  v24 = v26 + 2;
  if (v26 + 2 >= v31)
    goto LABEL_24;
  v27 = *(_QWORD *)(v30 + 8 * v24);
  if (v27)
  {
LABEL_22:
    v22 = (v27 - 1) & v27;
    goto LABEL_7;
  }
  v28 = v26 + 3;
  if (v28 >= v31)
  {
LABEL_24:
    v18 = 0;
    goto LABEL_25;
  }
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v24 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v24 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v24 >= v31)
      goto LABEL_24;
    v27 = *(_QWORD *)(v30 + 8 * v24);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BA5DCF60(_QWORD *a1)
{
  return FormatStateMachineEvent.encode(to:)(a1);
}

uint64_t FormatStateMachineEvent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 v48;
  char v49;
  uint64_t v50;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v38 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  sub_1BAEBF1C8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v13 = v1[1];
  v44 = v1[2];
  v15 = v1[4];
  v41 = v1[3];
  v42 = v15;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAEBF0C0();
  v19 = sub_1BA4A2870(&qword_1ED3D10C0, (uint64_t (*)(uint64_t))sub_1BAEBF0C0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStateMachineEvent, v20, v16, (uint64_t)&type metadata for FormatStateMachineEvent, v18, (uint64_t)&type metadata for FormatVersions.JazzkonG, v17, (uint64_t)v12, v19, (uint64_t)&off_1E734BD00);
  v21 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C38);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  v25 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v46;
  sub_1BAD152C8(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v26)
  {
    v31 = (uint64_t)v12;
  }
  else
  {
    v27 = v12;
    v28 = (uint64_t)v45;
    v24(v45, v23, v22);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v29 = (uint64_t)v27;
    v30 = sub_1BAE49024(v28, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v39 = v23;
    v40 = v24;
    v38 = v25;
    if ((v30 & 1) != 0)
    {
      v48 = xmmword_1BB8A1A10;
      v49 = 0;
      v33 = swift_bridgeObjectRetain();
      v34 = sub_1BA67F4CC(v33);
      swift_bridgeObjectRelease();
      v47 = v34;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v47, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v50 = (uint64_t)v47;
      sub_1BAEBF240();
      sub_1BA4A2870(&qword_1ED3AECC0, (uint64_t (*)(uint64_t))sub_1BAEBF240, MEMORY[0x1E0DED188]);
      v35 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v35, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v28 = (uint64_t)v45;
    }
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v43;
    v40(v43, v39, v22);
    swift_storeEnumTagMultiPayload();
    v37 = v42;
    swift_bridgeObjectRetain();
    sub_1BAD152C8(v41, v37, 2, 0, 0, v36, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v31 = v29;
  }
  return sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BAEBF1C8);
}

uint64_t sub_1BA5DD438@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAccessibilityProperty.init(from:)(a1, a2);
}

uint64_t FormatAccessibilityProperty.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  __int128 v22;

  v3 = v2;
  v21[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v21[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA5DD978();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726A408;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = (_QWORD *)v21[0];
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA5DD978()
{
  unint64_t result;

  result = qword_1ED3CBDE0;
  if (!qword_1ED3CBDE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE618, &_s10CodingTypeON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3CBDE0);
  }
  return result;
}

unint64_t sub_1BA5DD9BC()
{
  unint64_t result;

  result = qword_1ED3B7DF0;
  if (!qword_1ED3B7DF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityContent, &type metadata for FormatAccessibilityContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7DF0);
  }
  return result;
}

uint64_t sub_1BA5DDA00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5DDA28(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5DDA28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (**v17)(char *, _QWORD);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char *v90;
  void (**v91)(char *, _QWORD);
  __int128 v92;
  char v93;
  __int128 v94;
  char v95;
  unint64_t v96;

  sub_1BAEFBAC0(0, &qword_1ED3D2A08, (void (*)(void))sub_1BAEF0B18, (void (*)(void))sub_1BAEF0A38);
  v75 = v2;
  v74 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v90 = (char *)&v66 - v3;
  sub_1BA69292C();
  v79 = v4;
  v76 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  v81 = v6;
  v77 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v84 = (unint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  *(_QWORD *)&v88 = v8;
  v78 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v83 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  *(_QWORD *)&v85 = v10;
  v80 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)&v87 = (char *)&v66 - v11;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  *(_QWORD *)&v86 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v66 - v14;
  sub_1BAEF0B5C();
  *(_QWORD *)&v89 = v16;
  v17 = *(void (***)(char *, _QWORD))(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9EA44();
  sub_1BA4A2870(&qword_1ED3D1560, (uint64_t (*)(uint64_t))sub_1BAE9EA44, (uint64_t)&unk_1BB8FFC6C);
  v21 = v91;
  sub_1BB87468C();
  v22 = v21;
  if (v21)
  {
    v23 = a1;
LABEL_11:
    sub_1BA7F8B78(v23, (uint64_t)v22);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    return v20;
  }
  v73 = v15;
  v72 = v13;
  v91 = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24 = sub_1BB872874();
  v25 = Dictionary<>.errorOnUnknownKeys.getter(v24);
  swift_bridgeObjectRelease();
  v23 = a1;
  v26 = v89;
  v27 = v90;
  if ((v25 & 1) != 0)
  {
    v28 = sub_1BB8740EC();
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      v30 = (_BYTE *)(v28 + 48);
      while (*v30 != 1)
      {
        v30 += 24;
        if (!--v29)
          goto LABEL_8;
      }
      v36 = *((_QWORD *)v30 - 2);
      v35 = *((_QWORD *)v30 - 1);
      swift_bridgeObjectRetain_n();
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v37);
      sub_1BAE9EAC4();
      sub_1BA5DE878();
      sub_1BAE9EB08();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E7250B00);
      swift_release_n();
      sub_1BA98D1F0();
      v22 = (void *)swift_allocError();
      *(_QWORD *)v38 = v36;
      *(_QWORD *)(v38 + 8) = v35;
      *(_QWORD *)(v38 + 16) = v20;
      *(_OWORD *)(v38 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v36, v35, 1);
      v91[1](v19, v26);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  v31 = sub_1BAE0F8F8((uint64_t)v19, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF0B5C);
  v33 = v32;
  v94 = xmmword_1BB8A1A10;
  v95 = 0;
  v34 = sub_1BB874098();
  v40 = v39;
  v71 = v34;
  v94 = xmmword_1BB8D2D60;
  v95 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v69 = v31;
  v70 = v92;
  v94 = xmmword_1BB8D2D70;
  v95 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v67 = v40;
  v68 = v92;
  v66 = xmmword_1BB8D2D90;
  v94 = xmmword_1BB8D2D90;
  v95 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v92 = v66;
    v93 = 0;
    sub_1BAEB7D04();
    v42 = v73;
    v43 = v86;
    sub_1BB8740D4();
    *(_QWORD *)&v66 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v43);
  }
  else
  {
    *(_QWORD *)&v66 = MEMORY[0x1E0DEE9D8];
  }
  v44 = v88;
  v45 = v87;
  v86 = xmmword_1BB8D2D80;
  v94 = xmmword_1BB8D2D80;
  v95 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v92 = v86;
    v93 = 0;
    sub_1BAE7C214();
    v46 = v45;
    v47 = v85;
    sub_1BB8740D4();
    *(_QWORD *)&v86 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v46, v47);
    v44 = v88;
  }
  else
  {
    *(_QWORD *)&v86 = MEMORY[0x1E0DEE9D8];
  }
  v87 = xmmword_1BB8D2DA0;
  v94 = xmmword_1BB8D2DA0;
  v95 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v92 = v87;
    v93 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v48 = v83;
    sub_1BB8740D4();
    v49 = sub_1BB86DD08();
    v50 = v44;
    v51 = v49;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v50);
  }
  else
  {
    v51 = MEMORY[0x1E0DEE9E8];
  }
  v88 = xmmword_1BB8D2DB0;
  v94 = xmmword_1BB8D2DB0;
  v95 = 0;
  v52 = sub_1BB8740F8();
  v53 = v84;
  if ((v52 & 1) != 0)
  {
    *(_QWORD *)&v85 = v51;
    v92 = v88;
    v93 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v54 = v81;
    sub_1BB8740D4();
    *(_QWORD *)&v88 = v33;
    *(_QWORD *)&v87 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v53, v54);
    v51 = v85;
  }
  else
  {
    *(_QWORD *)&v88 = v33;
    *(_QWORD *)&v87 = MEMORY[0x1E0DEE9D8];
  }
  v85 = xmmword_1BB8D2DD0;
  v94 = xmmword_1BB8D2DD0;
  v95 = 0;
  v55 = sub_1BB8740F8();
  v56 = v82;
  if ((v55 & 1) != 0)
  {
    v92 = v85;
    v93 = 0;
    sub_1BA4A2870(&qword_1ED3BBE58, (uint64_t (*)(uint64_t))sub_1BA69292C, MEMORY[0x1E0DB3610]);
    v57 = v79;
    sub_1BB8740D4();
    v58 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v56, v57);
  }
  else
  {
    v58 = MEMORY[0x1E0DEE9D8];
  }
  v85 = xmmword_1BB8D2DE0;
  v94 = xmmword_1BB8D2DE0;
  v95 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v92 = v85;
    v93 = 0;
    sub_1BB8740D4();
    v84 = v96;
  }
  else
  {
    v84 = 0;
  }
  v85 = xmmword_1BB8D2DF0;
  v94 = xmmword_1BB8D2DF0;
  v95 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v92 = v85;
    v93 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v59 = v51;
    v60 = v26;
    v61 = v96;
  }
  else
  {
    v59 = v51;
    v60 = v26;
    v61 = 0x8000000000000000;
  }
  *(_QWORD *)&v85 = v61;
  v89 = xmmword_1BB8D2E00;
  v94 = xmmword_1BB8D2E00;
  v95 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v92 = v89;
    v93 = 0;
    sub_1BAEF0BD4();
    v62 = v27;
    v63 = v75;
    sub_1BB8740D4();
    v64 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v63);
  }
  else
  {
    v64 = MEMORY[0x1E0DEE9D8];
  }
  v65 = v70;
  v91[1](v19, v60);
  *(_QWORD *)&v94 = v65;
  *(_QWORD *)&v92 = v68;
  v96 = v85;
  type metadata accessor for FormatItemNode();
  swift_allocObject();
  v20 = (uint64_t)sub_1BB3B3E98(v69, v88, v71, v67, (uint64_t *)&v94, (uint64_t *)&v92, v66, v86, v59, v87, v58, v84, (uint64_t *)&v96, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v20;
}

unint64_t sub_1BA5DE878()
{
  unint64_t result;

  result = qword_1ED3C6BD0;
  if (!qword_1ED3C6BD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9BD8, &_s10CodingKeysON_108);
    atomic_store(result, (unint64_t *)&qword_1ED3C6BD0);
  }
  return result;
}

uint64_t FeedModelFactory.create(headline:context:namespace:nativeAdInfo:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  uint64_t (**v44)();
  id v45;
  id v46;
  int v48;
  int v49;
  int v50;
  int v51;
  void *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;

  v61 = a5;
  v52 = a1;
  v62 = a6;
  v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v10);
  v60 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v59 = (uint64_t)&v48 - v13;
  v63 = *(void **)a2;
  v14 = *(_BYTE *)(a2 + 8);
  v50 = v14;
  v15 = *(_BYTE *)(a2 + 9);
  v49 = v15;
  v16 = *(_BYTE *)(a2 + 10);
  v48 = v16;
  v17 = *(_BYTE *)(a2 + 11);
  v51 = v17;
  v54 = *(_QWORD *)(a2 + 16);
  v55 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v56 = *(_QWORD *)(a2 + 40);
  v57 = v18;
  v53 = *(unsigned __int8 *)(a2 + 48);
  v19 = *(_QWORD *)(a2 + 64);
  v64 = *(void **)(a2 + 56);
  v65 = v19;
  v58 = *(_QWORD *)(a2 + 72);
  v20 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v21 + 32) = a3;
  *(_QWORD *)(v21 + 40) = a4;
  swift_bridgeObjectRetain();
  v22 = objc_msgSend(a1, sel_identifier);
  v23 = sub_1BB8729A0();
  v25 = v24;

  *(_QWORD *)(v21 + 48) = v23;
  *(_QWORD *)(v21 + 56) = v25;
  v66 = v21;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v20, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v26 = sub_1BB872904();
  v28 = v27;
  swift_bridgeObjectRelease();
  v66 = (uint64_t)v63;
  v67 = v14;
  v68 = v15;
  v69 = v16;
  v70 = v17;
  v29 = v54;
  v30 = v55;
  v71 = v54;
  v72 = v55;
  v32 = v56;
  v31 = v57;
  v73 = v57;
  v74 = v56;
  LOBYTE(v25) = v53;
  v75 = v53;
  v76 = v64;
  v77 = v65;
  v34 = v58;
  v33 = v59;
  v78 = v58;
  sub_1BA5DECF0(v26, v28, v52, (uint64_t)&v66, v61, v59);
  swift_bridgeObjectRelease();
  v35 = v60;
  sub_1BA4C2DD8(v33, v60, type metadata accessor for FeedHeadline);
  v36 = v35;
  v37 = v62;
  sub_1BA5193C4(v36, v62, type metadata accessor for FeedHeadline);
  v38 = (int *)sub_1BA5DEC38();
  v39 = v37 + v38[13];
  v40 = v63;
  *(_QWORD *)v39 = v63;
  *(_BYTE *)(v39 + 8) = v50;
  *(_BYTE *)(v39 + 9) = v49;
  *(_BYTE *)(v39 + 10) = v48;
  *(_BYTE *)(v39 + 11) = v51;
  *(_QWORD *)(v39 + 16) = v29;
  *(_QWORD *)(v39 + 24) = v30;
  *(_QWORD *)(v39 + 32) = v31;
  *(_QWORD *)(v39 + 40) = v32;
  *(_BYTE *)(v39 + 48) = v25;
  v42 = v64;
  v41 = v65;
  *(_QWORD *)(v39 + 56) = v64;
  *(_QWORD *)(v39 + 64) = v41;
  *(_QWORD *)(v39 + 72) = v34;
  v43 = (_QWORD *)(v37 + v38[14]);
  *v43 = 0;
  v43[1] = 0;
  v44 = (uint64_t (**)())(v37 + v38[16]);
  *v44 = sub_1BA647E00;
  v44[1] = 0;
  v45 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v31, v32);
  v46 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA4A2E80(v33, type metadata accessor for FeedHeadline);
}

uint64_t sub_1BA5DEC38()
{
  uint64_t result;

  result = qword_1ED3A5248;
  if (!qword_1ED3A5248)
  {
    type metadata accessor for FeedHeadline(255);
    sub_1BA4A2870(&qword_1ED3C6320, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    sub_1BA4A2870(&qword_1ED3B2D38, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    type metadata accessor for FeedModel();
  }
  return result;
}

uint64_t sub_1BA5DECF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  char v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void *v41;
  void *v42;
  char v43;
  char v44;
  char v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __int128 v52;

  v35 = a5;
  v38 = a1;
  v39 = a2;
  v37 = a6;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v29 - v9;
  v33 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v33);
  v34 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = *(void **)a4;
  v15 = *(_BYTE *)(a4 + 8);
  v16 = *(_BYTE *)(a4 + 9);
  v17 = *(_BYTE *)(a4 + 10);
  v18 = *(_BYTE *)(a4 + 11);
  v19 = *(_QWORD *)(a4 + 32);
  v31 = *(_QWORD *)(a4 + 40);
  v32 = v19;
  v30 = *(unsigned __int8 *)(a4 + 48);
  v20 = *(_QWORD *)(a4 + 56);
  sub_1BA5DF1FC(a3, (char *)&v29 - v12);
  v29 = v14;
  v42 = v14;
  v43 = v15;
  v44 = v16;
  v45 = v17;
  v46 = v18;
  v47 = *(_OWORD *)(a4 + 16);
  v48 = v32;
  v49 = v31;
  v50 = v30;
  v51 = v20;
  v52 = *(_OWORD *)(a4 + 64);
  sub_1BA5DEF48(a3, (uint64_t)&v42, &v41);
  v21 = v41;
  v22 = v13[*(int *)(v33 + 32)];
  swift_unknownObjectRetain_n();
  v23 = 1;
  if ((v18 & 1) == 0)
  {
    v24 = objc_msgSend(v29, sel_containsHeadline_, a3);
    if (v22)
      v23 = 1;
    else
      v23 = v17;
    if ((v24 & 1) == 0)
      v23 = 0;
  }
  v40 = v23;
  v25 = v36;
  sub_1BA6DCDE8(v35, v36);
  v26 = v34;
  sub_1BA6D50F4((uint64_t)v13, v34);
  v41 = v21;
  v42 = 0;
  v43 = 1;
  v27 = v39;
  swift_bridgeObjectRetain();
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(v38, v27, a3, (uint64_t)a3, &v40, v25, v26, &v41, v37, (uint64_t)&v42);
  return sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedHeadline.State);
}

id sub_1BA5DEF48@<X0>(id a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id result;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_BYTE *)(a2 + 8) == 1)
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) != 0)
    {
      result = objc_msgSend(a1, sel_narrativeTrack);
      if (result)
        goto LABEL_18;
    }
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) != 0)
    {
      result = objc_msgSend(a1, sel_narrativeTrackSample);
      if (result)
      {
        v6 = result;
        if (qword_1ED3BA7F8 != -1)
          swift_once();
        v7 = (id)qword_1ED476860;
        v8 = sub_1BB8732F4();
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v9 + 56) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3CF950);
        *(_QWORD *)(v9 + 64) = sub_1BB7574C8();
        *(_QWORD *)(v9 + 32) = v6;
        v10 = v6;
        sub_1BB86EF44("Audio track model as a subscribed user, but only found a sample track %{public}@", 80, 2, &dword_1BA493000, v7, v8, v9);
LABEL_16:

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      goto LABEL_18;
    }
LABEL_17:
    result = 0;
    goto LABEL_18;
  }
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) != 0)
  {
    result = objc_msgSend(a1, sel_narrativeTrackSample);
    if (result)
      goto LABEL_18;
  }
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) == 0)
    goto LABEL_17;
  result = objc_msgSend(a1, sel_narrativeTrack);
  if (result)
  {
    v11 = result;
    if (qword_1ED3BA7F8 != -1)
      swift_once();
    v7 = (id)qword_1ED476860;
    v12 = sub_1BB8732F4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v13 + 56) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3CF950);
    *(_QWORD *)(v13 + 64) = sub_1BB7574C8();
    *(_QWORD *)(v13 + 32) = v11;
    v10 = v11;
    sub_1BB86EF44("Audio track model as a non-subscribed user, but only found a full track %{public}@", 82, 2, &dword_1BA493000, v7, v12, v13);
    goto LABEL_16;
  }
LABEL_18:
  *a3 = result;
  return result;
}

uint64_t sub_1BA5DF1FC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  unint64_t v11;
  void *v12;
  id v13;
  unsigned __int8 v14;
  id v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  char v21;
  char v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;

  v5 = type metadata accessor for FeedItem.SharedState(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v2 + 16);
  v10 = objc_msgSend(a1, sel_articleID, v6);
  if (!v10)
  {
    sub_1BB8729A0();
    v10 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v11 = (unint64_t)objc_msgSend(v9, sel_likingStatusForArticleID_, v10);

  v12 = *(void **)(v2 + 24);
  v13 = objc_msgSend(a1, sel_articleID);
  if (!v13)
  {
    sub_1BB8729A0();
    v13 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v14 = objc_msgSend(v12, sel_isArticleOnReadingList_, v13);

  sub_1BA5DF468(a1, (uint64_t)v8);
  v15 = objc_msgSend(a1, sel_articleID);
  if (!v15)
  {
    sub_1BB8729A0();
    v15 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend(v9, sel_hasArticleBeenMarkedAsOffensive_, v15);

  v17 = objc_msgSend(v12, sel_shouldHideHeadline_, a1);
  v18 = objc_msgSend(a1, sel_sourceChannelID);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(*(id *)(v2 + 32), sel_hasMutedSubscriptionForTagID_, v18);

  }
  else
  {
    v20 = 0;
  }
  if (v11 >= 3)
    v21 = 2;
  else
    v21 = 0x10002u >> (8 * v11);
  sub_1BA5DF688(a1, &v26);
  v22 = v26;
  *a2 = v21;
  a2[1] = v14 ^ 1;
  v23 = (int *)type metadata accessor for FeedHeadline.State(0);
  result = sub_1BA5193C4((uint64_t)v8, (uint64_t)&a2[v23[6]], type metadata accessor for FeedItem.SharedState);
  a2[v23[7]] = v16 ^ 1;
  a2[v23[8]] = v22;
  a2[v23[9]] = v17;
  a2[v23[10]] = v20;
  return result;
}

uint64_t sub_1BA5DF468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_1BA4B07F0(0, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - v6;
  v8 = v2[9];
  v9 = v2[10];
  __swift_project_boxed_opaque_existential_1(v2 + 6, v8);
  v10 = objc_msgSend(a1, sel_articleID);
  v11 = sub_1BB8729A0();
  v13 = v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(v11, v13, v8, v9);
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for SharedItem();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
  {
    sub_1BA5DF64C((uint64_t)v7);
    v16 = 1;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v7, a2, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v16, 1, v14);
}

uint64_t sub_1BA5DF5B8()
{
  sub_1BB86DD5C();
  sub_1BA6D4F28(0);
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BA5DF64C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA6D4F28(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA5DF688(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  unsigned int v6;
  unsigned __int8 v7;
  char **v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  char *v18;
  void *v19;
  id v20;
  unint64_t v21;
  id v22;
  unsigned __int8 v23;
  char v24;
  id v25;
  id v26;
  void *v27;
  unsigned int v28;
  id v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[24];
  uint64_t v33;

  v5 = *(void **)(v2 + 40);
  v6 = objc_msgSend(a1, sel_isPaid);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v7 = objc_msgSend(a1, sel_isBundlePaid);
  else
    v7 = 0;
  v8 = &selRef_backgroundColor;
  v9 = objc_msgSend(a1, sel_sourceChannel);
  v10 = (uint64_t)v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_identifier);
    swift_unknownObjectRelease();
    v12 = sub_1BB8729A0();
    v10 = v13;

    if (v6)
      goto LABEL_6;
LABEL_11:
    if ((v7 & 1) != 0)
      goto LABEL_15;
    goto LABEL_12;
  }
  v12 = 0;
  if (!v6)
    goto LABEL_11;
LABEL_6:
  v14 = objc_msgSend(v5, sel_purchaseProvider);
  if (v10)
  {
    v15 = objc_msgSend(v14, sel_purchasedTagIDs);
    v16 = sub_1BB873030();

    LOBYTE(v15) = sub_1BA761FE4(v12, v10, v16);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      if ((v7 & 1) == 0)
        goto LABEL_34;
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    v17 = 0;
    goto LABEL_40;
  }
  swift_unknownObjectRelease();
  if ((v7 & 1) == 0)
    goto LABEL_34;
LABEL_15:
  if (!v10)
    goto LABEL_37;
  v18 = (char *)objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v18, v18 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  sub_1BA5193C4((uint64_t)&v30, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
  if (!v33)
  {
    sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
    goto LABEL_24;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    v19 = 0;
    v21 = 0;
    goto LABEL_25;
  }
  v19 = v29;
  v20 = objc_msgSend(v29, sel_integerValue);
  if (v20 == (id)-1)
  {

    v8 = &selRef_backgroundColor;
    goto LABEL_36;
  }
  v21 = (unint64_t)v20;
LABEL_25:
  if (objc_getAssociatedObject(v18, (const void *)~v21))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  sub_1BA5193C4((uint64_t)&v30, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
  if (!v33)
  {
    sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
LABEL_33:

    v8 = &selRef_backgroundColor;
    if ((v21 & 1) != 0)
      goto LABEL_36;
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_33;
  v22 = v29;
  v23 = objc_msgSend(v22, sel_integerValue);

  v24 = v23 ^ v21;
  v8 = &selRef_backgroundColor;
  if ((v24 & 1) == 0)
    goto LABEL_34;
LABEL_36:
  v25 = objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v26 = objc_msgSend(v25, sel_bundleChannelIDs);

  v27 = (void *)sub_1BB872970();
  LOBYTE(v25) = objc_msgSend(v26, sel_containsObject_, v27);
  swift_bridgeObjectRelease();

  if ((v25 & 1) != 0)
    goto LABEL_13;
LABEL_37:
  v28 = objc_msgSend(v5, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(a1, v8[117]));
  swift_unknownObjectRelease();
  if (v28)
    v17 = 1;
  else
    v17 = 2;
LABEL_40:
  *a2 = v17;
}

uint64_t sub_1BA5DFB0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5DFB40 + 4 * byte_1BB8AF1FB[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA5DFB40()
{
  return 1701667182;
}

uint64_t sub_1BA5DFB50()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA5DFB70()
{
  return 1885433183;
}

id FeedItemSupplementaryRenderer.render(in:supplementaryData:layoutAttributes:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v27 = sub_1BB870DF8();
  v10 = *(_QWORD *)(v27 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v27);
  v26[0] = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB812DA0(a1, a2, a3);
  v13 = v12;
  v28 = v14;
  v26[1] = swift_getObjectType();
  v15 = v13;
  v29 = a4;
  v30 = a5;
  sub_1BB813274(a1, (uint64_t)v15, a2, a3, a4, a5);

  v31 = v15;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = v26[0];
  v19 = v27;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(v26[0], a2, v27);
  v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v16;
  *(_QWORD *)(v22 + 24) = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v22 + v20, v18, v19);
  v23 = (uint64_t *)(v22 + v21);
  v24 = v30;
  *v23 = v29;
  v23[1] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F424();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

void sub_1BA5DFD78(uint64_t a1)
{
  sub_1BB8150D4(a1, &qword_1ED3B09D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, &qword_1ED3B4890, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
}

void sub_1BA5DFD9C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA4B07F0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    sub_1BA5DFE2C(a5, a3, a4);
    v9 = sub_1BB870138();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA5DFE2C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineView<A>, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedItemRendererType.render(in:at:layoutAttributes:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  char v10;

  v7 = *a3;
  v10 = 1;
  v9 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t *, uint64_t, uint64_t, uint64_t))(a7 + 72))(a1, a2, &v10, &v9, a4, a5, a6);
}

void FeedItemRenderer.render(in:at:options:layoutAttributes:actionSenderHandler:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, void **a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  _QWORD v35[2];
  void *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  void *v46;

  v44 = a7;
  v41 = sub_1BB86CBE0();
  v13 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v37 = v14;
  v40 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v45 = *a4;
  v16 = v45;
  sub_1BB69776C(a1, a2, (uint64_t)&v45);
  v17 = v46;
  sub_1BB1EAB00();
  v46 = v16;
  v39 = v15;
  LOBYTE(v45) = v15;
  v19 = v18;
  v38 = a2;
  v42 = a5;
  v43 = a6;
  sub_1BB697E28(a1, a2, (uint64_t)v19, (uint64_t)&v46, (uint64_t)&v45, a5, a6);

  v36 = v17;
  v46 = v17;
  sub_1BB1EAB00();
  v21 = v20;
  v35[1] = v22;
  v35[0] = swift_getObjectType();
  v46 = v21;
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = v40;
  v26 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v40, v38, v41);
  v27 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v28 = v27 + v37;
  v29 = (v27 + v37) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  v31 = v29 + v30;
  *(_QWORD *)(v30 + 16) = v23;
  *(_QWORD *)(v30 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v30 + v27, v25, v26);
  *(_BYTE *)(v30 + v28) = v39;
  v32 = v43;
  *(_QWORD *)(v31 + 8) = v42;
  *(_QWORD *)(v31 + 16) = v32;
  v33 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F424();
  swift_release();
  v34 = v46;
  swift_release();
  swift_release();

  *v44 = v36;
}

void sub_1BA5E012C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C4948)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C4948);
  }
}

uint64_t sub_1BA5E01A4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA4B07F0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA5E01FC(_QWORD *a1)
{
  return sub_1BA5E021C(a1);
}

uint64_t sub_1BA5E021C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *MEMORY[0x1E0DEEDD8] & *a1;
  v4 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  v6 = (_QWORD *)(v3 + *MEMORY[0x1E0DB8500]);
  v7 = *v6;
  v8 = v6[1];
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, *v6, v8, v4, v5);
  v10 = v1[10];
  v9 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v10);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, v7, v8, v10, v9);
}

void sub_1BA5E02E0()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB8700FC();
  sub_1BB8736E4();

  v1 = (id)sub_1BB8700FC();
  objc_msgSend(v1, sel_setIsAccessibilityElement_, 1);

}

uint64_t sub_1BA5E033C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t **, uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t **, uint64_t);
  uint64_t *v25;
  id *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void (*v35)(uint64_t **, uint64_t);
  id v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  id *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD v47[8];
  _QWORD v48[8];
  unint64_t v49[9];

  v39 = a1;
  v41 = (id *)a2;
  sub_1BA5E06F8(a2, (uint64_t)&v46);
  v37 = v46;
  v2 = sub_1BB870708();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86FFDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v40 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t **)((char *)&v37 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t **)((char *)&v37 - v11);
  v13 = (uint64_t *)swift_allocObject();
  v14 = sub_1BB87090C();
  v15 = MEMORY[0x1E0DB9D70];
  v13[5] = v14;
  v13[6] = v15;
  __swift_allocate_boxed_opaque_existential_0(v13 + 2);
  sub_1BB870900();
  *v12 = v13;
  v16 = *MEMORY[0x1E0DB82C0];
  v17 = *(void (**)(uint64_t **, uint64_t, uint64_t))(v5 + 104);
  v17(v12, v16, v4);
  v18 = (uint64_t *)swift_allocObject();
  v18[5] = v14;
  v18[6] = v15;
  __swift_allocate_boxed_opaque_existential_0(v18 + 2);
  sub_1BB870900();
  *v9 = v18;
  v17(v9, v16, v4);
  sub_1BA5E07DC();
  v20 = v19;
  v21 = swift_allocBox();
  v23 = v22 + *(int *)(v20 + 48);
  v42 = v5;
  v24 = *(void (**)(uint64_t, uint64_t **, uint64_t))(v5 + 16);
  v24(v22, v9, v4);
  v24(v23, v12, v4);
  v25 = v40;
  *v40 = v21;
  v17((uint64_t **)v25, *MEMORY[0x1E0DB82C8], v4);
  v26 = v41;
  sub_1BB8700E4();
  v27 = (void *)sub_1BB8700D8();
  sub_1BA5E06F8((uint64_t)v26, (uint64_t)v49);
  v28 = (void *)v49[0];
  if (v49[0] >= 2)
  {
    v31 = v37;
  }
  else
  {
    v29 = v38[5];
    v30 = v38[6];
    __swift_project_boxed_opaque_existential_1(v38 + 2, v29);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v30 + 8))(v48, v29, v30);
    v28 = (void *)v48[0];

    sub_1BB6DC798(v26);
  }
  objc_msgSend(v27, sel_setBackgroundColor_, v28, v37);

  v32 = (void *)sub_1BB8700D8();
  sub_1BA5E06F8((uint64_t)v26, (uint64_t)v48);
  sub_1BB8706F0();

  v33 = (void *)sub_1BB8700D8();
  sub_1BA5E06F8((uint64_t)v26, (uint64_t)v47);
  sub_1BB8706FC();

  v34 = (void *)sub_1BB8700D8();
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E0DB9858], v45);
  sub_1BB870714();

  v35 = *(void (**)(uint64_t **, uint64_t))(v42 + 8);
  v35(v9, v4);
  return ((uint64_t (*)(uint64_t **, uint64_t))v35)(v12, v4);
}

uint64_t sub_1BA5E06F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED3B5B20, (uint64_t)&type metadata for FormatCellSelection.Background.Resolved, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BA5E0754@<X0>(_QWORD *a1@<X2>, void **a2@<X3>, id *a3@<X4>, void **a4@<X8>)
{
  void *v7;
  id v8;
  id v9;
  id v11;

  if (*a1 != -1)
    swift_once();
  v7 = *a2;
  v11 = *a3;
  v8 = *a3;
  *a4 = *a2;
  a4[1] = v8;
  v9 = v7;
  return v11;
}

id ColorPaletteProviding.baseColorPalette.getter@<X0>(void **a1@<X8>)
{
  return sub_1BA5E0754(&qword_1ED3BA738, (void **)&qword_1ED3B4718, &qword_1ED3B4720, a1);
}

void sub_1BA5E07DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B0988)
  {
    sub_1BB86FFDC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B0988);
  }
}

uint64_t sub_1BA5E0840(_QWORD *a1, const void *a2, char *a3)
{
  uint64_t v5;
  double v7[38];

  memcpy(v7, a2, sizeof(v7));
  v5 = type metadata accessor for HeadlineViewLayout.Context(0);
  return sub_1BB2DB844(a1, v7, (_QWORD *)((char *)a1 + *(int *)(v5 + 24)), a3);
}

uint64_t type metadata accessor for HeadlineView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HeadlineView);
}

unint64_t sub_1BA5E08A8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(v2 + *(int *)(a1 + 52));
  *a2 = v3;
  return sub_1BA6D44C8(v3);
}

uint64_t type metadata accessor for FeedItemRenderer()
{
  return objc_opt_self();
}

unint64_t FormatLayoutViewRenderer.renderAction<A>(context:itemData:contextLayoutOptions:view:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9[3];

  memset(v9, 0, sizeof(v9));
  return FormatLayoutViewRenderer.renderAction<A>(context:itemData:contextLayoutOptions:view:sourceItemData:actionSenderHandler:)(a1, a2, a3, a4, v9, a5, a6, a7, a8);
}

void sub_1BA5E091C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  id v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[5];
  unsigned __int8 v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;

  v4 = sub_1BB86FFDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v8);

  v9 = *(_QWORD *)(a2 + 32);
  if (!v9)
  {
    objc_msgSend(a1, sel_setAccessibilityIgnoresInvertColors_, 0);
LABEL_9:
    v53 = 1;
    v54 = 0u;
    v55 = 0u;
    v56 = 0u;
    v57 = 0;
    sub_1BA5E033C((uint64_t)a1, (uint64_t)&v53);
    return;
  }
  objc_msgSend(a1, sel_setAccessibilityIgnoresInvertColors_, *(_BYTE *)(v9 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) & 1);
  v10 = *(unsigned __int8 *)(v9 + 176);
  if (v10 > 1)
  {
    if (v10 == 2)
    {
      sub_1BA5E07DC();
      v27 = v26;
      v28 = swift_allocBox();
      v30 = v29 + *(int *)(v27 + 48);
      sub_1BB86FFD0();
      v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104);
      v31(v30, *MEMORY[0x1E0DB82B0], v4);
      *v7 = v28;
      v31((uint64_t)v7, *MEMORY[0x1E0DB82C8], v4);
      sub_1BB8700E4();
      return;
    }
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v9 + 120);
  v12 = *(_QWORD *)(v9 + 128);
  v14 = *(_QWORD *)(v9 + 136);
  v13 = *(_QWORD *)(v9 + 144);
  v16 = *(_QWORD *)(v9 + 152);
  v15 = *(_QWORD *)(v9 + 160);
  v17 = *(_QWORD *)(v9 + 168);
  if (v10)
  {
    v32 = v11 & 0xF000000000000007;
    if ((v11 & 0xF000000000000007) == 0xD000000000000007)
    {
      v33 = v11;
      v34 = 0;
      v35 = 0;
    }
    else if (v32 == 0xF000000000000007)
    {
      v35 = 1;
      v33 = v11;
      sub_1BA7644AC(v11, v12, v14, v13, v16, v15, v17, 1);
      v34 = 0;
    }
    else
    {
      v53 = v11;
      v36 = v12;
      v37 = v11;
      sub_1BA7756B8(v11, v36, v14, v13, v16, v15, v17, 1);
      v48 = v36;
      sub_1BA7756B8(v37, v36, v14, v13, v16, v15, v17, 1);
      swift_retain();
      FormatFloat.value(contextLayoutOptions:)();
      v39 = v38;
      v40 = v48;
      sub_1BA7644AC(v37, v48, v14, v13, v16, v15, v17, 1);
      v33 = v37;
      v41 = v37;
      v12 = v40;
      sub_1BA7644AC(v41, v40, v14, v13, v16, v15, v17, 1);
      v35 = 0;
      v34 = v39;
    }
    sub_1BB6DAFC4((uint64_t)a1, v34, v35 | ((v32 == 0xD000000000000007) << 8));
    sub_1BA7644AC(v33, v12, v14, v13, v16, v15, v17, 1);
  }
  else
  {
    v48 = v12;
    v47 = v11;
    v46 = v17;
    v45 = v15;
    v44 = v16;
    v43 = v14;
    v42 = v13;
    if ((v17 & 0xF000000000000007) == 0xD000000000000007)
    {
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 1;
    }
    else
    {
      v53 = v11;
      *(_QWORD *)&v54 = v12;
      *((_QWORD *)&v54 + 1) = v14;
      *(_QWORD *)&v55 = v13;
      *((_QWORD *)&v55 + 1) = v16;
      LOBYTE(v56) = v15 & 1;
      *((_QWORD *)&v56 + 1) = v17;
      sub_1BA7756B8(v11, v12, v14, v13, v16, v15, v17, 0);
      FormatCellSelection.Background.resolve(context:)((uint64_t)v49);
      v25 = v49[0];
      v18 = v49[1];
      v19 = v49[2];
      v20 = v49[3];
      v21 = v49[4];
      v22 = v50;
      v23 = v51;
      v24 = v52;
    }
    v53 = v25;
    *(_QWORD *)&v54 = v18;
    *((_QWORD *)&v54 + 1) = v19;
    *(_QWORD *)&v55 = v20;
    *((_QWORD *)&v55 + 1) = v21;
    *(_QWORD *)&v56 = v22;
    *((_QWORD *)&v56 + 1) = v23;
    v57 = v24;
    sub_1BA5E033C((uint64_t)a1, (uint64_t)&v53);
    sub_1BA7644AC(v47, v48, v43, v42, v44, v45, v46, 0);
    sub_1BA5E0E34((id)v25);
  }
}

void sub_1BA5E0E34(id a1)
{
  if (a1 != (id)1)

}

unint64_t sub_1BA5E0E44()
{
  unint64_t result;

  result = qword_1ED3BBF68;
  if (!qword_1ED3BBF68)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3BBF68);
  }
  return result;
}

uint64_t sub_1BA5E0E98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTypeDefinition.init(from:)(a1, a2);
}

uint64_t FormatTypeDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34;

  v3 = v2;
  v34 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  v11 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v6;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v24 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v24;
      *(_QWORD *)(v25 + 8) = v17;
      *(_QWORD *)(v25 + 16) = &unk_1E726F298;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v24, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      a1 = v28;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5E1264();
  v30 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v29)
  {
    if (v29 == 1)
    {
      v29 = xmmword_1BB87FC90;
      sub_1BA5E12EC();
      sub_1BB8740D4();
      v18 = v34;
      a1 = v28;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v20 = *((_QWORD *)&v30 + 1);
      v19 = v30;
      v21 = v31;
      v22 = v32;
      v23 = v33 | 0x40;
    }
    else
    {
      v30 = xmmword_1BB87FC90;
      sub_1BA5E1330();
      sub_1BB8740D4();
      v18 = v34;
      a1 = v28;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v20 = 0;
      v19 = v29;
      v21 = 0uLL;
      v23 = 0x80;
      v22 = 0uLL;
    }
  }
  else
  {
    v30 = xmmword_1BB87FC90;
    sub_1BA5E12A8();
    sub_1BB8740D4();
    a1 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    v20 = 0;
    v23 = 0;
    v19 = v29;
    v21 = 0uLL;
    v22 = 0uLL;
    v18 = v34;
  }
  *(_QWORD *)v18 = v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_OWORD *)(v18 + 16) = v21;
  *(_OWORD *)(v18 + 32) = v22;
  *(_BYTE *)(v18 + 48) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5E1264()
{
  unint64_t result;

  result = qword_1ED3C92F8;
  if (!qword_1ED3C92F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C48A8, &_s10CodingTypeON_6);
    atomic_store(result, (unint64_t *)&qword_1ED3C92F8);
  }
  return result;
}

unint64_t sub_1BA5E12A8()
{
  unint64_t result;

  result = qword_1ED3B6298;
  if (!qword_1ED3B6298)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition.Enum, &type metadata for FormatTypeDefinition.Enum);
    atomic_store(result, (unint64_t *)&qword_1ED3B6298);
  }
  return result;
}

unint64_t sub_1BA5E12EC()
{
  unint64_t result;

  result = qword_1ED3B8270;
  if (!qword_1ED3B8270)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineDefinition, &type metadata for FormatStateMachineDefinition);
    atomic_store(result, (unint64_t *)&qword_1ED3B8270);
  }
  return result;
}

unint64_t sub_1BA5E1330()
{
  unint64_t result;

  result = qword_1ED3BB240;
  if (!qword_1ED3BB240)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemDefinition, &type metadata for FormatCustomItemDefinition);
    atomic_store(result, (unint64_t *)&qword_1ED3BB240);
  }
  return result;
}

uint64_t sub_1BA5E1374@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatType.init(from:)(a1, a2);
}

uint64_t FormatType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  __int128 v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;

  v3 = v2;
  v35 = a2;
  sub_1BAE7B01C();
  v6 = v5;
  v7 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7B094();
  sub_1BA4A2870(&qword_1ED3D1480, (uint64_t (*)(uint64_t))sub_1BAE7B094, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v15 - 2);
      v21 = *((_QWORD *)v15 - 1);
      v35 = v6;
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v34 - 4) = (uint64_t)&_s10CodingKeysON_207;
      *(&v34 - 3) = sub_1BAE7B114();
      *(&v34 - 2) = sub_1BA5E173C();
      *(&v34 - 1) = sub_1BAE7B158();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7268B90);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t *))(v7 + 8))(v12, v35);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v38 = 0uLL;
  LOBYTE(v39) = 0;
  v16 = sub_1BB874098();
  v18 = v17;
  v38 = xmmword_1BB8A1A10;
  LOBYTE(v39) = 0;
  v19 = sub_1BB87402C();
  v27 = v26;
  v34 = v19;
  v36 = xmmword_1BB8D2D60;
  v37 = 0;
  sub_1BA5E1780();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t *))(v7 + 8))(v9, v6);
  v28 = v41;
  v29 = v38;
  v30 = v39;
  v31 = v40;
  v33 = v34;
  v32 = v35;
  *v35 = v16;
  v32[1] = v18;
  v32[2] = v33;
  v32[3] = v27;
  *((_OWORD *)v32 + 2) = v29;
  *((_OWORD *)v32 + 3) = v30;
  *((_OWORD *)v32 + 4) = v31;
  *((_BYTE *)v32 + 80) = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5E173C()
{
  unint64_t result;

  result = qword_1ED3C6600;
  if (!qword_1ED3C6600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF5E8, &_s10CodingKeysON_207);
    atomic_store(result, (unint64_t *)&qword_1ED3C6600);
  }
  return result;
}

unint64_t sub_1BA5E1780()
{
  unint64_t result;

  result = qword_1ED3B62A0;
  if (!qword_1ED3B62A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition, &type metadata for FormatTypeDefinition);
    atomic_store(result, (unint64_t *)&qword_1ED3B62A0);
  }
  return result;
}

uint64_t destroy for FeedSlot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA5E1814@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLocalizationString.Selector.init(from:)(a1, a2);
}

uint64_t FormatLocalizationString.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v29 = a2;
  sub_1BAEA1BE8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA1C60();
  sub_1BA4A2870(&qword_1ED3D1160, (uint64_t (*)(uint64_t))sub_1BAEA1C60, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v15 - 2);
      v19 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v29 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_98;
      *(&v28 - 3) = sub_1BAEA1CE0();
      *(&v28 - 2) = sub_1BA5E1B78();
      *(&v28 - 1) = sub_1BAEA1D24();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726CC48);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v30 = 0uLL;
  v31 = 0;
  sub_1BB8740D4();
  v17 = v32;
  v16 = v33;
  v30 = xmmword_1BB8A1A10;
  v31 = 0;
  v24 = sub_1BB874098();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v27 = (_QWORD *)v29;
  *(_QWORD *)v29 = v17;
  v27[1] = v16;
  v27[2] = v24;
  v27[3] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5E1B78()
{
  unint64_t result;

  result = qword_1ED3CACE0;
  if (!qword_1ED3CACE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9358, &_s10CodingKeysON_98);
    atomic_store(result, (unint64_t *)&qword_1ED3CACE0);
  }
  return result;
}

uint64_t destroy for HeadlineViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA5E1C2C(_QWORD *a1)
{
  return FormatBindingTextExpression.encode(to:)(a1);
}

uint64_t FormatBindingTextExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int v23;
  unsigned int v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  char v32;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  char v49;
  __int128 v50;
  char v51;
  _BYTE v52[64];
  uint64_t v53;

  v3 = v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  sub_1BAE84F84(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE79BFC(v3, (uint64_t)v52);
  v53 = *(_QWORD *)(v3 + 56);
  v14 = *(_QWORD *)(v3 + 64);
  v39 = *(_QWORD *)(v3 + 72);
  v40 = *(_QWORD *)(v3 + 80);
  v41 = v14;
  v37 = *(_QWORD *)(v3 + 88);
  v38 = *(_QWORD *)(v3 + 96);
  v36 = *(unsigned __int8 *)(v3 + 106);
  v35 = *(unsigned __int16 *)(v3 + 104);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE84E7C();
  v18 = sub_1BA4A2870(&qword_1ED3D12A0, (uint64_t (*)(uint64_t))sub_1BAE84E7C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingTextExpression, v19, v15, (uint64_t)&type metadata for FormatBindingTextExpression, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v13, v18, (uint64_t)&off_1E734BD80);
  sub_1BAE79C38((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v10, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0F1EC((uint64_t)v52, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  sub_1BAE79C38((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF090);
  if (!v2)
  {
    v23 = v35 | (v36 << 16);
    v22(v7, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = v23;
    v25 = (v23 & 0xE00000) == 12582912;
    v26 = v38;
    v27 = v37;
    v29 = v39;
    v28 = v40;
    v30 = v41;
    if (v25 && (v24 & 0xFFFFFF) == 0xC00000 && v53 == 1 && !(v39 | v41 | v40 | v37 | v38))
    {
      v31 = v24;
      sub_1BA714334(1, 0, v39, v40, v37, v38, 0xC00000u);
    }
    else
    {
      v31 = v24;
      sub_1BA714334(v53, v41, v39, v40, v37, v38, v24);
      v32 = sub_1BAE43C44((uint64_t)v7, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      v30 = v41;
      if ((v32 & 1) != 0)
      {
        v50 = xmmword_1BB8A1A10;
        v51 = 0;
        v42 = v53;
        v43 = v41;
        v44 = v29;
        v45 = v28;
        v46 = v27;
        v47 = v26;
        v49 = BYTE2(v31);
        v48 = v31;
        sub_1BAE84FFC();
        sub_1BA4A2870(&qword_1ED3AEF10, (uint64_t (*)(uint64_t))sub_1BAE84FFC, MEMORY[0x1E0DED188]);
        sub_1BA82110C();
        v29 = v39;
        v28 = v40;
        sub_1BB874464();
        v30 = v41;
      }
    }
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EF404(v53, v30, v29, v28, v27, v26, v31);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAE84F84);
}

uint64_t sub_1BA5E209C@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatAccessibilityContent.init(from:)(a1, a2);
}

uint64_t FormatAccessibilityContent.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t *v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int16 v26;
  __int128 v27;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  __int128 v38;
  unint64_t *v39;

  v3 = v2;
  v39 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v12 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v17;
      *(_QWORD *)(v22 + 16) = &unk_1E726A390;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5E24E8();
  v33 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v38)
  {
    if (v38 == 1)
    {
      sub_1BA55B8C4(0, &qword_1ED3B5538, (uint64_t (*)(void))sub_1BA825800, (uint64_t)&type metadata for FormatAccessibilityContent, (uint64_t)&type metadata for FormatAccessibilityData);
      v38 = xmmword_1BB87FC90;
      sub_1BA5E252C();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v18 = v34;
      v32 = v33;
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v32;
      *(_QWORD *)(v19 + 32) = v18;
      v20 = v19 | 0x4000000000000000;
    }
    else
    {
      sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
      v38 = xmmword_1BB87FC90;
      sub_1BAE767F4();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v29 = v33;
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v29;
      v20 = v30 | 0x8000000000000000;
    }
  }
  else
  {
    v38 = xmmword_1BB87FC90;
    sub_1BA646348();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v31 = v34;
    v32 = v33;
    v23 = v35;
    v24 = v36;
    v25 = a1;
    v26 = v37;
    v20 = swift_allocObject();
    v27 = v31;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v27;
    *(_QWORD *)(v20 + 48) = v23;
    *(_QWORD *)(v20 + 56) = v24;
    *(_WORD *)(v20 + 64) = v26;
    a1 = v25;
  }
  *v10 = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5E24E8()
{
  unint64_t result;

  result = qword_1ED3CB678;
  if (!qword_1ED3CB678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE6F0, &_s10CodingTypeON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3CB678);
  }
  return result;
}

unint64_t sub_1BA5E252C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5530;
  if (!qword_1ED3B5530)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5538, (uint64_t (*)(void))sub_1BA825800, (uint64_t)&type metadata for FormatAccessibilityContent, (uint64_t)&type metadata for FormatAccessibilityData);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5530);
  }
  return result;
}

uint64_t sub_1BA5E2594@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTextNodeFormat.Token.init(from:)(a1, a2);
}

uint64_t FormatTextNodeFormat.Token.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  __int128 v49;
  char v50;
  __int128 v51;
  char v52;

  v45 = a2;
  sub_1BA6927D0();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE7CE1C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7CE94();
  sub_1BA4A2870(&qword_1ED3D1650, (uint64_t (*)(uint64_t))sub_1BAE7CE94, (uint64_t)&unk_1BB8FFC6C);
  v11 = v48;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  v44 = v5;
  v13 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v8;
  v16 = v7;
  v18 = v46;
  v17 = v47;
  if ((v13 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v21 - 2);
      v26 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      v28 = v16;
      MEMORY[0x1E0C80A78](v27);
      *((_QWORD *)&v40 - 4) = &_s10CodingKeysON_199;
      *((_QWORD *)&v40 - 3) = sub_1BAE7CF14();
      *((_QWORD *)&v40 - 2) = sub_1BA5E2AD0();
      *((_QWORD *)&v40 - 1) = sub_1BAE7CF58();
      swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E72694C0);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v30 = v25;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v28);
      a1 = v48;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v51 = 0uLL;
  v52 = 0;
  v22 = sub_1BB874098();
  v24 = v23;
  v43 = v22;
  v51 = xmmword_1BB8A1A10;
  v52 = 0;
  sub_1BA650B5C();
  sub_1BB8740D4();
  v42 = v24;
  v31 = v49;
  type metadata accessor for FormatTextNodeStyle();
  v51 = xmmword_1BB8D2D60;
  v52 = 0;
  sub_1BA4A2870(&qword_1ED3C8748, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  sub_1BB874068();
  v41 = v31;
  v34 = v49;
  v40 = xmmword_1BB8D2D70;
  v51 = xmmword_1BB8D2D70;
  v52 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v49 = v40;
    v50 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v35 = v44;
    sub_1BB8740D4();
    v36 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v17);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9E8];
  }
  v37 = v41;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v16);
  v38 = v45;
  v39 = v42;
  *v45 = v43;
  v38[1] = v39;
  v38[2] = v37;
  v38[3] = v34;
  v38[4] = v36;
  v32 = (uint64_t)v48;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA5E2AD0()
{
  unint64_t result;

  result = qword_1ED3C4D70;
  if (!qword_1ED3C4D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEDA0, &_s10CodingKeysON_199);
    atomic_store(result, (unint64_t *)&qword_1ED3C4D70);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatLayoutValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1BA5E2B48()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5E2B7C + 4 * byte_1BB8AECDC[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA5E2B7C()
{
  return 0x65756C6176;
}

uint64_t sub_1BA5E2B90()
{
  return 0x6E65646E65706564;
}

unint64_t sub_1BA5E2BA8()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA5E2BC4()
{
  return 1885433183;
}

uint64_t FormatCommandAction.__deallocating_deinit()
{
  FormatCommandAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatCommandAction.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatDecorationProviderFactory.create(content:regions:options:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD v27[8];

  v4 = v3;
  v8 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = MEMORY[0x1E0DEE9E8];
  if (!(a2 >> 62))
  {
    v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEE9E8];
LABEL_12:
    sub_1BA5E34EC(a1, (uint64_t)v10);
    v16 = *(_BYTE *)(v4 + 33);
    v18 = *(_QWORD *)(v4 + 40);
    v17 = *(_QWORD *)(v4 + 48);
    v19 = *(_QWORD *)(v4 + 56);
    v20 = *(void **)(v4 + 64);
    v21 = *(_QWORD *)(v4 + 72);
    v22 = *(_QWORD *)(v4 + 80);
    v23 = *(_QWORD *)(v4 + 88);
    LOBYTE(v27[0]) = *(_BYTE *)(v4 + 32);
    BYTE1(v27[0]) = v16;
    v27[1] = v18;
    v27[2] = v17;
    v27[3] = v19;
    v27[4] = v20;
    v27[5] = v21;
    v27[6] = v22;
    v27[7] = v23;
    v25 = *(void **)(v4 + 16);
    v24 = *(_QWORD *)(v4 + 24);
    swift_bridgeObjectRetain();
    v26 = v25;
    sub_1BA70A884(v19, v20);
    swift_bridgeObjectRetain();
    swift_retain();
    return sub_1BA5E304C((uint64_t)v10, (uint64_t)v26, (char *)v27, a3, v15, v24);
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v11 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCE4630](v13, a2);
      else
        swift_retain();
      ++v13;
      v14 = swift_bridgeObjectRetain();
      sub_1BA5E2E34(v14);
      swift_release();
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    v15 = v27[0];
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1BA5E2E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for FeedGroupItem();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - v10;
  v12 = 0;
  v13 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v12 << 6);
      goto LABEL_5;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v17)
      goto LABEL_23;
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v17)
        goto LABEL_23;
      v21 = *(_QWORD *)(v24 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v17)
          goto LABEL_23;
        v21 = *(_QWORD *)(v24 + 8 * v12);
        if (!v21)
        {
          v12 = v20 + 3;
          if (v20 + 3 >= v17)
            goto LABEL_23;
          v21 = *(_QWORD *)(v24 + 8 * v12);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    sub_1BA4C2DD8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    sub_1BB5534B4((uint64_t)v11, (uint64_t)v5);
    sub_1BA6CD578((uint64_t)v8, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  }
  v22 = v20 + 4;
  if (v22 >= v17)
  {
LABEL_23:
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v17)
      goto LABEL_23;
    v21 = *(_QWORD *)(v24 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1BA5E304C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  _UNKNOWN **v35;

  v11 = *a3;
  v32 = a3[1];
  v30 = *((_QWORD *)a3 + 2);
  v31 = *((_QWORD *)a3 + 1);
  v28 = *((_QWORD *)a3 + 4);
  v29 = *((_QWORD *)a3 + 3);
  v26 = *((_QWORD *)a3 + 6);
  v27 = *((_QWORD *)a3 + 5);
  v25 = *((_QWORD *)a3 + 7);
  v12 = type metadata accessor for FormatContent.Resolved();
  v13 = *(int *)(v12 + 28);
  v14 = *(int *)(v12 + 32);
  v15 = *(_QWORD *)(a1 + v13);
  v16 = *(_QWORD *)(a1 + v14);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v23 = *(_QWORD *)(a1 + v13);
    v24 = v11;
    *(_QWORD *)&v33 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BB873DD4();
    v19 = v16 + 56;
    do
    {
      sub_1BA6D78DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v19 += 80;
      --v17;
    }
    while (v17);
    v18 = v33;
    swift_bridgeObjectRelease();
    v11 = v24;
    v15 = v23;
  }
  *(_QWORD *)&v33 = v15;
  swift_bridgeObjectRetain();
  sub_1BA5E34E0(v18);
  v20 = v33;
  v34 = type metadata accessor for FormatLogger();
  v35 = &protocol witness table for FormatLogger;
  *(_QWORD *)&v33 = swift_initStaticObject();
  type metadata accessor for FormatDecorationProvider();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = a2;
  *(_BYTE *)(v21 + 32) = v11;
  *(_BYTE *)(v21 + 33) = v32;
  *(_QWORD *)(v21 + 40) = v31;
  *(_QWORD *)(v21 + 48) = v30;
  *(_QWORD *)(v21 + 56) = v29;
  *(_QWORD *)(v21 + 64) = v28;
  *(_QWORD *)(v21 + 72) = v27;
  *(_QWORD *)(v21 + 80) = v26;
  *(_QWORD *)(v21 + 88) = v25;
  *(_QWORD *)(v21 + 96) = a4;
  *(_QWORD *)(v21 + 104) = a5;
  *(_QWORD *)(v21 + 112) = a6;
  sub_1BA4CECCC(&v33, v21 + 120);
  sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v21;
}

uint64_t type metadata accessor for FormatDecorationProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA5E32C4@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA5E32E8(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_1BA5E32E8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v13 = a1[7];
  v33 = a1[6];
  v34 = v13;
  v35 = a1[8];
  v14 = a1[3];
  v29 = a1[2];
  v30 = v14;
  v15 = a1[5];
  v31 = a1[4];
  v32 = v15;
  v16 = a1[1];
  v27 = *a1;
  v28 = v16;
  sub_1BA8C88FC((uint64_t)&v27);
  v17 = type metadata accessor for FormatLogger();
  swift_retain();
  inited = swift_initStaticObject();
  a7[3] = (uint64_t)&type metadata for FormatGroupLayoutFactory;
  a7[4] = sub_1BA5E3468();
  v19 = swift_allocObject();
  *a7 = v19;
  *(_QWORD *)(v19 + 200) = v17;
  *(_QWORD *)(v19 + 208) = &protocol witness table for FormatLogger;
  *(_QWORD *)(v19 + 176) = inited;
  v20 = *(_QWORD *)(a3 + 8);
  sub_1BA4C010C(a3 + 16, v19 + 224);
  v21 = v34;
  *(_OWORD *)(v19 + 112) = v33;
  *(_OWORD *)(v19 + 128) = v21;
  *(_OWORD *)(v19 + 144) = v35;
  v22 = v30;
  *(_OWORD *)(v19 + 48) = v29;
  *(_OWORD *)(v19 + 64) = v22;
  v23 = v32;
  *(_OWORD *)(v19 + 80) = v31;
  *(_OWORD *)(v19 + 96) = v23;
  v24 = v28;
  *(_OWORD *)(v19 + 16) = v27;
  *(_OWORD *)(v19 + 32) = v24;
  v25 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v19 + 160) = a2;
  *(_QWORD *)(v19 + 168) = v25;
  *(_QWORD *)(v19 + 216) = v20;
  *(_QWORD *)(v19 + 264) = a4;
  *(_QWORD *)(v19 + 272) = a5;
  *(_QWORD *)(v19 + 280) = a6;
  *(_QWORD *)(v19 + 288) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

uint64_t type metadata accessor for FormatLogger()
{
  return objc_opt_self();
}

unint64_t sub_1BA5E3468()
{
  unint64_t result;

  result = qword_1ED3B7840;
  if (!qword_1ED3B7840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93ABD8, &type metadata for FormatGroupLayoutFactory);
    atomic_store(result, (unint64_t *)&qword_1ED3B7840);
  }
  return result;
}

uint64_t sub_1BA5E34AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BA6F41A0, (unint64_t *)&qword_1ED3B6FC0);
  *v3 = result;
  return result;
}

uint64_t sub_1BA5E34E0(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA65EEC0);
}

uint64_t sub_1BA5E34EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContent.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA5E3530(__int128 *a1, __int128 *a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, __int128 *a8, __int128 *a9, __int128 *a10, uint64_t a11, __int128 *a12, __int128 a13, uint64_t a14, uint64_t a15, __int128 *a16, __int128 *a17, __int128 *a18)
{
  uint64_t v18;

  *(_WORD *)(v18 + 472) = 514;
  sub_1BA5E36AC();
  swift_allocObject();
  *(_QWORD *)(v18 + 480) = sub_1BB86E7AC();
  sub_1BA4CECCC(a1, v18 + 16);
  sub_1BA4CECCC(a2, v18 + 56);
  sub_1BA4CECCC(a3, v18 + 96);
  *(_QWORD *)(v18 + 136) = a4;
  *(_QWORD *)(v18 + 144) = a5;
  *(_QWORD *)(v18 + 152) = a6;
  sub_1BA4CECCC(a7, v18 + 160);
  sub_1BA4CECCC(a8, v18 + 200);
  sub_1BA4CECCC(a9, v18 + 240);
  sub_1BA4CECCC(a10, v18 + 280);
  *(_OWORD *)(v18 + 320) = a13;
  *(_QWORD *)(v18 + 336) = a14;
  *(_QWORD *)(v18 + 344) = a15;
  sub_1BA4CECCC(a16, v18 + 352);
  sub_1BA4CECCC(a17, v18 + 392);
  sub_1BA4CECCC(a18, v18 + 432);
  *(_QWORD *)(v18 + 488) = a11;
  sub_1BA4CECCC(a12, v18 + 496);
  return v18;
}

void sub_1BA5E36AC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3BBED0)
  {
    sub_1BB86C67C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for FormatService.CacheFormatFile(255);
    sub_1BA50AD30((unint64_t *)&qword_1ED3B04C0, 255, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_1BB86E7B8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3BBED0);
  }
}

uint64_t sub_1BA5E3744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatURL.init(from:)(a1, a2);
}

uint64_t FormatURL.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (**v5)(char *, _QWORD);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  void (**v21)(char *, _QWORD);
  uint64_t v22;
  __int128 v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  _BYTE v39[24];
  char v40;
  void (**v41)(char *, _QWORD);

  v35 = a2;
  v37 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v37);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v36 = v4;
  v5 = *(void (***)(char *, _QWORD))(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - v6;
  v8 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v11 = v41;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v28 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v32 = v10;
  v33 = a1;
  v41 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v36;
  v16 = v7;
  if ((v14 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (unint64_t *)(v17 + 40);
      while (1)
      {
        v20 = *v19;
        if (*v19 >= 4)
          break;
        v19 += 2;
        if (!--v18)
          goto LABEL_7;
      }
      v25 = *(v19 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v25;
      *(_QWORD *)(v26 + 8) = v20;
      *(_QWORD *)(v26 + 16) = &unk_1E7268170;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v25, v20);
      v41[1](v16, v15);
      a1 = v33;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5E3C04();
  *(_OWORD *)v39 = 0uLL;
  sub_1BB8740D4();
  v21 = v41;
  if ((_BYTE)v38)
  {
    if (v38 == 1)
    {
      v38 = xmmword_1BB87FC90;
      sub_1BA5E3C8C();
      sub_1BB8740D4();
      v22 = v35;
      v21[1](v16, v15);
      v23 = *(_OWORD *)&v39[8];
      v24 = v32;
      *v32 = *(_QWORD *)v39;
      *(_OWORD *)(v24 + 1) = v23;
    }
    else
    {
      v38 = xmmword_1BB87FC90;
      sub_1BA5E3C48();
      sub_1BB8740D4();
      v22 = v35;
      v21[1](v16, v15);
      v30 = *(_QWORD *)&v39[16];
      v31 = v40;
      v24 = v32;
      *(_OWORD *)v32 = *(_OWORD *)v39;
      v24[2] = v30;
      *((_BYTE *)v24 + 24) = v31;
    }
  }
  else
  {
    *(_OWORD *)v39 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED39E5A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAbsoluteURL, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
    v27 = (uint64_t)v34;
    sub_1BB8740D4();
    v21[1](v16, v15);
    v24 = v32;
    sub_1BA5193C4(v27, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    v22 = v35;
  }
  swift_storeEnumTagMultiPayload();
  sub_1BA5193C4((uint64_t)v24, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v28 = (uint64_t)v33;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t type metadata accessor for FormatAbsoluteURL()
{
  uint64_t result;

  result = qword_1ED3B4AD8;
  if (!qword_1ED3B4AD8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA5E3C04()
{
  unint64_t result;

  result = qword_1ED3CF600;
  if (!qword_1ED3CF600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D03C0, &_s10CodingTypeON_160);
    atomic_store(result, (unint64_t *)&qword_1ED3CF600);
  }
  return result;
}

unint64_t sub_1BA5E3C48()
{
  unint64_t result;

  result = qword_1ED3B4AB8;
  if (!qword_1ED3B4AB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLBinding, &type metadata for FormatURLBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B4AB8);
  }
  return result;
}

unint64_t sub_1BA5E3C8C()
{
  unint64_t result;

  result = qword_1ED3B3ED8;
  if (!qword_1ED3B3ED8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAssetURL, &type metadata for FormatAssetURL);
    atomic_store(result, (unint64_t *)&qword_1ED3B3ED8);
  }
  return result;
}

void sub_1BA5E3CD0(uint64_t a1, uint64_t a2)
{
  FormatSelectorValueSelector.encode(to:)(a1, a2);
}

void FormatSelectorValueSelector.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v14 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v12 = v6;
  v8 = _s10CodingKeysOMa_224(255, v13, v6, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8CF7C0, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CF770, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CF748, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA5E3DCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 72) = v11;
  *(_QWORD *)(v5 - 144) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.Azden, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BC80);
  v18 = *v3;
  v17 = v3[1];
  *(_QWORD *)(v5 - 168) = v3;
  *(_QWORD *)(v5 - 128) = v18;
  *(_QWORD *)(v5 - 120) = v17;
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  v19 = qword_1ED3C6D18;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476B60);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v4, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = sub_1BA68660C();
  v24 = *(_QWORD *)(v5 - 136);
  sub_1BA6EE974(v5 - 128, v5 - 112, v4, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 72), (uint64_t)&type metadata for FormatSelector, v23);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v24)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 144) + 8))(v13, *(_QWORD *)(v5 - 72));
  v26 = *(_QWORD *)(v5 - 168) + *(int *)(v2 + 36);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v27 = *(_QWORD *)(v5 - 152);
  v22(v27, v21, v20);
  swift_storeEnumTagMultiPayload();
  v28 = *(_QWORD *)(v5 - 72);
  sub_1BA6EE974(v26, v5 - 112, v27, (uint64_t)sub_1BA90CF04, 0, v28, *(_QWORD *)(v5 - 160), *(_QWORD *)(*(_QWORD *)(v5 - 176) + 16));
  sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 144) + 8))(v13, v28);
}

uint64_t sub_1BA5E4060()
{
  sub_1BA5E4108();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5E40AC()
{
  sub_1BA5E4108();
  return sub_1BB872D60();
}

unint64_t sub_1BA5E4108()
{
  unint64_t result;

  result = qword_1ED3C7440;
  if (!qword_1ED3C7440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8C88, &_s10CodingTypeON_101);
    atomic_store(result, (unint64_t *)&qword_1ED3C7440);
  }
  return result;
}

void sub_1BA5E414C(_QWORD *a1)
{
  FormatAccessibilityProperty.encode(to:)(a1);
}

void FormatAccessibilityProperty.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  _QWORD v25[8];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v25[4] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v25[3] = (char *)v25 - v7;
  MEMORY[0x1E0C80A78](v8);
  v25[2] = (char *)v25 - v9;
  MEMORY[0x1E0C80A78](v10);
  v25[1] = (char *)v25 - v11;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v2;
  v19 = *((unsigned __int8 *)v2 + 8);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BA6B8518();
  v25[7] = v17;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAccessibilityProperty, v23, v20, (uint64_t)&type metadata for FormatAccessibilityProperty, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v17, v22, (uint64_t)&off_1E734BD80);
  if (v19)
    v24 = 4;
  else
    v24 = 0;
  __asm { BR              X10 }
}

unint64_t sub_1BA5E433C()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = qword_1ED3C2478;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v3 - 72);
  sub_1BA5E47DC(0, v1, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA72E4D0(v1, v2);
}

uint64_t sub_1BA5E47DC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6DD8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E4940();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5E4984();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E4940()
{
  unint64_t result;

  result = qword_1ED3A7ED0;
  if (!qword_1ED3A7ED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B50A0, &_s10CodingTypeON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3A7ED0);
  }
  return result;
}

unint64_t sub_1BA5E4984()
{
  unint64_t result;

  result = qword_1ED3B7DE8;
  if (!qword_1ED3B7DE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityContent, &type metadata for FormatAccessibilityContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7DE8);
  }
  return result;
}

uint64_t sub_1BA5E49C8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6DD8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E4940();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B3480, (uint64_t (*)(void))sub_1BAE7D638, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF6DE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5E4B54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5E4B88();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5E4B88()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void sub_1BA5E4BD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatSwitchValue.DefaultValue.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void FormatSwitchValue.DefaultValue.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];

  v13[14] = a3;
  v13[15] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[8] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[12] = (char *)v13 - v6;
  v13[13] = v5;
  v13[9] = v7;
  v9 = _s10CodingKeysOMa_36(255, v7, v5, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8C5770, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8C5720, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8C56F8, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[6] = v12;
  v13[7] = v11;
  v13[18] = v11;
  v13[19] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t _s10CodingKeysOMa_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_36);
}

uint64_t sub_1BA5E501C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextSize.init(from:)(a1, a2);
}

uint64_t FormatTextSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[10];

  v19[9] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  v11 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA5E558C();
    v19[2] = 0;
    v19[3] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v12 = sub_1BB8740EC();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    v15 = *v14;
    if (*v14 >= 4)
      break;
    v14 += 2;
    if (!--v13)
      goto LABEL_7;
  }
  v16 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v17 = v16;
  *(_QWORD *)(v17 + 8) = v15;
  *(_QWORD *)(v17 + 16) = &unk_1E726FAD8;
  *(_OWORD *)(v17 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v16, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA5E52E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  JUMPOUT(0x1BA5E5204);
}

void sub_1BA5E5300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4CDF6C(0, &qword_1ED3D2AF0, (uint64_t (*)(void))sub_1BAEE4E14, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
  *(_OWORD *)(v4 - 144) = xmmword_1BB87FC90;
  sub_1BB433AD4();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 128);
    v6 = *(_QWORD *)(v4 - 120);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    JUMPOUT(0x1BA5E5204);
  }
  JUMPOUT(0x1BA5E52A8);
}

void sub_1BA5E5398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  JUMPOUT(0x1BA5E5204);
}

void sub_1BA5E53B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BB433A5C();
  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BA5E55D0();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BA5E5204);
  }
  JUMPOUT(0x1BA5E52A8);
}

void sub_1BA5E5430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BB433A5C();
  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BA5E55D0();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BA5E5204);
  }
  JUMPOUT(0x1BA5E52A8);
}

void sub_1BA5E54A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BA650B5C();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BA5E5204);
  }
  JUMPOUT(0x1BA5E52A8);
}

void sub_1BA5E551C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BA650B5C();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BA5E5204);
  }
  JUMPOUT(0x1BA5E52A8);
}

unint64_t sub_1BA5E558C()
{
  unint64_t result;

  result = qword_1ED3B4250;
  if (!qword_1ED3B4250)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB917824, &type metadata for FormatTextSize.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B4250);
  }
  return result;
}

unint64_t sub_1BA5E55D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9598;
  if (!qword_1ED3B9598)
  {
    sub_1BB433A5C();
    v2 = v1;
    v3 = sub_1BA825C2C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9598);
  }
  return result;
}

uint64_t sub_1BA5E5630(_QWORD *a1)
{
  return FormatAccessibilityContent.encode(to:)(a1);
}

uint64_t FormatAccessibilityContent.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[56];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v35[-v7 - 8];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v35[-v10 - 8];
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAccessibilityContent, v19, v16, (uint64_t)&type metadata for FormatAccessibilityContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  if (!(v15 >> 62))
  {
    sub_1BAE79BFC(v15 + 16, (uint64_t)v35);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v27 = sub_1BB86EB84();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C20);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v11, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E5A04(0, (uint64_t)v35, (uint64_t)v11);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  if (v15 >> 62 != 1)
  {
    v29 = *(_QWORD *)(v15 + 16);
    v30 = *(_QWORD *)(v15 + 24);
    v31 = qword_1ED3C2478;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = sub_1BB86EB84();
    v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v5, v33, v32);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E5BB8(2, v29, v30, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v20 = *(_QWORD *)(v15 + 16);
  v21 = *(_QWORD *)(v15 + 24);
  v22 = *(_QWORD *)(v15 + 32);
  v23 = qword_1ED3C2478;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v23 != -1)
    swift_once();
  v24 = sub_1BB86EB84();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v25, v24);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA5E5D44(1, v20, v21, v22, (uint64_t)v8);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA5E5A04(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BAE79BFC(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6F34;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E5B74();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA634D18();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E5B74()
{
  unint64_t result;

  result = qword_1ED3A7B10;
  if (!qword_1ED3A7B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4F48, &_s10CodingTypeON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B10);
  }
  return result;
}

uint64_t sub_1BA5E5BB8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF6F34;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E5B74();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5E5D44(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF6F34;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E5B74();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA55B8C4(0, &qword_1ED3B5538, (uint64_t (*)(void))sub_1BA825800, (uint64_t)&type metadata for FormatAccessibilityContent, (uint64_t)&type metadata for FormatAccessibilityData);
    sub_1BA5E5ED4();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E5ED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B4A0;
  if (!qword_1ED39B4A0)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5538, (uint64_t (*)(void))sub_1BA825800, (uint64_t)&type metadata for FormatAccessibilityContent, (uint64_t)&type metadata for FormatAccessibilityData);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B4A0);
  }
  return result;
}

uint64_t sub_1BA5E5F3C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatLocalizationString.init(from:)(a1, a2);
}

uint64_t FormatLocalizationString.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;

  v45 = a2;
  sub_1BAEFBAC0(0, (unint64_t *)&unk_1ED3B07C0, (void (*)(void))sub_1BA826C64, (void (*)(void))sub_1BA826CA8);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v38 - v4;
  sub_1BAEA1910();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA1988();
  sub_1BA4A2870(&qword_1ED3D1150, (uint64_t (*)(uint64_t))sub_1BAEA1988, (uint64_t)&unk_1BB8FFC6C);
  v11 = v46;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  v41 = v5;
  v42 = v8;
  v13 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v7;
  v17 = v44;
  v16 = v45;
  v18 = v43;
  if ((v13 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v25 = v15;
      v26 = *((_QWORD *)v21 - 2);
      v27 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v28);
      *((_QWORD *)&v38 - 4) = &_s10CodingKeysON_99;
      *((_QWORD *)&v38 - 3) = sub_1BAEA1A08();
      *((_QWORD *)&v38 - 2) = sub_1BA5E63C8();
      *((_QWORD *)&v38 - 1) = sub_1BAEA1A4C();
      swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E726CC20);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v30 = v26;
      *(_QWORD *)(v30 + 8) = v27;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v27, 1);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v25);
      a1 = v46;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v49 = 0uLL;
  v50 = 0;
  v40 = sub_1BB874098();
  v23 = v22;
  v49 = xmmword_1BB8A1A10;
  v50 = 0;
  v24 = sub_1BB87402C();
  v34 = v33;
  v39 = v24;
  v38 = xmmword_1BB8D2D60;
  v49 = xmmword_1BB8D2D60;
  v50 = 0;
  v35 = sub_1BB8740F8();
  v36 = v42;
  if ((v35 & 1) != 0)
  {
    v47 = v38;
    v48 = 0;
    sub_1BAEA1A90();
    sub_1BB8740D4();
    v37 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v41, v17);
    v36 = v42;
  }
  else
  {
    v37 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v15);
  *v16 = v40;
  v16[1] = v23;
  v16[2] = v39;
  v16[3] = v34;
  v16[4] = v37;
  v31 = (uint64_t)v46;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_1BA5E63C8()
{
  unint64_t result;

  result = qword_1ED3CACC8;
  if (!qword_1ED3CACC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9408, &_s10CodingKeysON_99);
    atomic_store(result, (unint64_t *)&qword_1ED3CACC8);
  }
  return result;
}

uint64_t sub_1BA5E640C(_QWORD *a1)
{
  return FormatAdMetricsNode.encode(to:)(a1);
}

uint64_t FormatAdMetricsNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  void (*v58)(void);
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  __int128 v83;
  char v84;
  __int128 v85;
  char v86;
  __int128 v87;
  char v88;
  char v89;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v73 - v8;
  MEMORY[0x1E0C80A78](v9);
  v76 = (uint64_t)&v73 - v10;
  MEMORY[0x1E0C80A78](v11);
  v77 = (char *)&v73 - v12;
  MEMORY[0x1E0C80A78](v13);
  v78 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v15);
  v79 = (char *)&v73 - v16;
  MEMORY[0x1E0C80A78](v17);
  v80 = (char *)&v73 - v18;
  MEMORY[0x1E0C80A78](v19);
  v81 = (void (*)(char *, uint64_t, uint64_t))((char *)&v73 - v20);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v73 - v22;
  sub_1BAE73344(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v29 = sub_1BAE73434();
  v30 = sub_1BA4A2870(&qword_1ED3D0D90, (uint64_t (*)(uint64_t))sub_1BAE73434, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v31, v27, v4, v29, (uint64_t)&type metadata for FormatVersions.Azden, v28, (uint64_t)v26, v30, (uint64_t)&off_1E734BC80);
  swift_beginAccess();
  v32 = v2[2];
  v33 = v2[3];
  v34 = v2;
  v35 = qword_1ED3C6D18;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476B60);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  v38(v23, v37, v36);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v82;
  sub_1BAD265E8(v32, v33, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE50044, (uint64_t (*)(uint64_t))sub_1BAE733BC, &qword_1ED3AE8E0);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v81;
    v38((char *)v81, v37, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1CC14(1, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    v43 = v34[4];
    v42 = v34[5];
    v73 = v34;
    v44 = v26;
    v45 = (uint64_t)v80;
    v38(v80, v37, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1CD68(v43, v42, 2, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    v46 = v45;
    v47 = v39;
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v48 = v73;
    v49 = v73[6];
    v50 = (uint64_t)v79;
    v38(v79, v37, v36);
    v82 = v47;
    swift_storeEnumTagMultiPayload();
    sub_1BA71CA6C(v49);
    v26 = v44;
    sub_1BAD1CEC0(v49, 3, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    v81 = v38;
    v80 = 0;
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v49);
    v51 = v48[7];
    v52 = qword_1ED3C6D50;
    swift_retain();
    if (v52 != -1)
      swift_once();
    v53 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476BF0);
    v54 = (uint64_t)v78;
    v81(v78, v53, v36);
    swift_storeEnumTagMultiPayload();
    v55 = v80;
    sub_1BAD615AC(v51, 4, 0, 0, v54, (uint64_t)sub_1BA90CF04, 0);
    if (v55)
    {
      sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
      swift_release();
    }
    else
    {
      v56 = v48;
      sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
      swift_release();
      swift_beginAccess();
      v57 = (uint64_t)v77;
      v58 = (void (*)(void))v81;
      v81(v77, v37, v36);
      swift_storeEnumTagMultiPayload();
      v59 = swift_bridgeObjectRetain();
      sub_1BAD2AB70(v59, 5, 0, 0);
      sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v61 = v56[9];
      v62 = v76;
      v58();
      swift_storeEnumTagMultiPayload();
      if (v61)
      {
        v63 = sub_1BAE50044(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
        v64 = (uint64_t)v75;
        if ((v63 & 1) != 0)
        {
          v87 = xmmword_1BB8D2DA0;
          v88 = 0;
          *(_QWORD *)&v85 = v61;
          sub_1BAE733BC();
          sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
          sub_1BB874464();
        }
      }
      else
      {
        v64 = (uint64_t)v75;
      }
      sub_1BA4A2E80(v76, type metadata accessor for FormatVersionRequirement);
      v65 = v73;
      swift_beginAccess();
      v66 = v65[10];
      sub_1BA67D3F4(v66);
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v67 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C08);
      v81((char *)v64, v67, v36);
      swift_storeEnumTagMultiPayload();
      if (v66 != 0x8000000000000000)
      {
        v72 = sub_1BAE50044(v64, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0);
        if ((v72 & 1) != 0)
        {
          v85 = xmmword_1BB8D2DB0;
          v86 = 0;
          *(_QWORD *)&v83 = v66;
          sub_1BAE733BC();
          sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
          sub_1BA84B088();
          sub_1BB874464();
        }
      }
      sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
      sub_1BA6EEDB4(v66);
      v68 = v73;
      swift_beginAccess();
      v69 = *((_BYTE *)v68 + 88);
      if (qword_1ED3C6D70 != -1)
        swift_once();
      v70 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C50);
      v71 = (uint64_t)v74;
      v81(v74, v70, v36);
      swift_storeEnumTagMultiPayload();
      if ((v69 & 1) == 0 && (sub_1BAE50044(v71, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v83 = xmmword_1BB8D2DD0;
        v84 = 0;
        v89 = 0;
        sub_1BAE733BC();
        sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BAE73344);
}

unint64_t sub_1BA5E6F20()
{
  unint64_t result;

  result = qword_1ED39BA48;
  if (!qword_1ED39BA48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeContent, &type metadata for FormatAdMetricsNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED39BA48);
  }
  return result;
}

uint64_t sub_1BA5E6F64(_QWORD *a1)
{
  return FormatCornerRadius.encode(to:)(a1);
}

uint64_t FormatCornerRadius.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(double *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v14 = *(char *)(v1 + 16);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCornerRadius, v18, v15, (uint64_t)&type metadata for FormatCornerRadius, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v11, v17, (uint64_t)&off_1E734BD80);
  if (v14 < 0)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v22 = sub_1BB86EB84();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v5, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E740C(1, LOBYTE(v13) & 1, (uint64_t)v5);
    v21 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v19 = sub_1BB86EB84();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v8, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E7218(0, v12, v14 & 1, (uint64_t)v8, v13);
    v21 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5E7218(char a1, uint64_t a2, char a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  double v18;
  uint64_t v19;
  char v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a5;
  v19 = a2;
  v20 = a3;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF41F8;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E7384();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5E73C8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E7384()
{
  unint64_t result;

  result = qword_1ED3A60A8;
  if (!qword_1ED3A60A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B81D8, &_s10CodingTypeON_108);
    atomic_store(result, (unint64_t *)&qword_1ED3A60A8);
  }
  return result;
}

unint64_t sub_1BA5E73C8()
{
  unint64_t result;

  result = qword_1ED39B4B0;
  if (!qword_1ED39B4B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.Value, &type metadata for FormatCornerRadius.Value);
    atomic_store(result, (unint64_t *)&qword_1ED39B4B0);
  }
  return result;
}

uint64_t sub_1BA5E740C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF41F8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E7384();
    v15 = 0uLL;
    sub_1BB874464();
    if ((v16 & 1) == 0)
    {
      v15 = xmmword_1BB87FC90;
      sub_1BA5E7578();
      sub_1BB874464();
    }
  }
  return swift_release();
}

unint64_t sub_1BA5E7578()
{
  unint64_t result;

  result = qword_1ED39FCF0;
  if (!qword_1ED39FCF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCornerRadius.RoundedValue, &type metadata for FormatCornerRadius.RoundedValue);
    atomic_store(result, (unint64_t *)&qword_1ED39FCF0);
  }
  return result;
}

uint64_t sub_1BA5E75BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColor.init(from:)(a1, a2);
}

uint64_t sub_1BA5E75D0(_QWORD *a1)
{
  return FormatFontWeight.encode(to:)(a1);
}

uint64_t FormatFontWeight.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[9];
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v29[8] = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v29[7] = (char *)v29 - v6;
  MEMORY[0x1E0C80A78](v7);
  v29[6] = (char *)v29 - v8;
  MEMORY[0x1E0C80A78](v9);
  v29[5] = (char *)v29 - v10;
  MEMORY[0x1E0C80A78](v11);
  v29[4] = (char *)v29 - v12;
  MEMORY[0x1E0C80A78](v13);
  v29[3] = (char *)v29 - v14;
  MEMORY[0x1E0C80A78](v15);
  v29[2] = (char *)v29 - v16;
  MEMORY[0x1E0C80A78](v17);
  v29[1] = (char *)v29 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v29 - v21;
  v30 = *v1;
  v31 = a1;
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v27 = v32;
  sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BA90CF04, 0, v23, v24);
  if (!v27)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA5E7DEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProperty.init(from:)(a1, a2);
}

uint64_t FormatProperty.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;

  v15[0] = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B9C00, (uint64_t (*)(void))sub_1BA5E8068, (uint64_t)&type metadata for FormatProperty.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5E8068();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = (uint64_t *)v15[0];
  v17 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v16 = 1;
  sub_1BA5E8024();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v15[1];
  swift_bridgeObjectRetain();
  sub_1BA5E7FF4(v13);
  swift_bridgeObjectRelease();
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BA5E800C(v13);
}

uint64_t sub_1BA5E7FF4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_1BA5E800C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1BA5E8024()
{
  unint64_t result;

  result = qword_1ED3B5E58[0];
  if (!qword_1ED3B5E58[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPropertyValue, &type metadata for FormatPropertyValue);
    atomic_store(result, qword_1ED3B5E58);
  }
  return result;
}

unint64_t sub_1BA5E8068()
{
  unint64_t result;

  result = qword_1ED3B4168;
  if (!qword_1ED3B4168)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB883B60, &type metadata for FormatProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B4168);
  }
  return result;
}

uint64_t sub_1BA5E80AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAsyncImageContent.init(from:)(a1, a2);
}

uint64_t FormatAsyncImageContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];
  __int128 v21;
  __int128 v22;
  _QWORD *v24;

  v20[5] = a2;
  v3 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  *(_QWORD *)&v21 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v8 = v24;
  sub_1BB87468C();
  v9 = v8;
  if (v8)
    goto LABEL_10;
  v20[2] = v3;
  v10 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v21;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA5E893C();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726A6D8;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  a1 = v24;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5E893C()
{
  unint64_t result;

  result = qword_1ED3CA370;
  if (!qword_1ED3CA370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDED0, &_s10CodingTypeON_127);
    atomic_store(result, (unint64_t *)&qword_1ED3CA370);
  }
  return result;
}

unint64_t sub_1BA5E8980()
{
  unint64_t result;

  result = qword_1ED3B6AC8;
  if (!qword_1ED3B6AC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeBinding, &type metadata for FormatImageNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B6AC8);
  }
  return result;
}

unint64_t sub_1BA5E89C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5520;
  if (!qword_1ED3B5520)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5528, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t)&type metadata for FormatImage);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5520);
  }
  return result;
}

unint64_t sub_1BA5E8A2C()
{
  unint64_t result;

  result = qword_1ED3B4A50;
  if (!qword_1ED3B4A50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStyleImage, &type metadata for FormatStyleImage);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A50);
  }
  return result;
}

unint64_t sub_1BA5E8A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B50D8;
  if (!qword_1ED3B50D8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50E0, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B50D8);
  }
  return result;
}

unint64_t sub_1BA5E8AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A66D0;
  if (!qword_1ED3A66D0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A66D8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A66D0);
  }
  return result;
}

void sub_1BA5E8B40(_QWORD *a1)
{
  FormatBindingExpression.encode(to:)(a1);
}

void FormatBindingExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[6];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26[5] = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v26[4] = (char *)v26 - v6;
  MEMORY[0x1E0C80A78](v7);
  v26[3] = (char *)v26 - v8;
  MEMORY[0x1E0C80A78](v9);
  v26[2] = (char *)v26 - v10;
  MEMORY[0x1E0C80A78](v11);
  v26[1] = (char *)v26 - v12;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v26[0] = (char *)v26 - v15;
  MEMORY[0x1E0C80A78](v16);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *(_QWORD *)(v1 + 8);
  v37 = *(_QWORD *)(v1 + 16);
  v38 = *(_QWORD *)(v1 + 24);
  v33 = *(_QWORD *)(v1 + 32);
  v34 = *(_QWORD *)(v1 + 40);
  v35 = *(_QWORD *)(v1 + 48);
  v36 = *(_QWORD *)(v1 + 56);
  v32 = *(_QWORD *)(v1 + 64);
  v31 = *(_QWORD *)(v1 + 72);
  v30 = *(_QWORD *)(v1 + 80);
  v29 = *(_QWORD *)(v1 + 88);
  v28 = *(_QWORD *)(v1 + 96);
  v20 = *(unsigned __int8 *)(v1 + 106);
  v21 = *(unsigned __int16 *)(v1 + 104);
  v27 = v21 | (v20 << 16);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = sub_1BA6B8518();
  v40 = v19;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingExpression, v25, v22, (uint64_t)&type metadata for FormatBindingExpression, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v19, v24, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

unint64_t sub_1BA5E8E04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  *(_QWORD *)(v2 - 248) = v1;
  v4 = *(_QWORD *)(v2 - 272);
  v5 = *(_QWORD *)(v2 - 288);
  *(_QWORD *)(v2 - 240) = v4;
  *(_QWORD *)(v2 - 232) = v5;
  v6 = *(_QWORD *)(v2 - 280);
  v7 = *(_QWORD *)(v2 - 320);
  *(_QWORD *)(v2 - 224) = v6;
  *(_QWORD *)(v2 - 216) = v7;
  v8 = *(_QWORD *)(v2 - 312);
  *(_BYTE *)(v2 - 208) = v8;
  *(_BYTE *)(v2 - 207) = BYTE1(v8) & 1;
  sub_1BA7147C0(v3, v4, v5, v6, v7, v8);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v9 = sub_1BB86EB84();
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v0, v10, v9);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(v2 - 72);
  sub_1BA5E99C8(0, (__int128 *)(v2 - 248), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA752A0C(v3, v4, v5, v6, v7, v8, *(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 296), *(_QWORD *)(v2 - 328), *(_QWORD *)(v2 - 336), *(_QWORD *)(v2 - 344), *(_QWORD *)(v2 - 352), *(_QWORD *)(v2 - 360), *(_DWORD *)(v2 - 364));
}

uint64_t sub_1BA5E960C(char a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  char v20;

  v20 = a1;
  v17 = a2;
  v18 = a3;
  v19 = BYTE2(a3) & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5BBC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5E97C0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E977C()
{
  unint64_t result;

  result = qword_1ED3A70C0;
  if (!qword_1ED3A70C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6390, &_s10CodingTypeON_122);
    atomic_store(result, (unint64_t *)&qword_1ED3A70C0);
  }
  return result;
}

unint64_t sub_1BA5E97C0()
{
  unint64_t result;

  result = qword_1ED39BA80;
  if (!qword_1ED39BA80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingBoolExpression, &type metadata for FormatBindingBoolExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BA80);
  }
  return result;
}

uint64_t sub_1BA5E9804(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[27];
  char v25;

  v25 = a1;
  v7 = a2[5];
  v23 = a2[4];
  *(_OWORD *)v24 = v7;
  *(_OWORD *)&v24[11] = *(__int128 *)((char *)a2 + 91);
  v8 = a2[1];
  v19 = *a2;
  v20 = v8;
  v9 = a2[3];
  v21 = a2[2];
  v22 = v9;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF5BBC;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5E9984();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E9984()
{
  unint64_t result;

  result = qword_1ED39BA88;
  if (!qword_1ED39BA88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpression, &type metadata for FormatBindingTextExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BA88);
  }
  return result;
}

uint64_t sub_1BA5E99C8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  _BYTE v18[26];
  char v19;

  v19 = a1;
  v7 = a2[1];
  v17 = *a2;
  *(_OWORD *)v18 = v7;
  *(_OWORD *)&v18[10] = *(__int128 *)((char *)a2 + 26);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5BBC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5E9B38();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E9B38()
{
  unint64_t result;

  result = qword_1ED39BB48;
  if (!qword_1ED39BB48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpression, &type metadata for FormatBindingImageExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BB48);
  }
  return result;
}

uint64_t sub_1BA5E9B7C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF5BBC;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5E9CF0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5E9CF0()
{
  unint64_t result;

  result = qword_1ED3A7B40;
  if (!qword_1ED3A7B40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingURLExpression, &type metadata for FormatBindingURLExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B40);
  }
  return result;
}

uint64_t sub_1BA5E9D34(_QWORD *a1)
{
  return FormatBindingBoolExpression.encode(to:)(a1);
}

uint64_t FormatBindingBoolExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  __int128 v25;
  char v26;
  int v27;
  char v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v24[0] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v24 - v6;
  sub_1BAE839E4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v1;
  v12 = *(_WORD *)(v1 + 8);
  v27 = *(unsigned __int8 *)(v1 + 10);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE838DC();
  v16 = sub_1BA4A2870(&qword_1ED3D1290, (uint64_t (*)(uint64_t))sub_1BAE838DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingBoolExpression, v17, v13, (uint64_t)&type metadata for FormatBindingBoolExpression, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v24[1];
  sub_1BAD0F350(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  if (!v21)
  {
    v22 = v24[0];
    v20((char *)v24[0], v19, v18);
    swift_storeEnumTagMultiPayload();
    if ((v27 & 1) == 0 && (sub_1BAE43E2C(v22, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v25 = xmmword_1BB8A1A10;
      v26 = 0;
      v28 = 0;
      sub_1BAE83A5C();
      sub_1BA4A2870(&qword_1ED3AEF00, (uint64_t (*)(uint64_t))sub_1BAE83A5C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE839E4);
}

unint64_t sub_1BA5EA054()
{
  unint64_t result;

  result = qword_1ED39B3B8;
  if (!qword_1ED39B3B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolBinding, &type metadata for FormatBoolBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39B3B8);
  }
  return result;
}

uint64_t sub_1BA5EA098@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDimensionSizingValue.init(from:)(a1, a2);
}

uint64_t FormatDimensionSizingValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v22 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA5EA6A4();
    v21 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v16;
  *(_QWORD *)(v19 + 16) = &unk_1E7269420;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
LABEL_9:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA5EA3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA655028(0);
  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v3);
    v6 = *(_QWORD *)(v5 - 112);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v4 = v7 | 0x2000000000000000;
    JUMPOUT(0x1BA5EA254);
  }
  JUMPOUT(0x1BA5EA220);
}

void sub_1BA5EA438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA50CAA8(0, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BAE7CD60();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v3);
    v6 = *(_QWORD *)(v5 - 112);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v4 = v7 | 0x4000000000000000;
    JUMPOUT(0x1BA5EA254);
  }
  JUMPOUT(0x1BA5EA220);
}

void sub_1BA5EA4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  *v3 = 0xC000000000000000;
  JUMPOUT(0x1BA5EA254);
}

void sub_1BA5EA4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  *v3 = 0xC000000000000008;
  JUMPOUT(0x1BA5EA254);
}

void sub_1BA5EA504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  *v3 = 0xC000000000000010;
  JUMPOUT(0x1BA5EA254);
}

void sub_1BA5EA524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BA5A79D0();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v3);
    v6 = *(_QWORD *)(v5 - 112);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v4 = v7 | 0x6000000000000000;
    JUMPOUT(0x1BA5EA254);
  }
  JUMPOUT(0x1BA5EA220);
}

void sub_1BA5EA594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BA655308();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v3);
    v6 = *(_QWORD *)(v5 - 112);
    v7 = *(_BYTE *)(v5 - 104);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_BYTE *)(v8 + 24) = v7;
    *v4 = v8 | 0x8000000000000000;
    JUMPOUT(0x1BA5EA254);
  }
  JUMPOUT(0x1BA5EA220);
}

void sub_1BA5EA60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA655028(0);
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 112);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BA5EA69CLL);
  }
  JUMPOUT(0x1BA5EA220);
}

unint64_t sub_1BA5EA6A4()
{
  unint64_t result;

  result = qword_1ED3CB8F0;
  if (!qword_1ED3CB8F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEE50, &_s10CodingTypeON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3CB8F0);
  }
  return result;
}

void sub_1BA5EA6E8(_QWORD *a1)
{
  FormatFont.encode(to:)(a1);
}

void FormatFont.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[28];

  v2 = v1;
  v4 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v4);
  v20[2] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v6);
  v20[1] = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = sub_1BA6B8518();
  v20[27] = v14;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFont, v19, v17, (uint64_t)&type metadata for FormatFont, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA5EA8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v2 - 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 - 208) = v3;
  *(_WORD *)(v2 - 192) = *(_WORD *)(v0 + 80);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 - 256) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 - 240) = v4;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 72);
  sub_1BA5EACD8(0, (__int128 *)(v2 - 256), v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5EACD8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int16 v22;
  char v23;

  v23 = a1;
  v7 = a2[3];
  v20 = a2[2];
  v21 = v7;
  v22 = *((_WORD *)a2 + 32);
  v8 = a2[1];
  v18 = *a2;
  v19 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFAE58;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5EAE50();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5EAE94();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5EAE50()
{
  unint64_t result;

  result = qword_1ED3A5300;
  if (!qword_1ED3A5300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0F48, &_s10CodingTypeON_172);
    atomic_store(result, (unint64_t *)&qword_1ED3A5300);
  }
  return result;
}

unint64_t sub_1BA5EAE94()
{
  unint64_t result;

  result = qword_1ED39B388;
  if (!qword_1ED39B388)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemFont, &type metadata for FormatSystemFont);
    atomic_store(result, (unint64_t *)&qword_1ED39B388);
  }
  return result;
}

uint64_t sub_1BA5EAED8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_WORD *)a2 + 16);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFAE58;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5EAE50();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5EB048();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5EB048()
{
  unint64_t result;

  result = qword_1ED39B320;
  if (!qword_1ED39B320)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomFont, &type metadata for FormatCustomFont);
    atomic_store(result, (unint64_t *)&qword_1ED39B320);
  }
  return result;
}

uint64_t sub_1BA5EB08C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  a1[4] = sub_1BA5EB0DC();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA5EB0DC()
{
  unint64_t result;

  result = qword_1ED3A2B10;
  if (!qword_1ED3A2B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905370, &type metadata for TraversalOnlyEncoder.UnkeyedContainer);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B10);
  }
  return result;
}

uint64_t sub_1BA5EB120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return FeedGroupKnobsRules.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t FeedGroupKnobsRules.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[31];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v26[30] = a5;
  v6 = type metadata accessor for FeedGroupKnobsRules.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB899278, v6);
  v27 = sub_1BB874104();
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v8 = *(_QWORD *)(a1 + 24);
  v41 = a1;
  v9 = (_QWORD *)a1;
  v11 = (char *)v26 - v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  v12 = v28;
  sub_1BB87468C();
  if (!v12)
  {
    v28 = v7;
    sub_1BA5ECCB8();
    LOBYTE(v29) = 0;
    sub_1BA4A2870(&qword_1ED3C5E40, (uint64_t (*)(uint64_t))sub_1BA5ECCB8, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
    sub_1BB874068();
    v13 = v11;
    v14 = v40;
    LOBYTE(v29) = 1;
    v26[29] = v13;
    sub_1BB874068();
    v26[28] = v14;
    v15 = v39;
    LOBYTE(v29) = 2;
    sub_1BB874068();
    v16 = v38;
    sub_1BA5ECE7C();
    LOBYTE(v29) = 3;
    sub_1BA4A2870(&qword_1ED3C5938, (uint64_t (*)(uint64_t))sub_1BA5ECE7C, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
    sub_1BB874068();
    v26[26] = v16;
    v26[27] = v37;
    v17 = sub_1BA5ECC44();
    LOBYTE(v29) = 4;
    v18 = sub_1BA4A2870(&qword_1ED3C5E50, (uint64_t (*)(uint64_t))sub_1BA5ECC44, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
    sub_1BB874068();
    v26[25] = v15;
    v20 = v36;
    LOBYTE(v29) = 5;
    sub_1BB874068();
    v26[24] = v35;
    LOBYTE(v29) = 6;
    sub_1BB874068();
    v26[22] = v18;
    v26[23] = v17;
    v21 = v34;
    sub_1BA5ECDAC();
    LOBYTE(v29) = 7;
    sub_1BA4A2870(&qword_1ED3C5C70, (uint64_t (*)(uint64_t))sub_1BA5ECDAC, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleList<A>);
    sub_1BB874068();
    v26[19] = v20;
    v26[20] = v21;
    v26[21] = v33;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v24 = swift_getAssociatedConformanceWitness();
    v25 = swift_getAssociatedConformanceWitness();
    v29 = AssociatedTypeWitness;
    v30 = AssociatedConformanceWitness;
    v31 = v24;
    v32 = v25;
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  return __swift_destroy_boxed_opaque_existential_1(v41);
}

void sub_1BA5EB75C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_BYTE *)(v4 - 192) = 8;
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>, a1);
  sub_1BB874068();
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 256) + 8))(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 248));
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    JUMPOUT(0x1BA5EB464);
  }
  v5 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 144) = v3[8];
  *(_BYTE *)(v4 - 200) = 9;
  sub_1BB874068();
  *(_QWORD *)(v1 + 136) = v3[4];
  *(_BYTE *)(v4 - 208) = 10;
  sub_1BB874068();
  *(_QWORD *)(v1 + 128) = v3[3];
  *(_BYTE *)(v4 - 216) = 11;
  sub_1BB874068();
  *(_QWORD *)(v1 + 120) = v3[2];
  *(_BYTE *)(v4 - 224) = 12;
  sub_1BB874068();
  *(_QWORD *)(v1 + 112) = v3[1];
  *(_BYTE *)(v4 - 232) = 13;
  sub_1BB874068();
  *(_QWORD *)(v1 + 104) = *v3;
  *(_BYTE *)(v4 - 240) = 14;
  sub_1BB874068();
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v4 - 232);
  *(_BYTE *)(v4 - 248) = 15;
  sub_1BB874068();
  *(_QWORD *)(v1 + 184) = *(_QWORD *)(v4 - 240);
  *(_BYTE *)(v4 - 256) = 16;
  sub_1BB874068();
  *(_QWORD *)(v1 + 176) = *(_QWORD *)(v4 - 248);
  *(_BYTE *)(v1 + 360) = 17;
  sub_1BB874068();
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(v4 - 256);
  *(_BYTE *)(v1 + 352) = 18;
  sub_1BB874068();
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(v1 + 360);
  *(_BYTE *)(v1 + 344) = 19;
  sub_1BB874068();
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(v1 + 352);
  sub_1BA5ED070();
  *(_BYTE *)(v1 + 336) = 20;
  sub_1BA4A2870(&qword_1ED3C5908, (uint64_t (*)(uint64_t))sub_1BA5ED070, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
  sub_1BB874068();
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(v1 + 344);
  *(_BYTE *)(v1 + 328) = 21;
  sub_1BB874068();
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v1 + 336);
  sub_1BA5ECEF0();
  *(_BYTE *)(v1 + 320) = 22;
  sub_1BA4A2870(&qword_1ED3C5928, (uint64_t (*)(uint64_t))sub_1BA5ECEF0, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
  sub_1BB874068();
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v1 + 328);
  *(_BYTE *)(v1 + 312) = 23;
  sub_1BB874068();
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v1 + 320);
  sub_1BA5ECFF0();
  *(_BYTE *)(v1 + 304) = 24;
  sub_1BA4A2870(&qword_1ED3C40E0, (uint64_t (*)(uint64_t))sub_1BA5ECFF0, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
  sub_1BB874068();
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v1 + 312);
  *(_BYTE *)(v1 + 296) = 25;
  sub_1BB874068();
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v1 + 304);
  sub_1BA5ECD38();
  *(_BYTE *)(v1 + 288) = 26;
  sub_1BA4A2870(&qword_1ED3C5E30, (uint64_t (*)(uint64_t))sub_1BA5ECD38, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  sub_1BB874068();
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v1 + 296);
  *(_BYTE *)(v1 + 280) = 27;
  sub_1BB874068();
  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v1 + 288);
  sub_1BA5ECF70();
  *(_BYTE *)(v1 + 272) = 28;
  sub_1BA4A2870(&qword_1ED3C5918, (uint64_t (*)(uint64_t))sub_1BA5ECF70, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
  sub_1BB874068();
  v6 = *(_QWORD *)(v1 + 280);
  *(_BYTE *)(v1 + 271) = 29;
  sub_1BB874068();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 256) + 8))(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 248));
  v7 = *(_QWORD *)(v1 + 272);
  v8 = *(_QWORD **)(v1 + 240);
  v9 = *(_QWORD *)(v1 + 200);
  *v8 = *(_QWORD *)(v1 + 224);
  v8[1] = v9;
  v10 = *(_QWORD *)(v1 + 216);
  v8[2] = *(_QWORD *)(v1 + 208);
  v8[3] = v10;
  v11 = *(_QWORD *)(v1 + 192);
  v8[4] = *(_QWORD *)(v1 + 152);
  v8[5] = v11;
  v8[6] = *(_QWORD *)(v1 + 160);
  v8[7] = v5;
  v12 = *(_QWORD *)(v1 + 136);
  v8[8] = *(_QWORD *)(v1 + 144);
  v8[9] = v12;
  v13 = *(_QWORD *)(v1 + 120);
  v8[10] = *(_QWORD *)(v1 + 128);
  v8[11] = v13;
  v14 = *(_QWORD *)(v1 + 104);
  v8[12] = *(_QWORD *)(v1 + 112);
  v8[13] = v14;
  v15 = *(_QWORD *)(v1 + 184);
  v8[14] = *(_QWORD *)(v1 + 96);
  v8[15] = v15;
  v16 = *(_QWORD *)(v1 + 88);
  v8[16] = *(_QWORD *)(v1 + 176);
  v8[17] = v16;
  v17 = *(_QWORD *)(v1 + 72);
  v8[18] = *(_QWORD *)(v1 + 80);
  v8[19] = v17;
  v18 = *(_QWORD *)(v1 + 56);
  v8[20] = *(_QWORD *)(v1 + 64);
  v8[21] = v18;
  v19 = *(_QWORD *)(v1 + 40);
  v8[22] = *(_QWORD *)(v1 + 48);
  v8[23] = v19;
  v20 = *(_QWORD *)(v1 + 24);
  v8[24] = *(_QWORD *)(v1 + 32);
  v8[25] = v20;
  v21 = *(_QWORD *)(v1 + 8);
  v8[26] = *(_QWORD *)(v1 + 16);
  v8[27] = v21;
  v8[28] = v6;
  v8[29] = v7;
  JUMPOUT(0x1BA5EB468);
}

uint64_t sub_1BA5ECC44()
{
  uint64_t result;

  result = qword_1ED3C5E58;
  if (!qword_1ED3C5E58)
    type metadata accessor for FeedGroupKnobsRuleValue();
  return result;
}

uint64_t sub_1BA5ECCB8()
{
  uint64_t result;

  result = qword_1ED3C5E48;
  if (!qword_1ED3C5E48)
    type metadata accessor for FeedGroupKnobsRuleValue();
  return result;
}

void type metadata accessor for FeedGroupKnobsRuleSet()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA5ECD38()
{
  uint64_t result;

  result = qword_1ED3C5E38;
  if (!qword_1ED3C5E38)
    type metadata accessor for FeedGroupKnobsRuleValue();
  return result;
}

uint64_t sub_1BA5ECDAC()
{
  uint64_t result;

  result = qword_1ED3C5C78;
  if (!qword_1ED3C5C78)
  {
    sub_1BA5ED1D4();
    sub_1BA4A2870(&qword_1ED3AFE58, (uint64_t (*)(uint64_t))sub_1BA5ED1D4, (uint64_t)&protocol conformance descriptor for FeedGroupEmitterRuleEdition<A>);
    sub_1BA4A2870(&qword_1ED3AFE48, (uint64_t (*)(uint64_t))sub_1BA5ED1D4, (uint64_t)&protocol conformance descriptor for FeedGroupEmitterRuleEdition<A>);
    sub_1BA4A2870(&qword_1ED3AFE50, (uint64_t (*)(uint64_t))sub_1BA5ED1D4, (uint64_t)&protocol conformance descriptor for FeedGroupEmitterRuleEdition<A>);
    type metadata accessor for FeedGroupKnobsRuleList();
  }
  return result;
}

uint64_t sub_1BA5ECE7C()
{
  uint64_t result;

  result = qword_1ED3C5940;
  if (!qword_1ED3C5940)
    type metadata accessor for FeedGroupKnobsRuleSet();
  return result;
}

uint64_t sub_1BA5ECEF0()
{
  uint64_t result;

  result = qword_1ED3C5930;
  if (!qword_1ED3C5930)
  {
    sub_1BA5ED0FC();
    sub_1BA837B3C();
    sub_1BA837AF8();
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  return result;
}

uint64_t sub_1BA5ECF70()
{
  uint64_t result;

  result = qword_1ED3C5920;
  if (!qword_1ED3C5920)
  {
    sub_1BA837EF8();
    sub_1BA837FC4();
    sub_1BA837F80();
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  return result;
}

uint64_t sub_1BA5ECFF0()
{
  uint64_t result;

  result = qword_1ED3C40E8;
  if (!qword_1ED3C40E8)
  {
    sub_1BA5ED140();
    sub_1BA838BA4();
    sub_1BA838B60();
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  return result;
}

uint64_t sub_1BA5ED070()
{
  uint64_t result;

  result = qword_1ED3C5910;
  if (!qword_1ED3C5910)
  {
    sub_1BA5ED190();
    sub_1BA586B7C();
    sub_1BA586B38();
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupKnobsRules.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupKnobsRules.CodingKeys);
}

unint64_t sub_1BA5ED0FC()
{
  unint64_t result;

  result = qword_1ED3C63E8;
  if (!qword_1ED3C63E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTimeOfDay, &type metadata for FeedTimeOfDay);
    atomic_store(result, (unint64_t *)&qword_1ED3C63E8);
  }
  return result;
}

unint64_t sub_1BA5ED140()
{
  unint64_t result;

  result = qword_1ED3C4128;
  if (!qword_1ED3C4128)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedMode, &type metadata for FeedMode);
    atomic_store(result, (unint64_t *)&qword_1ED3C4128);
  }
  return result;
}

void type metadata accessor for FeedGroupKnobsRuleValue()
{
  JUMPOUT(0x1BCCE5A70);
}

unint64_t sub_1BA5ED190()
{
  unint64_t result;

  result = qword_1ED3B0DD0;
  if (!qword_1ED3B0DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDaysOfWeek, &type metadata for FeedDaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_1ED3B0DD0);
  }
  return result;
}

uint64_t sub_1BA5ED1D4()
{
  uint64_t result;

  result = qword_1ED3AFE60;
  if (!qword_1ED3AFE60)
    type metadata accessor for FeedGroupEmitterRuleEdition();
  return result;
}

unint64_t sub_1BA5ED248()
{
  unint64_t result;

  result = qword_1ED3B0760;
  if (!qword_1ED3B0760)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF050], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED3B0760);
  }
  return result;
}

unint64_t sub_1BA5ED28C()
{
  unint64_t result;

  result = qword_1ED3AFF48;
  if (!qword_1ED3AFF48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemColor, &type metadata for FormatSystemColor);
    atomic_store(result, (unint64_t *)&qword_1ED3AFF48);
  }
  return result;
}

uint64_t sub_1BA5ED2D0@<X0>(uint64_t *a1@<X8>)
{
  return FormatLayout.fastDecode(decoder:)(a1);
}

uint64_t FormatLayout.fastDecode(decoder:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  result = sub_1BB86D8C4();
  if (!v1)
  {
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = v7;
    sub_1BB86D8E8();
    sub_1BB86D8D0();
    sub_1BB86D8E8();
    sub_1BB86D8E8();
    v12 = sub_1BB86D8DC();
    v14 = sub_1BB86D8DC();
    sub_1BA5ED4F0();
    sub_1BB86D8D0();
    v13 = type metadata accessor for FormatLayoutAttributes();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v8;
    *(_QWORD *)(result + 24) = v9;
    *(_QWORD *)(result + 32) = v10;
    *(_QWORD *)(result + 40) = v11;
    *(_QWORD *)(result + 48) = v21;
    *(_QWORD *)(result + 56) = v22;
    *(_QWORD *)(result + 64) = v19;
    *(_QWORD *)(result + 72) = v20;
    *(_QWORD *)(result + 80) = v17;
    *(_QWORD *)(result + 88) = v18;
    *(_QWORD *)(result + 96) = v15;
    *(_QWORD *)(result + 104) = v16;
    *(_QWORD *)(result + 112) = v12;
    *(_QWORD *)(result + 120) = v14;
    *(_BYTE *)(result + 128) = v23;
    a1[3] = v13;
    *a1 = result;
  }
  return result;
}

unint64_t sub_1BA5ED4F0()
{
  unint64_t result;

  result = qword_1ED3B70F0;
  if (!qword_1ED3B70F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityRole, &type metadata for FormatAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1ED3B70F0);
  }
  return result;
}

uint64_t type metadata accessor for FormatLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BA5ED554(_QWORD *a1)
{
  return FormatSlotNode.encode(to:)(a1);
}

uint64_t FormatSlotNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  void (*v60)(uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  __int128 v68;
  char v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v62 = (uint64_t)v59 - v8;
  MEMORY[0x1E0C80A78](v9);
  v65 = (uint64_t)v59 - v10;
  MEMORY[0x1E0C80A78](v11);
  v63 = (char *)v59 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v59 - v14;
  sub_1BAEBA90C(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v21 = sub_1BAEBA9FC();
  v22 = sub_1BA4A2870(&qword_1ED3D1580, (uint64_t (*)(uint64_t))sub_1BAEBA9FC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v23, v20, v4, v21, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v18, v22, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v24 = v2[2];
  v25 = v2[3];
  v64 = v2;
  v26 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v26 != -1)
    swift_once();
  v27 = sub_1BB86EB84();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C20);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v29(v15, v28, v27);
  v30 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v31 = v66;
  sub_1BAD21D64(v24, v25, 0, 0, 0, (uint64_t)v15, (uint64_t)sub_1BA90CF04, 0);
  v32 = v18;
  if (v31)
  {
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v59[1] = v30;
  v66 = 0;
  v60 = (void (*)(uint64_t, uint64_t, uint64_t))v29;
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v33 = v64;
  swift_beginAccess();
  v34 = *((unsigned __int8 *)v33 + 32);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v35 = v27;
  v36 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C08);
  v37 = (uint64_t)v63;
  v38 = v60;
  v60((uint64_t)v63, v36, v35);
  swift_storeEnumTagMultiPayload();
  v39 = v28;
  if (v34)
  {
    v40 = v66;
    v41 = sub_1BAE5617C(v37, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    if (v40)
    {
LABEL_9:
      sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
LABEL_16:
      v47 = (uint64_t)v32;
      return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BAEBA90C);
    }
    v66 = 0;
    if ((v41 & 1) != 0)
    {
      v72 = xmmword_1BB8A1A10;
      v73 = 0;
      LOBYTE(v70) = 1;
      sub_1BAEBA984();
      sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
      v42 = v66;
      sub_1BB874464();
      if (v42)
        goto LABEL_9;
      v66 = 0;
      v33 = v64;
    }
  }
  sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  v43 = v33[5];
  v44 = v65;
  v38(v65, v28, v35);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v45 = v66;
  v46 = sub_1BAE5617C(v44, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  if (v45)
  {
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    goto LABEL_15;
  }
  v49 = (uint64_t)v32;
  if ((v46 & 1) != 0)
  {
    v70 = xmmword_1BB8D2D60;
    v71 = 0;
    *(_QWORD *)&v68 = v43;
    sub_1BAEBA984();
    sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA653FC0();
    sub_1BB874464();
    v39 = v28;
  }
  sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v50 = v33[6];
  v51 = v62;
  v60(v62, v39, v35);
  swift_storeEnumTagMultiPayload();
  v52 = *(_QWORD *)(v50 + 16);
  swift_bridgeObjectRetain();
  if (v52 && (sub_1BAE5617C(v51, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
  {
    v68 = xmmword_1BB8D2D70;
    v69 = 0;
    v53 = swift_bridgeObjectRetain();
    v54 = sub_1BA67F4CC(v53);
    swift_bridgeObjectRelease();
    v67 = v54;
    swift_retain();
    sub_1BA67FABC((uint64_t *)&v67, sub_1BA67FB34, sub_1BA6801F8);
    swift_release();
    v66 = (uint64_t)v67;
    v74 = (uint64_t)v67;
    sub_1BAEBA984();
    v65 = v55;
    sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
    v56 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v56, MEMORY[0x1E0DEA970]);
    sub_1BB874464();
    swift_release();
    v39 = v28;
  }
  sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v57 = (uint64_t)v61;
  v60((uint64_t)v61, v39, v35);
  swift_storeEnumTagMultiPayload();
  v58 = swift_bridgeObjectRetain();
  sub_1BAD2D864(v58, 4, 0, 0);
  sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v47 = v49;
  return sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BAEBA90C);
}

uint64_t sub_1BA5EDDEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStyle.init(from:)(a1, a2);
}

uint64_t FormatStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  char v75;
  __int128 v76;
  char v77;

  v69 = a2;
  sub_1BA692844();
  v67 = v3;
  v64 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v66 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3BBE50, (void (*)(void))sub_1BA8374B4, (void (*)(void))sub_1BA8374F8);
  v68 = v5;
  v65 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v55 - v6;
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  *(_QWORD *)&v71 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v55 - v9;
  sub_1BAEC0350();
  v72 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC03C8();
  sub_1BA4A2870(&qword_1ED3D14C0, (uint64_t (*)(uint64_t))sub_1BAEC03C8, (uint64_t)&unk_1BB8FFC6C);
  v15 = (void *)v73;
  sub_1BB87468C();
  v16 = v15;
  if (v15)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  *(_QWORD *)&v73 = v10;
  v63 = v8;
  v17 = v71;
  v18 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = sub_1BB872874();
  v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v21 = v72;
  if ((v20 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v28 = a1;
      v29 = *((_QWORD *)v24 - 2);
      v30 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v31 = swift_bridgeObjectRelease();
      *(_QWORD *)&v73 = v14;
      MEMORY[0x1E0C80A78](v31);
      *(&v55 - 4) = (uint64_t)&_s14descr1E72CC2B1O10CodingKeysON;
      *(&v55 - 3) = sub_1BAEC0448();
      *(&v55 - 2) = sub_1BA5EE610();
      *(&v55 - 1) = sub_1BAEC048C();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E7250910);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v33 = v29;
      *(_QWORD *)(v33 + 8) = v30;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v34 = v30;
      a1 = v28;
      sub_1BA69C828(v29, v34, 1);
      (*(void (**)(_QWORD, uint64_t))(v18 + 8))(v73, v21);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v76 = 0uLL;
  v77 = 0;
  v25 = sub_1BB874098();
  v27 = v26;
  v76 = xmmword_1BB8A1A10;
  v77 = 0;
  v59 = sub_1BB87402C();
  v60 = v25;
  v61 = v37;
  v62 = v27;
  v76 = xmmword_1BB8D2D60;
  v77 = 0;
  v38 = v18;
  v39 = sub_1BB87402C();
  v58 = v40;
  v57 = xmmword_1BB8D2D70;
  v76 = xmmword_1BB8D2D70;
  v77 = 0;
  v41 = sub_1BB8740F8();
  if ((v41 & 1) != 0)
  {
    v56 = v39;
    v55 = v18;
    v74 = v57;
    v75 = 0;
    sub_1BAE7C214();
    v42 = v73;
    v43 = v17;
    sub_1BB8740D4();
    v44 = v69;
    v45 = v70;
    *(_QWORD *)&v57 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v42, v43);
    v38 = v55;
    v39 = v56;
  }
  else
  {
    *(_QWORD *)&v57 = MEMORY[0x1E0DEE9D8];
    v44 = v69;
    v45 = v70;
  }
  v73 = xmmword_1BB8D2D90;
  v76 = xmmword_1BB8D2D90;
  v77 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v56 = v39;
    v74 = v73;
    v75 = 0;
    sub_1BAE7C1AC();
    v46 = v45;
    v47 = v68;
    sub_1BB8740D4();
    *(_QWORD *)&v73 = a1;
    v48 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v47);
    v39 = v56;
  }
  else
  {
    *(_QWORD *)&v73 = a1;
    v48 = MEMORY[0x1E0DEE9D8];
  }
  v71 = xmmword_1BB8D2D80;
  v76 = xmmword_1BB8D2D80;
  v77 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = (char *)v48;
    v74 = v71;
    v75 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v49 = v66;
    v50 = v67;
    sub_1BB8740D4();
    v51 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v50);
    v48 = (uint64_t)v70;
  }
  else
  {
    v51 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v21);
  v52 = v62;
  *v44 = v60;
  v44[1] = v52;
  v53 = v61;
  v44[2] = v59;
  v44[3] = v53;
  v54 = v58;
  v44[4] = v39;
  v44[5] = v54;
  v44[6] = v57;
  v44[7] = v48;
  v44[8] = v51;
  v35 = v73;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

unint64_t sub_1BA5EE610()
{
  unint64_t result;

  result = qword_1ED3C6738;
  if (!qword_1ED3C6738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5DC8, &_s14descr1E72CC2B1O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C6738);
  }
  return result;
}

uint64_t sub_1BA5EE654@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatGroup.init(from:)(a1, a2);
}

uint64_t FormatGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  char v117;
  __int128 v118;
  char v119;
  _BYTE v120[7];

  v99 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C46C8, (void (*)(void))sub_1BA82A400, (void (*)(void))sub_1BA82A444);
  v98 = v3;
  v94 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v97 = (char *)&v80 - v4;
  sub_1BAEFBAC0(0, &qword_1ED3BBE50, (void (*)(void))sub_1BA8374B4, (void (*)(void))sub_1BA8374F8);
  v103 = v5;
  v95 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v102 = (char *)&v80 - v6;
  sub_1BA692844();
  v105 = v7;
  v96 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v104 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  *(_QWORD *)&v112 = v9;
  v100 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v107 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3BBE80, (void (*)(void))sub_1BA833E84, (void (*)(void))sub_1BA833F50);
  v109 = v11;
  v101 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v108 = (char *)&v80 - v12;
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  *(_QWORD *)&v111 = v13;
  v106 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)&v110 = (char *)&v80 - v14;
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v113 = v15;
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v80 - v17;
  sub_1BAE94D34();
  *(_QWORD *)&v114 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE94DAC();
  sub_1BA4A2870(&qword_1ED3D14A0, (uint64_t (*)(uint64_t))sub_1BAE94DAC, (uint64_t)&unk_1BB8FFC6C);
  v23 = (void *)v115;
  sub_1BB87468C();
  v24 = v23;
  if (v23)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v24);
    swift_willThrow();

    v40 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  *(_QWORD *)&v115 = v18;
  v92 = v16;
  v93 = v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v25 = sub_1BB872874();
  v26 = Dictionary<>.errorOnUnknownKeys.getter(v25);
  swift_bridgeObjectRelease();
  v27 = v114;
  if ((v26 & 1) != 0)
  {
    v28 = sub_1BB8740EC();
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      v30 = (_BYTE *)(v28 + 48);
      while (*v30 != 1)
      {
        v30 += 24;
        if (!--v29)
          goto LABEL_7;
      }
      v36 = *((_QWORD *)v30 - 2);
      v35 = *((_QWORD *)v30 - 1);
      swift_bridgeObjectRetain_n();
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v37);
      *(&v80 - 4) = (uint64_t)&_s10CodingKeysON_126;
      *(&v80 - 3) = sub_1BAE94E2C();
      *(&v80 - 2) = sub_1BA5EF7A0();
      *(&v80 - 1) = sub_1BAE94E70();
      swift_getKeyPath();
      swift_retain();
      v38 = sub_1BAE71220((uint64_t)&unk_1E72508B8);
      swift_release_n();
      sub_1BA98D1F0();
      v24 = (void *)swift_allocError();
      *(_QWORD *)v39 = v36;
      *(_QWORD *)(v39 + 8) = v35;
      *(_QWORD *)(v39 + 16) = v38;
      *(_OWORD *)(v39 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v36, v35, 1);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v22, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v118 = 0uLL;
  v119 = 0;
  v31 = sub_1BB874098();
  v33 = v32;
  v118 = xmmword_1BB8A1A10;
  v119 = 0;
  v34 = sub_1BB87402C();
  v43 = v42;
  v91 = v34;
  v118 = xmmword_1BB8D2D60;
  v119 = 0;
  v44 = sub_1BB87402C();
  v46 = v45;
  v88 = v44;
  v90 = xmmword_1BB8D2D70;
  v118 = xmmword_1BB8D2D70;
  v119 = 0;
  v47 = sub_1BB8740F8();
  if ((v47 & 1) != 0)
  {
    v116 = v90;
    v117 = 0;
    sub_1BA5EF8F4();
    sub_1BB8740D4();
    v87 = v31;
    v89 = v33;
    *(_QWORD *)&v90 = a1;
    v48 = v120[0];
  }
  else
  {
    v87 = v31;
    v89 = v33;
    *(_QWORD *)&v90 = a1;
    v48 = 2;
  }
  v118 = xmmword_1BB8D2D90;
  v119 = 0;
  sub_1BA5EF828();
  sub_1BA4A2870(&qword_1ED3CC9F0, (uint64_t (*)(uint64_t))sub_1BA5EF828, (uint64_t)&protocol conformance descriptor for FormatCodingColumnSetStrategy<A>.SetOrSingle<A1>);
  sub_1BB8740D4();
  v49 = v116;
  v118 = xmmword_1BB8D2D80;
  v119 = 0;
  sub_1BA5EF7E4();
  sub_1BB874068();
  v86 = v49;
  v84 = v48;
  v85 = v43;
  v50 = v116;
  v118 = xmmword_1BB8D2DA0;
  v119 = 0;
  sub_1BA4FB6A0();
  v51 = v115;
  v52 = v113;
  sub_1BB8740D4();
  v83 = *((_QWORD *)&v50 + 1);
  v81 = v50;
  v82 = sub_1BB86DD08();
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v51, v52);
  v115 = xmmword_1BB8D2DB0;
  v118 = xmmword_1BB8D2DB0;
  v119 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v116 = v115;
    v117 = 0;
    sub_1BAE7C214();
    v53 = v110;
    v54 = v111;
    sub_1BB8740D4();
    *(_QWORD *)&v115 = v46;
    v55 = sub_1BB86DD08();
    v56 = v53;
    v57 = v55;
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v56, v54);
  }
  else
  {
    *(_QWORD *)&v115 = v46;
    v57 = MEMORY[0x1E0DEE9D8];
  }
  v58 = v112;
  v113 = xmmword_1BB8D2DD0;
  v118 = xmmword_1BB8D2DD0;
  v119 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    *(_QWORD *)&v112 = v57;
    v116 = v113;
    v117 = 0;
    sub_1BAE8370C();
    v59 = v108;
    v60 = v109;
    sub_1BB8740D4();
    *(_QWORD *)&v113 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v60);
    v57 = v112;
  }
  else
  {
    *(_QWORD *)&v113 = MEMORY[0x1E0DEE9D8];
  }
  v112 = xmmword_1BB8D2DE0;
  v118 = xmmword_1BB8D2DE0;
  v119 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v116 = v112;
    v117 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v61 = v107;
    sub_1BB8740D4();
    *(_QWORD *)&v112 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v58);
  }
  else
  {
    *(_QWORD *)&v112 = MEMORY[0x1E0DEE9E8];
  }
  v111 = xmmword_1BB8D2DF0;
  v118 = xmmword_1BB8D2DF0;
  v119 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v116 = v111;
    v117 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v62 = v104;
    v63 = v105;
    sub_1BB8740D4();
    v64 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v62, v63);
  }
  else
  {
    v64 = MEMORY[0x1E0DEE9D8];
  }
  v111 = xmmword_1BB8D2E00;
  v118 = xmmword_1BB8D2E00;
  v119 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v116 = v111;
    v117 = 0;
    sub_1BAE7C1AC();
    sub_1BB8740D4();
    v65 = v103;
    v66 = v102;
    *(_QWORD *)&v111 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v66, v65);
  }
  else
  {
    *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
  }
  v110 = xmmword_1BB8D2E10;
  v118 = xmmword_1BB8D2E10;
  v119 = 0;
  v67 = v22;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v116 = v110;
    v117 = 0;
    sub_1BA5EF8B0();
    v68 = v27;
    sub_1BB8740D4();
    v69 = v120[0];
  }
  else
  {
    v68 = v27;
    v69 = -64;
  }
  v114 = xmmword_1BB8868A0;
  v118 = xmmword_1BB8868A0;
  v119 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v116 = v114;
    v117 = 0;
    sub_1BAE94EB4();
    sub_1BB8740D4();
    v70 = v98;
    v71 = v97;
    v72 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v71, v70);
  }
  else
  {
    v72 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v93 + 8))(v67, v68);
  v73 = v99;
  v74 = v89;
  *v99 = v87;
  v73[1] = v74;
  v75 = v85;
  v73[2] = v91;
  v73[3] = v75;
  v76 = v115;
  v73[4] = v88;
  v73[5] = v76;
  *((_BYTE *)v73 + 48) = v84;
  *(_DWORD *)((char *)v73 + 49) = v116;
  *((_DWORD *)v73 + 13) = *(_DWORD *)((char *)&v116 + 3);
  v77 = v81;
  v73[7] = v86;
  v73[8] = v77;
  v78 = v82;
  v73[9] = v83;
  v73[10] = v78;
  v79 = v113;
  v73[11] = v57;
  v73[12] = v79;
  v73[13] = v112;
  v73[14] = v64;
  v73[15] = v111;
  *((_BYTE *)v73 + 128) = v69;
  *((_DWORD *)v73 + 33) = *(_DWORD *)&v120[3];
  *(_DWORD *)((char *)v73 + 129) = *(_DWORD *)v120;
  v73[17] = v72;
  v40 = v90;
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

unint64_t sub_1BA5EF7A0()
{
  unint64_t result;

  result = qword_1ED3C6638;
  if (!qword_1ED3C6638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAD70, &_s10CodingKeysON_126);
    atomic_store(result, (unint64_t *)&qword_1ED3C6638);
  }
  return result;
}

unint64_t sub_1BA5EF7E4()
{
  unint64_t result;

  result = qword_1ED3BEF18;
  if (!qword_1ED3BEF18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystem, &type metadata for FormatGroupColumnSystem);
    atomic_store(result, (unint64_t *)&qword_1ED3BEF18);
  }
  return result;
}

uint64_t sub_1BA5EF828()
{
  uint64_t result;

  result = qword_1ED3CC9F8;
  if (!qword_1ED3CC9F8)
    type metadata accessor for FormatCodingColumnSetStrategy.SetOrSingle();
  return result;
}

unint64_t sub_1BA5EF8B0()
{
  unint64_t result;

  result = qword_1ED3B7B68;
  if (!qword_1ED3B7B68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategory, &type metadata for FormatContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ED3B7B68);
  }
  return result;
}

unint64_t sub_1BA5EF8F4()
{
  unint64_t result;

  result = qword_1ED3B5D70;
  if (!qword_1ED3B5D70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupPriority, &type metadata for FormatGroupPriority);
    atomic_store(result, (unint64_t *)&qword_1ED3B5D70);
  }
  return result;
}

uint64_t sub_1BA5EF938(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  return sub_1BA5EF988(a1, a2, a3, v6);
}

uint64_t sub_1BA5EF988(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  int v20;
  uint64_t v21;
  char v22;

  v5 = v4;
  v21 = a3;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 80);
  v9 = *(_QWORD *)(*(_QWORD *)v5 + 88);
  v10 = type metadata accessor for FeedGroupEmitTask.State(0, v8, v9, a4);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - v12;
  v14 = *a1;
  v15 = a1[3];
  v20 = *((unsigned __int8 *)a1 + 32);
  v19 = *(_OWORD *)(a1 + 1);
  swift_storeEnumTagMultiPayload();
  v17 = sub_1BA5EFAB0((uint64_t)v13, v8, v9, v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)(v5 + 16) = v14;
  *(_OWORD *)(v5 + 24) = v19;
  *(_QWORD *)(v5 + 40) = v15;
  *(_BYTE *)(v5 + 48) = v20;
  *(_QWORD *)(v5 + 56) = a2;
  *(_QWORD *)(v5 + 64) = v21;
  *(_QWORD *)(v5 + 72) = v17;
  swift_retain();
  swift_retain();
  sub_1BA5F3754();
  *(_BYTE *)(v5 + 80) = v22;
  return v5;
}

uint64_t sub_1BA5EFAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for FeedGroupEmitTask.State(0, a2, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  sub_1BB86E890();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  return sub_1BB86E860();
}

uint64_t sub_1BA5EFB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  char *v31;
  uint64_t v32;
  void (**v33)(char *, uint64_t);
  double v34;
  void (**v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  void *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t *v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (**v154)(char *, uint64_t);
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  _OWORD v162[2];
  __int128 v163;
  _OWORD v164[2];
  _BYTE v165[16];

  v5 = *(_QWORD *)(*v4 + 80);
  v6 = *(_QWORD *)(*v4 + 88);
  v146 = *v4;
  v7 = type metadata accessor for FeedGroupEmitTask.Errors(0, v5, v6, a4);
  v157 = *(_QWORD *)(v7 - 8);
  v158 = v7;
  MEMORY[0x1E0C80A78](v7);
  v156 = (char *)&v143 - v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v145 = AssociatedTypeWitness;
  v144 = AssociatedConformanceWitness;
  v152 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v148 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v147 = (uint64_t *)((char *)&v143 - v12);
  v159 = type metadata accessor for FeedGroupEmitTask.Result(0, v5, v6, v13);
  v151 = *(_QWORD *)(v159 - 8);
  v14 = MEMORY[0x1E0C80A78](v159);
  v149 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v150 = (uint64_t)&v143 - v16;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedTypeWitness();
  v153 = swift_getAssociatedConformanceWitness();
  v155 = (char *)v17;
  v18 = swift_getAssociatedTypeWitness();
  v154 = *(void (***)(char *, uint64_t))(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v143 - v19;
  v22 = type metadata accessor for FeedGroupEmitTask.State(0, v5, v6, v21);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (uint64_t *)((char *)&v143 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v143 - v27;
  v29 = v160;
  sub_1BA5F12C8();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v31 = v28;
  v32 = v22;
  v33 = *(void (***)(char *, uint64_t))(v23 + 8);
  ((void (*)(char *, uint64_t))v33)(v31, v32);
  if (EnumCaseMultiPayload == 2)
  {
    v34 = CACurrentMediaTime();
    swift_storeEnumTagMultiPayload();
    v35 = v33;
    v36 = v29;
    sub_1BA5F0CF8((uint64_t)v26, v37, v38, v39);
    v158 = v32;
    ((void (*)(uint64_t *, uint64_t))v35)(v26, v32);
    v40 = *(_QWORD *)(v29 + 56);
    v41 = *(char **)(v29 + 64);
    sub_1BA5F39AC();
    v156 = v41;
    sub_1BA5F3734();
    v157 = v40;
    sub_1BA5F1270();
    v42 = swift_getAssociatedConformanceWitness();
    FeedGroupConfigType.rules<A>()(v18, v5, v42, v6);
    v154[1](v20, v18);
    type metadata accessor for FeedGroupEmitterRule(0, v5, v6, v43);
    v44 = sub_1BB872E5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v161 = v44;
    v45 = sub_1BB872EE0();
    v46 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v45);
    v48 = sub_1BAA52384((void (*)(char *, char *))sub_1BA5F51F0, v36, v45, (uint64_t)&type metadata for FeedGroupEmitterRuleOutput, MEMORY[0x1E0DEDCE8], v46, MEMORY[0x1E0DEDD18], v47);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v161 = v48;
    swift_bridgeObjectRetain();
    sub_1BA5F12FC((uint64_t *)&v161);
    v49 = (uint64_t *)v36;
    v50 = (uint64_t)v26;
    swift_bridgeObjectRelease();
    v51 = v161;
    v52 = v35;
    if (*(_QWORD *)(v161 + 16))
    {
      v154 = v35;
      v155 = (char *)v26;
      v53 = *(_QWORD *)(v161 + 72);
      v54 = *(_QWORD *)(v161 + 80);
      if (!*(_BYTE *)(v161 + 88))
      {
        v156 = (char *)v49[4];
        sub_1BA7AA598();
        v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = xmmword_1BB87FC80;
        sub_1BA5F1EC8(v53, v54, 0);
        v79 = sub_1BA4F5ADC();
        v81 = v80;
        v82 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v78 + 56) = MEMORY[0x1E0DEA968];
        v83 = sub_1BA6A2D8C();
        *(_QWORD *)(v78 + 64) = v83;
        *(_QWORD *)(v78 + 32) = v79;
        *(_QWORD *)(v78 + 40) = v81;
        v84 = sub_1BA4D7950();
        *(_QWORD *)(v78 + 96) = v82;
        *(_QWORD *)(v78 + 104) = v83;
        *(_QWORD *)(v78 + 72) = v84;
        *(_QWORD *)(v78 + 80) = v85;
        *(_QWORD *)(v78 + 136) = v82;
        *(_QWORD *)(v78 + 144) = v83;
        *(_QWORD *)(v78 + 112) = v53;
        *(_QWORD *)(v78 + 120) = v54;
        swift_bridgeObjectRetain();
        v86 = sub_1BB87330C();
        sub_1BB86EF44("Emit task removing %{public}@ emitter, identifier=%{public}@, reason=%{public}@", 79, 2, &dword_1BA493000, v156, v86, v78);
        swift_bridgeObjectRelease();
        v64 = v147;
        *v147 = v53;
        v64[1] = v54;
        v65 = v152;
        goto LABEL_8;
      }
      if (*(_BYTE *)(v161 + 88) == 1)
      {
        v156 = (char *)v49[4];
        sub_1BA7AA598();
        v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_1BB87FC80;
        sub_1BA5F1EC8(v53, v54, 1u);
        v56 = sub_1BA4F5ADC();
        v58 = v57;
        v59 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
        v60 = sub_1BA6A2D8C();
        *(_QWORD *)(v55 + 64) = v60;
        *(_QWORD *)(v55 + 32) = v56;
        *(_QWORD *)(v55 + 40) = v58;
        v61 = sub_1BA4D7950();
        *(_QWORD *)(v55 + 96) = v59;
        *(_QWORD *)(v55 + 104) = v60;
        *(_QWORD *)(v55 + 72) = v61;
        *(_QWORD *)(v55 + 80) = v62;
        *(_QWORD *)(v55 + 136) = v59;
        *(_QWORD *)(v55 + 144) = v60;
        *(_QWORD *)(v55 + 112) = v53;
        *(_QWORD *)(v55 + 120) = v54;
        swift_bridgeObjectRetain();
        v63 = sub_1BB87330C();
        sub_1BB86EF44("Emit task skipping %{public}@ emitter, identifier=%{public}@, result=skip, reason=%{public}@", 92, 2, &dword_1BA493000, v156, v63, v55);
        swift_bridgeObjectRelease();
        v64 = v147;
        *v147 = v53;
        v64[1] = v54;
        v65 = v152;
LABEL_8:
        swift_storeEnumTagMultiPayload();
        v161 = v163;
        v162[0] = v164[0];
        *(_OWORD *)((char *)v162 + 10) = *(_OWORD *)((char *)v164 + 10);
        v87 = v150;
        sub_1BA66D3D8((uint64_t)v64, v51, (uint64_t)&v161, v150, v34);
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v148 + 8))(v64, v65);
        v88 = v151;
        v89 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
        v90 = (uint64_t)v155;
        v91 = v159;
        v89(v155, v87, v159);
        v92 = v158;
        swift_storeEnumTagMultiPayload();
        sub_1BA5F0CF8(v90, v93, v94, v95);
        ((void (*)(uint64_t, uint64_t))v154)(v90, v92);
LABEL_11:
        sub_1BB86EAAC();
        v111 = v149;
        v89(v149, v87, v91);
        v76 = sub_1BB86E9D4();
        v89(v111, v87, v91);
        sub_1BB86E9D4();
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v91);
        return v76;
      }
      v50 = (uint64_t)v155;
      v52 = v154;
      if (v53 | v54)
      {
        v156 = (char *)v49[4];
        sub_1BA7AA598();
        v96 = swift_allocObject();
        *(_OWORD *)(v96 + 16) = xmmword_1BB87A390;
        v97 = sub_1BA4F5ADC();
        v99 = v98;
        v100 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v96 + 56) = MEMORY[0x1E0DEA968];
        v101 = sub_1BA6A2D8C();
        *(_QWORD *)(v96 + 64) = v101;
        *(_QWORD *)(v96 + 32) = v97;
        *(_QWORD *)(v96 + 40) = v99;
        v102 = sub_1BA4D7950();
        *(_QWORD *)(v96 + 96) = v100;
        *(_QWORD *)(v96 + 104) = v101;
        *(_QWORD *)(v96 + 72) = v102;
        *(_QWORD *)(v96 + 80) = v103;
        v104 = sub_1BB87330C();
        sub_1BB86EF44("Emit task skipping %{public}@ emitter, identifier=%{public}@, result=last", 73, 2, &dword_1BA493000, v156, v104, v96);
        swift_bridgeObjectRelease();
        v105 = v147;
        sub_1BB5B1130(v145, v144, v106, v147);
        v161 = v163;
        v162[0] = v164[0];
        *(_OWORD *)((char *)v162 + 10) = *(_OWORD *)((char *)v164 + 10);
        v87 = v150;
        sub_1BA66D3D8((uint64_t)v105, v51, (uint64_t)&v161, v150, v34);
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v148 + 8))(v105, v152);
        v88 = v151;
        v89 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
        v91 = v159;
        v89((char *)v50, v87, v159);
        v107 = v158;
        swift_storeEnumTagMultiPayload();
        sub_1BA5F0CF8(v50, v108, v109, v110);
        ((void (*)(uint64_t, uint64_t))v52)(v50, v107);
        goto LABEL_11;
      }
    }
    v113 = v49[4];
    sub_1BA7AA598();
    v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_1BB87A390;
    v155 = (char *)v51;
    v115 = sub_1BA4F5ADC();
    v117 = v116;
    v118 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v114 + 56) = MEMORY[0x1E0DEA968];
    v119 = sub_1BA6A2D8C();
    *(_QWORD *)(v114 + 64) = v119;
    *(_QWORD *)(v114 + 32) = v115;
    *(_QWORD *)(v114 + 40) = v117;
    v120 = sub_1BA4D7950();
    *(_QWORD *)(v114 + 96) = v118;
    *(_QWORD *)(v114 + 104) = v119;
    *(_QWORD *)(v114 + 72) = v120;
    *(_QWORD *)(v114 + 80) = v121;
    v122 = sub_1BB87330C();
    sub_1BB86EF44("Emit task is starting to emit from %{public}@ emitter, identifier=%{public}@", 76, 2, &dword_1BA493000, v113, v122, v114);
    swift_bridgeObjectRelease();
    v123 = v158;
    swift_storeEnumTagMultiPayload();
    sub_1BA5F0CF8(v50, v124, v125, v126);
    v127 = ((uint64_t (*)(uint64_t, uint64_t))v52)(v50, v123);
    v128 = (uint64_t)v155;
    v129 = *(_QWORD *)&v156[*(_QWORD *)(*(_QWORD *)v156 + 232)];
    MEMORY[0x1E0C80A78](v127);
    *(&v143 - 4) = (uint64_t)&v163;
    *(&v143 - 3) = (uint64_t)v49;
    *(&v143 - 2) = v129;
    swift_retain();
    sub_1BB86EC14();
    v130 = swift_allocObject();
    *(double *)(v130 + 16) = v34;
    *(_QWORD *)(v130 + 24) = v128;
    v131 = v164[0];
    *(_OWORD *)(v130 + 32) = v163;
    *(_OWORD *)(v130 + 48) = v131;
    *(_OWORD *)(v130 + 58) = *(_OWORD *)((char *)v164 + 10);
    swift_retain();
    v132 = (void *)sub_1BB86E854();
    v133 = (uint64_t *)sub_1BB86E98C();
    swift_release();
    swift_release();

    v134 = sub_1BA5F31D0(v133, (uint64_t)&v163, v129);
    sub_1BA5F360C((uint64_t)&v163, (uint64_t)v165);
    sub_1BA5F360C((uint64_t)v165, (uint64_t)&v161);
    if ((BYTE8(v161) & 1) != 0)
    {
      v76 = sub_1BA5F3668(v34, v134, v49, v128, &v163);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_retain();
    }
    else
    {
      v135 = v161;
      v158 = sub_1BB86EAAC();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      swift_allocObject();
      v157 = sub_1BB872E2C();
      v137 = v136;
      *v136 = v134;
      v138 = swift_allocObject();
      v139 = v49;
      *(_QWORD *)(v138 + 16) = v135;
      *(_QWORD *)(v138 + 24) = v134;
      swift_retain_n();
      v140 = (void *)sub_1BB86E854();
      v141 = sub_1BB86E980();
      swift_release();

      v137[1] = v141;
      sub_1BA69C794(v157);
      v142 = sub_1BB86E944();
      swift_bridgeObjectRelease();
      v76 = sub_1BA5F3668(v34, v142, v139, v128, &v163);
      sub_1BA5F3668(v34, v134, v139, v128, &v163);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    MEMORY[0x1BCCDE9CC]("Tried to start an emit task more than once!", 43, 2, MEMORY[0x1E0DEE9D8]);
    v66 = v156;
    sub_1BA5F12C8();
    v67 = v158;
    MEMORY[0x1BCCE5B24](&unk_1BB880C40, v158);
    v68 = swift_allocError();
    v69 = v157;
    v70 = *(void (**)(uint64_t, char *, uint64_t))(v157 + 16);
    v70(v71, v66, v67);
    *v26 = v68;
    swift_storeEnumTagMultiPayload();
    sub_1BA5F0CF8((uint64_t)v26, v72, v73, v74);
    ((void (*)(uint64_t *, uint64_t))v33)(v26, v32);
    sub_1BB86EAAC();
    swift_allocError();
    v70(v75, v66, v67);
    v76 = sub_1BB86E9BC();
    swift_allocError();
    v70(v77, v66, v67);
    sub_1BB86E9BC();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v67);
  }
  return v76;
}

void sub_1BA5F09C4(id *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5)
    v5 = *(_QWORD *)(v3 + 64);
  if (v5 <= 0x10)
    v6 = 16;
  else
    v6 = v5;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 <= v6)
    v7 = v6;
  else
    v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  v8 = (((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if ((((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
    v8 = 8;
  v9 = v8 & 0xFFFFFFF8;
  v10 = *((unsigned __int8 *)a1 + v8);
  if (v10 >= 2 && v9 != 0)
    v10 = *(_DWORD *)a1 + 2;
  if (v10 == 1)
  {

  }
  else if (!v10)
  {
    switch(*((_BYTE *)a1 + v7))
    {
      case 0:
      case 1:
        (*(void (**)(id *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        v13 = ((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v13 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_43;
        goto LABEL_42;
      case 2:
        (*(void (**)(id *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_43;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_43;
      case 6:
        v14 = *((unsigned __int8 *)a1 + v6);
        if (v14 >= 3)
        {
          if (v6 <= 3)
            v15 = v6;
          else
            v15 = 4;
          __asm { BR              X13 }
        }
        if (v14 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v14 == 1)
        {
          (*(void (**)(id *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(id *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
          v16 = ((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v16 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v16);
        }
        v13 = ((unint64_t)a1 + v6 + 8) & 0xFFFFFFFFFFFFFFF8;
LABEL_42:
        __swift_destroy_boxed_opaque_existential_1(v13);
LABEL_43:
        swift_release();
        swift_bridgeObjectRelease();
        break;
      default:
        if (v7 <= 3)
          v12 = v7;
        else
          v12 = 4;
        __asm { BR              X13 }
        return;
    }
  }
}

uint64_t sub_1BA5F0CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = type metadata accessor for FeedGroupEmitTask.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v10 - v8, a1);
  swift_retain();
  sub_1BB86E884();
  return swift_release();
}

uint64_t type metadata accessor for FeedGroupEmitTask.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitTask.State);
}

_QWORD *sub_1BA5F0D94(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _OWORD *v45;
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  _QWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  if ((((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
    v10 = 8;
  else
    v10 = (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0)
    v11 = *(_DWORD *)a2 + 2;
  if (v11 == 1)
  {
    v14 = (void *)*a2;
    v15 = v14;
    *a1 = v14;
    *((_BYTE *)a1 + v10) = 1;
  }
  else if (v11)
  {
    memcpy(a1, a2, v10 | 1);
  }
  else
  {
    v16 = v8 + 1;
    v17 = v9 + 1;
    switch(*((_BYTE *)a2 + v9))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v18 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v19 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v20 = *(_QWORD *)(v19 + 24);
        if (v20 < 0xFFFFFFFF)
        {
          v31 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)v18 = *(_OWORD *)v19;
          *(_OWORD *)(v18 + 16) = v31;
        }
        else
        {
          *(_QWORD *)(v18 + 24) = v20;
          (**(void (***)(void))(v20 - 8))();
        }
        *((_BYTE *)a1 + v9) = 0;
        break;
      case 1:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v21 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v22 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v23 = *(_QWORD *)(v22 + 24);
        if (v23 < 0xFFFFFFFF)
        {
          v32 = *(_OWORD *)(v22 + 16);
          *(_OWORD *)v21 = *(_OWORD *)v22;
          *(_OWORD *)(v21 + 16) = v32;
        }
        else
        {
          *(_QWORD *)(v21 + 24) = v23;
          (**(void (***)(void))(v23 - 8))();
        }
        v24 = 1;
        goto LABEL_54;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v24 = 2;
        goto LABEL_54;
      case 3:
        v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        v26 = 3;
        goto LABEL_37;
      case 4:
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        v26 = 4;
        goto LABEL_37;
      case 5:
        v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        v26 = 5;
LABEL_37:
        *((_BYTE *)a1 + v9) = v26;
        swift_bridgeObjectRetain();
        break;
      case 6:
        v29 = *((unsigned __int8 *)a2 + v8);
        if (v29 >= 3)
        {
          if (v8 <= 3)
            v30 = v8;
          else
            v30 = 4;
          __asm { BR              X13 }
        }
        if (v29 == 2)
        {
          v33 = a2[1];
          *a1 = *a2;
          a1[1] = v33;
          *((_BYTE *)a1 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v29 == 1)
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          *((_BYTE *)a1 + v8) = 1;
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          v34 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v35 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v36 = *(_QWORD *)(v35 + 24);
          if (v36 < 0xFFFFFFFF)
          {
            v37 = *(_OWORD *)(v35 + 16);
            *(_OWORD *)v34 = *(_OWORD *)v35;
            *(_OWORD *)(v34 + 16) = v37;
          }
          else
          {
            *(_QWORD *)(v34 + 24) = v36;
            (**(void (***)(void))(v36 - 8))();
          }
          *((_BYTE *)a1 + v8) = 0;
        }
        v38 = ((unint64_t)a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
        v39 = ((unint64_t)a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
        v40 = *(_QWORD *)(v39 + 24);
        *(_QWORD *)(v38 + 24) = v40;
        *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
        (**(void (***)(void))(v40 - 8))();
        v24 = 6;
LABEL_54:
        *((_BYTE *)a1 + v9) = v24;
        break;
      default:
        if (v9 <= 3)
          v13 = v9;
        else
          v13 = 4;
        __asm { BR              X13 }
        return result;
    }
    v41 = (_QWORD *)(((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
    v42 = (_QWORD *)(((unint64_t)a2 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v41 = *v42;
    v43 = (_QWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFF8);
    v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v43 = *v44;
    v45 = (_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
    v46 = (__int128 *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
    v47 = *v46;
    v48 = v46[1];
    *(_OWORD *)((char *)v45 + 26) = *(__int128 *)((char *)v46 + 26);
    *v45 = v47;
    v45[1] = v48;
    *(_QWORD *)(((unint64_t)v45 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v46 + 49) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)a1 + v10) = 0;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BA5F1270()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1BA5F1290()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 48))();
}

uint64_t sub_1BA5F12C8()
{
  swift_retain();
  sub_1BB86E878();
  return swift_release();
}

uint64_t sub_1BA5F12FC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA5F1364(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BA5F138C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BA5F1364(uint64_t a1)
{
  return sub_1BA5F1378(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA5F1378(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BAC7DAB4(a1, a2, a3, a4, &qword_1ED3CFB70, (uint64_t)&type metadata for FeedGroupEmitterRuleOutput);
}

uint64_t sub_1BA5F138C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 *v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;
  _BYTE v113[40];
  __int128 v114;
  unsigned __int8 v115;
  __int128 v116;
  __int128 v117;
  _BYTE v118[25];
  uint64_t v119;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_179;
    if (v3)
      return sub_1BA5F1C38(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_187;
  v107 = result;
  v119 = v1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v10 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_144:
      v105 = v8;
      if (v11 >= 2)
      {
        v98 = *v2;
        do
        {
          v99 = v11 - 2;
          if (v11 < 2)
            goto LABEL_174;
          if (!v98)
            goto LABEL_186;
          v100 = *(_QWORD *)&v10[16 * v99 + 32];
          v101 = *(_QWORD *)&v10[16 * v11 + 24];
          v102 = v119;
          sub_1BA8DCC90((char *)(v98 + (v100 << 6)), (char *)(v98 + (*(_QWORD *)&v10[16 * v11 + 16] << 6)), v98 + (v101 << 6), __dst);
          v119 = v102;
          if (v102)
            break;
          if (v101 < v100)
            goto LABEL_175;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_1BACAB464((uint64_t)v10);
          if (v99 >= *((_QWORD *)v10 + 2))
            goto LABEL_176;
          v103 = &v10[16 * v99 + 32];
          *(_QWORD *)v103 = v100;
          *((_QWORD *)v103 + 1) = v101;
          v104 = *((_QWORD *)v10 + 2);
          if (v11 > v104)
            goto LABEL_177;
          memmove(&v10[16 * v11 + 16], &v10[16 * v11 + 32], 16 * (v104 - v11));
          *((_QWORD *)v10 + 2) = v104 - 1;
          v11 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_155:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v105 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v105 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_16:
  v12 = v9;
  v13 = v9 + 1;
  v110 = v9;
  if (v9 + 1 >= v3)
    goto LABEL_64;
  v14 = *v2;
  sub_1BA5F1E28(*v2 + (v13 << 6), (uint64_t)&v116);
  sub_1BA5F1E28(v14 + (v12 << 6), (uint64_t)v113);
  v15 = v118[24];
  v106 = v14;
  if (!v118[24])
  {
LABEL_20:
    v16 = v115;
    if (!v115)
      goto LABEL_31;
    goto LABEL_26;
  }
  if (v118[24] == 1)
  {
    v15 = 2;
    goto LABEL_20;
  }
  if (*(_OWORD *)&v118[8] == 0)
    v15 = 3;
  else
    v15 = 1;
  v16 = v115;
  if (v115)
  {
LABEL_26:
    if ((_DWORD)v16 == 1)
    {
      v16 = 2;
    }
    else if (v114 == 0)
    {
      v16 = 3;
    }
    else
    {
      v16 = 1;
    }
  }
LABEL_31:
  sub_1BA5F1DB4((uint64_t)v113);
  sub_1BA5F1DB4((uint64_t)&v116);
  v13 = v12 + 2;
  if (v12 + 2 < v3)
  {
    v108 = v3;
    v17 = v14 + (v12 << 6) + 64;
    while (1)
    {
      sub_1BA5F1E28(v17 + 64, (uint64_t)&v116);
      sub_1BA5F1E28(v17, (uint64_t)v113);
      v18 = v118[24];
      if (!v118[24])
        goto LABEL_36;
      if (v118[24] == 1)
        break;
      if (*(_OWORD *)&v118[8] == 0)
        v18 = 3;
      else
        v18 = 1;
      v19 = v115;
      if (v115)
        goto LABEL_42;
LABEL_47:
      v20 = v15;
      v21 = v15 < v16;
      v22 = v18 >= v19;
      sub_1BA5F1DB4((uint64_t)v113);
      sub_1BA5F1DB4((uint64_t)&v116);
      if (v21 == v22)
      {
        v23 = v20;
        v3 = v108;
        v12 = v110;
        if (v23 < v16)
          goto LABEL_53;
        goto LABEL_64;
      }
      v17 += 64;
      ++v13;
      v15 = v20;
      if (v108 == v13)
      {
        v3 = v108;
        v12 = v110;
        v13 = v108;
        goto LABEL_50;
      }
    }
    v18 = 2;
LABEL_36:
    v19 = v115;
    if (!v115)
      goto LABEL_47;
LABEL_42:
    if ((_DWORD)v19 == 1)
    {
      v19 = 2;
    }
    else if (v114 == 0)
    {
      v19 = 3;
    }
    else
    {
      v19 = 1;
    }
    goto LABEL_47;
  }
LABEL_50:
  if (v15 < v16)
  {
LABEL_53:
    if (v13 < v12)
      goto LABEL_180;
    if (v12 < v13)
    {
      v24 = (v13 << 6) - 64;
      v25 = v12 << 6;
      v26 = v13;
      v27 = v12;
      do
      {
        if (v27 != --v26)
        {
          if (!v106)
            goto LABEL_185;
          v31 = (__int128 *)(v106 + v25);
          v32 = (__int128 *)(v106 + v24);
          v116 = *(_OWORD *)(v106 + v25);
          v117 = *(_OWORD *)(v106 + v25 + 16);
          *(_OWORD *)v118 = *(_OWORD *)(v106 + v25 + 32);
          *(_OWORD *)&v118[9] = *(_OWORD *)(v106 + v25 + 41);
          if (v25 != v24 || v31 >= v32 + 4)
          {
            v28 = *v32;
            v29 = v32[1];
            v30 = v32[3];
            v31[2] = v32[2];
            v31[3] = v30;
            *v31 = v28;
            v31[1] = v29;
          }
          *v32 = v116;
          v32[1] = v117;
          v32[2] = *(_OWORD *)v118;
          *(__int128 *)((char *)v32 + 41) = *(_OWORD *)&v118[9];
        }
        ++v27;
        v24 -= 64;
        v25 += 64;
      }
      while (v27 < v26);
    }
  }
LABEL_64:
  if (v13 >= v3)
    goto LABEL_95;
  if (__OFSUB__(v13, v12))
    goto LABEL_178;
  if (v13 - v12 >= v107)
    goto LABEL_95;
  if (__OFADD__(v12, v107))
    goto LABEL_181;
  if (v12 + v107 >= v3)
    v33 = v3;
  else
    v33 = v12 + v107;
  if (v33 >= v12)
  {
    if (v13 == v33)
      goto LABEL_95;
    v109 = v10;
    v34 = v13 << 6;
LABEL_75:
    v35 = v13;
    v36 = v34;
    while (1)
    {
      v37 = *v2 + v36;
      sub_1BA5F1E28(v37, (uint64_t)&v116);
      sub_1BA5F1E28(v37 - 64, (uint64_t)v113);
      v38 = v118[24];
      if (v118[24])
      {
        if (v118[24] != 1)
        {
          if (*(_OWORD *)&v118[8] == 0)
            v38 = 3;
          else
            v38 = 1;
          v39 = v115;
          if (!v115)
            goto LABEL_90;
LABEL_85:
          if ((_DWORD)v39 == 1)
          {
            v39 = 2;
          }
          else if (v114 == 0)
          {
            v39 = 3;
          }
          else
          {
            v39 = 1;
          }
          goto LABEL_90;
        }
        v38 = 2;
      }
      v39 = v115;
      if (v115)
        goto LABEL_85;
LABEL_90:
      sub_1BA5F1DB4((uint64_t)v113);
      sub_1BA5F1DB4((uint64_t)&v116);
      if (v38 >= v39)
        goto LABEL_74;
      if (!*v2)
        goto LABEL_183;
      v40 = (__int128 *)(*v2 + v36);
      *(_OWORD *)v118 = v40[2];
      *(_OWORD *)&v118[9] = *(__int128 *)((char *)v40 + 41);
      v116 = *v40;
      v41 = v116;
      v117 = v40[1];
      v42 = v117;
      v43 = *(v40 - 3);
      *v40 = *(v40 - 4);
      v40[1] = v43;
      v44 = *(v40 - 1);
      v40[2] = *(v40 - 2);
      v40[3] = v44;
      *(v40 - 4) = v41;
      *(__int128 *)((char *)v40 - 23) = *(_OWORD *)&v118[9];
      v45 = *(_OWORD *)v118;
      *(v40 - 3) = v42;
      *(v40 - 2) = v45;
      v36 -= 64;
      if (v35 == ++v12)
      {
LABEL_74:
        v13 = v35 + 1;
        v34 += 64;
        v12 = v110;
        if (v35 + 1 != v33)
          goto LABEL_75;
        v13 = v33;
        v10 = v109;
LABEL_95:
        if (v13 < v12)
          goto LABEL_173;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v47 = *((_QWORD *)v10 + 2);
        v46 = *((_QWORD *)v10 + 3);
        v11 = v47 + 1;
        if (v47 >= v46 >> 1)
          v10 = sub_1BACAA368((char *)(v46 > 1), v47 + 1, 1, v10);
        *((_QWORD *)v10 + 2) = v11;
        v48 = v10 + 32;
        v49 = &v10[16 * v47 + 32];
        *(_QWORD *)v49 = v110;
        *((_QWORD *)v49 + 1) = v13;
        v111 = v13;
        if (v47)
        {
LABEL_101:
          v50 = v11 - 1;
          if (v11 >= 4)
          {
            v55 = &v48[16 * v11];
            v56 = *((_QWORD *)v55 - 8);
            v57 = *((_QWORD *)v55 - 7);
            v61 = __OFSUB__(v57, v56);
            v58 = v57 - v56;
            if (v61)
              goto LABEL_162;
            v60 = *((_QWORD *)v55 - 6);
            v59 = *((_QWORD *)v55 - 5);
            v61 = __OFSUB__(v59, v60);
            v53 = v59 - v60;
            v54 = v61;
            if (v61)
              goto LABEL_163;
            v62 = v11 - 2;
            v63 = &v48[16 * v11 - 32];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v61 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v61)
              goto LABEL_165;
            v61 = __OFADD__(v53, v66);
            v67 = v53 + v66;
            if (v61)
              goto LABEL_168;
            if (v67 >= v58)
            {
              v85 = &v48[16 * v50];
              v87 = *(_QWORD *)v85;
              v86 = *((_QWORD *)v85 + 1);
              v61 = __OFSUB__(v86, v87);
              v88 = v86 - v87;
              if (v61)
                goto LABEL_172;
              v78 = v53 < v88;
            }
            else
            {
LABEL_114:
              if ((v54 & 1) != 0)
                goto LABEL_164;
              v62 = v11 - 2;
              v68 = &v48[16 * v11 - 32];
              v70 = *(_QWORD *)v68;
              v69 = *((_QWORD *)v68 + 1);
              v71 = __OFSUB__(v69, v70);
              v72 = v69 - v70;
              v73 = v71;
              if (v71)
                goto LABEL_167;
              v74 = &v48[16 * v50];
              v76 = *(_QWORD *)v74;
              v75 = *((_QWORD *)v74 + 1);
              v61 = __OFSUB__(v75, v76);
              v77 = v75 - v76;
              if (v61)
                goto LABEL_170;
              if (__OFADD__(v72, v77))
                goto LABEL_171;
              if (v72 + v77 < v53)
                goto LABEL_126;
              v78 = v53 < v77;
            }
            if (v78)
              v50 = v62;
          }
          else
          {
            if (v11 == 3)
            {
              v52 = *((_QWORD *)v10 + 4);
              v51 = *((_QWORD *)v10 + 5);
              v61 = __OFSUB__(v51, v52);
              v53 = v51 - v52;
              v54 = v61;
              goto LABEL_114;
            }
            v79 = *((_QWORD *)v10 + 4);
            v80 = *((_QWORD *)v10 + 5);
            v61 = __OFSUB__(v80, v79);
            v72 = v80 - v79;
            v73 = v61;
LABEL_126:
            if ((v73 & 1) != 0)
              goto LABEL_166;
            v81 = &v48[16 * v50];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v61 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v61)
              goto LABEL_169;
            if (v84 < v72)
              goto LABEL_15;
          }
          v89 = v2;
          v90 = v10;
          v91 = v50 - 1;
          if (v50 - 1 >= v11)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            break;
          }
          if (!*v89)
            goto LABEL_184;
          v92 = &v48[16 * v91];
          v93 = *(_QWORD *)v92;
          v94 = &v48[16 * v50];
          v95 = *((_QWORD *)v94 + 1);
          v96 = v119;
          sub_1BA8DCC90((char *)(*v89 + (*(_QWORD *)v92 << 6)), (char *)(*v89 + (*(_QWORD *)v94 << 6)), *v89 + (v95 << 6), __dst);
          v119 = v96;
          if (v96)
            goto LABEL_155;
          if (v95 < v93)
            goto LABEL_159;
          if (v50 > *((_QWORD *)v90 + 2))
            goto LABEL_160;
          *(_QWORD *)v92 = v93;
          *(_QWORD *)&v48[16 * v91 + 8] = v95;
          v97 = *((_QWORD *)v90 + 2);
          if (v50 >= v97)
            goto LABEL_161;
          v10 = v90;
          v11 = v97 - 1;
          memmove(&v48[16 * v50], v94 + 16, 16 * (v97 - 1 - v50));
          *((_QWORD *)v90 + 2) = v97 - 1;
          v2 = v89;
          if (v97 <= 2)
            goto LABEL_15;
          goto LABEL_101;
        }
        v11 = 1;
LABEL_15:
        v3 = v2[1];
        v9 = v111;
        if (v111 >= v3)
        {
          v8 = v105;
          goto LABEL_144;
        }
        goto LABEL_16;
      }
    }
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BA5F1C38(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[40];
  __int128 v20;
  unsigned __int8 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[25];
  uint64_t v25;

  v25 = result;
  if (a3 != a2)
  {
    v5 = a3;
    v7 = a3 << 6;
LABEL_5:
    v8 = v25;
    v9 = v7;
    while (1)
    {
      v10 = *a4 + v9;
      sub_1BA5F1E28(v10, (uint64_t)&v22);
      sub_1BA5F1E28(v10 - 64, (uint64_t)v19);
      v11 = v24[24];
      if (!v24[24])
        goto LABEL_9;
      if (v24[24] == 1)
        break;
      if (*(_OWORD *)&v24[8] == 0)
        v11 = 3;
      else
        v11 = 1;
      v12 = v21;
      if (v21)
        goto LABEL_15;
LABEL_20:
      sub_1BA5F1DB4((uint64_t)v19);
      result = sub_1BA5F1DB4((uint64_t)&v22);
      if (v11 >= v12)
        goto LABEL_4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      v13 = (__int128 *)(*a4 + v9);
      *(_OWORD *)v24 = v13[2];
      *(_OWORD *)&v24[9] = *(__int128 *)((char *)v13 + 41);
      v22 = *v13;
      v14 = v22;
      v23 = v13[1];
      v15 = v23;
      v16 = *(v13 - 3);
      *v13 = *(v13 - 4);
      v13[1] = v16;
      v17 = *(v13 - 1);
      v13[2] = *(v13 - 2);
      v13[3] = v17;
      *(v13 - 4) = v14;
      *(__int128 *)((char *)v13 - 23) = *(_OWORD *)&v24[9];
      v18 = *(_OWORD *)v24;
      *(v13 - 3) = v15;
      *(v13 - 2) = v18;
      v9 -= 64;
      if (v5 == ++v8)
      {
LABEL_4:
        ++v5;
        v7 += 64;
        if (v5 == a2)
          return result;
        goto LABEL_5;
      }
    }
    v11 = 2;
LABEL_9:
    v12 = v21;
    if (!v21)
      goto LABEL_20;
LABEL_15:
    if ((_DWORD)v12 == 1)
    {
      v12 = 2;
    }
    else if (v20 == 0)
    {
      v12 = 3;
    }
    else
    {
      v12 = 1;
    }
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1BA5F1DB4(uint64_t a1)
{
  destroy for FeedGroupEmitterRuleOutput(a1);
  return a1;
}

uint64_t sub_1BA5F1DE8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t destroy for FeedGroupEmitterRuleOutput(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_1BA5F1DE8(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t sub_1BA5F1E28(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedGroupEmitterRuleOutput(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for FeedGroupEmitterRuleOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a2;
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1BA5F1EC8(v5, v6, v2);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t sub_1BA5F1EC8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t *sub_1BA5F1EE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v21;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 24;
  if (v8 <= v9)
    v10 = v9;
  else
    v10 = v8;
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84))
    v13 = *(_QWORD *)(v12 + 64);
  else
    v13 = *(_QWORD *)(v12 + 64) + 1;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  if (v15 > 3)
    goto LABEL_17;
  v16 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  v17 = 2;
  if (v16 > 0xFFDD)
    v17 = 4;
  if (v16 <= 0xDD)
LABEL_17:
    v17 = 1;
  v18 = v17 + v15;
  v19 = *(_DWORD *)(v12 + 80) | *(_DWORD *)(v5 + 80);
  if (v18 > 0x18 || (v19 & 0x1000F8) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + (((v19 & 0xF8 | 7u) + 16) & ~(unint64_t)(v19 & 0xF8 | 7u)));
    swift_retain();
    return a1;
  }
  if (v15 > 3)
    goto LABEL_27;
  v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v23 <= 0xFFDD)
  {
    if (v23 > 0xDD)
    {
      v24 = *(unsigned __int16 *)((char *)a2 + v15);
      if (v24 < 0x22)
        goto LABEL_36;
      goto LABEL_32;
    }
LABEL_27:
    v24 = *((unsigned __int8 *)a2 + v15);
    if (v24 < 0x22)
      goto LABEL_36;
LABEL_32:
    if (v15 <= 3)
      v25 = v15;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  v24 = *(_DWORD *)((char *)a2 + v15);
  if (v24 >= 0x22)
    goto LABEL_32;
LABEL_36:
  switch(v24)
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v15 <= 3)
      {
        v26 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v26 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 0;
          return a1;
        }
        if (v26 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 0;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 0;
      break;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v15 <= 3)
      {
        v27 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v27 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 1;
          return a1;
        }
        if (v27 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 1;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 1;
      break;
    case 2u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v28 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v28 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 2;
          return a1;
        }
        if (v28 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 2;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 2;
      break;
    case 3u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v29 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v29 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 3;
          return a1;
        }
        if (v29 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 3;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 3;
      break;
    case 4u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 4;
          return a1;
        }
        if (v30 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 4;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 4;
      break;
    case 5u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v31 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v33 = *(_OWORD *)v31;
      *(_QWORD *)(v33 + 16) = v32;
      if (v15 <= 3)
      {
        v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 5;
          return a1;
        }
        if (v34 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 5;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 5;
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 6;
          return a1;
        }
        if (v35 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 6;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 6;
      break;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 7;
          return a1;
        }
        if (v36 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 7;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 7;
      break;
    case 8u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 8;
          return a1;
        }
        if (v37 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 8;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 8;
      break;
    case 9u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 9;
          return a1;
        }
        if (v38 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 9;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 10;
          return a1;
        }
        if (v39 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 10;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 10;
      break;
    case 0xBu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 11;
          return a1;
        }
        if (v40 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 11;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 11;
      break;
    case 0xCu:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 12;
          return a1;
        }
        if (v41 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 12;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 12;
      break;
    case 0xDu:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 13;
          return a1;
        }
        if (v42 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 13;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 13;
      break;
    case 0xEu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 14;
          return a1;
        }
        if (v43 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 14;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 15;
          return a1;
        }
        if (v44 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 15;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 15;
      break;
    case 0x10u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 16;
          return a1;
        }
        if (v45 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 16;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 16;
      break;
    case 0x11u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 17;
          return a1;
        }
        if (v46 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 17;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 17;
      break;
    case 0x12u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 18;
          return a1;
        }
        if (v47 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 18;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 18;
      break;
    case 0x13u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 19;
          return a1;
        }
        if (v48 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 19;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 19;
      break;
    case 0x14u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 20;
          return a1;
        }
        if (v49 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 20;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 20;
      break;
    case 0x15u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 21;
          return a1;
        }
        if (v50 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 21;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 21;
      break;
    case 0x16u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 22;
          return a1;
        }
        if (v51 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 22;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 22;
      break;
    case 0x17u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 23;
          return a1;
        }
        if (v52 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 23;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 23;
      break;
    case 0x18u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 24;
          return a1;
        }
        if (v53 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 24;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 24;
      break;
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 25;
          return a1;
        }
        if (v54 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 25;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 > 3)
        goto LABEL_182;
      v65 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v65 > 0xFFDD)
      {
        *(_DWORD *)((char *)a1 + v15) = 26;
        return a1;
      }
      if (v65 <= 0xDD)
LABEL_182:
        *((_BYTE *)a1 + v15) = 26;
      else
        *(_WORD *)((char *)a1 + v15) = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v64 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v64 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 27;
          return a1;
        }
        if (v64 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 27;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 27;
      break;
    case 0x1Cu:
      v55 = a2[1];
      *a1 = *a2;
      a1[1] = v55;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 28;
          return a1;
        }
        if (v56 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 28;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 28;
      break;
    case 0x1Du:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 29;
          return a1;
        }
        if (v57 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 29;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 29;
      break;
    case 0x1Eu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 30;
          return a1;
        }
        if (v58 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 30;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 30;
      break;
    case 0x1Fu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v59 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 31;
          return a1;
        }
        if (v59 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 31;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 31;
      break;
    case 0x20u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v60 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v60 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 32;
          return a1;
        }
        if (v60 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 32;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 32;
      break;
    case 0x21u:
      *a1 = *a2;
      swift_retain();
      if (v15 <= 3)
      {
        v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 33;
          return a1;
        }
        if (v61 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 33;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 33;
      break;
    default:
      if (v15 > 3)
        goto LABEL_171;
      v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      v63 = 2;
      if (v62 > 0xFFDD)
        v63 = 4;
      if (v62 <= 0xDD)
LABEL_171:
        v63 = 1;
      memcpy(a1, a2, v63 + v15);
      break;
  }
  return a1;
}

uint64_t FeedGroupConfigType.rules<A>()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for FeedGroupEmitterRule(255, a2, a4, a4);
  sub_1BB874218();
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72);
  swift_allocObject();
  v8 = sub_1BB872E2C();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(a3 + 64))(a1, a3);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(a3 + 72))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v10 + 2 * v7) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v10 + 3 * v7) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 88))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v10 + 4 * v7) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v10 + 5 * v7) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 104))(a1, a3);
  swift_storeEnumTagMultiPayload();
  sub_1BB872EE0();
  return v8;
}

uint64_t type metadata accessor for FeedGroupEmitTask.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitTask.Errors);
}

uint64_t sub_1BA5F31D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v16;
  double v17;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[16];
  _BYTE v49[16];
  double v50;
  char v51;
  uint64_t v52;
  char v53;

  v42 = a3;
  v5 = *a1;
  v6 = sub_1BB87261C();
  v45 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB872688();
  v43 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v38 - v12;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  swift_allocObject();
  v14 = sub_1BB872E2C();
  *v15 = a1;
  v16 = *(_QWORD *)(v5 + *MEMORY[0x1E0DB4D18]);
  sub_1BB86EAAC();
  v47 = sub_1BA69C794(v14);
  sub_1BA5F360C(a2 + 16, (uint64_t)v49);
  sub_1BA5F360C((uint64_t)v49, (uint64_t)&v50);
  if (v51 == 1)
  {
    swift_retain();
  }
  else
  {
    v17 = v50;
    v41 = a2;
    v39 = v8;
    swift_getAssociatedTypeWitness();
    v40 = v6;
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedGroupEmitterOutput(255, AssociatedTypeWitness, AssociatedConformanceWitness, v20);
    v38[1] = sub_1BB86EAAC();
    swift_retain();
    sub_1BB87267C();
    MEMORY[0x1BCCE2FE0](v11, v17);
    v21 = *(void (**)(char *, uint64_t))(v43 + 8);
    v22 = v39;
    v21(v11, v39);
    sub_1BA657D64();
    v24 = v44;
    v23 = v45;
    v25 = v40;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, *MEMORY[0x1E0DEF530], v40);
    v26 = (void *)sub_1BB873498();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    v27 = sub_1BB86EA40();

    a2 = v41;
    v21(v13, v22);
    v52 = v27;
    sub_1BB872EE0();
    sub_1BB872EB0();
  }
  sub_1BA5F360C(a2 + 32, (uint64_t)v48);
  sub_1BA5F360C((uint64_t)v48, (uint64_t)&v52);
  if ((v53 & 1) == 0)
  {
    v28 = v52;
    v29 = (_QWORD *)swift_allocObject();
    v30 = *(_QWORD *)(v16 + 16);
    v29[2] = v30;
    v31 = *(_QWORD *)(v16 + 24);
    v29[3] = v31;
    v29[4] = v28;
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v30;
    v32[3] = v31;
    v32[4] = sub_1BA8DD114;
    v32[5] = v29;
    v33 = (void *)sub_1BB86E854();
    v34 = sub_1BB86E968();
    swift_release();

    v46 = v34;
    sub_1BB872EE0();
    sub_1BB872EB0();
  }
  v46 = v47;
  v35 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v35);
  v36 = sub_1BB86E950();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1BA5F360C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED3CF878, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA5F3668(double a1, uint64_t a2, uint64_t *a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v8 = *a3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a4;
  v10 = a5[1];
  *(_OWORD *)(v9 + 24) = *a5;
  *(_OWORD *)(v9 + 40) = v10;
  *(_OWORD *)(v9 + 50) = *(_OWORD *)((char *)a5 + 26);
  *(double *)(v9 + 72) = a1;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BB86E854();
  type metadata accessor for FeedGroupEmitTask(0, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), v12);
  v13 = sub_1BB86EA34();
  swift_release();

  return v13;
}

uint64_t sub_1BA5F3734()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BA5F3754()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1BA5F3774()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 104))();
}

uint64_t sub_1BA5F37AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 64))();
}

uint64_t FeedGroupEmitterType.priority.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 48))(a1, a2, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 112))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

void FeedGroupConfigType.priority.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BA5F39AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1BA5F39CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 96))();
}

void FeedGroupEmitterType.emitSettings(with:)(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 1;
}

uint64_t sub_1BA5F3A24(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BA5F3A44(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_1BA5F3A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char v14;
  _QWORD v16[2];

  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a4 + 8))(a3, a4, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA6BF694((uint64_t)v8);
    v14 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    v14 = sub_1BB86E8FC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return v14 & 1;
}

uint64_t sub_1BA5F3B7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAndExpression.init(from:)(a1, a2);
}

uint64_t FormatAndExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE71504();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7157C();
  sub_1BA4A2870(&qword_1ED3D0DA0, (uint64_t (*)(uint64_t))sub_1BAE7157C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v26 = v13;
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_256;
      *(&v26 - 3) = sub_1BAE715FC();
      *(&v26 - 2) = sub_1BA5F3EF0();
      *(&v26 - 1) = sub_1BAE71640();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E724D450);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA63C7BC();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5F3EF0()
{
  unint64_t result;

  result = qword_1ED3C80D0;
  if (!qword_1ED3C80D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1E58, &_s10CodingKeysON_256);
    atomic_store(result, (unint64_t *)&qword_1ED3C80D0);
  }
  return result;
}

uint64_t sub_1BA5F3F34(_QWORD *a1)
{
  return FormatFontScalingData.encode(to:)(a1);
}

uint64_t FormatFontScalingData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[4];
  int v25;
  _BYTE *v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v24[-v6];
  sub_1BAE91084(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)v1;
  v12 = *(_BYTE *)(v1 + 8);
  v25 = *(unsigned __int8 *)(v1 + 9);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE90F7C();
  v16 = sub_1BA4A2870(&qword_1ED3D0FD0, (uint64_t (*)(uint64_t))sub_1BAE90F7C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFontScalingData, v17, v13, (uint64_t)&type metadata for FormatFontScalingData, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD4DA20(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BAD18040(v25, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE91084);
}

unint64_t sub_1BA5F41DC()
{
  unint64_t result;

  result = qword_1ED39B828;
  if (!qword_1ED39B828)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39B828);
  }
  return result;
}

uint64_t sub_1BA5F4220(_QWORD *a1)
{
  return FormatSymbolName.encode(to:)(a1);
}

uint64_t FormatSymbolName.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[24];
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v33[-v7 - 8];
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v33[-v13 - 8];
  v16 = *(_QWORD *)v1;
  v15 = *(_QWORD *)(v1 + 8);
  v17 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v18 = a1[3];
    v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    sub_1BA6B8518();
    sub_1BA6EC090((uint64_t)&type metadata for FormatCodingKeys, v20, v18, (uint64_t)&type metadata for FormatVersions.JazzkonG, v19, (uint64_t)&off_1E734BD00, (uint64_t)v14);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C38);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACFB090(0, v16, v15, v17, (uint64_t)v8);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  else
  {
    v24 = a1[3];
    v25 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v24);
    v26 = swift_bridgeObjectRetain();
    if ((sub_1BA5F45FC(v26, v24, (uint64_t)&type metadata for FormatVersions.JazzkonG, v25, (uint64_t)&off_1E734BD00) & 1) != 0)
    {
      v27 = a1[3];
      v28 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v27);
      sub_1BA6B8518();
      sub_1BA6EC090((uint64_t)&type metadata for FormatCodingKeys, v29, v27, (uint64_t)&type metadata for FormatVersions.JazzkonG, v28, (uint64_t)&off_1E734BD00, (uint64_t)v11);
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v30 = sub_1BB86EB84();
      v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C38);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v5, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5F4964(1, v16, v15, (uint64_t)v5);
      sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      sub_1BA60DFC4(v16, v15, v17, 0);
      return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1BB8746B0();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
      sub_1BB8743E0();
      sub_1BA60DFC4(v16, v15, v17, 0);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
  }
}

uint64_t sub_1BA5F45FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a1;
  v45 = a5;
  v9 = sub_1BB86EB84();
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v11);
  v40[0] = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatVersionInfo(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C7A78, v23, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v40 - v25;
  v46 = v5;
  v40[1] = a4;
  v27 = sub_1BB872874();
  Dictionary<>.formatCodingVersionInfo.getter(v27, (uint64_t)v26);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v26, 1, v19))
  {
    sub_1BA6ED6EC((uint64_t)v26, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v28 = 2;
    v29 = v44;
    v30 = v45;
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v22, type metadata accessor for FormatVersionInfo);
    sub_1BA6ED6EC((uint64_t)v26, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v31 = v44;
    v30 = v45;
    v32 = sub_1BA9FB1D8(v44, a3, v45);
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionInfo);
    v28 = v32 & 1;
    v29 = v31;
  }
  v33 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v18, v29, a3);
  v34 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v15, v46, a2);
  if (v28 == 2)
  {
    v35 = v40[0];
    sub_1BA6EDC70((uint64_t)v18, a3, v30);
    v36 = sub_1BB872874();
    v37 = v41;
    Dictionary<>.formatVersion.getter(v36, v41);
    swift_bridgeObjectRelease();
    v38 = sub_1BA5F4AF0(v37);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v37, v43);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, a2);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, a2);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, a3);
    v38 = v28 != 0;
  }
  return v38 & 1;
}

uint64_t sub_1BA5F4964(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF7A2C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5F4F18();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA5F4AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  int EnumCaseMultiPayload;
  char v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;

  v2 = v1;
  v4 = sub_1BB86EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v32 - v17;
  v19 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v21, v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v21, v4);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
    v24 = sub_1BB87291C() ^ 1;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BAA00E84(0, (unint64_t *)&qword_1EF2A98B0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v21, v4);
    v24 = sub_1BB86EB30();
LABEL_5:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return v24 & 1;
  }
  sub_1BA6F3F88();
  v26 = &v21[*(int *)(v25 + 48)];
  swift_bridgeObjectRelease();
  v27 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v27(v15, v21, v4);
  v27(v12, v26, v4);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
  LOBYTE(v26) = sub_1BB87291C();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v28(v9, a1, v4);
  v29 = v33;
  v28(v33, (uint64_t)v12, v4);
  if ((v26 & 1) != 0)
    v24 = 0;
  else
    v24 = sub_1BB86EB30();
  v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v29, v4);
  v30(v9, v4);
  v30(v12, v4);
  v30(v15, v4);
  return v24 & 1;
}

uint64_t sub_1BA5F4DE8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_1BB86EB84();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    sub_1BA6F3F88();
    v11 = v10;
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    v7 = *(int *)(v11 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v15 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_7;
    }
    v5 = sub_1BB86EB84();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    sub_1BAA00E84(0, (unint64_t *)&qword_1EF2A98B0);
    v7 = *(int *)(v6 + 48);
  }
  v12 = (_QWORD *)(a1 + v7);
  v13 = (_QWORD *)(a2 + v7);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t sub_1BA5F4F18()
{
  unint64_t result;

  result = qword_1ED39B378;
  if (!qword_1ED39B378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2018, &type metadata for FormatSymbolName.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39B378);
  }
  return result;
}

uint64_t sub_1BA5F4F5C(_QWORD *a1)
{
  return FormatPoint.encode(to:)(a1);
}

uint64_t FormatPoint.encode(to:)(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  sub_1BAE737C0(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v13 = v1[1];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE736B8();
  v18 = sub_1BA4A2870(&qword_1ED3D14B0, (uint64_t (*)(uint64_t))sub_1BAE736B8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPoint, v19, v15, (uint64_t)&type metadata for FormatPoint, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD241E4(0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v14);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v22(v6, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD241E4(1, 0, 0, (uint64_t)v6, (uint64_t)sub_1BA90CF04, 0, v13);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE737C0);
}

double sub_1BA5F51F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;

  return sub_1BA5F520C(a1, v3, a2, a3);
}

double sub_1BA5F520C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double result;
  __int128 v13;
  char v14;

  v7 = type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(*a2 + 80), *(_QWORD *)(*a2 + 88), a3);
  *(_QWORD *)(a4 + 24) = v7;
  *(_QWORD *)(a4 + 32) = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterRule<A>, v7);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_0, a1, v7);
  v9 = a2[8];
  v10 = *(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 224));
  swift_bridgeObjectRetain();
  FeedGroupEmitterRule.evaluate(cursor:slots:)(v9, v10, v7, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  v11 = v14;
  result = *(double *)&v13;
  *(_OWORD *)(a4 + 40) = v13;
  *(_BYTE *)(a4 + 56) = v11;
  return result;
}

uint64_t type metadata accessor for FeedGroupEmitterRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitterRule);
}

void FeedGroupEmitterRule.evaluate(cursor:slots:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t AssociatedConformanceWitness;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD v64[16];
  uint64_t AssociatedTypeWitness;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v95 = a4;
  v86 = a2;
  v94 = a1;
  v84 = sub_1BB86EB84();
  v83 = *(_QWORD *)(v84 - 8);
  v5 = MEMORY[0x1E0C80A78](v84);
  v64[4] = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v64[12] = (char *)v64 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v64[3] = (char *)v64 - v10;
  MEMORY[0x1E0C80A78](v9);
  v64[11] = (char *)v64 - v11;
  sub_1BA4A3FB4(0, &qword_1ED3B0930, v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v64[10] = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v70 = (char *)v64 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v72 = (char *)v64 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v64[9] = (char *)v64 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v69 = (char *)v64 - v23;
  MEMORY[0x1E0C80A78](v22);
  v71 = (char *)v64 - v24;
  v82 = sub_1BB86CAC0();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1BB86CAD8();
  v78 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v77 = (char *)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a3 + 16);
  v27 = *(_QWORD *)(a3 + 24);
  v30 = type metadata accessor for FeedCursorGroup(255, v28, v27, v29);
  v75 = sub_1BB873A2C();
  v74 = *(_QWORD *)(v75 - 8);
  v31 = MEMORY[0x1E0C80A78](v75);
  v64[6] = (char *)v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v67 = (char *)v64 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v64[5] = (char *)v64 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v66 = (char *)v64 - v38;
  v93 = v30;
  v85 = *(_QWORD *)(v30 - 8);
  v39 = MEMORY[0x1E0C80A78](v37);
  v64[2] = (char *)v64 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v39);
  v64[8] = (char *)v64 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v64[1] = (char *)v64 - v44;
  MEMORY[0x1E0C80A78](v43);
  v64[7] = (char *)v64 - v45;
  sub_1BA5F9880();
  MEMORY[0x1E0C80A78](v46);
  v68 = (char *)v64 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v64[14] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v64[15] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v64[13] = (char *)v64 - v48;
  v49 = swift_checkMetadataState();
  MEMORY[0x1E0C80A78](v49);
  swift_getAssociatedTypeWitness();
  v90 = v28;
  v91 = v27;
  swift_getAssociatedConformanceWitness();
  v50 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v87 = v50;
  v88 = AssociatedConformanceWitness;
  v92 = swift_getAssociatedTypeWitness();
  v89 = *(_QWORD *)(v92 - 8);
  v52 = MEMORY[0x1E0C80A78](v92);
  v53 = MEMORY[0x1E0C80A78](v52);
  v54 = MEMORY[0x1E0C80A78](v53);
  v73 = (char *)v64 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v57 = MEMORY[0x1E0C80A78](v56);
  v58 = MEMORY[0x1E0C80A78](v57);
  v76 = (char *)v64 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  MEMORY[0x1E0C80A78](v60);
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))((char *)v64 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0), v96, a3);
  v63 = (char *)&loc_1BA5F5A04 + dword_1BAA52674[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BA5F5A14()
{
  _BYTE *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  if (*v0)
    v2 = 0;
  else
    v2 = 0xD000000000000018;
  v3 = 0x80000001BB968C40;
  if (*v0)
  {
    v3 = 0;
    v4 = 2;
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v1 - 176);
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
}

_QWORD *sub_1BA5F8834(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  __int16 v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 24;
  if (v8 <= v9)
    v10 = v9;
  else
    v10 = v8;
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84))
    v13 = *(_QWORD *)(v12 + 64);
  else
    v13 = *(_QWORD *)(v12 + 64) + 1;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  if (v15 > 3)
    goto LABEL_16;
  v16 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v16 <= 0xFFDD)
  {
    if (v16 > 0xDD)
    {
      v17 = *(unsigned __int16 *)((char *)a2 + v15);
      if (v17 < 0x22)
        goto LABEL_25;
      goto LABEL_21;
    }
LABEL_16:
    v17 = *((unsigned __int8 *)a2 + v15);
    if (v17 < 0x22)
      goto LABEL_25;
LABEL_21:
    if (v15 <= 3)
      v18 = v15;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  v17 = *(_DWORD *)((char *)a2 + v15);
  if (v17 >= 0x22)
    goto LABEL_21;
LABEL_25:
  switch(v17)
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v15 <= 3)
      {
        v19 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v19 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 0;
          return a1;
        }
        if (v19 > 0xDD)
        {
          *(_WORD *)((char *)a1 + v15) = 0;
          return a1;
        }
      }
      *((_BYTE *)a1 + v15) = 0;
      break;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v15 <= 3)
      {
        v20 = 1;
        v21 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v21 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 1;
          return a1;
        }
        if (v21 > 0xDD)
          goto LABEL_241;
      }
      *((_BYTE *)a1 + v15) = 1;
      break;
    case 2u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v22 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v22 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 2;
          return a1;
        }
        if (v22 > 0xDD)
        {
          v20 = 2;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 2;
      break;
    case 3u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v23 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 3;
          return a1;
        }
        if (v23 > 0xDD)
        {
          v20 = 3;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 3;
      break;
    case 4u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v24 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v24 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 4;
          return a1;
        }
        if (v24 > 0xDD)
        {
          v20 = 4;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 4;
      break;
    case 5u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v25 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v27 = *(_OWORD *)v25;
      *(_QWORD *)(v27 + 16) = v26;
      if (v15 <= 3)
      {
        v28 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v28 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 5;
          return a1;
        }
        if (v28 > 0xDD)
        {
          v20 = 5;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 5;
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v29 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v29 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 6;
          return a1;
        }
        if (v29 > 0xDD)
        {
          v20 = 6;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 6;
      break;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 7;
          return a1;
        }
        if (v30 > 0xDD)
        {
          v20 = 7;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 7;
      break;
    case 8u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 8;
          return a1;
        }
        if (v31 > 0xDD)
        {
          v20 = 8;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 8;
      break;
    case 9u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 9;
          return a1;
        }
        if (v32 > 0xDD)
        {
          v20 = 9;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v33 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v33 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 10;
          return a1;
        }
        if (v33 > 0xDD)
        {
          v20 = 10;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 10;
      break;
    case 0xBu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 11;
          return a1;
        }
        if (v34 > 0xDD)
        {
          v20 = 11;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 11;
      break;
    case 0xCu:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 12;
          return a1;
        }
        if (v35 > 0xDD)
        {
          v20 = 12;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 12;
      break;
    case 0xDu:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 13;
          return a1;
        }
        if (v36 > 0xDD)
        {
          v20 = 13;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 13;
      break;
    case 0xEu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 14;
          return a1;
        }
        if (v37 > 0xDD)
        {
          v20 = 14;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 15;
          return a1;
        }
        if (v38 > 0xDD)
        {
          v20 = 15;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 15;
      break;
    case 0x10u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 16;
          return a1;
        }
        if (v39 > 0xDD)
        {
          v20 = 16;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 16;
      break;
    case 0x11u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 17;
          return a1;
        }
        if (v40 > 0xDD)
        {
          v20 = 17;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 17;
      break;
    case 0x12u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 18;
          return a1;
        }
        if (v41 > 0xDD)
        {
          v20 = 18;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 18;
      break;
    case 0x13u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 19;
          return a1;
        }
        if (v42 > 0xDD)
        {
          v20 = 19;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 19;
      break;
    case 0x14u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 20;
          return a1;
        }
        if (v43 > 0xDD)
        {
          v20 = 20;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 20;
      break;
    case 0x15u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 21;
          return a1;
        }
        if (v44 > 0xDD)
        {
          v20 = 21;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 21;
      break;
    case 0x16u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 22;
          return a1;
        }
        if (v45 > 0xDD)
        {
          v20 = 22;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 22;
      break;
    case 0x17u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 23;
          return a1;
        }
        if (v46 > 0xDD)
        {
          v20 = 23;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 23;
      break;
    case 0x18u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 24;
          return a1;
        }
        if (v47 > 0xDD)
        {
          v20 = 24;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 24;
      break;
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 25;
          return a1;
        }
        if (v48 > 0xDD)
        {
          v20 = 25;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v59 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 26;
          return a1;
        }
        if (v59 > 0xDD)
        {
          v20 = 26;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 27;
          return a1;
        }
        if (v58 > 0xDD)
        {
          v20 = 27;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 27;
      break;
    case 0x1Cu:
      v49 = a2[1];
      *a1 = *a2;
      a1[1] = v49;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 28;
          return a1;
        }
        if (v50 > 0xDD)
        {
          v20 = 28;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 28;
      break;
    case 0x1Du:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 29;
          return a1;
        }
        if (v51 > 0xDD)
        {
          v20 = 29;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 29;
      break;
    case 0x1Eu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 30;
          return a1;
        }
        if (v52 > 0xDD)
        {
          v20 = 30;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 30;
      break;
    case 0x1Fu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 31;
          return a1;
        }
        if (v53 > 0xDD)
        {
          v20 = 31;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 31;
      break;
    case 0x20u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDD)
        {
          *(_DWORD *)((char *)a1 + v15) = 32;
          return a1;
        }
        if (v54 > 0xDD)
        {
          v20 = 32;
          goto LABEL_241;
        }
      }
      *((_BYTE *)a1 + v15) = 32;
      break;
    case 0x21u:
      *a1 = *a2;
      swift_retain();
      if (v15 > 3)
        goto LABEL_155;
      v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v55 > 0xFFDD)
      {
        *(_DWORD *)((char *)a1 + v15) = 33;
        return a1;
      }
      if (v55 > 0xDD)
      {
        v20 = 33;
LABEL_241:
        *(_WORD *)((char *)a1 + v15) = v20;
      }
      else
      {
LABEL_155:
        *((_BYTE *)a1 + v15) = 33;
      }
      break;
    default:
      if (v15 > 3)
        goto LABEL_160;
      v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      v57 = 2;
      if (v56 > 0xFFDD)
        v57 = 4;
      if (v56 <= 0xDD)
LABEL_160:
        v57 = 1;
      memcpy(a1, a2, v57 + v15);
      break;
  }
  return a1;
}

