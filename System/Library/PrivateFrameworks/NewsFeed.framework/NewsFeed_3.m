uint64_t sub_1BA6ABDF8(uint64_t a1)
{
  destroy for GroupLayoutBindingContext.OrderedItemBinding(a1);
  return a1;
}

uint64_t destroy for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

uint64_t sub_1BA6ABE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  if (a3 && (a2 != 42 || a3 != 0xE100000000000000) && (sub_1BB874398() & 1) == 0)
  {
    v8 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain();
    if (v9)
    {
      v10 = sub_1BA6E35A8(a2, a3);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + (v10 << 6) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = swift_bridgeObjectRetain();
        v14 = sub_1BA6AC3AC(v13, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    if ((*(_BYTE *)(v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 64)) & 1) == 0)
    {
      sub_1BA7C5828();
      swift_allocError();
      *(_QWORD *)v26 = a2;
      *(_QWORD *)(v26 + 8) = a3;
      *(_OWORD *)(v26 + 16) = 0u;
      *(_OWORD *)(v26 + 32) = 0u;
      *(_OWORD *)(v26 + 48) = 0u;
      *(_BYTE *)(v26 + 64) = 3;
      swift_willThrow();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 64)) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BACAB478(v15);
    swift_bridgeObjectRelease();
    v17 = sub_1BAC9C19C(v16);
    swift_release();
    v27 = MEMORY[0x1E0DEE9D8];
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v18; ++i)
      {
        v20 = swift_bridgeObjectRetain();
        sub_1BA67FB48(v20);
      }
      swift_bridgeObjectRelease_n();
      v21 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
      v21 = MEMORY[0x1E0DEE9D8];
    }
    v22 = sub_1BA6E43EC(v21);
    swift_bridgeObjectRelease();
    v23 = swift_bridgeObjectRetain();
    v24 = sub_1BA6ACCBC(v23, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  return a1;
}

uint64_t sub_1BA6AC114(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v8;
  uint64_t i;
  __int128 v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  result = MEMORY[0x1E0DEE9D8];
  v34 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    for (i = a1 + 32; ; i += 72)
    {
      sub_1BA6AC300(i, (uint64_t)&v29);
      v13 = v30;
      v14 = (_QWORD)v29 == a2 && *((_QWORD *)&v29 + 1) == a3;
      if (!v14 && (sub_1BB874398() & 1) == 0)
        break;
      if (*((_QWORD *)&v13 + 1))
      {
        if (!a5 || v13 != __PAIR128__(a5, a4) && (sub_1BB874398() & 1) == 0)
          break;
      }
      else if (a5)
      {
        break;
      }
      __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
      v15 = sub_1BB86DEE8();
      v17 = sub_1BA761FE4(v15, v16, a6);
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        break;
      sub_1BA6ABDF8((uint64_t)&v29);
LABEL_4:
      if (!--v8)
        return v34;
    }
    v26 = v31;
    v27 = v32;
    v28 = v33;
    v24 = v29;
    v25 = v30;
    v18 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BA6ACB04(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v34;
    }
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(_QWORD *)(v18 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1BA6ACB04(v19 > 1, v20 + 1, 1);
      v18 = v34;
    }
    *(_QWORD *)(v18 + 16) = v20 + 1;
    v21 = v18 + 72 * v20;
    *(_OWORD *)(v21 + 32) = v24;
    *(_QWORD *)(v21 + 96) = v28;
    *(_OWORD *)(v21 + 64) = v26;
    *(_OWORD *)(v21 + 80) = v27;
    *(_OWORD *)(v21 + 48) = v25;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1BA6AC300(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GroupLayoutBindingContext.OrderedItemBinding(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = a2 + 32;
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v5, v7);
  return a1;
}

uint64_t sub_1BA6AC3AC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  result = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = 0;
    v32 = a1 + 32;
    v7 = a2 + 56;
    while (1)
    {
      sub_1BA4C010C(v32 + 40 * v6, (uint64_t)&v36);
      __swift_project_boxed_opaque_existential_1(&v36, v37);
      v8 = sub_1BB86DEE8();
      v10 = v9;
      if (*(_QWORD *)(a2 + 16))
      {
        v11 = v8;
        sub_1BB8745CC();
        sub_1BB872A90();
        v12 = sub_1BB874608();
        v13 = -1 << *(_BYTE *)(a2 + 32);
        v14 = v12 & ~v13;
        if (((*(_QWORD *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
        {
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_QWORD *)(v15 + 16 * v14);
          v17 = *v16 == v11 && v16[1] == v10;
          if (v17 || (sub_1BB874398() & 1) != 0)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            sub_1BA4CECCC(&v36, (uint64_t)v33);
            v18 = v38;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BA6EFF20(0, *(_QWORD *)(v18 + 16) + 1, 1);
              v18 = v38;
            }
            v20 = *(_QWORD *)(v18 + 16);
            v19 = *(_QWORD *)(v18 + 24);
            if (v20 >= v19 >> 1)
              sub_1BA6EFF20(v19 > 1, v20 + 1, 1);
            v21 = v34;
            v22 = v35;
            v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
            v24 = MEMORY[0x1E0C80A78](v23);
            v26 = (char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v27 + 16))(v26, v24);
            sub_1BA6AC628(v20, (uint64_t)v26, &v38, v21, v22);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
            goto LABEL_4;
          }
          v28 = ~v13;
          while (1)
          {
            v14 = (v14 + 1) & v28;
            if (((*(_QWORD *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
              break;
            v29 = (_QWORD *)(v15 + 16 * v14);
            v30 = *v29 == v11 && v29[1] == v10;
            if (v30 || (sub_1BB874398() & 1) != 0)
              goto LABEL_12;
          }
        }
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
LABEL_4:
      if (++v6 == v4)
        return v38;
    }
  }
  return result;
}

uint64_t sub_1BA6AC628(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BA4CECCC(&v12, v10 + 40 * a1 + 32);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedBannerAd(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB8721C0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    if (v19 >= 0x11)
    {
      *v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return v4;
}

int64_t sub_1BA6AC7A0(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6AC7E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1BB4376E8();
  result = sub_1BB873F6C();
  v9 = result;
  v35 = a1;
  v36 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  v37 = v4;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v36)
        return v9;
      v16 = v35[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v36)
          return v9;
        v16 = v35[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v36)
            return v9;
          v16 = v35[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v36)
              return v9;
            v16 = v35[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v36)
                  return v9;
                v16 = v35[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v4 + 56) + (v14 << 6);
    v22 = *(_QWORD *)v21;
    v39 = *(_OWORD *)(v21 + 24);
    v40 = *(_OWORD *)(v21 + 8);
    v38 = *(_OWORD *)(v21 + 40);
    v23 = *(_QWORD *)(v21 + 56);
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    result = sub_1BB874608();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v31 == -1);
      v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v27);
    *v32 = v20;
    v32[1] = v19;
    v33 = *(_QWORD *)(v9 + 56) + (v27 << 6);
    *(_QWORD *)v33 = v22;
    *(_OWORD *)(v33 + 8) = v40;
    *(_OWORD *)(v33 + 24) = v39;
    *(_OWORD *)(v33 + 40) = v38;
    *(_QWORD *)(v33 + 56) = v23;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v37;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BA6ACB04(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6ACB20(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA6ACB20(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3B9F50, (uint64_t)&type metadata for GroupLayoutBindingContext.OrderedItemBinding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8])
      memmove(v12, v13, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6ACCBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  result = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = 0;
    v32 = a1 + 32;
    v7 = a2 + 56;
    while (1)
    {
      sub_1BA4C010C(v32 + 40 * v6, (uint64_t)&v36);
      __swift_project_boxed_opaque_existential_1(&v36, v37);
      v8 = sub_1BB86DEE8();
      v10 = v9;
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_20;
      v11 = v8;
      sub_1BB8745CC();
      sub_1BB872A90();
      v12 = sub_1BB874608();
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_20;
      v15 = *(_QWORD *)(a2 + 48);
      v16 = (_QWORD *)(v15 + 16 * v14);
      v17 = *v16 == v11 && v16[1] == v10;
      if (!v17 && (sub_1BB874398() & 1) == 0)
        break;
LABEL_3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
LABEL_4:
      if (++v6 == v4)
        return v38;
    }
    v18 = ~v13;
    while (1)
    {
      v14 = (v14 + 1) & v18;
      if (((*(_QWORD *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        break;
      v19 = (_QWORD *)(v15 + 16 * v14);
      v20 = *v19 == v11 && v19[1] == v10;
      if (v20 || (sub_1BB874398() & 1) != 0)
        goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1BA4CECCC(&v36, (uint64_t)v33);
    v21 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BA6EFF20(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v21 = v38;
    }
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    if (v23 >= v22 >> 1)
      sub_1BA6EFF20(v22 > 1, v23 + 1, 1);
    v24 = v34;
    v25 = v35;
    v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    v27 = MEMORY[0x1E0C80A78](v26);
    v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v30 + 16))(v29, v27);
    sub_1BA6AC628(v23, (uint64_t)v29, &v38, v24, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    goto LABEL_4;
  }
  return result;
}

uint64_t initializeWithCopy for FeedGap(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = (_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v6 >= 0x11)
  {
    *(_QWORD *)(a1 + 40) = *v5;
    *(_QWORD *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
  }
  return a1;
}

uint64_t sub_1BA6ACFAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5)
          goto LABEL_17;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1BA6F0104();
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6AD14C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B2D18, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA6AD168(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C328C, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  *v3 = result;
  return result;
}

void sub_1BA6AD194(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;

  v57 = a4;
  v59 = a3;
  v60 = a2;
  v58 = a1;
  v7 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6AD14C(0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6ADE88(0);
  MEMORY[0x1E0C80A78](v11);
  v53 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v51 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v51 - v20;
  v56 = type metadata accessor for FeedBannerAd();
  v22 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v51 - v26;
  v28 = v7[19];
  v29 = *(_QWORD *)(v5 + v28);
  if (v29 < *(_QWORD *)(v5 + v7[17]))
  {
    v52 = a5;
    sub_1BA6AD74C(v58, v59 | 0x1000, v60, 0, 1, v57 & 1, (uint64_t)v21);
    sub_1BA6ADD14(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v21, 1, v30) != 1)
    {
      swift_bridgeObjectRelease();
      sub_1BA5193C4((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      sub_1BA5193C4((uint64_t)v24, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v47 = v52;
      sub_1BA5193C4((uint64_t)v27, v52, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v47, 0, 1, v56);
      return;
    }
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6ADE88);
    v29 = *(_QWORD *)(v5 + v28);
    a5 = v52;
  }
  v31 = *(_QWORD *)(v5 + v7[18]);
  v32 = __OFSUB__(v31, v29);
  v33 = v31 - v29;
  if (v32)
  {
    __break(1u);
  }
  else if (v33 < 1)
  {
    sub_1BA6AD74C(v58, v59, v60, 4096, 0, v57 & 1, (uint64_t)v15);
    sub_1BA6ADD14(0);
    v41 = v40;
    v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48);
    v43 = v42(v15, 1, v40);
    v44 = v56;
    if (v43 == 1)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6ADE88);
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v46 = v54;
      v45(v54, 1, 1, v44);
    }
    else
    {
      swift_bridgeObjectRelease();
      v46 = v54;
      sub_1BA5193C4((uint64_t)v15, v54, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v45(v46, 0, 1, v44);
    }
    v48 = v55;
    sub_1BA4C2DD8(v5, v55, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v46, 1, v44) == 1)
    {
      v49 = v53;
      sub_1BA6AD74C(v58, v59, v60, 0, 1, v57 & 1, v53);
      if (v42((char *)v49, 1, v41) == 1)
      {
        sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BA6ADE88);
        v50 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1BA5193C4(v49, a5, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
        v50 = 0;
      }
      v45(a5, v50, 1, v44);
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BA6AD14C);
    }
    else
    {
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA5193C4(v46, a5, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v45(a5, 0, 1, v44);
    }
  }
  else
  {
    sub_1BA6AD74C(v58, v59, v60, 0, 1, v57 & 1, (uint64_t)v18);
    sub_1BA6ADD14(0);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v18, 1, v34);
    v36 = v56;
    if (v35 == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6ADE88);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v38 = a5;
      v39 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BA5193C4((uint64_t)v18, a5, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v38 = a5;
      v39 = 0;
    }
    v37(v38, v39, 1, v36);
  }
}

void sub_1BA6AD6B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BA4B07F0(255, a4, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t storeEnumTagSinglePayload for FeedBannerAd()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA6AD74C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  char *v7;
  char *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  unint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  int v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v8 = v7;
  v61 = a6;
  LODWORD(v65) = a5;
  v64 = a4;
  v67 = a2;
  sub_1BA6ADDD4(0, &qword_1ED3B2D20, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, &qword_1ED3B9378);
  MEMORY[0x1E0C80A78](v12);
  v58 = (unint64_t)&v57 - v13;
  v66 = type metadata accessor for FeedBannerAd();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v60 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  sub_1BA6AA10C(0, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v62 = (char *)&v57 - v21;
  sub_1BA6ADD80(0, (unint64_t *)&unk_1ED3B9710, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  MEMORY[0x1E0C80A78](v22);
  v24 = (unint64_t *)((char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v27 = (unint64_t *)((char *)&v57 - v26);
  v28 = a1[2];
  if (!v28)
  {
    sub_1BA6ADD14(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a7, 1, 1, v32);
  }
  v29 = *v8;
  v59 = (unint64_t *)a7;
  if ((v29 & 1) != 0 || !a3)
  {
    v31 = swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v30 = sub_1BAC9DE64(a1);
    swift_release();
    v31 = v30;
    v28 = *(_QWORD *)(v30 + 16);
  }
  v34 = v65 | (v64 == 0);
  v65 = v31;
  swift_bridgeObjectRetain();
  v35 = 0;
  v36 = type metadata accessor for FeedBannerAd;
  while (1)
  {
    if (v35 == v28)
    {
      v37 = 1;
      v35 = v28;
    }
    else
    {
      if (v35 >= *(_QWORD *)(v65 + 16))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v38 = (uint64_t)&v62[*(int *)(v19 + 48)];
      sub_1BA4C2DD8(v65+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v63 + 72) * v35, v38, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v39 = (uint64_t)v24 + *(int *)(v19 + 48);
      *v24 = v35;
      sub_1BA5193C4(v38, v39, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v37 = 0;
      ++v35;
    }
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v24, v37, 1, v19);
    sub_1BA6ADD30((uint64_t)v24, (uint64_t)v27, (unint64_t *)&unk_1ED3B9710, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v20 + 48))(v27, 1, v19) == 1)
      break;
    v40 = *v27;
    sub_1BA5193C4((uint64_t)v27 + *(int *)(v19 + 48), (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    v41 = *(_QWORD *)&v17[*(int *)(v66 + 24)];
    v42 = (v34 & 1) == 0 && (v64 & ~v41) == 0;
    if ((v67 & ~v41) == 0 && !v42)
    {
      v43 = v65;
      swift_bridgeObjectRelease();
      v68 = v43;
      v44 = v60;
      sub_1BAA66FF8(v40, v60);
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      sub_1BA6ADD14(0);
      v46 = v45;
      v47 = *(int *)(v45 + 48);
      v48 = v44;
      v24 = v59;
      sub_1BA5193C4(v48, (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      *(unint64_t *)((char *)v24 + v47) = v68;
      return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v24, 0, 1, v46);
    }
    v36 = type metadata accessor for FeedBannerAd;
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  }
  v36 = (uint64_t (*)())v65;
  swift_bridgeObjectRelease();
  if ((v61 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1BA6ADD14(0);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v59, 1, 1, v49);
  }
  v24 = v59;
  if (!v28)
    goto LABEL_34;
  v50 = *(_QWORD *)(v65 + 16);
  v35 = v58;
  if (!v50)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v36 = (uint64_t (*)())(v65
                      + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80)));
  sub_1BA4C2DD8((uint64_t)v36, v58, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  if (v50 < v28)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    v56 = v65;
    swift_bridgeObjectRelease();
    v53 = sub_1BA85CC20(v56, (uint64_t)v36, 1, (2 * v28) | 1);
    goto LABEL_30;
  }
  sub_1BB874434();
  swift_unknownObjectRetain_n();
  v51 = swift_dynamicCastClass();
  if (!v51)
  {
    swift_bridgeObjectRelease();
    v51 = MEMORY[0x1E0DEE9D8];
  }
  v52 = *(_QWORD *)(v51 + 16);
  swift_release();
  if (v52 != v28 - 1)
    goto LABEL_37;
  v53 = swift_dynamicCastClass();
  if (!v53)
  {
    swift_bridgeObjectRelease();
    v53 = MEMORY[0x1E0DEE9D8];
  }
LABEL_30:
  swift_bridgeObjectRelease();
  sub_1BA6ADD14(0);
  v46 = v54;
  v55 = *(int *)(v54 + 48);
  sub_1BA5193C4(v35, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  *(unint64_t *)((char *)v24 + v55) = v53;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v24, 0, 1, v46);
}

uint64_t getEnumTagSinglePayload for FeedBannerAd()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BA6ADD14(uint64_t a1)
{
  sub_1BA6AD6B0(a1, &qword_1ED3B2CF8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, &qword_1ED3B9378);
}

uint64_t sub_1BA6ADD30(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v7;

  sub_1BA6ADD80(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BA6ADD80(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA6AA10C(255, a3, a4);
    v5 = sub_1BB873A2C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BA6ADDD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BA4B07F0(255, a4, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA6ADE60(unint64_t a1)
{
  return sub_1BA6ADE74(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BA6ADE74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9D40, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd);
}

void sub_1BA6ADE88(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B2D00, (uint64_t (*)(uint64_t))sub_1BA6ADD14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

BOOL sub_1BA6ADEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA7693E8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BA6ADEB0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  void (*v59)(uint64_t, void *, uint64_t);
  void *__dst;
  _OWORD *__dsta;
  void *__dstb;
  int *v63;
  uint64_t *v64;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    v63 = a3;
    v64 = a2;
    v12 = a3[6];
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1BB86D7A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = (int *)type metadata accessor for GroupLayoutContext();
    v17 = v16[5];
    v18 = v13 + v17;
    v19 = v14 + v17;
    v20 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = v16[6];
    v22 = v13 + v21;
    v23 = v14 + v21;
    *(_OWORD *)v22 = *(_OWORD *)(v14 + v21);
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(_BYTE *)(v22 + 19) = *(_BYTE *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    v24 = *(_QWORD *)(v14 + v21 + 24);
    if (v24 >= 2)
      v24 = swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 24) = v24;
    v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    v27 = (const void *)(v23 + v26);
    v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(_QWORD *)(v22 + *(int *)(v25 + 40)) = *(_QWORD *)(v23 + *(int *)(v25 + 40));
    *(_QWORD *)(v13 + v16[7]) = *(_QWORD *)(v14 + v16[7]);
    *(_QWORD *)(v13 + v16[8]) = *(_QWORD *)(v14 + v16[8]);
    *(_BYTE *)(v13 + v16[9]) = *(_BYTE *)(v14 + v16[9]);
    *(_QWORD *)(v13 + v16[10]) = *(_QWORD *)(v14 + v16[10]);
    *(_BYTE *)(v13 + v16[11]) = *(_BYTE *)(v14 + v16[11]);
    *(_QWORD *)(v13 + v16[12]) = *(_QWORD *)(v14 + v16[12]);
    v32 = v63[8];
    *(_QWORD *)(a1 + v63[7]) = *(uint64_t *)((char *)v64 + v63[7]);
    v33 = a1 + v32;
    v34 = (uint64_t)v64 + v32;
    v35 = *(uint64_t *)((char *)v64 + v32 + 8);
    *(_QWORD *)v33 = *(uint64_t *)((char *)v64 + v32);
    *(_QWORD *)(v33 + 8) = v35;
    v36 = *(uint64_t *)((char *)v64 + v32 + 24);
    *(_QWORD *)(v33 + 16) = *(uint64_t *)((char *)v64 + v32 + 16);
    *(_QWORD *)(v33 + 24) = v36;
    v37 = *(uint64_t *)((char *)v64 + v32 + 40);
    *(_QWORD *)(v33 + 32) = *(uint64_t *)((char *)v64 + v32 + 32);
    *(_QWORD *)(v33 + 40) = v37;
    *(_BYTE *)(v33 + 48) = *((_BYTE *)v64 + v32 + 48);
    *(_QWORD *)(v33 + 56) = *(uint64_t *)((char *)v64 + v32 + 56);
    v58 = (char *)v64 + v32 + 64;
    __dsta = (_OWORD *)(a1 + v32 + 64);
    v38 = *(uint64_t *)((char *)v64 + v32 + 72);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38 >= 2)
    {
      v40 = __dsta;
      if (v38 != 2)
      {
        *(_BYTE *)(v33 + 64) = *v58;
        *(_QWORD *)(v33 + 72) = v38;
        swift_bridgeObjectRetain();
LABEL_14:
        v41 = *(_QWORD *)(v34 + 88);
        *(_QWORD *)(v33 + 80) = *(_QWORD *)(v34 + 80);
        *(_QWORD *)(v33 + 88) = v41;
        v42 = *(_QWORD *)(v34 + 104);
        *(_QWORD *)(v33 + 96) = *(_QWORD *)(v34 + 96);
        *(_QWORD *)(v33 + 104) = v42;
        v43 = *(_QWORD *)(v34 + 120);
        *(_QWORD *)(v33 + 112) = *(_QWORD *)(v34 + 112);
        *(_QWORD *)(v33 + 120) = v43;
        *(_BYTE *)(v33 + 128) = *(_BYTE *)(v34 + 128);
        *(_QWORD *)(v33 + 136) = *(_QWORD *)(v34 + 136);
        v44 = v63[10];
        *(_QWORD *)(a1 + v63[9]) = *(uint64_t *)((char *)v64 + v63[9]);
        *(_QWORD *)(a1 + v44) = *(uint64_t *)((char *)v64 + v44);
        v45 = v63[12];
        *(_QWORD *)(a1 + v63[11]) = *(uint64_t *)((char *)v64 + v63[11]);
        v57 = a1 + v45;
        v46 = (uint64_t)v64 + v45;
        v47 = *(_OWORD *)(v46 + 24);
        *(_OWORD *)(v57 + 24) = v47;
        v56 = v47;
        v59 = **(void (***)(uint64_t, void *, uint64_t))(v47 - 8);
        __dstb = (void *)v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v59(v57, __dstb, v56);
        v48 = v63[14];
        *(_BYTE *)(a1 + v63[13]) = *((_BYTE *)v64 + v63[13]);
        v49 = *(_OWORD *)((char *)v64 + v48 + 24);
        *(_OWORD *)(a1 + v48 + 24) = v49;
        (**(void (***)(void))(v49 - 8))();
        v50 = v63[15];
        v51 = v63[16];
        v52 = (_QWORD *)(a1 + v50);
        v53 = (uint64_t *)((char *)v64 + v50);
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        *(_QWORD *)(a1 + v51) = *(uint64_t *)((char *)v64 + v51);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      v39 = *(_OWORD *)v58;
    }
    else
    {
      v39 = *(_OWORD *)v58;
      v40 = __dsta;
    }
    *v40 = v39;
    goto LABEL_14;
  }
  a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return a1;
}

void sub_1BA6AE30C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)v1 + 128);
}

uint64_t sub_1BA6AE31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD *v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t result;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142[9];
  __int128 v143[2];
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  _BYTE v151[32];
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _OWORD v160[4];
  __int128 v161[13];
  _OWORD v162[4];
  _OWORD v163[4];
  _OWORD v164[4];
  _OWORD v165[4];
  __int128 v166[8];
  _OWORD v167[4];
  _OWORD v168[4];
  _OWORD v169[5];
  uint64_t v170;

  v124 = a2;
  v125 = a3;
  v122 = *v3;
  v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v5);
  v123 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C9968, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v97 - v8;
  sub_1BA4B07F0(0, &qword_1ED3C4230, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v97 - v11;
  sub_1BA4B07F0(0, &qword_1ED3BE978, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v97 - v14;
  sub_1BA4B07F0(0, &qword_1ED3BB8A0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v97 - v17;
  v19 = *(_QWORD *)(a1 + 8);
  v152 = 0;
  memset(v151, 0, sizeof(v151));
  v149 = 0u;
  v150 = 0u;
  v148 = 0u;
  v147 = MEMORY[0x1E0DEE9D8];
  v20 = swift_allocObject();
  v21 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v126 = v3;
  v127 = v20;
  *(_QWORD *)(v20 + 16) = v21;
  v22 = v20 + 16;
  v23 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v145 = *(_QWORD **)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v146 = v23;
  switch(v19)
  {
    case 0:
    case 3:
      v76 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v160[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v160[1] = v76;
      v77 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v160[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v160[3] = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v160;
      v78 = (uint64_t)v128;
      sub_1BB29DE84(v124, v125, &qword_1ED3BB8A0, type metadata accessor for FeedHeadline, (unint64_t *)&unk_1ED3B2DB0, (uint64_t)v18);
      if (v78)
        goto LABEL_3;
      v112 = 0;
      sub_1BA6AFE44((uint64_t)v18, (uint64_t)v151, (uint64_t *)&v148, &v145, v127, (uint64_t)&v147);
      sub_1BA6B0510((uint64_t)v18, &qword_1ED3BB8A0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      v28 = v160;
      goto LABEL_5;
    case 1:
      v82 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v162[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v162[1] = v82;
      v83 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v162[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v162[3] = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v162;
      v84 = (uint64_t)v128;
      sub_1BB29CCD4(v124, v125, (uint64_t)&v129);
      if (v84)
        goto LABEL_3;
      v112 = 0;
      v161[10] = v139;
      v161[11] = v140;
      v161[12] = v141;
      v161[6] = v135;
      v161[7] = v136;
      v161[8] = v137;
      v161[9] = v138;
      v161[2] = v131;
      v161[3] = v132;
      v161[4] = v133;
      v161[5] = v134;
      v161[0] = v129;
      v161[1] = v130;
      sub_1BB29B2FC(v161, (uint64_t)v151, (uint64_t *)&v148, &v145);
      sub_1BB29ECDC((uint64_t)v161);
      v28 = v162;
      goto LABEL_5;
    case 2:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      v24 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v163[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v163[1] = v24;
      v25 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v163[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v163[3] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v163;
      v27 = (uint64_t)v128;
      sub_1BB29DE84(v124, v125, &qword_1ED3BE978, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, &qword_1ED3AFE68, (uint64_t)v15);
      if (v27)
        goto LABEL_3;
      v112 = 0;
      sub_1BB29B714((uint64_t)v15, (uint64_t)v151, (uint64_t *)&v148, &v145, v127, (uint64_t)&v147);
      sub_1BA6B0510((uint64_t)v15, &qword_1ED3BE978, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      v28 = v163;
      goto LABEL_5;
    case 4:
      v85 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v164[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v164[1] = v85;
      v86 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v164[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v164[3] = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v164;
      v87 = (uint64_t)v128;
      sub_1BB29D13C(v124, v125, (uint64_t)&v129);
      if (v87)
        goto LABEL_3;
      v112 = 0;
      sub_1BB29BA4C(&v129, (uint64_t)v151, (uint64_t *)&v148, &v145);
      sub_1BA66EA88((uint64_t)&v129, &qword_1ED3A6BD8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatNodeBindingItem);
      v28 = v164;
      goto LABEL_5;
    case 12:
      v88 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v165[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v165[1] = v88;
      v89 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v165[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v165[3] = v89;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v165;
      v90 = (uint64_t)v128;
      sub_1BB29D5C4(v124, v125, (uint64_t)&v129);
      if (v90)
        goto LABEL_3;
      v112 = 0;
      sub_1BB29BCD0(&v129, (uint64_t)v151, (uint64_t *)&v148, &v145);
      sub_1BA66EA88((uint64_t)&v129, &qword_1ED3A0F70, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatNodeBindingItem);
      v28 = v165;
      goto LABEL_5;
    case 13:
      v91 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v167[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v167[1] = v91;
      v92 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v167[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v167[3] = v92;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v167;
      v93 = (uint64_t)v128;
      sub_1BB29DA4C(v124, v125, (uint64_t)&v129);
      if (v93)
        goto LABEL_3;
      v112 = 0;
      v166[4] = v133;
      v166[5] = v134;
      v166[6] = v135;
      v166[7] = v136;
      v166[0] = v129;
      v166[1] = v130;
      v166[2] = v131;
      v166[3] = v132;
      sub_1BB29C188(v166, (uint64_t)v151, (uint64_t *)&v148, &v145);
      sub_1BB29EC34(v166);
      v28 = v167;
      goto LABEL_5;
    case 14:
      v94 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v168[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v168[1] = v94;
      v95 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v168[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v168[3] = v95;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v168;
      v96 = (uint64_t)v128;
      sub_1BB29DE84(v124, v125, &qword_1ED3C4230, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (unint64_t *)&unk_1ED3D24D0, (uint64_t)v12);
      v112 = v96;
      if (v96)
        goto LABEL_3;
      sub_1BB29C534((uint64_t)v12, (uint64_t)v151, (uint64_t *)&v148, &v145, v127, (uint64_t)&v147);
      sub_1BA6B0510((uint64_t)v12, &qword_1ED3C4230, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      v28 = v168;
      goto LABEL_5;
    default:
      v79 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v169[0] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v169[1] = v79;
      v80 = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v169[2] = *(_OWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v169[3] = v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v169;
      v81 = (uint64_t)v128;
      sub_1BB29DE84(v124, v125, &qword_1ED3C9968, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, qword_1ED3C2288, (uint64_t)v9);
      if (v81)
      {
LABEL_3:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA70AF8C((uint64_t)v151, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        return (uint64_t)v26;
      }
      v112 = 0;
      sub_1BB29C99C((uint64_t)v9, (uint64_t)v151, (uint64_t *)&v148, &v145, v127, (uint64_t)&v147);
      sub_1BA6B0510((uint64_t)v9, &qword_1ED3C9968, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      v28 = v169;
LABEL_5:
      v29 = *((_QWORD *)v28 + 7);
      v124 = *((_QWORD *)v28 + 6);
      v125 = v29;
      v30 = *((_QWORD *)v28 + 5);
      v120 = *((_QWORD *)v28 + 4);
      v121 = v30;
      v31 = *((_QWORD *)v28 + 3);
      v118 = *((_QWORD *)v28 + 2);
      v119 = v31;
      v32 = *((_QWORD *)v28 + 1);
      *(_QWORD *)&v117 = *(_QWORD *)v28;
      *((_QWORD *)&v117 + 1) = v32;
      swift_beginAccess();
      v33 = v145;
      v34 = v145[2];
      if (!v34)
      {
LABEL_19:
        v54 = v126;
        v55 = *(_QWORD *)((char *)v126 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
        swift_beginAccess();
        v56 = swift_bridgeObjectRetain();
        v57 = sub_1BA6E2510(v56);
        swift_bridgeObjectRelease();
        if (v57)
        {
          v128 = (_QWORD *)v57;
        }
        else
        {
          swift_retain();
          v128 = (_QWORD *)v55;
        }
        v153 = v117;
        v154 = v118;
        v155 = v119;
        v156 = v120;
        v157 = v121;
        v158 = v124;
        v159 = v125;
        sub_1BA4C2DD8((uint64_t)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v123, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
        v58 = *((_BYTE *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        v59 = *((_BYTE *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
        v60 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
        v61 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
        v63 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
        v62 = *(void **)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
        v64 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
        v100 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
        v101 = v62;
        v98 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
        v99 = v64;
        LOBYTE(v129) = v58;
        BYTE1(v129) = v59;
        *((_QWORD *)&v129 + 1) = v60;
        *(_QWORD *)&v130 = v61;
        *((_QWORD *)&v130 + 1) = v63;
        *(_QWORD *)&v131 = v62;
        *((_QWORD *)&v131 + 1) = v100;
        *(_QWORD *)&v132 = v64;
        *((_QWORD *)&v132 + 1) = v98;
        v110 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
        v116 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
        swift_beginAccess();
        v65 = v127;
        v115 = *(_QWORD *)(v127 + 16);
        v170 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
        swift_beginAccess();
        sub_1BA70AF2C((uint64_t)v151, (uint64_t)v143, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v113 = v146;
        v114 = v145;
        swift_beginAccess();
        v106 = *((_QWORD *)&v148 + 1);
        v107 = v148;
        v104 = *((_QWORD *)&v149 + 1);
        v105 = v149;
        v102 = *((_QWORD *)&v150 + 1);
        v103 = v150;
        v142[0] = v148;
        v142[1] = v149;
        v142[2] = v150;
        v66 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
        v67 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
        v111 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
        v108 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
        v109 = v66;
        v68 = swift_allocObject();
        v69 = (uint64_t)v128;
        *(_QWORD *)(v68 + 16) = v128;
        *(_QWORD *)(v68 + 24) = v65;
        v128 = (_QWORD *)v69;
        swift_bridgeObjectRetain();
        sub_1BA70A884(v63, v101);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA70A834(v107, v106);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        v70 = v109;
        swift_bridgeObjectRetain();
        v71 = sub_1BB86DD74();
        swift_release();
        v73 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
        v72 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
        v75 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
        v74 = *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = (_OWORD *)sub_1BB29AEAC(v123, (char *)&v129, v110, v116, &v153, v115, (uint64_t)v128, v170, (uint64_t)v143, (uint64_t)v114, v113, v142, v70, v111, v67, v71, v73, v72, v75,
                          v74);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA70ABF4(v148, *((uint64_t *)&v148 + 1));
        sub_1BA70AF8C((uint64_t)v151, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        return (uint64_t)v26;
      }
      v35 = v146;
      v36 = v145 + 4;
      swift_bridgeObjectRetain();
      v116 = v35;
      result = swift_bridgeObjectRetain();
      v38 = 0;
      v128 = v33;
      v170 = v22;
      while (v38 < v33[2])
      {
        sub_1BA4C010C((uint64_t)&v36[5 * v38], (uint64_t)v142);
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
        sub_1BA4D9CE8(0, &qword_1ED3CCE90);
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_1BA4CECCC(v143, (uint64_t)&v129);
          v40 = *((_QWORD *)&v130 + 1);
          v41 = v131;
          __swift_project_boxed_opaque_existential_1(&v129, *((uint64_t *)&v130 + 1));
          v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
          swift_beginAccess();
          v43 = *(_QWORD *)(v42 + 16);
          if (v43)
          {
            v44 = (uint64_t *)(v42 + 40);
            do
            {
              v46 = *(v44 - 1);
              v45 = *v44;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC((uint64_t *)v143, v46, v45);
              swift_bridgeObjectRelease();
              v44 += 2;
              --v43;
            }
            while (v43);
          }
          swift_bridgeObjectRelease();
          swift_endAccess();
          v47 = *((_QWORD *)&v130 + 1);
          v48 = v131;
          __swift_project_boxed_opaque_existential_1(&v129, *((uint64_t *)&v130 + 1));
          v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48);
          swift_beginAccess();
          v50 = *(_QWORD *)(v49 + 16);
          if (v50)
          {
            v51 = (uint64_t *)(v49 + 40);
            do
            {
              v53 = *(v51 - 1);
              v52 = *v51;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC((uint64_t *)v143, v53, v52);
              swift_bridgeObjectRelease();
              v51 += 2;
              --v50;
            }
            while (v50);
          }
          swift_bridgeObjectRelease();
          swift_endAccess();
          result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
          v39 = v34;
          v33 = v128;
        }
        else
        {
          v144 = 0;
          memset(v143, 0, sizeof(v143));
          result = sub_1BA70AF8C((uint64_t)v143, (unint64_t *)&qword_1ED3CCE98, &qword_1ED3CCE90, (uint64_t)&protocol descriptor for FormatContentSelectorProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          v39 = v34;
        }
        ++v38;
        v34 = v39;
        if (v38 == v39)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      __break(1u);
      return result;
  }
}

_QWORD *sub_1BA6AF268()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  id v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;

  sub_1BA4B07F0(0, &qword_1ED3C0580, (uint64_t (*)(uint64_t))sub_1BA81E1C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(inited + 32) = 0x7972616D697270;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v2 = *(void **)(v0 + 40);
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImagePrimaryColor) & 1) != 0)
    v3 = (uint64_t)objc_msgSend(v2, sel_thumbnailImagePrimaryColor);
  else
    v3 = 1;
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = 0x756F72676B636162;
  *(_QWORD *)(inited + 64) = 0xEA0000000000646ELL;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImageBackgroundColor) & 1) != 0)
    v4 = (uint64_t)objc_msgSend(v2, sel_thumbnailImageBackgroundColor);
  else
    v4 = 1;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = 1954047348;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImageTextColor) & 1) != 0)
    v5 = (uint64_t)objc_msgSend(v2, sel_thumbnailImageTextColor);
  else
    v5 = 1;
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 104) = 0x746E65636361;
  *(_QWORD *)(inited + 112) = 0xE600000000000000;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImageAccentColor) & 1) != 0)
    v6 = (uint64_t)objc_msgSend(v2, sel_thumbnailImageAccentColor);
  else
    v6 = 1;
  *(_QWORD *)(inited + 120) = v6;
  v7 = sub_1BA6AFC48(inited);
  v8 = sub_1BA6AF718(v7);
  swift_bridgeObjectRelease();
  sub_1BA904774((uint64_t)v8);
  v10 = v9;
  swift_release();
  if (*(_BYTE *)(v0 + 56))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BA6EA0D0(0, v10[2] + 1, 1, v10);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_1BA6EA0D0((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[2 * v12];
    v13[4] = 0x6D75696D657270;
    v13[5] = 0xE700000000000000;
  }
  if ((FeedHeadline.hasAudioAccess.getter() & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BA6EA0D0(0, v10[2] + 1, 1, v10);
    v15 = v10[2];
    v14 = v10[3];
    if (v15 >= v14 >> 1)
      v10 = sub_1BA6EA0D0((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
    v10[2] = v15 + 1;
    v16 = &v10[2 * v15];
    v16[4] = 0xD000000000000011;
    v16[5] = 0x80000001BB962900;
  }
  v17 = objc_msgSend(v2, sel_sourceChannel);
  if (v17)
  {
    v18 = v17;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v18, sel_identifier);
    sub_1BB8729A0();

    sub_1BB872AFC(v20);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BA6EA0D0(0, v10[2] + 1, 1, v10);
    v22 = v10[2];
    v21 = v10[3];
    if (v22 >= v21 >> 1)
      v10 = sub_1BA6EA0D0((_QWORD *)(v21 > 1), v22 + 1, 1, v10);
    v10[2] = v22 + 1;
    v23 = &v10[2 * v22];
    v23[4] = 0xD000000000000012;
    v23[5] = 0x80000001BB9628E0;
    swift_unknownObjectRelease();
  }
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_isEvergreen) & 1) != 0
    && objc_msgSend(v2, sel_isEvergreen))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BA6EA0D0(0, v10[2] + 1, 1, v10);
    v25 = v10[2];
    v24 = v10[3];
    if (v25 >= v24 >> 1)
      v10 = sub_1BA6EA0D0((_QWORD *)(v24 > 1), v25 + 1, 1, v10);
    v10[2] = v25 + 1;
    v26 = (char *)&v10[2 * v25];
    strcpy(v26 + 32, "is-evergreen");
    v26[45] = 0;
    *((_WORD *)v26 + 23) = -5120;
  }
  return v10;
}

unint64_t *sub_1BA6AF718(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t *v6;
  void *v7;
  _QWORD v9[2];

  v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1BA6AF868((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1BA6AF868((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1BCCE5C38](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1BA6AF868(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1BA6AF9B4(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1BA6AF9B4(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1BA6AF9B4(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12) != 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1BA6AF9B4(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1BA6AF9B4(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1BA6AF9B4(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BA6AF9B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t *v32;
  uint64_t v33;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1BA8F5EB8();
  result = sub_1BB873F6C();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v33)
            return v9;
          v16 = v32[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v33)
              return v9;
            v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v33)
                  return v9;
                v16 = v32[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BA6AFD5C(v21);
    sub_1BB872A90();
    result = sub_1BB874608();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v25);
    *v30 = v20;
    v30[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1BA6AFC48(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5EB8();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    sub_1BA6AFD5C(v7);
    result = sub_1BA6E35A8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1BA6AFD5C(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t FeedHeadline.hasAudioAccess.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 56));
  if (v1
    && (v2 = *(void **)(v0 + 40), (objc_msgSend(v2, sel_respondsToSelector_, sel_narrativeTrack) & 1) != 0))
  {
    v3 = v1;
    v4 = objc_msgSend(v2, sel_narrativeTrack);
    if (v4)
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3CF950);
      v5 = v3;
      v3 = v4;
      LOBYTE(v4) = sub_1BB8738B8();

    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

uint64_t sub_1BA6AFE44(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD **v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[3];
  uint64_t v38;
  char *v39;
  _QWORD **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a5;
  v45 = a6;
  v40 = a4;
  v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v11;
  v47 = v11;
  v41 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  v48 = v41;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v46);
  v38 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  swift_beginAccess();
  sub_1BA6B0198((uint64_t)&v46, a2);
  sub_1BA4B07F0(0, &qword_1ED3BB8A0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v43 = v13;
  v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  v16 = *v14;
  v15 = v14[1];
  v18 = v14[2];
  v17 = v14[3];
  v19 = v14[4];
  v20 = v14[5];
  swift_beginAccess();
  v21 = *a3;
  v22 = a3[1];
  v37[2] = a3[3];
  v37[1] = a3[4];
  v37[0] = a3[5];
  *a3 = v16;
  a3[1] = v15;
  a3[2] = v18;
  a3[3] = v17;
  a3[4] = v19;
  a3[5] = v20;
  v23 = v16;
  v24 = v38;
  v25 = v15;
  v27 = (uint64_t)v39;
  v26 = v40;
  sub_1BA70A834(v23, v25);
  sub_1BA70ABF4(v21, v22);
  swift_beginAccess();
  sub_1BA4C2DD8(v24, v27, type metadata accessor for FeedHeadline);
  v28 = FeedHeadline.additionalFormatFeedItems.getter();
  sub_1BA6B017C((uint64_t)v28);
  v29 = *v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v26 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v29 = sub_1BA6A94A8(0, v29[2] + 1, 1, v29);
    *v26 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1BA6A94A8((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v26 = v29;
  }
  v47 = v42;
  v48 = v41;
  v33 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v46);
  sub_1BA4C2DD8(v27, (uint64_t)v33, type metadata accessor for FeedHeadline);
  v29[2] = v32 + 1;
  sub_1BA4CECCC(&v46, (uint64_t)&v29[5 * v32 + 4]);
  sub_1BA4A2E80(v27, type metadata accessor for FeedHeadline);
  swift_endAccess();
  swift_beginAccess();
  v34 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v34);
  swift_endAccess();
  swift_beginAccess();
  v35 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v35);
  return swift_endAccess();
}

uint64_t sub_1BA6B017C(uint64_t a1)
{
  return sub_1BA6ECBC8(a1, (void (*)(_QWORD))sub_1BA6F0104, (unint64_t *)&qword_1ED3B2E30);
}

uint64_t sub_1BA6B0198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BA6B0200()
{
  return FeedHeadline.State.selectors.getter();
}

_QWORD *FeedHeadline.State.selectors.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  const char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v1 = type metadata accessor for FeedItem.SharedState(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  v5 = (_QWORD *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_1BB8832C0;
  if (*v0)
  {
    if (*v0 == 1)
    {
      v6 = 0xD000000000000013;
      v7 = 0x80000001BB9628A0;
    }
    else
    {
      v6 = 0x6174732D656B696CLL;
      v7 = 0xEF656E6F6E2D6574;
    }
  }
  else
  {
    v7 = 0x80000001BB962880;
    v6 = 0xD000000000000010;
  }
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = 0x6174732D65766173;
  if (!v0[1])
    v8 = 0xD000000000000010;
  v9 = 0x80000001BB962860;
  if (v0[1])
    v9 = 0xEF656E6F6E2D6574;
  *(_QWORD *)(v4 + 48) = v8;
  *(_QWORD *)(v4 + 56) = v9;
  v10 = (int *)type metadata accessor for FeedHeadline.State(0);
  sub_1BA4C2DD8((uint64_t)&v0[v10[6]], (uint64_t)v3, type metadata accessor for FeedItem.SharedState);
  v11 = type metadata accessor for SharedItem();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11) == 1)
  {
    v12 = 0x80000001BB9626F0;
    v13 = 0xD000000000000010;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FeedItem.SharedState);
    v13 = 0xD000000000000012;
    v12 = 0x80000001BB962840;
  }
  v5[8] = v13;
  v5[9] = v12;
  if (v0[v10[7]])
    v14 = 0xD000000000000014;
  else
    v14 = 0xD000000000000019;
  v15 = 0x80000001BB962820;
  if (v0[v10[7]])
    v15 = 0x80000001BB962710;
  v5[10] = v14;
  v5[11] = v15;
  if (v0[v10[8]])
  {
    if (v0[v10[8]] == 1)
    {
      v16 = 0xD00000000000001DLL;
      v17 = "access-level-no-bundle-access";
    }
    else
    {
      v16 = 0xD000000000000020;
      v17 = "access-level-no-ala-carte-access";
    }
  }
  else
  {
    v16 = 0xD000000000000011;
    v17 = "access-level-full";
  }
  v5[12] = v16;
  v5[13] = (unint64_t)(v17 - 32) | 0x8000000000000000;
  if (v0[v10[9]])
    v18 = 0xD000000000000015;
  else
    v18 = 0xD000000000000012;
  v19 = 0x80000001BB962760;
  if (!v0[v10[9]])
    v19 = 0x80000001BB9627C0;
  v5[14] = v18;
  v5[15] = v19;
  if (v0[v10[10]])
    v20 = 0xD000000000000015;
  else
    v20 = 0xD000000000000012;
  v21 = 0x80000001BB9627A0;
  if (v0[v10[10]])
    v21 = 0x80000001BB962780;
  v5[16] = v20;
  v5[17] = v21;
  return v5;
}

uint64_t sub_1BA6B0504()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA6B0510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1BA4B07F0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1BA6B054C()
{
  unint64_t result;

  result = qword_1ED3B3678;
  if (!qword_1ED3B3678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2364, &_s3GapVN);
    atomic_store(result, (unint64_t *)&qword_1ED3B3678);
  }
  return result;
}

unint64_t sub_1BA6B0590()
{
  unint64_t result;

  result = qword_1ED3B34F8;
  if (!qword_1ED3B34F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2348, &_s10GapOfflineVN);
    atomic_store(result, (unint64_t *)&qword_1ED3B34F8);
  }
  return result;
}

uint64_t sub_1BA6B05D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA79BB1C(a1, a2, a3);
}

void sub_1BA6B05EC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[8];
  __int128 v21;
  _BYTE v22[8];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void *v27;

  v3 = sub_1BB86FC28();
  v20[3] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v20[2] = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B7C20, (uint64_t (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v20[6] = (char *)v20 - v6;
  v7 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v20[7] = (char *)v20 - v9;
  sub_1BA71AD78(0, (unint64_t *)&qword_1ED3C45B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB62E0]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v20 - v13;
  v15 = *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 24);
  *(_QWORD *)&v21 = v1;
  v20[4] = v1 + v15;
  sub_1BB86DB40();
  sub_1BB86D87C();
  swift_retain();
  sub_1BB86D858();
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA7399D0();
  sub_1BA4A2870(&qword_1ED3C9F20, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB86DAF8();
  sub_1BA6B0C1C((uint64_t)v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v16 = v22[0];
  v21 = v23;
  v17 = v24;
  v18 = v25;
  v19 = v27;
  swift_release();
  swift_release();

  *(_BYTE *)a1 = v16;
  *(_OWORD *)(a1 + 8) = v21;
  *(_QWORD *)(a1 + 24) = v17;
  *(_QWORD *)(a1 + 32) = v18;
  *(_OWORD *)(a1 + 40) = v26;
}

uint64_t sub_1BA6B0C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v2 = v1;
  sub_1BA71AD78(0, (unint64_t *)&qword_1ED3C45B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB62E0]);
  sub_1BB86DB04();
  v4 = sub_1BA6B13C8((uint64_t)v28);
  v6 = v5;
  swift_release();
  sub_1BB86DB04();
  v7 = v28[2];
  v8 = v28[3];
  v9 = v28[4];
  v10 = v28[5];
  swift_release();
  v23 = v1;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v11 = (_QWORD *)sub_1BB67DEE8(v4, (void (*)(uint64_t *__return_ptr, unint64_t, uint64_t))sub_1BA6B0DF4);
  swift_bridgeObjectRelease();
  v18 = v1;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v12 = sub_1BA6B0FB8((void (*)(uint64_t *))sub_1BA6B129C, (uint64_t)&v17, v6);
  swift_bridgeObjectRelease();
  v28 = v11;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A5C((unint64_t *)&qword_1ED3B9360, (uint64_t)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  sub_1BA6B39A0();
  v13 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v14 = sub_1BB86DB10();
  v15 = *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40)) + 16);
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = 0;
  return swift_retain();
}

uint64_t sub_1BA6B0DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1BA6B0E04(a1, a2, *(uint64_t **)(v3 + 16), a3, *(double *)(v3 + 24), *(double *)(v3 + 32), *(double *)(v3 + 40), *(double *)(v3 + 48));
}

uint64_t sub_1BA6B0E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t *v41;
  uint64_t v42;

  v41 = a4;
  v42 = a1;
  v14 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *a3;
  v18 = (int *)type metadata accessor for FormatGroupLayoutFactory.Bound();
  v19 = *(uint64_t *)((char *)a3 + v18[9]);
  v20 = (uint64_t *)((char *)a3 + v18[15]);
  v21 = *v20;
  v22 = v20[1];
  sub_1BA4C2DD8(a2 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, (uint64_t)v16 + v14[7], type metadata accessor for FeedItem);
  v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  v40[1] = v17;
  *v16 = v17;
  v16[1] = v19;
  v24 = (_OWORD *)((char *)v16 + v14[8]);
  v25 = *(_OWORD *)(v23 + 16);
  v26 = *(_OWORD *)(v23 + 32);
  v16[2] = v21;
  v16[3] = v22;
  *v24 = v25;
  v24[1] = v26;
  v27 = (double *)((char *)v16 + v14[9]);
  *v27 = a5;
  v27[1] = a6;
  v27[2] = a7;
  v27[3] = a8;
  sub_1BA641024();
  v29 = v28;
  v30 = swift_allocBox();
  v32 = v31;
  v33 = *(int *)(v29 + 48);
  v34 = *(int *)(v29 + 64);
  sub_1BA5193C4((uint64_t)v16, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
  *(_QWORD *)(v32 + v33) = a2;
  v35 = (char *)a3 + v18[6];
  result = type metadata accessor for GroupLayoutContext();
  v37 = *(_QWORD *)&v35[*(int *)(result + 28)];
  v38 = __OFADD__(v42, v37);
  v39 = v42 + v37;
  if (v38)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v32 + v34) = v39;
    *v41 = v30 | 0x7000000000000000;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_1BA6B0FB8(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *);
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  sub_1BB1484F8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for FeedItemSupplementaryAttributes();
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v24 = (uint64_t)&v22 - v10;
  if (a3 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v11 = sub_1BB873F30();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      v12 = MEMORY[0x1E0DEE9D8];
      v25 = a3 & 0xC000000000000001;
      v13 = 4;
      v23 = a3;
      while (1)
      {
        v14 = v13 - 4;
        if (v25)
        {
          v15 = MEMORY[0x1BCCE4630](v13 - 4, a3);
          v16 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v16)
            goto LABEL_20;
        }
        else
        {
          v15 = *(_QWORD *)(a3 + 8 * v13);
          swift_retain();
          v16 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v16)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v30 = v15;
        v28(&v30);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v12;
        }
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v27) == 1)
        {
          sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BB1484F8);
        }
        else
        {
          v18 = v24;
          sub_1BA5193C4((uint64_t)v7, v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          sub_1BA5193C4(v18, v26, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1BA6C209C(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
          v20 = *(_QWORD *)(v12 + 16);
          v19 = *(_QWORD *)(v12 + 24);
          if (v20 >= v19 >> 1)
            v12 = sub_1BA6C209C(v19 > 1, v20 + 1, 1, v12);
          *(_QWORD *)(v12 + 16) = v20 + 1;
          sub_1BA5193C4(v26, v12+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          a3 = v23;
        }
        ++v13;
        if (v17 == v11)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA6B129C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA6B12BC(a1, *(uint64_t **)(v2 + 16), a2, *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48));
}

uint64_t sub_1BA6B12BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v13 = *a1;
  v14 = *a2;
  v15 = type metadata accessor for FormatGroupLayoutFactory.Bound();
  v16 = *(uint64_t *)((char *)a2 + *(int *)(v15 + 36));
  v17 = (uint64_t *)((char *)a2 + *(int *)(v15 + 60));
  v18 = *v17;
  v19 = v17[1];
  v20 = *(_QWORD *)(v13 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
  v21 = *(_OWORD *)(v20 + 16);
  v22 = *(_OWORD *)(v20 + 32);
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v16;
  *(_QWORD *)(a3 + 16) = v18;
  *(_QWORD *)(a3 + 24) = v19;
  *(_OWORD *)(a3 + 32) = v21;
  *(_OWORD *)(a3 + 48) = v22;
  *(double *)(a3 + 64) = a4;
  *(double *)(a3 + 72) = a5;
  *(double *)(a3 + 80) = a6;
  *(double *)(a3 + 88) = a7;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = v13;
  v23 = type metadata accessor for FeedItemSupplementaryAttributes();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 0, 1, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_1BA6B13C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  double *v83;
  double v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t result;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  uint64_t v143[2];
  unint64_t v144;
  unint64_t v145;
  _OWORD v146[5];
  _BYTE v147[25];

  v2 = v1;
  v134 = 0;
  v117 = sub_1BB86C8E0();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v115 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C2260, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v133 = (uint64_t)&v113 - v7;
  sub_1BA4B07F0(0, &qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640], v5);
  MEMORY[0x1E0C80A78](v8);
  v132 = (uint64_t)&v113 - v9;
  v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v10);
  v118 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_OWORD *)((char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v113 - v16;
  v18 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1E0C80A78](v18);
  v113 = (uint64_t)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v131 = (uint64_t)&v113 - v21;
  v22 = MEMORY[0x1E0DEE9D8];
  v145 = MEMORY[0x1E0DEE9D8];
  v144 = MEMORY[0x1E0DEE9D8];
  v138 = type metadata accessor for FormatGroupLayoutFactory.Bound();
  sub_1BB86D708();
  v139 = *(_QWORD *)(*(_QWORD *)(a1 + 112) + 16);
  if (v139)
  {
    v25 = v23;
    v26 = v24;
    v27 = swift_bridgeObjectRetain();
    v28 = 0;
    v130 = v1;
    v135 = v14;
    v136 = v17;
    v137 = v27;
    while (1)
    {
      v29 = *(_QWORD *)(v27 + 8 * v28 + 32);
      v30 = (v29 >> 59) & 0x1E | (v29 >> 2) & 1;
      if (v30 == 6)
      {
        v45 = v29 & 0xFFFFFFFFFFFFFFBLL;
        v46 = *(_QWORD *)(v45 + 16);
        v47 = *(_QWORD *)(v2 + *(int *)(v138 + 40));
        v48 = *(_QWORD *)(v46 + 16);
        v50 = *(_QWORD *)(v48 + 48);
        v49 = *(_QWORD *)(v48 + 56);
        swift_beginAccess();
        v51 = *(_QWORD *)(v47 + 24);
        if (*(_QWORD *)(v51 + 16))
        {
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          v52 = sub_1BA6E35A8(v50, v49);
          if ((v53 & 1) != 0)
          {
            v54 = v52;
            v55 = *(_QWORD *)(v51 + 56);
            v56 = type metadata accessor for FormatNodeStateData.Data();
            v57 = *(_QWORD *)(v56 - 8);
            v58 = v55 + *(_QWORD *)(v57 + 72) * v54;
            v14 = v135;
            sub_1BA4C2DD8(v58, (uint64_t)v135, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
            v59 = *(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v57 + 56);
            v17 = v136;
            v59(v14, 0, 1, v56);
          }
          else
          {
            v56 = type metadata accessor for FormatNodeStateData.Data();
            (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v14, 1, 1, v56);
          }
        }
        else
        {
          v56 = type metadata accessor for FormatNodeStateData.Data();
          (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v14, 1, 1, v56);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
        type metadata accessor for FormatNodeStateData.Data();
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v14, 1, v56) == 1)
        {
          sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v129 = v45;
            *(_OWORD *)&v147[9] = *(_OWORD *)((char *)v14 + 89);
            v79 = v14[5];
            v146[4] = v14[4];
            *(_OWORD *)v147 = v79;
            v80 = v14[3];
            v146[2] = v14[2];
            v146[3] = v80;
            v81 = v14[1];
            v146[0] = *v14;
            v146[1] = v81;
            v82 = *(_QWORD *)(v46 + 32);
            v119 = *(_QWORD *)(v46 + 24);
            v125 = v82;
            v126 = *(_QWORD *)(v46 + 40);
            v128 = *(_QWORD *)(v46 + 48);
            LODWORD(v127) = *(unsigned __int8 *)(v46 + 56);
            sub_1BA5E01A4(v46 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, v132, &qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640]);
            sub_1BA5E01A4(v46 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, v133, (unint64_t *)&unk_1ED3C2260, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
            v83 = *(double **)(v46 + 16);
            v84 = v83[2];
            v85 = v83[3];
            v86 = v83[4];
            v87 = v83[5];
            v88 = *((_QWORD *)v83 + 7);
            v122 = *((_QWORD *)v83 + 6);
            v89 = v2;
            v121 = v88;
            v90 = *((_QWORD *)v83 + 11);
            v124 = *((_QWORD *)v83 + 10);
            v91 = *((_QWORD *)v83 + 13);
            v123 = *((_QWORD *)v83 + 12);
            v92 = *((_QWORD *)v83 + 14);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v120 = sub_1BA792088(v92, v25, v26);
            swift_bridgeObjectRelease();
            v143[0] = *(_QWORD *)(*(_QWORD *)(v46 + 16) + 120);
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3CF818, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
            sub_1BA6B5A5C((unint64_t *)&unk_1ED3CF820, (uint64_t)&qword_1ED3CF818, (uint64_t)type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
            swift_bridgeObjectRetain();
            v93 = v134;
            v94 = sub_1BB872BC8();
            MEMORY[0x1E0C80A78](v94);
            v112 = v89;
            v95 = sub_1BA760A5C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BA760C08, (uint64_t)(&v113 - 4), v94);
            v134 = v93;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LOBYTE(v92) = *(_BYTE *)(*(_QWORD *)(v46 + 16) + 128);
            sub_1BA4AD288(0, &qword_1ED3CB8D0, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
            swift_allocObject();
            sub_1BA796D68((uint64_t)v146);
            v96 = sub_1BB6816F8(v122, v121, v124, v90, v123, v91, v84, v85, v86, v87, v25, v26, v120, v95, v146, v92);
            sub_1BA796CCC((uint64_t)v146);
            swift_bridgeObjectRelease();
            type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes();
            v97 = swift_allocObject();
            v98 = v125;
            *(_QWORD *)(v97 + 32) = v119;
            *(_QWORD *)(v97 + 40) = v98;
            *(_QWORD *)(v97 + 56) = v128;
            *(_BYTE *)(v97 + 64) = v127;
            v99 = v132;
            sub_1BA5E01A4(v132, v97 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, &qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640]);
            v100 = v133;
            sub_1BA5E01A4(v133, v97 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
            *(_QWORD *)(v97 + 48) = v126;
            *(_QWORD *)(v97 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes) = v96;
            swift_retain();
            swift_retain();
            swift_retain();
            v101 = v115;
            sub_1BB86C8D4();
            v102 = sub_1BB86C8C8();
            v128 = v103;
            swift_release();
            swift_release();
            swift_release();
            sub_1BA5C699C(v100, (unint64_t *)&unk_1ED3C2260, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
            sub_1BA5C699C(v99, &qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640]);
            (*(void (**)(char *, uint64_t))(v116 + 8))(v101, v117);
            v104 = v128;
            *(_QWORD *)(v97 + 16) = v102;
            *(_QWORD *)(v97 + 24) = v104;
            v105 = swift_retain();
            MEMORY[0x1BCCE36AC](v105);
            if (*(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            sub_1BA796CCC((uint64_t)v146);
            swift_release();
            swift_release();
LABEL_31:
            swift_release();
            v2 = v130;
            v14 = v135;
            goto LABEL_32;
          }
          sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
        }
      }
      else
      {
        if (v30)
          goto LABEL_6;
        v31 = *(_QWORD **)(v29 + 16);
        v32 = *(_QWORD *)(v2 + *(int *)(v138 + 40));
        v33 = v31[2];
        v35 = *(_QWORD *)(v33 + 48);
        v34 = *(_QWORD *)(v33 + 56);
        swift_beginAccess();
        v36 = *(_QWORD *)(v32 + 24);
        if (*(_QWORD *)(v36 + 16))
        {
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          v37 = sub_1BA6E35A8(v35, v34);
          if ((v38 & 1) != 0)
          {
            v39 = v37;
            v40 = *(_QWORD *)(v36 + 56);
            v41 = type metadata accessor for FormatNodeStateData.Data();
            v42 = *(_QWORD *)(v41 - 8);
            v43 = v40 + *(_QWORD *)(v42 + 72) * v39;
            v14 = v135;
            sub_1BA4C2DD8(v43, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
            v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
            v17 = v136;
            v44(v136, 0, 1, v41);
          }
          else
          {
            v41 = type metadata accessor for FormatNodeStateData.Data();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v17, 1, 1, v41);
          }
        }
        else
        {
          v41 = type metadata accessor for FormatNodeStateData.Data();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v17, 1, 1, v41);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
        type metadata accessor for FormatNodeStateData.Data();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v17, 1, v41) == 1)
        {
          sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v60 = v131;
            sub_1BA5193C4((uint64_t)v17, v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
            v61 = (double *)v31[2];
            v62 = *((_QWORD *)v61 + 9);
            if (v62)
            {
              v123 = *((_QWORD *)v61 + 8);
              v129 = v31[3];
              v119 = v31[4];
              v143[0] = v119;
              v63 = v31[6];
              v127 = v31[5];
              v125 = v63;
              v124 = v31[7];
              v142 = *(_BYTE *)(v2 + *(int *)(v138 + 52));
              v120 = v62;
              sub_1BA4C2DD8(v60, v118, type metadata accessor for FeedItem);
              v64 = v31[9];
              v126 = v31[8];
              v141 = v64;
              v65 = v61[2];
              v66 = v61[3];
              v67 = v61[4];
              v68 = v61[5];
              v122 = *((_QWORD *)v61 + 10);
              v114 = *((_QWORD *)v61 + 11);
              v121 = *((_QWORD *)v61 + 12);
              v128 = *((_QWORD *)v61 + 13);
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              sub_1BA67D3F4(v64);
              v69 = v114;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v70 = swift_bridgeObjectRetain();
              v119 = sub_1BA792088(v70, v25, v26);
              swift_bridgeObjectRelease();
              v140 = *(_QWORD *)(v31[2] + 120);
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3CF818, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
              sub_1BA6B5A5C((unint64_t *)&unk_1ED3CF820, (uint64_t)&qword_1ED3CF818, (uint64_t)type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
              swift_bridgeObjectRetain();
              v71 = v134;
              v72 = sub_1BB872BC8();
              MEMORY[0x1E0C80A78](v72);
              v112 = v2;
              v73 = sub_1BA760A5C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB684510, (uint64_t)(&v113 - 4), v72);
              v134 = v71;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v74 = v131;
              v75 = v113;
              sub_1BA4C2DD8(v131, v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
              v76 = *(_BYTE *)(v31[2] + 128);
              sub_1BA4B07F0(0, &qword_1ED3CB8D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeData, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
              swift_allocObject();
              v77 = sub_1BB681C58(v123, v120, v122, v69, v121, v128, v65, v66, v67, v68, v25, v26, v119, v73, v75, v76);
              swift_bridgeObjectRelease();
              type metadata accessor for FormatItemNodeDataLayoutAttributes();
              swift_allocObject();
              sub_1BA6B2548(v129, v143, v127, v125, v124, &v142, v118, v126, (uint64_t *)&v141, (uint64_t)v77);
              swift_release();
              swift_release();
              swift_release();
              v78 = swift_retain();
              MEMORY[0x1BCCE36AC](v78);
              if (*(_QWORD *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1BB872E44();
              sub_1BB872E8C();
              sub_1BB872DCC();
              swift_release();
              swift_release();
              sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
              goto LABEL_31;
            }
            swift_release();
            sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
            swift_release();
LABEL_32:
            v17 = v136;
            goto LABEL_5;
          }
          sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
        }
      }
      swift_release();
      swift_release();
LABEL_5:
      v27 = v137;
LABEL_6:
      if (v139 == ++v28)
      {
        swift_bridgeObjectRelease();
        v22 = v145;
        break;
      }
    }
  }
  if ((v22 & 0x8000000000000000) != 0 || (v22 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v106 = (uint64_t)sub_1BA85DB8C(v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    v106 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v143[0] = v106;
  v107 = v134;
  sub_1BB67993C(v143, (uint64_t (*)(uint64_t))sub_1BA6B2698, (void (*)(_QWORD))type metadata accessor for FormatItemNodeDataLayoutAttributes, &OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes, (void (*)(_QWORD, _QWORD, _QWORD))sub_1BACAB208);
  if (v107)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v108 = v143[0];
    v109 = v144;
    if ((v144 & 0x8000000000000000) != 0 || (v144 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      v110 = (uint64_t)sub_1BA85DB80(v109);
      swift_bridgeObjectRelease();
    }
    else
    {
      v110 = v144 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
    }
    v143[0] = v110;
    sub_1BB67993C(v143, (uint64_t (*)(uint64_t))sub_1BA6B2698, (void (*)(_QWORD))type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes, &OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes, (void (*)(_QWORD, _QWORD, _QWORD))sub_1BACAB208);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v108;
  }
  return result;
}

uint64_t type metadata accessor for FormatItemNodeDataLayoutAttributes()
{
  uint64_t result;

  result = qword_1ED3CE3C8;
  if (!qword_1ED3CE3C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6B2548(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v11 = v10;
  v29 = a10;
  v30 = a8;
  v19 = sub_1BB86C8E0();
  v31 = *(_QWORD *)(v19 - 8);
  v32 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a2;
  v23 = *a6;
  v24 = *a9;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = v22;
  *(_QWORD *)(v11 + 48) = a3;
  *(_QWORD *)(v11 + 56) = a4;
  *(_QWORD *)(v11 + 64) = a5;
  *(_BYTE *)(v11 + 72) = v23;
  sub_1BA4C2DD8(a7, v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, type metadata accessor for FeedItem);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_zIndex) = v30;
  *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_visibility) = v24;
  *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes) = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86C8D4();
  v25 = sub_1BB86C8C8();
  v27 = v26;
  sub_1BA6DB314(a7);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v32);
  *(_QWORD *)(v11 + 16) = v25;
  *(_QWORD *)(v11 + 24) = v27;
  return v11;
}

void sub_1BA6B269C()
{
  JUMPOUT(0x1BCCE4B04);
}

uint64_t type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes()
{
  uint64_t result;

  result = qword_1ED3CF450;
  if (!qword_1ED3CF450)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatGroupCollection.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t i;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  sub_1BA7B06D8(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (__int128 *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(v1 + 8);
  if (!*(_QWORD *)(v7 + 16))
    return 0;
  v8 = sub_1BA4A42A0(a1);
  if ((v9 & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA6B28C4(0, v11, 0);
    v13 = v10 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v14 = *(_QWORD *)(v4 + 72);
    v12 = v39;
    for (i = v11 - 1; ; --i)
    {
      sub_1BA7B0658(v13, (uint64_t)v6);
      v16 = v6[7];
      v36 = v6[6];
      v37 = v16;
      v38 = v6[8];
      v17 = v6[3];
      v32 = v6[2];
      v33 = v17;
      v18 = v6[5];
      v34 = v6[4];
      v35 = v18;
      v19 = v6[1];
      v30 = *v6;
      v31 = v19;
      sub_1BA8C88FC((uint64_t)&v30);
      sub_1BA7B069C((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA6B28C4(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v39;
      }
      v21 = *(_QWORD *)(v12 + 16);
      v20 = *(_QWORD *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BA6B28C4(v20 > 1, v21 + 1, 1);
        v12 = v39;
      }
      *(_QWORD *)(v12 + 16) = v21 + 1;
      v22 = (_OWORD *)(v12 + 144 * v21);
      v22[2] = v30;
      v23 = v31;
      v24 = v32;
      v25 = v34;
      v22[5] = v33;
      v22[6] = v25;
      v22[3] = v23;
      v22[4] = v24;
      v26 = v35;
      v27 = v36;
      v28 = v38;
      v22[9] = v37;
      v22[10] = v28;
      v22[7] = v26;
      v22[8] = v27;
      if (!i)
        break;
      v13 += v14;
    }
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1BA6B28C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6B28E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA6B28E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3B9D88, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[144 * v8])
      memmove(v12, v13, 144 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[144 * v8] || v12 >= &v13[144 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6B2A7C()
{
  return FeedDatabase.read(cacheKey:)();
}

uint64_t FeedDatabase.read(cacheKey:)()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1BA6B2CB8();
  MEMORY[0x1E0C80A78](v0);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BA6B2DF8();
  swift_release();
  return v2;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeedDatabase.erase()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v0;
  v3 = v0[2];
  v4 = sub_1BB87330C();
  sub_1BB86EF44("Feed database will erase all", 28, 2, &dword_1BA493000, v3, v4, MEMORY[0x1E0DEE9D8]);
  v5 = sub_1BA6B2CB8();
  if (!v1)
  {
    v6 = v5;
    v7 = swift_allocObject();
    swift_weakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v2 + 80);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v2 + 88);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v2 + 96);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v2 + 112);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v2 + 120);
    *(_QWORD *)(v8 + 72) = *(_QWORD *)(v2 + 136);
    *(_QWORD *)(v8 + 80) = v7;
    *(_QWORD *)(v8 + 88) = v6;
    swift_retain();
    swift_retain();
    sub_1BA6B2D10((uint64_t)sub_1BA533258, v8);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1BA6B2CB8()
{
  uint64_t v1;
  char v2;

  sub_1BB86E71C();
  if ((v2 & 1) != 0)
    swift_willThrow();
  return v1;
}

void sub_1BA6B2D10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Class v9;
  id v10;
  id v11;

  v3 = v2;
  v6 = *v3;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = *(_QWORD *)(v6 + 80);
  v8[3] = *(_QWORD *)(v6 + 88);
  v8[4] = v7;
  v8[5] = a1;
  v8[6] = a2;
  sub_1BA4D787C(0, &qword_1ED3A39B0, MEMORY[0x1E0DB4150]);
  v10 = objc_allocWithZone(v9);
  swift_retain();
  v11 = (id)sub_1BB86E4F4();
  objc_msgSend((id)v3[10], sel_addOperation_, v11);

}

uint64_t sub_1BA6B2DF8()
{
  return sub_1BB86F2E0();
}

uint64_t sub_1BA6B2E18()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA6B2E24()
{
  unint64_t result;

  result = qword_1ED3B8FC0;
  if (!qword_1ED3B8FC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9109E4, &type metadata for A6_V4);
    atomic_store(result, (unint64_t *)&qword_1ED3B8FC0);
  }
  return result;
}

unint64_t sub_1BA6B2E68()
{
  unint64_t result;

  result = qword_1ED3B2AD8[0];
  if (!qword_1ED3B2AD8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssue, &type metadata for FeedIssue);
    atomic_store(result, qword_1ED3B2AD8);
  }
  return result;
}

uint64_t sub_1BA6B2EAC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BA6B2EC8(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1BA6B2EC8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  v3 = *a2;
  v2 = a2[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_1BB86DEE8() == v3 && v4 == v2)
  {
    swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v7 = v6 ^ 1;
  }
  return v7 & 1;
}

double sub_1BA6B2F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  double result;
  uint64_t v29;
  __int128 v30;
  ValueMetadata *v31;
  unint64_t v32;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x70614764656546, 0xE700000000000000, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA6B3264(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v29 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v31 = &type metadata for FeedGap;
  v17 = sub_1BA7C3AA8();
  v32 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)&v30 = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v18 + 64) = *(_QWORD *)(a1 + 48);
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v30, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v30 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x70614764656546, 0xE700000000000000, v29, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = swift_allocObject();
  v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v22;
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(a1 + 48);
  v23 = *(int *)(v8 + 60);
  v24 = *(_QWORD **)(v4 + v23);
  sub_1BA6B3264(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1BA6A8950(0, v24[2] + 1, 1, v24);
  v26 = v24[2];
  v25 = v24[3];
  if (v26 >= v25 >> 1)
    v24 = sub_1BA6A8950((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
  v24[2] = v26 + 1;
  v27 = &v24[9 * v26];
  v27[4] = 0x70614764656546;
  v27[5] = 0xE700000000000000;
  v27[6] = v29;
  v27[7] = a3;
  v27[8] = v21;
  result = *(double *)&v30;
  *(_OWORD *)(v27 + 9) = v30;
  v27[11] = &type metadata for FeedGap;
  v27[12] = v17;
  *(_QWORD *)(v4 + v23) = v24;
  return result;
}

uint64_t sub_1BA6B3264(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BA75A650(v2, v3);
  return a1;
}

uint64_t sub_1BA6B32A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(__int128 *__return_ptr, uint64_t, uint64_t);
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  _BYTE *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  _BYTE v53[40];
  _QWORD v54[6];
  __int128 v55[2];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _UNKNOWN **v64;

  v41 = a1;
  *(_QWORD *)&v45 = sub_1BB86DA38();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v42 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s3GapV5BoundVMa(0);
  v4 = *(int *)(v3 + 20);
  v5 = (uint64_t *)(v1 + *(int *)(v3 + 24));
  v6 = *v5;
  v34 = v5[1];
  v7 = v5[2];
  v37 = v6;
  v38 = v7;
  v39 = v5[3];
  v40 = *((unsigned __int8 *)v5 + 32);
  v8 = v5[5];
  v36 = v5[6];
  v9 = v1 + v4;
  v10 = type metadata accessor for GroupLayoutContext();
  v11 = *(int *)(v10 + 40);
  v12 = v9;
  v44 = v9;
  v13 = *(_QWORD *)(*(_QWORD *)(v9 + v11) + 16);
  v14 = *(double *)(v12 + *(int *)(v10 + 32));
  sub_1BA4C010C(v13 + 16, (uint64_t)&v46);
  sub_1BA4C010C(v13 + 56, (uint64_t)v55);
  v15 = v14 * *(double *)(v13 + 96);
  v35 = v53;
  sub_1BA4CECCC(&v46, (uint64_t)v53);
  sub_1BA4CECCC(v55, (uint64_t)v54);
  *(double *)&v54[5] = v15;
  sub_1BA4C010C((uint64_t)v54, (uint64_t)&v56);
  v16 = type metadata accessor for GapViewStyler();
  v17 = swift_allocObject();
  v18 = v58;
  v19 = v59;
  __swift_project_boxed_opaque_existential_1(&v56, v58);
  v20 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v19 + 24);
  swift_bridgeObjectRetain();
  v21 = v36;
  sub_1BA75A650(v8, v36);
  v20(&v52, v18, v19);
  *(_OWORD *)(v17 + 16) = v52;
  sub_1BA4CECCC(&v56, v17 + 32);
  v63 = v16;
  v64 = &off_1E73374C8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  v61 = v21;
  v62 = v17;
  *(_QWORD *)&v56 = v37;
  *((_QWORD *)&v56 + 1) = v34;
  v57 = v38;
  v58 = v39;
  LOBYTE(v59) = v40;
  v60 = v8;
  (*(void (**)(char *, _QWORD, _QWORD))(v43 + 104))(v42, *MEMORY[0x1E0DB6208], v45);
  sub_1BA6B3C90();
  swift_allocObject();
  sub_1BB86DB34();
  sub_1BB86DB40();
  swift_release();
  v22 = v46;
  v23 = v47;
  v24 = v48;
  v45 = v49;
  v25 = v50;
  v26 = v51;
  sub_1BA6B391C(0, &qword_1ED3B9D08, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
  v28 = swift_allocObject();
  sub_1BA6B3B5C((uint64_t)&v56, v28 + 16);
  *(_OWORD *)(v28 + 112) = v22;
  *(_QWORD *)(v28 + 128) = v23;
  *(_QWORD *)(v28 + 136) = v24;
  *(_OWORD *)(v28 + 144) = v45;
  *(_QWORD *)(v28 + 160) = v25;
  *(_QWORD *)(v28 + 168) = v26;
  *(_QWORD *)(v27 + 32) = v28 | 0x1000000000000000;
  *(_QWORD *)&v46 = v27;
  sub_1BA6B391C(0, (unint64_t *)&qword_1ED3B9350, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v30 = v41;
  *v41 = 0;
  *(_OWORD *)(v30 + 8) = v22;
  *((_QWORD *)v30 + 3) = v23;
  *((_QWORD *)v30 + 4) = v24;
  v31 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v31;
  return sub_1BA6B3AF0((uint64_t)&v56);
}

uint64_t sub_1BA6B363C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v3 = sub_1BB86DA38();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s2AdV5BoundVMa();
  sub_1BA4C2DD8(v1 + *(int *)(v13 + 24), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  v14 = v1 + *(int *)(v13 + 20);
  v27 = *(_QWORD *)(*(_QWORD *)(v14 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24);
  v28 = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB6208], v3);
  sub_1BA6B3A3C();
  swift_allocObject();
  swift_retain();
  sub_1BB86DB34();
  swift_release();
  sub_1BB86DB40();
  swift_release();
  v26 = *(_OWORD *)v9;
  v15 = *((_QWORD *)v9 + 2);
  v16 = *((_QWORD *)v9 + 3);
  sub_1BA6B391C(0, &qword_1ED3B9D08, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
  sub_1BA64109C();
  v19 = v18;
  v20 = swift_allocBox();
  v22 = v21 + *(int *)(v19 + 48);
  sub_1BA4C2DD8((uint64_t)v12, v21, type metadata accessor for FeedBannerAdViewLayout.Context);
  sub_1BA4C2DD8((uint64_t)v9, v22, type metadata accessor for FeedBannerAdViewLayout.Attributes);
  *(_QWORD *)(v17 + 32) = v20 | 0x3000000000000000;
  v29 = v17;
  sub_1BA6B391C(0, (unint64_t *)&qword_1ED3B9350, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v23 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 8) = v26;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v16;
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v23;
  *(_QWORD *)(a1 + 48) = v24;
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedBannerAdViewLayout.Attributes);
  return sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedBannerAdViewLayout.Context);
}

void sub_1BA6B391C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for FeedItemLayoutAttributes);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t _s2AdV5BoundVMa()
{
  uint64_t result;

  result = qword_1ED3B3510;
  if (!qword_1ED3B3510)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA6B39A0()
{
  unint64_t result;

  result = qword_1ED3B2540;
  if (!qword_1ED3B2540)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItemLayoutAttributes, &type metadata for FeedItemLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED3B2540);
  }
  return result;
}

unint64_t sub_1BA6B39E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9360;
  if (!qword_1ED3B9360)
  {
    sub_1BA6B391C(255, (unint64_t *)&qword_1ED3B9350, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9360);
  }
  return result;
}

void sub_1BA6B3A3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0708)
  {
    type metadata accessor for FeedBannerAdViewLayout.Attributes(255);
    sub_1BA62D620();
    sub_1BA4A2870(&qword_1ED3B1FE0, type metadata accessor for FeedBannerAdViewLayout.Attributes, (uint64_t)&protocol conformance descriptor for FeedBannerAdViewLayout.Attributes);
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0708);
  }
}

uint64_t _s3GapV5BoundVMa(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B35D0);
}

uint64_t sub_1BA6B3AF0(uint64_t a1)
{
  destroy for GapViewLayout.Context(a1);
  return a1;
}

uint64_t destroy for GapViewLayout.Context(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 56);
}

uint64_t sub_1BA6B3B5C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GapViewLayout.Context(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for GapViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = (_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v7 >= 0x11)
  {
    *(_QWORD *)(a1 + 40) = *v6;
    *(_QWORD *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  }
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 56, a2 + 56);
  return a1;
}

uint64_t type metadata accessor for GapViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1BA6B3C50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v2, v3);
  return a1;
}

void sub_1BA6B3C90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0700)
  {
    sub_1BA5043FC();
    sub_1BA504440();
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0700);
  }
}

void sub_1BA6B3D08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04F0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04F0);
  }
}

unint64_t sub_1BA6B3D6C()
{
  unint64_t result;

  result = qword_1ED3B8DF8;
  if (!qword_1ED3B8DF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E441C, &type metadata for A6_V2);
    atomic_store(result, (unint64_t *)&qword_1ED3B8DF8);
  }
  return result;
}

_QWORD *sub_1BA6B3DC0()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t inited;
  unint64_t v4;
  unint64_t *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 25);
  sub_1BA4B07F0(0, &qword_1ED3BBAE8, (uint64_t (*)(uint64_t))sub_1BA81E160, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(inited + 32) = 0x7972616D697270;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(v1, sel_coverImagePrimaryColor);
  *(_QWORD *)(inited + 56) = 0x756F72676B636162;
  *(_QWORD *)(inited + 64) = 0xEA0000000000646ELL;
  *(_QWORD *)(inited + 72) = objc_msgSend(v1, sel_coverImageBackgroundColor);
  *(_QWORD *)(inited + 80) = 1954047348;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  *(_QWORD *)(inited + 96) = objc_msgSend(v1, sel_coverImageTextColor);
  *(_QWORD *)(inited + 104) = 0x746E65636361;
  *(_QWORD *)(inited + 112) = 0xE600000000000000;
  *(_QWORD *)(inited + 120) = objc_msgSend(v1, sel_coverImageAccentColor);
  v4 = sub_1BA6B460C(inited);
  v5 = sub_1BA6B40C0(v4);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)sub_1BB434F4C((uint64_t)v5);
  swift_release();
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_1BA6EA0D0(0, v6[2] + 1, 1, v6);
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
      v6 = sub_1BA6EA0D0((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v6[2] = v8 + 1;
    v9 = &v6[2 * v8];
    v9[4] = 0x6D75696D657270;
    v9[5] = 0xE700000000000000;
  }
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  sub_1BB8729A0();

  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_1BA6EA0D0(0, v6[2] + 1, 1, v6);
  v13 = v6[2];
  v12 = v6[3];
  if (v13 >= v12 >> 1)
    v6 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
  v6[2] = v13 + 1;
  v14 = &v6[2 * v13];
  v14[4] = 0xD000000000000012;
  v14[5] = 0x80000001BB9628E0;
  return v6;
}

unint64_t *sub_1BA6B40C0(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t *v6;
  void *v7;
  _QWORD v9[2];

  v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1BA6B4210((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1BA6B4210((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1BCCE5C38](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1BA6B4210(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1BA6B4358(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1BA6B4358(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1BA6B4358(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1BA6B4358(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1BA6B4358(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1BA6B4358(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BA6B4358(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1BA79F380(0, (unint64_t *)&qword_1ED3BBAC0, (void (*)(uint64_t))sub_1BA81CEE4);
  result = sub_1BB873F6C();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v32)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v32)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v32)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v32)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v32)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_1BB8745CC();
    v21 = v20;
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    result = sub_1BB874608();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v25);
    *v30 = v19;
    v30[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v25) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1BA6B460C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA6B471C();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BA6B471C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBAC0)
  {
    sub_1BA81D86C(255, (unint64_t *)&qword_1ED3C0478, &qword_1ED3C0470, 0x1E0D58A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBAC0);
  }
}

uint64_t sub_1BA6B47A0()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 136);
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
  v3 = 0xD000000000000012;
  if (v1)
    v3 = 0xD000000000000015;
  v4 = 0x80000001BB9627A0;
  if (v1)
    v4 = 0x80000001BB962780;
  *(_QWORD *)(result + 32) = v3;
  *(_QWORD *)(result + 40) = v4;
  return result;
}

double sub_1BA6B4828@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _QWORD v38[6];
  char v39[105];
  __int128 v40[9];
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A6_V4.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v42);
  sub_1BA4C010C(v11 + 56, (uint64_t)v41);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v42, v14 + 16);
  sub_1BA4CECCC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v41);
  sub_1BA4C010C(v15 + 56, (uint64_t)v40);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v41, v17 + 16);
  sub_1BA4CECCC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v19 = sub_1BA6B5B08((uint64_t)&v42, *(_QWORD *)(*(_QWORD *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v42 = inited;
  sub_1BA6B5BE8(v19);
  v20 = v42;
  v38[2] = v18;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BACB8FF0(v21, v20, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = *MEMORY[0x1E0DB5D88];
  v24 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E0DB6200], v35);
  v37 = v22;
  sub_1BA4F5964(0, &qword_1ED39DDF8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v42;
  v26 = v43;
  v27 = v44;
  *(_QWORD *)&v42 = v22;
  *(_QWORD *)&v41[0] = v45;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v42 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BA6B4D08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  uint64_t v31;
  char v32[105];
  __int128 v33[2];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[6];

  v2 = v1;
  v27 = a1;
  v26 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A6_V1.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v34);
  sub_1BA4C010C(v9 + 56, (uint64_t)v33);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v34, inited + 16);
  sub_1BA4CECCC(v33, inited + 56);
  *(double *)(inited + 96) = v11;
  v32[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v32, v38);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v30[2] = v2;
  v30[3] = v38;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v30, v13, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  v15 = *MEMORY[0x1E0DB5D88];
  v16 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v26);
  v28 = v14;
  v29 = v2;
  sub_1BA595D7C(0, &qword_1ED39DDF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v26 = sub_1BB86DB34();
  v17 = sub_1BB86DB40();
  v25 = v34;
  v18 = v35;
  v19 = v36;
  *(_QWORD *)&v34 = v14;
  *(_QWORD *)&v33[0] = v37;
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v20 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v34 = v20;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v21 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v22 = v27;
  *v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((_QWORD *)v22 + 3) = v18;
  *((_QWORD *)v22 + 4) = v19;
  v23 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v22 + 5) = v21;
  *((_QWORD *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1BA6B50E4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_1BA4C576C(255, a2);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1BA6B5124@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _QWORD v38[6];
  char v39[105];
  __int128 v40[9];
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A6_V3.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v42);
  sub_1BA4C010C(v11 + 56, (uint64_t)v41);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v42, v14 + 16);
  sub_1BA4CECCC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v41);
  sub_1BA4C010C(v15 + 56, (uint64_t)v40);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v41, v17 + 16);
  sub_1BA4CECCC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v19 = sub_1BA6B5B08((uint64_t)&v42, *(_QWORD *)(*(_QWORD *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v42 = inited;
  sub_1BA6B5BE8(v19);
  v20 = v42;
  v38[2] = v18;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BACB8FF0(v21, v20, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = *MEMORY[0x1E0DB5D88];
  v24 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E0DB6200], v35);
  v37 = v22;
  sub_1BA5955DC(0, &qword_1ED3B0710, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v42;
  v26 = v43;
  v27 = v44;
  *(_QWORD *)&v42 = v22;
  *(_QWORD *)&v41[0] = v45;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v42 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t FeedLayoutStylerFactory.styler(withHeading:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t result;
  _OWORD v19[5];
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = v2;
  v5 = *a1;
  v6 = v2[5];
  v7 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v6);
  LOBYTE(v19[0]) = v5;
  (*(void (**)(_OWORD *__return_ptr, _OWORD *, uint64_t, uint64_t))(v7 + 8))(v24, v19, v6, v7);
  v8 = v25;
  sub_1BA4C010C((uint64_t)(v3 + 7), (uint64_t)v21);
  v9 = v3[12];
  v10 = type metadata accessor for HeadlineViewStyler();
  v11 = swift_allocObject();
  v12 = v24[1];
  *(_OWORD *)(v11 + 16) = v24[0];
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = v8;
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v14 + 16))(v19, v13, v14);
  v15 = v20;
  v16 = v19[1];
  *(_OWORD *)(v11 + 56) = v19[0];
  *(_OWORD *)(v11 + 72) = v16;
  v17 = v19[3];
  *(_OWORD *)(v11 + 88) = v19[2];
  *(_OWORD *)(v11 + 104) = v17;
  *(_OWORD *)(v11 + 120) = v19[4];
  *(_QWORD *)(v11 + 136) = v15;
  sub_1BA4C010C((uint64_t)v21, v11 + 152);
  *(_QWORD *)(v11 + 144) = v9;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  a2[3] = v10;
  a2[4] = (uint64_t)&off_1E72F0EA0;
  *a2 = v11;
  return result;
}

uint64_t type metadata accessor for HeadlineViewStyler()
{
  return objc_opt_self();
}

void sub_1BA6B5754(NewsFeed::Heading a1@<W0>, NewsFeed::HeadlineFontBook *a2@<X8>)
{
  DefaultFontBook.headlineFontBook(heading:)(a2, a1);
}

void __swiftcall DefaultFontBook.headlineFontBook(heading:)(NewsFeed::HeadlineFontBook *__return_ptr retstr, NewsFeed::Heading heading)
{
  objc_class *v3;
  void *v4;
  double v5;
  objc_class *v6;
  objc_class *v7;
  id v8;
  objc_class *v9;
  objc_class *v10;

  if (*(unsigned __int8 *)heading - 2 >= 4)
  {
    if (*(_BYTE *)heading)
    {
      sub_1BA7425CC();
      v3 = (objc_class *)sub_1BB873690();
      v4 = (void *)objc_opt_self();
      v5 = *MEMORY[0x1E0DC1440];
      v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E0DC1440]);
      v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E0DC1438]);
    }
    else
    {
      sub_1BA7425CC();
      v3 = (objc_class *)sub_1BB873690();
      v4 = (void *)objc_opt_self();
      v5 = *MEMORY[0x1E0DC1440];
      v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E0DC1440]);
      v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E0DC1448]);
    }
    v8 = objc_msgSend(v4, sel_systemFontOfSize_, 11.0);
  }
  else
  {
    sub_1BA7425CC();
    v3 = (objc_class *)sub_1BB873690();
    v4 = (void *)objc_opt_self();
    v5 = *MEMORY[0x1E0DC1440];
    v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E0DC1440]);
    v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E0DC1438]);
    v8 = objc_msgSend(v4, sel_systemFontOfSize_, 11.0);
  }
  v9 = (objc_class *)v8;
  v10 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 13.0, v5);
  retstr->titleFont.super.isa = v3;
  retstr->excerptFont.super.isa = v6;
  retstr->accessoryFont.super.isa = v7;
  retstr->publisherFont.super.isa = v9;
  retstr->adBadgeFont.super.isa = v10;
}

uint64_t sub_1BA6B5A14(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA6B5A5C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a4(255, a2, a3, MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA6B5AA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B94C0;
  if (!qword_1ED3B94C0)
  {
    sub_1BA4B07F0(255, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B94C0);
  }
  return result;
}

uint64_t sub_1BA6B5B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else
  {
    v2 = a2;
    if (a2)
    {
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B6FE0);
      v4 = sub_1BB872E74();
      *(_QWORD *)(v4 + 16) = v2;
      v5 = v4 + 32;
      do
      {
        sub_1BA4C010C(a1, v5);
        v5 += 40;
        --v2;
      }
      while (v2);
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
    return v4;
  }
  return result;
}

uint64_t sub_1BA6B5BE8(uint64_t a1)
{
  return sub_1BA6ECBC8(a1, (void (*)(_QWORD))sub_1BA7F22B0, (unint64_t *)&qword_1ED3B6FE0);
}

uint64_t sub_1BA6B5C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1BA6B5C0C(a1, a2, a3);
}

uint64_t sub_1BA6B5C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  _BYTE v13[40];

  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA4C2DD8(a1, (uint64_t)v8, v9);
  sub_1BA4C010C(a2, (uint64_t)v13);
  v10 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v10, (uint64_t)v8, (uint64_t)v13, a3);
}

uint64_t sub_1BA6B5CBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSourceMapNode.init(from:)(a1, a2);
}

uint64_t FormatSourceMapNode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  sub_1BA4CDF6C(0, &qword_1ED3C4430, (uint64_t (*)(void))sub_1BA6B5EAC, (uint64_t)&type metadata for FormatSourceMapNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)&v19);
  FormatNode.init(from:)(&v19, (uint64_t)&v22);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = a2;
  v11 = v22;
  v12 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1BA6B5EAC();
  swift_retain();
  sub_1BB87468C();
  sub_1BA6B5EF0();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v19;
  v14 = v21;
  v15 = (_QWORD *)v17;
  *(_OWORD *)(v17 + 16) = v20;
  *v15 = v11;
  v15[1] = v13;
  v15[4] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1BA6B5EAC()
{
  unint64_t result;

  result = qword_1ED3C41F0;
  if (!qword_1ED3C41F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9358C0, &type metadata for FormatSourceMapNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C41F0);
  }
  return result;
}

unint64_t sub_1BA6B5EF0()
{
  unint64_t result;

  result = qword_1ED3C0A60;
  if (!qword_1ED3C0A60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMap, &type metadata for FormatSourceMap);
    atomic_store(result, (unint64_t *)&qword_1ED3C0A60);
  }
  return result;
}

uint64_t FormatColor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v20 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BAE88124();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v12 = sub_1BB8740EC();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    v15 = *v14;
    if (*v14 >= 4)
      break;
    v14 += 2;
    if (!--v13)
      goto LABEL_7;
  }
  v16 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v17 = v16;
  *(_QWORD *)(v17 + 8) = v15;
  *(_QWORD *)(v17 + 16) = &unk_1E726AEA8;
  *(_OWORD *)(v17 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v16, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  a1 = v20;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatNode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;

  v23 = a2;
  *(_QWORD *)&v24 = sub_1BB86C8E0();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v8 = (void *)v25;
  sub_1BB87468C();
  v9 = v8;
  if (v8)
    goto LABEL_10;
  v20 = v3;
  *(_QWORD *)&v25 = v5;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v22;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA6B855C();
    v27 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726CF68;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v12);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Dictionary<>.errorOnUnknownKeys.getter(uint64_t a1)
{
  return sub_1BA6ED778(a1);
}

unint64_t sub_1BA6B8518()
{
  unint64_t result;

  result = qword_1ED3B4820;
  if (!qword_1ED3B4820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E69B0, &type metadata for FormatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B4820);
  }
  return result;
}

unint64_t sub_1BA6B855C()
{
  unint64_t result;

  result = qword_1ED3C6448;
  if (!qword_1ED3C6448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8D70, &_s10CodingTypeON_57);
    atomic_store(result, (unint64_t *)&qword_1ED3C6448);
  }
  return result;
}

uint64_t type metadata accessor for FormatSnippetNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatSwitchNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA6B85E0()
{
  unint64_t result;

  result = qword_1ED3B5378;
  if (!qword_1ED3B5378)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBinding, &type metadata for FormatColorBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B5378);
  }
  return result;
}

uint64_t type metadata accessor for FormatTextNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatAccessibilityNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatHBoxNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatVOverlayNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatSlotNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA6B86C4()
{
  unint64_t result;

  result = qword_1ED3B6278;
  if (!qword_1ED3B6278)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProcessedColor, &type metadata for FormatProcessedColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B6278);
  }
  return result;
}

uint64_t sub_1BA6B8708(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA6462A8(255, a2, a3, a4);
    result = MEMORY[0x1BCCE5B24](a2, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatViewNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatRepeatNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatFrameNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatItemNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatGroupNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatWebEmbedNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatAdMetricsNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatButtonNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatSupplementaryNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatOptionsNode()
{
  return objc_opt_self();
}

uint64_t FormatPackageInventory.merging(with:)(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  void (**v55)(unint64_t, uint64_t, uint64_t);
  void (*v56)(unint64_t, uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(unint64_t, uint64_t, uint64_t);
  void (*v59)(unint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  __int128 *v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 *v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  __int128 *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  __int128 *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __int128 *v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  __int128 *v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 *v137;
  unint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  __int128 *v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  unint64_t v149;
  unint64_t v150;
  _QWORD *v151;
  __int128 *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  _QWORD **v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (**v187)(unint64_t, uint64_t, uint64_t);
  void (*v188)(unint64_t, uint64_t, uint64_t);
  void (*v189)(unint64_t, uint64_t, uint64_t);
  int *v190;
  uint64_t v191;
  __int128 *v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  __int128 *v198;
  unint64_t v199;
  unint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t i;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  _QWORD *v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int64_t v215;
  uint64_t v216;
  _QWORD *v217;
  int *v218;
  uint64_t *v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t result;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  _QWORD *v271;
  uint64_t v272;
  uint64_t v273;
  int64_t v274;
  char *v275;
  uint64_t *v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(unint64_t, uint64_t, uint64_t);
  uint64_t v280;
  uint64_t v281;
  __int128 v282;
  char *v283;
  char *v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void (*v289)(unint64_t, uint64_t, uint64_t);
  void (*v290)(unint64_t, uint64_t, uint64_t);
  uint64_t v291[2];
  __int128 v292;
  uint64_t v293;
  __int128 v294[3];
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  __int128 v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  __int128 v306;
  __int128 v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  __int128 v311;
  __int128 v312;
  uint64_t v313;
  __int128 v314;
  __int128 v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  __int128 v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  __int128 v325;
  __int128 v326[4];
  __int128 v327[3];
  __int128 v328;
  _QWORD *v329;
  __int128 v330;
  _QWORD *v331;
  char v332;
  _QWORD *v333;
  char v334[25];

  v3 = *v1;
  sub_1BA74E57C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v258 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v258 - v8;
  v10 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v10);
  v278 = (uint64_t)&v258 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = type metadata accessor for FormatCompilerOptions(0);
  v273 = *(_QWORD *)(v280 - 8);
  MEMORY[0x1E0C80A78](v280);
  v268 = (char *)&v258 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v277 = (uint64_t)&v258 - v14;
  MEMORY[0x1E0C80A78](v15);
  v284 = (char *)&v258 - v16;
  MEMORY[0x1E0C80A78](v17);
  v283 = (char *)&v258 - v18;
  MEMORY[0x1E0C80A78](v19);
  v270 = (uint64_t)&v258 - v20;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v258 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BB86EB84();
  *(_QWORD *)&v282 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v264 = (char *)&v258 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v258 - v27;
  if (!(a1 >> 62))
  {
    v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v29)
      goto LABEL_3;
    return swift_retain();
  }
  swift_bridgeObjectRetain();
  v29 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v29)
    return swift_retain();
LABEL_3:
  v275 = v9;
  v276 = v6;
  v281 = v29;
  v269 = v23;
  v30 = v272;
  v31 = *(_QWORD *)(v272 + 24);
  v266 = *(_QWORD *)(v272 + 16);
  v267 = v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3CFB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v32 = v282;
  v33 = *(_QWORD *)(v282 + 72);
  v34 = (*(unsigned __int8 *)(v282 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v282 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  v271 = (_QWORD *)v35;
  v279 = *(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 16);
  v279(v35 + v34, v30 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v24);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v285 = a1;
  v286 = v36;
  v265 = v31;
  v274 = v36 & ~(v36 >> 63);
  if (v36)
  {
    v333 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BA790A6C(0, v36 & ~(v36 >> 63), 0);
    if (v36 < 0)
    {
LABEL_209:
      __break(1u);
      goto LABEL_210;
    }
    v37 = v333;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v38 = 0;
      do
      {
        v39 = MEMORY[0x1BCCE4630](v38, v285);
        v279((unint64_t)v28, v39 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v24);
        swift_unknownObjectRelease();
        v333 = v37;
        v41 = v37[2];
        v40 = v37[3];
        if (v41 >= v40 >> 1)
        {
          sub_1BA790A6C(v40 > 1, v41 + 1, 1);
          v37 = v333;
        }
        ++v38;
        v37[2] = v41 + 1;
        (*(void (**)(char *, char *, uint64_t))(v282 + 32))((char *)v37 + v34 + v41 * v33, v28, v24);
      }
      while (v286 != v38);
    }
    else
    {
      v70 = (_QWORD *)(a1 + 32);
      v71 = v286;
      v72 = v264;
      do
      {
        v279((unint64_t)v72, *v70 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v24);
        v333 = v37;
        v74 = v37[2];
        v73 = v37[3];
        if (v74 >= v73 >> 1)
        {
          sub_1BA790A6C(v73 > 1, v74 + 1, 1);
          v72 = v264;
          v37 = v333;
        }
        v37[2] = v74 + 1;
        (*(void (**)(char *, char *, uint64_t))(v282 + 32))((char *)v37 + v34 + v74 * v33, v72, v24);
        ++v70;
        --v71;
      }
      while (v71);
    }
  }
  else
  {
    v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v333 = v271;
  sub_1BA791DDC((uint64_t)v37);
  swift_bridgeObjectRetain();
  sub_1BA792C58(&v333);
  v42 = (uint64_t)v269;
  v43 = v286;
  swift_bridgeObjectRelease();
  v44 = v272;
  if (v333[2])
  {
    v279(v42, (uint64_t)v333 + v34, v24);
    v45 = 0;
  }
  else
  {
    v45 = 1;
  }
  v46 = v285;
  v47 = v282;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v282 + 56))(v42, v45, 1, v24);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v42, 1, v24) == 1)
    goto LABEL_220;
  v334[0] = *(_BYTE *)(v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
  v48 = (char *)(v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  v332 = *v48;
  v49 = (uint64_t *)(v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  v51 = *v49;
  v50 = v49[1];
  v52 = (uint64_t *)(v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  swift_beginAccess();
  v54 = *v52;
  v53 = (char *)v52[1];
  v55 = (void (**)(unint64_t, uint64_t, uint64_t))(v44
                                                                 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  v56 = *v55;
  v57 = v44;
  v58 = v55[2];
  v59 = (uint64_t)v55[1];
  *(_QWORD *)&v328 = v56;
  *((_QWORD *)&v328 + 1) = v59;
  v329 = v58;
  v262 = v50;
  v263 = v51;
  v261 = v54;
  v264 = v53;
  if (v43)
  {
    *(_QWORD *)&v330 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)&v282 = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA790834(0, v274, 0);
    if (v43 < 0)
    {
LABEL_210:
      __break(1u);
      goto LABEL_211;
    }
    v271 = v58;
    v279 = v56;
    v60 = v330;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v61 = 0;
      do
      {
        v62 = (uint64_t *)(MEMORY[0x1BCCE4630](v61, v285) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        v63 = *v62;
        v64 = v62[1];
        v65 = v62[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(_QWORD *)&v330 = v60;
        v67 = *(_QWORD *)(v60 + 16);
        v66 = *(_QWORD *)(v60 + 24);
        if (v67 >= v66 >> 1)
        {
          sub_1BA790834(v66 > 1, v67 + 1, 1);
          v60 = v330;
        }
        ++v61;
        *(_QWORD *)(v60 + 16) = v67 + 1;
        v68 = (_QWORD *)(v60 + 24 * v67);
        v68[4] = v63;
        v68[5] = v64;
        v68[6] = v65;
      }
      while (v286 != v61);
    }
    else
    {
      v75 = (_QWORD *)(v46 + 32);
      v76 = v43;
      do
      {
        v77 = (uint64_t *)(*v75 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        v78 = *v77;
        v79 = v77[1];
        v80 = v77[2];
        *(_QWORD *)&v330 = v60;
        v82 = *(_QWORD *)(v60 + 16);
        v81 = *(_QWORD *)(v60 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v82 >= v81 >> 1)
        {
          sub_1BA790834(v81 > 1, v82 + 1, 1);
          v60 = v330;
        }
        *(_QWORD *)(v60 + 16) = v82 + 1;
        v83 = (_QWORD *)(v60 + 24 * v82);
        v83[4] = v78;
        v83[5] = v79;
        v83[6] = v80;
        ++v75;
        --v76;
      }
      while (v76);
    }
    v46 = v285;
    v43 = v286;
    v69 = v272;
  }
  else
  {
    v69 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA7A14A8(v60, &v330);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v328 = v330;
  v329 = v331;
  v84 = (uint64_t *)(v69 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
  swift_beginAccess();
  v85 = v84[1];
  v323 = *v84;
  v324 = v85;
  if (v43)
  {
    v322 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA790A40(0, v274, 0);
    if (v43 < 0)
    {
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    v86 = v322;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v87 = 0;
      do
      {
        v88 = (__int128 *)(MEMORY[0x1BCCE4630](v87, v46) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
        swift_beginAccess();
        v282 = *v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v322 = v86;
        v90 = *(_QWORD *)(v86 + 16);
        v89 = *(_QWORD *)(v86 + 24);
        if (v90 >= v89 >> 1)
        {
          sub_1BA790A40(v89 > 1, v90 + 1, 1);
          v86 = v322;
        }
        ++v87;
        *(_QWORD *)(v86 + 16) = v90 + 1;
        *(_OWORD *)(v86 + 16 * v90 + 32) = v282;
      }
      while (v286 != v87);
    }
    else
    {
      v92 = (_QWORD *)(v46 + 32);
      do
      {
        v93 = (__int128 *)(*v92 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
        swift_beginAccess();
        v282 = *v93;
        v322 = v86;
        v95 = *(_QWORD *)(v86 + 16);
        v94 = *(_QWORD *)(v86 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v95 >= v94 >> 1)
        {
          sub_1BA790A40(v94 > 1, v95 + 1, 1);
          v86 = v322;
        }
        *(_QWORD *)(v86 + 16) = v95 + 1;
        *(_OWORD *)(v86 + 16 * v95 + 32) = v282;
        ++v92;
        --v43;
        v46 = v285;
      }
      while (v43);
    }
    v91 = v272;
    v43 = v286;
  }
  else
  {
    v91 = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v86 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA7A5BE0(v86, v327);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v326[0] = v327[0];
  v96 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
  swift_beginAccess();
  v97 = v96[1];
  v317 = *v96;
  v318 = v97;
  if (v43)
  {
    v316 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA790808(0, v274, 0);
    if (v43 < 0)
    {
LABEL_212:
      __break(1u);
      goto LABEL_213;
    }
    v98 = v316;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v99 = 0;
      do
      {
        v100 = (__int128 *)(MEMORY[0x1BCCE4630](v99, v46) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
        swift_beginAccess();
        v282 = *v100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v316 = v98;
        v102 = *(_QWORD *)(v98 + 16);
        v101 = *(_QWORD *)(v98 + 24);
        if (v102 >= v101 >> 1)
        {
          sub_1BA790808(v101 > 1, v102 + 1, 1);
          v98 = v316;
        }
        ++v99;
        *(_QWORD *)(v98 + 16) = v102 + 1;
        *(_OWORD *)(v98 + 16 * v102 + 32) = v282;
      }
      while (v286 != v99);
    }
    else
    {
      v103 = (_QWORD *)(v46 + 32);
      do
      {
        v104 = (__int128 *)(*v103 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
        swift_beginAccess();
        v282 = *v104;
        v316 = v98;
        v106 = *(_QWORD *)(v98 + 16);
        v105 = *(_QWORD *)(v98 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v106 >= v105 >> 1)
        {
          sub_1BA790808(v105 > 1, v106 + 1, 1);
          v98 = v316;
        }
        *(_QWORD *)(v98 + 16) = v106 + 1;
        *(_OWORD *)(v98 + 16 * v106 + 32) = v282;
        ++v103;
        --v43;
        v46 = v285;
      }
      while (v43);
    }
    v91 = v272;
    v43 = v286;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v98 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA7A0CF0(v98, &v325);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v321 = v325;
  v107 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v108 = *v107;
  v109 = v107[1];
  if (v43)
  {
    v313 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7907DC(0, v274, 0);
    if (v43 < 0)
    {
LABEL_213:
      __break(1u);
      goto LABEL_214;
    }
    v110 = v313;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v111 = 0;
      do
      {
        v112 = (__int128 *)(MEMORY[0x1BCCE4630](v111, v46) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        v282 = *v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v313 = v110;
        v114 = *(_QWORD *)(v110 + 16);
        v113 = *(_QWORD *)(v110 + 24);
        if (v114 >= v113 >> 1)
        {
          sub_1BA7907DC(v113 > 1, v114 + 1, 1);
          v110 = v313;
        }
        ++v111;
        *(_QWORD *)(v110 + 16) = v114 + 1;
        *(_OWORD *)(v110 + 16 * v114 + 32) = v282;
      }
      while (v286 != v111);
    }
    else
    {
      v116 = (_QWORD *)(v46 + 32);
      do
      {
        v117 = (__int128 *)(*v116 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        v282 = *v117;
        v313 = v110;
        v119 = *(_QWORD *)(v110 + 16);
        v118 = *(_QWORD *)(v110 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v119 >= v118 >> 1)
        {
          sub_1BA7907DC(v118 > 1, v119 + 1, 1);
          v110 = v313;
        }
        *(_QWORD *)(v110 + 16) = v119 + 1;
        *(_OWORD *)(v110 + 16 * v119 + 32) = v282;
        ++v116;
        --v43;
        v46 = v285;
      }
      while (v43);
    }
    v91 = v272;
    v43 = v286;
    v115 = *(_QWORD *)(v110 + 16);
    if (v115)
      goto LABEL_81;
LABEL_75:
    swift_bridgeObjectRelease();
    v319 = v108;
    v320 = v109;
    goto LABEL_84;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v115 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v115)
    goto LABEL_75;
LABEL_81:
  v313 = v108;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v120 = 32;
  do
  {
    v121 = swift_bridgeObjectRetain();
    sub_1BA791D94(v121);
    v120 += 16;
    --v115;
  }
  while (v115);
  swift_bridgeObjectRelease();
  sub_1BA76B178(v313, &v319);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v108 = v319;
  v109 = v320;
LABEL_84:
  *(_QWORD *)&v315 = v108;
  *((_QWORD *)&v315 + 1) = v109;
  v122 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
  swift_beginAccess();
  v123 = v122[1];
  v309 = *v122;
  v310 = v123;
  if (v43)
  {
    v308 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7905B0(0, v274, 0);
    if (v43 < 0)
    {
LABEL_214:
      __break(1u);
      goto LABEL_215;
    }
    v124 = v308;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v125 = 0;
      do
      {
        v126 = (__int128 *)(MEMORY[0x1BCCE4630](v125, v46) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
        swift_beginAccess();
        v282 = *v126;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v308 = v124;
        v128 = *(_QWORD *)(v124 + 16);
        v127 = *(_QWORD *)(v124 + 24);
        if (v128 >= v127 >> 1)
        {
          sub_1BA7905B0(v127 > 1, v128 + 1, 1);
          v124 = v308;
        }
        ++v125;
        *(_QWORD *)(v124 + 16) = v128 + 1;
        *(_OWORD *)(v124 + 16 * v128 + 32) = v282;
      }
      while (v286 != v125);
    }
    else
    {
      v129 = (_QWORD *)(v46 + 32);
      do
      {
        v130 = (__int128 *)(*v129 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
        swift_beginAccess();
        v282 = *v130;
        v308 = v124;
        v132 = *(_QWORD *)(v124 + 16);
        v131 = *(_QWORD *)(v124 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v132 >= v131 >> 1)
        {
          sub_1BA7905B0(v131 > 1, v132 + 1, 1);
          v124 = v308;
        }
        *(_QWORD *)(v124 + 16) = v132 + 1;
        *(_OWORD *)(v124 + 16 * v132 + 32) = v282;
        ++v129;
        --v43;
        v46 = v285;
      }
      while (v43);
    }
    v91 = v272;
    v43 = v286;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v124 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA794698(v124, &v314);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v312 = v314;
  v133 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
  swift_beginAccess();
  v134 = v133[1];
  v304 = *v133;
  v305 = v134;
  if (v43)
  {
    v303 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7905DC(0, v274, 0);
    if (v43 < 0)
    {
LABEL_215:
      __break(1u);
      goto LABEL_216;
    }
    v135 = v303;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v136 = 0;
      do
      {
        v137 = (__int128 *)(MEMORY[0x1BCCE4630](v136, v46)
                          + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
        swift_beginAccess();
        v282 = *v137;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v303 = v135;
        v139 = *(_QWORD *)(v135 + 16);
        v138 = *(_QWORD *)(v135 + 24);
        if (v139 >= v138 >> 1)
        {
          sub_1BA7905DC(v138 > 1, v139 + 1, 1);
          v135 = v303;
        }
        ++v136;
        *(_QWORD *)(v135 + 16) = v139 + 1;
        *(_OWORD *)(v135 + 16 * v139 + 32) = v282;
      }
      while (v286 != v136);
    }
    else
    {
      v140 = (_QWORD *)(v46 + 32);
      do
      {
        v141 = (__int128 *)(*v140 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
        swift_beginAccess();
        v282 = *v141;
        v303 = v135;
        v143 = *(_QWORD *)(v135 + 16);
        v142 = *(_QWORD *)(v135 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v143 >= v142 >> 1)
        {
          sub_1BA7905DC(v142 > 1, v143 + 1, 1);
          v135 = v303;
        }
        *(_QWORD *)(v135 + 16) = v143 + 1;
        *(_OWORD *)(v135 + 16 * v143 + 32) = v282;
        ++v140;
        --v43;
        v46 = v285;
      }
      while (v43);
    }
    v91 = v272;
    v43 = v286;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v135 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA7949C8(v135, &v311);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v307 = v311;
  v144 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  v145 = v144[1];
  v300 = *v144;
  v301 = v145;
  if (v43)
  {
    v299 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA790A14(0, v274, 0);
    if (v43 < 0)
    {
LABEL_216:
      __break(1u);
      goto LABEL_217;
    }
    v146 = v299;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v147 = 0;
      do
      {
        v148 = (__int128 *)(MEMORY[0x1BCCE4630](v147, v46) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
        swift_beginAccess();
        v282 = *v148;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v299 = v146;
        v150 = *(_QWORD *)(v146 + 16);
        v149 = *(_QWORD *)(v146 + 24);
        if (v150 >= v149 >> 1)
        {
          sub_1BA790A14(v149 > 1, v150 + 1, 1);
          v146 = v299;
        }
        ++v147;
        *(_QWORD *)(v146 + 16) = v150 + 1;
        *(_OWORD *)(v146 + 16 * v150 + 32) = v282;
      }
      while (v286 != v147);
    }
    else
    {
      v151 = (_QWORD *)(v46 + 32);
      do
      {
        v152 = (__int128 *)(*v151 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
        swift_beginAccess();
        v282 = *v152;
        v299 = v146;
        v154 = *(_QWORD *)(v146 + 16);
        v153 = *(_QWORD *)(v146 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v154 >= v153 >> 1)
        {
          sub_1BA790A14(v153 > 1, v154 + 1, 1);
          v146 = v299;
        }
        *(_QWORD *)(v146 + 16) = v154 + 1;
        *(_OWORD *)(v146 + 16 * v154 + 32) = v282;
        ++v151;
        --v43;
        v46 = v285;
      }
      while (v43);
    }
    v91 = v272;
    v43 = v286;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v146 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA7A1C0C(v146, &v306);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v302 = v306;
  v155 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  v297 = *v155;
  if (v43)
  {
    v296 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7907B0(0, v274, 0);
    if (v43 < 0)
    {
LABEL_217:
      __break(1u);
      goto LABEL_218;
    }
    if ((v46 & 0xC000000000000001) != 0)
    {
      v156 = 0;
      v157 = v296;
      do
      {
        v158 = (uint64_t *)(MEMORY[0x1BCCE4630](v156, v46)
                         + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
        swift_beginAccess();
        v159 = *v158;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7907B0(0, *(_QWORD *)(v157 + 16) + 1, 1);
          v157 = v296;
        }
        v161 = *(_QWORD *)(v157 + 16);
        v160 = *(_QWORD *)(v157 + 24);
        if (v161 >= v160 >> 1)
        {
          sub_1BA7907B0(v160 > 1, v161 + 1, 1);
          v157 = v296;
        }
        ++v156;
        *(_QWORD *)(v157 + 16) = v161 + 1;
        *(_QWORD *)(v157 + 8 * v161 + 32) = v159;
      }
      while (v43 != v156);
    }
    else
    {
      v163 = (_QWORD *)(v46 + 32);
      v164 = v296;
      v165 = v43;
      do
      {
        v166 = (uint64_t *)(*v163 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
        swift_beginAccess();
        v167 = *v166;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7907B0(0, *(_QWORD *)(v164 + 16) + 1, 1);
          v164 = v296;
        }
        v169 = *(_QWORD *)(v164 + 16);
        v168 = *(_QWORD *)(v164 + 24);
        if (v169 >= v168 >> 1)
        {
          sub_1BA7907B0(v168 > 1, v169 + 1, 1);
          v164 = v296;
        }
        *(_QWORD *)(v164 + 16) = v169 + 1;
        *(_QWORD *)(v164 + 8 * v169 + 32) = v167;
        ++v163;
        --v165;
        v43 = v286;
      }
      while (v165);
    }
    v162 = v296;
    v91 = v272;
  }
  else
  {
    swift_bridgeObjectRetain();
    v162 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BAA0C6F0(v162, (unint64_t *)&v298);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v170 = (_QWORD **)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  v171 = *v170;
  v295 = MEMORY[0x1E0DEE9D8];
  v172 = v281;
  if (v281 < 1)
  {
    __break(1u);
    goto LABEL_209;
  }
  v271 = (_QWORD *)(v46 & 0xC000000000000001);
  if ((v46 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v173 = 0;
    do
    {
      v174 = MEMORY[0x1BCCE4630](v173++, v46);
      v175 = (uint64_t *)(v174 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
      swift_beginAccess();
      v176 = *v175;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA6D3834(v176);
    }
    while (v172 != v173);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v177 = 0;
    do
    {
      ++v177;
      swift_beginAccess();
      v178 = swift_bridgeObjectRetain();
      sub_1BA6D3834(v178);
    }
    while (v172 != v177);
  }
  swift_bridgeObjectRelease();
  v260 = sub_1BA791A20(v295, v171);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v179 = (uint64_t *)(v91 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  v180 = *v179;
  v293 = MEMORY[0x1E0DEE9D8];
  if (v271)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v181 = 0;
    do
    {
      v182 = MEMORY[0x1BCCE4630](v181++, v46);
      v183 = (uint64_t *)(v182 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
      swift_beginAccess();
      v184 = *v183;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA67FB48(v184);
    }
    while (v172 != v181);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v185 = 0;
    do
    {
      ++v185;
      swift_beginAccess();
      v186 = swift_bridgeObjectRetain();
      sub_1BA67FB48(v186);
    }
    while (v172 != v185);
  }
  swift_bridgeObjectRelease();
  v259 = sub_1BA78A504(v293, v180);
  swift_bridgeObjectRelease();
  v187 = (void (**)(unint64_t, uint64_t, uint64_t))(v91
                                                                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  v189 = *v187;
  v188 = (uint64_t)v187[1];
  v289 = *v187;
  v290 = v188;
  v190 = (int *)v280;
  if (!v43)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v193 = MEMORY[0x1E0DEE9D8];
    goto LABEL_171;
  }
  v287 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA790608(0, v274, 0);
  if (v43 < 0)
  {
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
  v279 = v189;
  if (v271)
  {
    v191 = 0;
    do
    {
      v192 = (__int128 *)(MEMORY[0x1BCCE4630](v191, v285)
                        + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      v282 = *v192;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BB575C78((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA790608);
      v193 = v287;
      v195 = *(_QWORD *)(v287 + 16);
      v194 = *(_QWORD *)(v287 + 24);
      if (v195 >= v194 >> 1)
      {
        sub_1BA790608(v194 > 1, v195 + 1, 1);
        v193 = v287;
      }
      ++v191;
      *(_QWORD *)(v193 + 16) = v195 + 1;
      *(_OWORD *)(v193 + 16 * v195 + 32) = v282;
    }
    while (v286 != v191);
  }
  else
  {
    v196 = (_QWORD *)(v46 + 32);
    v197 = v43;
    do
    {
      v198 = (__int128 *)(*v196 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      v282 = *v198;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB575C78((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA790608);
      v193 = v287;
      v200 = *(_QWORD *)(v287 + 16);
      v199 = *(_QWORD *)(v287 + 24);
      if (v200 >= v199 >> 1)
      {
        sub_1BA790608(v199 > 1, v200 + 1, 1);
        v193 = v287;
      }
      *(_QWORD *)(v193 + 16) = v200 + 1;
      *(_OWORD *)(v193 + 16 * v200 + 32) = v282;
      ++v196;
      --v197;
    }
    while (v197);
  }
  v46 = v285;
  v43 = v286;
  v190 = (int *)v280;
LABEL_171:
  sub_1BA794D10(v193, (unint64_t)v294);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v292 = v294[0];
  v201 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v43)
  {
    v289 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BA7909E8(0, v274, 0);
    v202 = (uint64_t)v284;
    if ((v43 & 0x8000000000000000) == 0)
    {
      if (v271)
      {
        for (i = 0; i != v43; ++i)
        {
          v204 = MEMORY[0x1BCCE4630](i, v46);
          sub_1BA4C2DD8(v204 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v202, type metadata accessor for FormatCompilerOptions);
          swift_unknownObjectRelease();
          sub_1BB575C78((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA7909E8);
          v205 = v202;
          v207 = v289[2];
          v206 = v289[3];
          if (v207 >= v206 >> 1)
            sub_1BA7909E8(v206 > 1, v207 + 1, 1);
          sub_1BA790548(v207, v205, type metadata accessor for FormatCompilerOptions);
          v202 = v205;
        }
      }
      else
      {
        v210 = (_QWORD *)(v46 + 32);
        do
        {
          sub_1BA4C2DD8(*v210 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v202, type metadata accessor for FormatCompilerOptions);
          sub_1BB575C78((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA7909E8);
          v212 = v289[2];
          v211 = v289[3];
          if (v212 >= v211 >> 1)
            sub_1BA7909E8(v211 > 1, v212 + 1, 1);
          sub_1BA790548(v212, v202, type metadata accessor for FormatCompilerOptions);
          ++v210;
          --v43;
        }
        while (v43);
      }
      v201 = v289;
      v208 = v272;
      v190 = (int *)v280;
      v209 = v283;
      goto LABEL_185;
    }
    goto LABEL_219;
  }
  v208 = v272;
  v209 = v283;
  v202 = (uint64_t)v284;
LABEL_185:
  sub_1BA4C2DD8(v208 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, (uint64_t)v209, type metadata accessor for FormatCompilerOptions);
  v213 = v201[2];
  if (v213)
  {
    v214 = v190[7];
    *(_QWORD *)&v282 = (char *)v209 + v190[6];
    v279 = (void (*)(unint64_t, uint64_t, uint64_t))((char *)v209 + v214);
    v215 = v190[8];
    v216 = (uint64_t)v201
         + ((*(unsigned __int8 *)(v273 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80));
    v273 = *(_QWORD *)(v273 + 72);
    v274 = v215;
    v258 = v201;
    swift_bridgeObjectRetain();
    v217 = v268;
    v218 = (int *)v280;
    v219 = v276;
    do
    {
      v286 = v213;
      sub_1BA4C2DD8(v216, v202, type metadata accessor for FormatCompilerOptions);
      v289 = (_QWORD *)*v209;
      swift_bridgeObjectRetain();
      v220 = swift_bridgeObjectRetain();
      sub_1BA791D80(v220);
      v221 = v289;
      v289 = (_QWORD *)*((_QWORD *)v283 + 1);
      swift_bridgeObjectRetain();
      v222 = swift_bridgeObjectRetain();
      sub_1BA791D6C(v222);
      v223 = v289;
      v224 = (uint64_t)v275;
      sub_1BA8CAF1C(v282, (uint64_t)v275, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      v225 = v278;
      sub_1BA5193C4(v224, v278, type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1BA7939F0((uint64_t)v279, (uint64_t)&v284[v218[7]], v219);
      v226 = *(_QWORD *)&v283[v274];
      swift_bridgeObjectRetain();
      v227 = swift_bridgeObjectRetain();
      v202 = (uint64_t)v284;
      v228 = sub_1BA7919B0(v227, v226);
      *v217 = v221;
      v217[1] = v223;
      v209 = v283;
      sub_1BA4C2DD8(v225, (uint64_t)v217 + v218[6], type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1BA4C2DD8((uint64_t)v219, (uint64_t)v217 + v218[7], (uint64_t (*)(_QWORD))sub_1BA74E57C);
      *(_QWORD *)((char *)v217 + v218[8]) = v228;
      sub_1BA4A2E80((uint64_t)v219, (uint64_t (*)(_QWORD))sub_1BA74E57C);
      v229 = v225;
      v230 = v286;
      sub_1BA4A2E80(v229, type metadata accessor for FormatCompilerOptions.Newsroom);
      v231 = v277;
      sub_1BA5193C4((uint64_t)v217, v277, type metadata accessor for FormatCompilerOptions);
      sub_1BA4A2E80(v202, type metadata accessor for FormatCompilerOptions);
      sub_1BA4A2E80((uint64_t)v209, type metadata accessor for FormatCompilerOptions);
      sub_1BA5193C4(v231, (uint64_t)v209, type metadata accessor for FormatCompilerOptions);
      v216 += v273;
      v213 = v230 - 1;
    }
    while (v213);
    swift_bridgeObjectRelease();
    v46 = v285;
    v208 = v272;
  }
  sub_1BA5193C4((uint64_t)v209, v270, type metadata accessor for FormatCompilerOptions);
  swift_bridgeObjectRelease();
  v232 = *(_QWORD *)(v208 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
  v286 = *(_QWORD *)(v208 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  if (v271)
  {
    v233 = v286;
    sub_1BA6BAD2C(v286, v232);
    swift_bridgeObjectRetain();
    sub_1BA6BAD2C(v233, v232);
    v234 = 0;
    v235 = v232;
    do
    {
      v238 = MEMORY[0x1BCCE4630](v234, v46) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
      v237 = *(_QWORD *)(v238 + 8);
      if (v237 == 2)
      {
        sub_1BA6BAD2C(v233, v235);
        v236 = v233;
        v237 = v235;
      }
      else
      {
        v236 = *(_QWORD *)v238;
        sub_1BA8C89D0(*(_QWORD *)v238, *(_QWORD *)(v238 + 8));
      }
      swift_unknownObjectRelease();
      sub_1BA79DDC8(v233, v235);
      ++v234;
      v233 = v236;
      v235 = v237;
      v46 = v285;
    }
    while (v281 != v234);
  }
  else
  {
    v239 = v286;
    sub_1BA6BAD2C(v286, v232);
    swift_bridgeObjectRetain();
    sub_1BA6BAD2C(v239, v232);
    v240 = 0;
    v241 = v232;
    do
    {
      v242 = (uint64_t *)(*(_QWORD *)(v46 + 8 * v240 + 32)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
      v243 = *v242;
      v244 = v242[1];
      v236 = *v242;
      v237 = v244;
      if (v244 == 2)
      {
        sub_1BA6BAD2C(v239, v241);
        v236 = v239;
        v237 = v241;
      }
      ++v240;
      sub_1BA6BAD2C(v243, v244);
      sub_1BA79DDC8(v239, v241);
      v239 = v236;
      v241 = v237;
      v46 = v285;
    }
    while (v281 != v240);
  }
  swift_bridgeObjectRelease();
  sub_1BA79DDC8(v286, v232);
  v291[0] = v236;
  v291[1] = v237;
  v245 = (uint64_t *)(v272 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  v246 = *v245;
  swift_bridgeObjectRetain();
  v288 = sub_1BA791DF0(0);
  v247 = v281;
  if (v271)
  {
    swift_bridgeObjectRetain();
    v248 = 0;
    do
    {
      v249 = MEMORY[0x1BCCE4630](v248++, v46);
      v250 = (uint64_t *)(v249 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      v251 = *v250;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA6C2884(v251);
    }
    while (v247 != v248);
  }
  else
  {
    swift_bridgeObjectRetain();
    v252 = 0;
    do
    {
      ++v252;
      swift_beginAccess();
      v253 = swift_bridgeObjectRetain();
      sub_1BA6C2884(v253);
    }
    while (v247 != v252);
  }
  swift_bridgeObjectRelease();
  v254 = (uint64_t)v264;
  v255 = v288;
  v288 = v246;
  sub_1BA6C2884(v255);
  v256 = v288;
  swift_allocObject();
  return sub_1BA7A1040(v266, v265, (uint64_t)v269, v334, &v332, v263, v262, v261, v254, &v328, v326, &v321, &v315, &v312, &v307, &v302, &v298, v260, v259,
           &v292,
           v270,
           v291,
           v256);
}

uint64_t sub_1BA6BABB4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6BAD2C(uint64_t a1, unint64_t a2)
{
  if (a2 != 2)
    return sub_1BA8C89D0(a1, a2);
  return a1;
}

uint64_t sub_1BA6BAD3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3B9E80, (uint64_t (*)(uint64_t))sub_1BA6BCBF8);
}

uint64_t FormatContentSubgroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;

  v89 = a2;
  sub_1BA6BD034(0);
  MEMORY[0x1E0C80A78](v3);
  v81 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1ED3C2998, (uint64_t (*)(void))sub_1BA6BCFAC, (uint64_t)&type metadata for FormatContentSubgroup.AltCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v83 = v6;
  v82 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v93 = (char *)&v77 - v7;
  sub_1BA6BCBF8(0);
  v9 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  v88 = v9;
  MEMORY[0x1E0C80A78](v8);
  v80 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v85 = (uint64_t)&v77 - v12;
  sub_1BA6BCC70(0);
  v92 = v13;
  MEMORY[0x1E0C80A78](v13);
  v84 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v86 = (uint64_t)&v77 - v16;
  sub_1BA6C0BF8(0);
  MEMORY[0x1E0C80A78](v17);
  v94 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for FormatMetadata();
  v90 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v91 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1BB86C8E0();
  v98 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  *(_QWORD *)&v97 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C30, (uint64_t (*)(void))sub_1BA6BCFF0, (uint64_t)&type metadata for FormatContentSubgroup.CodingKeys, v5);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v77 - v24;
  v26 = (int *)type metadata accessor for FormatContentSubgroup();
  MEMORY[0x1E0C80A78](v26);
  v28 = (uint64_t *)((char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a1[3];
  v100 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_1BA6BCFF0();
  v30 = v99;
  sub_1BB87468C();
  if (v30)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  v31 = v97;
  v32 = v98;
  v99 = v23;
  LOBYTE(v101) = 0;
  v33 = sub_1BB87402C();
  v35 = v34;
  v78 = v25;
  v79 = v22;
  if (v34)
  {
    v37 = v33;
  }
  else
  {
    sub_1BB86C8D4();
    v37 = sub_1BB86C8C8();
    v35 = v38;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v96);
  }
  v39 = (uint64_t)v28;
  *v28 = v37;
  v28[1] = v35;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v102) = 2;
  sub_1BA6BCF34();
  sub_1BB874068();
  v40 = v101;
  if (!v101)
    v40 = MEMORY[0x1E0DEE9D8];
  v41 = v26;
  *(uint64_t *)((char *)v28 + v26[6]) = v40;
  sub_1BA6BCC84();
  LOBYTE(v102) = 3;
  sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  sub_1BB874068();
  v42 = MEMORY[0x1E0DEE9E8];
  if (v101)
    v42 = v101;
  *(uint64_t *)((char *)v28 + v26[7]) = v42;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9490, (uint64_t)&type metadata for FormatContentSlot, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v102) = 5;
  sub_1BA6BCEBC();
  v98 = 0;
  sub_1BB874068();
  v43 = v101;
  v44 = MEMORY[0x1E0DEE9D8];
  if (!v101)
    v43 = MEMORY[0x1E0DEE9D8];
  *(uint64_t *)((char *)v28 + v26[8]) = v43;
  sub_1BA4AD288(0, &qword_1ED3CF7F8, (uint64_t)&type metadata for FormatContentSubgroupSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v102) = 6;
  sub_1BA6BCDCC();
  sub_1BB874068();
  v45 = v101;
  if (!v101)
    v45 = v44;
  *(uint64_t *)((char *)v28 + v26[12]) = v45;
  sub_1BA4AD288(0, &qword_1ED3CF758, (uint64_t)&type metadata for FormatPlaceholder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v102) = 4;
  sub_1BA6BCE44();
  sub_1BB874068();
  v46 = v101;
  if (!v101)
    v46 = v44;
  *(uint64_t *)((char *)v28 + v26[9]) = v46;
  LOBYTE(v101) = 7;
  sub_1BA4A2870(&qword_1ED3B40A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  v47 = (uint64_t)v94;
  v48 = v95;
  sub_1BB874068();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v47, 1, v48) == 1)
  {
    v49 = v91;
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v91, 0, 0, 0, 0);
    sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA6C0BF8);
  }
  else
  {
    v49 = v91;
    sub_1BA5193C4(v47, (uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  }
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1BA5193C4((uint64_t)v49, (uint64_t)v28 + v26[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3CF7D0, (uint64_t)&type metadata for FormatContentSubgroupFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v102) = 8;
  sub_1BA6BCD54();
  sub_1BB874068();
  if (v101)
    v51 = v101;
  else
    v51 = v50;
  *(uint64_t *)((char *)v28 + v26[11]) = v51;
  v52 = v100;
  v53 = v100[3];
  *(_QWORD *)&v97 = v100[4];
  __swift_project_boxed_opaque_existential_1(v100, v53);
  v54 = sub_1BB872874();
  v55 = Dictionary<>.bindingContent.getter(v54);
  swift_bridgeObjectRelease();
  if ((v55 & 1) == 0)
  {
    v63 = v52[3];
    *(_QWORD *)&v97 = v52[4];
    __swift_project_boxed_opaque_existential_1(v52, v63);
    sub_1BA6BCFAC();
    sub_1BB87468C();
    sub_1BA6BCD04(0);
    sub_1BA4A2870(&qword_1ED3CF0D0, (uint64_t (*)(uint64_t))sub_1BA6BCD04, (uint64_t)&protocol conformance descriptor for FormatFileVersionURIReferenceCollection<A>);
    sub_1BB874068();
    v64 = v101;
    if (v101)
    {
      if (qword_1ED3BB468 != -1)
        swift_once();
      v65 = sub_1BB86EB84();
      v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1ED3B8FC8);
      v67 = v81;
      sub_1BA6D3848(v66, v64, v81);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v67, 1, v87) != 1)
      {
        v73 = v80;
        sub_1BA5193C4(v81, v80, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        v74 = v85;
        sub_1BA4C2DD8(v73, v85, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        v70 = v86;
        sub_1BA4C2DD8(v74, v86, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        sub_1BA4B07F0(0, &qword_1ED3B9E80, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v75 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
        v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = xmmword_1BB87CE70;
        sub_1BA5193C4(v74, v76 + v75, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        *(_QWORD *)(v70 + *(int *)(v92 + 36)) = v76;
        sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v93, v83);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v78, v79);
        v39 = (uint64_t)v28;
        v41 = v26;
        v62 = v100;
        goto LABEL_31;
      }
      sub_1BA4A2E80(v81, (uint64_t (*)(_QWORD))sub_1BA6BD034);
    }
    sub_1BA89B940();
    v68 = swift_allocError();
    *v69 = 2;
    *(_QWORD *)&v97 = v68;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v93, v83);
    v39 = (uint64_t)v28;
    v41 = v26;
    LOBYTE(v101) = 1;
    sub_1BA4A2870(&qword_1ED3B8BA8, (uint64_t (*)(uint64_t))sub_1BA6BCC70, (uint64_t)&protocol conformance descriptor for FormatLatestCompatibleFileReference<A>);
    v70 = (uint64_t)v84;
    v71 = v79;
    v72 = v78;
    sub_1BB8740D4();
    v62 = v100;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v72, v71);

LABEL_31:
    v59 = v70;
    goto LABEL_32;
  }
  sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
  v57 = v85;
  v58 = (char *)(v85 + *(int *)(v56 + 48));
  sub_1BB069280(v85);
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v58, 0, 0, 0, 0);
  swift_storeEnumTagMultiPayload();
  v59 = v86;
  sub_1BA4C2DD8(v57, v86, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  sub_1BA4B07F0(0, &qword_1ED3B9E80, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v60 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1BB87CE70;
  sub_1BA5193C4(v57, v61 + v60, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  *(_QWORD *)(v59 + *(int *)(v92 + 36)) = v61;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v78, v79);
  v62 = v52;
LABEL_32:
  sub_1BA5193C4(v59, v39 + v41[5], (uint64_t (*)(_QWORD))sub_1BA6BCC70);
  sub_1BA4C2DD8(v39, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
}

_QWORD *initializeWithCopy for FormatContentSubgroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _OWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  char *v103;
  unint64_t v104;
  int *v105;
  int *v106;
  uint64_t v107;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a3[5];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  sub_1BA6BCBF8(0);
  swift_bridgeObjectRetain();
  v103 = v5;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = *((_QWORD *)v6 + 1);
    *(_QWORD *)v5 = *(_QWORD *)v6;
    *((_QWORD *)v5 + 1) = v7;
    v8 = *((_QWORD *)v6 + 3);
    *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
    *((_QWORD *)v5 + 3) = v8;
    v9 = *((_QWORD *)v6 + 5);
    *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
    *((_QWORD *)v5 + 5) = v9;
    *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
    v10 = *((_QWORD *)v6 + 8);
    *((_QWORD *)v5 + 7) = *((_QWORD *)v6 + 7);
    *((_QWORD *)v5 + 8) = v10;
    v11 = *((_QWORD *)v6 + 10);
    *((_QWORD *)v5 + 9) = *((_QWORD *)v6 + 9);
    *((_QWORD *)v5 + 10) = v11;
    v12 = *((_QWORD *)v6 + 12);
    *((_QWORD *)v5 + 11) = *((_QWORD *)v6 + 11);
    *((_QWORD *)v5 + 12) = v12;
    v96 = *((_QWORD *)v6 + 14);
    *((_QWORD *)v5 + 13) = *((_QWORD *)v6 + 13);
    *((_QWORD *)v5 + 14) = v96;
    v97 = *((_QWORD *)v6 + 16);
    *((_QWORD *)v5 + 15) = *((_QWORD *)v6 + 15);
    *((_QWORD *)v5 + 16) = v97;
    v100 = *((_QWORD *)v6 + 18);
    *((_QWORD *)v5 + 17) = *((_QWORD *)v6 + 17);
    *((_QWORD *)v5 + 18) = v100;
    *((_QWORD *)v5 + 19) = *((_QWORD *)v6 + 19);
    v95 = v6 + 160;
    v104 = *((_QWORD *)v6 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v104 >= 2)
    {
      v14 = v5 + 160;
      if (v104 != 2)
      {
        v5[160] = *v95;
        *((_QWORD *)v5 + 21) = v104;
        swift_bridgeObjectRetain();
LABEL_12:
        v106 = (int *)type metadata accessor for FormatPackage();
        v34 = v106[23];
        v35 = &v5[v34];
        v36 = &v6[v34];
        v37 = *(_QWORD *)&v6[v34 + 8];
        *(_QWORD *)v35 = *(_QWORD *)&v6[v34];
        *((_QWORD *)v35 + 1) = v37;
        v38 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v39 = v38[6];
        v40 = &v35[v39];
        v41 = &v36[v39];
        v42 = *(_QWORD *)&v36[v39 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v42 == 1)
        {
          v43 = *((_OWORD *)v41 + 1);
          *(_OWORD *)v40 = *(_OWORD *)v41;
          *((_OWORD *)v40 + 1) = v43;
          *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
        }
        else
        {
          *(_QWORD *)v40 = *(_QWORD *)v41;
          *((_QWORD *)v40 + 1) = v42;
          v44 = *((_QWORD *)v41 + 3);
          *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
          *((_QWORD *)v40 + 3) = v44;
          v45 = *((_QWORD *)v41 + 5);
          *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
          *((_QWORD *)v40 + 5) = v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v46 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v47 = &v40[v46];
        v48 = &v41[v46];
        v49 = sub_1BB86E710();
        v50 = *(_QWORD *)(v49 - 8);
        v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
        if (v51(v48, 1, v49))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
        v53 = v38[7];
        v54 = &v35[v53];
        v55 = &v36[v53];
        v101 = v51;
        if (v51(&v36[v53], 1, v49))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v54, v55, v49);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v54, 0, 1, v49);
        }
        *(_QWORD *)&v35[v38[8]] = *(_QWORD *)&v36[v38[8]];
        v57 = v106[24];
        v58 = &v5[v57];
        v59 = &v6[v57];
        v60 = sub_1BB86EB84();
        v98 = *(_QWORD *)(v60 - 8);
        v61 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
        swift_bridgeObjectRetain();
        v107 = v60;
        v61(v58, v59, v60);
        v62 = v106[25];
        v63 = &v5[v62];
        v64 = &v6[v62];
        if (v101(&v6[v62], 1, v49))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v49);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v49);
        }
        sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
        v67 = *(int *)(v66 + 48);
        v68 = &v5[v67];
        v69 = &v6[v67];
        v70 = *(_QWORD *)&v6[v67 + 8];
        *(_QWORD *)v68 = *(_QWORD *)&v6[v67];
        *((_QWORD *)v68 + 1) = v70;
        v71 = (int *)type metadata accessor for FormatMetadata();
        v72 = v71[5];
        v73 = &v68[v72];
        v74 = &v69[v72];
        swift_bridgeObjectRetain();
        v61(v73, v74, v107);
        v61(&v68[v71[6]], &v69[v71[6]], v107);
        v75 = v71[7];
        v76 = &v68[v75];
        v77 = &v69[v75];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(&v69[v75], 1, v107))
        {
          sub_1BA6BF9E8(0);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          v61(v76, v77, v107);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v76, 0, 1, v107);
        }
        *(_QWORD *)&v68[v71[8]] = *(_QWORD *)&v69[v71[8]];
        *(_QWORD *)&v68[v71[9]] = *(_QWORD *)&v69[v71[9]];
        *(_QWORD *)&v68[v71[10]] = *(_QWORD *)&v69[v71[10]];
        v105 = v71;
        *(_QWORD *)&v68[v71[11]] = *(_QWORD *)&v69[v71[11]];
        v33 = v103;
        goto LABEL_28;
      }
      v13 = *(_OWORD *)v95;
    }
    else
    {
      v13 = *(_OWORD *)v95;
      v14 = v5 + 160;
    }
    *v14 = v13;
    goto LABEL_12;
  }
  v15 = sub_1BB86C67C();
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v6, v15);
  sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, v16);
  v18 = *(int *)(v17 + 48);
  v19 = &v5[v18];
  v20 = &v6[v18];
  v21 = *(_QWORD *)&v6[v18 + 8];
  *(_QWORD *)v19 = *(_QWORD *)&v6[v18];
  *((_QWORD *)v19 + 1) = v21;
  v22 = (int *)type metadata accessor for FormatMetadata();
  v23 = v22[5];
  v24 = &v19[v23];
  v25 = &v20[v23];
  v26 = sub_1BB86EB84();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  swift_bridgeObjectRetain();
  v28(v24, v25, v26);
  v28(&v19[v22[6]], &v20[v22[6]], v26);
  v105 = v22;
  v29 = v22[7];
  v30 = &v19[v29];
  v31 = &v20[v29];
  v107 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&v20[v29], 1, v26))
  {
    sub_1BA6BF9E8(0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v28(v30, v31, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v30, 0, 1, v26);
  }
  v33 = v103;
  *(_QWORD *)&v19[v105[8]] = *(_QWORD *)&v20[v105[8]];
  *(_QWORD *)&v19[v105[9]] = *(_QWORD *)&v20[v105[9]];
  *(_QWORD *)&v19[v105[10]] = *(_QWORD *)&v20[v105[10]];
  *(_QWORD *)&v19[v105[11]] = *(_QWORD *)&v20[v105[11]];
LABEL_28:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  sub_1BA6BCC70(0);
  *(_QWORD *)&v33[*(int *)(v79 + 36)] = *(_QWORD *)&v6[*(int *)(v79 + 36)];
  v80 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v80) = *(_QWORD *)((char *)a2 + v80);
  v81 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v81) = *(_QWORD *)((char *)a2 + v81);
  v82 = a3[10];
  v83 = (char *)a1 + v82;
  v84 = (char *)a2 + v82;
  v85 = *(_QWORD *)((char *)a2 + v82 + 8);
  *(_QWORD *)v83 = *(_QWORD *)((char *)a2 + v82);
  *((_QWORD *)v83 + 1) = v85;
  type metadata accessor for FormatMetadata();
  v86 = v105[5];
  v99 = &v84[v86];
  v102 = &v83[v86];
  sub_1BB86EB84();
  v87 = *(_QWORD *)(v107 - 8);
  v88 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v88(v102, v99, v107);
  v88(&v83[v105[6]], &v84[v105[6]], v107);
  v89 = v105[7];
  v90 = &v83[v89];
  v91 = &v84[v89];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(&v84[v89], 1, v107))
  {
    sub_1BA6BF9E8(0);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v88(v90, v91, v107);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v90, 0, 1, v107);
  }
  *(_QWORD *)&v83[v105[8]] = *(_QWORD *)&v84[v105[8]];
  *(_QWORD *)&v83[v105[9]] = *(_QWORD *)&v84[v105[9]];
  *(_QWORD *)&v83[v105[10]] = *(_QWORD *)&v84[v105[10]];
  *(_QWORD *)&v83[v105[11]] = *(_QWORD *)&v84[v105[11]];
  v93 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v93) = *(_QWORD *)((char *)a2 + v93);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA6BC5C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA6BC630(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t destroy for FormatContentSubgroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v34;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_1BA6BCBF8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 168) >= 3uLL)
      swift_bridgeObjectRelease();
    v5 = (int *)type metadata accessor for FormatPackage();
    v6 = v4 + v5[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = type metadata accessor for FormatCompilerOptions(0);
    v8 = v6 + *(int *)(v7 + 24);
    if (*(_QWORD *)(v8 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v9 = v8 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v10 = sub_1BB86E710();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v12(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v13 = v6 + *(int *)(v7 + 28);
    if (!v12(v13, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
    v34 = v11;
    swift_bridgeObjectRelease();
    v14 = v4 + v5[24];
    v15 = sub_1BB86EB84();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v14, v15);
    v18 = v4 + v5[25];
    if (!v12(v18, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v18, v10);
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    v20 = v4 + *(int *)(v19 + 48);
    swift_bridgeObjectRelease();
    v21 = (int *)type metadata accessor for FormatMetadata();
    v22 = v20 + v21[5];
  }
  else
  {
    v23 = sub_1BB86C67C();
    v24 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v4, v23);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, v24);
    v20 = v4 + *(int *)(v25 + 48);
    swift_bridgeObjectRelease();
    v21 = (int *)type metadata accessor for FormatMetadata();
    v26 = v20 + v21[5];
    v15 = sub_1BB86EB84();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22 = v26;
  }
  v17(v22, v15);
  v17(v20 + v21[6], v15);
  v27 = v20 + v21[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v27, 1, v15))
    v17(v27, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6BCC70(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = a1 + *(int *)(a2 + 40);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatMetadata();
  v29 = v28 + v21[5];
  sub_1BB86EB84();
  v30 = *(_QWORD *)(v15 - 8);
  v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v31(v29, v15);
  v31(v28 + v21[6], v15);
  v32 = v28 + v21[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v15))
    v31(v32, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA6BCAFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_1BA4A2870(a4, a3, a5);
    v13 = type metadata accessor for FormatFileReference(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

void sub_1BA6BCB7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatPackage();
    v7 = sub_1BA4A2870((unint64_t *)&unk_1ED3C69B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BA6BCBF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B5D40)
  {
    v2 = type metadata accessor for FormatPackage();
    v3 = sub_1BA4A2870((unint64_t *)&unk_1ED3C69B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    v5 = type metadata accessor for FormatFileReference(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B5D40);
  }
}

void sub_1BA6BCC70(uint64_t a1)
{
  sub_1BA6BCB7C(a1, &qword_1ED3B8BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatLatestCompatibleFileReference);
}

void sub_1BA6BCC84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B96C0)
  {
    v0 = sub_1BB87309C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B96C0);
  }
}

uint64_t Dictionary<>.bindingContent.getter(uint64_t a1)
{
  return sub_1BA6ED778(a1);
}

void sub_1BA6BCD04(uint64_t a1)
{
  sub_1BA6BCB7C(a1, &qword_1ED3CF0D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileVersionURIReferenceCollection);
}

uint64_t type metadata accessor for FormatPackage()
{
  uint64_t result;

  result = qword_1ED3B3B10;
  if (!qword_1ED3B3B10)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA6BCD54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF7E0;
  if (!qword_1ED3CF7E0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3CF7D0, (uint64_t)&type metadata for FormatContentSubgroupFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA824004();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF7E0);
  }
  return result;
}

unint64_t sub_1BA6BCDCC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF800;
  if (!qword_1ED3CF800)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7F8, (uint64_t)&type metadata for FormatContentSubgroupSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82368C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF800);
  }
  return result;
}

unint64_t sub_1BA6BCE44()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF760;
  if (!qword_1ED3CF760)
  {
    sub_1BA4AD288(255, &qword_1ED3CF758, (uint64_t)&type metadata for FormatPlaceholder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA64D628();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF760);
  }
  return result;
}

unint64_t sub_1BA6BCEBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9498;
  if (!qword_1ED3B9498)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9490, (uint64_t)&type metadata for FormatContentSlot, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA831760();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9498);
  }
  return result;
}

unint64_t sub_1BA6BCF34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9478;
  if (!qword_1ED3B9478)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8350B4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9478);
  }
  return result;
}

unint64_t sub_1BA6BCFAC()
{
  unint64_t result;

  result = qword_1ED3C9700;
  if (!qword_1ED3C9700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB901ABC, &type metadata for FormatContentSubgroup.AltCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C9700);
  }
  return result;
}

unint64_t sub_1BA6BCFF0()
{
  unint64_t result;

  result = qword_1ED3B65B0;
  if (!qword_1ED3B65B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB901A6C, &type metadata for FormatContentSubgroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B65B0);
  }
  return result;
}

void sub_1BA6BD034(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B00A8, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FormatFileReferenceCollection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t);
  char *v71;
  _QWORD v72[2];
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v95 = a5;
  v93 = type metadata accessor for FormatFileReferenceCollection.MetadataContainer(0, a2, a3, a4);
  v86 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v97 = (char *)v72 - v8;
  sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  MEMORY[0x1E0C80A78](v9);
  v88 = (char *)v72 - v10;
  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v11);
  v85 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v75 = (uint64_t)v72 - v14;
  v89 = sub_1BB86EB84();
  v91 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v84 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v96 = (char *)v72 - v17;
  MEMORY[0x1E0C80A78](v18);
  v82 = (char *)v72 - v19;
  MEMORY[0x1E0C80A78](v20);
  v74 = (uint64_t)v72 - v21;
  MEMORY[0x1E0C80A78](v22);
  v80 = (uint64_t)v72 - v23;
  v100 = type metadata accessor for FormatMetadata();
  v87 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v101 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v83 = (char *)v72 - v26;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v27);
  v81 = (char *)v72 - v28;
  v90 = sub_1BB873E58();
  v92 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v79 = (char *)v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for FormatFileReference(0, a2, a3, v30);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)v72 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v72 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v72 - v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v41 = v99;
  sub_1BB874668();
  if (v41)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v99 = v40;
  v77 = v37;
  v73 = v34;
  v78 = v32;
  v94 = a1;
  v98 = v31;
  v42 = sub_1BB872E68();
  v107 = v42;
  __swift_project_boxed_opaque_existential_1(&v105, v106);
  if ((sub_1BB87423C() & 1) != 0)
  {
    a1 = v94;
    v43 = v95;
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
    *v43 = v42;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v72[1] = MEMORY[0x1E0DEE9B8] + 8;
  a1 = v94;
  v44 = v89;
  v45 = v92;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v105, v106);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>, v98);
    sub_1BB874230();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v47 = sub_1BB872874();
    v48 = v81;
    sub_1BB873E4C();
    v49 = v90;
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v48, 1, v90);
    if ((_DWORD)result == 1)
      break;
    v51 = (uint64_t)v79;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v79, v48, v49);
    v52 = (uint64_t)v83;
    if (*(_QWORD *)(v47 + 16) && (v53 = sub_1BA6EDA24(v51), (v54 & 1) != 0))
    {
      sub_1BA747A10(*(_QWORD *)(v47 + 56) + 32 * v53, (uint64_t)&v103);
    }
    else
    {
      v103 = 0u;
      v104 = 0u;
    }
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v90);
    if (*((_QWORD *)&v104 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v55 = v102;
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)&v103, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
    }
    swift_bridgeObjectRelease();
    v55 = 0;
LABEL_16:
    sub_1BA4C010C((uint64_t)a1, (uint64_t)&v103);
    v56 = v78;
    v57 = v77;
    v58 = v98;
    v76 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    v76(v77, v99, v98);
    if ((v55 & 1) != 0)
    {
      v59 = *(void (**)(char *, uint64_t))(v56 + 8);
      v59(v57, v58);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
    }
    else
    {
      FormatFileReference.metadata.getter(v58, v52);
      __swift_project_boxed_opaque_existential_1(&v103, *((uint64_t *)&v104 + 1));
      v60 = sub_1BB872874();
      Dictionary<>.appVersion.getter(v60, v80);
      swift_bridgeObjectRelease();
      v61 = sub_1BB872874();
      v62 = v74;
      Dictionary<>.formatVersion.getter(v61, v74);
      swift_bridgeObjectRelease();
      v63 = v75;
      sub_1BA57B488(v52 + *(int *)(v100 + 28), v75, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      v64 = v91;
      v65 = 1;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v63, 1, v44) != 1)
      {
        v66 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v82, v63, v44);
        v65 = sub_1BB86E8FC();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v44);
      }
      sub_1BA6BE2A8(&qword_1ED3B4098, (uint64_t)&protocol conformance descriptor for FormatMetadata);
      v67 = v80;
      v68 = (uint64_t)v83;
      v69 = sub_1BB86DE88();
      v70 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v70(v62, v44);
      v70(v67, v44);
      sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v59 = *(void (**)(char *, uint64_t))(v78 + 8);
      v58 = v98;
      v59(v77, v98);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
      if ((v69 & 1) == 0 || (v65 & 1) == 0)
      {
        v59(v99, v58);
        v45 = v92;
        goto LABEL_5;
      }
      v45 = v92;
    }
    v71 = v99;
    v76(v73, v99, v58);
    sub_1BB872EE0();
    sub_1BB872EB0();
    v59(v71, v58);
LABEL_5:
    a1 = v94;
    __swift_project_boxed_opaque_existential_1(&v105, v106);
    v46 = sub_1BB87423C();
    v43 = v95;
    if ((v46 & 1) != 0)
    {
      v42 = v107;
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6BDBA4(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v32 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v32 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v10 = (v8 | 7) + v5;
  v11 = v8 + 16;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = v12 + v8;
  v14 = (v12 + v8 + ((v12 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  if (!*(_DWORD *)(v7 + 84))
    ++v12;
  v15 = ((((((((v12 + 7 + v14) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v16 = v15 + (v10 & ~(v8 | 7));
  v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v18 = *(_QWORD *)(v17 + 64) + v9;
  v19 = v15 + (v18 & ~v9);
  if (v19 > v16)
    v16 = v19;
  v20 = *((unsigned __int8 *)a1 + v16);
  v21 = v16 & 0xFFFFFFF8;
  if (v20 >= 2 && v21 != 0)
    v20 = *a1 + 2;
  v23 = ~v9;
  v24 = ~v8;
  if (v20 == 1)
  {
    (*(void (**)(_DWORD *))(v17 + 8))(a1);
    v25 = (unint64_t)a1 + v18;
  }
  else
  {
    (*(void (**)(_DWORD *, uint64_t))(v4 + 8))(a1, v32);
    v25 = (unint64_t)a1 + v10;
  }
  v26 = v25 & v23;
  swift_bridgeObjectRelease();
  v27 = (v11 + v26) & v24;
  v28 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v28(v27, v6);
  v29 = (v13 + v27) & v24;
  v28(v29, v6);
  v30 = (v13 + v29) & v24;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v30, 1, v6))
    v28(v30, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatFileReference.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v12;

  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_1BA6BFCE4((uint64_t)&v6[*(int *)(TupleTypeMetadata2 + 48)], a2);
  }
  else
  {
    sub_1BA6BE23C();
    sub_1BA6BFCE4((uint64_t)&v6[*(int *)(v10 + 48)], a2);
    v8 = sub_1BB86C67C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
}

uint64_t sub_1BA6BDE78(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(unint64_t, unint64_t, uint64_t);
  unint64_t v32;
  unint64_t v33;
  void *v34;
  const void *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  unint64_t v41;
  unint64_t v42;
  void *v43;
  const void *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  size_t __n;
  uint64_t v60;
  size_t v61;
  unint64_t v62;

  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | 7;
  v12 = (v10 | 7) + v7;
  v13 = v10 + 16;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v14 + v10;
  v16 = (v14 + v10 + ((v14 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  if (!*(_DWORD *)(v9 + 84))
    ++v14;
  __n = v14;
  v60 = v8;
  v61 = v14 + 7;
  v17 = ((((((((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v18 = v17 + (v12 & ~(v10 | 7));
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(_QWORD *)(v19 + 64) + v11;
  v21 = v17 + (v20 & ~v11);
  if (v21 > v18)
    v18 = v21;
  v22 = *((unsigned __int8 *)a2 + v18);
  v62 = v18;
  v23 = v18 & 0xFFFFFFF8;
  if (v22 >= 2 && v23 != 0)
    v22 = *a2 + 2;
  v25 = ~v11;
  v26 = ~v10;
  if (v22 == 1)
  {
    (*(void (**)(uint64_t, _DWORD *))(v19 + 16))(a1, a2);
    v27 = (_QWORD *)((v20 + a1) & v25);
    v28 = (_QWORD *)(((unint64_t)a2 + v20) & v25);
    *v27 = *v28;
    v27[1] = v28[1];
    v29 = ((unint64_t)v27 + v13) & v26;
    v30 = ((unint64_t)v28 + v13) & v26;
    v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v31(v29, v30, v60);
    v32 = (v15 + v29) & v26;
    v33 = (v15 + v30) & v26;
    v31(v32, v33, v60);
    v34 = (void *)((v15 + v32) & v26);
    v35 = (const void *)((v15 + v33) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v35, 1, v60))
    {
      memcpy(v34, v35, __n);
    }
    else
    {
      v31((unint64_t)v34, (unint64_t)v35, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v34, 0, 1, v60);
    }
    v45 = (_QWORD *)(((unint64_t)v34 + v61) & 0xFFFFFFFFFFFFF8);
    v46 = (_QWORD *)(((unint64_t)v35 + v61) & 0xFFFFFFFFFFFFFFF8);
    *v45 = *v46;
    v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
    v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v47 = *v48;
    v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFF8);
    v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v49 = *v50;
    *(_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
    v51 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, _DWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v36 = (_QWORD *)((v12 + a1) & v25);
    v37 = (_QWORD *)(((unint64_t)a2 + v12) & v25);
    *v36 = *v37;
    v36[1] = v37[1];
    v38 = ((unint64_t)v36 + v13) & v26;
    v39 = ((unint64_t)v37 + v13) & v26;
    v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v40(v38, v39, v60);
    v41 = (v15 + v38) & v26;
    v42 = (v15 + v39) & v26;
    v40(v41, v42, v60);
    v43 = (void *)((v15 + v41) & v26);
    v44 = (const void *)((v15 + v42) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v44, 1, v60))
    {
      memcpy(v43, v44, __n);
    }
    else
    {
      v40((unint64_t)v43, (unint64_t)v44, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v43, 0, 1, v60);
    }
    v51 = 0;
    v52 = (_QWORD *)(((unint64_t)v43 + v61) & 0xFFFFFFFFFFFFF8);
    v53 = (_QWORD *)(((unint64_t)v44 + v61) & 0xFFFFFFFFFFFFFFF8);
    *v52 = *v53;
    v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
    v55 = (_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v54 = *v55;
    v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFF8);
    v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v56 = *v57;
    *(_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFF8);
  }
  *(_BYTE *)(a1 + v62) = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA6BE23C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B0500)
  {
    sub_1BB86C67C();
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B0500);
  }
}

uint64_t sub_1BA6BE2A8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatMetadata();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatFileReference.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(_QWORD, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t inited;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t TupleTypeMetadata2;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  _QWORD *v111;
  void (**v112)(_QWORD, uint64_t);
  __int128 v113;
  uint64_t v114;
  char v115;

  v98 = a4;
  v90 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v96 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v91 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v92 = (char *)&v85 - v12;
  v93 = type metadata accessor for FormatMetadata();
  v89 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v109 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v88 = (char *)&v85 - v15;
  sub_1BA6C0E30(0);
  v94 = v16;
  MEMORY[0x1E0C80A78](v16);
  v95 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v108 = v18;
  v103 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v110 = (char *)&v85 - v19;
  v20 = sub_1BB86CB68();
  MEMORY[0x1E0C80A78](v20);
  v106 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1BB86CB80();
  v22 = *(void (***)(_QWORD, uint64_t))(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v85 - v26;
  v102 = sub_1BB86C67C();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = a2;
  v107 = a3;
  v97 = type metadata accessor for FormatFileReference(0, a2, a3, v30);
  v100 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v99 = (char *)&v85 - v34;
  v35 = a1[3];
  v111 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v36 = v112;
  sub_1BB874674();
  if (v36)
  {
    v37 = v36;
  }
  else
  {
    v85 = v32;
    v86 = v29;
    v87 = v24;
    v112 = v22;
    v38 = v105;
    __swift_project_boxed_opaque_existential_1(&v113, v114);
    v53 = sub_1BB8743B0();
    v55 = v54;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
    sub_1BB86C634();
    v56 = v101;
    v57 = v102;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v27, 1, v102) != 1)
    {
      swift_bridgeObjectRelease();
      v63 = v86;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v86, v27, v57);
      sub_1BA6BE23C();
      v65 = v56;
      v66 = v85;
      v67 = &v85[*(int *)(v64 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v85, v63, v57);
      FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v67, 0, 0, 0, 0);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v57);
      v68 = v97;
      swift_storeEnumTagMultiPayload();
      v69 = v100;
      v70 = v99;
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v66, v68);
      v71 = v70;
      v39 = v111;
      v72 = v98;
LABEL_17:
      (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v72, v71, v68);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    }
    sub_1BA5C699C((uint64_t)v27, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB86CB5C();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(inited + 32) = 7107189;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v53;
    *(_QWORD *)(inited + 56) = v55;
    sub_1BA76E994(inited);
    sub_1BA4A2870(&qword_1EF2BD168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], MEMORY[0x1E0CB15B8]);
    v59 = v87;
    sub_1BB86C43C();
    v60 = sub_1BB86CB74();
    ((void (**)(char *, uint64_t))v112)[1](v59, v38);
    v37 = (void *)v60;
    swift_willThrow();
  }
  v40 = v110;
  v39 = v111;
  v41 = v109;
  __swift_project_boxed_opaque_existential_1(v111, v111[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  __swift_project_boxed_opaque_existential_1(v39, v39[3]);
  v42 = sub_1BB872874();
  v43 = Dictionary<>.errorOnUnknownKeys.getter(v42);
  swift_bridgeObjectRelease();
  v45 = v107;
  if ((v43 & 1) == 0)
  {
LABEL_10:
    v50 = type metadata accessor for FormatFileReference.CodingType(0, v104, v45, v44);
    v113 = 0uLL;
    MEMORY[0x1BCCE5B24](&unk_1BB8F53E8, v50);
    v51 = v108;
    sub_1BB8740D4();
    if ((v115 & 1) != 0)
    {
      v113 = xmmword_1BB87FC90;
      sub_1BB8740D4();
      v113 = xmmword_1BB886E80;
      sub_1BA4A2870(&qword_1ED3B40A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
      v61 = (uint64_t)v91;
      v62 = v93;
      sub_1BB874068();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v61, 1, v62) == 1)
      {
        FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v41, 0, 0, 0, 0);

        (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v51);
        sub_1BA5C699C(v61, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v51);

        sub_1BA6BFCE4(v61, (uint64_t)v41);
      }
      v72 = v98;
      v68 = v97;
      v78 = v104;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v80 = v99;
      v81 = (uint64_t)&v99[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v99, v96, v78);
      sub_1BA6BFCE4((uint64_t)v41, v81);
    }
    else
    {
      v113 = xmmword_1BB87FC90;
      sub_1BA4A2870(&qword_1ED3B3468, (uint64_t (*)(uint64_t))sub_1BA6C0E30, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
      sub_1BB8740D4();
      v113 = xmmword_1BB886E80;
      sub_1BA4A2870(&qword_1ED3B40A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
      v75 = (uint64_t)v92;
      v76 = v93;
      sub_1BB874068();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v75, 1, v76) == 1)
      {
        v77 = v88;
        FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v88, 0, 0, 0, 0);

        (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v51);
        sub_1BA5C699C(v75, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v51);

        v77 = v88;
        sub_1BA6BFCE4(v75, (uint64_t)v88);
      }
      v72 = v98;
      v68 = v97;
      v82 = v95;
      sub_1BA6BE23C();
      v80 = v99;
      v84 = (uint64_t)&v99[*(int *)(v83 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v99, v82, v102);
      sub_1BA6BFCE4((uint64_t)v77, v84);
    }
    swift_storeEnumTagMultiPayload();
    v71 = v80;
    v69 = v100;
    goto LABEL_17;
  }
  v46 = sub_1BB8740EC();
  v47 = *(_QWORD *)(v46 + 16);
  if (!v47)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v48 = (unint64_t *)(v46 + 40);
  while (1)
  {
    v49 = *v48;
    if (*v48 >= 4)
      break;
    v48 += 2;
    if (!--v47)
      goto LABEL_9;
  }
  v73 = *(v48 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v74 = v73;
  *(_QWORD *)(v74 + 8) = v49;
  *(_QWORD *)(v74 + 16) = &unk_1E726FBC8;
  *(_OWORD *)(v74 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v73, v49);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v108);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1BA6BEF7C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86C67C();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatFileReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileReference);
}

uint64_t sub_1BA6BEFC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BA6BF9E8(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 8))(a1, a2, v7);
  v10 = sub_1BB86EB84();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, v10);
  sub_1BB86EB54();
  return sub_1BA6BF694((uint64_t)v9);
}

uint64_t FormatFileReference.formatVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatFileReference.metadata.getter(a1, (uint64_t)v6);
  sub_1BA6BF98C((uint64_t)&v6[*(int *)(v4 + 28)], a2);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t destroy for FormatMetadata(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + a2[6], v5);
  v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA6BF208(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[16];
  _BYTE *v20;

  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v19[-v5];
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v19[-v12];
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v14 = sub_1BB872874();
  Dictionary<>.appVersion.getter(v14, (uint64_t)v13);
  swift_bridgeObjectRelease();
  v15 = sub_1BB872874();
  Dictionary<>.formatVersion.getter(v15, (uint64_t)v10);
  swift_bridgeObjectRelease();
  v16 = type metadata accessor for FormatMetadata();
  sub_1BA6BF98C(a1 + *(int *)(v16 + 28), (uint64_t)v6);
  v20 = v10;
  LOBYTE(a2) = sub_1BAF62460((void (*)(uint64_t *__return_ptr, char *))sub_1BA6C0CD4);
  sub_1BA502AD0((uint64_t)v6, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  sub_1BA4A2870(&qword_1ED3B4098, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  LOBYTE(a1) = sub_1BB86DE88() & ((a2 == 2) | a2);
  v17 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v13, v7);
  return a1 & 1;
}

uint64_t Dictionary<>.formatVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  unint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1BB873E58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  sub_1BB873E4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(_QWORD *)(a1 + 16) && (v15 = sub_1BA6EDA24((uint64_t)v10), (v16 & 1) != 0))
    {
      sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v23);
    }
    else
    {
      v23 = 0u;
      v24 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((_QWORD *)&v24 + 1))
    {
      v17 = sub_1BB86EB84();
      v18 = swift_dynamicCast();
      v19 = *(_QWORD *)(v17 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, v18 ^ 1u, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v17) != 1)
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v13, v17);
    }
    else
    {
      sub_1BA6EDA74((uint64_t)&v23);
      v20 = sub_1BB86EB84();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    }
    sub_1BA6BF694((uint64_t)v13);
    if (qword_1ED3BB468 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED3B8FC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a2, v22, v21);
  }
  return result;
}

uint64_t sub_1BA6BF694(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, char *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a5;
  v47 = a6;
  v42 = a3;
  v43 = a4;
  v48 = a1;
  v49 = a2;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v40 - v18;
  v20 = sub_1BB86EB84();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v40 - v25;
  sub_1BB86EB9C();
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v27(v19, 1, v20) == 1)
  {
    v28 = v21;
    v29 = v23;
    sub_1BB86EB54();
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  else
  {
    v29 = v23;
    v28 = v21;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
  }
  v44 = v26;
  v30 = a10;
  v41 = a11;
  sub_1BB86EB9C();
  if (v27(v16, 1, v20) == 1)
  {
    sub_1BB86EB48();
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v31 = v28;
  }
  else
  {
    v31 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v29, v16, v20);
  }
  v32 = (uint64_t)v45;
  sub_1BB86EB9C();
  if (a8)
    v33 = a8;
  else
    v33 = MEMORY[0x1E0DEE9E8];
  if (a9)
    v34 = a9;
  else
    v34 = MEMORY[0x1E0DEE9E8];
  if (!a10)
    v30 = MEMORY[0x1E0DEE9E8];
  if (v41)
    v35 = v41;
  else
    v35 = MEMORY[0x1E0DEE9E8];
  v36 = v49;
  *(_QWORD *)a7 = v48;
  *((_QWORD *)a7 + 1) = v36;
  v37 = (int *)type metadata accessor for FormatMetadata();
  v38 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v38(&a7[v37[5]], v44, v20);
  v38(&a7[v37[6]], v29, v20);
  result = sub_1BA6BFD64(v32, (uint64_t)&a7[v37[7]]);
  *(_QWORD *)&a7[v37[8]] = v33;
  *(_QWORD *)&a7[v37[9]] = v34;
  *(_QWORD *)&a7[v37[10]] = v30;
  *(_QWORD *)&a7[v37[11]] = v35;
  return result;
}

uint64_t sub_1BA6BF98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA6BF9E8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA6BFA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v27 = a3;
  v28 = a2;
  v9 = *(int *)(a3 + 36);
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v13 = (int *)type metadata accessor for FormatMetadata();
  v14 = v13[5];
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  swift_bridgeObjectRetain();
  v8((uint64_t)v15, v16, v6);
  v8((uint64_t)v10 + v13[6], v11 + v13[6], v6);
  v17 = v13[7];
  v18 = (char *)v10 + v17;
  v19 = (const void *)(v11 + v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11 + v17, 1, v6))
  {
    sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v18, (uint64_t)v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  *(_QWORD *)((char *)v10 + v13[8]) = *(_QWORD *)(v11 + v13[8]);
  *(_QWORD *)((char *)v10 + v13[9]) = *(_QWORD *)(v11 + v13[9]);
  *(_QWORD *)((char *)v10 + v13[10]) = *(_QWORD *)(v11 + v13[10]);
  *(_QWORD *)((char *)v10 + v13[11]) = *(_QWORD *)(v11 + v13[11]);
  v21 = *(int *)(v27 + 40);
  v22 = a1 + v21;
  v23 = v28 + v21;
  v24 = sub_1BB86C67C();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  return a1;
}

uint64_t sub_1BA6BFBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86EB84();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for FormatMetadata();
  v6(v7 + v8[5], v4);
  v6(v7 + v8[6], v4);
  v9 = v7 + v8[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
    v6(v9, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 40);
  v11 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_1BA6BFCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatMetadata()
{
  uint64_t result;

  result = qword_1ED3B40A8;
  if (!qword_1ED3B40A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6BFD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Dictionary<>.appVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - v5;
  v7 = sub_1BB873E58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - v15;
  sub_1BB873E4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (*(_QWORD *)(a1 + 16) && (v18 = sub_1BA6EDA24((uint64_t)v10), (v19 & 1) != 0))
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (*((_QWORD *)&v25 + 1))
  {
    v20 = sub_1BB86EB84();
    v21 = swift_dynamicCast();
    v22 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, v21 ^ 1u, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v20) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(a2, v16, v20);
  }
  else
  {
    sub_1BA6EDA74((uint64_t)&v24);
    v20 = sub_1BB86EB84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
  }
  sub_1BA6BF694((uint64_t)v16);
  sub_1BB86EB18();
  sub_1BB86EB84();
  v23 = *(_QWORD *)(v20 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v20);
  if ((_DWORD)result == 1)
    goto LABEL_14;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(a2, v13, v20);
}

uint64_t sub_1BA6C0064@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(_QWORD *, _QWORD);
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[5];
  uint64_t v101;
  uint64_t v102;

  v99 = a5;
  v97 = a2;
  v98 = a4;
  v96 = a3;
  v101 = a6;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v7);
  v92 = (char *)&v80 - v8;
  v9 = sub_1BB86C67C();
  v90 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  MEMORY[0x1E0C80A78](v9);
  v87 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v86 = (char *)&v80 - v12;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v13);
  v93 = (char *)&v80 - v14;
  v15 = sub_1BB86BFF8();
  v94 = *(_QWORD *)(v15 - 8);
  v95 = v15;
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v88 = (char *)&v80 - v18;
  v19 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v19);
  v85 = (uint64_t)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v80 - v22;
  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v80 - v25;
  v27 = sub_1BB86EB84();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v80 - v32;
  v35 = *a1;
  v34 = a1[1];
  v100[0] = *a1;
  v100[1] = v34;
  sub_1BA7114A0();
  v36 = (_QWORD *)sub_1BB873B4C();
  if (v36[2] != 2)
  {
    v49 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(0, v98, v99, v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v101, 1, 1, v49);
    return swift_bridgeObjectRelease();
  }
  v82 = v34;
  v83 = v35;
  v81 = v30;
  v84 = v33;
  v39 = v36[4];
  v38 = v36[5];
  v40 = v36[6];
  v41 = v36[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = MEMORY[0x1BCCE334C](v39, v38, v40, v41);
  v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB86EBA8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    swift_bridgeObjectRelease();
    v45 = &qword_1ED3B0930;
    v46 = (void (*)(uint64_t))MEMORY[0x1E0DB4DC8];
    v47 = (uint64_t)v26;
LABEL_4:
    sub_1BA502AD0(v47, v45, v46);
LABEL_10:
    v57 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(0, v98, v99, v48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v101, 1, 1, v57);
  }
  v51 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v52 = v84;
  v51(v84, v26, v27);
  v53 = v23;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, v42, v44, v23, 0, 0, 0, 0);
  if ((sub_1BA6BF208((uint64_t)v23, v97) & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v52, v27);
    goto LABEL_10;
  }
  v97 = (char *)v28;
  v54 = v93;
  sub_1BB86BF74();
  v55 = v94;
  v56 = v95;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v54, 1, v95) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*((void (**)(char *, uint64_t))v97 + 1))(v52, v27);
    v45 = (unint64_t *)&unk_1ED3B04A0;
    v46 = (void (*)(uint64_t))MEMORY[0x1E0CAE890];
    v47 = (uint64_t)v54;
    goto LABEL_4;
  }
  v96 = v27;
  v58 = v88;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v88, v54, v56);
  v59 = (void (*)(_QWORD *, _QWORD))sub_1BB86BF98();
  sub_1BB872AFC(&v102);
  v59(v100, 0);
  v60 = v89;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v89, v58, v56);
  v61 = (uint64_t)v92;
  sub_1BB86BF80();
  v62 = *(void (**)(char *, uint64_t))(v55 + 8);
  v62(v60, v56);
  v62(v58, v56);
  v63 = v90;
  v64 = v91;
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v61, 1, v91);
  v66 = v99;
  v67 = v101;
  v68 = v98;
  if (v65 == 1)
  {
    sub_1BA4A2E80((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*((void (**)(char *, uint64_t))v97 + 1))(v84, v96);
    sub_1BA502AD0(v61, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v70 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(0, v68, v66, v69);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v67, 1, 1, v70);
  }
  else
  {
    v71 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
    v97 = v53;
    v72 = v86;
    v71(v86, v61, v64);
    v73 = v66;
    v74 = (uint64_t)v81;
    v51(v81, v84, v96);
    v75 = v85;
    sub_1BA6BFCE4((uint64_t)v97, v85);
    v76 = (uint64_t)v87;
    v71(v87, (uint64_t)v72, v64);
    v77 = v101;
    sub_1BA6C1EAC(v74, v75, v76, v68, v73, v101);
    v79 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(0, v68, v73, v78);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v77, 0, 1, v79);
  }
}

uint64_t type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileVersionURIReferenceCollection.VersionMetadata);
}

uint64_t sub_1BA6C0704()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t FormatObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;

  v37 = a4;
  sub_1BA6C0BF8(0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatMetadata();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatObject.CodingKeys(255, a2, a3, v13);
  MEMORY[0x1BCCE5B24](&unk_1BB94C278, v14);
  v15 = sub_1BB874104();
  v41 = *(_QWORD *)(v15 - 8);
  v42 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - v16;
  v47 = a2;
  v45 = a3;
  v19 = type metadata accessor for FormatObject(0, a2, a3, v18);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v35 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v23 = v48;
  sub_1BB87468C();
  if (v23)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v43;
  v25 = (uint64_t)v44;
  v48 = v20;
  v36 = v19;
  v50 = 0;
  v26 = v42;
  sub_1BB8740D4();
  v28 = v17;
  v29 = v22;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v22, v46, v47);
  v49 = 1;
  sub_1BA6BE2A8(&qword_1ED3B40A0, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  v30 = v40;
  sub_1BB874068();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v25, 1, v30) == 1)
  {
    v31 = v38;
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v38, 0, 0, 0, 0);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v26);
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BA6C0BF8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v26);
    v31 = v38;
    sub_1BA6BFCE4(v25, (uint64_t)v38);
  }
  v32 = v36;
  v33 = v37;
  v34 = v48;
  sub_1BA6BFCE4((uint64_t)v31, (uint64_t)&v29[*(int *)(v36 + 36)]);
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v33, v29, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v29, v32);
}

uint64_t sub_1BA6C0AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = (v7 + ((v4 + a1 + (v7 | 7)) & ~(v7 | 7)) + 16) & ~v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v8, v5);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = (v10 + v7 + v8) & ~v7;
  v9(v11, v5);
  v12 = (v10 + v7 + v11) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5))
    v9(v12, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for FormatMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BA6C0BF8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t type metadata accessor for FormatObject.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatObject.CodingKeys);
}

uint64_t sub_1BA6C0C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  int v7;
  uint64_t result;

  v7 = a7 >> 6;
  if (v7 == 2)
    return swift_bridgeObjectRelease();
  if (v7 != 1)
  {
    if (a7 >> 6)
      return result;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA6C1F54(a3, a4, a5, a6, a7 & 1);
}

uint64_t sub_1BA6C0CA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB86E8FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BA6C0CD4@<X0>(_BYTE *a1@<X8>)
{
  return sub_1BA6C0CF0(a1);
}

uint64_t sub_1BA6C0CF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB86E8FC();
  *a1 = result & 1;
  return result;
}

uint64_t destroy for FormatStyle()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatObject);
}

uint64_t destroy for FormatType(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t destroy for FormatGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA6C0E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B3470)
  {
    v2 = sub_1BB86C67C();
    v3 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v5 = type metadata accessor for FormatValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B3470);
  }
}

uint64_t type metadata accessor for FormatFileReference.CodingType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileReference.CodingType);
}

uint64_t sub_1BA6C0EB4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

char *initializeWithCopy for FormatMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1BB86EB84();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v12(&a1[a3[6]], &a2[a3[6]], v10);
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_1BA6BF9E8(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  v18 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FormatObject.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v25 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v25);
  v24 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27 = (char *)&v24 - v6;
  MEMORY[0x1E0C80A78](v7);
  v26 = (uint64_t *)((char *)&v24 - v8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v28 = a2;
  v29 = v9;
  v12 = type metadata accessor for FormatObject.CodingKeys(255, v9, v10, v11);
  MEMORY[0x1BCCE5B24](&unk_1BB94C278, v12);
  v13 = sub_1BB8741D0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  v32 = 0;
  v17 = v30;
  sub_1BB8741AC();
  if (v17)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v30 = v14;
  v19 = v26;
  v20 = v28;
  sub_1BA6C1D60(v28, (uint64_t)v26);
  v21 = v27;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v27, 0, 0, 0, 0);
  v22 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v19, v21);
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  if ((v22 & 1) == 0)
  {
    v23 = v24;
    sub_1BA6C1D60(v20, v24);
    v31 = 1;
    sub_1BA6BE2A8(&qword_1ED39CBE8, (uint64_t)&protocol conformance descriptor for FormatMetadata);
    sub_1BB8741AC();
    sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v13);
}

uint64_t _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  int *v31;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;

  v4 = sub_1BB86EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C1CE8();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - v19;
  v21 = a1[1];
  v22 = a2[1];
  if (!v21)
  {
    if (v22)
      goto LABEL_21;
    goto LABEL_8;
  }
  if (!v22)
    goto LABEL_21;
  if (*a1 == *a2 && v21 == v22 || (v23 = sub_1BB874398(), v24 = 0, (v23 & 1) != 0))
  {
LABEL_8:
    v36 = v4;
    v25 = type metadata accessor for FormatMetadata();
    if ((sub_1BB86EB3C() & 1) == 0 || (sub_1BB86EB3C() & 1) == 0)
      goto LABEL_21;
    sub_1BA6BF98C((uint64_t)a1 + *(int *)(v25 + 28), (uint64_t)v20);
    v34 = (int *)v25;
    sub_1BA6BF98C((uint64_t)a2 + *(int *)(v25 + 28), (uint64_t)v17);
    v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1BA6BF98C((uint64_t)v20, (uint64_t)v11);
    v35 = v26;
    sub_1BA6BF98C((uint64_t)v17, v26);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v28 = v36;
    if (v27((uint64_t)v11, 1, v36) == 1)
    {
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      if (v27(v35, 1, v28) == 1)
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
LABEL_17:
        v31 = v34;
        if ((sub_1BA6C16A0(*(_QWORD *)((char *)a1 + v34[8]), *(_QWORD *)((char *)a2 + v34[8])) & 1) != 0
          && (sub_1BA6C16A0(*(_QWORD *)((char *)a1 + v31[9]), *(_QWORD *)((char *)a2 + v31[9])) & 1) != 0
          && (sub_1BA6C1868(*(_QWORD *)((char *)a1 + v31[10]), *(_QWORD *)((char *)a2 + v31[10])) & 1) != 0)
        {
          v24 = sub_1BA6C1868(*(_QWORD *)((char *)a1 + v31[11]), *(_QWORD *)((char *)a2 + v31[11]));
          return v24 & 1;
        }
LABEL_21:
        v24 = 0;
        return v24 & 1;
      }
    }
    else
    {
      sub_1BA6BF98C((uint64_t)v11, (uint64_t)v14);
      if (v27(v35, 1, v28) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v35, v28);
        sub_1BA4A2870(&qword_1ED39C378, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE8]);
        v29 = sub_1BB872958();
        v30 = *(void (**)(char *, uint64_t))(v5 + 8);
        v30(v7, v28);
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        v30(v14, v28);
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        if ((v29 & 1) == 0)
          goto LABEL_21;
        goto LABEL_17;
      }
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v28);
    }
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6C1CE8);
    goto LABEL_21;
  }
  return v24 & 1;
}

uint64_t sub_1BA6C16A0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_32;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v12);
    result = MEMORY[0x1BCCE4ED0](*(_QWORD *)(a2 + 40), v16, 4);
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_DWORD *)(v19 + 4 * v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_1BA6C1868(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = *(_QWORD *)(result + 56);
  v32 = result;
  v33 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v34 = (unint64_t)(v6 + 63) >> 6;
  v9 = a2 + 56;
  if ((v7 & v5) == 0)
    goto LABEL_8;
  while (2)
  {
    v10 = __clz(__rbit64(v8));
    v11 = (v8 - 1) & v8;
    v12 = v10 | (v4 << 6);
LABEL_22:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    sub_1BB8745CC();
    v35 = v11;
    v36 = v4;
    if (v18 == 1 || v18 == 2 || v18 == 3)
    {
      sub_1BB8745D8();
    }
    else
    {
      sub_1BB8745D8();
      sub_1BB8745E4();
      if (v18)
      {
        swift_bridgeObjectRetain_n();
        sub_1BB872A90();
        sub_1BA6DB13C(v17, v18);
      }
    }
    v19 = sub_1BB874608();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_63:
      sub_1BA6DB13C(v17, v18);
      return 0;
    }
    v22 = ~v20;
    while (1)
    {
      v23 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v21);
      v24 = *v23;
      v25 = v23[1];
      switch(v25)
      {
        case 1:
          if (v18 == 1)
          {
            v30 = *v23;
            v31 = 1;
            goto LABEL_58;
          }
          goto LABEL_42;
        case 2:
          if (v18 == 2)
          {
            v30 = *v23;
            v31 = 2;
            goto LABEL_58;
          }
          goto LABEL_42;
        case 3:
          if (v18 == 3)
          {
            v30 = *v23;
            v31 = 3;
            goto LABEL_58;
          }
LABEL_42:
          sub_1BA653B2C(v17, v18);
          sub_1BA653B2C(v24, v25);
          sub_1BA6DB13C(v24, v25);
          v26 = v17;
          v27 = v18;
          goto LABEL_43;
      }
      if ((unint64_t)(v18 - 1) < 3)
        goto LABEL_42;
      if (!v25)
      {
        sub_1BA653B2C(v17, v18);
        sub_1BA653B2C(v24, 0);
        sub_1BA653B2C(v17, v18);
        sub_1BA653B2C(v24, 0);
        sub_1BA6DB13C(v24, 0);
        sub_1BA6DB13C(v17, v18);
        sub_1BA6DB13C(v24, 0);
        if (!v18)
          goto LABEL_59;
        sub_1BA6DB13C(v17, v18);
        v26 = v24;
LABEL_57:
        v27 = 0;
LABEL_43:
        sub_1BA6DB13C(v26, v27);
        goto LABEL_44;
      }
      if (!v18)
      {
        sub_1BA653B2C(v17, 0);
        sub_1BA653B2C(v24, v25);
        sub_1BA6DB13C(v24, v25);
        v26 = v17;
        goto LABEL_57;
      }
      if (v24 == v17 && v25 == v18)
        break;
      v29 = sub_1BB874398();
      sub_1BA653B2C(v17, v18);
      sub_1BA653B2C(v24, v25);
      sub_1BA6DB13C(v24, v25);
      sub_1BA6DB13C(v17, v18);
      if ((v29 & 1) != 0)
        goto LABEL_59;
LABEL_44:
      v21 = (v21 + 1) & v22;
      if (((*(_QWORD *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_63;
    }
    sub_1BA653B2C(v17, v18);
    sub_1BA653B2C(v17, v18);
    sub_1BA6DB13C(v17, v18);
    v30 = v17;
    v31 = v18;
LABEL_58:
    sub_1BA6DB13C(v30, v31);
LABEL_59:
    v3 = v32;
    result = sub_1BA6DB13C(v17, v18);
    v8 = v35;
    v4 = v36;
    if (v35)
      continue;
    break;
  }
LABEL_8:
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_66;
  }
  if (v13 >= v34)
    return 1;
  v14 = *(_QWORD *)(v33 + 8 * v13);
  ++v4;
  if (v14)
    goto LABEL_21;
  v4 = v13 + 1;
  if (v13 + 1 >= v34)
    return 1;
  v14 = *(_QWORD *)(v33 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v4 = v13 + 2;
  if (v13 + 2 >= v34)
    return 1;
  v14 = *(_QWORD *)(v33 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v15 = v13 + 3;
  if (v15 >= v34)
    return 1;
  v14 = *(_QWORD *)(v33 + 8 * v15);
  if (v14)
  {
    v4 = v15;
LABEL_21:
    v11 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v34)
      return 1;
    v14 = *(_QWORD *)(v33 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_66:
  __break(1u);
  return result;
}

void sub_1BA6C1CE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED39C380)
  {
    sub_1BA4B07F0(255, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED39C380);
  }
}

uint64_t sub_1BA6C1D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BA6C1DDC(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D3418(v2 + *(int *)(a1 + 36), (uint64_t)v7);
  return sub_1BA6BFCE4((uint64_t)v7, a2);
}

void sub_1BA6C1DDC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3C2590)
  {
    v2 = sub_1BA8237E8();
    v4 = type metadata accessor for FormatCodingDefault(a1, (uint64_t)&type metadata for FormatCodingMetadataStrategy, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3C2590);
  }
}

uint64_t destroy for FormatItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA6C1EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v12 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  v14 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(0, a4, a5, v13);
  sub_1BA6BFCE4(a2, a6 + *(int *)(v14 + 36));
  v15 = a6 + *(int *)(v14 + 40);
  v16 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a3, v16);
}

uint64_t sub_1BA6C1F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatFileReferenceCollection.MetadataContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileReferenceCollection.MetadataContainer);
}

uint64_t destroy for FormatSupplementary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA6C1FFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3AB888, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t destroy for FormatDecoration(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 106) != 255)
  {
    v3 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
    return sub_1BA77A170(*(_QWORD *)(a1 + 96), v3, SBYTE2(v3), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  }
  return result;
}

uint64_t sub_1BA6C209C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes);
}

uint64_t sub_1BA6C20B0(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t *a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15)
{
  _QWORD *v15;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __int128 *v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  _QWORD v113[14];
  _QWORD v114[5];
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  _UNKNOWN **v118;
  char v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;

  v106 = a8;
  v86 = a7;
  v110 = a3;
  v111 = a4;
  v112 = (uint64_t *)a1;
  v107 = a9;
  v109 = type metadata accessor for FormatContent.Resolved();
  v84 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v85 = v19;
  v87 = (uint64_t)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a2[3];
  v129 = a2[2];
  v130 = v20;
  v131 = a2[4];
  v21 = a2[1];
  v127 = *a2;
  v128 = v21;
  v83 = *a6;
  v22 = *a10;
  v101 = a10[1];
  v102 = v22;
  v23 = *a11;
  v95 = a11[1];
  v96 = v23;
  v24 = a11[2];
  v93 = a11[3];
  v94 = v24;
  v25 = a11[4];
  v91 = a11[5];
  v92 = v25;
  v90 = a11[6];
  LODWORD(v25) = *((unsigned __int8 *)a11 + 56);
  v88 = *((unsigned __int8 *)a11 + 57);
  v89 = v25;
  v27 = *a15;
  v26 = a15[1];
  v28 = a15[2];
  v29 = v15[10];
  v103 = a15[3];
  v104 = v29;
  v30 = v15[12];
  v108 = v15[11];
  v114[2] = v29;
  v114[3] = v108;
  v105 = v30;
  v98 = v15;
  v114[4] = v30;
  v31 = sub_1BB86F778();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6F08], v31);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6EF8], v31);
  v97 = v31;
  v32 = sub_1BB86E38C();
  v33 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3DC0], v32);
  v35 = sub_1BAA52384((void (*)(char *, char *))sub_1BA56A7C4, (uint64_t)v114, v32, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v33, MEMORY[0x1E0DEDD18], v34);
  v100 = 0;
  v99 = sub_1BA6E43EC(v35);
  swift_bridgeObjectRelease();
  v124 = v129;
  v125 = v130;
  v126 = v131;
  v122 = v127;
  v123 = v128;
  *(_QWORD *)&v116 = v102;
  *((_QWORD *)&v116 + 1) = v101;
  v107 = sub_1BA6C5F9C((uint64_t)v112, (uint64_t)&v122, v106, v107, (uint64_t *)&v116, a5);
  v124 = v129;
  v125 = v130;
  v126 = v131;
  v122 = v127;
  v123 = v128;
  v36 = v27;
  *(_QWORD *)&v116 = v27;
  *((_QWORD *)&v116 + 1) = v26;
  v37 = v26;
  v38 = v28;
  *(_QWORD *)&v117 = v28;
  v39 = v103;
  *((_QWORD *)&v117 + 1) = v103;
  v41 = v110;
  v40 = v111;
  v42 = v99;
  v43 = (void *)sub_1BA6C43C8(v110, v111, (uint64_t *)&v122, a5, v99, (uint64_t *)&v116);
  v44 = *((_QWORD *)&v130 + 1);
  v113[2] = v104;
  v113[3] = v108;
  v113[4] = v105;
  v113[5] = v41;
  v45 = v112;
  v113[6] = v40;
  v113[7] = v43;
  v106 = v43;
  v113[8] = v36;
  v113[9] = v37;
  v113[10] = v38;
  v113[11] = v39;
  v113[12] = v42;
  swift_bridgeObjectRetain();
  v105 = sub_1BA8A1D9C((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BA6C2940, (uint64_t)v113, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46 = v45[1];
  v102 = *v45;
  *(_QWORD *)&v122 = v102;
  *((_QWORD *)&v122 + 1) = v46;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v47);
  v103 = *((_QWORD *)&v122 + 1);
  v104 = v122;
  if (qword_1ED3CC218 != -1)
    swift_once();
  v48 = qword_1ED476940;
  v49 = *(uint64_t *)((char *)v45 + *(int *)(v109 + 28));
  v50 = (uint64_t *)(v129 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  v51 = *v50;
  *(_QWORD *)&v122 = MEMORY[0x1E0DEE9D8];
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v52 = result;
    if (!result)
      goto LABEL_14;
  }
  else
  {
    v52 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (!v52)
      goto LABEL_14;
  }
  if (v52 < 1)
  {
    __break(1u);
    return result;
  }
  v101 = v48;
  if ((v49 & 0xC000000000000001) != 0)
  {
    v54 = 0;
    do
    {
      v55 = MEMORY[0x1BCCE4630](v54++, v49);
      v56 = (uint64_t *)(v55 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      v57 = *v56;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA6C2884(v57);
    }
    while (v52 != v54);
  }
  else
  {
    v58 = 0;
    do
    {
      ++v58;
      swift_beginAccess();
      v59 = swift_bridgeObjectRetain();
      sub_1BA6C2884(v59);
    }
    while (v52 != v58);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  v60 = v122;
  *(_QWORD *)&v122 = v51;
  sub_1BA6C2884(v60);
  v61 = sub_1BA6C2B2C(v122);
  if (v61)
  {
    v62 = v61;
    *(_QWORD *)&v116 = v61;
    swift_bridgeObjectRetain();
    sub_1BB86E7D0();
    swift_bridgeObjectRelease();
    v63 = v122;
    v64 = (uint64_t)v112;
    if ((_QWORD)v122)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v63 = FormatPackageInventory.merging(with:)(v49);
      *(_QWORD *)&v122 = v63;
      *(_QWORD *)&v116 = v62;
      swift_retain();
      sub_1BB86E7DC();
    }
  }
  else
  {
    v63 = FormatPackageInventory.merging(with:)(v49);
    v64 = (uint64_t)v112;
  }
  v112 = (uint64_t *)a12;
  *(_QWORD *)&v120 = v63;
  *((_QWORD *)&v120 + 1) = v102;
  v121 = v46;
  v119 = v83;
  sub_1BA4C2DD8(v86, (uint64_t)&v122, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
  v65 = v87;
  sub_1BA4C2DD8(v64, v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v66 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v67 = (v85 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = swift_allocObject();
  sub_1BA5193C4(v65, v68 + v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v69 = (__int128 *)(v68 + v67);
  v70 = v130;
  v69[2] = v129;
  v69[3] = v70;
  v69[4] = v131;
  v71 = v128;
  *v69 = v127;
  v69[1] = v71;
  v72 = type metadata accessor for FeedGroupDebug();
  v73 = swift_allocObject();
  v74 = v73;
  if (*((_QWORD *)&v123 + 1))
  {
    sub_1BA4CECCC(&v122, v73 + 16);
    *(_QWORD *)(v74 + 56) = sub_1BA54EDB0;
    *(_QWORD *)(v74 + 64) = v68;
    *((_QWORD *)&v117 + 1) = v72;
    v118 = &protocol witness table for FeedGroupDebug;
    *(_QWORD *)&v116 = v74;
    swift_bridgeObjectRetain();
    sub_1BA6C2898((uint64_t)&v127);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA6C2898((uint64_t)&v127);
    swift_release();
    sub_1BA4A2E80((uint64_t)&v122, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
    swift_deallocPartialClassInstance();
    v116 = 0u;
    v117 = 0u;
    v118 = 0;
  }
  type metadata accessor for FeedGroupRegion();
  *(_QWORD *)&v122 = v96;
  *((_QWORD *)&v122 + 1) = v95;
  *(_QWORD *)&v123 = v94;
  *((_QWORD *)&v123 + 1) = v93;
  *(_QWORD *)&v124 = v92;
  *((_QWORD *)&v124 + 1) = v91;
  *(_QWORD *)&v125 = v90;
  BYTE8(v125) = v89;
  BYTE9(v125) = v88;
  v75 = *(_QWORD *)(v64 + *(int *)(v109 + 40));
  swift_bridgeObjectRetain();
  v76 = swift_bridgeObjectRetain();
  v77 = sub_1BA6E4124(v76, v75);
  v115 = v108;
  swift_bridgeObjectRetain();
  v78 = v111;
  swift_bridgeObjectRetain();
  v79 = v97;
  v80 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> BlueprintItem<A>, v97, &v115);
  v81 = sub_1BA6D1A38((uint64_t)v106, v110, v78, v107, v104, v103, &v120, v105, &v119, (uint64_t)&v116, &v122, v77, (uint64_t)v112, a13, a14, v79, v80);
  swift_bridgeObjectRelease();
  return v81;
}

uint64_t sub_1BA6C2884(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA6BAD3C, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
}

uint64_t sub_1BA6C2898(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for FeedGroupRegion()
{
  return objc_opt_self();
}

uint64_t sub_1BA6C2940@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA6C31E8(a1, v2[5], v2[7], v2[10], a2, v2[12], v2[2], v2[3], v2[4]);
}

uint64_t sub_1BA6C2984(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6C29B0(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3B9D30, (uint64_t)&type metadata for FeedSlot);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA6C29B0(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 + 31;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 6);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[64 * v10])
      memmove(v15, v16, v10 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[64 * v10] || v15 >= &v16[64 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BA6C2B2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - v7;
  sub_1BA6BCBF8(0);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      return v16;
    goto LABEL_14;
  }
  v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v15 = *(_QWORD *)(v10 + 72);
  v25[1] = a1;
  v26 = v15;
  v16 = MEMORY[0x1E0DEE9D8];
  v27 = v8;
  v28 = v5;
  do
  {
    sub_1BA6C2DDC(v14, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
      sub_1BA4A2E80((uint64_t)&v12[*(int *)(v23 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      return 0;
    }
    v17 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v17(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1BA6C2E20(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
    v19 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    if (v19 >= v18 >> 1)
      v16 = sub_1BA6C2E20(v18 > 1, v19 + 1, 1, v16);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v21 = (uint64_t)&v12[*(int *)(v20 + 48)];
    *(_QWORD *)(v16 + 16) = v19 + 1;
    v22 = v16
        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
        + *(_QWORD *)(v3 + 72) * v19;
    v5 = v28;
    v17((char *)v22, v28, v2);
    v8 = v27;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
    sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v14 += v26;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v16 + 16))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v16;
}

uint64_t sub_1BA6C2DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6BCBF8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6C2E20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3CFB20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BA6C2E34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, char a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v52;
  uint64_t v53[4];
  uint64_t v54[8];
  uint64_t v55[2];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;

  v21 = a8;
  v22 = a1[1];
  v52 = *a1;
  v23 = a1[3];
  v24 = a1[4];
  v25 = a1[5];
  v26 = a1[6];
  v27 = a1[7];
  v28 = a1[8];
  v29 = a1[9];
  if ((v24 & 0x8000000000000000) == 0)
  {
    v44 = a8;
    v30 = a1[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31 = v30;
    v32 = v22;
    v33 = v23;
    v34 = v25;
    v35 = v26;
    v36 = v27;
    v37 = v28;
LABEL_9:
    *(_QWORD *)&v56 = v52;
    *((_QWORD *)&v56 + 1) = v32;
    v57 = v31;
    v58 = v33;
    v59 = v24;
    v60 = v34;
    v61 = v35;
    v62 = v36;
    v63 = v37;
    v64 = v29;
    v65 = a9 & 1;
    v55[0] = a12;
    v55[1] = a13;
    sub_1BA6A09F0(a14, (uint64_t)v54, &qword_1ED3B23A0, (uint64_t)&type metadata for FeedGroupBindingOptions);
    v53[0] = a18;
    v53[1] = a19;
    v53[2] = a20;
    v53[3] = a21;
    v42 = sub_1BA6C20B0(a6, &v56, a3, a4, a7, &v65, a5, a10, a11, v55, v54, a15, a16, a17, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v21 = v44;
    goto LABEL_10;
  }
  v45 = a1[2];
  *(_QWORD *)&v56 = a2;
  sub_1BA5445C0(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3A0800, (uint64_t (*)(uint64_t))sub_1BA5445C0, MEMORY[0x1E0DEAF38]);
  sub_1BA4A2870((unint64_t *)&qword_1ED39EE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], MEMORY[0x1E0DB6AD8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = sub_1BB872BBC();
  if (!*(_QWORD *)(v38 + 16))
  {
    v44 = v21;
    swift_bridgeObjectRelease();
    v24 &= ~0x8000000000000000;
LABEL_8:
    v32 = v22;
    v33 = v23;
    v34 = v25;
    v35 = v26;
    v36 = v27;
    v37 = v46;
    v31 = v45;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v39 = sub_1BA6E35A8(v52, v22);
  if ((v40 & 1) == 0)
  {
    v44 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 &= ~0x8000000000000000;
    goto LABEL_8;
  }
  v41 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v39);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(a5, (uint64_t)&v56, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v42 = FeedGroupRegion.init(groupIdentifier:pluginModel:feedGroupDebug:)(a3, a4, v41, (uint64_t)&v56);
  result = sub_1BA7F4208();
LABEL_10:
  *v21 = v42;
  return result;
}

uint64_t sub_1BA6C31E8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v10 = v9;
  v11 = a5;
  v12 = a1[1];
  v35 = *a1;
  v36 = v12;
  v13 = a1[3];
  v37 = a1[2];
  v38 = v13;
  v39 = v37;
  v14 = MEMORY[0x1E0DEE9D8];
  v34 = MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(v37 + 16);
  if (v15)
  {
    v16 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
    v17 = v37 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v18 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA6C357C(v17, a2, a3, a4, (uint64_t)&v33, a6, (uint64_t)&v35, a7, a8, a9);
      if (v10)
        break;
      v10 = 0;
      sub_1BA6C3424(v33);
      v17 += v18;
      if (!--v15)
      {
        sub_1BA4F6CCC((uint64_t)&v39);
        sub_1BA4F6CCC((uint64_t)&v39);
        v14 = v34;
        v11 = a5;
        goto LABEL_6;
      }
    }
    sub_1BA4F6CCC((uint64_t)&v39);
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
LABEL_6:
    v34 = v14;
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C03A0, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0(&qword_1ED3C03B0, (unint64_t *)&unk_1ED3C03A0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E0DEAF38]);
    sub_1BA6C4384();
    v19 = sub_1BB872BBC();
    v20 = v35;
    swift_bridgeObjectRetain();
    v21 = sub_1BB6FBC60(v14);
    swift_bridgeObjectRelease();
    v22 = sub_1BA6E43EC(v21);
    swift_bridgeObjectRelease();
    v23 = sub_1BA6C3B10(v19);
    v24 = sub_1BA6C3D30(v19);
    v25 = sub_1BA6C3F68(v19);
    swift_bridgeObjectRelease();
    v27 = *((_QWORD *)&v36 + 1);
    v26 = v36;
    *(_OWORD *)v11 = v20;
    *(_QWORD *)(v11 + 16) = v22;
    *(_QWORD *)(v11 + 24) = v23;
    *(_QWORD *)(v11 + 32) = v24;
    *(_QWORD *)(v11 + 40) = v25;
    *(_OWORD *)(v11 + 48) = __PAIR128__(v27, v26);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA6C3424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38F608(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6C357C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  _QWORD v15[8];

  v15[4] = a2;
  v15[6] = a5;
  v15[2] = a10;
  v15[3] = a4;
  v15[0] = a3;
  v15[1] = a9;
  v15[7] = a7;
  v11 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v11);
  sub_1BA4C2DD8(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v14 = (char *)sub_1BA6C3644 + 4 * byte_1BB883E90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6C3644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  swift_unknownObjectRelease();
  if (!v1)
    goto LABEL_8;
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (v7 == v3 && v6 == v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1BA761FE4(*(_QWORD *)(v5 - 120), v2, v4);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C0540, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    v11 = MEMORY[0x1E0DEE9E8];
    v12 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v10 + 40) = v2;
    *(_QWORD *)(v10 + 48) = v11;
    *(_QWORD *)(v10 + 56) = v12;
    *(_QWORD *)(v10 + 64) = 0;
    *(_QWORD *)(v10 + 72) = 0;
    **(_QWORD **)(v5 - 96) = v10;
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  v14 = MEMORY[0x1E0DED1E8];
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C0540, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v16 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))v14);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v5 - 112);
  *(_QWORD *)(v17 + 40) = v0;
  swift_bridgeObjectRetain();
  FormatContentSlotItemObject.Resolved.identifier.getter();
  *(_QWORD *)(v17 + 48) = v18;
  *(_QWORD *)(v17 + 56) = v19;
  *(_QWORD *)(v5 - 72) = v17;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v16, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v16, MEMORY[0x1E0DEAF20]);
  v20 = sub_1BB872904();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(*(_QWORD *)(v5 - 88) + 40);
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v23 + 16) && (v26 = sub_1BA6E35A8(v24, v25), (v27 & 1) != 0))
  {
    v28 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(*(_QWORD *)(v5 - 88) + 48);
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v29 + 16) && (v32 = sub_1BA6E35A8(v30, v31), (v33 & 1) != 0))
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(*(_QWORD *)(v5 - 88) + 56);
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v35 + 16) && (v38 = sub_1BA6E35A8(v36, v37), (v39 & 1) != 0))
  {
    v40 = (uint64_t *)(*(_QWORD *)(v35 + 56) + 16 * v38);
    v41 = *v40;
    v42 = v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v41 = 0;
    v42 = 0;
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 32) = v20;
  *(_QWORD *)(v15 + 40) = v22;
  *(_QWORD *)(v15 + 48) = v28;
  *(_QWORD *)(v15 + 56) = v34;
  *(_QWORD *)(v15 + 64) = v41;
  *(_QWORD *)(v15 + 72) = v42;
  **(_QWORD **)(v5 - 96) = v15;
  return result;
}

void sub_1BA6C399C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v0;
  v4 = v0[1];
  v5 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v2 - 112);
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v3;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v2 - 72) = v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v5, MEMORY[0x1E0DEAF20]);
  swift_bridgeObjectRetain();
  sub_1BB872904();
  v7 = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 72) = *(_QWORD *)(v2 - 144);
  MEMORY[0x1E0C80A78](v7);
  sub_1BB86F778();
  v8 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v8);
  v9 = sub_1BB872BF8();
  swift_bridgeObjectRelease();
  **(_QWORD **)(v2 - 96) = v9;
  JUMPOUT(0x1BA6C3978);
}

uint64_t sub_1BA6C3B10(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  sub_1BA6C3CCC();
  result = sub_1BB873F48();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 48 * i + 16);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v17;
    v19[1] = result;
    *(_QWORD *)(v3[7] + 8 * i) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BA6C3CCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B30)
  {
    sub_1BA6BCC84();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B30);
  }
}

uint64_t sub_1BA6C3D30(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  sub_1BA6C3EEC();
  result = sub_1BB873F48();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 48 * i + 24);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v17;
    v19[1] = result;
    *(_QWORD *)(v3[7] + 8 * i) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BA6C3EEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04D8)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04D8);
  }
}

uint64_t sub_1BA6C3F68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;

  v2 = a1 + 64;
  v34 = MEMORY[0x1E0DEE9E0];
  v38 = MEMORY[0x1E0DEE9E0];
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v36 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  v31 = v2;
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v8 = v7 | (v37 << 6);
      goto LABEL_6;
    }
    v13 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v13 >= v36)
      goto LABEL_40;
    v14 = *(_QWORD *)(v2 + 8 * v13);
    v15 = v37 + 1;
    if (!v14)
    {
      v15 = v37 + 2;
      if (v37 + 2 >= v36)
        goto LABEL_40;
      v14 = *(_QWORD *)(v2 + 8 * v15);
      if (!v14)
      {
        v15 = v37 + 3;
        if (v37 + 3 >= v36)
          goto LABEL_40;
        v14 = *(_QWORD *)(v2 + 8 * v15);
        if (!v14)
        {
          v15 = v37 + 4;
          if (v37 + 4 >= v36)
            goto LABEL_40;
          v14 = *(_QWORD *)(v2 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_25:
    v5 = (v14 - 1) & v14;
    v8 = __clz(__rbit64(v14)) + (v15 << 6);
    v37 = v15;
LABEL_6:
    v9 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
    v10 = v9[1];
    v11 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 48 * v8 + 32);
    if (!(_QWORD)v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA5DCC20(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = 0;
      goto LABEL_8;
    }
    v33 = *v9;
    v17 = *(_QWORD *)(v34 + 16);
    v32 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 48 * v8 + 32);
    if (*(_QWORD *)(v34 + 24) <= v17)
    {
      v35 = v17 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA5DCC20(v11);
      sub_1BA5DCC20(v11);
      sub_1BB4B0374(v35, 1);
      v18 = v38;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA5DCC20(v11);
      sub_1BA5DCC20(v11);
      v18 = v34;
    }
    v34 = v18;
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v19 = v34 + 64;
    v20 = -1 << *(_BYTE *)(v34 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v34 + 64 + 8 * (v21 >> 6))) == 0)
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v20) >> 6;
      v2 = v31;
      v24 = v32;
      while (++v22 != v26 || (v25 & 1) == 0)
      {
        v27 = v22 == v26;
        if (v22 == v26)
          v22 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v19 + 8 * v22);
        if (v28 != -1)
        {
          v23 = __clz(__rbit64(~v28)) + (v22 << 6);
          goto LABEL_39;
        }
      }
      goto LABEL_42;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v34 + 64 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    v2 = v31;
    v24 = v32;
LABEL_39:
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v29 = 16 * v23;
    v30 = (_QWORD *)(*(_QWORD *)(v34 + 48) + v29);
    *v30 = v33;
    v30[1] = v10;
    *(_OWORD *)(*(_QWORD *)(v34 + 56) + v29) = v24;
    ++*(_QWORD *)(v34 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v11;
LABEL_8:
    result = sub_1BA5DCC4C(v12);
  }
  v16 = v37 + 5;
  if (v37 + 5 >= v36)
  {
LABEL_40:
    sub_1BA6EBD18();
    return v34;
  }
  v14 = *(_QWORD *)(v2 + 8 * v16);
  if (v14)
  {
    v15 = v37 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v36)
      goto LABEL_40;
    v14 = *(_QWORD *)(v2 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_25;
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_1BA6C4384()
{
  unint64_t result;

  result = qword_1ED3BCE80;
  if (!qword_1ED3BCE80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB883EF8, &type metadata for SlotReference);
    atomic_store(result, (unint64_t *)&qword_1ED3BCE80);
  }
  return result;
}

uint64_t sub_1BA6C43C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;

  v58 = a5;
  v66 = a4;
  v60 = a2;
  v63 = a1;
  v9 = *(_QWORD *)(v6 + 96);
  v67 = *(_QWORD *)(v6 + 80);
  v68 = v9;
  v10 = sub_1BB86F778();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6F08], v10);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6EF8], v10);
  v65 = sub_1BB86E38C();
  v62 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v49 - v11;
  v12 = a3[1];
  v61 = *a3;
  v70 = v12;
  v13 = a3[3];
  v59 = a3[2];
  v15 = a3[4];
  v14 = a3[5];
  v17 = a3[6];
  v16 = a3[7];
  v19 = a3[8];
  v18 = a3[9];
  v57 = *a6;
  v56 = a6[1];
  v55 = a6[2];
  v54 = a6[3];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v20 = sub_1BB4A4184(v19);
  v53 = 0;
  swift_bridgeObjectRelease();
  v74 = v16;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v20);
  v72 = v18;
  swift_bridgeObjectRelease();
  v73 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71 = v14;
  swift_bridgeObjectRelease();
  v21 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v74;
  v82 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(v74 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    v24 = (__int128 *)(v22 + 56);
    do
    {
      v25 = *((_QWORD *)v24 + 4);
      v74 = *((_QWORD *)v24 - 3);
      v75 = *(v24 - 1);
      v26 = *v24;
      v27 = v24[1];
      v24 += 4;
      v76 = v26;
      v77 = v27;
      v78 = v25;
      v28 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BA67FB48(v28);
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease_n();
    v29 = v82;
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
  }
  v30 = sub_1BA6E43EC(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = v16;
  swift_bridgeObjectRelease();
  v51 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = v21;
  swift_release();
  v50 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v57;
  v32 = v56;
  v33 = v55;
  v34 = v54;
  sub_1BA6CAB7C(v57, v56);
  v35 = v58;
  swift_bridgeObjectRetain();
  v36 = v60;
  swift_bridgeObjectRetain();
  v48 = &v81;
  v37 = v63;
  v38 = sub_1BB70BB34(v30, v31, v32, v33, v34, v35, v63, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6CABAC(v31, v32);
  swift_bridgeObjectRelease();
  v39 = sub_1BA6E43EC(v38);
  swift_bridgeObjectRelease();
  v74 = v61;
  *(_QWORD *)&v75 = v70;
  *((_QWORD *)&v75 + 1) = v59;
  *(_QWORD *)&v76 = v50;
  *((_QWORD *)&v76 + 1) = v49;
  *(_QWORD *)&v77 = v71;
  *((_QWORD *)&v77 + 1) = v51;
  v78 = v52;
  v79 = v73;
  v80 = v72;
  v40 = FormatContentSubgroup.Resolved.placeholderIdentifiers.getter();
  swift_bridgeObjectRetain();
  v41 = sub_1BB70BE3C(v40, v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E43EC(v41);
  swift_bridgeObjectRelease();
  v42 = v65;
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v64, v66, v65);
  v44 = MEMORY[0x1E0C80A78](v43);
  v45 = *(_QWORD *)(v69 + 88);
  *(&v49 - 6) = v67;
  *(&v49 - 5) = v45;
  *(&v49 - 4) = v68;
  *(&v49 - 3) = v39;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3DB8], v42, v44);
  v46 = sub_1BB872C34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t FormatContentSlot.Resolved.feedItemIdentifiers.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  const char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id *v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[7];
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  const char *v112;
  const char *v113;
  char *v114;
  id *v115;
  uint64_t v117;
  uint64_t v118;

  v103 = type metadata accessor for FormatCustomItem.Resolved();
  v105 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v102 = (_QWORD *)((char *)v100 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB62C960(0);
  MEMORY[0x1E0C80A78](v2);
  v104 = (char *)v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v110 = (char *)v100 - v5;
  v6 = type metadata accessor for PuzzleStatistic();
  v108 = *(_QWORD *)(v6 - 8);
  v109 = v6;
  MEMORY[0x1E0C80A78](v6);
  v115 = (id *)((char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA8CAA04(0);
  MEMORY[0x1E0C80A78](v8);
  v106 = (uint64_t)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v107 = (uint64_t)v100 - v11;
  v111 = (char *)type metadata accessor for FormatWebEmbed.Resolved();
  v114 = (char *)*((_QWORD *)v111 - 1);
  MEMORY[0x1E0C80A78](v111);
  v13 = (_QWORD *)((char *)v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6DB154(0);
  MEMORY[0x1E0C80A78](v14);
  v113 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v112 = (char *)v100 - v17;
  v18 = v0[1];
  v19 = v0[2];
  v21 = v0[3];
  v20 = v0[4];
  v22 = v0[5];
  v23 = v0[6];
  v24 = v0[7];
  v118 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_1BB62B688(v20);
  v100[1] = v24;
  swift_bridgeObjectRelease();
  v100[2] = v23;
  swift_bridgeObjectRelease();
  v100[3] = v22;
  swift_bridgeObjectRelease();
  v100[4] = v21;
  swift_bridgeObjectRelease();
  v100[5] = v19;
  swift_bridgeObjectRelease();
  v100[6] = v18;
  swift_bridgeObjectRelease();
  v101 = v20;
  result = swift_bridgeObjectRelease_n();
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v27)
      goto LABEL_10;
  }
  else
  {
    v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v27)
      goto LABEL_10;
  }
  if (v27 < 1)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v28 = 0;
  do
  {
    if ((v25 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](v28, v25);
    else
      swift_unknownObjectRetain();
    ++v28;
    v29 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v30 = sub_1BB8729A0();
    v32 = v31;
    swift_unknownObjectRelease_n();

    sub_1BA6EE5AC(&v117, v30, v32);
    swift_bridgeObjectRelease();
  }
  while (v27 != v28);
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = sub_1BB62B97C(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v35)
      goto LABEL_19;
  }
  else
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
      goto LABEL_19;
  }
  if (v35 < 1)
  {
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v36 = 0;
  do
  {
    if ((v34 & 0xC000000000000001) != 0)
      v37 = (id)MEMORY[0x1BCCE4630](v36, v34);
    else
      v37 = *(id *)(v34 + 8 * v36 + 32);
    ++v36;
    v38 = v37;
    v39 = objc_msgSend(v38, sel_identifier);
    v40 = sub_1BB8729A0();
    v42 = v41;

    sub_1BA6EE5AC(&v117, v40, v42);
    swift_bridgeObjectRelease();
  }
  while (v35 != v36);
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = sub_1BB62BAD8(v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    v45 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v45)
      goto LABEL_28;
  }
  else
  {
    v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v45)
      goto LABEL_28;
  }
  if (v45 < 1)
    goto LABEL_72;
  v46 = 0;
  do
  {
    if ((v44 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](v46, v44);
    else
      swift_unknownObjectRetain();
    ++v46;
    v47 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v48 = sub_1BB8729A0();
    v50 = v49;
    swift_unknownObjectRelease_n();

    sub_1BA6EE5AC(&v117, v48, v50);
    swift_bridgeObjectRelease();
  }
  while (v45 != v46);
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = sub_1BB62BC34(v51);
  v100[0] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v53 = 0;
  v54 = *(_QWORD *)(v52 + 16);
  v55 = sub_1BA6DB154;
  while (1)
  {
    v56 = (uint64_t)v113;
    if (v53 == v54)
    {
      v57 = 1;
      v53 = v54;
      v58 = v114;
      v59 = v112;
    }
    else
    {
      v58 = v114;
      v59 = v112;
      if (v53 >= *(_QWORD *)(v52 + 16))
      {
        __break(1u);
        goto LABEL_44;
      }
      sub_1BA4C2DD8(v52+ ((v114[80] + 32) & ~(unint64_t)v114[80])+ *((_QWORD *)v114 + 9) * v53, (uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v57 = 0;
      ++v53;
    }
    v60 = v111;
    (*((void (**)(const char *, uint64_t, uint64_t, char *))v58 + 7))(v59, v57, 1, v111);
    sub_1BA5193C4((uint64_t)v59, v56, (uint64_t (*)(_QWORD))sub_1BA6DB154);
    if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v58 + 6))(v56, 1, v60) == 1)
      break;
    sub_1BA5193C4(v56, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    v51 = *v13;
    v61 = v13[1];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    sub_1BA6EE5AC(&v117, v51, v61);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = (void (*)(uint64_t))v100[0];
  v51 = sub_1BB62BE90(v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  if (!(v51 >> 62))
  {
    v63 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    v64 = (uint64_t)v110;
    if (!v63)
      goto LABEL_45;
    goto LABEL_37;
  }
LABEL_44:
  swift_bridgeObjectRetain();
  v63 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  v64 = (uint64_t)v110;
  if (!v63)
    goto LABEL_45;
LABEL_37:
  if (v63 < 1)
    goto LABEL_73;
  v65 = 0;
  do
  {
    if ((v51 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](v65, v51);
    else
      swift_unknownObjectRetain();
    ++v65;
    v66 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v67 = sub_1BB8729A0();
    v69 = v68;
    swift_unknownObjectRelease_n();

    sub_1BA6EE5AC(&v117, v67, v69);
    swift_bridgeObjectRelease();
  }
  while (v63 != v65);
LABEL_45:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71 = sub_1BB62BFEC(v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  if (v71 >> 62)
  {
    swift_bridgeObjectRetain();
    v72 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v72)
      goto LABEL_54;
  }
  else
  {
    v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v72)
      goto LABEL_54;
  }
  if (v72 < 1)
  {
LABEL_74:
    __break(1u);
    return result;
  }
  v73 = 0;
  do
  {
    if ((v71 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](v73, v71);
    else
      swift_unknownObjectRetain();
    ++v73;
    v74 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v75 = sub_1BB8729A0();
    v77 = v76;
    swift_unknownObjectRelease_n();

    sub_1BA6EE5AC(&v117, v75, v77);
    swift_bridgeObjectRelease();
  }
  while (v72 != v73);
LABEL_54:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v78 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v79 = sub_1BB62C148(v78);
  v100[0] = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  v80 = *(_QWORD *)(v79 + 16);
  v113 = "fastestTimeByDifficultyLevel";
  v114 = "uzzlesSolved";
  v111 = "fficultyLevel";
  v112 = "averageTimeByDifficultyLevel";
  v82 = v108;
  v81 = v109;
  v83 = v107;
  if (!v80)
  {
    v84 = 1;
    goto LABEL_58;
  }
  if (!*(_QWORD *)(v79 + 16))
  {
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  sub_1BA4C2DD8(v79 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80)), v107, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  v84 = 0;
LABEL_58:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v83, v84, 1, v81);
  v85 = v83;
  v86 = v106;
  sub_1BA5193C4(v85, v106, (uint64_t (*)(_QWORD))sub_1BA8CAA04);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v86, 1, v81) != 1)
  {
    v87 = v115;
    sub_1BA5193C4(v86, (uint64_t)v115, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    v88 = objc_msgSend(*v87, sel_identifier);
    sub_1BB8729A0();

    PuzzleStatisticCategory.statisticType.getter();
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v90 = sub_1BB62C3A4(v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  v91 = 0;
  v92 = *(_QWORD *)(v90 + 16);
  while (1)
  {
    v93 = (uint64_t)v104;
    if (v91 == v92)
    {
      v94 = 1;
      v91 = v92;
      v95 = v105;
    }
    else
    {
      v95 = v105;
      if (v91 >= *(_QWORD *)(v90 + 16))
        goto LABEL_69;
      sub_1BA4C2DD8(v90+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v91, v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
      v94 = 0;
      ++v91;
    }
    v96 = v103;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v64, v94, 1, v103);
    sub_1BA5193C4(v64, v93, (uint64_t (*)(_QWORD))sub_1BB62C960);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v93, 1, v96) == 1)
      break;
    v97 = v102;
    sub_1BA5193C4(v93, (uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
    v98 = *v97;
    v99 = v97[1];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
    sub_1BA6EE5AC(&v117, v98, v99);
    result = swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v118;
}

void sub_1BA6C5A68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2C40)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3D4450);
    v0 = sub_1BB86ED40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2C40);
  }
}

void sub_1BA6C5ACC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FormatContentSubgroup.Resolved.placeholderIdentifiers.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[10];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v38 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v49 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = v0[1];
  v4 = v0[3];
  v37[8] = v0[4];
  v37[9] = v4;
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v9 = v0[9];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v10 = sub_1BB4A4184(v8);
  v37[7] = 0;
  swift_bridgeObjectRelease();
  v50 = v7;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v50;
  v50 = MEMORY[0x1E0DEE9D8];
  v40 = *(_QWORD *)(v11 + 16);
  if (v40)
  {
    v37[1] = v9;
    v37[2] = v8;
    v37[3] = v7;
    v37[4] = v6;
    v37[5] = v5;
    v37[6] = v3;
    v39 = v11 + 32;
    v37[0] = v11;
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v13 = (_QWORD *)(v39 + (v12 << 6));
      v14 = v13[4];
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v47 = v12;
        v16 = v13[1];
        v17 = v13[2];
        v18 = v13[3];
        v20 = v13[5];
        v19 = v13[6];
        v48 = v13[7];
        v21 = v38;
        v22 = v14 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
        v45 = v16;
        swift_bridgeObjectRetain();
        v44 = v17;
        swift_bridgeObjectRetain();
        v43 = v18;
        v23 = (uint64_t)v49;
        swift_bridgeObjectRetain();
        v46 = v14;
        swift_bridgeObjectRetain_n();
        v42 = v20;
        swift_bridgeObjectRetain();
        v41 = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24 = *(_QWORD *)(v21 + 72);
        v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          sub_1BA4C2DD8(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() <= 7)
          {
            sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          else
          {
            v26 = v1;
            v28 = *(_QWORD *)v23;
            v27 = *(_QWORD *)(v23 + 8);
            v29 = *(_BYTE *)(v23 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v25 = sub_1BB38F5F4(0, v25[2] + 1, 1, v25);
            v31 = v25[2];
            v30 = v25[3];
            if (v31 >= v30 >> 1)
              v25 = sub_1BB38F5F4((_QWORD *)(v30 > 1), v31 + 1, 1, v25);
            v25[2] = v31 + 1;
            v32 = &v25[3 * v31];
            v32[4] = v28;
            v32[5] = v27;
            *((_BYTE *)v32 + 48) = v29;
            v1 = v26;
            v23 = (uint64_t)v49;
          }
          v22 += v24;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v12 = v47;
      }
      else
      {
        v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      ++v12;
      sub_1BA6C5F88((uint64_t)v25);
    }
    while (v12 != v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v33 = v50;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
  }
  v34 = sub_1BB2E81BC(v33);
  swift_bridgeObjectRelease();
  v35 = sub_1BA6E43EC(v34);
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1BA6C5F88(uint64_t a1)
{
  return sub_1BA72B228(a1, &qword_1ED3AC608, (uint64_t)&type metadata for FormatPlaceholder);
}

uint64_t sub_1BA6C5F9C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  char v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  void *v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  _WORD *v119;
  char *v120;
  uint64_t v121;
  void *v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  id v128;
  id v129;
  char v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(_QWORD);
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  _QWORD *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  _WORD *v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  __int128 v200;
  char v201;
  uint64_t v202;
  char v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v191 = a6;
  v183 = a4;
  v184 = a3;
  v197 = a1;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v12);
  v166 = (uint64_t)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1BB86C67C();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v164 = (char *)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6DB154(0);
  MEMORY[0x1E0C80A78](v15);
  v186 = (uint64_t)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for FormatWebEmbed.Resolved();
  v185 = *(_QWORD *)(v187 - 8);
  MEMORY[0x1E0C80A78](v187);
  v165 = (uint64_t *)((char *)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v181 = (char *)&v158 - v19;
  v159 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v159);
  v180 = (uint64_t)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v158 = (uint64_t)&v158 - v22;
  MEMORY[0x1E0C80A78](v23);
  v182 = (_WORD *)((char *)&v158 - v24);
  v25 = *(_QWORD *)(v6 + 80);
  v192 = v6;
  v26 = *(_QWORD *)(v6 + 96);
  v189 = v25;
  v190 = v26;
  v27 = sub_1BB86F778();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6F08], v27);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6EF8], v27);
  v28 = sub_1BB86E38C();
  v29 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3DB8], v28);
  v176 = sub_1BB873CD8();
  v175 = *(_QWORD *)(v176 - 8);
  MEMORY[0x1E0C80A78](v176);
  v172 = (char *)&v158 - v30;
  sub_1BA7C2AA0(255);
  v178 = v28;
  v168 = v29;
  v31 = sub_1BB873E1C();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC858], v31);
  v174 = v31;
  v32 = sub_1BB873F18();
  v33 = type metadata accessor for FeedHeadline(255);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECCA8], v32);
  v171 = v32;
  v179 = v33;
  v173 = sub_1BB873E1C();
  v170 = *(_QWORD *)(v173 - 8);
  MEMORY[0x1E0C80A78](v173);
  v169 = (char *)&v158 - v34;
  MEMORY[0x1E0C80A78](v35);
  v161 = (uint64_t)&v158 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v177 = (uint64_t)&v158 - v38;
  MEMORY[0x1E0C80A78](v39);
  v188 = (uint64_t)&v158 - v40;
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v158 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1BB871E24();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v160 = (char *)&v158 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *(_QWORD *)(a2 + 40);
  v48 = *a5;
  v49 = a5[1];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D70, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v51 = v50;
  v198 = type metadata accessor for FeedGroupItem();
  v52 = *(_QWORD *)(v198 - 8);
  v53 = *(_QWORD *)(v52 + 72);
  v54 = *(unsigned __int8 *)(v52 + 80);
  v55 = (v54 + 32) & ~v54;
  v194 = v51;
  v196 = v55 + v53;
  v199 = v54 | 7;
  v56 = swift_allocObject();
  v200 = xmmword_1BB87CE70;
  *(_OWORD *)(v56 + 16) = xmmword_1BB87CE70;
  v193 = v55;
  v57 = (_QWORD *)(v56 + v55);
  v195 = type metadata accessor for FormatContent.Resolved();
  v58 = *(_QWORD *)(v197 + *(int *)(v195 + 36));
  v167 = v11;
  if (v48)
  {
    swift_bridgeObjectRetain();
    v59 = v48;
  }
  else
  {
    v59 = MEMORY[0x1E0DEE9D8];
  }
  v202 = v58;
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v59);
  v60 = v202;
  if (v48)
    swift_bridgeObjectRetain();
  else
    v49 = MEMORY[0x1E0DEE9D8];
  v202 = v47;
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v49);
  v61 = v202;
  *v57 = v60;
  v57[1] = v61;
  swift_storeEnumTagMultiPayload();
  v62 = v183;
  swift_bridgeObjectRetain();
  v63 = sub_1BA6CAB68(v56, v62);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v208 = v63;
  v64 = (int *)v195;
  v65 = v197;
  sub_1BA4C2DD8(v197 + *(int *)(v195 + 72), (uint64_t)v43, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
  {
    sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))sub_1BA6D940C);
    v66 = v193;
  }
  else
  {
    v67 = v160;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v160, v43, v44);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v200;
    v69 = v193;
    v70 = (uint64_t *)(v68 + v193);
    v71 = sub_1BB871DAC();
    v73 = v72;
    v74 = type metadata accessor for FeedSponsorshipBannerAd();
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v70 + *(int *)(v74 + 20), v67, v44);
    *v70 = v71;
    v70[1] = v73;
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v68);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v75 = v67;
    v65 = v197;
    v76 = v44;
    v66 = v69;
    v64 = (int *)v195;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v75, v76);
  }
  v77 = *(_QWORD *)(v65 + v64[11]);
  if (v77)
  {
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v200;
    v79 = *(void **)(v65 + v64[15]);
    v80 = v78 + v66;
    v81 = *(_BYTE *)(v65 + v64[16]);
    *(_QWORD *)v80 = v77;
    *(_QWORD *)(v80 + 8) = v79;
    *(_BYTE *)(v80 + 16) = v81;
    swift_storeEnumTagMultiPayload();
    v82 = v79;
    swift_unknownObjectRetain();
    sub_1BA6D1168(v78);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  v83 = v184;
  if (v184)
  {
    v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = v200;
    *(_QWORD *)(v84 + v66) = v83;
    swift_storeEnumTagMultiPayload();
    v85 = v83;
    sub_1BA6D1168(v84);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v86 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (v86)
    {
      v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v200;
      v88 = v87 + v66;
      v89 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      v90 = sub_1BB8729A0();
      v92 = v91;

      *(_QWORD *)v88 = v90;
      *(_QWORD *)(v88 + 8) = v92;
      *(_QWORD *)(v88 + 16) = v86;
      *(_QWORD *)(v88 + 24) = 0;
      *(_BYTE *)(v88 + 32) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BA6D1168(v87);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
    }

    v64 = (int *)v195;
  }
  v93 = *(void **)(v65 + v64[12]);
  if (v93)
  {
    v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v200;
    v95 = v94 + v66;
    v96 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
    v97 = v93;
    v98 = objc_msgSend(v96, sel_init);
    sub_1BA90E6D0(v97, v189, *(_QWORD *)(v192 + 88), v190, &v202);
    v99 = v202;
    v100 = v97;
    v101 = objc_msgSend(v100, sel_identifier);
    v102 = sub_1BB8729A0();
    v104 = v103;

    LOBYTE(v204) = 0;
    *(_QWORD *)v95 = v100;
    *(_QWORD *)(v95 + 8) = v102;
    *(_QWORD *)(v95 + 16) = v104;
    *(_WORD *)(v95 + 24) = 0;
    *(_QWORD *)(v95 + 32) = 0;
    *(_BYTE *)(v95 + 40) = 0;
    *(_QWORD *)(v95 + 48) = 1;
    *(_QWORD *)(v95 + 56) = v98;
    *(_BYTE *)(v95 + 64) = 0;
    *(_OWORD *)(v95 + 72) = xmmword_1BB87FC90;
    *(_OWORD *)(v95 + 88) = 0u;
    *(_OWORD *)(v95 + 104) = 0u;
    *(_QWORD *)(v95 + 120) = 0;
    *(_QWORD *)(v95 + 128) = 5;
    *(_BYTE *)(v95 + 136) = v99;
    v65 = v197;
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v94);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();

    v105 = (int *)v187;
  }
  else
  {
    v122 = *(void **)(v65 + v64[13]);
    v105 = (int *)v187;
    if (v122)
    {
      if ((objc_msgSend(*(id *)(v65 + v64[13]), sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
      {
        v123 = objc_msgSend(v122, sel_parentIssue);
        if (v123)
        {
          v124 = v123;
          v125 = swift_allocObject();
          *(_OWORD *)(v125 + 16) = v200;
          v126 = v125 + v193;
          v127 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
          v128 = v124;
          v129 = objc_msgSend(v127, sel_init);
          sub_1BA90E6D0(v128, v189, *(_QWORD *)(v192 + 88), v190, &v202);
          v130 = v202;
          v131 = v128;
          v132 = objc_msgSend(v131, sel_identifier);
          v133 = sub_1BB8729A0();
          v135 = v134;

          LOBYTE(v204) = 0;
          *(_QWORD *)v126 = v131;
          *(_QWORD *)(v126 + 8) = v133;
          *(_QWORD *)(v126 + 16) = v135;
          *(_WORD *)(v126 + 24) = 0;
          *(_QWORD *)(v126 + 32) = 0;
          *(_BYTE *)(v126 + 40) = 0;
          *(_QWORD *)(v126 + 48) = 1;
          *(_QWORD *)(v126 + 56) = v129;
          v105 = (int *)v187;
          *(_BYTE *)(v126 + 64) = 0;
          *(_OWORD *)(v126 + 72) = xmmword_1BB87FC90;
          *(_OWORD *)(v126 + 88) = 0u;
          *(_OWORD *)(v126 + 104) = 0u;
          *(_QWORD *)(v126 + 120) = 0;
          *(_QWORD *)(v126 + 128) = 5;
          *(_BYTE *)(v126 + 136) = v130;
          v65 = v197;
          swift_storeEnumTagMultiPayload();
          sub_1BA6D1168(v125);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();

        }
      }
    }
  }
  v106 = *(void **)(v65 + v64[13]);
  if (v106)
  {
    swift_unknownObjectRetain();
    v107 = v172;
    v108 = v178;
    sub_1BB872C04();
    v109 = (_QWORD *)swift_allocObject();
    v110 = *(_QWORD *)(v192 + 88);
    v109[2] = v189;
    v109[3] = v110;
    v109[4] = v190;
    v109[5] = v106;
    swift_unknownObjectRetain();
    v111 = v176;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC330], v176);
    v112 = v169;
    v113 = v179;
    sub_1BB873FC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v175 + 8))(v107, v111);
    v207 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3DC0], v108);
    v114 = MEMORY[0x1E0DEC860];
    v206 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC860], v174, &v207);
    v205 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECCB0], v171, &v206);
    v115 = v173;
    MEMORY[0x1BCCE5B24](v114, v173, &v205);
    v116 = v188;
    sub_1BB873144();
    (*(void (**)(char *, uint64_t))(v170 + 8))(v112, v115);
    v117 = v177;
    sub_1BA4C2DD8(v116, v177, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v117, 1, v113) == 1)
    {
      sub_1BA4A2E80(v117, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
      v118 = (int *)v159;
      v119 = v182;
      v120 = (char *)v182 + *(int *)(v159 + 24);
      v121 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v120, 1, 1, v121);
      *v119 = 258;
      *((_BYTE *)v119 + v118[7]) = 1;
      *((_BYTE *)v119 + v118[8]) = 0;
      *((_BYTE *)v119 + v118[9]) = 0;
      *((_BYTE *)v119 + v118[10]) = 0;
    }
    else
    {
      v136 = v158;
      sub_1BA4C2DD8(v117 + *(int *)(v113 + 40), v158, type metadata accessor for FeedHeadline.State);
      sub_1BA4A2E80(v117, type metadata accessor for FeedHeadline);
      v119 = v182;
      sub_1BA5193C4(v136, (uint64_t)v182, type metadata accessor for FeedHeadline.State);
    }
    v137 = swift_allocObject();
    *(_OWORD *)(v137 + 16) = v200;
    v138 = v137 + v193;
    v139 = sub_1BB871B24();
    v140 = (uint64_t)v181;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v181, 1, 1, v139);
    v141 = v180;
    sub_1BA4C2DD8((uint64_t)v119, v180, type metadata accessor for FeedHeadline.State);
    v204 = 0;
    v202 = 0;
    v203 = 1;
    v201 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v106, 0, &v201, v140, v141, &v204, v138, (uint64_t)&v202);
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v137);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    sub_1BA4A2E80((uint64_t)v119, type metadata accessor for FeedHeadline.State);
    sub_1BA4A2E80(v188, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    v64 = (int *)v195;
  }
  v142 = v186;
  sub_1BA4C2DD8(v65 + v64[14], v186, (uint64_t (*)(_QWORD))sub_1BA6DB154);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v185 + 48))(v142, 1, v105) == 1)
  {
    v143 = (uint64_t (*)(_QWORD))sub_1BA6DB154;
    v144 = v142;
  }
  else
  {
    v145 = v165;
    sub_1BA5193C4(v142, (uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    v146 = swift_allocObject();
    *(_OWORD *)(v146 + 16) = v200;
    v199 = v146 + v193;
    v147 = v145[1];
    *(_QWORD *)&v200 = *v145;
    v197 = v147;
    v148 = (char *)v145 + v105[5];
    v149 = (int *)type metadata accessor for FormatWebEmbed();
    v150 = (uint64_t)v164;
    (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v164, &v148[v149[5]], v163);
    v151 = v166;
    sub_1BA4C2DD8((uint64_t)&v148[v149[6]], v166, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v152 = *(_QWORD *)((char *)v145 + v105[6]);
    v153 = *(_QWORD *)((char *)v145 + v105[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v154 = v161;
    sub_1BA90EC18((uint64_t)v145, v161);
    v155 = (uint64_t)v145 + v105[8];
    v156 = (uint64_t)v167;
    sub_1BA4C2DD8(v155, (uint64_t)v167, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v200, v197, v150, v151, v152, v153, v154, v156, v199, v148[v149[10]] & 1);
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v146);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v144 = (uint64_t)v145;
    v143 = (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved;
  }
  sub_1BA4A2E80(v144, v143);
  return v208;
}

uint64_t FormatFeedGroup.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatFeedGroup();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
}

uint64_t FormatFeedGroup.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FormatFeedGroup()
{
  uint64_t result;

  result = qword_1ED3BC2B0;
  if (!qword_1ED3BC2B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6C72A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[7];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v57 = a1;
  v3 = type metadata accessor for FormatContentSlotItemResolution();
  v40 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - v13;
  v47 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v47);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v37[6] = (char *)v37 - v18;
  MEMORY[0x1E0C80A78](v19);
  v41 = (char *)v37 - v20;
  v59 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v21 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v58 = (char *)v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v37 - v24;
  MEMORY[0x1E0C80A78](v26);
  v56 = (char *)v37 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v37 - v29;
  MEMORY[0x1E0C80A78](v31);
  v60 = (uint64_t)v37 - v32;
  result = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(result + 16))
  {
    v34 = *(_QWORD *)(a2 + 56);
    v49 = result + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v53 = result;
    result = swift_bridgeObjectRetain();
    v37[4] = "uzzlesSolved";
    v37[3] = "fastestTimeByDifficultyLevel";
    v37[2] = "averageTimeByDifficultyLevel";
    v37[1] = "fficultyLevel";
    v54 = v5;
    v44 = v16;
    v45 = v11;
    v48 = v30;
    v43 = v14;
    v50 = v34;
    v51 = v21;
    v46 = v25;
    if (*(_QWORD *)(v53 + 16))
    {
      v55 = 1;
      v35 = v60;
      sub_1BA4C2DD8(v49, v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      sub_1BA4C2DD8(v35, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v36 = (char *)&loc_1BA6C7650 + *((int *)qword_1BB144C98 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    __break(1u);
  }
  return result;
}

void FormatContentSlotItemObject.Resolved.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BA6C7F44 + dword_1BB60AD34[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6C7F54()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_1BB8729A0();
  swift_unknownObjectRelease();

  return v2;
}

uint64_t type metadata accessor for FormatCustomItem.Resolved()
{
  uint64_t result;

  result = qword_1ED3C1190;
  if (!qword_1ED3C1190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for PuzzleStatistic()
{
  uint64_t result;

  result = qword_1ED3C4180;
  if (!qword_1ED3C4180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6C8150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatContentSlotItemObject.Resolved()
{
  uint64_t result;

  result = qword_1ED3C28C0;
  if (!qword_1ED3C28C0)
    return swift_getSingletonMetadata();
  return result;
}

void _s8ResolvedOwcp()
{
  char *v0;

  v0 = (char *)sub_1BA6C8224 + 4 * byte_1BB93390C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BA6C8224(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__dst, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  _QWORD *v29;

  *v29 = *v28;
  swift_unknownObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v29;
}

uint64_t _s8ResolvedVwxx_2(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v6 = a1 + a2[14];
  v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    v9 = type metadata accessor for FormatWebEmbed();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v13(v10, v11);
    v14 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
      v13(v14, v11);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v15 = v6 + v7[8];
    v16 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for GenericDataVisualization();
        v13(v15 + *(int *)(v17 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v18 = v6 + v7[9];
    sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  }

  swift_bridgeObjectRelease();
  v22 = a1 + a2[18];
  v23 = sub_1BB871E24();
  v24 = *(_QWORD *)(v23 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  return result;
}

_QWORD *_s8ResolvedVwcp_2(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unsigned int (*v53)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v54;
  uint64_t v55;
  int *v56;
  _QWORD *v57;
  _QWORD *v58;
  int EnumCaseMultiPayload;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  _QWORD *v91;
  int *v92;
  _QWORD *v93;
  _QWORD *v94;
  unsigned int (*v95)(_QWORD *, uint64_t, uint64_t);
  char *v96;
  _QWORD *v97;
  _QWORD *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v14 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v15 = a3[12];
  v16 = a3[13];
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v92 = a3;
  v94 = a1;
  v18 = a3[14];
  __dst = (_QWORD *)((char *)a1 + v18);
  v91 = a2;
  v19 = (_QWORD *)((char *)a2 + v18);
  v20 = type metadata accessor for FormatWebEmbed.Resolved();
  v21 = *(_QWORD *)(v20 - 8);
  v95 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v22 = v17;
  swift_unknownObjectRetain();
  if (v95(v19, 1, v20))
  {
    sub_1BA6DB154(0);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v24 = v92;
    v25 = v94;
    v26 = v91;
  }
  else
  {
    v89 = v21;
    v90 = (int *)v20;
    v27 = v19[1];
    *__dst = *v19;
    __dst[1] = v27;
    v28 = *(int *)(v20 + 20);
    v29 = (_QWORD *)((char *)__dst + v28);
    v97 = v19;
    v30 = (char *)v19 + v28;
    v31 = *(_QWORD *)((char *)v19 + v28 + 8);
    *v29 = *(_QWORD *)((char *)v19 + v28);
    v29[1] = v31;
    v32 = (int *)type metadata accessor for FormatWebEmbed();
    v33 = v32[5];
    v34 = (char *)v29 + v33;
    v96 = &v30[v33];
    v35 = sub_1BB86C67C();
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v34, v96, v35);
    v38 = v32[6];
    v39 = (char *)v29 + v38;
    v40 = &v30[v38];
    v86 = v37;
    v87 = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v30[v38], 1, v35))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v37(v39, v40, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
    }
    v24 = v92;
    *(_QWORD *)((char *)v29 + v32[7]) = *(_QWORD *)&v30[v32[7]];
    v42 = v32[8];
    v43 = (_QWORD *)((char *)v29 + v42);
    v44 = &v30[v42];
    v45 = *((_QWORD *)v44 + 1);
    *v43 = *(_QWORD *)v44;
    v43[1] = v45;
    v46 = v32[9];
    v47 = (_QWORD *)((char *)v29 + v46);
    v48 = &v30[v46];
    v49 = *((_QWORD *)v48 + 1);
    *v47 = *(_QWORD *)v48;
    v47[1] = v49;
    *(_QWORD *)((char *)v29 + v32[10]) = *(_QWORD *)&v30[v32[10]];
    *(_QWORD *)((char *)v29 + v32[11]) = *(_QWORD *)&v30[v32[11]];
    *(_QWORD *)((char *)v29 + v32[12]) = *(_QWORD *)&v30[v32[12]];
    *(_QWORD *)((char *)__dst + v90[6]) = *(_QWORD *)((char *)v19 + v90[6]);
    *(_QWORD *)((char *)__dst + v90[7]) = *(_QWORD *)((char *)v19 + v90[7]);
    v50 = v90[8];
    v93 = (_QWORD *)((char *)__dst + v50);
    v51 = (_QWORD *)((char *)v19 + v50);
    v52 = type metadata accessor for WebEmbedDataVisualization();
    v88 = *(_QWORD *)(v52 - 8);
    v53 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v88 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    v54 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v53(v51, 1, v52))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v93, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      v56 = v90;
      v57 = v97;
      v58 = __dst;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v60 = *v51;
      v56 = v90;
      v58 = __dst;
      v61 = v88;
      if (EnumCaseMultiPayload == 1)
      {
        v62 = v54[1];
        *v93 = v60;
        v93[1] = v62;
        v63 = type metadata accessor for GenericDataVisualization();
        v64 = *(int *)(v63 + 20);
        v65 = (char *)v93 + v64;
        v66 = (char *)v54 + v64;
        v61 = v88;
        swift_bridgeObjectRetain();
        v86(v65, v66, v87);
        *(_QWORD *)((char *)v93 + *(int *)(v63 + 24)) = *(_QWORD *)((char *)v54 + *(int *)(v63 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *v93 = v60;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v93, 0, 1, v52);
      v57 = v97;
    }
    v67 = v56[9];
    v68 = (char *)v58 + v67;
    v69 = (char *)v57 + v67;
    sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v71 = v70;
    v72 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v69, 1, v70))
    {
      sub_1BA6C5ACC(0);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v68, v69, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v68, 0, 1, v71);
    }
    v25 = v94;
    v26 = v91;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v89 + 56))(v58, 0, 1, v56);
  }
  v74 = v24[15];
  v75 = v24[16];
  v76 = *(void **)((char *)v26 + v74);
  *(_QWORD *)((char *)v25 + v74) = v76;
  *((_BYTE *)v25 + v75) = *((_BYTE *)v26 + v75);
  v77 = v24[18];
  *(_QWORD *)((char *)v25 + v24[17]) = *(_QWORD *)((char *)v26 + v24[17]);
  v78 = (char *)v25 + v77;
  v79 = (char *)v26 + v77;
  v80 = sub_1BB871E24();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
  v83 = v76;
  swift_bridgeObjectRetain();
  if (v82(v79, 1, v80))
  {
    sub_1BA6D940C(0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  return v25;
}

uint64_t destroy for FormatFeedGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);

  v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v3 = (int *)type metadata accessor for FormatContent.Resolved();
  v4 = v2 + v3[5];
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v6 = v2 + v3[14];
  v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    v9 = type metadata accessor for FormatWebEmbed();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v10, v11);
    v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11))
      v25(v13, v11);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v14 = v6 + v7[8];
    v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for GenericDataVisualization();
        v25(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v17 = v6 + v7[9];
    sub_1BA6C5A68();
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }

  swift_bridgeObjectRelease();
  v21 = v2 + v3[18];
  v22 = sub_1BB871E24();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for FormatFeedGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  int *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  int EnumCaseMultiPayload;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  _QWORD *__dst;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  int *v113;
  unsigned int (*v117)(char *, uint64_t, int *);
  _QWORD *v118;
  void *v119;
  char *v120;
  int *v121;
  _QWORD *v122;

  *a1 = *a2;
  v3 = a3[5];
  v4 = (_QWORD *)((char *)a1 + v3);
  v5 = (char *)a2 + v3;
  v6 = *(_QWORD *)((char *)a2 + v3 + 8);
  *v4 = *(_QWORD *)((char *)a2 + v3);
  v4[1] = v6;
  v7 = (int *)type metadata accessor for FormatContent.Resolved();
  v8 = v7[5];
  v9 = (char *)v4 + v8;
  v10 = &v5[v8];
  v11 = sub_1BB86C8B0();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(_QWORD *)((char *)v4 + v7[6]) = *(_QWORD *)&v5[v7[6]];
  *(_QWORD *)((char *)v4 + v7[7]) = *(_QWORD *)&v5[v7[7]];
  *(_QWORD *)((char *)v4 + v7[8]) = *(_QWORD *)&v5[v7[8]];
  *(_QWORD *)((char *)v4 + v7[9]) = *(_QWORD *)&v5[v7[9]];
  *(_QWORD *)((char *)v4 + v7[10]) = *(_QWORD *)&v5[v7[10]];
  *(_QWORD *)((char *)v4 + v7[11]) = *(_QWORD *)&v5[v7[11]];
  v13 = v7[12];
  v119 = *(void **)&v5[v13];
  *(_QWORD *)((char *)v4 + v13) = v119;
  *(_QWORD *)((char *)v4 + v7[13]) = *(_QWORD *)&v5[v7[13]];
  v113 = v7;
  v14 = v7[14];
  v110 = v4;
  v122 = (_QWORD *)((char *)v4 + v14);
  v112 = v5;
  v15 = &v5[v14];
  v16 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v17 = *((_QWORD *)v16 - 1);
  v117 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v18 = v119;
  swift_unknownObjectRetain();
  if (v117(v15, 1, v16))
  {
    sub_1BA4A3FB4(0, &qword_1ED3D54C0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
    memcpy(v122, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    v21 = a2;
    v20 = a1;
    v22 = v113;
    v23 = a3;
    v24 = v110;
    v25 = v112;
  }
  else
  {
    v109 = v17;
    v26 = *((_QWORD *)v15 + 1);
    *v122 = *(_QWORD *)v15;
    v122[1] = v26;
    v27 = v16[5];
    v28 = (_QWORD *)((char *)v122 + v27);
    v118 = v15;
    v29 = &v15[v27];
    v30 = *(_QWORD *)&v15[v27 + 8];
    *v28 = *(_QWORD *)&v15[v27];
    v28[1] = v30;
    v31 = (int *)type metadata accessor for FormatWebEmbed();
    v32 = v31[5];
    v120 = (char *)v28 + v32;
    v106 = &v29[v32];
    v33 = sub_1BB86C67C();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35(v120, v106, v33);
    v36 = v31[6];
    v37 = (char *)v28 + v36;
    v38 = &v29[v36];
    v103 = (void (*)(char *, uint64_t, uint64_t))v35;
    v104 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(&v29[v36], 1, v33))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v35(v37, v38, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
    }
    v24 = v110;
    *(_QWORD *)((char *)v28 + v31[7]) = *(_QWORD *)&v29[v31[7]];
    v40 = v31[8];
    v41 = (_QWORD *)((char *)v28 + v40);
    v42 = &v29[v40];
    v107 = *((_QWORD *)v42 + 1);
    *v41 = *(_QWORD *)v42;
    v41[1] = v107;
    v43 = v31[9];
    v44 = (_QWORD *)((char *)v28 + v43);
    v45 = &v29[v43];
    v46 = *((_QWORD *)v45 + 1);
    *v44 = *(_QWORD *)v45;
    v44[1] = v46;
    *(_QWORD *)((char *)v28 + v31[10]) = *(_QWORD *)&v29[v31[10]];
    *(_QWORD *)((char *)v28 + v31[11]) = *(_QWORD *)&v29[v31[11]];
    *(_QWORD *)((char *)v28 + v31[12]) = *(_QWORD *)&v29[v31[12]];
    *(_QWORD *)((char *)v122 + v16[6]) = *(_QWORD *)((char *)v118 + v16[6]);
    *(_QWORD *)((char *)v122 + v16[7]) = *(_QWORD *)((char *)v118 + v16[7]);
    v121 = v16;
    v47 = v16[8];
    __dst = (_QWORD *)((char *)v122 + v47);
    v48 = (_QWORD *)((char *)v118 + v47);
    v49 = type metadata accessor for WebEmbedDataVisualization();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v50 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    v52 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v51(v48, 1, v49))
    {
      sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      v22 = v113;
      v23 = a3;
      v25 = v112;
      v54 = v122;
      v55 = v118;
    }
    else
    {
      v111 = v50;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v57 = *v48;
      v22 = v113;
      v23 = a3;
      v54 = v122;
      v55 = v118;
      if (EnumCaseMultiPayload == 1)
      {
        v108 = v49;
        v58 = v52[1];
        *__dst = v57;
        __dst[1] = v58;
        v59 = v52;
        v60 = type metadata accessor for GenericDataVisualization();
        v61 = *(int *)(v60 + 20);
        v62 = (char *)__dst + v61;
        v102 = (uint64_t)v59 + v61;
        v49 = v108;
        swift_bridgeObjectRetain();
        v103(v62, v102, v104);
        *(_QWORD *)((char *)__dst + *(int *)(v60 + 24)) = *(_QWORD *)((char *)v59 + *(int *)(v60 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *__dst = v57;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v111 + 56))(__dst, 0, 1, v49);
      v25 = v112;
    }
    v63 = v121[9];
    v64 = (char *)v54 + v63;
    v65 = (char *)v55 + v63;
    sub_1BA6C5A68();
    v67 = v66;
    v68 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v66))
    {
      sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v65, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v64, 0, 1, v67);
    }
    v21 = a2;
    v20 = a1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v109 + 56))(v54, 0, 1, v121);
  }
  v70 = v22[15];
  v71 = *(void **)&v25[v70];
  *(_QWORD *)((char *)v24 + v70) = v71;
  *((_BYTE *)v24 + v22[16]) = v25[v22[16]];
  *(_QWORD *)((char *)v24 + v22[17]) = *(_QWORD *)&v25[v22[17]];
  v72 = v22[18];
  v73 = (char *)v24 + v72;
  v74 = &v25[v72];
  v75 = sub_1BB871E24();
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  v78 = v71;
  swift_bridgeObjectRetain();
  if (v77(v74, 1, v75))
  {
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  v80 = v23[6];
  v81 = v23[7];
  v82 = (_QWORD *)((char *)v20 + v80);
  v83 = (_QWORD *)((char *)v21 + v80);
  v84 = v83[1];
  *v82 = *v83;
  v82[1] = v84;
  *((_BYTE *)v20 + v81) = *((_BYTE *)v21 + v81);
  v85 = v23[9];
  *((_BYTE *)v20 + v23[8]) = *((_BYTE *)v21 + v23[8]);
  *(_QWORD *)((char *)v20 + v85) = *(_QWORD *)((char *)v21 + v85);
  v86 = v23[11];
  *(_QWORD *)((char *)v20 + v23[10]) = *(_QWORD *)((char *)v21 + v23[10]);
  *(_QWORD *)((char *)v20 + v86) = *(_QWORD *)((char *)v21 + v86);
  v87 = v23[12];
  v88 = v23[13];
  v89 = (char *)v20 + v87;
  v90 = (char *)v21 + v87;
  *(_QWORD *)v89 = *(_QWORD *)v90;
  v89[8] = v90[8];
  v91 = (char *)v20 + v88;
  v92 = (char *)v21 + v88;
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v91[8] = v92[8];
  v93 = v23[14];
  v94 = v23[15];
  v95 = (char *)v20 + v93;
  v96 = (char *)v21 + v93;
  *(_QWORD *)v95 = *(_QWORD *)v96;
  v95[8] = v96[8];
  v97 = (char *)v20 + v94;
  v98 = (char *)v21 + v94;
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v97[8] = v98[8];
  v99 = v23[17];
  *((_BYTE *)v20 + v23[16]) = *((_BYTE *)v21 + v23[16]);
  *(_QWORD *)((char *)v20 + v99) = *(_QWORD *)((char *)v21 + v99);
  v100 = v23[19];
  *(_QWORD *)((char *)v20 + v23[18]) = *(_QWORD *)((char *)v21 + v23[18]);
  *(_QWORD *)((char *)v20 + v100) = *(_QWORD *)((char *)v21 + v100);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v20;
}

uint64_t type metadata accessor for FormatWebEmbed.Resolved()
{
  uint64_t result;

  result = qword_1ED3D2D28;
  if (!qword_1ED3D2D28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s8ResolvedVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BA6CA500(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BB872EE0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void _s8ResolvedOwxx(id *a1)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      return;
    case 1u:

      return;
    case 3u:
      swift_bridgeObjectRelease();
      v2 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      v3 = (char *)a1 + v2[5];
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FormatWebEmbed();
      v5 = &v3[*(int *)(v4 + 20)];
      v6 = sub_1BB86C67C();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, uint64_t))(v7 + 8);
      v8(v5, v6);
      v9 = &v3[*(int *)(v4 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
        v8(v9, v6);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v10 = (char *)a1 + v2[8];
      v11 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v12 = type metadata accessor for GenericDataVisualization();
          v8(&v10[*(int *)(v12 + 20)], v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      v38 = (char *)a1 + v2[9];
      sub_1BA625DB0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
      v40 = v39;
      v41 = *(_QWORD *)(v39 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v39))
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
      return;
    case 6u:
      swift_unknownObjectRelease();
      v13 = (char *)a1 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_23;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v18 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v13, 1, v18))
            {
              v19 = sub_1BB86BEC0();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v13, v19);
            }
          }
          v20 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v21 = &v13[*(int *)(v20 + 20)];
          v22 = swift_getEnumCaseMultiPayload();
          if (v22 == 5 || v22 == 4)
          {
            v23 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
            {
              v24 = sub_1BB86BEC0();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v21, v24);
            }
          }
          v13 += *(int *)(v20 + 24);
LABEL_23:
          v25 = swift_getEnumCaseMultiPayload();
          if (v25 == 5 || v25 == 4)
          {
            v26 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v13, 1, v26))goto LABEL_34;
          }
          return;
        case 2u:
          v27 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v13, 1, v27))
            return;
          v28 = sub_1BB86C8B0();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v13, v28);
          v29 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v30 = &v13[*(int *)(v29 + 24)];
          swift_bridgeObjectRelease();
          v31 = *((_QWORD *)v30 + 3);
          if (v31 >> 60 != 15)
            sub_1BA69D314(*((_QWORD *)v30 + 2), v31);
          goto LABEL_13;
        case 3u:
          v32 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v33 = &v13[*(int *)(v32 + 24)];
          v34 = type metadata accessor for PuzzleStreak();
          v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48);
          if (!v35(v33, 1, v34))
          {
            v36 = sub_1BB86BEC0();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v33, v36);
          }
          v13 += *(int *)(v32 + 28);
          if (!v35(v13, 1, v34))
          {
LABEL_34:
            v37 = sub_1BB86BEC0();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v13, v37);
          }
          return;
        default:
          return;
      }
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (char *)a1 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v15 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v16 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
      }
      goto LABEL_13;
    case 8u:
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for FormatContentSlotItemResolution()
{
  uint64_t result;

  result = qword_1ED3BFCC0;
  if (!qword_1ED3BFCC0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA6CAB30(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1ED3B1AB0, (uint64_t (*)(uint64_t))sub_1BA83B36C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA6CAB4C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA6CAB68(uint64_t a1, uint64_t a2)
{
  return sub_1BA90DEB4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem, (void (*)(char *, char *))sub_1BA6CD578);
}

uint64_t sub_1BA6CAB7C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA6CABAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupDebug()
{
  return objc_opt_self();
}

void _s8NewsFeed0B9GroupItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_1BA6D06C0();
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 + *(int *)(v6 + 48) - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  sub_1BA4C2DD8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  type metadata accessor for FeedGroupItem();
  v8 = (char *)sub_1BA6CACB0 + 4 * byte_1BB8D9C9D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BA6CACB0()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 v2;

  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  v2 = swift_getEnumCaseMultiPayload() == 0;
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return v2;
}

uint64_t sub_1BA6CAEAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  _BYTE v24[40];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _QWORD *v36;
  int64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v29 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1E0C80A78](v29);
  v35 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v28);
  v34 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v27);
  v33 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v26);
  v32 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v25);
  v31 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for FeedGroupItem();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v38 = &v24[-v11];
  v12 = *(_QWORD *)(a1 + 56);
  v36 = (_QWORD *)(a1 + 56);
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v37 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9E0];
  v41 = a1;
  v30 = v9;
  if (v15)
  {
    v17 = __clz(__rbit64(v15));
    goto LABEL_18;
  }
  if (v37 > 1)
  {
    v18 = v36[1];
    v19 = 1;
    if (v18)
      goto LABEL_17;
    v19 = 2;
    if (v37 <= 2)
      goto LABEL_19;
    v18 = v36[2];
    if (v18)
      goto LABEL_17;
    v19 = 3;
    if (v37 <= 3)
      goto LABEL_19;
    v18 = v36[3];
    if (v18)
    {
LABEL_17:
      v17 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_18:
      v21 = v38;
      sub_1BA4C2DD8(*(_QWORD *)(v41 + 48) + *(_QWORD *)(v39 + 72) * v17, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
      sub_1BA5193C4((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
      v22 = (char *)&loc_1BA6CB204 + *((int *)qword_1BAF7D4E0 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    v20 = 4;
    if (v37 > 4)
    {
      v18 = v36[4];
      if (v18)
      {
        v19 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v19 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
          __break(1u);
          JUMPOUT(0x1BA6CD500);
        }
        if (v19 >= v37)
          break;
        v18 = v36[v19];
        ++v20;
        if (v18)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  swift_release();
  return v16;
}

uint64_t sub_1BA6CD578(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  _QWORD v26[3];
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3BCBC8, (void (*)(uint64_t))type metadata accessor for FeedGroupItem);
  v29 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - v7;
  v9 = type metadata accessor for FeedGroupItem();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v27 = (char *)v26 - v14;
  v15 = *v3;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  v30 = a2;
  sub_1BA6CF304();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v16 = sub_1BB874608();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v26[1] = v3;
    v26[2] = a1;
    v28 = ~v17;
    sub_1BA4C2DD8(*(_QWORD *)(v15 + 48) + *(_QWORD *)(v10 + 72) * v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v19 = (uint64_t)&v8[*(int *)(v29 + 48)];
    sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    sub_1BA4C2DD8(v30, v19, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v20 = (char *)&loc_1BA6CD6CC + 4 * byte_1BB88E277[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v21 = (uint64_t)v27;
  v22 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v30;
  sub_1BA4C2DD8(v30, v21, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  v31 = *v22;
  *v22 = 0x8000000000000000;
  sub_1BA6D025C(v21, v18, isUniquelyReferenced_nonNull_native);
  *v22 = v31;
  swift_bridgeObjectRelease();
  sub_1BA5193C4(v24, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return 1;
}

uint64_t type metadata accessor for FeedGroupItem()
{
  uint64_t result;

  result = qword_1ED3BCB20;
  if (!qword_1ED3BCB20)
    return swift_getSingletonMetadata();
  return result;
}

void initializeWithCopy for FeedGroupItem()
{
  char *v0;

  v0 = (char *)sub_1BA6CDAAC
     + 4 * *(unsigned __int16 *)&algn_1BB8D9CEA[2 * swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6CDAAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__dst, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;

  v34 = *(void **)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  swift_unknownObjectRetain();
  v35 = v34;
  swift_storeEnumTagMultiPayload();
  return v32;
}

void sub_1BA6CF304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4C2DD8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1BA6CF394 + 4 * byte_1BB8D9C90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6CF394()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return 0x6575737369;
}

void destroy for FeedGroupItem(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();
      v2 = *(id *)(a1 + 8);
      goto LABEL_38;
    case 1u:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 128) < 0x11uLL)
        return;
      goto LABEL_70;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_70;
    case 3u:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for FeedWeather(0);
      v4 = a1 + *(int *)(v3 + 28);
      v5 = sub_1BB87270C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      v6 = a1 + *(int *)(v3 + 36);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
      v8 = v7;
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v9(v6, v7);
      v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v9(v6 + v10[5], v8);
      v9(v6 + v10[6], v8);
      v9(v6 + v10[7], v8);
      goto LABEL_70;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 240) < 0x11uLL)
        return;
      goto LABEL_70;
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v11 = (int *)type metadata accessor for FeedHeadline(0);
      v12 = a1 + v11[10];
      v13 = v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v15 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

        v16 = v13 + *(int *)(v14 + 28);
        v17 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      v18 = a1 + v11[11];
      v19 = sub_1BB871B24();
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      if (*(_QWORD *)(a1 + v11[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v11[13]) >= 3uLL)
        swift_unknownObjectRelease();
      v2 = *(id *)(a1 + v11[14]);
      goto LABEL_38;
    case 6u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = (int *)type metadata accessor for FeedWebEmbed();
      v22 = a1 + v21[8];
      v23 = sub_1BB86C67C();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v25(v22, v23);
      v26 = a1 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v23))
        v25(v26, v23);
      swift_release();
      swift_release();
      v27 = a1 + v21[12];
      v28 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v28 - 1) + 48))(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v29 = v28[10];
        v30 = v27 + v29 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v31 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
        {
          v32 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);

          v25(v30 + *(int *)(v31 + 28), v23);
        }
        v33 = v27 + v28[11];
        v34 = sub_1BB871B24();
        v35 = *(_QWORD *)(v34 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
        if (*(_QWORD *)(v27 + v28[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v27 + v28[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v36 = a1 + v21[13];
      v37 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v36, 1, v37))
        return;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v38 = type metadata accessor for GenericDataVisualization();
        v25(v36 + *(int *)(v38 + 20), v23);
LABEL_70:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return;
    case 7u:
      v2 = *(id *)a1;
LABEL_38:

      return;
    case 8u:
      goto LABEL_47;
    case 9u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      if (*(_QWORD *)(a1 + 152))
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      return;
    case 0xAu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_47:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 0xBu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_63;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v43 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v40, 1, v43))
            {
              v44 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v40, v44);
            }
          }
          v45 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v46 = v40 + *(int *)(v45 + 20);
          v47 = swift_getEnumCaseMultiPayload();
          if (v47 == 5 || v47 == 4)
          {
            v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v46, 1, v48))
            {
              v49 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v46, v49);
            }
          }
          v40 += *(int *)(v45 + 24);
LABEL_63:
          v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
          {
            v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v40, 1, v51))goto LABEL_76;
          }
          return;
        case 2u:
          v52 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v40, 1, v52))
            return;
          v53 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v40, v53);
          v54 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v55 = v40 + *(int *)(v54 + 24);
          swift_bridgeObjectRelease();
          v56 = *(_QWORD *)(v55 + 24);
          if (v56 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v55 + 16), v56);
          goto LABEL_70;
        case 3u:
          v57 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v58 = v40 + *(int *)(v57 + 24);
          v59 = type metadata accessor for PuzzleStreak();
          v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48);
          if (!v60(v58, 1, v59))
          {
            v61 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v58, v61);
          }
          v40 += *(int *)(v57 + 28);
          if (v60(v40, 1, v59))
            return;
LABEL_76:
          v41 = sub_1BB86BEC0();
          goto LABEL_53;
        default:
          return;
      }
    case 0xCu:
      swift_bridgeObjectRelease();
      v40 = a1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v41 = sub_1BB871E24();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
      break;
    default:
      return;
  }
}

void destroy for FeedGroupTag(uint64_t a1)
{
  swift_unknownObjectRelease();

}

uint64_t sub_1BA6CFE70(uint64_t a1, char a2, void (*a3)(_QWORD), void (*a4)(uint64_t, _BYTE *))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  _BYTE v39[40];

  v6 = v4;
  v8 = *v4;
  a3(0);
  v38 = a2;
  v9 = sub_1BB873F54();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v37 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v8 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v9 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36)
          goto LABEL_34;
        v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_34;
          v22 = v37[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              v6 = v4;
              if ((v38 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v8 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v36)
                  goto LABEL_34;
                v22 = v37[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v20);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v8 + 56) + 40 * v20;
      if ((v38 & 1) != 0)
      {
        a4(v27, v39);
      }
      else
      {
        sub_1BA4C010C(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v28 = -1 << *(_BYTE *)(v10 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17);
      *v18 = v26;
      v18[1] = v25;
      result = ((uint64_t (*)(_BYTE *, unint64_t))a4)(v39, *(_QWORD *)(v10 + 56) + 40 * v17);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v6 = v10;
  return result;
}

void sub_1BA6D0184()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9AC0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B17D0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9AC0);
  }
}

uint64_t sub_1BA6D01F8(uint64_t a1, char a2)
{
  return sub_1BA6CFE70(a1, a2, (void (*)(_QWORD))sub_1BA6D0184, (void (*)(uint64_t, _BYTE *))sub_1BA4CECCC);
}

uint64_t type metadata accessor for FeedWeather(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3BC9C0);
}

uint64_t type metadata accessor for FeedSponsorshipBannerAd()
{
  uint64_t result;

  result = qword_1ED3C0A28;
  if (!qword_1ED3C0A28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6D025C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3BCBC8, (void (*)(uint64_t))type metadata accessor for FeedGroupItem);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  v9 = type metadata accessor for FeedGroupItem();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(*v3 + 16);
  v14 = *(_QWORD *)(*v3 + 24);
  v24 = v10;
  v25 = v3;
  if (v14 <= v13 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BA6D0C44();
    }
    else
    {
      if (v14 > v13)
      {
        sub_1BA9E732C((uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, &qword_1ED3B99F8, &qword_1ED3B2F78, (uint64_t)&protocol conformance descriptor for FeedGroupItem);
        goto LABEL_10;
      }
      sub_1BA6D0758();
    }
    v15 = *v3;
    sub_1BB8745CC();
    sub_1BA6CF304();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    a2 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v15 + 32));
    if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v15 + 48) + *(_QWORD *)(v10 + 72) * a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
      v16 = (uint64_t)&v8[*(int *)(v26 + 48)];
      sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
      sub_1BA4C2DD8(v27, v16, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
      v17 = (char *)&loc_1BA6D0488 + *((int *)qword_1BA9E1A98 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
  }
LABEL_10:
  v18 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1BA5193C4(v27, *(_QWORD *)(v18 + 48) + *(_QWORD *)(v24 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  v20 = *(_QWORD *)(v18 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x1BA6D0684);
  }
  *(_QWORD *)(v18 + 16) = v22;
  return result;
}

void sub_1BA6D06C0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3BCBC8)
  {
    type metadata accessor for FeedGroupItem();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3BCBC8);
  }
}

uint64_t _s8NewsFeed12FeedGroupTagVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_unknownObjectRetain();
  v4 = v3;
  return a1;
}

uint64_t sub_1BA6D0758()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  _QWORD *v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for FeedGroupItem();
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - v6;
  v8 = *v0;
  sub_1BA7195B4(0, &qword_1ED3B99F8, v9, &qword_1ED3B2F78, (uint64_t)&protocol conformance descriptor for FeedGroupItem);
  v10 = sub_1BB873C60();
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v21 = v0;
  v22 = (_QWORD *)(v8 + 56);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v23 = (unint64_t)(v11 + 63) >> 6;
  result = swift_retain();
  if (v14)
  {
    v16 = __clz(__rbit64(v14));
    goto LABEL_20;
  }
  if (v23 <= 1)
    goto LABEL_21;
  v17 = v22[1];
  v18 = 1;
  if (v17)
  {
LABEL_19:
    v16 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_20:
    sub_1BA4C2DD8(*(_QWORD *)(v8 + 48) + *(_QWORD *)(v24 + 72) * v16, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    sub_1BB8745CC();
    sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v20 = (char *)&loc_1BA6D0AD8 + *((int *)qword_1BA9E9378 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v18 = 2;
  if (v23 <= 2)
  {
LABEL_21:
    result = swift_release_n();
    v1 = v21;
LABEL_23:
    *v1 = v10;
    return result;
  }
  v17 = v22[2];
  if (v17)
    goto LABEL_19;
  v18 = 3;
  if (v23 <= 3)
    goto LABEL_21;
  v17 = v22[3];
  if (v17)
    goto LABEL_19;
  v19 = 4;
  if (v23 <= 4)
    goto LABEL_21;
  v17 = v22[4];
  if (v17)
  {
    v18 = 4;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v23)
      goto LABEL_21;
    v17 = v22[v18];
    ++v19;
    if (v17)
      goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6D0C44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  int64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for FeedGroupItem();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  v8 = *v0;
  sub_1BA7195B4(0, &qword_1ED3B99F8, v9, &qword_1ED3B2F78, (uint64_t)&protocol conformance descriptor for FeedGroupItem);
  v10 = sub_1BB873C60();
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_25:
    result = swift_release();
    *v1 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v24 = (_QWORD *)(v8 + 56);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v22 = v0;
  v23 = (unint64_t)(v11 + 63) >> 6;
  result = swift_retain();
  if (v14)
  {
    v16 = __clz(__rbit64(v14));
    goto LABEL_20;
  }
  if (v23 <= 1)
    goto LABEL_21;
  v17 = v24[1];
  v18 = 1;
  if (v17)
  {
LABEL_19:
    v16 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_20:
    sub_1BA5193C4(*(_QWORD *)(v8 + 48) + *(_QWORD *)(v25 + 72) * v16, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    sub_1BB8745CC();
    sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v20 = (char *)&loc_1BA6D0FC4 + *((int *)qword_1BA9DD630 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v18 = 2;
  if (v23 <= 2)
  {
LABEL_21:
    swift_release();
    v1 = v22;
    v21 = 1 << *(_BYTE *)(v8 + 32);
    if (v21 > 63)
      bzero(v24, ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v24 = -1 << v21;
    *(_QWORD *)(v8 + 16) = 0;
    goto LABEL_25;
  }
  v17 = v24[2];
  if (v17)
    goto LABEL_19;
  v18 = 3;
  if (v23 <= 3)
    goto LABEL_21;
  v17 = v24[3];
  if (v17)
    goto LABEL_19;
  v19 = 4;
  if (v23 <= 4)
    goto LABEL_21;
  v17 = v24[4];
  if (v17)
  {
    v18 = 4;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v23)
      goto LABEL_21;
    v17 = v24[v18];
    ++v19;
    if (v17)
      goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_1BA6D1168(uint64_t a1)
{
  sub_1BB5531AC(a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem, (void (*)(char *, char *))sub_1BA6CD578);
}

uint64_t FormatFileVersionURIReferenceCollection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;

  v77 = a4;
  v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v7);
  v65 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1BB86C67C();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for FormatFileReference(0, a2, a3, v10);
  v61 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v60 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v59 = (uint64_t)&v55 - v13;
  v74 = a2;
  v76 = a3;
  v15 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata(255, a2, a3, v14);
  v58 = sub_1BB873A2C();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v72 = (char *)&v55 - v16;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v55 - v19;
  sub_1BA6D18B8(0, &qword_1ED3CCB98, type metadata accessor for FormatFileVersionURIReference);
  v22 = v21;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v55 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v25 = v75;
  sub_1BB874668();
  v26 = v25;
  if (v25)
  {
    v27 = (uint64_t)a1;
  }
  else
  {
    v69 = v24;
    v70 = v22;
    v56 = v20;
    v67 = v17;
    v68 = v15;
    v71 = a1;
    v28 = sub_1BB872E68();
    v83 = v28;
    __swift_project_boxed_opaque_existential_1(v81, v82);
    if ((sub_1BB87423C() & 1) != 0)
    {
      v29 = v77;
    }
    else
    {
      v73 = xmmword_1BB87CE70;
      v30 = v76;
      v31 = (uint64_t)v69;
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v81, v82);
        sub_1BB7A2174();
        sub_1BB874230();
        if (v26)
        {
          if (qword_1ED3BB670 != -1)
            swift_once();
          v39 = (id)qword_1ED4768A8;
          v40 = sub_1BB8732F4();
          sub_1BA7AA598();
          v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = v73;
          v79 = 0;
          v80 = 0xE000000000000000;
          v78 = (uint64_t)v26;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
          sub_1BB873E34();
          v42 = v79;
          v43 = v80;
          *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v41 + 64) = sub_1BA6A2D8C();
          *(_QWORD *)(v41 + 32) = v42;
          *(_QWORD *)(v41 + 40) = v43;
          sub_1BB86EF44("Failed to decode FormatFileVersionURIReference, error=%{public}@", 64, 2, &dword_1BA493000, v39, v40, v41);

          swift_bridgeObjectRelease();
          v26 = 0;
          v30 = v76;
          v29 = v77;
        }
        else
        {
          sub_1BA6D18B8(0, &qword_1ED3CA228, type metadata accessor for FormatVersionableValue);
          v75 = &v55;
          v79 = *(_QWORD *)(v31 + *(int *)(v44 + 44));
          MEMORY[0x1E0C80A78](v44);
          v45 = v74;
          *(&v55 - 4) = v74;
          *(&v55 - 3) = v30;
          *(&v55 - 2) = (uint64_t)v71;
          *(&v55 - 1) = v46;
          sub_1BA6D249C();
          sub_1BA4A2870((unint64_t *)&unk_1ED3B95E0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF38]);
          swift_bridgeObjectRetain();
          v47 = v68;
          v48 = sub_1BB872BF8();
          v49 = swift_bridgeObjectRelease();
          v78 = v48;
          MEMORY[0x1E0C80A78](v49);
          *(&v55 - 2) = v45;
          *(&v55 - 1) = v30;
          v50 = sub_1BB872EE0();
          MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v50);
          v51 = sub_1BB872C58();
          swift_bridgeObjectRelease();
          v78 = v51;
          MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v50);
          v52 = v72;
          sub_1BB873144();
          swift_bridgeObjectRelease();
          v53 = v67;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v52, 1, v47) == 1)
          {
            v31 = (uint64_t)v69;
            sub_1BB7A21CC((uint64_t)v69);
            (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v58);
            v30 = v76;
            v29 = v77;
          }
          else
          {
            v32 = v56;
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v56, v52, v47);
            v33 = (uint64_t)v62;
            (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, &v32[*(int *)(v47 + 40)], v64);
            v34 = v65;
            sub_1BA6D19F4((uint64_t)&v32[*(int *)(v47 + 36)], v65);
            v35 = v59;
            v75 = 0;
            v36 = v76;
            FormatFileReference.init(url:metadata:)(v33, v34, v74, v76, v59);
            v37 = v61;
            v38 = v66;
            (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v35, v66);
            sub_1BB872EE0();
            sub_1BB872EB0();
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v38);
            (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v47);
            v31 = (uint64_t)v69;
            sub_1BB7A21CC((uint64_t)v69);
            v29 = v77;
            v30 = v36;
            v26 = v75;
          }
        }
        __swift_project_boxed_opaque_existential_1(v81, v82);
      }
      while ((sub_1BB87423C() & 1) == 0);
      v28 = v83;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    *v29 = v28;
    v27 = (uint64_t)v71;
  }
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_1BA6D18AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BA6D18B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v6 = sub_1BB86C67C();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v8 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v9 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, v7, MEMORY[0x1E0CB0010]);
    v10 = a3(a1, v6, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t FormatFileReference.init(url:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA6BE23C();
  v11 = a5 + *(int *)(v10 + 48);
  v12 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a5, a1, v12);
  sub_1BA6BFCE4(a2, v11);
  type metadata accessor for FormatFileReference(0, a3, a4, v13);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BA6D19F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6D1A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, char *a9, uint64_t a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  swift_allocObject();
  return sub_1BA6D1CEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1BA6D1B14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  if (a2)
  {
    sub_1BB87420C();
    sub_1BB872AFC(v2);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v3);
    sub_1BB872AFC(v4);
  }
  else
  {
    sub_1BB87420C();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    v7 = sub_1BB872AFC(v6);
    MEMORY[0x1E0C80A78](v7);
    v8 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v8);
    sub_1BB872BF8();
    sub_1BA6D249C();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B95D0, 255, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
    sub_1BB872904();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v9);
    swift_bridgeObjectRelease();
  }
  return 0x6E6F697369766572;
}

uint64_t sub_1BA6D1CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, char *a9, uint64_t a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  _OWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  uint64_t v36;
  __int128 v37;
  char v38;
  char v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v47[16];
  uint64_t v48;
  uint64_t v49;
  char v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v18 = v17;
  v37 = *a7;
  v36 = *((_QWORD *)a7 + 2);
  v38 = *a9;
  v44 = a11[1];
  v45 = *a11;
  v43 = a11[2];
  v42 = *((_QWORD *)a11 + 6);
  v40 = *((_BYTE *)a11 + 57);
  v41 = *((_BYTE *)a11 + 56);
  *(_OWORD *)(v17 + 192) = 0u;
  *(_OWORD *)(v17 + 208) = 0u;
  *(_OWORD *)(v17 + 217) = 0u;
  *(_OWORD *)(v17 + 176) = 0u;
  v20 = (_OWORD *)(v17 + 176);
  *(_BYTE *)(v17 + 233) = 1;
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v53 = a5;
  v54 = a6;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v21);
  v55 = a1;
  v51 = a16;
  v52 = a17;
  v22 = sub_1BB872EE0();
  v33 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v22);
  v55 = sub_1BAA52384((void (*)(char *, char *))sub_1BA561D58, (uint64_t)v50, v22, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v33, MEMORY[0x1E0DEDD18], v23);
  sub_1BA6D249C();
  sub_1BA50AD30((unint64_t *)&qword_1ED3B95D0, 255, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v24);
  swift_bridgeObjectRelease();
  v25 = v54;
  *(_QWORD *)(v17 + 32) = v53;
  *(_QWORD *)(v17 + 40) = v25;
  v26 = sub_1BA6D1B14(a13, a14);
  v28 = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 104) = v26;
  *(_QWORD *)(v18 + 112) = v28;
  v53 = a1;
  v48 = a16;
  v49 = a17;
  v29 = type metadata accessor for FeedItem(0);
  *(_QWORD *)(v18 + 64) = sub_1BAA52384((void (*)(char *, char *))sub_1BA520778, (uint64_t)v47, v22, v29, MEMORY[0x1E0DEDCE8], v33, MEMORY[0x1E0DEDD18], v30);
  *(_QWORD *)(v18 + 72) = a4;
  *(_QWORD *)(v18 + 48) = a5;
  *(_QWORD *)(v18 + 56) = a6;
  *(_OWORD *)(v18 + 80) = v37;
  *(_QWORD *)(v18 + 96) = v36;
  *(_QWORD *)(v18 + 120) = a8;
  *(_BYTE *)(v18 + 128) = v38;
  sub_1BA6D2544(a10, v18 + 136);
  swift_beginAccess();
  *v20 = v45;
  *(_OWORD *)(v18 + 192) = v44;
  *(_OWORD *)(v18 + 208) = v43;
  *(_QWORD *)(v18 + 224) = v42;
  *(_BYTE *)(v18 + 232) = v41;
  *(_BYTE *)(v18 + 233) = v40;
  *(_QWORD *)(v18 + 240) = a12;
  return v18;
}

uint64_t FeedGroupType.shortDescription.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  uint64_t (*v14)(unint64_t, unint64_t);
  unint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v6 = 0xEA00000000007265;
  v7 = 0x6574496F73726570;
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8827B0;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = sub_1BB86DEE8();
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = 1684957547;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v13 = *(void (**)(unint64_t, uint64_t))(a2 + 64);
  *(_QWORD *)(inited + 120) = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
  v42 = a2;
  v13(a1, a2);
  *(_QWORD *)(inited + 128) = 0x6574496F73726570;
  *(_QWORD *)(inited + 136) = 0xEF746E756F43736DLL;
  v43 = (_QWORD *)inited;
  v14 = *(uint64_t (**)(unint64_t, unint64_t))(v9 + 32);
  v15 = v14(a1, v9);
  if (v15 >> 62)
    goto LABEL_16;
  for (i = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = sub_1BB873F30())
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEB418];
    v43[18] = i;
    v43[21] = v17;
    v43[22] = v7;
    v43[23] = v6 + 264;
    v7 = v14(a1, v9);
    if (v7 >> 62)
    {
      v18 = sub_1BB873F30();
      if (!v18)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        v6 = MEMORY[0x1E0DEE9D8];
LABEL_19:
        sub_1BA6D249C();
        v43[24] = v6;
        v43[27] = v32;
        v43[28] = 6775156;
        v43[29] = 0xE300000000000000;
        v33 = (void *)(*(uint64_t (**)(unint64_t))(v42 + 104))(a1);
        if (v33)
        {
          v34 = objc_msgSend(v33, sel_identifier);
          swift_unknownObjectRelease();
          v35 = sub_1BB8729A0();
          v37 = v36;

          v38 = v43 + 30;
          v43[33] = MEMORY[0x1E0DEA968];
          if (v37)
          {
            *v38 = v35;
LABEL_24:
            v43[31] = v37;
            sub_1BA76E994((uint64_t)v43);
            v39 = sub_1BB86E320();
            a3[3] = v39;
            a3[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v39);
            __swift_allocate_boxed_opaque_existential_0(a3);
            return sub_1BB86E314();
          }
        }
        else
        {
          v38 = v43 + 30;
          v43[33] = MEMORY[0x1E0DEA968];
        }
        *v38 = 7104878;
        v37 = 0xE300000000000000;
        goto LABEL_24;
      }
    }
    else
    {
      v18 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v18)
        goto LABEL_18;
    }
    v46 = MEMORY[0x1E0DEE9D8];
    result = sub_1BA7447E8(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0)
      break;
    v40 = a3;
    v41 = a1;
    a3 = 0;
    v6 = v46;
    v44 = v7;
    v45 = v7 & 0xC000000000000001;
    v14 = (uint64_t (*)(unint64_t, unint64_t))0xE500000000000000;
    v9 = 0xE400000000000000;
    while ((uint64_t *)v18 != a3)
    {
      if (v45)
      {
        v20 = (void *)MEMORY[0x1BCCE4630](a3, v7);
      }
      else
      {
        v20 = *(void **)(v7 + 8 * (_QWORD)a3 + 32);
        swift_unknownObjectRetain();
      }
      sub_1BB873CB4();
      v21 = objc_msgSend(v20, sel_itemID);
      v22 = sub_1BB8729A0();
      v24 = v23;
      swift_bridgeObjectRelease();

      sub_1BB872AFC(v25);
      objc_msgSend(v20, sel_hasThumbnail);
      sub_1BB872AFC(v26);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v27);
      objc_msgSend(v20, sel_hasVideo);
      sub_1BB872AFC(v28);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v22;
      a1 = *(_QWORD *)(v46 + 16);
      v30 = *(_QWORD *)(v46 + 24);
      if (a1 >= v30 >> 1)
        sub_1BA7447E8(v30 > 1, a1 + 1, 1);
      a3 = (uint64_t *)((char *)a3 + 1);
      *(_QWORD *)(v46 + 16) = a1 + 1;
      v31 = v46 + 16 * a1;
      *(_QWORD *)(v31 + 32) = v29;
      *(_QWORD *)(v31 + 40) = v24;
      v7 = v44;
      if ((uint64_t *)v18 == a3)
      {
        swift_bridgeObjectRelease();
        a3 = v40;
        a1 = v41;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_16:
    ;
  }
  __break(1u);
  return result;
}

void sub_1BA6D249C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B95C0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B95C0);
  }
}

void sub_1BA6D24F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9FD0)
  {
    sub_1BA81E0F8();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9FD0);
  }
}

uint64_t sub_1BA6D2544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, qword_1ED3B1AB0, (uint64_t (*)(uint64_t))sub_1BA83B36C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6D25A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9E28, type metadata accessor for FormatResource);
}

uint64_t type metadata accessor for FormatResource(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B4198);
}

uint64_t initializeWithCopy for FormatCompilerOptions.Newsroom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v10 = *(int *)(a3 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1BB86E710();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t FormatContentSubgroupCollection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t result;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void (*v89)(uint64_t, uint64_t);
  unint64_t v90;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t (*v96)();
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t *v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  char v134;

  v103 = a2;
  v118 = type metadata accessor for FormatContentSubgroupCollection.MetadataContainer();
  MEMORY[0x1E0C80A78](v118);
  v123 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v117 = (uint64_t)&v98 - v6;
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], v4);
  MEMORY[0x1E0C80A78](v7);
  v115 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v113 = (uint64_t)&v98 - v10;
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  v121 = v11;
  v122 = v12;
  MEMORY[0x1E0C80A78](v11);
  v114 = (uint64_t)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v126 = (uint64_t)&v98 - v15;
  MEMORY[0x1E0C80A78](v16);
  v112 = (char *)&v98 - v17;
  MEMORY[0x1E0C80A78](v18);
  v105 = (uint64_t)&v98 - v19;
  MEMORY[0x1E0C80A78](v20);
  v120 = (uint64_t)&v98 - v21;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v22);
  v106 = (char *)&v98 - v23;
  v127 = type metadata accessor for FormatMetadata();
  v116 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v128 = (uint64_t)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v119 = (uint64_t)&v98 - v26;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEC990], v4);
  MEMORY[0x1E0C80A78](v27);
  v110 = (char *)&v98 - v28;
  v109 = sub_1BB873E58();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for FormatContentSubgroup();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v98 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v98 - v38;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v40 = v129;
  sub_1BB874668();
  if (v40)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v129 = 0;
  v125 = v39;
  v111 = v36;
  v101 = v33;
  v99 = v31;
  v124 = v30;
  v104 = a1;
  __swift_project_boxed_opaque_existential_1(&v132, v133);
  v42 = sub_1BB87423C();
  v43 = MEMORY[0x1E0DEE9D8];
  if ((v42 & 1) != 0)
  {
    v44 = v103;
    v45 = v104;
    goto LABEL_40;
  }
  v102 = MEMORY[0x1E0DEE9B8] + 8;
  v46 = (uint64_t)v123;
  v45 = v104;
  v47 = v128;
  v48 = (uint64_t)v111;
  do
  {
    v100 = v43;
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v132, v133);
      sub_1BA4A2870(&qword_1ED3B65C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t)&protocol conformance descriptor for FormatContentSubgroup);
      v49 = v129;
      sub_1BB874230();
      if (!v49)
        break;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v132, v133);
      sub_1BA4A2870(&qword_1ED3BA7D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer, (uint64_t)&unk_1BB8D7D30);
      v50 = v46;
      sub_1BB874230();
      v51 = v117;
      sub_1BA5E01A4(v46, v117, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
      v52 = v127;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v51, 1, v127) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1BAF62BDC(v51);
        swift_willThrow();
        v96 = type metadata accessor for FormatContentSubgroupCollection.MetadataContainer;
        v97 = v50;
        goto LABEL_42;
      }
      v129 = 0;
      sub_1BA5193C4(v51, v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      __swift_project_boxed_opaque_existential_1(v45, v45[3]);
      v53 = sub_1BB872874();
      Dictionary<>.appVersion.getter(v53, v126);
      swift_bridgeObjectRelease();
      v54 = sub_1BB872874();
      v55 = v114;
      Dictionary<>.formatVersion.getter(v54, v114);
      swift_bridgeObjectRelease();
      v56 = v115;
      sub_1BA5E01A4(v47 + *(int *)(v52 + 28), v115, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      v58 = v121;
      v57 = v122;
      v59 = 1;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v56, 1, v121) != 1)
      {
        v60 = v112;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v112, v56, v58);
        v59 = sub_1BB86E8FC();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
      }
      sub_1BA4A2870(&qword_1ED3B4098, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
      v61 = v126;
      v62 = sub_1BB86DE88();
      v63 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v63(v55, v58);
      v63(v61, v58);
      v64 = (uint64_t)v123;
      v48 = (uint64_t)v111;
      if ((v62 & 1) != 0 && (v59 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_willThrow();
        sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
        v96 = type metadata accessor for FormatMetadata;
        v97 = v128;
LABEL_42:
        sub_1BA4A2E80(v97, (uint64_t (*)(_QWORD))v96);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
        a1 = v104;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }

      v46 = v64;
      sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
      v47 = v128;
      sub_1BA4A2E80(v128, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
LABEL_8:
      __swift_project_boxed_opaque_existential_1(&v132, v133);
      if ((sub_1BB87423C() & 1) != 0)
      {
        v44 = v103;
        v43 = v100;
        goto LABEL_40;
      }
    }
    v129 = 0;
    __swift_project_boxed_opaque_existential_1(v45, v45[3]);
    v65 = sub_1BB872874();
    v66 = v110;
    sub_1BB873E4C();
    v67 = v108;
    v68 = v109;
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48))(v66, 1, v109);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v69 = (uint64_t)v107;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v107, v66, v68);
    if (*(_QWORD *)(v65 + 16) && (v70 = sub_1BA6EDA24(v69), (v71 & 1) != 0))
    {
      sub_1BA747A10(*(_QWORD *)(v65 + 56) + 32 * v70, (uint64_t)&v130);
    }
    else
    {
      v130 = 0u;
      v131 = 0u;
    }
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v69, v68);
    if (!*((_QWORD *)&v131 + 1))
    {
      sub_1BA4A2E80((uint64_t)&v130, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
      swift_bridgeObjectRelease();
      v73 = v124;
      v74 = (uint64_t)v125;
LABEL_27:
      sub_1BA4C010C((uint64_t)v45, (uint64_t)&v130);
      sub_1BA6D3398(v74, v48);
      v76 = (uint64_t)v106;
LABEL_28:
      sub_1BA6D3418(v48 + *(int *)(v73 + 40), v76);
      v77 = v119;
      sub_1BA5193C4(v76, v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      __swift_project_boxed_opaque_existential_1(&v130, *((uint64_t *)&v131 + 1));
      v78 = sub_1BB872874();
      Dictionary<>.appVersion.getter(v78, v120);
      swift_bridgeObjectRelease();
      v79 = sub_1BB872874();
      v80 = v105;
      Dictionary<>.formatVersion.getter(v79, v105);
      swift_bridgeObjectRelease();
      v81 = v113;
      sub_1BA5E01A4(v77 + *(int *)(v127 + 28), v113, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      v83 = v121;
      v82 = v122;
      v84 = 1;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v81, 1, v121) != 1)
      {
        v85 = v112;
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v112, v113, v83);
        v84 = sub_1BB86E8FC();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v83);
      }
      sub_1BA4A2870(&qword_1ED3B4098, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
      v86 = v120;
      v87 = v119;
      v88 = sub_1BB86DE88();
      v89 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v89(v80, v83);
      v89(v86, v83);
      sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
      v46 = (uint64_t)v123;
      v47 = v128;
      v74 = (uint64_t)v125;
      if ((v88 & 1) != 0 && (v84 & 1) != 0)
        goto LABEL_33;
      sub_1BA4A2E80((uint64_t)v125, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      v45 = v104;
      goto LABEL_8;
    }
    v72 = swift_dynamicCast();
    v73 = v124;
    v74 = (uint64_t)v125;
    if ((v72 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    v75 = v134;
    swift_bridgeObjectRelease();
    sub_1BA4C010C((uint64_t)v45, (uint64_t)&v130);
    sub_1BA6D3398(v74, v48);
    v76 = (uint64_t)v106;
    if ((v75 & 1) == 0)
      goto LABEL_28;
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
LABEL_33:
    sub_1BA6D3398(v74, (uint64_t)v101);
    v90 = v100;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v92 = v99;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v90 = sub_1BA6D347C(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
    v44 = v103;
    v94 = *(_QWORD *)(v90 + 16);
    v93 = *(_QWORD *)(v90 + 24);
    v43 = v90;
    v45 = v104;
    if (v94 >= v93 >> 1)
      v43 = sub_1BA6D347C(v93 > 1, v94 + 1, 1, v90);
    *(_QWORD *)(v43 + 16) = v94 + 1;
    sub_1BA5193C4((uint64_t)v101, v43+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v94, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    __swift_project_boxed_opaque_existential_1(&v132, v133);
    v95 = sub_1BB87423C();
    v46 = (uint64_t)v123;
  }
  while ((v95 & 1) == 0);
LABEL_40:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
  *v44 = v43;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
}

uint64_t sub_1BA6D3398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContentSubgroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatContentSubgroup()
{
  uint64_t result;

  result = qword_1ED3B65D0;
  if (!qword_1ED3B65D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6D3418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6D347C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9EC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
}

uint64_t type metadata accessor for FormatContentSubgroupCollection.MetadataContainer()
{
  uint64_t result;

  result = qword_1ED3B86F8;
  if (!qword_1ED3B86F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA6D34CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CCE98)
  {
    sub_1BA4D9CE8(255, &qword_1ED3CCE90);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CCE98);
  }
}

uint64_t sub_1BA6D3530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v2 = type metadata accessor for FormatOption();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v40 = v3;
  if (v9)
  {
    v39 = v1;
    v42 = v6;
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v9, 0);
    v10 = v42;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v38[1] = v8;
    v12 = v8 + ((v11 + 32) & ~v11);
    v13 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BA900B30(v12, (uint64_t)v5);
      v14 = swift_allocBox();
      sub_1BA8569CC((uint64_t)v5, v15);
      v42 = v10;
      v17 = *(_QWORD *)(v10 + 16);
      v16 = *(_QWORD *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BA76B828(v16 > 1, v17 + 1, 1);
        v10 = v42;
      }
      *(_QWORD *)(v10 + 16) = v17 + 1;
      *(_QWORD *)(v10 + 8 * v17 + 32) = v14 | 0x4000000000000000;
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
    v1 = v39;
  }
  else
  {
    v10 = v6;
  }
  sub_1BA7082C0(v10);
  v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v19 = *v18;
  v41 = v6;
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    v27 = v6;
    v28 = *(_QWORD *)(v6 + 16);
    if (v28)
      goto LABEL_12;
LABEL_18:
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BA76BAD0(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = *(_QWORD *)(v22 + 72);
  swift_bridgeObjectRetain();
  v25 = v23 + 64;
  do
  {
    v26 = swift_bridgeObjectRetain();
    sub_1BA6D3834(v26);
    v25 += v24;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  v27 = v41;
  v28 = *(_QWORD *)(v41 + 16);
  if (!v28)
    goto LABEL_18;
LABEL_12:
  v41 = v6;
  sub_1BA76B828(0, v28, 0);
  v29 = v41;
  v30 = *(unsigned __int8 *)(v40 + 80);
  v39 = v27;
  v31 = v27 + ((v30 + 32) & ~v30);
  v32 = *(_QWORD *)(v40 + 72);
  do
  {
    sub_1BA900B30(v31, (uint64_t)v5);
    v33 = swift_allocBox();
    sub_1BA8569CC((uint64_t)v5, v34);
    v41 = v29;
    v36 = *(_QWORD *)(v29 + 16);
    v35 = *(_QWORD *)(v29 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_1BA76B828(v35 > 1, v36 + 1, 1);
      v29 = v41;
    }
    *(_QWORD *)(v29 + 16) = v36 + 1;
    *(_QWORD *)(v29 + 8 * v36 + 32) = v33 | 0xB000000000000000;
    v31 += v32;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
LABEL_19:
  sub_1BA7082C0(v29);
  return v43;
}

uint64_t sub_1BA6D3834(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA7AD174, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
}

uint64_t sub_1BA6D3848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  v12[2] = a1;
  swift_bridgeObjectRetain();
  sub_1BA6D3964((uint64_t (*)(char *))sub_1BA6D39B4, (uint64_t)v12, a2);
  sub_1BA6BCBF8(0);
  v6 = v5;
  sub_1BB86EB84();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
  v7 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    sub_1BA4C2DD8(v7+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * (v8 - 1), a3, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, v6);
  return swift_bridgeObjectRelease();
}

void sub_1BA6D3964(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA6BCBF8, (void (*)(BOOL, uint64_t, uint64_t))sub_1BA6D3988);
}

uint64_t sub_1BA6D3988(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C3270, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  *v3 = result;
  return result;
}

uint64_t sub_1BA6D39B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA6D39D0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1BA6D39D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[2];

  v21[1] = a2;
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86EB84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BA5193C4((uint64_t)&v5[*(int *)(v16 + 48)], (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA5193C4((uint64_t)&v5[*(int *)(v17 + 48)], (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v18 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v5, v18);
  }
  sub_1BA4C2DD8((uint64_t)&v8[*(int *)(v6 + 28)], (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v19 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v19 = sub_1BB86E8FC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v19 & 1;
}

uint64_t FeedGroupType.tag.getter()
{
  return 0;
}

uint64_t sub_1BA6D3C50@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  id v28;
  uint64_t v29;

  v28 = a1;
  v29 = a3;
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedHeadline(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (id *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BB86F778();
  BlueprintItem<>.feedItem.getter(v14, a2);
  FeedItem.feedHeadline.getter((uint64_t)v6);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v13, type metadata accessor for FeedHeadline);
    v17 = objc_msgSend(v13[5], sel_identifier);
    v18 = sub_1BB8729A0();
    v20 = v19;

    v21 = objc_msgSend(v28, sel_identifier);
    v22 = sub_1BB8729A0();
    v24 = v23;

    if (v18 == v22 && v20 == v24)
    {
      swift_bridgeObjectRelease_n();
      v16 = v29;
    }
    else
    {
      v26 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v29;
      if ((v26 & 1) == 0)
      {
        sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedHeadline);
        v15 = 1;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, v15, 1, v10);
      }
    }
    sub_1BA5193C4((uint64_t)v13, v16, type metadata accessor for FeedHeadline);
    v15 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, v15, 1, v10);
  }
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v15 = 1;
  v16 = v29;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, v15, 1, v10);
}

uint64_t FeedItem.externalContentCacheIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _OWORD v57[2];
  _QWORD v58[18];
  _BYTE v59[144];
  _OWORD v60[7];
  _OWORD v61[2];
  unint64_t v62;

  v1 = v0;
  v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = v5;
  v7 = swift_allocObject();
  v48 = xmmword_1BB87A390;
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  FeedItem.identifier.getter();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v9;
  FeedItem.visibility.getter();
  v10 = v62;
  v49 = v6;
  if (v62 == 2)
  {
    v11 = 0xE700000000000000;
    v12 = 0x656C6269736976;
  }
  else
  {
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v48;
    *(_QWORD *)(v13 + 32) = 0x6E6564646968;
    *(_QWORD *)(v13 + 40) = 0xE600000000000000;
    *(_QWORD *)&v60[0] = v10;
    sub_1BA9057BC(v10);
    *(_QWORD *)(v13 + 48) = FeedItemHiddenReason.description.getter();
    *(_QWORD *)(v13 + 56) = v14;
    *(_QWORD *)&v60[0] = v13;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    v12 = sub_1BB872904();
    v11 = v15;
    swift_bridgeObjectRelease();
    sub_1BB009A80(v10);
    sub_1BB009A80(v10);
  }
  *(_QWORD *)(v7 + 48) = v12;
  *(_QWORD *)(v7 + 56) = v11;
  *(_QWORD *)&v60[0] = v7;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v17 = v16;
  v18 = sub_1BA6A0BA4();
  v19 = sub_1BB872904();
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = sub_1BA6D44D8();
  v43 = v23;
  FeedItem.feedIssue.getter((uint64_t)v58);
  sub_1BA8EDBB0((uint64_t)v58, (uint64_t)v59);
  sub_1BA8EDBB0((uint64_t)v59, (uint64_t)v60);
  v24 = sub_1BA84DAF0((uint64_t *)v60);
  v47 = v18;
  *(_QWORD *)&v48 = v17;
  v45 = v21;
  v46 = v19;
  v44 = v22;
  if (v24 == 1)
    goto LABEL_6;
  v56 = v60[6];
  v57[0] = v61[0];
  *(_OWORD *)((char *)v57 + 9) = *(_OWORD *)((char *)v61 + 9);
  v52 = v60[2];
  v53 = v60[3];
  v54 = v60[4];
  v55 = v60[5];
  v50 = v60[0];
  v51 = v60[1];
  v25 = FeedIssue.feedContextIdentifier.getter();
  v27 = v26;
  sub_1BA90EECC((uint64_t)v59);
  if (!v27)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    v25 = 0;
    v27 = 0xE000000000000000;
  }
  v28 = sub_1BA6D46EC();
  v30 = v29;
  v31 = sub_1BB0093AC();
  v33 = v32;
  sub_1BA4C2DD8(v1, (uint64_t)v4, type metadata accessor for FeedItem);
  if (swift_getEnumCaseMultiPayload() == 11)
  {
    v58[0] = sub_1BB86F5C8();
    sub_1BA6F0168();
    v34 = sub_1BB873B58();
    v36 = v35;
    swift_release();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FeedItem);
    v34 = 0;
    v36 = 0xE000000000000000;
  }
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BB898AA0;
  v38 = v45;
  *(_QWORD *)(v37 + 32) = v46;
  *(_QWORD *)(v37 + 40) = v38;
  v39 = v43;
  *(_QWORD *)(v37 + 48) = v44;
  *(_QWORD *)(v37 + 56) = v39;
  *(_QWORD *)(v37 + 64) = v25;
  *(_QWORD *)(v37 + 72) = v27;
  *(_QWORD *)(v37 + 80) = v28;
  *(_QWORD *)(v37 + 88) = v30;
  *(_QWORD *)(v37 + 96) = v31;
  *(_QWORD *)(v37 + 104) = v33;
  *(_QWORD *)(v37 + 112) = v34;
  *(_QWORD *)(v37 + 120) = v36;
  v58[0] = v37;
  v40 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v40;
}

void FeedItem.visibility.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BA6D4354 + 4 * byte_1BB8E20CA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6D4354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1BA4A2E80(v1, type metadata accessor for FeedItem);
  *v0 = 2;
  return result;
}

void sub_1BA6D4388()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v2, v1);
  JUMPOUT(0x1BA6D4364);
}

void sub_1BA6D43D0()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1BA5193C4(v1, v3, type metadata accessor for FeedHeadline);
  v4 = *(_QWORD *)(v3 + *(int *)(v2 + 52));
  sub_1BA6D44C8(v4);
  sub_1BA4A2E80(v3, type metadata accessor for FeedHeadline);
  *v0 = v4;
  JUMPOUT(0x1BA6D436CLL);
}

void sub_1BA6D440C()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = v1[7];
  v0[6] = v1[6];
  v0[7] = v2;
  *(_OWORD *)((char *)v0 + 121) = *(_OWORD *)((char *)v1 + 121);
  v3 = v1[3];
  v0[2] = v1[2];
  v0[3] = v3;
  v4 = v1[5];
  v0[4] = v1[4];
  v0[5] = v4;
  v5 = v1[1];
  *v0 = *v1;
  v0[1] = v5;
  sub_1BA8D1FE4((uint64_t)v0);
  JUMPOUT(0x1BA6D4364);
}

void sub_1BA6D4440()
{
  swift_release();
  JUMPOUT(0x1BA6D4364);
}

void sub_1BA6D444C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BA6D4364);
}

void sub_1BA6D4474()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v1 + 192);
  *(_OWORD *)(v0 + 208) = v2;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v1 + 240);
  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 144) = v3;
  v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 176) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 80) = v5;
  v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 112) = v6;
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 48) = v8;
  sub_1BA93EC1C(v0);
  JUMPOUT(0x1BA6D4364);
}

unint64_t sub_1BA6D44C8(unint64_t result)
{
  if (result != 2)
    return sub_1BA9057BC(result);
  return result;
}

uint64_t sub_1BA6D44D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_1BA4B07F0(0, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v14 - v1;
  FeedItem.headline.getter();
  if (!v3)
    return 0;
  v4 = v3;
  if (qword_1ED3BBC78 != -1)
    swift_once();
  v5 = qword_1ED3BE098;
  v6 = objc_msgSend(v4, sel_articleID);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v14[1] = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  MEMORY[0x1E0C80A78](v10);
  v14[-4] = v5;
  v14[-3] = v7;
  v14[-2] = v9;
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_bridgeObjectRelease();
  swift_release();
  v11 = type metadata accessor for SharedItem();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v2, 1, v11) == 1)
  {
    sub_1BA5C699C((uint64_t)v2, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
    v12 = 0;
  }
  else
  {
    v12 = sub_1BB86C538();
    sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  }
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1BA6D46EC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  uint64_t v16;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - v2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - v5;
  v7 = type metadata accessor for FeedHeadline(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  FeedItem.feedHeadline.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BA5C699C((uint64_t)v6, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v10, type metadata accessor for FeedHeadline);
    v12 = (uint64_t)&v10[*(int *)(v7 + 44)];
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718];
    sub_1BA5E01A4(v12, (uint64_t)v3, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
    v14 = sub_1BB871B24();
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v3, 1, v14);
    sub_1BA5C699C((uint64_t)v3, (unint64_t *)&qword_1ED3B0B00, v13);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FeedHeadline);
    if (v15 == 1)
      return 0;
    else
      return 0x644165766974616ELL;
  }
}

uint64_t getEnumTagSinglePayload for FeedHeadline()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t FeedItem.feedHeadline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 5) >= 0xC)
    __asm { BR              X10 }
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  v9 = type metadata accessor for FeedHeadline(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
}

void sub_1BA6D49FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA5193C4(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA5E01A4(v1 + *(int *)(v2 + 48), v0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  JUMPOUT(0x1BA6D49E4);
}

void sub_1BA6D4A44()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA5193C4(v1, v0, type metadata accessor for FeedHeadline);
  type metadata accessor for FeedHeadline(0);
  JUMPOUT(0x1BA6D49DCLL);
}

BOOL sub_1BA6D4A7C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  _BOOL8 v12;
  _QWORD v15[5];

  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SharedItem();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for FormatNodeContext();
  v15[4] = &off_1E72F9288;
  v15[0] = a1;
  swift_retain();
  sub_1BA6D4C0C(v15, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1BAF52BCC((uint64_t)v10, (uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((a2 & 1) != 0)
    v12 = v11 != 1;
  else
    v12 = v11 == 1;
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
  return v12;
}

uint64_t type metadata accessor for FormatNodeContext()
{
  uint64_t result;

  result = qword_1ED3B4CF0;
  if (!qword_1ED3B4CF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA6D4C0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;

  v35 = a2;
  v3 = type metadata accessor for FeedItem.SharedState(0);
  MEMORY[0x1E0C80A78](v3);
  v36 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v8);
  v34 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32);
  v16 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  v17 = (uint64_t)v39;
  result = v15(v10, v10, v16, v14, v13);
  if (!v17)
  {
    v19 = v35;
    v20 = *(int *)(v10 + 40);
    v39 = v12;
    sub_1BA6D50F4((uint64_t)&v12[v20], (uint64_t)v7);
    v21 = (uint64_t)&v7[*(int *)(v5 + 24)];
    v22 = v36;
    sub_1BA5193C4(v21, v36, type metadata accessor for FeedItem.SharedState);
    v23 = type metadata accessor for SharedItem();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    v26 = 1;
    v27 = v25(v22, 1, v23);
    v28 = v34;
    if (v27 != 1)
    {
      sub_1BA5193C4(v22, v34, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      v26 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v28, v26, 1, v23);
    if (v25(v28, 1, v23) == 1)
    {
      sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v30 = v29;
      v37 = 0;
      v38 = 0xE000000000000000;
      v31 = (uint64_t)v39;
      sub_1BB873E34();
      v32 = v38;
      *v30 = v37;
      v30[1] = v32;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return sub_1BA4A2E80(v31, type metadata accessor for FeedHeadline);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v39, type metadata accessor for FeedHeadline);
      return sub_1BA5193C4(v28, v19, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    }
  }
  return result;
}

void sub_1BA6D4F28(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA6D4F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BA6E35A8(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = v9;
      v12 = *(_QWORD *)(v8 + 56);
      v13 = type metadata accessor for SharedItem();
      v14 = *(_QWORD *)(v13 - 8);
      sub_1BAF52AB4(v12 + *(_QWORD *)(v14 + 72) * v11, a4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
    }
    else
    {
      v16 = type metadata accessor for SharedItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = type metadata accessor for SharedItem();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_endAccess();
}

uint64_t static FeedHeadline.State.default.getter@<X0>(_WORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  uint64_t result;

  v2 = (int *)type metadata accessor for FeedHeadline.State(0);
  v3 = (char *)a1 + v2[6];
  v4 = type metadata accessor for SharedItem();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *a1 = 258;
  *((_BYTE *)a1 + v2[7]) = 1;
  *((_BYTE *)a1 + v2[8]) = 0;
  *((_BYTE *)a1 + v2[9]) = 0;
  *((_BYTE *)a1 + v2[10]) = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for SharedItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA6D50F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedHeadline.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6D5138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BA6D5158(a1, a2, a3);
}

uint64_t sub_1BA6D5158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BA6D5184(a1, *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), a2, a3);
}

uint64_t sub_1BA6D5184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v21;
  char v22[40];

  v8 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v22[-v10 - 8];
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v21 = a1;
    swift_bridgeObjectRetain();
    v13 = a2 + 40 * v12 - 8;
    while (1)
    {
      sub_1BA4C010C(v13, (uint64_t)v22);
      sub_1BA7C2A4C();
      v14 = swift_dynamicCast();
      v15 = *(_QWORD *)(a3 - 8);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      if ((v14 & 1) != 0)
        break;
      --v12;
      v16(v11, 1, 1, a3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v13 -= 40;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v16(v11, 0, 1, a3);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v11, a3);
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    v18 = v17;
    *v17 = sub_1BB874734();
    v18[1] = v19;
    *((_BYTE *)v18 + 56) = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1BA6D5324(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9CB0, (uint64_t (*)(uint64_t))sub_1BA6D5338);
}

void sub_1BA6D5338()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0B40)
  {
    type metadata accessor for FeedBannerAd();
    sub_1BB871ECC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1BB871F5C();
    sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
    sub_1BA4A2870(&qword_1ED3D2EF0, v0, MEMORY[0x1E0D53028]);
    v1 = sub_1BB871BE4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0B40);
  }
}

uint64_t destroy for FormatLocalization()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

int64_t sub_1BA6D5450(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BA6D5534()
{
  return FeedAppConfigManager.segmentSetIds.getter();
}

uint64_t FeedAppConfigManager.segmentSetIds.getter()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_respondsToSelector_, sel_segmentSetIDs);
  v3 = MEMORY[0x1E0DEE9D8];
  v4 = MEMORY[0x1E0DEE9D8];
  if ((v2 & 1) != 0)
  {
    v5 = objc_msgSend(v1, sel_segmentSetIDs);
    if (!v5)
      return MEMORY[0x1E0DEE9E8];
    v6 = v5;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
    v4 = sub_1BB872DB4();

  }
  if (!(v4 >> 62))
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_6;
LABEL_17:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v16 = sub_1BAC86454(v10);
    swift_bridgeObjectRelease();
    return v16;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_17;
LABEL_6:
  v17 = v3;
  result = sub_1BA6D5960(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = v17;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1BCCE4630](v9, v4);
      else
        v11 = *(id *)(v4 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_intValue);

      v15 = *(_QWORD *)(v17 + 16);
      v14 = *(_QWORD *)(v17 + 24);
      if (v15 >= v14 >> 1)
        sub_1BA6D5960(v14 > 1, v15 + 1, 1);
      ++v9;
      *(_QWORD *)(v17 + 16) = v15 + 1;
      *(_DWORD *)(v17 + 4 * v15 + 32) = v13;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6D573C(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = MEMORY[0x1BCCE4ED0](*(_QWORD *)(v6 + 40), a2, 4);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BA6D583C(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != (_DWORD)a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v10 + 4 * v9) != (_DWORD)a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BA6D583C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BA9DC5AC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BA9E6AB4();
      goto LABEL_14;
    }
    sub_1BA9E8730();
  }
  v8 = *v3;
  result = MEMORY[0x1BCCE4ED0](*(_QWORD *)(*v3 + 40), v5, 4);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_1BB874554();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1BA6D5960(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6D597C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA6D597C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED39E248, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

id sub_1BA6D5AEC()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_timesOfDayConfiguration) & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_timesOfDayConfiguration);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v2;
}

uint64_t sub_1BA6D5B70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1ED3C0C80 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *(_QWORD *)algn_1ED3C5428;
  *a1 = qword_1ED3C5420;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1BA6D5BF0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  const char *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = sub_1BB86C8B0();
  v0 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86CAD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86C0E8();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BB490 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED3B9000);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v10, v3);
  sub_1BA6D61D8();
  v11 = sub_1BB86CAC0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E0CB1198], v11);
  sub_1BA861CB8(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BB86C8A4();
  sub_1BB86CA3C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v43);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v15 = sub_1BB86C0D0();
  if ((v16 & 1) != 0)
  {
LABEL_8:
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    switch(v15)
    {
      case 1:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v19 = v17[2];
        v18 = v17[3];
        if (v19 >= v18 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
        v17[2] = v19 + 1;
        v20 = &v17[2 * v19];
        v20[4] = 0xD000000000000017;
        v21 = v20 + 4;
        v22 = "date-day-of-week-sunday";
        break;
      case 2:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v24 = v17[2];
        v23 = v17[3];
        if (v24 >= v23 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v23 > 1), v24 + 1, 1, v17);
        v17[2] = v24 + 1;
        v25 = &v17[2 * v24];
        v25[4] = 0xD000000000000017;
        v21 = v25 + 4;
        v22 = "date-day-of-week-monday";
        break;
      case 3:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v27 = v17[2];
        v26 = v17[3];
        if (v27 >= v26 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v26 > 1), v27 + 1, 1, v17);
        v17[2] = v27 + 1;
        v28 = &v17[2 * v27];
        v28[4] = 0xD000000000000018;
        v21 = v28 + 4;
        v22 = "date-day-of-week-tuesday";
        break;
      case 4:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v30 = v17[2];
        v29 = v17[3];
        if (v30 >= v29 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v29 > 1), v30 + 1, 1, v17);
        v17[2] = v30 + 1;
        v31 = &v17[2 * v30];
        v31[4] = 0xD00000000000001ALL;
        v21 = v31 + 4;
        v22 = "date-day-of-week-wednesday";
        break;
      case 5:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v33 = v17[2];
        v32 = v17[3];
        if (v33 >= v32 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v32 > 1), v33 + 1, 1, v17);
        v17[2] = v33 + 1;
        v34 = &v17[2 * v33];
        v34[4] = 0xD000000000000019;
        v21 = v34 + 4;
        v22 = "date-day-of-week-thursday";
        break;
      case 6:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v36 = v17[2];
        v35 = v17[3];
        if (v36 >= v35 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v35 > 1), v36 + 1, 1, v17);
        v17[2] = v36 + 1;
        v37 = &v17[2 * v36];
        v37[4] = 0xD000000000000017;
        v21 = v37 + 4;
        v22 = "date-day-of-week-friday";
        break;
      case 7:
        v17 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v39 = v17[2];
        v38 = v17[3];
        if (v39 >= v38 >> 1)
          v17 = sub_1BA6EA0D0((_QWORD *)(v38 > 1), v39 + 1, 1, v17);
        v17[2] = v39 + 1;
        v40 = &v17[2 * v39];
        v40[4] = 0xD000000000000019;
        v21 = v40 + 4;
        v22 = "date-day-of-week-saturday";
        break;
      default:
        goto LABEL_8;
    }
    v21[1] = (unint64_t)(v22 - 32) | 0x8000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
  return v17;
}

void sub_1BA6D6160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B99F0)
  {
    sub_1BB86CAC0();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0548, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
    v0 = sub_1BB873C84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B99F0);
  }
}

void sub_1BA6D61D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9C60)
  {
    sub_1BB86CAC0();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9C60);
  }
}

uint64_t UIContentSizeCategory.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v0 = 0x4C5858585F5841;
  v1 = sub_1BB8729A0();
  v3 = v2;
  if (v1 == sub_1BB8729A0() && v3 == v4)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return v0;
  }
  v6 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    v0 = 0x4C58585F5841;
    v7 = sub_1BB8729A0();
    v9 = v8;
    if (v7 == sub_1BB8729A0() && v9 == v10)
      goto LABEL_12;
    v12 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return v0;
    v0 = 0x4C585F5841;
    v14 = sub_1BB8729A0();
    v16 = v15;
    if (v14 == sub_1BB8729A0() && v16 == v17)
      goto LABEL_12;
    v18 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      return v0;
    v0 = 1281316929;
    v19 = sub_1BB8729A0();
    v21 = v20;
    if (v19 == sub_1BB8729A0() && v21 == v22)
      goto LABEL_12;
    v23 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      return v0;
    v0 = 1298094145;
    v24 = sub_1BB8729A0();
    v26 = v25;
    if (v24 == sub_1BB8729A0() && v26 == v27)
      goto LABEL_12;
    v28 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      return v0;
    v0 = 1280858200;
    v29 = sub_1BB8729A0();
    v31 = v30;
    if (v29 == sub_1BB8729A0() && v31 == v32)
      goto LABEL_12;
    v33 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      return v0;
    v0 = 5003352;
    v34 = sub_1BB8729A0();
    v36 = v35;
    if (v34 == sub_1BB8729A0() && v36 == v37)
      goto LABEL_12;
    v38 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
      return v0;
    v39 = sub_1BB8729A0();
    v41 = v40;
    if (v39 == sub_1BB8729A0() && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
      return 19544;
    }
    v43 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0)
      return 19544;
    v44 = sub_1BB8729A0();
    v46 = v45;
    if (v44 == sub_1BB8729A0() && v46 == v47)
    {
      swift_bridgeObjectRelease_n();
      return 76;
    }
    v48 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) != 0)
      return 76;
    v49 = sub_1BB8729A0();
    v51 = v50;
    if (v49 == sub_1BB8729A0() && v51 == v52)
    {
      swift_bridgeObjectRelease_n();
      return 77;
    }
    v53 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v53 & 1) != 0)
      return 77;
    v54 = sub_1BB8729A0();
    v56 = v55;
    if (v54 == sub_1BB8729A0() && v56 == v57)
    {
      swift_bridgeObjectRelease_n();
      return 83;
    }
    v58 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v58 & 1) != 0)
      return 83;
    v59 = sub_1BB8729A0();
    v61 = v60;
    if (v59 == sub_1BB8729A0() && v61 == v62)
    {
      swift_bridgeObjectRelease_n();
      return 21336;
    }
    else
    {
      v63 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v63 & 1) != 0)
        return 21336;
      else
        return 0x6669636570736E75;
    }
  }
  return v0;
}

uint64_t sub_1BA6D6884(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BA6D6924(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA6D6974()
{
  unint64_t result;

  result = qword_1ED3B99E0;
  if (!qword_1ED3B99E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B99E0);
  }
  return result;
}

uint64_t sub_1BA6D69B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)(v1 + qword_1EF2C4698);
  v5 = *(_QWORD *)(v1 + qword_1EF2C4698 + 24);
  v4 = *(_QWORD *)(v1 + qword_1EF2C4698 + 32);
  __swift_project_boxed_opaque_existential_1(v3, v5);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(v5);
  switch(result)
  {
    case 0:
      *(_QWORD *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return result;
    case 1:
    case 2:
      if (qword_1ED3A0EB0 != -1)
        swift_once();
      v7 = &qword_1ED4764C8;
      goto LABEL_15;
    case 3:
      if (qword_1EF2A7200 != -1)
        swift_once();
      v7 = &qword_1EF3D08B0;
      goto LABEL_15;
    case 4:
    case 5:
      if (qword_1EF2A71F0 != -1)
        swift_once();
      v7 = &qword_1EF3D0840;
      goto LABEL_15;
    case 6:
      if (qword_1EF2A71F8 != -1)
        swift_once();
      v7 = &qword_1EF3D0878;
LABEL_15:
      v8 = v7[1];
      v9 = v7[2];
      v10 = v7[3];
      v11 = v7[4];
      v12 = v7[5];
      v13 = v7[6];
      *(_QWORD *)a1 = *v7;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      *(_QWORD *)(a1 + 48) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      break;
    default:
      result = sub_1BB873EAC();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1BA6D6B9C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 16);
}

uint64_t type metadata accessor for FormatSystem()
{
  return objc_opt_self();
}

uint64_t sub_1BA6D6BF8()
{
  return FeedUserInfo.layoutSelectors.getter();
}

uint64_t FeedUserInfo.layoutSelectors.getter()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v6;
  uint64_t v7;

  v7 = FeedUserInfo.contextSelectors.getter();
  v1 = objc_msgSend(*(id *)(v0 + 16), sel_shortcutsOnboardingState);
  if (!v1)
  {
    v3 = 0xD000000000000021;
    v4 = "user-info-shortcuts-not-onboarded";
LABEL_7:
    v2 = (unint64_t)(v4 - 32) | 0x8000000000000000;
    goto LABEL_8;
  }
  if (v1 == (id)1)
  {
    v3 = 0xD000000000000022;
    v4 = "user-info-shortcuts-auto-onboarded";
    goto LABEL_7;
  }
  if (v1 == (id)2)
  {
    v2 = 0x80000001BB977380;
    v3 = 0xD00000000000001DLL;
LABEL_8:
    sub_1BA6EE5AC(&v6, v3, v2);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t FeedUserInfo.contextSelectors.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  const char *v4;
  id v5;
  unsigned int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9E8];
  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_progressivePersonalization);
  if (!v2)
  {
    v3 = 0xD00000000000002DLL;
    v4 = "user-info-progressive-personalization-unknown";
    goto LABEL_7;
  }
  if (v2 == (id)1)
  {
    v3 = 0xD00000000000002FLL;
    v4 = "user-info-progressive-personalization-opted-out";
    goto LABEL_7;
  }
  if (v2 == (id)2)
  {
    v3 = 0xD00000000000002ELL;
    v4 = "user-info-progressive-personalization-opted-in";
LABEL_7:
    sub_1BA6EE5AC(&v11, v3, (unint64_t)(v4 - 32) | 0x8000000000000000);
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v1, sel_sportsSyncState) != (id)2
    || (v5 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount),
        v6 = objc_msgSend(v5, sel_isUserSignedInToiCloud),
        v5,
        !v6)
    || (v7 = objc_msgSend(v1, sel_sportsOnboardingState)) == 0)
  {
    v9 = 0xD00000000000001ELL;
    v8 = 0x80000001BB977250;
    goto LABEL_14;
  }
  if (v7 == (id)1)
  {
    v8 = 0x80000001BB977270;
    v9 = 0xD00000000000001ALL;
LABEL_14:
    sub_1BA6EE5AC(&v11, v9, v8);
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t FeedKind.selector.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD))((char *)sub_1BA6D6E60 + 4 * byte_1BB88D3FC[*v0]))(*v0);
}

uint64_t sub_1BA6D6E60()
{
  return 0x6E696B2D64656566;
}

unint64_t sub_1BA6D7030()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA6D7048()
{
  return 0xD000000000000016;
}

unint64_t sub_1BA6D7060()
{
  return 0xD000000000000017;
}

void sub_1BA6D7078()
{
  JUMPOUT(0x1BA6D708CLL);
}

unint64_t sub_1BA6D7098()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_puzzleRanksByPuzzleTypeID);

  if (!v2)
    return sub_1BA8F3AF0(MEMORY[0x1E0DEE9D8]);
  sub_1BA6D7158();
  v3 = sub_1BB87276C();

  return v3;
}

void sub_1BA6D7158()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2FB0)
  {
    sub_1BA49A224(255, &qword_1ED3A2FD0);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2FB0);
  }
}

uint64_t sub_1BA6D71BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6D7220(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t FormatContent.Resolved.headlinesIncludingAuxiliaries.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[8];
  uint64_t v13;

  type metadata accessor for FormatContent.Resolved();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BB13FE64(v0);
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(v1 + 48);
    do
    {
      v4 = *v3;
      v5 = v3[1];
      v6 = v3[2];
      v7 = v3[3];
      v8 = v3[4];
      v9 = v3[5];
      v10 = *(v3 - 1);
      v12[0] = *(v3 - 2);
      v12[1] = v10;
      v12[2] = v4;
      v12[3] = v5;
      v12[4] = v6;
      v12[5] = v7;
      v12[6] = v8;
      v12[7] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6C72A4((uint64_t)&v13, (uint64_t)v12);
      v3 += 8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t sub_1BA6D74C4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BA6D7628(isUniquelyReferenced_nonNull_native, v15, 1, v3, (unint64_t *)&unk_1ED3B9E50, (uint64_t)&type metadata for FormatContentSlot.Resolved);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[8 * v9 + 4];
  if (a1 + 32 < v10 + (v8 << 6) && v10 < a1 + 32 + (v8 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *sub_1BA6D7628(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 + 31;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 6);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[8 * v10 + 4])
          memmove(v15, a4 + 4, v10 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA6D7750(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6D7750(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *_s17ResolvedContainerOwcp(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  sub_1BA6D78DC();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

uint64_t sub_1BA6D78DC()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1BA6D7960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))(_QWORD)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t (*result)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v41 = a2;
  v42 = a3;
  v40 = a1;
  v17 = sub_1BB870B7C();
  v45 = *(_QWORD *)(v17 - 8);
  v46 = v17;
  MEMORY[0x1E0C80A78](v17);
  v44 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v43 = (char *)&v29 - v20;
  v38 = sub_1BB870AC8();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v39 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a7;
  v47 = a7;
  v48 = a8;
  v36 = a8;
  v33 = a11;
  v49 = a11;
  v50 = a12;
  v34 = a12;
  v22 = sub_1BB86FAD8();
  MEMORY[0x1E0C80A78](v22);
  v47 = a5;
  v48 = a6;
  v30 = a9;
  v49 = a9;
  v50 = a10;
  v31 = a10;
  v23 = sub_1BB871680();
  MEMORY[0x1E0C80A78](v23);
  if (swift_conformsToProtocol2())
    v24 = a6;
  else
    v24 = 0;
  if (v24 && (swift_conformsToProtocol2() ? (v25 = a5) : (v25 = 0), v25))
  {
    v32 = a4;
    if (!sub_1BB8705AC())
    {
      v47 = a5;
      v48 = a6;
      v49 = v35;
      v50 = v36;
      v51 = v30;
      v52 = v31;
      v53 = v33;
      v54 = v34;
      type metadata accessor for FeedAdPipelineProcessorTask();
    }
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v26 = (id)qword_1ED476858;
    v27 = sub_1BB87330C();
    sub_1BB86EF44("Bailing due to background attempts to run the feed ad processor", 63, 2, &dword_1BA493000, v26, v27, MEMORY[0x1E0DEE9D8]);

    return nullsub_1;
  }
  else
  {
    result = (uint64_t (*)(_QWORD))sub_1BB873EAC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA6D7E7C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v29 = a1;
  v2 = (_QWORD *)*v1;
  v3 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[11];
  v6 = v2[15];
  v7 = sub_1BB86F778();
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4A3FB4(0, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v28 = type metadata accessor for FeedItem(0);
  v11 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - v15;
  v27 = v1;
  v17 = v2[10];
  v18 = v2[14];
  v19 = v29;
  v30 = v17;
  v31 = v5;
  v32 = v18;
  v33 = v6;
  sub_1BB871680();
  sub_1BB87168C();
  sub_1BA6D81A8();
  if (!swift_dynamicCast())
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    sub_1BA502AD0((uint64_t)&v34, &qword_1EF2AB210, (void (*)(uint64_t))sub_1BA6D81A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v28);
    return sub_1BA502AD0((uint64_t)v10, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  }
  v20 = (uint64_t)v16;
  v21 = (uint64_t)v26;
  v22 = *((_QWORD *)&v35 + 1);
  v23 = v36;
  __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  v24 = v28;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v24) == 1)
    return sub_1BA502AD0((uint64_t)v10, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  sub_1BA5193C4((uint64_t)v10, v20, type metadata accessor for FeedItem);
  sub_1BA4C2DD8(v20, (uint64_t)v13, type metadata accessor for FeedItem);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1BA5193C4((uint64_t)v13, v21, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    sub_1BA6E122C(v21, v19);
  }
  sub_1BA4A2E80(v20, type metadata accessor for FeedItem);
  return sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedItem);
}

unint64_t sub_1BA6D81A8()
{
  unint64_t result;

  result = qword_1ED3B1E00;
  if (!qword_1ED3B1E00)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B1E00);
  }
  return result;
}

uint64_t sub_1BA6D81FC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v28 = a1;
  v2 = (_QWORD *)*v1;
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[11];
  v6 = v2[15];
  v7 = sub_1BB86F778();
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4A3FB4(0, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  v27 = type metadata accessor for FeedItem(0);
  v11 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - v15;
  v26 = v1;
  v17 = v2[10];
  v18 = v2[14];
  v19 = v28;
  v29 = v17;
  v30 = v5;
  v31 = v18;
  v32 = v6;
  sub_1BB871680();
  sub_1BB87168C();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B1E00);
  if (!swift_dynamicCast())
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    sub_1BA65DB80((uint64_t)&v33, &qword_1EF2AB210, (unint64_t *)&qword_1ED3B1E00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v27);
    return sub_1BA502AD0((uint64_t)v10, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  }
  v20 = (uint64_t)v25;
  v21 = *((_QWORD *)&v34 + 1);
  v22 = v35;
  __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  v23 = v27;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v23) == 1)
    return sub_1BA502AD0((uint64_t)v10, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v16, type metadata accessor for FeedItem);
  sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v13, type metadata accessor for FeedItem);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1BA5193C4((uint64_t)v13, v20, type metadata accessor for FeedHeadline);
    if ((*(_BYTE *)(v20 + 32) & 8) != 0)
      sub_1BB011110(v20, v19);
    sub_1BA4A2E80(v20, type metadata accessor for FeedHeadline);
    return sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FeedItem);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FeedItem);
    return sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedItem);
  }
}

unint64_t sub_1BA6D8548(uint64_t a1)
{
  double **v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double **v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  unint64_t result;
  char *v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  double **v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;

  v106 = a1;
  v2 = *v1;
  v86 = sub_1BB871E84();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (uint64_t)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v4);
  v99 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1BB870C3C();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v7);
  v98 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1BB871E90();
  v89 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v87 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1BB871B6C();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v97 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v93);
  v96 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3B0A10, (void (*)(uint64_t))MEMORY[0x1E0DBB250]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v83 - v13;
  v105 = sub_1BB870E70();
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v101 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *((_QWORD *)v2 + 11);
  v17 = *((_QWORD *)v2 + 15);
  v18 = sub_1BB86F778();
  MEMORY[0x1E0C80A78](v18);
  sub_1BA4A3FB4(0, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v83 - v20;
  v22 = type metadata accessor for FeedItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v100 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v104 = (uint64_t)&v83 - v26;
  v102 = v1;
  v27 = *((_QWORD *)v2 + 14);
  v107 = *((_QWORD *)v2 + 10);
  v108 = v16;
  v109 = v27;
  v110 = v17;
  v28 = v106;
  sub_1BB871680();
  sub_1BB87168C();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B1E00);
  if (!swift_dynamicCast())
  {
    v113 = 0;
    v111 = 0u;
    v112 = 0u;
    sub_1BA65DB80((uint64_t)&v111, &qword_1EF2AB210, (unint64_t *)&qword_1ED3B1E00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    goto LABEL_6;
  }
  v29 = *((_QWORD *)&v112 + 1);
  v30 = v113;
  __swift_project_boxed_opaque_existential_1(&v111, *((uint64_t *)&v112 + 1));
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
LABEL_6:
    v36 = &qword_1ED3B2A50;
    v37 = (void (*)(uint64_t))type metadata accessor for FeedItem;
    v38 = (uint64_t)v21;
    return sub_1BA502AD0(v38, v36, v37);
  }
  v31 = v104;
  sub_1BA5193C4((uint64_t)v21, v104, type metadata accessor for FeedItem);
  v32 = v102;
  sub_1BB86CBD4();
  v33 = *((_OWORD *)v2 + 8);
  v111 = *((_OWORD *)v2 + 6);
  v112 = v33;
  sub_1BB86FAD8();
  sub_1BB86FAC0();
  v34 = v103;
  v35 = v105;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v14, 1, v105) == 1)
  {
    sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
    v36 = &qword_1ED3B0A10;
    v37 = (void (*)(uint64_t))MEMORY[0x1E0DBB250];
    v38 = (uint64_t)v14;
    return sub_1BA502AD0(v38, v36, v37);
  }
  v40 = v101;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v101, v14, v35);
  v41 = v100;
  sub_1BA6DB2D0(v31, v100);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      v54 = v99;
      sub_1BA5193C4(v41, v99, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
      v55 = sub_1BB86CBC8();
      v56 = *(_QWORD *)(sub_1BB870E64() + 16);
      swift_bridgeObjectRelease();
      if (v55 >= v56)
        goto LABEL_29;
      v57 = sub_1BB870E64();
      result = sub_1BB86CBC8();
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      if (result >= *(_QWORD *)(v57 + 16))
      {
LABEL_36:
        __break(1u);
        return result;
      }
      v58 = v91;
      v59 = v90;
      v60 = v92;
      (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v90, v57+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * result, v92);
      swift_bridgeObjectRelease();
      v61 = sub_1BB870C30();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
      v54 = v99;
      if ((v61 & 1) == 0)
        goto LABEL_29;
      v62 = sub_1BB870AA4();
      if (v62)
      {
        v63 = (void *)v62;
        v64 = v84;
        sub_1BB537D1C(v84);
        v65 = v87;
        (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v87, v64, v86);
        v66 = v88;
        (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v65, *MEMORY[0x1E0D52F78], v88);
        objc_msgSend(v63, sel_frame);
        swift_beginAccess();
        sub_1BB87201C();
        swift_endAccess();

        (*(void (**)(char *, uint64_t))(v89 + 8))(v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v64, v86);
        v67 = v99;
      }
      else
      {
LABEL_29:
        v67 = v54;
      }
      sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
      return sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
    case 3:
      v68 = v98;
      sub_1BA5193C4(v41, v98, type metadata accessor for FeedHeadline);
      v69 = sub_1BB86CBC8();
      v70 = *(_QWORD *)(sub_1BB870E64() + 16);
      swift_bridgeObjectRelease();
      if (v69 >= v70)
      {
LABEL_28:
        (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
        sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
        return sub_1BA4A2E80(v68, type metadata accessor for FeedHeadline);
      }
      v71 = sub_1BB870E64();
      result = sub_1BB86CBC8();
      if ((result & 0x8000000000000000) == 0)
      {
        if (result < *(_QWORD *)(v71 + 16))
        {
          v72 = v91;
          v73 = v90;
          v74 = v92;
          (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v90, v71+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(_QWORD *)(v72 + 72) * result, v92);
          swift_bridgeObjectRelease();
          v75 = sub_1BB870C30();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
          v68 = v98;
          if ((v75 & 1) != 0)
          {
            if (objc_msgSend(*(id *)(v98 + 40), sel_isDisplayingAsNativeAd))
            {
              v76 = sub_1BB870AA4();
              if (v76)
              {
                v77 = (void *)v76;
                v78 = *MEMORY[0x1E0D52F68];
                v79 = sub_1BB871E78();
                v80 = v87;
                (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 104))(v87, v78, v79);
                v81 = v89;
                v82 = v88;
                (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v80, *MEMORY[0x1E0D52FB8], v88);
                objc_msgSend(v77, sel_frame);
                swift_beginAccess();
                sub_1BB87201C();
                swift_endAccess();

                (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
                (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
                sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
                return sub_1BA4A2E80(v98, type metadata accessor for FeedHeadline);
              }
            }
          }
          goto LABEL_28;
        }
        goto LABEL_35;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    case 2:
      v43 = v96;
      sub_1BA5193C4(v41, v96, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      v44 = v97;
      sub_1BB8721A8();
      v45 = v94;
      v46 = v95;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v94 + 88))(v44, v95) == *MEMORY[0x1E0D527B8])
      {
        (*(void (**)(uint64_t, uint64_t))(v45 + 96))(v44, v46);
        v47 = (void *)sub_1BB870AA4();
        if (v47)
        {
          v48 = v47;
          sub_1BB537A88(v32, v28, v47);
          v49 = *MEMORY[0x1E0D52F68];
          v50 = sub_1BB871E78();
          v51 = v87;
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v87, v49, v50);
          v52 = v89;
          v53 = v88;
          (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v51, *MEMORY[0x1E0D52FB8], v88);
          swift_beginAccess();
          sub_1BB87201C();
          swift_endAccess();

          (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
          sub_1BA4A2E80(v96, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
          sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
          return __swift_destroy_boxed_opaque_existential_1(v97);
        }
        else
        {
          sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
          sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
          return __swift_destroy_boxed_opaque_existential_1(v44);
        }
      }
      else
      {
        sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
        sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
      }
    default:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
      sub_1BA4A2E80(v31, type metadata accessor for FeedItem);
      return sub_1BA4A2E80(v41, type metadata accessor for FeedItem);
  }
}

_QWORD *initializeWithCopy for FormatContent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)((char *)a1 + v21);
  v26 = (_QWORD *)((char *)a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[10];
  __dst = (char *)a1 + v28;
  v29 = (char *)a2 + v28;
  v30 = sub_1BB871E24();
  v31 = *(_QWORD *)(v30 - 8);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37(v29, 1, v30))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  v33 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  v34 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  v35 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA6D940C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA6D9428(uint64_t a1, uint64_t a2, _QWORD *a3, char *a4, void *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (**v42)(char *, char *, uint64_t);
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  unint64_t *v77;
  unint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  void (**v100)(char *, char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  CGRect v124;
  CGRect v125;

  v91 = a5;
  v93 = a4;
  v97 = a3;
  v115 = a2;
  v116 = a1;
  v13 = *a3;
  v14 = sub_1BB871C44();
  MEMORY[0x1E0C80A78](v14);
  v90 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1BB871C74();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v94 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v13 + 120);
  v107 = *(_QWORD *)(v13 + 88);
  v106 = v17;
  v105 = sub_1BB86F778();
  MEMORY[0x1E0C80A78](v105);
  v104 = (char *)&v85 - v18;
  sub_1BA6DA0C0(0);
  MEMORY[0x1E0C80A78](v19);
  v103 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for FeedItem(0);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v99 = (uint64_t)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1BB870C3C();
  v22 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BB870E70();
  v113 = *(_QWORD *)(v25 - 8);
  v114 = v25;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1BB86CBE0();
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v96 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_OWORD *)(v13 + 96);
  v108 = v13;
  v30 = *(_OWORD *)(v13 + 128);
  v121 = v29;
  v122 = v30;
  v31 = sub_1BB870600();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB9528], v31);
  v32 = sub_1BB8728A4();
  v100 = *(void (***)(char *, char *, uint64_t))(v32 - 8);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v85 - v34;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA228], v32, v33);
  v36 = sub_1BB873E40();
  v98 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v85 - v40;
  v112 = v31;
  sub_1BB873180();
  v42 = v100;
  v100[2](v38, v35, v32);
  MEMORY[0x1BCCE319C](&v121, v32);
  v43 = v42[1];
  v44 = v41;
  v45 = v96;
  ((void (*)(char *, uint64_t))v43)(v35, v32);
  *(_QWORD *)&v38[*(int *)(v36 + 36)] = v121;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v44, v38, v36);
  v95 = v36;
  v46 = &v44[*(int *)(v36 + 36)];
  v47 = *(_QWORD *)(*v97 + 144);
  v92 = *(char **)(*v97 + 160);
  v48 = *(_QWORD *)v46;
  sub_1BB87288C();
  if (v48 == (_QWORD)v121)
    return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v44, v95);
  v87 = (unint64_t *)(v93 + 16);
  v100 = (void (**)(char *, char *, uint64_t))((char *)v97 + v47);
  v93 = &v92[(_QWORD)v97];
  while (1)
  {
    sub_1BB872898();
    MEMORY[0x1BCCDD4D8](v48, v115);
    sub_1BB8705E8();
    v50 = sub_1BB870E64();
    result = (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v27, v114);
    if ((v48 & 0x8000000000000000) != 0)
      break;
    if (v48 >= *(_QWORD *)(v50 + 16))
      goto LABEL_28;
    v51 = v50
        + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))
        + *(_QWORD *)(v22 + 72) * v48;
    v52 = v111;
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v24, v51, v111);
    swift_bridgeObjectRelease();
    v53 = sub_1BB870C30();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v52);
    if ((v53 & 1) != 0)
    {
      v54 = *(_QWORD *)(v108 + 112);
      v117 = *(_QWORD *)(v108 + 80);
      v118 = v107;
      v119 = v54;
      v120 = v106;
      sub_1BB871680();
      sub_1BB87168C();
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B1E00);
      if (swift_dynamicCast())
      {
        v55 = *((_QWORD *)&v122 + 1);
        v56 = v123;
        __swift_project_boxed_opaque_existential_1(&v121, *((uint64_t *)&v122 + 1));
        v57 = v55;
        v58 = (uint64_t)v103;
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v56);
        v59 = v101;
        v60 = v102;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v58, 0, 1, v102);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v58, 1, v60) != 1)
        {
          v61 = v99;
          sub_1BA6DA07C(v58, v99);
          FeedItem.headline.getter();
          if (v62)
          {
            if ((objc_msgSend(v62, sel_isDisplayingAsNativeAd) & 1) == 0)
            {
              v63 = (char *)sub_1BB870AA4();
              if (!v63)
              {
                swift_unknownObjectRelease();
                sub_1BA4A2E80(v61, type metadata accessor for FeedItem);
                (*(void (**)(char *, uint64_t))(v109 + 8))(v45, v110);
                return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v44, v95);
              }
              v64 = v63;
              objc_msgSend(v63, sel_frame);
              v125.origin.x = a6;
              v125.origin.y = a7;
              v125.size.width = a8;
              v125.size.height = a9;
              if (CGRectIntersectsRect(v124, v125))
              {
                swift_unknownObjectRetain();
                objc_msgSend(v91, sel_frame);
                v66 = v65;
                v68 = v67;
                v70 = v69;
                v72 = v71;
                v92 = v64;
                objc_msgSend(v64, sel_frame);
                sub_1BA6E1CF4(v90, v66, v68, v70, v72, v73, v74, v75, v76);
                sub_1BB871C68();
                v77 = v87;
                swift_beginAccess();
                v78 = *v77;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *v77 = v78;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v78 = sub_1BA6E1CE0(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
                  *v87 = v78;
                }
                v81 = *(_QWORD *)(v78 + 16);
                v80 = *(_QWORD *)(v78 + 24);
                v82 = v81 + 1;
                if (v81 >= v80 >> 1)
                {
                  v86 = v81 + 1;
                  v84 = sub_1BA6E1CE0(v80 > 1, v81 + 1, 1, v78);
                  v82 = v86;
                  v78 = v84;
                  *v87 = v84;
                }
                *(_QWORD *)(v78 + 16) = v82;
                (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))(v78+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v81, v94, v89);
                swift_endAccess();

                swift_unknownObjectRelease();
                v83 = v99;
                goto LABEL_25;
              }

            }
            swift_unknownObjectRelease();
          }
          v83 = v61;
LABEL_25:
          sub_1BA4A2E80(v83, type metadata accessor for FeedItem);
          (*(void (**)(char *, uint64_t))(v109 + 8))(v45, v110);
          goto LABEL_5;
        }
      }
      else
      {
        v123 = 0;
        v121 = 0u;
        v122 = 0u;
        sub_1BA65DBBC((uint64_t)&v121, &qword_1EF2AB210, (unint64_t *)&qword_1ED3B1E00, (uint64_t)&protocol descriptor for FeedItemRepresentable);
        v58 = (uint64_t)v103;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v103, 1, 1, v102);
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v45, v110);
      sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))sub_1BA6DA0C0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v45, v110);
    }
LABEL_5:
    v48 = *(_QWORD *)v46;
    sub_1BB87288C();
    if (v48 == (_QWORD)v121)
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v44, v95);
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BA6D9E1C(uint64_t a1, uint64_t a2)
{
  return BlueprintItem<>.feedItem.getter(a1, *(_QWORD *)(a2 - 8));
}

void FeedItem.headline.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1BA6D9F74 + 4 * byte_1BB8E2072[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6D9F74()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  return 0;
}

void sub_1BA6D9FAC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA5193C4(v0, v1, type metadata accessor for FeedHeadline);
  swift_unknownObjectRetain();
  sub_1BA4A2E80(v1, type metadata accessor for FeedHeadline);
  JUMPOUT(0x1BA6D9F88);
}

void sub_1BA6D9FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA5193C4(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA5E01A4(v2 + *(int *)(v3 + 48), v0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0, 1, v1) == 1)
  {
    sub_1BA5C699C(v0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    JUMPOUT(0x1BA6D9F84);
  }
  swift_unknownObjectRetain();
  sub_1BA4A2E80(v0, type metadata accessor for FeedHeadline);
  JUMPOUT(0x1BA6D9F88);
}

uint64_t sub_1BA6DA07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA6DA0C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void static FeedModel.== infix(_:_:)()
{
  type metadata accessor for FeedModel();
}

uint64_t sub_1BA6DA120(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  void (*v21)(_BYTE *, uint64_t, int *);
  _BYTE *v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  _BYTE *v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  BOOL v38;
  void (*v39)(_BYTE *, int *);
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  char v51;
  char v53;
  uint64_t v54;
  uint64_t (*v55)(_BYTE *, _BYTE *);
  _BYTE *v56;
  _BYTE *v57;
  _BYTE v58[96];

  v5 = *((_QWORD *)a1 - 1);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v3 - 264) = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v3 - 272) = &v58[-v8];
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)(v3 - 256) = &v58[-v10];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v58[-v12];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v58[-v15];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v58[-v18];
  v20 = sub_1BB872958();
  v21 = *(void (**)(_BYTE *, uint64_t, int *))(v5 + 16);
  v21(v19, v2, a1);
  v21(v16, v1, a1);
  if ((v20 & 1) == 0)
  {
    v39 = *(void (**)(_BYTE *, int *))(v5 + 8);
    v39(v16, a1);
    v39(v19, a1);
    v21(v13, v2, a1);
    v50 = *(_BYTE **)(v3 - 256);
    v21(v50, v1, a1);
    v41 = v2;
    v42 = v50;
    goto LABEL_9;
  }
  v22 = &v19[a1[13]];
  v23 = v22[8];
  v24 = v22[9];
  v25 = v22[10];
  v26 = v22[11];
  v27 = v22[48];
  v28 = *((_QWORD *)v22 + 7);
  *(_QWORD *)(v3 - 168) = *(_QWORD *)v22;
  *(_BYTE *)(v3 - 160) = v23;
  *(_BYTE *)(v3 - 159) = v24;
  *(_BYTE *)(v3 - 158) = v25;
  *(_BYTE *)(v3 - 157) = v26;
  v29 = *((_OWORD *)v22 + 2);
  *(_OWORD *)(v3 - 152) = *((_OWORD *)v22 + 1);
  *(_OWORD *)(v3 - 136) = v29;
  *(_BYTE *)(v3 - 120) = v27;
  *(_QWORD *)(v3 - 112) = v28;
  *(_OWORD *)(v3 - 104) = *((_OWORD *)v22 + 4);
  v30 = &v16[a1[13]];
  v31 = v30[8];
  v32 = v30[9];
  v33 = v30[10];
  v34 = v30[11];
  v35 = v30[48];
  v36 = *((_QWORD *)v30 + 7);
  *(_QWORD *)(v3 - 248) = *(_QWORD *)v30;
  *(_BYTE *)(v3 - 240) = v31;
  *(_BYTE *)(v3 - 239) = v32;
  *(_BYTE *)(v3 - 238) = v33;
  *(_BYTE *)(v3 - 237) = v34;
  v37 = *((_OWORD *)v30 + 2);
  *(_OWORD *)(v3 - 232) = *((_OWORD *)v30 + 1);
  *(_OWORD *)(v3 - 216) = v37;
  *(_BYTE *)(v3 - 200) = v35;
  *(_QWORD *)(v3 - 192) = v36;
  *(_OWORD *)(v3 - 184) = *((_OWORD *)v30 + 4);
  v38 = _s8NewsFeed0B7ContextV2eeoiySbAC_ACtFZ_0(v3 - 168, v3 - 248);
  v39 = *(void (**)(_BYTE *, int *))(v5 + 8);
  v39(v16, a1);
  v39(v19, a1);
  v21(v13, v2, a1);
  v40 = *(_BYTE **)(v3 - 256);
  v21(v40, v1, a1);
  v41 = v2;
  v42 = v40;
  if (!v38)
  {
LABEL_9:
    v39(v42, a1);
    v39(v13, a1);
LABEL_10:
    v48 = *(_BYTE **)(v3 - 264);
    v49 = *(_BYTE **)(v3 - 272);
LABEL_11:
    v21(v49, v41, a1);
    v21(v48, v1, a1);
    goto LABEL_12;
  }
  v43 = a1[14];
  v44 = &v13[v43];
  v45 = *(_QWORD *)&v13[v43 + 8];
  v46 = &v40[v43];
  v47 = v46[1];
  if (!v45)
  {
    swift_bridgeObjectRetain();
    v39(v42, a1);
    v39(v13, a1);
    v48 = *(_BYTE **)(v3 - 264);
    v49 = *(_BYTE **)(v3 - 272);
    if (!v47)
      goto LABEL_16;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!v47)
  {
    swift_bridgeObjectRetain();
    v39(v42, a1);
    v39(v13, a1);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (*v44 == *v46 && v45 == v47)
  {
    swift_bridgeObjectRetain();
    v39(v42, a1);
    v39(v13, a1);
    swift_bridgeObjectRelease();
    v48 = *(_BYTE **)(v3 - 264);
    v49 = *(_BYTE **)(v3 - 272);
LABEL_16:
    v21(v49, v41, a1);
    v21(v48, v1, a1);
LABEL_19:
    v54 = a1[15];
    v55 = *(uint64_t (**)(_BYTE *, _BYTE *))&v49[a1[16]];
    v56 = &v49[v54];
    v57 = &v48[v54];
    swift_retain();
    v51 = v55(v56, v57);
    swift_release();
    goto LABEL_13;
  }
  v53 = sub_1BB874398();
  swift_bridgeObjectRetain();
  v39(v42, a1);
  v39(v13, a1);
  swift_bridgeObjectRelease();
  v49 = *(_BYTE **)(v3 - 272);
  v21(v49, v41, a1);
  v48 = *(_BYTE **)(v3 - 264);
  v21(v48, v1, a1);
  if ((v53 & 1) != 0)
    goto LABEL_19;
LABEL_12:
  v51 = 0;
LABEL_13:
  v39(v48, a1);
  v39(v49, a1);
  return v51 & 1;
}

uint64_t sub_1BA6DA5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  id v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(void **)v9;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_BYTE *)(v8 + 9) = *(_BYTE *)(v9 + 9);
  *(_BYTE *)(v8 + 10) = *(_BYTE *)(v9 + 10);
  *(_BYTE *)(v8 + 11) = *(_BYTE *)(v9 + 11);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  v11 = *(_QWORD *)(v9 + 40) - 1;
  v12 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 >= 3)
  {
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  }
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v13 = *(void **)(v9 + 56);
  *(_QWORD *)(v8 + 56) = v13;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  v14 = (_QWORD *)((v8 + 87) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v9 + 87) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v14 + v18 + 16) & ~v18;
  v20 = ((unint64_t)v15 + v18 + 16) & ~v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v22 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v19, v20, v16);
  v23 = *(_QWORD *)(v17 + 64) + 7;
  v24 = (_QWORD *)((v23 + v19) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v20) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  return a1;
}

uint64_t BlueprintItem<>.feedItem.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86F76C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BA6DA7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = (a1 + *(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v5 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((v5 + 87) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

void type metadata accessor for FeedModel()
{
  JUMPOUT(0x1BCCE5A70);
}

BOOL _s8NewsFeed0B7ContextV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  _BOOL8 result;
  char v12;
  id v13;
  id v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];
  uint64_t v33[3];

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(unsigned __int8 *)(a1 + 10);
  v5 = *(unsigned __int8 *)(a1 + 11);
  v31 = *(_QWORD *)(a1 + 16);
  v26 = *(_QWORD *)(a1 + 40);
  v27 = *(_QWORD *)(a1 + 32);
  v23 = *(unsigned __int8 *)(a1 + 48);
  v21 = *(void **)(a1 + 56);
  v6 = *(unsigned __int8 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 9);
  v8 = *(unsigned __int8 *)(a2 + 10);
  v9 = *(unsigned __int8 *)(a2 + 11);
  v29 = *(_QWORD *)(a1 + 24);
  v30 = *(_QWORD *)(a2 + 16);
  v28 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 40);
  v25 = *(_QWORD *)(a2 + 32);
  v22 = *(unsigned __int8 *)(a2 + 48);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(void **)(a2 + 56);
  v17 = *(_QWORD **)(a1 + 72);
  v18 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD **)(a2 + 72);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
  v10 = sub_1BB8738B8();
  result = 0;
  if ((v10 & 1) != 0 && ((v2 ^ v6) & 1) == 0 && ((v3 ^ v7) & 1) == 0 && ((v4 ^ v8) & 1) == 0 && ((v5 ^ v9) & 1) == 0)
  {
    if ((sub_1BA6EB330(v31, v30) & 1) == 0 || (sub_1BA6C16A0(v29, v28) & 1) == 0)
      return 0;
    v33[0] = v27;
    v33[1] = v26;
    v32[0] = v25;
    v32[1] = v24;
    v12 = _s8NewsFeed0B8PlatformO2eeoiySbAC_ACtFZ_0(v33, v32);
    result = 0;
    if ((v12 & 1) != 0 && ((v23 ^ v22) & 1) == 0)
    {
      if (v21)
      {
        if (!v20)
          return 0;
        sub_1BA49A224(0, &qword_1ED3AB208);
        v13 = v20;
        v14 = v21;
        v15 = sub_1BB8738B8();

        if ((v15 & 1) == 0)
          return 0;
      }
      else if (v20)
      {
        return 0;
      }
      return (sub_1BA6DAC68(v19, v18) & 1) != 0 && sub_1BA6DAAD0(v17, v16);
    }
  }
  return result;
}

BOOL sub_1BA6DAAD0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[5];
  v6 = a2[5];
  v7 = sub_1BA892DC0(a1[4], a2[4]);
  result = 0;
  if ((v7 & 1) != 0 && v5 == v6)
  {
    v9 = 1;
    do
    {
      result = v9 == v2;
      if (v9 == v2)
        break;
      v10 = &a1[2 * v9 + 4];
      v11 = *v10;
      v12 = &a2[2 * v9 + 4];
      v13 = *v12;
      v14 = *(_QWORD *)(*v10 + 16);
      if (v14 != *(_QWORD *)(*v12 + 16))
        break;
      v15 = v10[1];
      v16 = v12[1];
      if (v14)
        v17 = v11 == v13;
      else
        v17 = 1;
      if (!v17)
      {
        v18 = v11 + 48;
        v19 = v13 + 48;
        do
        {
          v21 = *(_BYTE *)(v19 - 8);
          if ((*(_BYTE *)(v18 - 8) & 1) != 0)
          {
            if (!*(_BYTE *)(v19 - 8))
              return 0;
          }
          else
          {
            if (*(_QWORD *)(v18 - 16) != *(_QWORD *)(v19 - 16))
              v21 = 1;
            if ((v21 & 1) != 0)
              return 0;
          }
          if ((*(_BYTE *)(v18 + 8) & 1) != 0)
          {
            if (!*(_BYTE *)(v19 + 8))
              return 0;
          }
          else
          {
            if (*(_QWORD *)v18 == *(_QWORD *)v19)
              v22 = *(_BYTE *)(v19 + 8);
            else
              v22 = 1;
            if ((v22 & 1) != 0)
              return 0;
          }
          if ((*(_BYTE *)(v18 + 24) & 1) != 0)
          {
            if (!*(_BYTE *)(v19 + 24))
              return 0;
          }
          else
          {
            if (*(_QWORD *)(v18 + 16) == *(_QWORD *)(v19 + 16))
              v23 = *(_BYTE *)(v19 + 24);
            else
              v23 = 1;
            if ((v23 & 1) != 0)
              return 0;
          }
          if ((*(_BYTE *)(v18 + 40) & 1) != 0)
          {
            if (!*(_BYTE *)(v19 + 40))
              return 0;
          }
          else
          {
            if (*(_QWORD *)(v18 + 32) == *(_QWORD *)(v19 + 32))
              v20 = *(_BYTE *)(v19 + 40);
            else
              v20 = 1;
            if ((v20 & 1) != 0)
              return 0;
          }
          v19 += 64;
          v18 += 64;
        }
        while (--v14);
      }
      ++v9;
    }
    while (v15 == v16);
  }
  return result;
}

uint64_t sub_1BA6DAC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v46 = *(_BYTE *)(a1 + 96);
    v47 = *(_BYTE *)(a1 + 80);
    v42 = *(_QWORD *)(a1 + 88);
    v43 = *(_QWORD *)(a1 + 72);
    v39 = *(_BYTE *)(a1 + 48);
    v41 = *(_BYTE *)(a1 + 64);
    v44 = *(_QWORD *)(a1 + 56);
    v45 = *(_QWORD *)(a1 + 40);
    v38 = *(_QWORD *)(a2 + 40);
    v5 = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 56);
    v7 = *(_BYTE *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 72);
    v9 = *(_BYTE *)(a2 + 80);
    v10 = *(_QWORD *)(a2 + 88);
    v11 = *(_BYTE *)(a2 + 96);
    if ((sub_1BA892DC0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0)
    {
      v12 = 1;
      v13 = v42;
      v14 = v39;
      v15 = v41;
      v16 = v10;
      v17 = v11;
      v18 = a2 + 32;
      v19 = v9;
      v20 = v8;
      v21 = v7;
      v22 = v6;
      v23 = v5;
      v24 = v38;
      while (1)
      {
        if ((v14 & 1) != 0)
        {
          if ((v23 & 1) == 0)
            return 0;
        }
        else if (v23 & 1 | (v45 != v24))
        {
          return 0;
        }
        if ((v15 & 1) != 0)
        {
          if ((v21 & 1) == 0)
            return 0;
        }
        else if (v21 & 1 | (v44 != v22))
        {
          return 0;
        }
        if ((v47 & 1) != 0)
        {
          if ((v19 & 1) == 0)
            return 0;
        }
        else if (v19 & 1 | (v43 != v20))
        {
          return 0;
        }
        if ((v46 & 1) != 0)
        {
          if ((v17 & 1) == 0)
            return 0;
        }
        else if (v17 & 1 | (v13 != v16))
        {
          return 0;
        }
        if (v12 == v2)
          break;
        v25 = a1 + 32 + 72 * v12;
        v26 = *(_QWORD *)v25;
        v27 = (uint64_t *)(v18 + 72 * v12);
        v28 = *v27;
        v29 = *(_QWORD *)(*(_QWORD *)v25 + 16);
        if (v29 != *(_QWORD *)(*v27 + 16))
          return 0;
        ++v12;
        v45 = *(_QWORD *)(v25 + 8);
        v14 = *(_BYTE *)(v25 + 16);
        v44 = *(_QWORD *)(v25 + 24);
        v15 = *(_BYTE *)(v25 + 32);
        v43 = *(_QWORD *)(v25 + 40);
        v13 = *(_QWORD *)(v25 + 56);
        v46 = *(_BYTE *)(v25 + 64);
        v47 = *(_BYTE *)(v25 + 48);
        v24 = v27[1];
        v23 = *((_BYTE *)v27 + 16);
        v22 = v27[3];
        v21 = *((_BYTE *)v27 + 32);
        v20 = v27[5];
        v19 = *((_BYTE *)v27 + 48);
        v16 = v27[7];
        if (v29)
          v30 = v26 == v28;
        else
          v30 = 1;
        v17 = *((_BYTE *)v27 + 64);
        if (!v30)
        {
          v40 = v17;
          v31 = v26 + 48;
          v32 = v28 + 48;
          do
          {
            v34 = *(_BYTE *)(v32 - 8);
            if ((*(_BYTE *)(v31 - 8) & 1) != 0)
            {
              if (!*(_BYTE *)(v32 - 8))
                return 0;
            }
            else
            {
              if (*(_QWORD *)(v31 - 16) != *(_QWORD *)(v32 - 16))
                v34 = 1;
              if ((v34 & 1) != 0)
                return 0;
            }
            if ((*(_BYTE *)(v31 + 8) & 1) != 0)
            {
              if (!*(_BYTE *)(v32 + 8))
                return 0;
            }
            else
            {
              if (*(_QWORD *)v31 == *(_QWORD *)v32)
                v35 = *(_BYTE *)(v32 + 8);
              else
                v35 = 1;
              if ((v35 & 1) != 0)
                return 0;
            }
            if ((*(_BYTE *)(v31 + 24) & 1) != 0)
            {
              if (!*(_BYTE *)(v32 + 24))
                return 0;
            }
            else
            {
              if (*(_QWORD *)(v31 + 16) == *(_QWORD *)(v32 + 16))
                v36 = *(_BYTE *)(v32 + 24);
              else
                v36 = 1;
              if ((v36 & 1) != 0)
                return 0;
            }
            if ((*(_BYTE *)(v31 + 40) & 1) != 0)
            {
              if (!*(_BYTE *)(v32 + 40))
                return 0;
            }
            else
            {
              if (*(_QWORD *)(v31 + 32) == *(_QWORD *)(v32 + 32))
                v33 = *(_BYTE *)(v32 + 40);
              else
                v33 = 1;
              if ((v33 & 1) != 0)
                return 0;
            }
            v32 += 64;
            v31 += 64;
            --v29;
          }
          while (v29);
          v17 = v40;
        }
      }
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t _s8NewsFeed0B8PlatformO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v3 != 1)
  {
    if (v3 == 2)
    {
      if (v5 == 2)
      {
        sub_1BA6DB13C(*a1, 2);
        v6 = v4;
        v7 = 2;
        goto LABEL_10;
      }
    }
    else if (v3 == 3)
    {
      if (v5 == 3)
      {
        sub_1BA6DB13C(*a1, 3);
        v6 = v4;
        v7 = 3;
LABEL_10:
        sub_1BA6DB13C(v6, v7);
        return 1;
      }
    }
    else if ((unint64_t)(v5 - 1) >= 3)
    {
      if (v3)
      {
        if (!v5)
        {
          v8 = *a2;
          v9 = 0;
          goto LABEL_13;
        }
        if (v2 == v4 && v3 == v5)
        {
          sub_1BA653B2C(*a1, v3);
          sub_1BA653B2C(v2, v3);
          sub_1BA6DB13C(v2, v3);
          v6 = v2;
          v7 = v3;
          goto LABEL_10;
        }
        v11 = sub_1BB874398();
        sub_1BA653B2C(v4, v5);
        sub_1BA653B2C(v2, v3);
        sub_1BA6DB13C(v2, v3);
        sub_1BA6DB13C(v4, v5);
        if ((v11 & 1) == 0)
          return 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BA653B2C(v4, v5);
        sub_1BA653B2C(v2, 0);
        sub_1BA6DB13C(v2, 0);
        sub_1BA6DB13C(v4, v5);
        if (v5)
          goto LABEL_14;
      }
      return 1;
    }
LABEL_12:
    v8 = *a2;
    v9 = a2[1];
LABEL_13:
    sub_1BA653B2C(v8, v9);
    sub_1BA653B2C(v2, v3);
LABEL_14:
    sub_1BA6DB13C(v2, v3);
    sub_1BA6DB13C(v4, v5);
    return 0;
  }
  if (v5 != 1)
    goto LABEL_12;
  sub_1BA6DB13C(*a1, 1);
  sub_1BA6DB13C(v4, 1);
  return v5;
}

uint64_t sub_1BA6DB13C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA6DB154(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA6DB170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  char v20;

  v5 = type metadata accessor for FeedItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, double))(a3 + 16))(a2, a3, v7);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = 0;
    v13 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = *(_QWORD *)(v6 + 72);
    LOBYTE(v15) = 1;
    do
    {
      v16 = v15;
      v17 = v12;
      sub_1BA6DB2D0(v13, (uint64_t)v9);
      FeedItem.layoutDirection.getter((uint64_t)&v19);
      if (!v20)
        v12 = v19;
      v15 = (v20 & v15);
      if ((v20 & 1) == 0 && (v16 & 1) == 0)
      {
        if (v17 != v19)
        {
          swift_bridgeObjectRelease();
          sub_1BA6DB314((uint64_t)v9);
          return 0;
        }
        v15 = 0;
        v12 = v17;
      }
      sub_1BA6DB314((uint64_t)v9);
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    if (v15)
      return sub_1BB86D72C();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1BB86D72C();
  }
  return v12;
}

uint64_t sub_1BA6DB2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6DB314(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA6DB350(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedItems.getter(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

void FeedItem.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10[114];

  v10[1] = a1;
  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(v10[0], (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BA6DB504 + 4 * byte_1BB8E20A6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6DB504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRelease();
  result = sub_1BA6E0CBC(v4, v5);
  v7 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)v7 = v2;
  *(_BYTE *)(v7 + 8) = v3;
  return result;
}

uint64_t sub_1BA6DB9A0()
{
  return sub_1BB872958() & 1;
}

Swift::Void __swiftcall FeedNativeAdRequester.processSection(at:)(Swift::Int at)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  Swift::Int v64;
  __int128 v65[2];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v64 = at;
  v2 = (_QWORD *)*v1;
  v47 = sub_1BB86C8E0();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  v48 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v48 + 64);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v37 - v7;
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v37 - v9;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v37 - v11;
  MEMORY[0x1E0C80A78](v12);
  v51 = (char *)&v37 - v13;
  v52 = sub_1BB871C80();
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v45 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v14;
  MEMORY[0x1E0C80A78](v15);
  v53 = (char *)&v37 - v16;
  sub_1BA4A3FB4(0, &qword_1ED3B0568, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v17);
  v57 = (uint64_t)&v37 - v18;
  v58 = sub_1BB86CBE0();
  v60 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v56 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2[10];
  MEMORY[0x1E0C80A78](v21);
  v22 = v2[11];
  v23 = v2[14];
  v24 = v2[15];
  v67 = v20;
  v68 = v22;
  v69 = v23;
  v70 = v24;
  v25 = sub_1BB86FD0C();
  v63 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v37 - v26;
  v61 = v1;
  v62 = v2;
  v67 = v20;
  v68 = v22;
  v69 = v23;
  v70 = v24;
  sub_1BB871680();
  sub_1BB8716A4();
  sub_1BB86FCB8();
  sub_1BA6DC260();
  if (swift_dynamicCast())
  {
    v40 = v22;
    v41 = v20;
    v42 = v23;
    v39 = v5;
    sub_1BA4CECCC(v65, (uint64_t)&v67);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], v25);
    if ((sub_1BB873168() & 1) != 0)
      goto LABEL_9;
    v28 = v70;
    v29 = v71;
    __swift_project_boxed_opaque_existential_1(&v67, v70);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29) & 1) == 0)
      goto LABEL_9;
    v30 = (_QWORD *)((char *)v61 + *(_QWORD *)(*v61 + 160));
    v31 = v30[4];
    v38 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    v32 = sub_1BB86FCC4();
    v33 = (*(uint64_t (**)(uint64_t))(v31 + 8))(v32);
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
    {
      v38 = v30;
      v34 = v57;
      sub_1BB69201C(&v67, v64, v57);
      v35 = v60;
      v36 = v58;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v34, 1, v58) != 1)
      {
        v64 = (Swift::Int)v27;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v56, v34, v36);
        sub_1BB692190();
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v25);
      sub_1BA502AD0(v34, &qword_1ED3B0568, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
    }
    else
    {
LABEL_9:
      (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v25);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
  }
  else
  {
    v66 = 0;
    memset(v65, 0, sizeof(v65));
    (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v25);
    sub_1BA502AD0((uint64_t)v65, (unint64_t *)&unk_1ED3BA600, (void (*)(uint64_t))sub_1BA6DC260);
  }
}

void sub_1BA6DBFD8()
{
  sub_1BB69246C();
}

void sub_1BA6DBFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);

  v7 = *(_QWORD **)(v6 - 392);
  v8 = v7[3];
  v9 = v7[4];
  *(_QWORD *)(v6 - 200) = v8;
  *(_QWORD *)(v6 - 288) = v9;
  *(_QWORD *)(v6 - 240) = __swift_project_boxed_opaque_existential_1(v7, v8);
  v10 = *(_QWORD *)(v6 - 344);
  sub_1BB86C8D4();
  v11 = v2;
  *(_QWORD *)(v6 - 368) = sub_1BB86C8C8();
  *(_QWORD *)(v6 - 376) = v12;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 328) + 8))(v10, *(_QWORD *)(v6 - 320));
  *(_QWORD *)(v6 - 400) = v0;
  *(_QWORD *)(v6 - 320) = sub_1BB86FCC4();
  *(_QWORD *)(v6 - 328) = v13;
  *(_QWORD *)(v6 - 208) = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 168));
  sub_1BA4C010C(v6 - 128, v6 - 176);
  v14 = v4;
  v15 = *(_QWORD *)(v6 - 336);
  v16 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v15, v3, v11);
  v17 = *(_QWORD *)(v6 - 304);
  sub_1BB692B4C(v1, v17);
  v18 = *(_QWORD *)(v6 - 224);
  v19 = *(_QWORD *)(v6 - 296);
  sub_1BB692B4C(v18, v19);
  v20 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v21 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 312) + 80);
  v22 = (*(_QWORD *)(v6 - 352) + v20 + v21) & ~v21;
  v23 = (*(_QWORD *)(v6 - 384) + v21 + v22) & ~v21;
  v24 = swift_allocObject();
  sub_1BA4CECCC((__int128 *)(v6 - 176), v24 + 16);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 - 360))(v24 + v20, v15, v16);
  sub_1BB692CA8(v17, v24 + v22);
  sub_1BB692CA8(v19, v24 + v23);
  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t (*)(_QWORD *), uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v6 - 288) + 16))(*(_QWORD *)(v6 - 368), *(_QWORD *)(v6 - 376), *(_QWORD *)(v6 - 320), *(_QWORD *)(v6 - 328), *(_QWORD *)(v6 - 208), sub_1BB692CFC, v24, *(_QWORD *)(v6 - 200), *(_QWORD *)(v6 - 288));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v25 = (void (*)(uint64_t))MEMORY[0x1E0D52BF8];
  sub_1BA502AD0(v18, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  sub_1BA502AD0(*(_QWORD *)(v6 - 264), (unint64_t *)&unk_1ED3B0B60, v25);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 256) + 8))(*(_QWORD *)(v6 - 272), v16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 216) + 8))(*(_QWORD *)(v6 - 248), *(_QWORD *)(v6 - 232));
  JUMPOUT(0x1BA6DBECCLL);
}

unint64_t sub_1BA6DC260()
{
  unint64_t result;

  result = qword_1ED3B2608[0];
  if (!qword_1ED3B2608[0])
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1ED3B2608);
  }
  return result;
}

uint64_t sub_1BA6DC2B4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, qword_1ED3BC760, &qword_1ED3B2468, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA6DC310(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BB874218();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t _s8NewsFeed0B8HeadlineV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  char v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  char v47;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  char v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v4 = sub_1BB871B24();
  v71 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v69 = (uint64_t)&v66 - v8;
  sub_1BA6E0F38();
  v70 = v9;
  MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v73);
  v77 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - v13;
  MEMORY[0x1E0C80A78](v15);
  v75 = (uint64_t)&v66 - v16;
  MEMORY[0x1E0C80A78](v17);
  v76 = (uint64_t)&v66 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v66 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (id *)((char *)&v66 - v26);
  MEMORY[0x1E0C80A78](v28);
  v30 = (id *)((char *)&v66 - v29);
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)&v66 - v29, type metadata accessor for FeedHeadline);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v27, type metadata accessor for FeedHeadline);
  }
  else
  {
    v31 = sub_1BB874398();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v30, type metadata accessor for FeedHeadline);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v27, type metadata accessor for FeedHeadline);
    if ((v31 & 1) == 0)
    {
LABEL_18:
      sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FeedHeadline);
      sub_1BA4A2E80((uint64_t)v27, type metadata accessor for FeedHeadline);
      sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v24, type metadata accessor for FeedHeadline);
      sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v21, type metadata accessor for FeedHeadline);
      goto LABEL_19;
    }
  }
  v74 = v14;
  v32 = objc_msgSend(v30[5], sel_title);
  v66 = v4;
  if (v32)
  {
    v33 = v32;
    v67 = sub_1BB8729A0();
    v35 = v34;

  }
  else
  {
    v67 = 0;
    v35 = 0;
  }
  v36 = objc_msgSend(v27[5], sel_title, v66);
  if (!v36)
  {
    if (!v35)
      goto LABEL_24;
    goto LABEL_17;
  }
  v37 = v36;
  v38 = sub_1BB8729A0();
  v40 = v39;

  if (!v35)
  {
    if (!v40)
      goto LABEL_24;
    goto LABEL_17;
  }
  if (!v40)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v14 = v74;
    goto LABEL_18;
  }
  if (v67 == v38 && v35 == v40)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FeedHeadline);
    sub_1BA4A2E80((uint64_t)v27, type metadata accessor for FeedHeadline);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v24, type metadata accessor for FeedHeadline);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v21, type metadata accessor for FeedHeadline);
    v14 = v74;
    goto LABEL_25;
  }
  v61 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80((uint64_t)v27, type metadata accessor for FeedHeadline);
  sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v24, type metadata accessor for FeedHeadline);
  sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v21, type metadata accessor for FeedHeadline);
  v14 = v74;
  if ((v61 & 1) == 0)
  {
LABEL_19:
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FeedHeadline);
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FeedHeadline);
    v41 = v76;
    sub_1BA4C2DD8((uint64_t)a1, v76, type metadata accessor for FeedHeadline);
    v42 = v75;
    sub_1BA4C2DD8((uint64_t)a2, v75, type metadata accessor for FeedHeadline);
LABEL_20:
    sub_1BA4A2E80(v42, type metadata accessor for FeedHeadline);
    sub_1BA4A2E80(v41, type metadata accessor for FeedHeadline);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v14, type metadata accessor for FeedHeadline);
    v43 = (uint64_t)a2;
    v44 = v77;
    sub_1BA4C2DD8(v43, v77, type metadata accessor for FeedHeadline);
LABEL_21:
    sub_1BA4A2E80(v44, type metadata accessor for FeedHeadline);
    v45 = (uint64_t)v14;
    v46 = type metadata accessor for FeedHeadline;
    goto LABEL_22;
  }
LABEL_25:
  v49 = v73;
  v50 = _s8NewsFeed0B8HeadlineV5StateV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v24[*(int *)(v73 + 40)], (unsigned __int8 *)&v21[*(int *)(v73 + 40)]);
  sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FeedHeadline);
  v41 = v76;
  sub_1BA4C2DD8((uint64_t)a1, v76, type metadata accessor for FeedHeadline);
  v42 = v75;
  sub_1BA4C2DD8((uint64_t)a2, v75, type metadata accessor for FeedHeadline);
  if ((v50 & 1) == 0)
    goto LABEL_20;
  v51 = *(_QWORD *)(v41 + 32);
  v52 = *(_QWORD *)(v42 + 32);
  sub_1BA4A2E80(v42, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80(v41, type metadata accessor for FeedHeadline);
  sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v14, type metadata accessor for FeedHeadline);
  v53 = (uint64_t)a2;
  v44 = v77;
  sub_1BA4C2DD8(v53, v77, type metadata accessor for FeedHeadline);
  if (v51 != v52)
    goto LABEL_21;
  v54 = *(int *)(v49 + 44);
  v55 = v44 + v54;
  v56 = v72;
  v57 = v72 + *(int *)(v70 + 48);
  sub_1BA6DCDE8((uint64_t)&v14[v54], v72);
  sub_1BA6DCDE8(v55, v57);
  v58 = v71;
  v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v60 = v66;
  if (v59(v56, 1, v66) == 1)
  {
    sub_1BA4A2E80(v44, type metadata accessor for FeedHeadline);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedHeadline);
    if (v59(v57, 1, v60) == 1)
    {
      sub_1BA5C699C(v56, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
      v47 = 1;
      return v47 & 1;
    }
  }
  else
  {
    v62 = v69;
    sub_1BA6DCDE8(v56, v69);
    if (v59(v57, 1, v60) != 1)
    {
      v63 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v68, v57, v60);
      v64 = v60;
      sub_1BA4A2870(qword_1ED3C4C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], MEMORY[0x1E0D52728]);
      v47 = sub_1BB872958();
      v65 = *(void (**)(char *, uint64_t))(v58 + 8);
      v65(v63, v64);
      sub_1BA4A2E80(v44, type metadata accessor for FeedHeadline);
      sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedHeadline);
      v65((char *)v62, v64);
      sub_1BA5C699C(v56, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
      return v47 & 1;
    }
    sub_1BA4A2E80(v44, type metadata accessor for FeedHeadline);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedHeadline);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v62, v60);
  }
  v46 = (uint64_t (*)(_QWORD))sub_1BA6E0F38;
  v45 = v56;
LABEL_22:
  sub_1BA4A2E80(v45, v46);
  v47 = 0;
  return v47 & 1;
}

uint64_t FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void **a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v16;
  void *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  unsigned __int8 v27;
  _BOOL8 v28;
  int *v29;
  uint64_t result;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  v16 = *a5;
  v17 = *a8;
  v18 = *(_QWORD *)a10;
  v33 = *(_BYTE *)(a10 + 8);
  v19 = (int *)type metadata accessor for FeedHeadline(0);
  *(_OWORD *)(a9 + v19[12]) = xmmword_1BB8832D0;
  v34 = v18;
  if (!a2)
  {
    v20 = a6;
    v21 = objc_msgSend(a3, sel_identifier);
    a1 = sub_1BB8729A0();
    a2 = v22;

    a6 = v20;
  }
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 40) = a3;
  *(_QWORD *)(a9 + 48) = a4;
  v35 = a6;
  sub_1BA6DCDE8(a6, a9 + v19[11]);
  sub_1BA4C2DD8(a7, a9 + v19[10], type metadata accessor for FeedHeadline.State);
  *(_QWORD *)(a9 + v19[14]) = v17;
  *(_BYTE *)(a9 + 56) = v16;
  v23 = v17;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v24 = objc_msgSend(a3, sel_title);
  v28 = 0;
  if (v24)
  {
    v25 = v24;
    sub_1BB8729A0();

    v26 = (void *)sub_1BB872970();
    v27 = objc_msgSend(v26, sel_ne_isNaturallyRTL);
    swift_bridgeObjectRelease();

    if ((v27 & 1) != 0)
      v28 = 1;
  }
  *(_QWORD *)(a9 + 16) = v28;
  *(_BYTE *)(a9 + 24) = 0;
  sub_1BA6DD044(a7, (uint64_t)v17, v34, v33, &v37);

  *(_QWORD *)(a9 + 32) = v37;
  v29 = (int *)type metadata accessor for FeedHeadline.State(0);
  if ((*(_BYTE *)(a7 + v29[7]) & 1) != 0)
  {
    if (*(_BYTE *)(a7 + v29[9]) == 1)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BA4A2E80(a7, type metadata accessor for FeedHeadline.State);
      result = sub_1BA5C699C(v35, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
      v31 = 1;
    }
    else if (*(_BYTE *)(a7 + v29[10]) == 1)
    {
      v32 = objc_msgSend(a3, sel_sourceChannel);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BA4A2E80(a7, type metadata accessor for FeedHeadline.State);
      result = sub_1BA5C699C(v35, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
      v31 = 2;
      if (v32)
        v31 = (uint64_t)v32;
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BA4A2E80(a7, type metadata accessor for FeedHeadline.State);
      result = sub_1BA5C699C(v35, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
      v31 = 2;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1BA4A2E80(a7, type metadata accessor for FeedHeadline.State);
    result = sub_1BA5C699C(v35, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718]);
    v31 = 0;
  }
  *(_QWORD *)(a9 + v19[13]) = v31;
  return result;
}

uint64_t sub_1BA6DCDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_BYTE *initializeWithCopy for FeedHeadline.State(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for SharedItem();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    v7[v9[5]] = v8[v9[5]];
    v13 = v9[6];
    v14 = *(void **)&v8[v13];
    *(_QWORD *)&v7[v13] = v14;
    v15 = v9[7];
    v16 = &v7[v15];
    v23 = &v8[v15];
    v17 = sub_1BB86C67C();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v19 = v14;
    v18(v16, v23, v17);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v20] = a2[v20];
  v21 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v21] = a2[v21];
  return a1;
}

uint64_t destroy for FeedHeadline.State(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for SharedItem();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if (!(_DWORD)result)
  {
    v5 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);

    v6 = v2 + *(int *)(v3 + 28);
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_1BA6DD044@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  uint64_t result;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  swift_getObjectType();
  sub_1BA6DD104((uint64_t *)&v18);
  result = type metadata accessor for FeedHeadline.State(0);
  v11 = (v18 & 0x1000) != 0 || *(unsigned __int8 *)(a1 + *(int *)(result + 32)) - 1 >= 2;
  v12 = v18 | 0x1000;
  if (v11)
    v12 = v18;
  v13 = 0x80000000;
  if (!*(_BYTE *)(a1 + *(int *)(result + 40)))
    v13 = 0x100000000;
  v14 = v12 | v13;
  v15 = (v12 >> 21) & 1;
  if (!a2)
    LODWORD(v15) = 1;
  if ((_DWORD)v15)
    v16 = v14;
  else
    v16 = v14 | 0x200000;
  if ((a4 & 1) != 0)
    v17 = 0;
  else
    v17 = a3;
  *a5 = v16 | v17;
  return result;
}

uint64_t sub_1BA6DD104@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v20 = a1;
  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  if (objc_msgSend(v1, sel_hasVideo, v8))
    v11 = 136;
  else
    v11 = 128;
  if (objc_msgSend(v1, sel_hasThumbnail))
  {
    FCThumbnailAspectRatioForHeadline();
    if (v12 <= 0.9)
    {
      v13 = 260;
    }
    else if (v12 > 1.1)
    {
      v13 = 516;
    }
    else
    {
      v13 = 1028;
    }
    v11 |= v13;
  }
  FCHeadlineProviding.articleThumbnailModel.getter((uint64_t)&v21);
  v14 = v22;
  if (v26 == 1)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (v14 <= 0.9)
    {
      v11 |= 0xC000uLL;
    }
    else
    {
      v15 = 81920;
      if (v14 <= 1.1)
        v15 = 147456;
      v11 |= v15;
    }
  }
  else
  {
    sub_1BA6DD544(v21, *(uint64_t *)&v22, v23, v24, v25, 0);
  }
  v16 = objc_msgSend(v1, sel_routeURL);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, 1, 1, v2);
    goto LABEL_22;
  }
  v17 = v16;
  sub_1BB86C5EC();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
LABEL_22:
    result = sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    goto LABEL_23;
  }
  result = sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v11 |= 0x40000000uLL;
LABEL_23:
  *v20 = v11;
  return result;
}

double FCHeadlineProviding.articleThumbnailModel.getter@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  char v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - v5;
  v7 = objc_msgSend(v1, sel_respondsToSelector_, sel_layeredThumbnailJSON, v4);
  swift_unknownObjectRetain();
  if ((v7 & 1) != 0)
  {
    v8 = objc_msgSend(v1, sel_layeredThumbnailJSON);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1BB8729A0();
      v12 = v11;

      swift_bridgeObjectRetain();
      sub_1BB86BE00();
      v13 = sub_1BB86BE54();
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
      v15 = sub_1BB86DFC0();
      swift_bridgeObjectRelease();
      sub_1BA5C699C((uint64_t)v6, (unint64_t *)&qword_1ED3B0480, v14);
      if ((v15 & 1) == 0
        && (objc_msgSend(v1, sel_respondsToSelector_, sel_layeredThumbnailAspectRatio) & 1) != 0)
      {
        objc_msgSend(v1, sel_layeredThumbnailAspectRatio);
        *(_QWORD *)a1 = v1;
        *(_QWORD *)(a1 + 8) = v16;
        *(_QWORD *)(a1 + 16) = v10;
        *(_QWORD *)(a1 + 24) = v12;
        *(_QWORD *)(a1 + 32) = v1;
        *(_BYTE *)(a1 + 40) = 1;
        swift_unknownObjectRetain();
        return result;
      }
      swift_bridgeObjectRelease();
    }
  }
  *(_QWORD *)a1 = v1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1BA6DD544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  result = swift_unknownObjectRelease();
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void FeedItem.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4C2DD8(v0, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)sub_1BA6DD770 + 4 * byte_1BB8E2008[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA6DD770()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA6E0CBC(v0[5], v0[6]);
  return v1;
}

void sub_1BA6DDA18()
{
  _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
  swift_release();
  JUMPOUT(0x1BA6DD9F0);
}

void sub_1BA6DDA38()
{
  swift_unknownObjectRelease();
  JUMPOUT(0x1BA6DD9F0);
}

void sub_1BA6DDA48()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 736) = v2;
  *(_QWORD *)(v0 + 752) = *(_QWORD *)(v1 + 160);
  v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 672) = v3;
  v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 704) = v4;
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 640) = v6;
  swift_bridgeObjectRetain();
  sub_1BA93EBE8(v0 + 592);
  JUMPOUT(0x1BA6DD9F0);
}

void sub_1BA6DDA94()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1BA6E0CBC(v1, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BA6DD9F0);
}

void sub_1BA6DDAC8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA5193C4(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRetain();
  JUMPOUT(0x1BA6DD9ECLL);
}

void sub_1BA6DDAF8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v1 + 192);
  *(_OWORD *)(v0 + 800) = v2;
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 832) = *(_QWORD *)(v1 + 240);
  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 736) = v3;
  v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 768) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 672) = v5;
  v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 704) = v6;
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 608) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 640) = v8;
  swift_bridgeObjectRetain();
  sub_1BA93EC1C(v0 + 592);
  JUMPOUT(0x1BA6DD9F0);
}

uint64_t type metadata accessor for FeedBannerAd()
{
  uint64_t result;

  result = qword_1ED3D35E8;
  if (!qword_1ED3D35E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FeedWebEmbed()
{
  uint64_t result;

  result = qword_1ED3B2EC0;
  if (!qword_1ED3B2EC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FeedCustomItem()
{
  uint64_t result;

  result = qword_1ED3C5030;
  if (!qword_1ED3C5030)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FeedPuzzleStatistic()
{
  uint64_t result;

  result = qword_1ED3C0A18;
  if (!qword_1ED3C0A18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FeedItem(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B2A10);
}

uint64_t type metadata accessor for FeedEngagementBanner()
{
  uint64_t result;

  result = qword_1ED3BB660;
  if (!qword_1ED3BB660)
    return swift_getSingletonMetadata();
  return result;
}

void destroy for FeedItem(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) < 0x11uLL)
        return;
      goto LABEL_71;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) < 0x11uLL)
        return;
      goto LABEL_71;
    case 2u:
      swift_bridgeObjectRelease();
      v2 = type metadata accessor for FeedBannerAd();
      v3 = a1 + *(int *)(v2 + 20);
      v4 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v5 = (int *)type metadata accessor for FeedHeadline(0);
      v6 = a1 + v5[10];
      v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v8 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      {
        v9 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

        v10 = v7 + *(int *)(v8 + 28);
        v11 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      }
      v12 = a1 + v5[11];
      v13 = sub_1BB871B24();
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      if (*(_QWORD *)(a1 + v5[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v5[13]) >= 3uLL)
        swift_unknownObjectRelease();

      return;
    case 4u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (int *)type metadata accessor for FeedWebEmbed();
      v16 = a1 + v15[8];
      v17 = sub_1BB86C67C();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v19(v16, v17);
      v20 = a1 + v15[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17))
        v19(v20, v17);
      swift_release();
      swift_release();
      v21 = a1 + v15[12];
      v22 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v22 - 1) + 48))(v21, 1, v22))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v23 = v22[10];
        v24 = v21 + v23 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v25 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
        {
          v26 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);

          v19(v24 + *(int *)(v25 + 28), v17);
        }
        v27 = v21 + v22[11];
        v28 = sub_1BB871B24();
        v29 = *(_QWORD *)(v28 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        if (*(_QWORD *)(v21 + v22[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v21 + v22[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v30 = a1 + v15[13];
      v31 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
        return;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v32 = type metadata accessor for GenericDataVisualization();
      v19(v30 + *(int *)(v32 + 20), v17);
      goto LABEL_71;
    case 5u:
      goto LABEL_36;
    case 6u:
      v33 = *(unsigned __int8 *)(a1 + 281);
      if (v33 == 2)
        goto LABEL_40;
      if (v33 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v41 = *(void **)(a1 + 144);
        if (!v41)
          return;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 272) < 0x11uLL)
          return;
LABEL_71:
        swift_bridgeObjectRelease();
        return;
      }
      if (*(_BYTE *)(a1 + 281))
        return;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
        goto LABEL_71;
      return;
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 88) == 1)
        return;
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a1 + 120))
        return;
      v34 = a1 + 96;
      goto LABEL_62;
    case 8u:
      swift_bridgeObjectRelease();
      v35 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v35 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v37 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v36, 1, v37))
      {
        v38 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v36, v38);
      }
      goto LABEL_71;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56))
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      if (*(_QWORD *)(a1 + 96))
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      if (!*(_QWORD *)(a1 + 136))
        return;
      v34 = a1 + 112;
      goto LABEL_62;
    case 0xAu:
      swift_bridgeObjectRelease();
      v2 = type metadata accessor for FeedEngagementBanner();
      v3 = a1 + *(int *)(v2 + 20);
      v4 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      if (*(_QWORD *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL)
        return;
      goto LABEL_71;
    case 0xBu:
LABEL_55:
      swift_release();
      return;
    case 0xCu:
      goto LABEL_65;
    case 0xDu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      if (!*(_QWORD *)(a1 + 152))
        return;
      v34 = a1 + 128;
LABEL_62:
      __swift_destroy_boxed_opaque_existential_1(v34);
      return;
    case 0xEu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_65:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    case 0xFu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_90;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v43 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v40, 1, v43))
            {
              v44 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v40, v44);
            }
          }
          v45 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v46 = v40 + *(int *)(v45 + 20);
          v47 = swift_getEnumCaseMultiPayload();
          if (v47 == 5 || v47 == 4)
          {
            v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v46, 1, v48))
            {
              v49 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v46, v49);
            }
          }
          v40 += *(int *)(v45 + 24);
LABEL_90:
          v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
          {
            v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v40, 1, v51))goto LABEL_103;
          }
          return;
        case 2u:
          v52 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v40, 1, v52))
            return;
          v53 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v40, v53);
          v54 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v55 = v40 + *(int *)(v54 + 24);
          swift_bridgeObjectRelease();
          v56 = *(_QWORD *)(v55 + 24);
          if (v56 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v55 + 16), v56);
          goto LABEL_71;
        case 3u:
          v57 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v58 = v40 + *(int *)(v57 + 24);
          v59 = type metadata accessor for PuzzleStreak();
          v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48);
          if (!v60(v58, 1, v59))
          {
            v61 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v58, v61);
          }
          v40 += *(int *)(v57 + 28);
          if (v60(v40, 1, v59))
            return;
LABEL_103:
          v62 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v40, v62);
          return;
        default:
          return;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
        goto LABEL_71;
      return;
    default:
      return;
  }
}

char *initializeWithCopy for FeedItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  int *v61;
  unsigned int (*v62)(char *, uint64_t, int *);
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  __int128 v70;
  int v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  _QWORD *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  __int128 v144;
  _OWORD *v145;
  _OWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;
  __int128 v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  int *v169;
  unsigned int (*v170)(char *, uint64_t, int *);
  uint64_t v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t);
  id v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  _OWORD *v188;
  _OWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  __int128 v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _OWORD *v203;
  _OWORD *v204;
  __int128 v205;
  void *v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  id v210;
  id v211;
  __int128 v212;
  uint64_t v213;
  void *v214;
  id v215;
  __int128 v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  id v220;
  _QWORD *v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  id v228;
  _QWORD *v229;
  unint64_t v230;
  void *v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t v235;
  id v236;
  id v237;
  __int128 v238;
  uint64_t v239;
  uint64_t v240;
  void *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  id v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  unint64_t v255;
  uint64_t v256;
  unint64_t v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  id v265;
  _QWORD *v266;
  unint64_t v267;
  uint64_t v268;
  void *v269;
  void (*v270)(char *, _QWORD, uint64_t, int *);
  id v271;
  int *v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int EnumCaseMultiPayload;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  __int128 v285;
  char *result;
  uint64_t v287;
  char *v288;
  int *v289;
  uint64_t v290;
  int *v291;
  char *v292;
  uint64_t v293;
  int *v294;
  char *__dst;
  char *__dsta;
  char *__dstb;
  _QWORD *v298;
  int *v299;
  char *v300;
  void (*v301)(char *, char *, uint64_t);
  uint64_t v302;
  uint64_t v303;
  char *v304;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v7;
      a1[32] = a2[32];
      v8 = a2 + 40;
      v9 = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      if (v9 >= 0x11)
      {
        *((_QWORD *)a1 + 5) = *v8;
        *((_QWORD *)a1 + 6) = v9;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v8;
      }
      goto LABEL_140;
    case 1u:
      v47 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v47;
      v48 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v48;
      a1[32] = a2[32];
      v49 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v49;
      v50 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v50;
      v51 = a2 + 72;
      v52 = *((_QWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52 >= 0x11)
      {
        *((_QWORD *)a1 + 9) = *v51;
        *((_QWORD *)a1 + 10) = v52;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v51;
      }
      goto LABEL_140;
    case 2u:
      v10 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v10;
      v11 = (int *)type metadata accessor for FeedBannerAd();
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_1BB8721C0();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(_QWORD *)&a1[v11[6]] = *(_QWORD *)&a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[8] = v19[8];
      v20 = v11[8];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *((_QWORD *)v22 + 1);
      if (v23 >= 0x11)
        goto LABEL_37;
      *(_OWORD *)v21 = *(_OWORD *)v22;
      goto LABEL_140;
    case 3u:
      v53 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v53;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      v54 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v54;
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      a1[56] = a2[56];
      v299 = (int *)type metadata accessor for FeedHeadline(0);
      v55 = v299[10];
      v56 = &a1[v55];
      v57 = &a2[v55];
      *v56 = a2[v55];
      v56[1] = a2[v55 + 1];
      v58 = (int *)type metadata accessor for FeedHeadline.State(0);
      v59 = v58[6];
      __dst = &v56[v59];
      v60 = &v57[v59];
      v61 = (int *)type metadata accessor for SharedItem();
      v293 = *((_QWORD *)v61 - 1);
      v62 = *(unsigned int (**)(char *, uint64_t, int *))(v293 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v62(v60, 1, v61))
      {
        v63 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v173 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(__dst, v60, v173);
        __dst[v61[5]] = v60[v61[5]];
        v174 = v61[6];
        v175 = *(void **)&v60[v174];
        *(_QWORD *)&__dst[v174] = v175;
        v176 = v61[7];
        v304 = &__dst[v176];
        v292 = &v60[v176];
        v177 = sub_1BB86C67C();
        v178 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
        v179 = v175;
        v178(v304, v292, v177);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v293 + 56))(__dst, 0, 1, v61);
      }
      v56[v58[7]] = v57[v58[7]];
      v56[v58[8]] = v57[v58[8]];
      v56[v58[9]] = v57[v58[9]];
      v56[v58[10]] = v57[v58[10]];
      v180 = v299[11];
      v181 = &a1[v180];
      v182 = &a2[v180];
      v183 = sub_1BB871B24();
      v184 = *(_QWORD *)(v183 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v182, 1, v183))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v181, v182, v183);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v181, 0, 1, v183);
      }
      v192 = v299[12];
      v193 = &a1[v192];
      v194 = &a2[v192];
      v195 = *((_QWORD *)v194 + 1);
      if (v195 >= 0x11)
      {
        *(_QWORD *)v193 = *(_QWORD *)v194;
        *((_QWORD *)v193 + 1) = v195;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v193 = *(_OWORD *)v194;
      }
      v196 = v299[13];
      v197 = *(_QWORD *)&a2[v196];
      if (v197 >= 2)
      {
        if (v197 == 2)
        {
          *(_QWORD *)&a1[v196] = 2;
        }
        else
        {
          *(_QWORD *)&a1[v196] = v197;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&a1[v196] = v197;
      }
      v213 = v299[14];
      v214 = *(void **)&a2[v213];
      *(_QWORD *)&a1[v213] = v214;
      v215 = v214;
      goto LABEL_140;
    case 4u:
      v24 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v24;
      a1[16] = a2[16];
      v25 = a2 + 24;
      v26 = *((_QWORD *)a2 + 4);
      if (v26 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v25;
        *((_QWORD *)a1 + 4) = v26;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v25;
      }
      v115 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v115;
      v116 = (int *)type metadata accessor for FeedWebEmbed();
      v117 = v116[8];
      v118 = &a1[v117];
      v119 = &a2[v117];
      v120 = sub_1BB86C67C();
      v121 = *(_QWORD *)(v120 - 8);
      v122 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
      swift_bridgeObjectRetain();
      v122(v118, v119, v120);
      v123 = v116[9];
      v124 = &a1[v123];
      v125 = &a2[v123];
      v303 = v120;
      v301 = v122;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(&a2[v123], 1, v120))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      }
      else
      {
        v122(v124, v125, v120);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v124, 0, 1, v120);
      }
      *(_QWORD *)&a1[v116[10]] = *(_QWORD *)&a2[v116[10]];
      *(_QWORD *)&a1[v116[11]] = *(_QWORD *)&a2[v116[11]];
      v149 = v116[12];
      v150 = &a1[v149];
      v151 = &a2[v149];
      v152 = type metadata accessor for FeedHeadline(0);
      v153 = *(_QWORD *)(v152 - 8);
      v154 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48);
      swift_retain();
      swift_retain();
      if (v154(v151, 1, v152))
      {
        sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
      }
      else
      {
        v290 = v153;
        v291 = (int *)v152;
        v294 = v116;
        __dsta = v151;
        v161 = *((_QWORD *)v151 + 1);
        *(_QWORD *)v150 = *(_QWORD *)v151;
        *((_QWORD *)v150 + 1) = v161;
        *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
        v150[24] = v151[24];
        v162 = *((_QWORD *)v151 + 5);
        *((_QWORD *)v150 + 4) = *((_QWORD *)v151 + 4);
        *((_QWORD *)v150 + 5) = v162;
        *((_QWORD *)v150 + 6) = *((_QWORD *)v151 + 6);
        v150[56] = v151[56];
        v163 = *(int *)(v152 + 40);
        v164 = &v150[v163];
        v165 = &v151[v163];
        *v164 = *v165;
        v164[1] = v165[1];
        v166 = type metadata accessor for FeedHeadline.State(0);
        v167 = *(int *)(v166 + 24);
        v288 = &v164[v167];
        v289 = (int *)v166;
        v168 = &v165[v167];
        v169 = (int *)type metadata accessor for SharedItem();
        v287 = *((_QWORD *)v169 - 1);
        v170 = *(unsigned int (**)(char *, uint64_t, int *))(v287 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v170(v168, 1, v169))
        {
          v171 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v288, v168, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
        }
        else
        {
          v239 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(v288, v168, v239);
          v288[v169[5]] = v168[v169[5]];
          v240 = v169[6];
          v241 = *(void **)&v168[v240];
          *(_QWORD *)&v288[v240] = v241;
          v242 = v169[7];
          v243 = &v288[v242];
          v244 = &v168[v242];
          v245 = v241;
          v301(v243, v244, v303);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v287 + 56))(v288, 0, 1, v169);
        }
        v164[v289[7]] = v165[v289[7]];
        v164[v289[8]] = v165[v289[8]];
        v164[v289[9]] = v165[v289[9]];
        v164[v289[10]] = v165[v289[10]];
        v246 = v291[11];
        v247 = &v150[v246];
        v248 = &__dsta[v246];
        v249 = sub_1BB871B24();
        v250 = *(_QWORD *)(v249 - 8);
        v116 = v294;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v250 + 48))(v248, 1, v249))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v247, v248, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v247, v248, v249);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v247, 0, 1, v249);
        }
        v252 = v291[12];
        v253 = &v150[v252];
        v254 = &__dsta[v252];
        v255 = *((_QWORD *)v254 + 1);
        if (v255 >= 0x11)
        {
          *(_QWORD *)v253 = *(_QWORD *)v254;
          *((_QWORD *)v253 + 1) = v255;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v253 = *(_OWORD *)v254;
        }
        v256 = v291[13];
        v257 = *(_QWORD *)&__dsta[v256];
        if (v257 >= 2)
        {
          if (v257 == 2)
          {
            *(_QWORD *)&v150[v256] = 2;
          }
          else
          {
            *(_QWORD *)&v150[v256] = v257;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v150[v256] = v257;
        }
        v268 = v291[14];
        v269 = *(void **)&__dsta[v268];
        *(_QWORD *)&v150[v268] = v269;
        v270 = *(void (**)(char *, _QWORD, uint64_t, int *))(v290 + 56);
        v271 = v269;
        v270(v150, 0, 1, v291);
      }
      v272 = v116;
      v273 = v116[13];
      v274 = &a1[v273];
      v275 = &a2[v273];
      v276 = type metadata accessor for WebEmbedDataVisualization();
      v277 = *(_QWORD *)(v276 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v277 + 48))(v275, 1, v276))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v280 = *(_QWORD *)v275;
        if (EnumCaseMultiPayload == 1)
        {
          v281 = *((_QWORD *)v275 + 1);
          *(_QWORD *)v274 = v280;
          *((_QWORD *)v274 + 1) = v281;
          v282 = type metadata accessor for GenericDataVisualization();
          v283 = *(int *)(v282 + 20);
          __dstb = &v274[v283];
          v284 = &v275[v283];
          swift_bridgeObjectRetain();
          v301(__dstb, v284, v303);
          *(_QWORD *)&v274[*(int *)(v282 + 24)] = *(_QWORD *)&v275[*(int *)(v282 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v274 = v280;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v274, 0, 1, v276);
      }
      a1[v272[14]] = a2[v272[14]];
      goto LABEL_140;
    case 5u:
      v64 = *(void **)a2;
      v65 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v65;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v66 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v66;
      a1[64] = a2[64];
      v67 = *((_QWORD *)a2 + 10);
      v68 = v64;
      swift_bridgeObjectRetain();
      v69 = v66;
      if (v67 == 1)
      {
        v70 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v70;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v67;
        v128 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v128;
        v130 = (void *)*((_QWORD *)a2 + 13);
        v129 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v130;
        *((_QWORD *)a1 + 14) = v129;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v131 = v130;
      }
      v132 = a2 + 120;
      v133 = *((_QWORD *)a2 + 16);
      if (v133 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v132;
        *((_QWORD *)a1 + 16) = v133;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v132;
      }
      a1[136] = a2[136];
      goto LABEL_140;
    case 6u:
      v71 = a2[281];
      if (v71 == 2)
      {
        v199 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v199;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v200 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v200;
        v201 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v201;
        v202 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v202 != 1)
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = v202;
          v223 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v223)
          {
            v224 = *((_QWORD *)a2 + 16);
            *((_QWORD *)a1 + 15) = v223;
            *((_QWORD *)a1 + 16) = v224;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v223 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v223);
            *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
          }
          else
          {
            v285 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v285;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          a1[144] = a2[144];
          goto LABEL_139;
        }
        v203 = a1 + 80;
        v204 = a2 + 80;
        v205 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v205;
        a1[144] = a2[144];
LABEL_124:
        v261 = v204[1];
        *v203 = *v204;
        v203[1] = v261;
        goto LABEL_139;
      }
      if (v71 != 1)
      {
        v206 = *(void **)a2;
        v207 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v207;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v208 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v208;
        a1[64] = a2[64];
        v209 = *((_QWORD *)a2 + 10);
        v210 = v206;
        swift_bridgeObjectRetain();
        v211 = v208;
        if (v209 == 1)
        {
          v212 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v212;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v209;
          v225 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v225;
          v227 = (void *)*((_QWORD *)a2 + 13);
          v226 = *((_QWORD *)a2 + 14);
          *((_QWORD *)a1 + 13) = v227;
          *((_QWORD *)a1 + 14) = v226;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v228 = v227;
        }
        v229 = a2 + 120;
        v230 = *((_QWORD *)a2 + 16);
        if (v230 >= 0x11)
        {
          *((_QWORD *)a1 + 15) = *v229;
          *((_QWORD *)a1 + 16) = v230;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v229;
        }
        a1[136] = a2[136];
        goto LABEL_139;
      }
      v72 = *(void **)a2;
      v73 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v73;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v74 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v74;
      a1[64] = a2[64];
      v75 = *((_QWORD *)a2 + 10);
      v76 = v72;
      swift_bridgeObjectRetain();
      v77 = v74;
      if (v75 == 1)
      {
        v78 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v78;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v75;
        v217 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v217;
        v219 = (void *)*((_QWORD *)a2 + 13);
        v218 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v219;
        *((_QWORD *)a1 + 14) = v218;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v220 = v219;
      }
      v221 = a2 + 120;
      v222 = *((_QWORD *)a2 + 16);
      if (v222 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v221;
        *((_QWORD *)a1 + 16) = v222;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v221;
      }
      v204 = a2 + 144;
      v231 = (void *)*((_QWORD *)a2 + 18);
      a1[136] = a2[136];
      if (!v231)
      {
        v203 = a1 + 144;
        v258 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v258;
        *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
        v259 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v259;
        v260 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v260;
        goto LABEL_124;
      }
      v232 = *((_QWORD *)a2 + 19);
      v233 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 18) = v231;
      *((_QWORD *)a1 + 19) = v232;
      *((_QWORD *)a1 + 20) = v233;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      a1[184] = a2[184];
      v234 = (void *)*((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v234;
      a1[208] = a2[208];
      v235 = *((_QWORD *)a2 + 28);
      v236 = v231;
      swift_bridgeObjectRetain();
      v237 = v234;
      if (v235 == 1)
      {
        v238 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v238;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
        *((_QWORD *)a1 + 28) = v235;
        v262 = *((_QWORD *)a2 + 30);
        *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
        *((_QWORD *)a1 + 30) = v262;
        v264 = (void *)*((_QWORD *)a2 + 31);
        v263 = *((_QWORD *)a2 + 32);
        *((_QWORD *)a1 + 31) = v264;
        *((_QWORD *)a1 + 32) = v263;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v265 = v264;
      }
      v266 = a2 + 264;
      v267 = *((_QWORD *)a2 + 34);
      if (v267 >= 0x11)
      {
        *((_QWORD *)a1 + 33) = *v266;
        *((_QWORD *)a1 + 34) = v267;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v266;
      }
      a1[280] = a2[280];
LABEL_139:
      a1[281] = v71;
LABEL_140:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 7u:
      v79 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v79;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v80 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v80;
      v81 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v81;
      v82 = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82 == 1)
      {
        v83 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v83;
        a1[144] = a2[144];
        v84 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v84;
      }
      else
      {
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v82;
        v134 = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        if (v134)
        {
          v135 = *((_QWORD *)a2 + 16);
          *((_QWORD *)a1 + 15) = v134;
          *((_QWORD *)a1 + 16) = v135;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v134 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v134);
          *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        }
        else
        {
          v216 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v216;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        a1[144] = a2[144];
      }
      goto LABEL_140;
    case 8u:
      v85 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v85;
      v86 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v87 = &a1[v86];
      v88 = &a2[v86];
      v89 = *(_QWORD *)&a2[v86 + 8];
      *(_QWORD *)v87 = *(_QWORD *)&a2[v86];
      *((_QWORD *)v87 + 1) = v89;
      v90 = *(_QWORD *)&a2[v86 + 24];
      *((_QWORD *)v87 + 2) = *(_QWORD *)&a2[v86 + 16];
      *((_QWORD *)v87 + 3) = v90;
      v91 = type metadata accessor for FormatCustomItem.Resolved();
      v92 = *(int *)(v91 + 24);
      v300 = &v87[v92];
      v302 = v91;
      v93 = &v88[v92];
      v94 = type metadata accessor for FormatCustomItem.Action();
      v95 = *(_QWORD *)(v94 - 8);
      v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v96(v93, 1, v94))
      {
        sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v300, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        v186 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v300, v93, v186);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v300, 0, 1, v94);
      }
      *(_QWORD *)&v87[*(int *)(v302 + 28)] = *(_QWORD *)&v88[*(int *)(v302 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 9u:
      v27 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v27;
      v28 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v28;
      v29 = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29)
      {
        v30 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = v29;
        *((_QWORD *)a1 + 8) = v30;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v29);
      }
      else
      {
        v144 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v144;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      }
      v145 = a1 + 72;
      v146 = a2 + 72;
      v147 = *((_QWORD *)a2 + 12);
      if (v147)
      {
        v148 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = v147;
        *((_QWORD *)a1 + 13) = v148;
        (**(void (***)(_OWORD *, _OWORD *))(v147 - 8))(v145, v146);
      }
      else
      {
        v156 = *(_OWORD *)(a2 + 88);
        *v145 = *v146;
        *(_OWORD *)(a1 + 88) = v156;
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      }
      v157 = a1 + 112;
      v158 = a2 + 112;
      v159 = *((_QWORD *)a2 + 17);
      if (v159)
      {
        v160 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = v159;
        *((_QWORD *)a1 + 18) = v160;
        (**(void (***)(_OWORD *, _OWORD *))(v159 - 8))(v157, v158);
      }
      else
      {
        v172 = *((_OWORD *)a2 + 8);
        *v157 = *v158;
        *((_OWORD *)a1 + 8) = v172;
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      }
      goto LABEL_140;
    case 0xAu:
      v98 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v98;
      v99 = (int *)type metadata accessor for FeedEngagementBanner();
      v100 = v99[5];
      v101 = &a1[v100];
      v102 = &a2[v100];
      v103 = sub_1BB86EDAC();
      v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
      swift_bridgeObjectRetain();
      v104(v101, v102, v103);
      *(_QWORD *)&a1[v99[6]] = *(_QWORD *)&a2[v99[6]];
      v105 = v99[7];
      v106 = &a1[v105];
      v107 = &a2[v105];
      *(_QWORD *)v106 = *(_QWORD *)v107;
      v106[8] = v107[8];
      v108 = v99[8];
      v21 = &a1[v108];
      v22 = &a2[v108];
      v23 = *((_QWORD *)v22 + 1);
      if (v23 >= 0x11)
      {
LABEL_37:
        *(_QWORD *)v21 = *(_QWORD *)v22;
        *((_QWORD *)v21 + 1) = v23;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      goto LABEL_140;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      goto LABEL_140;
    case 0xCu:
      v31 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v31;
      v32 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v32;
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_140;
    case 0xDu:
      v109 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v109;
      a1[16] = a2[16];
      v110 = a2 + 24;
      v111 = *((_QWORD *)a2 + 4);
      if (v111 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v110;
        *((_QWORD *)a1 + 4) = v111;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v110;
      }
      v136 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v136;
      v137 = (void *)*((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v137;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v138 = *((_QWORD *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v139 = v137;
      swift_bridgeObjectRetain();
      if (v138)
      {
        v140 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = v138;
        *((_QWORD *)a1 + 15) = v140;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v138 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v138);
      }
      else
      {
        v187 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v187;
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      }
      v188 = a1 + 128;
      v189 = a2 + 128;
      v190 = *((_QWORD *)a2 + 19);
      if (v190)
      {
        v191 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = v190;
        *((_QWORD *)a1 + 20) = v191;
        (**(void (***)(_OWORD *, _OWORD *))(v190 - 8))(v188, v189);
      }
      else
      {
        v198 = *((_OWORD *)a2 + 9);
        *v188 = *v189;
        *((_OWORD *)a1 + 9) = v198;
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      }
      goto LABEL_140;
    case 0xEu:
      v33 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v33;
      a1[16] = a2[16];
      v34 = a2 + 24;
      v35 = *((_QWORD *)a2 + 4);
      if (v35 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v34;
        *((_QWORD *)a1 + 4) = v35;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v34;
      }
      v127 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v127;
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_140;
    case 0xFu:
      v112 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v112;
      a1[16] = a2[16];
      v113 = a2 + 24;
      v114 = *((_QWORD *)a2 + 4);
      if (v114 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v113;
        *((_QWORD *)a1 + 4) = v114;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v113;
      }
      v141 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v141;
      v142 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v142] = *(_QWORD *)&a2[v142];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v143 = (char *)&loc_1BA6DF2F0 + 4 * word_1BB8E2160[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v36 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v36;
      v37 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v37;
      v38 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v38;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      v39 = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = v39;
      v40 = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 12) = v40;
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      a1[112] = a2[112];
      v41 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v41;
      a1[136] = a2[136];
      v42 = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 19) = v42;
      v43 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v43;
      a1[184] = a2[184];
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      v44 = *((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v44;
      a1[224] = a2[224];
      v45 = *((_QWORD *)a2 + 27);
      *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
      *((_QWORD *)a1 + 27) = v45;
      v298 = a2 + 232;
      v46 = *((_QWORD *)a2 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46 >= 0x11)
      {
        *((_QWORD *)a1 + 29) = *v298;
        *((_QWORD *)a1 + 30) = v46;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)v298;
      }
      goto LABEL_140;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t type metadata accessor for FeedHeadline(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B2D48);
}

uint64_t initializeWithCopy for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  unsigned int (*v14)(char *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v40;
  uint64_t v41;
  char *__dst;
  int *v43;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = a3[10];
  v8 = (_BYTE *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_BYTE *)(a2 + v7);
  v8[1] = *(_BYTE *)(a2 + v7 + 1);
  v10 = type metadata accessor for FeedHeadline.State(0);
  v11 = *(int *)(v10 + 24);
  __dst = &v8[v11];
  v43 = (int *)v10;
  v12 = (char *)(v9 + v11);
  v13 = (int *)type metadata accessor for SharedItem();
  v41 = *((_QWORD *)v13 - 1);
  v14 = *(unsigned int (**)(char *, uint64_t, int *))(v41 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v14(v12, 1, v13))
  {
    v15 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(__dst, v12, v16);
    __dst[v13[5]] = v12[v13[5]];
    v17 = v13[6];
    v18 = *(void **)&v12[v17];
    *(_QWORD *)&__dst[v17] = v18;
    v19 = v13[7];
    v40 = &__dst[v19];
    v20 = &v12[v19];
    v21 = sub_1BB86C67C();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v23 = v18;
    v22(v40, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v41 + 56))(__dst, 0, 1, v13);
  }
  v8[v43[7]] = *(_BYTE *)(v9 + v43[7]);
  v8[v43[8]] = *(_BYTE *)(v9 + v43[8]);
  v8[v43[9]] = *(_BYTE *)(v9 + v43[9]);
  v8[v43[10]] = *(_BYTE *)(v9 + v43[10]);
  v24 = a3[11];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = sub_1BB871B24();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[12];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  if (v33 >= 0x11)
  {
    *v31 = *v32;
    v31[1] = v33;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  v34 = a3[13];
  v35 = *(_QWORD *)(a2 + v34);
  if (v35 >= 2)
  {
    if (v35 == 2)
    {
      *(_QWORD *)(a1 + v34) = 2;
    }
    else
    {
      *(_QWORD *)(a1 + v34) = v35;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)(a1 + v34) = v35;
  }
  v36 = a3[14];
  v37 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v38 = v37;
  return a1;
}

uint64_t type metadata accessor for FeedItem.SharedState(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3BC8A8);
}

void destroy for FeedHeadline(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + a2[10];
  v5 = v4 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v6 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);

    v8 = v5 + *(int *)(v6 + 28);
    v9 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[11];
  v11 = sub_1BB871B24();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  if (*(_QWORD *)(a1 + a2[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[13]) >= 3uLL)
    swift_unknownObjectRelease();

}

uint64_t type metadata accessor for FeedHeadline.State(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3BCA70);
}

uint64_t type metadata accessor for SharedItem()
{
  uint64_t result;

  result = qword_1ED3D4990;
  if (!qword_1ED3D4990)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t getEnumTagSinglePayload for SharedItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA6E0CBC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

char *initializeWithCopy for FeedItem.SharedState(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;

  v6 = (int *)type metadata accessor for SharedItem();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    a1[v6[5]] = a2[v6[5]];
    v9 = v6[6];
    v10 = *(void **)&a2[v9];
    *(_QWORD *)&a1[v9] = v10;
    v11 = v6[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1BB86C67C();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v10;
    v15(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t _s8NewsFeed0B8HeadlineV5StateV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int *v4;
  char v5;

  if (*a1 == *a2
    && a1[1] == a2[1]
    && (v4 = (int *)type metadata accessor for FeedHeadline.State(0),
        (_s8NewsFeed0B4ItemO11SharedStateO2eeoiySbAE_AEtFZ_0((uint64_t)&a1[v4[6]], (uint64_t)&a2[v4[6]]) & 1) != 0)
    && a1[v4[7]] == a2[v4[7]]
    && a1[v4[8]] == a2[v4[8]]
    && a1[v4[9]] == a2[v4[9]])
  {
    v5 = a1[v4[10]] ^ a2[v4[10]] ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t destroy for FeedItem.SharedState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for SharedItem();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

    v5 = a1 + *(int *)(v2 + 28);
    v6 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

void sub_1BA6E0F38()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C4CA8)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C4CA8);
  }
}

uint64_t _s8NewsFeed0B4ItemO11SharedStateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v23;

  v4 = type metadata accessor for SharedItem();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for FeedItem.SharedState(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6E11CC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v16[*(int *)(v17 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v16, type metadata accessor for FeedItem.SharedState);
  sub_1BA4C2DD8(a2, v18, type metadata accessor for FeedItem.SharedState);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v16, 1, v4) == 1)
  {
    v20 = 1;
    if (v19(v18, 1, v4) == 1)
      goto LABEL_8;
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v13, type metadata accessor for FeedItem.SharedState);
    if (v19(v18, 1, v4) != 1)
    {
      sub_1BA5193C4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      sub_1BA5193C4(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      v20 = _s8NewsFeed10SharedItemV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v7);
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_8:
      v21 = type metadata accessor for FeedItem.SharedState;
      goto LABEL_9;
    }
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  }
  v20 = 0;
  v21 = (uint64_t (*)(_QWORD))sub_1BA6E11CC;
LABEL_9:
  sub_1BA4A2E80((uint64_t)v16, v21);
  return v20 & 1;
}

void sub_1BA6E11CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3BBD60)
  {
    type metadata accessor for FeedItem.SharedState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3BBD60);
  }
}

void sub_1BA6E122C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[18];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v17 = a2;
  v3 = *v2;
  v4 = sub_1BB871C80();
  v12[12] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v12[2] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v12[1] = (char *)v12 - v7;
  v8 = *(_QWORD *)(v3 + 96);
  v9 = *(_QWORD *)(v3 + 120);
  v10 = *(_QWORD *)(v3 + 128);
  v11 = *(_QWORD *)(v3 + 136);
  v18 = *(_OWORD *)(v3 + 80);
  v14 = v8;
  v19 = v8;
  v13 = *(_OWORD *)(v3 + 104);
  v20 = v13;
  v21 = v9;
  v22 = v10;
  v16 = v10;
  v15 = v11;
  v23 = v11;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

void sub_1BA6E1320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  void (*v35)(_BYTE *);
  char v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  void (*v39)(_QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _BYTE v51[128];

  v5 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAdGroupDataProvider<A, B, C, D>.FailureReason, a1);
  *(_QWORD *)(v3 - 400) = v1;
  *(_QWORD *)(v3 - 432) = a1;
  *(_QWORD *)(v3 - 440) = v5;
  v6 = sub_1BB874650();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v3 - 360) = TupleTypeMetadata2;
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  *(_QWORD *)(v3 - 224) = &v51[-v8];
  *(_QWORD *)(v3 - 352) = v6;
  *(_QWORD *)(v3 - 264) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)(v3 - 416) = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  *(_QWORD *)(v3 - 408) = &v51[-v12];
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v3 - 272) = &v51[-v14];
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v3 - 248) = &v51[-v16];
  v17 = sub_1BB8705C4();
  *(_QWORD *)(v3 - 328) = v17;
  *(_QWORD *)(v3 - 336) = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v3 - 344) = &v51[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_1BB871F5C();
  *(_QWORD *)(v3 - 232) = v19;
  *(_QWORD *)(v3 - 256) = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v3 - 240) = &v51[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v21);
  v23 = &v51[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_1BB871B6C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  *(_QWORD *)(v3 - 464) = &v51[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v27);
  *(_QWORD *)(v3 - 424) = &v51[-v28];
  MEMORY[0x1E0C80A78](v29);
  v31 = &v51[-v30];
  MEMORY[0x1E0C80A78](v32);
  v34 = &v51[-v33];
  *(_QWORD *)(v3 - 216) = v2 + *(int *)(v21 + 20);
  sub_1BB8721A8();
  v35 = *(void (**)(_BYTE *))(v25 + 104);
  *(_DWORD *)(v3 - 380) = *MEMORY[0x1E0D527A8];
  v35(v31);
  v36 = MEMORY[0x1BCCE2470](v34, v31);
  *(_QWORD *)(v3 - 376) = v25;
  v37 = *(void (**)(_BYTE *, uint64_t))(v25 + 8);
  v37(v31, v24);
  v37(v34, v24);
  *(_QWORD *)(v3 - 392) = v2;
  sub_1BA4C2DD8(v2, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  if ((v36 & 1) != 0)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    v38 = *(_QWORD *)(v3 - 200);
    v39 = (void (*)(_QWORD, _QWORD))v37;
  }
  else
  {
    sub_1BB8721A8();
    v40 = *MEMORY[0x1E0D52788];
    v41 = sub_1BB871B60();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v31, v40, v41);
    ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v31, *MEMORY[0x1E0D52780], v24);
    LOBYTE(v40) = MEMORY[0x1BCCE2470](v34, v31);
    v37(v31, v24);
    v37(v34, v24);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    v38 = *(_QWORD *)(v3 - 200);
    v39 = (void (*)(_QWORD, _QWORD))v37;
    if ((v40 & 1) == 0)
      return;
  }
  v42 = sub_1BB870AA4();
  if (v42)
  {
    v43 = (void *)v42;
    sub_1BB872178();
    objc_msgSend(v43, sel_size);
    *(_QWORD *)(v3 - 192) = *(_QWORD *)(v3 - 296);
    *(_QWORD *)(v3 - 184) = *(_QWORD *)(v3 - 320);
    v44 = *(_QWORD *)(v3 - 288);
    *(_QWORD *)(v3 - 176) = *(_QWORD *)(v3 - 280);
    *(_QWORD *)(v3 - 168) = v44;
    sub_1BB86FAD8();
    v45 = *(_QWORD *)(v3 - 344);
    sub_1BB86FAA8();
    sub_1BB8705B8();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 336) + 8))(v45, *(_QWORD *)(v3 - 328));
    sub_1BB873624();
    v46 = *(_QWORD *)(v3 - 240);
    sub_1BB871F44();
    v47 = (_QWORD *)(v38 + *(_QWORD *)(*(_QWORD *)v38 + 184));
    v48 = v47[4];
    __swift_project_boxed_opaque_existential_1(v47, v47[3]);
    v49 = sub_1BB871F50();
    v50 = (*(uint64_t (**)(uint64_t))(v48 + 8))(v49);
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0)
    {
      *(_QWORD *)(v3 - 200) = v39;
      FeedAdGroupDataProvider.groupData(before:)(*(_QWORD *)(v3 - 208), *(uint64_t **)(v3 - 248));
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v46, *(_QWORD *)(v3 - 232));

  }
}

void type metadata accessor for FeedAdGroupDataProvider.FailureReason()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA6E1CE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3CFB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BE0]);
}

uint64_t sub_1BA6E1CF4@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  double MidX;
  double v18;
  double MidY;
  double v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int *v23;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  v27.origin.x = a6;
  v27.origin.y = a7;
  v27.size.width = a8;
  v27.size.height = a9;
  MidX = CGRectGetMidX(v27);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  v18 = MidX - CGRectGetMidX(v28);
  v29.origin.x = a6;
  v29.origin.y = a7;
  v29.size.width = a8;
  v29.size.height = a9;
  MidY = CGRectGetMidY(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  v20 = MidY - CGRectGetMidY(v30);
  v21 = sub_1BB871C44();
  v22 = (unsigned int *)MEMORY[0x1E0D529D8];
  if (v20 <= 0.0)
    v22 = (unsigned int *)MEMORY[0x1E0D529C0];
  v23 = (unsigned int *)MEMORY[0x1E0D529D0];
  if (v18 <= 0.0)
    v23 = (unsigned int *)MEMORY[0x1E0D529C8];
  if (v18 >= v20)
    v22 = v23;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(a1, *v22, v21);
}

uint64_t sub_1BA6E1E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;

  v63 = a2;
  v68 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v68);
  v67 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v61 - v5;
  MEMORY[0x1E0C80A78](v6);
  v73 = (char *)&v61 - v7;
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)&v61 - v9;
  MEMORY[0x1E0C80A78](v10);
  v65 = (char *)&v61 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v61 - v13);
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = (uint64_t *)(a1 + 32);
    v17 = MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v18 = *v16;
      sub_1BA6E9B50(*v16);
      v19 = *v14;
      v20 = v14[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v21 = *(_QWORD *)(v17 + 16);
      v77 = v16 + 1;
      if (v21 && (v22 = sub_1BA6E35A8(v19, v20), (v23 & 1) != 0))
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        v25 = (v18 >> 59) & 0x1E | (v18 >> 2) & 1;
        if (v25 > 0x12)
          v26 = 10;
        else
          v26 = qword_1BB935B20[v25];
        v31 = *(_QWORD *)(v24 + 16);
        v32 = (v31 >> 59) & 0x1E | (v31 >> 2) & 1;
        v76 = v24;
        if (v32 <= 0x12 && qword_1BB935B20[v32] < v26)
        {
          v33 = (uint64_t)v65;
          sub_1BA6E9B50(v18);
          v34 = *(_QWORD *)(v33 + 16);
          v75 = v34 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          v72 = v31 & 0xFFFFFFFFFFFFFFBLL;
          swift_retain();
          sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v35 = (uint64_t)v66;
          sub_1BA6E9B50(v31);
          v36 = *(_QWORD *)(v35 + 16);
          swift_retain();
          sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          if (v36 >> 60 != 5 || (v34 & 0xF000000000000000) != 0x1000000000000000)
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_9;
          }
          v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          v70 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          v71 = v37;
          v69 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          v38 = *(_QWORD *)(v75 + 24);
          v62 = *(_QWORD *)(v75 + 16);
          v39 = (uint64_t *)v67;
          sub_1BA6E9B50(v31);
          v40 = v39[1];
          v61 = *v39;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v41 = swift_allocObject();
          v42 = v61;
          *(_QWORD *)(v41 + 16) = v62;
          *(_QWORD *)(v41 + 24) = v38;
          v43 = v70;
          *(_QWORD *)(v41 + 32) = v69;
          *(_QWORD *)(v41 + 40) = v43;
          *(_QWORD *)(v41 + 48) = v71;
          *v14 = v42;
          v14[1] = v40;
          v14[2] = v41 | 0x1000000000000000;
          v14[3] = 1;
          v44 = (char *)v14 + *(int *)(v68 + 28);
          v45 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
          sub_1BB62E2F4((uint64_t)v14, v31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          swift_release();
          swift_release_n();
          swift_release();
          type metadata accessor for FormatOptionElement();
          swift_allocObject();
          goto LABEL_21;
        }
        v75 = v18 & 0xFFFFFFFFFFFFFFBLL;
        v46 = (uint64_t)v73;
        sub_1BA6E9B50(v31);
        v47 = *(_QWORD *)(v46 + 16);
        swift_retain();
        sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v48 = (uint64_t)v74;
        sub_1BA6E9B50(v18);
        v49 = *(_QWORD *)(v48 + 16);
        swift_retain();
        sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        if (v49 >> 60 != 5 || (v47 & 0xF000000000000000) != 0x1000000000000000)
        {
          swift_release();
          swift_release();
          v78 = v18;
          type metadata accessor for FormatOptionElement();
          swift_allocObject();
          swift_retain();
LABEL_21:
          v27 = sub_1BA6E2D60(&v78);
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_8;
        }
        v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        v51 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        v71 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        v72 = v50;
        v52 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        v70 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        v53 = (uint64_t *)v67;
        sub_1BA6E9B50(v18);
        v54 = v53[1];
        v69 = *v53;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v55 = swift_allocObject();
        v56 = v69;
        *(_QWORD *)(v55 + 16) = v70;
        *(_QWORD *)(v55 + 24) = v52;
        v57 = v72;
        *(_QWORD *)(v55 + 32) = v71;
        *(_QWORD *)(v55 + 40) = v57;
        *(_QWORD *)(v55 + 48) = v51;
        *v14 = v56;
        v14[1] = v54;
        v14[2] = v55 | 0x1000000000000000;
        v14[3] = 1;
        v58 = (char *)v14 + *(int *)(v68 + 28);
        v59 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
        sub_1BB62E2F4((uint64_t)v14, v18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_release_n();
        swift_release();
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        v27 = sub_1BA6E2D60(&v78);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        v78 = v18;
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        swift_retain();
        v27 = sub_1BA6E2D60(&v78);
        swift_bridgeObjectRelease();
      }
LABEL_8:
      sub_1BA6E9B50(v27[2]);
      v28 = *v14;
      v29 = v14[1];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v78 = v17;
      sub_1BA6E2D54((uint64_t)v27, v28, v29, isUniquelyReferenced_nonNull_native);
      v17 = v78;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      v16 = v77;
      if (!--v15)
        goto LABEL_24;
    }
  }
  v17 = MEMORY[0x1E0DEE9E0];
LABEL_24:
  result = v64;
  *(_QWORD *)(v64 + 16) = v63;
  *(_QWORD *)(result + 24) = v17;
  return result;
}

uint64_t sub_1BA6E2510(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t (*v20)();
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)();
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v3 = *v1;
  v73 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v73);
  v72 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v75 = (char *)v67 - v6;
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)v67 - v8;
  MEMORY[0x1E0C80A78](v9);
  v79 = (char *)v67 - v10;
  MEMORY[0x1E0C80A78](v11);
  v78 = (char *)v67 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v67 - v14);
  swift_beginAccess();
  v16 = v1[3];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v67[0] = v1;
    v67[1] = v3;
    v82 = a1 + 32;
    swift_bridgeObjectRetain();
    v71 = a1;
    result = swift_bridgeObjectRetain();
    LODWORD(v77) = 0;
    v19 = 0;
    v76 = v17 - 1;
    v20 = type metadata accessor for FormatOption;
    v80 = v17;
    v81 = v15;
    v21 = v17;
LABEL_3:
    if (v19 <= v21)
      v22 = v21;
    else
      v22 = v19;
    v83 = v16;
    v84 = v22;
    v23 = v19;
    while (v84 != v23)
    {
      v24 = *(_QWORD *)(v82 + 8 * v23);
      sub_1BA6E9B50(v24);
      v25 = *v15;
      v26 = v15[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))v20);
      if (!*(_QWORD *)(v16 + 16) || (v27 = sub_1BA6E35A8(v25, v26), (v28 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        v87 = v24;
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        swift_retain();
        v48 = sub_1BA6E2D60(&v87);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v27);
      swift_retain();
      swift_bridgeObjectRelease();
      v30 = (v24 >> 59) & 0x1E | (v24 >> 2) & 1;
      if (v30 > 0x12)
        v31 = 10;
      else
        v31 = qword_1BB935B20[v30];
      v32 = *(_QWORD *)(v29 + 16);
      v33 = (v32 >> 59) & 0x1E | (v32 >> 2) & 1;
      v86 = v29;
      if (v33 > 0x12 || qword_1BB935B20[v33] >= v31)
      {
        v49 = (uint64_t)v74;
        sub_1BA6E9B50(v32);
        v50 = *(_QWORD *)(v49 + 16);
        v51 = v50 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))v20);
        v52 = (uint64_t)v75;
        sub_1BA6E9B50(v24);
        v53 = *(_QWORD *)(v52 + 16);
        swift_retain();
        sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))v20);
        if (v53 >> 60 == 5 && (v50 & 0xF000000000000000) == 0x1000000000000000)
        {
          v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          v84 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          v85 = v54;
          v77 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          v55 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          v70 = *(_QWORD *)(v51 + 16);
          v56 = (uint64_t *)v72;
          sub_1BA6E9B50(v24);
          v57 = v56[1];
          v69 = *v56;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BA4A2E80((uint64_t)v56, (uint64_t (*)(_QWORD))v20);
          v58 = swift_allocObject();
          *(_QWORD *)(v58 + 16) = v70;
          *(_QWORD *)(v58 + 24) = v55;
          v59 = v85;
          *(_QWORD *)(v58 + 32) = v77;
          *(_QWORD *)(v58 + 40) = v59;
          *(_QWORD *)(v58 + 48) = v84;
          v15 = v81;
          *v81 = v69;
          v15[1] = v57;
          v15[2] = v58 | 0x1000000000000000;
          v15[3] = 1;
          v60 = (char *)v15 + *(int *)(v73 + 28);
          v61 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
          sub_1BB62E2F4((uint64_t)v15, v24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))v20);
          swift_release_n();
          swift_release();
          type metadata accessor for FormatOptionElement();
          swift_allocObject();
          v48 = sub_1BA6E2D60(&v87);
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          v87 = v24;
          type metadata accessor for FormatOptionElement();
          swift_allocObject();
          swift_retain();
          v48 = sub_1BA6E2D60(&v87);
          swift_bridgeObjectRelease();
          swift_release();
          v15 = v81;
        }
        v21 = v80;
LABEL_25:
        v47 = v20;
LABEL_26:
        sub_1BA6E9B50(v48[2]);
        v62 = *v15;
        v63 = v15[1];
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))v47);
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v87 = v16;
        sub_1BA6E2D54((uint64_t)v48, v62, v63, isUniquelyReferenced_nonNull_native);
        v16 = v87;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v19 = v23 + 1;
        LODWORD(v77) = 1;
        v20 = v47;
        if (v76 != v23)
          goto LABEL_3;
        swift_bridgeObjectRelease();
LABEL_29:
        v65 = *(_QWORD *)(v67[0] + 16);
        v66 = swift_allocObject();
        *(_QWORD *)(v66 + 16) = v65;
        *(_QWORD *)(v66 + 24) = v16;
        swift_retain();
        return v66;
      }
      v85 = v24 & 0xFFFFFFFFFFFFFFBLL;
      v34 = (uint64_t)v78;
      sub_1BA6E9B50(v24);
      v35 = *(_QWORD *)(v34 + 16);
      swift_retain();
      swift_retain();
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))v20);
      v36 = (uint64_t)v79;
      sub_1BA6E9B50(v32);
      v37 = *(_QWORD *)(v36 + 16);
      swift_retain();
      v38 = v20;
      sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))v20);
      if (v37 >> 60 == 5 && (v35 & 0xF000000000000000) == 0x1000000000000000)
      {
        v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        v84 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        v70 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        v40 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        v69 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        v77 = v40;
        v41 = (uint64_t *)v72;
        sub_1BA6E9B50(v32);
        v42 = v41[1];
        v68 = *v41;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v41, (uint64_t (*)(_QWORD))v38);
        v43 = swift_allocObject();
        *(_QWORD *)(v43 + 16) = v69;
        *(_QWORD *)(v43 + 24) = v40;
        v44 = v84;
        *(_QWORD *)(v43 + 32) = v70;
        *(_QWORD *)(v43 + 40) = v44;
        *(_QWORD *)(v43 + 48) = v39;
        v15 = v81;
        *v81 = v68;
        v15[1] = v42;
        v15[2] = v43 | 0x1000000000000000;
        v15[3] = 1;
        v45 = (char *)v15 + *(int *)(v73 + 28);
        v46 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
        sub_1BB62E2F4((uint64_t)v15, v32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))v38);
        v47 = v38;
        swift_release();
        swift_release_n();
        swift_release();
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        v48 = sub_1BA6E2D60(&v87);
        v16 = v83;
        swift_bridgeObjectRelease();
        swift_release();
        v21 = v80;
        goto LABEL_26;
      }
      ++v23;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v16 = v83;
      swift_bridgeObjectRelease();
      result = swift_release();
      v21 = v80;
      v15 = v81;
      if (v80 == v23)
      {
        swift_bridgeObjectRelease();
        if ((v77 & 1) == 0)
          goto LABEL_31;
        goto LABEL_29;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_31:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatOptionElement()
{
  return objc_opt_self();
}

uint64_t sub_1BA6E2D54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6E38F8);
}

_QWORD *sub_1BA6E2D60(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v10 = *a1;
  v2[2] = *a1;
  sub_1BA6E9B50(v10);
  v25 = *((_QWORD *)v9 + 2);
  swift_retain();
  sub_1BA6E2F38();
  v12 = v11;
  v14 = v13;
  if (v13 >= 2)
  {
    v25 = 36;
    v26 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v16);
    sub_1BB872AFC(v17);
    sub_1BA6E3730(v12, v14);
    v12 = v25;
    v14 = v26;
  }
  sub_1BA900B74((uint64_t)v9);
  v2[3] = v12;
  v2[4] = v14;
  sub_1BA6E9B50(v10);
  v18 = sub_1BA6E30A4();
  v20 = v19;
  sub_1BA900B74((uint64_t)v6);
  v2[5] = v18;
  v2[6] = v20;
  v25 = 36;
  v26 = 0xE100000000000000;
  sub_1BA6E9B50(v10);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1BA900B74((uint64_t)v6);
  sub_1BB872AFC(v21);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v22);
  v23 = v26;
  v2[7] = v25;
  v2[8] = v23;
  return v2;
}

void sub_1BA6E2F38()
{
  __asm { BR              X11 }
}

void sub_1BA6E2F90()
{
  sub_1BA6E2F78();
}

void sub_1BA6E3068()
{
  sub_1BA6E2F38();
  sub_1BA6E2F78();
}

uint64_t sub_1BA6E30A4()
{
  char v0;
  _QWORD *v2;
  _QWORD *v3;

  v0 = sub_1BA6E3160();
  if (v0 == 2)
    return 0;
  if (v0 == 3 || (v0 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 36;
}

uint64_t sub_1BA6E3160()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 60;
  result = 3;
  if (((1 << v2) & 0x3EDF) == 0)
  {
    if ((_DWORD)v2 == 5)
    {
      if (*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16))
      {
        return 2;
      }
      else
      {
        v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) & 0xFFFFFFFFFFFFLL;
        if ((v4 & 0x2000000000000000) != 0)
          v5 = HIBYTE(v4) & 0xF;
        return v5 == 0;
      }
    }
    else
    {
      return sub_1BA6E3160(3);
    }
  }
  return result;
}

uint64_t FormatOptionCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v4 = v3;
  v8 = type metadata accessor for FormatOption();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  v15 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  v16 = *(_QWORD *)(v15 + 16);
  if (!*(_QWORD *)(v16 + 16))
  {
    swift_endAccess();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BA6E35A8(a1, a2);
  if ((v18 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_beginAccess();
    v22 = *(_QWORD *)(v4 + 24);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      v23 = sub_1BA6E35A8(a1, a2);
      if ((v24 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRelease();
        v26 = *(_QWORD *)(v25 + 16);
        swift_retain();
        swift_release();
        sub_1BA6E9B50(v26);
        swift_release();
        v21 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v21, 1, v8);
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    v21 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v21, 1, v8);
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  swift_retain();
  swift_release();
  sub_1BA6E9B50(v20);
  swift_release();
  sub_1BA5193C4((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  sub_1BA5193C4((uint64_t)v14, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  v21 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v21, 1, v8);
}

uint64_t sub_1BA6E3434(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1BA6E3744(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA6F01D0(v17, a4 & 1, a5);
  v23 = sub_1BA6E35A8(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

unint64_t sub_1BA6E35A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB8745CC();
  sub_1BB872A90();
  v4 = sub_1BB874608();
  return sub_1BA6E360C(a1, a2, v4);
}

unint64_t sub_1BA6E360C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BB874398() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BB874398() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1BA6E36EC()
{
  uint64_t *v0;

  swift_release();
  sub_1BA6E3730(v0[3], v0[4]);
  sub_1BA6E3730(v0[5], v0[6]);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA6E3730(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

void *sub_1BA6E3744(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BB873F48();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BA6E38F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAB0)
  {
    type metadata accessor for FormatOptionElement();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAB0);
  }
}

void *sub_1BA6E395C()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BA6E38F8);
}

uint64_t sub_1BA6E3968(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v2 = 0;
  result = 0;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v2 << 6);
      goto LABEL_5;
    }
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v8)
      return result;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v2;
    if (!v12)
    {
      v2 = v11 + 1;
      if (v11 + 1 >= v8)
        return result;
      v12 = *(_QWORD *)(v4 + 8 * v2);
      if (!v12)
      {
        v2 = v11 + 2;
        if (v11 + 2 >= v8)
          return result;
        v12 = *(_QWORD *)(v4 + 8 * v2);
        if (!v12)
        {
          v2 = v11 + 3;
          if (v11 + 3 >= v8)
            return result;
          v12 = *(_QWORD *)(v4 + 8 * v2);
          if (!v12)
          {
            v2 = v11 + 4;
            if (v11 + 4 >= v8)
              return result;
            v12 = *(_QWORD *)(v4 + 8 * v2);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_5:
    result = result | dword_1BB892A3C[*(char *)(*(_QWORD *)(a1 + 48) + v10)];
  }
  v13 = v11 + 5;
  if (v13 >= v8)
    return result;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v2 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v8)
      return result;
    v12 = *(_QWORD *)(v4 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA6E3AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(_QWORD), void (*a9)(uint64_t))
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v51;
  uint64_t v52;

  v12 = v9;
  sub_1BB86DD80();
  v15 = *(_QWORD *)(*(_QWORD *)(v51 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v15 + 16) + 16))
  {
    v52 = *(_QWORD *)(v51 + 56);
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1BA6E42A0(v16);
    sub_1BA6E3FB8(v17);
    swift_release();
    v18 = v52;
    if (a1)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  v18 = sub_1BA6E3F38();
  swift_release();
  if (!a1)
    goto LABEL_14;
LABEL_3:
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    a5(v18);
    swift_release();
    v31 = swift_bridgeObjectRelease();
    v30 = a6(v31);
LABEL_17:
    swift_release();
    return v30;
  }
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA6E35A8(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a7(v23, a1);
  result = swift_bridgeObjectRelease();
  v26 = v24 >> 62;
  if (!(v24 >> 62))
  {
    v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
      goto LABEL_7;
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a5(v18);
    v48 = swift_bridgeObjectRelease();
    v30 = a6(v48);
    swift_release();
    goto LABEL_17;
  }
LABEL_7:
  v28 = v24 & 0xC000000000000001;
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    result = swift_retain();
    if ((v27 & 0x8000000000000000) == 0)
      goto LABEL_10;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  result = MEMORY[0x1BCCE4630](0, v24);
  if (v27 < 0)
    goto LABEL_40;
LABEL_10:
  if (v26)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v32 >= 1)
    {
      v26 = v24 >> 62;
      v28 = v24 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v29 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v29 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v29)
    goto LABEL_42;
LABEL_21:
  if (v29 < v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v28 && v27 != 1)
  {
    a8(0);
    result = 1;
    do
    {
      v33 = result + 1;
      sub_1BB873CFC();
      result = v33;
    }
    while (v27 != v33);
  }
  if (!v26)
  {
    v34 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
    v35 = 1;
    v36 = __OFSUB__(v27, 1);
    v38 = v27 - 1;
    v37 = (v38 < 0) ^ v36 | (v38 == 0);
    if (v38)
      goto LABEL_28;
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1BB873F3C();
  v34 = v41;
  v35 = v42;
  v44 = v43;
  result = swift_bridgeObjectRelease_n();
  v44 >>= 1;
  v36 = __OFSUB__(v44, v35);
  v38 = v44 - v35;
  v37 = (v38 < 0) ^ v36 | (v38 == 0);
  if (!v38)
    goto LABEL_33;
LABEL_28:
  if (!v37)
  {
    swift_retain();
    swift_unknownObjectRetain();
    v39 = v34 + 8 * v35;
    do
    {
      v39 += 8;
      v40 = swift_retain();
      a9(v40);
      swift_release();
      swift_release();
      --v38;
    }
    while (v38);
    swift_unknownObjectRelease();
LABEL_34:
    v45 = ((uint64_t (*)(uint64_t))a5)(v18);
    swift_release();
    v46 = swift_bridgeObjectRelease();
    v30 = v45;
    v47 = a6(v46);
    if (!v12)
      v30 = v47;
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return v30;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BA6E3F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v2 = v0;
    v6 = *(_QWORD *)(v0 + 56);
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1BA6E42A0(v3);
    sub_1BA6E3FB8(v4);
    v1 = v6;
    *(_QWORD *)(v2 + 48) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA6E3FB8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BA6E4124(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BA6E42A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BA6E4480(v3, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = sub_1BA6E43EC(v4);
  swift_bridgeObjectRelease();
  v14 = v5;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BA6E9780(v6, v1, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (uint64_t *)(v7 + 40);
    do
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v13, v10, v11);
      swift_bridgeObjectRelease();
      v9 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1BA6E43EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BB873060();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BA6E4480(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v9;
    if (!v12)
    {
      v9 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_23;
      v12 = *(_QWORD *)(v3 + 8 * v9);
      if (!v12)
      {
        v9 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_23;
        v12 = *(_QWORD *)(v3 + 8 * v9);
        if (!v12)
        {
          v9 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_23;
          v12 = *(_QWORD *)(v3 + 8 * v9);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v12 - 1) & v12;
LABEL_5:
    swift_retain();
    v10 = sub_1BA6E9D28(a2);
    swift_release();
    result = sub_1BA6E9BD8(v10);
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_23:
    swift_release();
    return v14;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v9 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v9 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 8 * v9);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BA6E4614(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  unint64_t v94;
  uint64_t v95[2];
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;

  v3 = v2;
  v4 = v1;
  v79 = *v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v77 = (uint64_t)&v54 - v7;
  swift_beginAccess();
  v8 = v1[3];
  v76 = v1[2];
  v9 = v1[4];
  v10 = v4[5];
  swift_beginAccess();
  v11 = v4[6];
  v12 = v4[7];
  v78 = v9;
  if (v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v13 = sub_1BA72BED4(v83, v12);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v16 = v13;
    swift_release();
    v17 = swift_allocObject();
    *(double *)(v17 + 16) = v16;
    sub_1BA790480();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v15 + 32) = v17;
    *(_BYTE *)(v15 + 40) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = 0;
  }
  v99 = v15;
  v18 = swift_beginAccess();
  v19 = v4[8];
  if (v19)
  {
    *(_QWORD *)&v83 = a1;
    MEMORY[0x1E0C80A78](v18);
    v53 = &v83;
    swift_bridgeObjectRetain();
    v20 = sub_1BA8A1628((void (*)(_QWORD *__return_ptr, _BYTE *, uint64_t *))sub_1BB6804BC, (uint64_t)&v51, v19);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v75 = v20;
    v18 = swift_bridgeObjectRelease();
  }
  else
  {
    v75 = 0;
  }
  v21 = v4[9];
  if ((~v21 & 0xF000000000000007) != 0)
  {
    swift_retain();
    sub_1BA6F5534(a1, v21);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v21;
LABEL_34:
      sub_1BA6E6CD8(v22);
      return swift_bridgeObjectRelease();
    }
    v18 = sub_1BA6E6CD8(v21);
    v21 = v83;
  }
  v98 = v21;
  if (v4[10])
  {
    *(_QWORD *)&v83 = a1;
    MEMORY[0x1E0C80A78](v18);
    v24 = v23;
    v53 = &v83;
    v26 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)&v51, v25);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CD8(v21);
      return swift_bridgeObjectRelease();
    }
    v59 = v21;
    v64 = v24;
    v63 = v26;
  }
  else
  {
    v59 = v21;
    v64 = a1;
    v63 = 0;
  }
  v97 = *((_BYTE *)v4 + 88);
  v27 = v4[12];
  v28 = v4[13];
  v29 = *((unsigned __int8 *)v4 + 112);
  v95[0] = v27;
  v95[1] = v28;
  v96 = v29;
  v30 = v4[15];
  v94 = v30;
  v93 = *((_BYTE *)v4 + 128);
  v66 = v4[17];
  v73 = v4[18];
  v68 = v4[19];
  v69 = v4[20];
  v74 = v4[21];
  v70 = v4[22];
  v71 = v4[23];
  v72 = v4[24];
  v65 = v4[25];
  v67 = v4[26];
  v31 = *((unsigned __int8 *)v4 + 216);
  v62 = v29;
  v61 = v28;
  v60 = v27;
  if (v31 == 254)
  {
    sub_1BA6E6C54(v27, v28, v29);
    sub_1BA6E6C80(v30);
    v58 = v30;
    v32 = v72;
    v33 = v71;
    v34 = v70;
    v35 = v69;
    v36 = v68;
    v37 = v73;
    v38 = v74;
  }
  else
  {
    sub_1BA6E6C54(v27, v28, v29);
    sub_1BA6E6C80(v30);
    v39 = v74;
    sub_1BA6E8A48(v66, v73, v68, v69, v74, v70, v71, v72, v65, v67, v31);
    sub_1BA742954(v64, v39);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E8A78(v66, v73, v68, v69, v74, v70, v71, v72, v65, v67, v31);
      v40 = v30;
LABEL_33:
      sub_1BA6E6CF0(v40);
      sub_1BA6E6CC4(v60, v61, v62);
      v22 = v59;
      goto LABEL_34;
    }
    v41 = v73;
    sub_1BA6E8A78(v66, v73, v68, v69, v74, v70, v71, v72, v65, v67, v31);
    v38 = v83;
    v37 = v41;
    v58 = v30;
    v32 = v72;
    v33 = v71;
    v34 = v70;
    v35 = v69;
    v36 = v68;
  }
  v42 = v66;
  v43 = v65;
  *(_QWORD *)&v83 = v66;
  v73 = v37;
  *((_QWORD *)&v83 + 1) = v37;
  v84 = v36;
  v85 = v35;
  v86 = v38;
  v87 = v34;
  v88 = v33;
  v89 = v32;
  v90 = v65;
  v91 = v67;
  v92 = v31;
  v44 = v4[28];
  if ((~v44 & 0xF000000000000007) != 0)
  {
    v74 = v38;
    swift_retain();
    sub_1BA742954(v64, v44);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5E800C(v44);
      LOBYTE(v53) = v31;
      v51 = v43;
      v52 = v67;
      v45 = v66;
LABEL_32:
      sub_1BA6E8A78(v45, v73, v68, v69, v74, v70, v71, v72, v51, v52, v53);
      v40 = v58;
      goto LABEL_33;
    }
    sub_1BA5E800C(v44);
    v44 = v80;
    v38 = v74;
    v42 = v66;
  }
  v82 = v44;
  v57 = *((unsigned __int8 *)v4 + 232);
  v46 = v4[30];
  v47 = v4[31];
  v65 = v46;
  if (v46 != 1)
  {
    v56 = v44;
    v55 = v31;
    v74 = v38;
    v48 = v47;
    swift_bridgeObjectRetain();
    v49 = v65;
    swift_bridgeObjectRetain();
    sub_1BA52674C(v64, v49, v48, &v80);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6D00(v65);
      sub_1BA5E800C(v56);
      LOBYTE(v53) = v55;
      v51 = v43;
      v52 = v67;
      v45 = v42;
      goto LABEL_32;
    }
    sub_1BA6E6D00(v65);
    v46 = v80;
    v47 = v81;
  }
  v80 = v46;
  v81 = v47;
  v50 = v77;
  sub_1BA5E01A4((uint64_t)v4 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, v77, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_allocObject();
  return FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v76, v8, v78, v10, v11, &v99, v75, &v98, v63, &v97, v95, (uint64_t *)&v94, &v93, &v83, &v82, v57, &v80, v50);
}

uint64_t sub_1BA6E5070(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  size_t v26;
  uint64_t isStackAllocationSafe;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t i;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t j;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t result;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  void *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;

  v113 = a1;
  v114 = 0;
  v141 = *MEMORY[0x1E0C80C00];
  v107 = *v1;
  swift_beginAccess();
  v102 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = sub_1BA6E6D44(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v103 = sub_1BA6EF8CC(0, v3, 0, v4);
  v106 = *(_QWORD *)(v2 + 16);
  if (!v106)
  {
LABEL_32:
    sub_1BA6EFB6C(0);
    v62 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v62 + 16);
    if (v63)
    {
      v64 = v63 - 1;
      for (i = 32; ; i += 208)
      {
        v128 = *(_OWORD *)(v62 + i);
        v66 = *(_OWORD *)(v62 + i + 16);
        v67 = *(_OWORD *)(v62 + i + 32);
        v68 = *(_OWORD *)(v62 + i + 64);
        v131 = *(_OWORD *)(v62 + i + 48);
        v132 = v68;
        v129 = v66;
        v130 = v67;
        v69 = *(_OWORD *)(v62 + i + 80);
        v70 = *(_OWORD *)(v62 + i + 96);
        v71 = *(_OWORD *)(v62 + i + 128);
        v135 = *(_OWORD *)(v62 + i + 112);
        v136 = v71;
        v133 = v69;
        v134 = v70;
        v72 = *(_OWORD *)(v62 + i + 144);
        v73 = *(_OWORD *)(v62 + i + 160);
        v74 = *(_OWORD *)(v62 + i + 192);
        v139 = *(_OWORD *)(v62 + i + 176);
        v140 = v74;
        v137 = v72;
        v138 = v73;
        sub_1BAC68490((uint64_t)&v128);
        v76 = v5[2];
        v75 = v5[3];
        if (v76 >= v75 >> 1)
          v5 = sub_1BA6E6D44((_QWORD *)(v75 > 1), v76 + 1, 1, v5);
        v5[2] = v76 + 1;
        v77 = &v5[25 * v76];
        *((_OWORD *)v77 + 2) = v128;
        v78 = v129;
        v79 = v130;
        v80 = v132;
        *((_OWORD *)v77 + 5) = v131;
        *((_OWORD *)v77 + 6) = v80;
        *((_OWORD *)v77 + 3) = v78;
        *((_OWORD *)v77 + 4) = v79;
        v81 = v133;
        v82 = v134;
        v83 = v136;
        *((_OWORD *)v77 + 9) = v135;
        *((_OWORD *)v77 + 10) = v83;
        *((_OWORD *)v77 + 7) = v81;
        *((_OWORD *)v77 + 8) = v82;
        v84 = v137;
        v85 = v138;
        v86 = v139;
        v77[28] = v140;
        *((_OWORD *)v77 + 12) = v85;
        *((_OWORD *)v77 + 13) = v86;
        *((_OWORD *)v77 + 11) = v84;
        if (!v64)
          break;
        --v64;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v87 = v5[2];
    if (v87)
    {
      v88 = (uint64_t)v102;
      swift_retain();
      swift_bridgeObjectRetain();
      v89 = v87 - 1;
      v90 = v88;
      for (j = 4; ; j += 25)
      {
        v128 = *(_OWORD *)&v5[j];
        v92 = *(_OWORD *)&v5[j + 2];
        v93 = *(_OWORD *)&v5[j + 4];
        v94 = *(_OWORD *)&v5[j + 8];
        v131 = *(_OWORD *)&v5[j + 6];
        v132 = v94;
        v129 = v92;
        v130 = v93;
        v95 = *(_OWORD *)&v5[j + 10];
        v96 = *(_OWORD *)&v5[j + 12];
        v97 = *(_OWORD *)&v5[j + 16];
        v135 = *(_OWORD *)&v5[j + 14];
        v136 = v97;
        v133 = v95;
        v134 = v96;
        v98 = *(_OWORD *)&v5[j + 18];
        v99 = *(_OWORD *)&v5[j + 20];
        v100 = *(_OWORD *)&v5[j + 22];
        *(_QWORD *)&v140 = v5[j + 24];
        v138 = v99;
        v139 = v100;
        v137 = v98;
        v125 = v99;
        v126 = v100;
        v127 = v140;
        v121 = v134;
        v122 = v135;
        v123 = v97;
        v124 = v98;
        v117 = v130;
        v118 = v131;
        v119 = v132;
        v120 = v133;
        v115 = v128;
        v116 = v129;
        swift_allocObject();
        sub_1BAC68490((uint64_t)&v128);
        v90 = sub_1BA6EF43C(v90, &v115);
        swift_release();
        if (!v89)
          break;
        --v89;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v90 = (uint64_t)v102;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v90;
  }
  v105 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v104 = v2;
LABEL_3:
  v109 = v6;
  v7 = v105 + 200 * v6;
  v128 = *(_OWORD *)v7;
  v8 = *(_OWORD *)(v7 + 16);
  v9 = *(_OWORD *)(v7 + 32);
  v10 = *(_OWORD *)(v7 + 64);
  v131 = *(_OWORD *)(v7 + 48);
  v132 = v10;
  v129 = v8;
  v130 = v9;
  v11 = *(_OWORD *)(v7 + 80);
  v12 = *(_OWORD *)(v7 + 96);
  v13 = *(_OWORD *)(v7 + 128);
  v135 = *(_OWORD *)(v7 + 112);
  v136 = v13;
  v133 = v11;
  v134 = v12;
  v14 = *(_OWORD *)(v7 + 144);
  v15 = *(_OWORD *)(v7 + 160);
  v16 = *(_OWORD *)(v7 + 176);
  *(_QWORD *)&v140 = *(_QWORD *)(v7 + 192);
  v138 = v15;
  v139 = v16;
  v137 = v14;
  v17 = v128;
  sub_1BAC68490((uint64_t)&v128);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v115 = v17;
  swift_bridgeObjectRetain();
  v18 = sub_1BA6E583C((uint64_t *)&v115);
  swift_bridgeObjectRelease();
  v111 = *(_QWORD *)(v18 + 16);
  if (!v111)
  {
    swift_bridgeObjectRelease();
    sub_1BAC685AC((uint64_t)&v128);
    goto LABEL_23;
  }
  v108 = v5;
  v19 = 0;
  v20 = (uint64_t *)(v18 + 64);
  while (1)
  {
    if (v19 >= *(_QWORD *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_46;
    }
    v110 = *(v20 - 2);
    v22 = *(v20 - 1);
    v21 = *v20;
    v23 = *(_BYTE *)(v22 + 32);
    v24 = v23 & 0x3F;
    v25 = (unint64_t)((1 << v23) + 63) >> 6;
    v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 > 0xD)
    {
      isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        v28 = (char *)swift_slowAlloc();
        bzero(v28, v26);
        v32 = v25;
        v30 = v114;
        v31 = sub_1BA6EB5B4((uint64_t)v28, v32, v22, v113);
        swift_bridgeObjectRelease();
        if (v30)
          goto LABEL_48;
        v114 = 0;
        MEMORY[0x1BCCE5C38](v28, -1, -1);
        goto LABEL_15;
      }
    }
    v112 = &v102;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v28 = (char *)&v102 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v28, v26);
    v29 = v25;
    v30 = v114;
    v31 = sub_1BA6EB5B4((uint64_t)v28, v29, v22, v113);
    swift_bridgeObjectRelease();
    if (v30)
      break;
    v114 = 0;
LABEL_15:
    v33 = sub_1BA6EB330(v31, v22);
    swift_release();
    if ((v33 & 1) != 0 && (sub_1BA6EBD20(v113, v21) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v34 = v110;
      if (v110 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC68490((uint64_t)&v128);
        v5 = v108;
        v39 = v109;
        v51 = v108[2];
        v50 = v108[3];
        v36 = v104;
        if (v51 >= v50 >> 1)
          v5 = sub_1BA6E6D44((_QWORD *)(v50 > 1), v51 + 1, 1, v108);
        v5[2] = v51 + 1;
        v52 = &v5[25 * v51];
        *((_OWORD *)v52 + 2) = v128;
        v53 = v129;
        v54 = v130;
        v55 = v132;
        *((_OWORD *)v52 + 5) = v131;
        *((_OWORD *)v52 + 6) = v55;
        *((_OWORD *)v52 + 3) = v53;
        *((_OWORD *)v52 + 4) = v54;
        v56 = v133;
        v57 = v134;
        v58 = v136;
        *((_OWORD *)v52 + 9) = v135;
        *((_OWORD *)v52 + 10) = v58;
        *((_OWORD *)v52 + 7) = v56;
        *((_OWORD *)v52 + 8) = v57;
        v59 = v137;
        v60 = v138;
        v61 = v139;
        v52[28] = v140;
        *((_OWORD *)v52 + 12) = v60;
        *((_OWORD *)v52 + 13) = v61;
        *((_OWORD *)v52 + 11) = v59;
      }
      else
      {
        sub_1BAC68490((uint64_t)&v128);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = v103;
        v36 = v104;
        v38 = v103[2];
        v37 = v103[3];
        v5 = v108;
        v39 = v109;
        if (v38 >= v37 >> 1)
          v35 = sub_1BA6EF8CC((_QWORD *)(v37 > 1), v38 + 1, 1, v103);
        v117 = v130;
        v118 = v131;
        v121 = v134;
        v122 = v135;
        v119 = v132;
        v120 = v133;
        v127 = v140;
        v125 = v138;
        v126 = v139;
        v123 = v136;
        v124 = v137;
        v115 = v128;
        v116 = v129;
        v35[2] = v38 + 1;
        v103 = v35;
        v40 = &v35[26 * v38];
        *((_OWORD *)v40 + 2) = v115;
        v41 = v116;
        v42 = v117;
        v43 = v119;
        *((_OWORD *)v40 + 5) = v118;
        *((_OWORD *)v40 + 6) = v43;
        *((_OWORD *)v40 + 3) = v41;
        *((_OWORD *)v40 + 4) = v42;
        v44 = v120;
        v45 = v121;
        v46 = v123;
        *((_OWORD *)v40 + 9) = v122;
        *((_OWORD *)v40 + 10) = v46;
        *((_OWORD *)v40 + 7) = v44;
        *((_OWORD *)v40 + 8) = v45;
        v47 = v124;
        v48 = v126;
        v49 = v127;
        *((_OWORD *)v40 + 12) = v125;
        *((_OWORD *)v40 + 13) = v48;
        *((_OWORD *)v40 + 11) = v47;
        v40[28] = v49;
        v40[29] = v34;
      }
      sub_1BAC685AC((uint64_t)&v128);
LABEL_28:
      v6 = v39 + 1;
      if (v6 == v106)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v6 >= *(_QWORD *)(v36 + 16))
LABEL_46:
        __break(1u);
      goto LABEL_3;
    }
    ++v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 5;
    if (v111 == v19)
    {
      swift_bridgeObjectRelease();
      sub_1BAC685AC((uint64_t)&v128);
      v5 = v108;
LABEL_23:
      v36 = v104;
      v39 = v109;
      goto LABEL_28;
    }
  }
  swift_willThrow();

  __break(1u);
LABEL_48:

  result = MEMORY[0x1BCCE5C38](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BA6E583C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13[2];
  _QWORD v14[3];

  v3 = *a1;
  v2 = a1[1];
  sub_1BB86DD20();
  v4 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(v3, v2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    v13[0] = v3;
    v13[1] = v2;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v13, v14);
    v10 = v14[0];
    v9 = v14[1];
    v8 = v14[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_1BA6F4014(v10, v9, v8, v3, v2, isUniquelyReferenced_nonNull_native);
    *v4 = v13[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 24 * v6 + 16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  return v8;
}

uint64_t sub_1BA6E59C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  char v113;
  char v114;
  unint64_t v115;
  uint64_t v116;
  _BOOL8 v117;
  uint64_t v118;
  char v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  _QWORD *v123;
  char v124;
  char v125;
  unint64_t v126;
  uint64_t v127;
  _BOOL8 v128;
  uint64_t v129;
  char v130;
  unint64_t v131;
  char v132;
  _QWORD *v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  _QWORD *v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  char v203;
  uint64_t v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  unint64_t v214;
  unint64_t v215;
  _QWORD *v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  char v235;
  unint64_t v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t result;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  unsigned int v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  uint64_t v292;
  uint64_t v293;
  _QWORD *v294;
  _QWORD *v295;
  _OWORD v296[12];
  uint64_t v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  uint64_t v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  uint64_t v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  uint64_t v336;
  _QWORD *v337;
  char v338;
  char v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  _OWORD v343[6];
  __int128 v344;
  __int128 v345;
  __int128 v346;
  uint64_t v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  _OWORD v351[6];
  __int128 v352;
  __int128 v353;
  __int128 v354;
  uint64_t v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  uint64_t v368;
  _QWORD *v369;

  v289 = *v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v290 = (uint64_t)&v264 - v4;
  swift_beginAccess();
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  swift_beginAccess();
  v291 = v1;
  v9 = v1[6];
  swift_beginAccess();
  v292 = a1;
  v10 = *(_QWORD *)(a1 + 48);
  v369 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v11 = *(_QWORD *)(v9 + 16);
  if (__OFADD__(v11, *(_QWORD *)(v10 + 16)))
  {
LABEL_99:
    __break(1u);
LABEL_100:
    result = sub_1BB874560();
    __break(1u);
    return result;
  }
  v294 = *(_QWORD **)(v10 + 16);
  v285 = v7;
  v288 = v6;
  sub_1BA6E78EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v295 = sub_1BA6E6D30(0, v11, 0, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v9 + 16);
  v286 = v8;
  v287 = v5;
  v293 = v10;
  if (!v12)
    goto LABEL_20;
  swift_bridgeObjectRetain();
  v13 = *(_OWORD *)(v9 + 192);
  v365 = *(_OWORD *)(v9 + 176);
  v366 = v13;
  v367 = *(_OWORD *)(v9 + 208);
  v368 = *(_QWORD *)(v9 + 224);
  v14 = *(_OWORD *)(v9 + 128);
  v361 = *(_OWORD *)(v9 + 112);
  v362 = v14;
  v15 = *(_OWORD *)(v9 + 160);
  v363 = *(_OWORD *)(v9 + 144);
  v364 = v15;
  v16 = *(_OWORD *)(v9 + 48);
  v17 = *(_OWORD *)(v9 + 80);
  v18 = *(_OWORD *)(v9 + 96);
  v358 = *(_OWORD *)(v9 + 64);
  v359 = v17;
  v360 = v18;
  v19 = v9;
  v20 = *(_OWORD *)(v9 + 32);
  v357 = v16;
  v356 = v20;
  v21 = *((_QWORD *)&v20 + 1);
  v22 = v12 - 1;
  for (i = 232; ; i += 200)
  {
    v24 = v356;
    sub_1BAC68490((uint64_t)&v356);
    sub_1BAC68490((uint64_t)&v356);
    swift_bridgeObjectRetain();
    v25 = (uint64_t)v369;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v340 = v25;
    v28 = sub_1BA6E35A8(v24, v21);
    v29 = *(_QWORD *)(v25 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    v32 = v27;
    if (*(_QWORD *)(v25 + 24) >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C80CC();
        if ((v32 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B80BC(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_1BA6E35A8(v24, v21);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_100;
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_11:
        v35 = (_QWORD *)v340;
        v36 = *(_QWORD *)(v340 + 56) + 200 * v28;
        v348 = *(_OWORD *)v36;
        v37 = *(_OWORD *)(v36 + 48);
        v39 = *(_OWORD *)(v36 + 16);
        v38 = *(_OWORD *)(v36 + 32);
        v351[1] = *(_OWORD *)(v36 + 64);
        v351[0] = v37;
        v349 = v39;
        v350 = v38;
        v40 = *(_OWORD *)(v36 + 112);
        v42 = *(_OWORD *)(v36 + 80);
        v41 = *(_OWORD *)(v36 + 96);
        v351[5] = *(_OWORD *)(v36 + 128);
        v351[4] = v40;
        v351[2] = v42;
        v351[3] = v41;
        v44 = *(_OWORD *)(v36 + 160);
        v43 = *(_OWORD *)(v36 + 176);
        v45 = *(_OWORD *)(v36 + 144);
        v355 = *(_QWORD *)(v36 + 192);
        v354 = v43;
        v352 = v45;
        v353 = v44;
        sub_1BAC685AC((uint64_t)&v348);
        *(_OWORD *)v36 = v356;
        v46 = v360;
        v47 = v358;
        v48 = v357;
        *(_OWORD *)(v36 + 48) = v359;
        *(_OWORD *)(v36 + 64) = v46;
        *(_OWORD *)(v36 + 16) = v48;
        *(_OWORD *)(v36 + 32) = v47;
        v49 = v364;
        v50 = v362;
        v51 = v361;
        *(_OWORD *)(v36 + 112) = v363;
        *(_OWORD *)(v36 + 128) = v49;
        *(_OWORD *)(v36 + 80) = v51;
        *(_OWORD *)(v36 + 96) = v50;
        v52 = v367;
        v53 = v366;
        v54 = v365;
        *(_QWORD *)(v36 + 192) = v368;
        *(_OWORD *)(v36 + 160) = v53;
        *(_OWORD *)(v36 + 176) = v52;
        *(_OWORD *)(v36 + 144) = v54;
        goto LABEL_15;
      }
    }
    v35 = (_QWORD *)v340;
    *(_QWORD *)(v340 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v55 = (uint64_t *)(v35[6] + 16 * v28);
    *v55 = v24;
    v55[1] = v21;
    v56 = v35[7] + 200 * v28;
    v57 = v368;
    v58 = v367;
    v59 = v366;
    *(_OWORD *)(v56 + 144) = v365;
    *(_OWORD *)(v56 + 160) = v59;
    *(_OWORD *)(v56 + 176) = v58;
    *(_QWORD *)(v56 + 192) = v57;
    v60 = v364;
    v61 = v363;
    v62 = v362;
    *(_OWORD *)(v56 + 80) = v361;
    *(_OWORD *)(v56 + 96) = v62;
    *(_OWORD *)(v56 + 112) = v61;
    *(_OWORD *)(v56 + 128) = v60;
    v63 = v360;
    v64 = v359;
    v65 = v358;
    *(_OWORD *)(v56 + 16) = v357;
    *(_OWORD *)(v56 + 32) = v65;
    *(_OWORD *)(v56 + 48) = v64;
    *(_OWORD *)(v56 + 64) = v63;
    *(_OWORD *)v56 = v356;
    v66 = v35[2];
    v67 = __OFADD__(v66, 1);
    v68 = v66 + 1;
    if (v67)
      goto LABEL_95;
    v35[2] = v68;
    swift_bridgeObjectRetain();
LABEL_15:
    v369 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v69 = v295[2];
    v70 = v295[3];
    swift_bridgeObjectRetain();
    if (v69 >= v70 >> 1)
      v295 = sub_1BA6E6D30((_QWORD *)(v70 > 1), v69 + 1, 1, v295);
    v71 = v295;
    v295[2] = v69 + 1;
    v72 = &v71[2 * v69];
    v72[4] = v24;
    v72[5] = v21;
    sub_1BAC685AC((uint64_t)&v356);
    if (!v22)
      break;
    v356 = *(_OWORD *)(v19 + i);
    v73 = *(_OWORD *)(v19 + i + 16);
    v74 = *(_OWORD *)(v19 + i + 32);
    v75 = *(_OWORD *)(v19 + i + 48);
    v360 = *(_OWORD *)(v19 + i + 64);
    v359 = v75;
    v358 = v74;
    v357 = v73;
    v76 = *(_OWORD *)(v19 + i + 80);
    v77 = *(_OWORD *)(v19 + i + 96);
    v78 = *(_OWORD *)(v19 + i + 112);
    v364 = *(_OWORD *)(v19 + i + 128);
    v363 = v78;
    v362 = v77;
    v361 = v76;
    v79 = *(_OWORD *)(v19 + i + 144);
    v80 = *(_OWORD *)(v19 + i + 160);
    v81 = *(_OWORD *)(v19 + i + 176);
    v368 = *(_QWORD *)(v19 + i + 192);
    v367 = v81;
    v366 = v80;
    v365 = v79;
    v21 = *((_QWORD *)&v356 + 1);
    --v22;
  }
  v9 = v19;
  swift_bridgeObjectRelease();
  v10 = v293;
LABEL_20:
  v82 = sub_1BA6E6D30(0, (int64_t)v294, 0, MEMORY[0x1E0DEE9D8]);
  v83 = v82;
  v84 = *(_QWORD *)(v10 + 16);
  v284 = (_QWORD *)v9;
  if (v84)
  {
    swift_bridgeObjectRetain();
    v85 = v84 - 1;
    v86 = 32;
    v87 = v83;
    while (1)
    {
      v356 = *(_OWORD *)(v10 + v86);
      v88 = *(_OWORD *)(v10 + v86 + 16);
      v89 = *(_OWORD *)(v10 + v86 + 32);
      v90 = *(_OWORD *)(v10 + v86 + 48);
      v360 = *(_OWORD *)(v10 + v86 + 64);
      v359 = v90;
      v358 = v89;
      v357 = v88;
      v91 = *(_OWORD *)(v10 + v86 + 80);
      v92 = *(_OWORD *)(v10 + v86 + 96);
      v93 = *(_OWORD *)(v10 + v86 + 112);
      v364 = *(_OWORD *)(v10 + v86 + 128);
      v363 = v93;
      v362 = v92;
      v361 = v91;
      v94 = *(_OWORD *)(v10 + v86 + 144);
      v95 = *(_OWORD *)(v10 + v86 + 160);
      v96 = *(_OWORD *)(v10 + v86 + 176);
      v368 = *(_QWORD *)(v10 + v86 + 192);
      v367 = v96;
      v366 = v95;
      v365 = v94;
      v97 = v356;
      v352 = *(_OWORD *)(v10 + v86 + 144);
      v353 = *(_OWORD *)(v10 + v86 + 160);
      v354 = *(_OWORD *)(v10 + v86 + 176);
      v355 = *(_QWORD *)(v10 + v86 + 192);
      v351[2] = *(_OWORD *)(v10 + v86 + 80);
      v351[3] = *(_OWORD *)(v10 + v86 + 96);
      v351[4] = *(_OWORD *)(v10 + v86 + 112);
      v351[5] = *(_OWORD *)(v10 + v86 + 128);
      v349 = *(_OWORD *)(v10 + v86 + 16);
      v350 = *(_OWORD *)(v10 + v86 + 32);
      v351[0] = *(_OWORD *)(v10 + v86 + 48);
      v351[1] = *(_OWORD *)(v10 + v86 + 64);
      v348 = *(_OWORD *)(v10 + v86);
      v98 = v369;
      v99 = v369[2];
      sub_1BAC68490((uint64_t)&v356);
      if (v99)
      {
        swift_bridgeObjectRetain();
        v100 = sub_1BA6E35A8(v97, *((uint64_t *)&v97 + 1));
        if ((v101 & 1) != 0)
        {
          v294 = v87;
          v102 = v98[7] + 200 * v100;
          v311 = *(_OWORD *)v102;
          v103 = *(_OWORD *)(v102 + 48);
          v104 = *(_OWORD *)(v102 + 64);
          v105 = *(_OWORD *)(v102 + 32);
          v312 = *(_OWORD *)(v102 + 16);
          v313 = v105;
          v314 = v103;
          v315 = v104;
          v106 = *(_OWORD *)(v102 + 80);
          v107 = *(_OWORD *)(v102 + 96);
          v108 = *(_OWORD *)(v102 + 128);
          v318 = *(_OWORD *)(v102 + 112);
          v319 = v108;
          v316 = v106;
          v317 = v107;
          v109 = *(_OWORD *)(v102 + 144);
          v110 = *(_OWORD *)(v102 + 160);
          v111 = *(_OWORD *)(v102 + 176);
          v323 = *(_QWORD *)(v102 + 192);
          v321 = v110;
          v322 = v111;
          v320 = v109;
          sub_1BAC68490((uint64_t)&v311);
          swift_bridgeObjectRelease();
          v345 = v321;
          v346 = v322;
          v343[3] = v317;
          v343[4] = v318;
          v344 = v320;
          v343[5] = v319;
          v342 = v313;
          v343[0] = v314;
          v112 = v311;
          v347 = v323;
          v343[2] = v316;
          v343[1] = v315;
          v341 = v312;
          v340 = v311;
          sub_1BA6E7478((uint64_t)&v348, (uint64_t)&v324);
          swift_bridgeObjectRetain();
          v113 = swift_isUniquelyReferenced_nonNull_native();
          v337 = v98;
          v115 = sub_1BA6E35A8(v112, *((uint64_t *)&v112 + 1));
          v116 = v98[2];
          v117 = (v114 & 1) == 0;
          v118 = v116 + v117;
          if (__OFADD__(v116, v117))
            goto LABEL_97;
          v119 = v114;
          if (v98[3] >= v118)
          {
            if ((v113 & 1) != 0)
            {
              if ((v114 & 1) == 0)
                goto LABEL_49;
            }
            else
            {
              sub_1BB4C80CC();
              if ((v119 & 1) == 0)
                goto LABEL_49;
            }
          }
          else
          {
            sub_1BB4B80BC(v118, v113);
            v120 = sub_1BA6E35A8(v112, *((uint64_t *)&v112 + 1));
            if ((v119 & 1) != (v121 & 1))
              goto LABEL_100;
            v115 = v120;
            if ((v119 & 1) == 0)
            {
LABEL_49:
              v153 = v337;
              v337[(v115 >> 6) + 8] |= 1 << v115;
              *(_OWORD *)(v153[6] + 16 * v115) = v112;
              v185 = v153[7] + 200 * v115;
              v186 = v327;
              *(_OWORD *)(v185 + 32) = v326;
              *(_OWORD *)(v185 + 48) = v186;
              v187 = v325;
              *(_OWORD *)v185 = v324;
              *(_OWORD *)(v185 + 16) = v187;
              v188 = v331;
              *(_OWORD *)(v185 + 96) = v330;
              *(_OWORD *)(v185 + 112) = v188;
              v189 = v329;
              *(_OWORD *)(v185 + 64) = v328;
              *(_OWORD *)(v185 + 80) = v189;
              *(_QWORD *)(v185 + 192) = v336;
              v190 = v335;
              *(_OWORD *)(v185 + 160) = v334;
              *(_OWORD *)(v185 + 176) = v190;
              v191 = v333;
              *(_OWORD *)(v185 + 128) = v332;
              *(_OWORD *)(v185 + 144) = v191;
              v192 = v153[2];
              v67 = __OFADD__(v192, 1);
              v193 = v192 + 1;
              if (v67)
                goto LABEL_98;
              v153[2] = v193;
              swift_bridgeObjectRetain();
LABEL_51:
              v369 = v153;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v296[10] = v345;
              v296[11] = v346;
              v297 = v347;
              v296[6] = v343[3];
              v296[7] = v343[4];
              v296[8] = v343[5];
              v296[9] = v344;
              v296[2] = v342;
              v296[3] = v343[0];
              v296[4] = v343[1];
              v296[5] = v343[2];
              v296[0] = v340;
              v296[1] = v341;
              sub_1BAC685AC((uint64_t)v296);
              v308 = v353;
              v309 = v354;
              v310 = v355;
              v304 = v351[3];
              v305 = v351[4];
              v306 = v351[5];
              v307 = v352;
              v300 = v350;
              v301 = v351[0];
              v302 = v351[1];
              v303 = v351[2];
              v298 = v348;
              v299 = v349;
              sub_1BAC685AC((uint64_t)&v298);
              v10 = v293;
              v87 = v294;
              if (!v85)
                goto LABEL_53;
              goto LABEL_52;
            }
          }
          v153 = v337;
          v154 = v337[7] + 200 * v115;
          v298 = *(_OWORD *)v154;
          v155 = *(_OWORD *)(v154 + 64);
          v157 = *(_OWORD *)(v154 + 16);
          v156 = *(_OWORD *)(v154 + 32);
          v301 = *(_OWORD *)(v154 + 48);
          v302 = v155;
          v299 = v157;
          v300 = v156;
          v158 = *(_OWORD *)(v154 + 128);
          v160 = *(_OWORD *)(v154 + 80);
          v159 = *(_OWORD *)(v154 + 96);
          v305 = *(_OWORD *)(v154 + 112);
          v306 = v158;
          v303 = v160;
          v304 = v159;
          v162 = *(_OWORD *)(v154 + 160);
          v161 = *(_OWORD *)(v154 + 176);
          v163 = *(_OWORD *)(v154 + 144);
          v310 = *(_QWORD *)(v154 + 192);
          v308 = v162;
          v309 = v161;
          v307 = v163;
          sub_1BAC685AC((uint64_t)&v298);
          v164 = v335;
          *(_OWORD *)(v154 + 160) = v334;
          *(_OWORD *)(v154 + 176) = v164;
          *(_QWORD *)(v154 + 192) = v336;
          v165 = v331;
          *(_OWORD *)(v154 + 96) = v330;
          *(_OWORD *)(v154 + 112) = v165;
          v166 = v333;
          *(_OWORD *)(v154 + 128) = v332;
          *(_OWORD *)(v154 + 144) = v166;
          v167 = v327;
          *(_OWORD *)(v154 + 32) = v326;
          *(_OWORD *)(v154 + 48) = v167;
          v168 = v329;
          *(_OWORD *)(v154 + 64) = v328;
          *(_OWORD *)(v154 + 80) = v168;
          v169 = v325;
          *(_OWORD *)v154 = v324;
          *(_OWORD *)(v154 + 16) = v169;
          goto LABEL_51;
        }
        swift_bridgeObjectRelease();
      }
      v294 = (_QWORD *)v86;
      v122 = v85;
      v123 = v87;
      sub_1BAC68490((uint64_t)&v356);
      swift_bridgeObjectRetain();
      v124 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v324 = v98;
      v126 = sub_1BA6E35A8(v97, *((uint64_t *)&v97 + 1));
      v127 = v98[2];
      v128 = (v125 & 1) == 0;
      v129 = v127 + v128;
      if (__OFADD__(v127, v128))
        goto LABEL_94;
      v130 = v125;
      if (v98[3] >= v129)
      {
        if ((v124 & 1) != 0)
        {
          if ((v125 & 1) != 0)
            goto LABEL_37;
        }
        else
        {
          sub_1BB4C80CC();
          if ((v130 & 1) != 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1BB4B80BC(v129, v124);
        v131 = sub_1BA6E35A8(v97, *((uint64_t *)&v97 + 1));
        if ((v130 & 1) != (v132 & 1))
          goto LABEL_100;
        v126 = v131;
        if ((v130 & 1) != 0)
        {
LABEL_37:
          v133 = (_QWORD *)v324;
          v134 = *(_QWORD *)(v324 + 56) + 200 * v126;
          v340 = *(_OWORD *)v134;
          v135 = *(_OWORD *)(v134 + 48);
          v137 = *(_OWORD *)(v134 + 16);
          v136 = *(_OWORD *)(v134 + 32);
          v343[1] = *(_OWORD *)(v134 + 64);
          v343[0] = v135;
          v341 = v137;
          v342 = v136;
          v138 = *(_OWORD *)(v134 + 112);
          v140 = *(_OWORD *)(v134 + 80);
          v139 = *(_OWORD *)(v134 + 96);
          v343[5] = *(_OWORD *)(v134 + 128);
          v343[4] = v138;
          v343[2] = v140;
          v343[3] = v139;
          v142 = *(_OWORD *)(v134 + 160);
          v141 = *(_OWORD *)(v134 + 176);
          v143 = *(_OWORD *)(v134 + 144);
          v347 = *(_QWORD *)(v134 + 192);
          v346 = v141;
          v344 = v143;
          v345 = v142;
          sub_1BAC685AC((uint64_t)&v340);
          *(_OWORD *)v134 = v356;
          v144 = v360;
          v145 = v358;
          v146 = v357;
          *(_OWORD *)(v134 + 48) = v359;
          *(_OWORD *)(v134 + 64) = v144;
          *(_OWORD *)(v134 + 16) = v146;
          *(_OWORD *)(v134 + 32) = v145;
          v147 = v364;
          v148 = v362;
          v149 = v361;
          *(_OWORD *)(v134 + 112) = v363;
          *(_OWORD *)(v134 + 128) = v147;
          *(_OWORD *)(v134 + 80) = v149;
          *(_OWORD *)(v134 + 96) = v148;
          v150 = v367;
          v151 = v366;
          v152 = v365;
          *(_QWORD *)(v134 + 192) = v368;
          *(_OWORD *)(v134 + 160) = v151;
          *(_OWORD *)(v134 + 176) = v150;
          *(_OWORD *)(v134 + 144) = v152;
          goto LABEL_44;
        }
      }
      v133 = (_QWORD *)v324;
      *(_QWORD *)(v324 + 8 * (v126 >> 6) + 64) |= 1 << v126;
      *(_OWORD *)(v133[6] + 16 * v126) = v97;
      v170 = v133[7] + 200 * v126;
      v171 = v368;
      v172 = v367;
      v173 = v366;
      *(_OWORD *)(v170 + 144) = v365;
      *(_OWORD *)(v170 + 160) = v173;
      *(_OWORD *)(v170 + 176) = v172;
      *(_QWORD *)(v170 + 192) = v171;
      v174 = v364;
      v175 = v363;
      v176 = v362;
      *(_OWORD *)(v170 + 80) = v361;
      *(_OWORD *)(v170 + 96) = v176;
      *(_OWORD *)(v170 + 112) = v175;
      *(_OWORD *)(v170 + 128) = v174;
      v177 = v360;
      v178 = v359;
      v179 = v358;
      *(_OWORD *)(v170 + 16) = v357;
      *(_OWORD *)(v170 + 32) = v179;
      *(_OWORD *)(v170 + 48) = v178;
      *(_OWORD *)(v170 + 64) = v177;
      *(_OWORD *)v170 = v356;
      v180 = v133[2];
      v67 = __OFADD__(v180, 1);
      v181 = v180 + 1;
      if (v67)
        goto LABEL_96;
      v133[2] = v181;
      swift_bridgeObjectRetain();
LABEL_44:
      v369 = v133;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v182 = v348;
      v87 = v123;
      v183 = v123[2];
      v184 = v123[3];
      swift_bridgeObjectRetain();
      v10 = v293;
      if (v183 >= v184 >> 1)
        v87 = sub_1BA6E6D30((_QWORD *)(v184 > 1), v183 + 1, 1, v123);
      v85 = v122;
      v87[2] = v183 + 1;
      *(_OWORD *)&v87[2 * v183 + 4] = v182;
      v340 = v182;
      v341 = v349;
      v342 = v350;
      LOBYTE(v343[0]) = v351[0];
      *(_OWORD *)((char *)v343 + 8) = *(_OWORD *)((char *)v351 + 8);
      *(_OWORD *)((char *)&v343[1] + 8) = *(_OWORD *)((char *)&v351[1] + 8);
      *(_OWORD *)((char *)&v343[2] + 8) = *(_OWORD *)((char *)&v351[2] + 8);
      *(_OWORD *)((char *)&v343[3] + 8) = *(_OWORD *)((char *)&v351[3] + 8);
      *(_OWORD *)((char *)&v343[4] + 8) = *(_OWORD *)((char *)&v351[4] + 8);
      BYTE8(v343[5]) = BYTE8(v351[5]);
      *(_QWORD *)&v344 = v352;
      WORD4(v344) = WORD4(v352);
      BYTE10(v344) = BYTE10(v352);
      v345 = v353;
      v346 = v354;
      v347 = v355;
      sub_1BAC685AC((uint64_t)&v340);
      v86 = (uint64_t)v294;
      if (!v85)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
LABEL_52:
      --v85;
      v86 += 200;
    }
  }
  v87 = v82;
LABEL_55:
  *(_QWORD *)&v356 = v87;
  swift_bridgeObjectRetain();
  v194 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v194);
  v195 = v356;
  v196 = *(_QWORD *)(v356 + 16);
  if (v196)
  {
    v294 = v87;
    swift_bridgeObjectRetain();
    v197 = (uint64_t *)(v195 + 40);
    v198 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v199 = (uint64_t)v369;
      if (v369[2])
      {
        v200 = *(v197 - 1);
        v201 = *v197;
        swift_bridgeObjectRetain_n();
        v202 = sub_1BA6E35A8(v200, v201);
        if ((v203 & 1) != 0)
        {
          v204 = *(_QWORD *)(v199 + 56) + 200 * v202;
          v356 = *(_OWORD *)v204;
          v205 = *(_OWORD *)(v204 + 48);
          v206 = *(_OWORD *)(v204 + 64);
          v207 = *(_OWORD *)(v204 + 32);
          v357 = *(_OWORD *)(v204 + 16);
          v358 = v207;
          v360 = v206;
          v359 = v205;
          v208 = *(_OWORD *)(v204 + 80);
          v209 = *(_OWORD *)(v204 + 96);
          v210 = *(_OWORD *)(v204 + 112);
          v364 = *(_OWORD *)(v204 + 128);
          v363 = v210;
          v362 = v209;
          v361 = v208;
          v211 = *(_OWORD *)(v204 + 144);
          v212 = *(_OWORD *)(v204 + 160);
          v213 = *(_OWORD *)(v204 + 176);
          v368 = *(_QWORD *)(v204 + 192);
          v367 = v213;
          v366 = v212;
          v365 = v211;
          sub_1BAC68490((uint64_t)&v356);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v198 = sub_1BA6E6D44(0, v198[2] + 1, 1, v198);
          v215 = v198[2];
          v214 = v198[3];
          if (v215 >= v214 >> 1)
            v198 = sub_1BA6E6D44((_QWORD *)(v214 > 1), v215 + 1, 1, v198);
          v198[2] = v215 + 1;
          v216 = &v198[25 * v215];
          *((_OWORD *)v216 + 2) = v356;
          v217 = v357;
          v218 = v358;
          v219 = v360;
          *((_OWORD *)v216 + 5) = v359;
          *((_OWORD *)v216 + 6) = v219;
          *((_OWORD *)v216 + 3) = v217;
          *((_OWORD *)v216 + 4) = v218;
          v220 = v361;
          v221 = v362;
          v222 = v364;
          *((_OWORD *)v216 + 9) = v363;
          *((_OWORD *)v216 + 10) = v222;
          *((_OWORD *)v216 + 7) = v220;
          *((_OWORD *)v216 + 8) = v221;
          v223 = v365;
          v224 = v366;
          v225 = v367;
          v216[28] = v368;
          *((_OWORD *)v216 + 12) = v224;
          *((_OWORD *)v216 + 13) = v225;
          *((_OWORD *)v216 + 11) = v223;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v197 += 2;
      --v196;
    }
    while (v196);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v198 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v226 = v291;
  v227 = v291[7];
  v293 = v227;
  if (!v227)
    v227 = swift_bridgeObjectRetain();
  *(_QWORD *)&v298 = v227;
  swift_beginAccess();
  v295 = (_QWORD *)v226[8];
  v284 = v295;
  if (!v295)
  {
    v228 = v292;
    swift_beginAccess();
    v295 = *(_QWORD **)(v228 + 64);
    swift_bridgeObjectRetain();
  }
  v229 = v226[9];
  v283 = v229;
  if ((~v229 & 0xF000000000000007) == 0)
  {
    v229 = *(_QWORD *)(v292 + 72);
    sub_1BA6E6C68(v229);
  }
  *(_QWORD *)&v296[0] = v229;
  v230 = v226[10];
  v282 = v230;
  if (!v230)
    v230 = swift_bridgeObjectRetain();
  v294 = (_QWORD *)v230;
  v231 = *((unsigned __int8 *)v226 + 88);
  if (v231 == 9)
    LOBYTE(v231) = *(_BYTE *)(v292 + 88);
  v339 = v231;
  v232 = v226[12];
  v233 = v226[13];
  v234 = *((unsigned __int8 *)v226 + 112);
  v280 = v233;
  v281 = v232;
  v235 = v234;
  v279 = v234;
  if (v234 >= 0xFE)
  {
    v232 = *(_QWORD *)(v292 + 96);
    v233 = *(_QWORD *)(v292 + 104);
    v235 = *(_BYTE *)(v292 + 112);
    sub_1BA6E6C54(v232, v233, v235);
  }
  *(_QWORD *)&v324 = v232;
  *((_QWORD *)&v324 + 1) = v233;
  LOBYTE(v325) = v235;
  v236 = v226[15];
  v278 = v236;
  if (v236 == 3)
  {
    v236 = *(_QWORD *)(v292 + 120);
    sub_1BA6E6C80(v236);
  }
  v369 = (_QWORD *)v236;
  v237 = *((unsigned __int8 *)v226 + 128);
  if (v237 == 4)
    LOBYTE(v237) = *(_BYTE *)(v292 + 128);
  v238 = v226[17];
  v239 = v226[18];
  v240 = v226[19];
  v241 = v226[20];
  v242 = v226[21];
  v243 = v226[22];
  v244 = v226[23];
  v245 = v226[24];
  v246 = v226[25];
  v247 = v226[26];
  v276 = v239;
  v277 = v238;
  v248 = v238;
  v274 = v241;
  v275 = v240;
  v249 = v226;
  v250 = v241;
  v272 = v243;
  v273 = v242;
  v270 = v245;
  v271 = v244;
  v268 = v247;
  v269 = v246;
  v338 = v237;
  v251 = *((unsigned __int8 *)v249 + 216);
  v267 = v251;
  if (v251 == 254)
  {
    v252 = *(_QWORD *)(v292 + 136);
    v265 = *(_QWORD *)(v292 + 144);
    v266 = v252;
    v250 = *(_QWORD *)(v292 + 160);
    v264 = *(_QWORD *)(v292 + 152);
    v242 = *(_QWORD *)(v292 + 168);
    v243 = *(_QWORD *)(v292 + 176);
    v244 = *(_QWORD *)(v292 + 184);
    v245 = *(_QWORD *)(v292 + 192);
    v246 = *(_QWORD *)(v292 + 200);
    v247 = *(_QWORD *)(v292 + 208);
    LOBYTE(v251) = *(_BYTE *)(v292 + 216);
    sub_1BA6E8A48(v252, v265, v264, v250, v242, v243, v244, v245, v246, v247, v251);
    v240 = v264;
    v239 = v265;
    v248 = v266;
  }
  *(_QWORD *)&v356 = v248;
  *((_QWORD *)&v356 + 1) = v239;
  *(_QWORD *)&v357 = v240;
  *((_QWORD *)&v357 + 1) = v250;
  *(_QWORD *)&v358 = v242;
  *((_QWORD *)&v358 + 1) = v243;
  *(_QWORD *)&v359 = v244;
  *((_QWORD *)&v359 + 1) = v245;
  *(_QWORD *)&v360 = v246;
  *((_QWORD *)&v360 + 1) = v247;
  v253 = v291;
  v254 = v291[28];
  v255 = v254;
  LOBYTE(v361) = v251;
  if ((~v254 & 0xF000000000000007) == 0)
  {
    v255 = *(_QWORD *)(v292 + 224);
    sub_1BA5E7FF4(v255);
  }
  v337 = (_QWORD *)v255;
  v256 = *((unsigned __int8 *)v253 + 232);
  v257 = v285;
  if (v256 == 2)
    LOBYTE(v256) = *(_BYTE *)(v292 + 232);
  v258 = v253[30];
  v259 = v258;
  v260 = v253[31];
  if (v258 == 1)
  {
    v259 = *(_QWORD *)(v292 + 240);
    v260 = *(_QWORD *)(v292 + 248);
    sub_1BA6E6C90(v259);
  }
  *(_QWORD *)&v311 = v259;
  *((_QWORD *)&v311 + 1) = v260;
  v261 = v290;
  sub_1BA6E70E4((uint64_t)v291 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, v290);
  v262 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v283);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v281, v280, v279);
  sub_1BA6E6C80(v278);
  sub_1BA6E8A48(v277, v276, v275, v274, v273, v272, v271, v270, v269, v268, v267);
  sub_1BA5E7FF4(v254);
  sub_1BA6E6C90(v258);
  FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v288, v287, v257, v286, (uint64_t)v198, (uint64_t *)&v298, (uint64_t)v295, (uint64_t *)v296, (uint64_t)v294, &v339, (uint64_t *)&v324, (uint64_t *)&v369, &v338, &v356, (uint64_t *)&v337, v256, (uint64_t *)&v311, v261);
  return v262;
}

uint64_t sub_1BA6E6C54(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu)
    return sub_1BA6F2B04(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA6E6C68(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

unint64_t sub_1BA6E6C80(unint64_t result)
{
  if (result != 3)
    return sub_1BA6E6E84(result);
  return result;
}

uint64_t sub_1BA6E6C90(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA6E6CC4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu)
    return sub_1BA6F2B88(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA6E6CD8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1BA6E6CF0(unint64_t result)
{
  if (result != 3)
    return sub_1BA6E7468(result);
  return result;
}

uint64_t sub_1BA6E6D00(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BA6E6D30(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, &qword_1ED3C0558, (uint64_t)&type metadata for FormatSelector);
}

_QWORD *sub_1BA6E6D44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3C29A0, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 200);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[25 * v8 + 4])
          memmove(v12, a4 + 4, 200 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6E7378(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA6E6E84(unint64_t result)
{
  if (result >= 3)
    return swift_retain();
  return result;
}

uint64_t sub_1BA6E6E94(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BB38E86C(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_1ED3C0558, (uint64_t)&type metadata for FormatSelector);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6E6FF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6E70E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, char *a10, uint64_t *a11, uint64_t *a12, char *a13, __int128 *a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v24 = *a6;
  v25 = *a8;
  v41 = *a10;
  v26 = *a11;
  v40 = a11[1];
  v39 = *((_BYTE *)a11 + 16);
  v38 = *a12;
  v37 = *a13;
  v35 = a14[1];
  v36 = *a14;
  v33 = a14[3];
  v34 = a14[2];
  v32 = *((_QWORD *)a14 + 8);
  v31 = *((_QWORD *)a14 + 9);
  v30 = *((_BYTE *)a14 + 80);
  v29 = *a15;
  v42 = a17[1];
  v43 = *a17;
  *(_QWORD *)(v18 + 64) = 0;
  swift_beginAccess();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v18 + 48) = a5;
  *(_QWORD *)(v18 + 56) = v24;
  swift_beginAccess();
  *(_QWORD *)(v18 + 64) = a7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 72) = v25;
  *(_QWORD *)(v18 + 80) = a9;
  *(_BYTE *)(v18 + 88) = v41;
  *(_QWORD *)(v18 + 96) = v26;
  *(_QWORD *)(v18 + 104) = v40;
  *(_BYTE *)(v18 + 112) = v39;
  *(_QWORD *)(v18 + 120) = v38;
  *(_BYTE *)(v18 + 128) = v37;
  *(_OWORD *)(v18 + 136) = v36;
  *(_OWORD *)(v18 + 152) = v35;
  *(_OWORD *)(v18 + 168) = v34;
  *(_OWORD *)(v18 + 184) = v33;
  *(_QWORD *)(v18 + 200) = v32;
  *(_QWORD *)(v18 + 208) = v31;
  *(_BYTE *)(v18 + 216) = v30;
  *(_QWORD *)(v18 + 224) = v29;
  *(_BYTE *)(v18 + 232) = a16;
  v27 = v18 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask;
  *(_QWORD *)(v18 + 240) = v43;
  *(_QWORD *)(v18 + 248) = v42;
  sub_1BA6E7324(a18, v27);
  return v18;
}

uint64_t sub_1BA6E7324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA6E7378(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 200 * a1 + 32;
    v6 = a3 + 200 * v4;
    if (v5 >= v6 || v5 + 200 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BA6E7468(unint64_t result)
{
  if (result >= 3)
    return swift_release();
  return result;
}

uint64_t sub_1BA6E7478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v72 = *v2;
  v73 = v2[1];
  v6 = v2[3];
  v83 = v2[5];
  v84 = v2[4];
  v82 = *((unsigned __int8 *)v2 + 48);
  v7 = v2[7];
  v8 = v2[9];
  v91 = v2[10];
  v92 = v2[8];
  v89 = v2[12];
  v90 = v2[11];
  v87 = v2[14];
  v88 = v2[13];
  v80 = v2[16];
  v81 = v2[15];
  v79 = *((unsigned __int8 *)v2 + 136);
  v86 = v2[18];
  v70 = *((unsigned __int8 *)v2 + 153);
  v71 = *((unsigned __int8 *)v2 + 152);
  v69 = *((unsigned __int8 *)v2 + 154);
  v85 = v2[20];
  v93 = v2[22];
  v94 = v2[21];
  v62 = v2[24];
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v39 = *(_QWORD *)(a1 + 64);
  v45 = v2[23];
  v46 = *(_QWORD *)(a1 + 72);
  v48 = *(_QWORD *)(a1 + 80);
  v50 = *(_QWORD *)(a1 + 88);
  v52 = *(_QWORD *)(a1 + 96);
  v54 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 120);
  v56 = *(_QWORD *)(a1 + 112);
  v58 = *(_QWORD *)(a1 + 128);
  v60 = *(_BYTE *)(a1 + 136);
  v68 = *(_BYTE *)(a1 + 152);
  v67 = *(_BYTE *)(a1 + 153);
  v66 = *(_BYTE *)(a1 + 154);
  v40 = *(_QWORD *)(a1 + 144);
  v41 = *(_QWORD *)(a1 + 160);
  v37 = *(_QWORD *)(a1 + 168);
  v38 = *(_QWORD *)(a1 + 176);
  v43 = *(_QWORD *)(a1 + 184);
  v78 = v2[2];
  v42 = *(_QWORD *)(a1 + 192);
  v74 = v78;
  if ((~v78 & 0xF000000000000007) == 0)
  {
    v78 = *(_QWORD *)(a1 + 16);
    v13 = v2[3];
    sub_1BA6E6C68(v78);
    v6 = v13;
  }
  v14 = v6;
  if (!v6)
  {
    swift_bridgeObjectRetain();
    v14 = v4;
  }
  v65 = v14;
  v16 = v83;
  v15 = v84;
  v17 = v82;
  if (v82 >= 0xFE)
  {
    sub_1BA6E6C54(v5, v9, v10);
    v15 = v5;
    v16 = v9;
    v17 = v10;
  }
  v64 = v15;
  v77 = v7;
  v18 = v92;
  v75 = v8;
  v76 = v8;
  v19 = v90;
  v20 = v91;
  v21 = v88;
  v22 = v89;
  v23 = v87;
  v25 = v80;
  v24 = v81;
  v26 = v79;
  v63 = v17;
  v44 = v16;
  if (v79 == 254)
  {
    v18 = v39;
    v20 = v48;
    v22 = v52;
    sub_1BA6E8A48(v11, v39, v46, v48, v50, v52, v54, v56, v12, v58, v60);
    v76 = v46;
    v77 = v11;
    v19 = v50;
    v21 = v54;
    v23 = v56;
    v24 = v12;
    v25 = v58;
    v26 = v60;
  }
  v47 = v26;
  v49 = v25;
  v51 = v24;
  v53 = v23;
  v55 = v21;
  v57 = v22;
  v59 = v19;
  v61 = v20;
  v27 = v86;
  if ((~v86 & 0xF000000000000007) == 0)
  {
    sub_1BA5E7FF4(v40);
    v27 = v40;
  }
  v28 = v85;
  if (v85 == 3)
  {
    v28 = v41;
    sub_1BA6E6C80(v41);
  }
  v29 = v94;
  if (!v94)
  {
    v29 = v37;
    swift_bridgeObjectRetain();
  }
  v30 = v93;
  if (!v93)
  {
    v30 = v38;
    swift_bridgeObjectRetain();
  }
  v31 = v45;
  v32 = v62;
  if (v45 == 1)
  {
    v31 = v43;
    sub_1BA6E6C90(v43);
    v32 = v42;
  }
  v33 = v69;
  if (v69 == 9)
    v33 = v66;
  *(_QWORD *)a2 = v72;
  *(_QWORD *)(a2 + 8) = v73;
  v34 = v67;
  if (v70 != 4)
    v34 = v70;
  v35 = v71;
  if (v71 == 2)
    v35 = v68;
  *(_QWORD *)(a2 + 16) = v78;
  *(_QWORD *)(a2 + 24) = v65;
  *(_QWORD *)(a2 + 32) = v64;
  *(_QWORD *)(a2 + 40) = v44;
  *(_BYTE *)(a2 + 48) = v63;
  *(_QWORD *)(a2 + 56) = v77;
  *(_QWORD *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v76;
  *(_QWORD *)(a2 + 80) = v61;
  *(_QWORD *)(a2 + 88) = v59;
  *(_QWORD *)(a2 + 96) = v57;
  *(_QWORD *)(a2 + 104) = v55;
  *(_QWORD *)(a2 + 112) = v53;
  *(_QWORD *)(a2 + 120) = v51;
  *(_QWORD *)(a2 + 128) = v49;
  *(_BYTE *)(a2 + 136) = v47;
  *(_QWORD *)(a2 + 144) = v27;
  *(_BYTE *)(a2 + 152) = v35;
  *(_BYTE *)(a2 + 153) = v34;
  *(_BYTE *)(a2 + 154) = v33;
  *(_QWORD *)(a2 + 160) = v28;
  *(_QWORD *)(a2 + 168) = v29;
  *(_QWORD *)(a2 + 176) = v30;
  *(_QWORD *)(a2 + 184) = v31;
  *(_QWORD *)(a2 + 192) = v32;
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v74);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v84, v83, v82);
  sub_1BA6E8A48(v7, v92, v75, v91, v90, v89, v88, v87, v81, v80, v79);
  sub_1BA5E7FF4(v86);
  sub_1BA6E6C80(v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA6E6C90(v45);
}

void sub_1BA6E78EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF640)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF640);
  }
}

uint64_t sub_1BA6E794C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t j;
  __int128 v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  __int128 v49;
  char v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  char v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  unint64_t v67;
  char v68;
  _QWORD *v69;
  void *v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _OWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t result;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170[66];
  __int128 v171[33];
  _OWORD __src[33];
  _OWORD v173[33];
  uint64_t v174;
  uint64_t v175[2];
  uint64_t v176;
  _QWORD *v177;
  _OWORD v178[33];
  _QWORD v179[66];
  _OWORD __dst[37];
  _BYTE v181[200];
  _BYTE v182[200];
  _OWORD v183[12];
  __int16 v184;

  MEMORY[0x1E0C80A78](a1);
  v2 = v1;
  v4 = v3;
  sub_1BA744E38((uint64_t)(v1 + 37), (uint64_t)v182, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v182, (uint64_t)v183, (unint64_t *)&qword_1ED3B6270);
  v5 = sub_1BA92287C((uint64_t)v183);
  v138 = v4;
  v6 = v4 + 296;
  if (v5 == 1)
  {
    sub_1BA744E38(v6, (uint64_t)v179, (unint64_t *)&qword_1ED3B6270);
    sub_1BA744E38((uint64_t)v179, (uint64_t)__dst, (unint64_t *)&qword_1ED3B6270);
    sub_1BA92287C((uint64_t)__dst);
    v7 = v179;
  }
  else
  {
    sub_1BA744E38(v6, (uint64_t)v179, (unint64_t *)&qword_1ED3B6270);
    sub_1BA744E38((uint64_t)v179, (uint64_t)__dst, (unint64_t *)&qword_1ED3B6270);
    if (sub_1BA92287C((uint64_t)__dst) == 1)
    {
      v7 = v182;
    }
    else
    {
      v178[10] = v183[10];
      v178[11] = v183[11];
      LOWORD(v178[12]) = v184;
      v178[6] = v183[6];
      v178[7] = v183[7];
      v178[9] = v183[9];
      v178[8] = v183[8];
      v178[2] = v183[2];
      v178[3] = v183[3];
      v178[5] = v183[5];
      v178[4] = v183[4];
      v178[1] = v183[1];
      v178[0] = v183[0];
      __src[10] = __dst[10];
      __src[11] = __dst[11];
      LOWORD(__src[12]) = __dst[12];
      __src[6] = __dst[6];
      __src[7] = __dst[7];
      __src[9] = __dst[9];
      __src[8] = __dst[8];
      __src[2] = __dst[2];
      __src[3] = __dst[3];
      __src[5] = __dst[5];
      __src[4] = __dst[4];
      __src[1] = __dst[1];
      __src[0] = __dst[0];
      FormatParagraphStyle.merge(other:)((unint64_t)__src, (uint64_t)v173);
      v178[10] = v173[10];
      v178[11] = v173[11];
      LOWORD(v178[12]) = v173[12];
      v178[6] = v173[6];
      v178[7] = v173[7];
      v178[9] = v173[9];
      v178[8] = v173[8];
      v178[2] = v173[2];
      v178[3] = v173[3];
      v178[5] = v173[5];
      v178[4] = v173[4];
      v178[1] = v173[1];
      v178[0] = v173[0];
      nullsub_1(v178);
      v7 = v178;
    }
  }
  sub_1BA744E38((uint64_t)v7, (uint64_t)v181, (unint64_t *)&qword_1ED3B6270);
  swift_beginAccess();
  v8 = v1[2];
  v9 = v2[3];
  v10 = v2[5];
  v136 = v2[4];
  swift_beginAccess();
  v11 = v2[6];
  swift_beginAccess();
  v12 = *(_QWORD *)(v4 + 48);
  v175[0] = MEMORY[0x1E0DEE9E0];
  v13 = *(_QWORD *)(v11 + 16);
  v14 = *(_QWORD *)(v12 + 16);
  if (__OFADD__(v13, v14))
    goto LABEL_104;
  v135 = v8;
  v137 = v2;
  sub_1BA6E9720();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v146 = v12;
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v168 = sub_1BA6E6D30(0, v13, 0, MEMORY[0x1E0DEE9D8]);
  v15 = *(_QWORD *)(v11 + 16);
  v133 = v10;
  v134 = v9;
  v16 = v11;
  if (v15)
  {
    v166 = v14;
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(v11 + 32), 0x210uLL);
    v17 = *((_QWORD *)&__dst[0] + 1);
    v18 = v15 - 1;
    for (i = 560; ; i += 528)
    {
      v20 = *(_QWORD *)&__dst[0];
      sub_1BAC67FA0((uint64_t)__dst);
      sub_1BAC67FA0((uint64_t)__dst);
      swift_bridgeObjectRetain();
      v21 = v175[0];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v178[0] = v21;
      v24 = sub_1BA6E35A8(v20, v17);
      v25 = *(_QWORD *)(v21 + 16);
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v28 = v23;
      if (*(_QWORD *)(v21 + 24) >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v23 & 1) != 0)
            goto LABEL_16;
        }
        else
        {
          sub_1BB4C7EB8();
          if ((v28 & 1) != 0)
            goto LABEL_16;
        }
      }
      else
      {
        sub_1BB4B7A1C(v27, isUniquelyReferenced_nonNull_native);
        v29 = sub_1BA6E35A8(v20, v17);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_105;
        v24 = v29;
        if ((v28 & 1) != 0)
        {
LABEL_16:
          v31 = *(_QWORD **)&v178[0];
          v32 = (void *)(*(_QWORD *)(*(_QWORD *)&v178[0] + 56) + 528 * v24);
          memcpy(v179, v32, sizeof(v179));
          sub_1BAC68120((uint64_t)v179);
          memcpy(v32, __dst, 0x210uLL);
          goto LABEL_20;
        }
      }
      v31 = *(_QWORD **)&v178[0];
      *(_QWORD *)(*(_QWORD *)&v178[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
      v33 = (uint64_t *)(v31[6] + 16 * v24);
      *v33 = v20;
      v33[1] = v17;
      memcpy((void *)(v31[7] + 528 * v24), __dst, 0x210uLL);
      v34 = v31[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_100;
      v31[2] = v36;
      swift_bridgeObjectRetain();
LABEL_20:
      v175[0] = (uint64_t)v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v168[2];
      v38 = v168[3];
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1)
        v168 = sub_1BA6E6D30((_QWORD *)(v38 > 1), v37 + 1, 1, v168);
      v168[2] = v37 + 1;
      v39 = &v168[2 * v37];
      v39[4] = v20;
      v39[5] = v17;
      sub_1BAC68120((uint64_t)__dst);
      if (!v18)
      {
        swift_bridgeObjectRelease();
        v40 = v12;
        v14 = v166;
        goto LABEL_26;
      }
      memcpy(__dst, (const void *)(v16 + i), 0x210uLL);
      v17 = *((_QWORD *)&__dst[0] + 1);
      --v18;
    }
  }
  v40 = v12;
LABEL_26:
  v167 = sub_1BA6E6D30(0, v14, 0, MEMORY[0x1E0DEE9D8]);
  v41 = *(_QWORD *)(v40 + 16);
  if (!v41)
    goto LABEL_60;
  swift_bridgeObjectRetain();
  v42 = v41 - 1;
  for (j = 32; ; j += 528)
  {
    memcpy(__dst, (const void *)(v40 + j), 0x210uLL);
    v44 = __dst[0];
    memcpy(v179, __dst, sizeof(v179));
    v45 = (_QWORD *)v175[0];
    v46 = *(_QWORD *)(v175[0] + 16);
    sub_1BAC67FA0((uint64_t)__dst);
    if (!v46)
      break;
    swift_bridgeObjectRetain();
    v47 = sub_1BA6E35A8(v44, *((uint64_t *)&v44 + 1));
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      break;
    }
    memcpy(__src, (const void *)(v45[7] + 528 * v47), sizeof(__src));
    sub_1BAC67FA0((uint64_t)__src);
    swift_bridgeObjectRelease();
    v49 = __src[0];
    memcpy(v178, __src, sizeof(v178));
    sub_1BA6E90A8((uint64_t)v179, (uint64_t)v173);
    swift_bridgeObjectRetain();
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v177 = v45;
    v52 = sub_1BA6E35A8(v49, *((uint64_t *)&v49 + 1));
    v53 = v45[2];
    v54 = (v51 & 1) == 0;
    v55 = v53 + v54;
    if (__OFADD__(v53, v54))
      goto LABEL_102;
    v56 = v51;
    if (v45[3] >= v55)
    {
      if ((v50 & 1) != 0)
      {
        if ((v51 & 1) != 0)
          goto LABEL_46;
      }
      else
      {
        sub_1BB4C7EB8();
        if ((v56 & 1) != 0)
          goto LABEL_46;
      }
    }
    else
    {
      sub_1BB4B7A1C(v55, v50);
      v57 = sub_1BA6E35A8(v49, *((uint64_t *)&v49 + 1));
      if ((v56 & 1) != (v58 & 1))
        goto LABEL_105;
      v52 = v57;
      if ((v56 & 1) != 0)
      {
LABEL_46:
        v71 = v177;
        v72 = (void *)(v177[7] + 528 * v52);
        memcpy(v171, v72, sizeof(v171));
        sub_1BAC68120((uint64_t)v171);
        memcpy(v72, v173, 0x210uLL);
        goto LABEL_57;
      }
    }
    v71 = v177;
    v177[(v52 >> 6) + 8] |= 1 << v52;
    *(_OWORD *)(v71[6] + 16 * v52) = v49;
    memcpy((void *)(v71[7] + 528 * v52), v173, 0x210uLL);
    v90 = v71[2];
    v35 = __OFADD__(v90, 1);
    v91 = v90 + 1;
    if (v35)
      goto LABEL_103;
    v71[2] = v91;
    swift_bridgeObjectRetain();
LABEL_57:
    v175[0] = (uint64_t)v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v170, v178, sizeof(v170));
    sub_1BAC68120((uint64_t)v170);
    memcpy(v171, v179, sizeof(v171));
    sub_1BAC68120((uint64_t)v171);
    if (!v42)
      goto LABEL_59;
LABEL_58:
    --v42;
  }
  v164 = j;
  sub_1BAC67FA0((uint64_t)__dst);
  swift_bridgeObjectRetain();
  v59 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v173[0] = v45;
  v61 = sub_1BA6E35A8(v44, *((uint64_t *)&v44 + 1));
  v62 = v45[2];
  v63 = (v60 & 1) == 0;
  v64 = v62 + v63;
  v65 = v167;
  if (__OFADD__(v62, v63))
    goto LABEL_99;
  v66 = v60;
  if (v45[3] >= v64)
  {
    if ((v59 & 1) != 0)
    {
      if ((v60 & 1) == 0)
        goto LABEL_48;
    }
    else
    {
      sub_1BB4C7EB8();
      if ((v66 & 1) == 0)
        goto LABEL_48;
    }
    goto LABEL_43;
  }
  sub_1BB4B7A1C(v64, v59);
  v67 = sub_1BA6E35A8(v44, *((uint64_t *)&v44 + 1));
  if ((v66 & 1) != (v68 & 1))
    goto LABEL_105;
  v61 = v67;
  if ((v66 & 1) != 0)
  {
LABEL_43:
    v69 = *(_QWORD **)&v173[0];
    v70 = (void *)(*(_QWORD *)(*(_QWORD *)&v173[0] + 56) + 528 * v61);
    memcpy(v178, v70, sizeof(v178));
    sub_1BAC68120((uint64_t)v178);
    memcpy(v70, __dst, 0x210uLL);
    goto LABEL_50;
  }
LABEL_48:
  v69 = *(_QWORD **)&v173[0];
  *(_QWORD *)(*(_QWORD *)&v173[0] + 8 * (v61 >> 6) + 64) |= 1 << v61;
  *(_OWORD *)(v69[6] + 16 * v61) = v44;
  memcpy((void *)(v69[7] + 528 * v61), __dst, 0x210uLL);
  v73 = v69[2];
  v35 = __OFADD__(v73, 1);
  v74 = v73 + 1;
  if (v35)
    goto LABEL_101;
  v69[2] = v74;
  swift_bridgeObjectRetain();
LABEL_50:
  v175[0] = (uint64_t)v69;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75 = v179[0];
  v76 = v179[1];
  v77 = v167[2];
  v78 = v167[3];
  swift_bridgeObjectRetain();
  v162 = v42;
  if (v77 >= v78 >> 1)
    v65 = sub_1BA6E6D30((_QWORD *)(v78 > 1), v77 + 1, 1, v167);
  v65[2] = v77 + 1;
  v167 = v65;
  v79 = &v65[2 * v77];
  v79[4] = v75;
  v79[5] = v76;
  v80 = v179[2];
  sub_1BA744E38((uint64_t)&v179[3], (uint64_t)__src, (unint64_t *)&qword_1ED3B30E8);
  v158 = *(_OWORD *)&v179[21];
  v160 = *(_OWORD *)&v179[19];
  v154 = *(_OWORD *)&v179[25];
  v156 = *(_OWORD *)&v179[23];
  v152 = *(_OWORD *)&v179[27];
  v81 = v179[29];
  v82 = v179[30];
  v83 = v179[31];
  sub_1BA744E38((uint64_t)&v179[32], (uint64_t)v173, (unint64_t *)&qword_1ED3B6270);
  v84 = v179[58];
  v148 = *(_OWORD *)&v179[61];
  v150 = *(_OWORD *)&v179[59];
  v85 = v179[57];
  v86 = v179[63];
  v87 = v179[64];
  v88 = v75;
  v89 = v179[65];
  *(_QWORD *)&v178[0] = v88;
  *((_QWORD *)&v178[0] + 1) = v76;
  *(_QWORD *)&v178[1] = v80;
  sub_1BA744E38((uint64_t)__src, (uint64_t)&v178[1] + 8, (unint64_t *)&qword_1ED3B30E8);
  *(_OWORD *)((char *)&v178[9] + 8) = v160;
  *(_OWORD *)((char *)&v178[10] + 8) = v158;
  *(_OWORD *)((char *)&v178[11] + 8) = v156;
  *(_OWORD *)((char *)&v178[12] + 8) = v154;
  *(_OWORD *)((char *)&v178[13] + 8) = v152;
  *((_QWORD *)&v178[14] + 1) = v81;
  LOBYTE(v178[15]) = v82;
  *((_QWORD *)&v178[15] + 1) = v83;
  sub_1BA744E38((uint64_t)v173, (uint64_t)&v178[16], (unint64_t *)&qword_1ED3B6270);
  LOBYTE(v178[29]) = v84;
  *(_OWORD *)((char *)&v178[29] + 8) = v150;
  *(_OWORD *)((char *)&v178[30] + 8) = v148;
  *((_QWORD *)&v178[28] + 1) = v85;
  *((_QWORD *)&v178[31] + 1) = v86;
  LOBYTE(v178[32]) = v87;
  *((_QWORD *)&v178[32] + 1) = v89;
  sub_1BAC68120((uint64_t)v178);
  v40 = v146;
  v42 = v162;
  j = v164;
  if (v162)
    goto LABEL_58;
LABEL_59:
  swift_bridgeObjectRelease();
LABEL_60:
  *(_QWORD *)&__dst[0] = v167;
  swift_bridgeObjectRetain();
  v92 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v92);
  v93 = *(_QWORD *)&__dst[0];
  v94 = *(_QWORD *)(*(_QWORD *)&__dst[0] + 16);
  if (v94)
  {
    swift_bridgeObjectRetain();
    v95 = (uint64_t *)(v93 + 40);
    v96 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v97 = v175[0];
      if (*(_QWORD *)(v175[0] + 16))
      {
        v99 = *(v95 - 1);
        v98 = *v95;
        swift_bridgeObjectRetain_n();
        v100 = sub_1BA6E35A8(v99, v98);
        if ((v101 & 1) != 0)
        {
          memcpy(__dst, (const void *)(*(_QWORD *)(v97 + 56) + 528 * v100), 0x210uLL);
          sub_1BAC67FA0((uint64_t)__dst);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1BA6E8D7C(0, v96[2] + 1, 1, v96);
          v103 = v96[2];
          v102 = v96[3];
          if (v103 >= v102 >> 1)
            v96 = sub_1BA6E8D7C((_QWORD *)(v102 > 1), v103 + 1, 1, v96);
          v96[2] = v103 + 1;
          memcpy(&v96[66 * v103 + 4], __dst, 0x210uLL);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v95 += 2;
      --v94;
    }
    while (v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v96 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v169 = v137[7];
  v104 = v169;
  if ((~v169 & 0xF000000000000007) == 0)
  {
    v104 = *(_QWORD *)(v138 + 56);
    sub_1BA6E6C68(v104);
  }
  v177 = (_QWORD *)v104;
  sub_1BA744E38((uint64_t)(v137 + 8), (uint64_t)v178, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v178, (uint64_t)v179, (unint64_t *)&qword_1ED3B30E8);
  if (sub_1BAB05F98((uint64_t)v179) == 1)
  {
    sub_1BA744E38(v138 + 64, (uint64_t)__dst, (unint64_t *)&qword_1ED3B30E8);
    sub_1BA6A0C50(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    v105 = __dst;
  }
  else
  {
    v105 = v178;
  }
  sub_1BA744E38((uint64_t)v105, (uint64_t)v173, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v173, (uint64_t)__src, (unint64_t *)&qword_1ED3B30E8);
  v106 = v137[24];
  if (!v106)
    v106 = swift_bridgeObjectRetain();
  v149 = v106;
  v107 = v137[26];
  v108 = v137[27];
  v109 = v137[28];
  v110 = v137[30];
  v111 = v137[31];
  v112 = v137[32];
  v114 = v137[33];
  v113 = v137[34];
  v163 = v107;
  v165 = v137[25];
  v115 = v165;
  v161 = v108;
  v159 = v109;
  v157 = v137[29];
  v116 = v157;
  v155 = v110;
  v153 = v111;
  v151 = v112;
  v145 = v113;
  v147 = v114;
  v117 = *((unsigned __int8 *)v137 + 280);
  v144 = *((_BYTE *)v137 + 280);
  if (v117 == 254)
  {
    v140 = *(_QWORD *)(v138 + 208);
    v142 = *(_QWORD *)(v138 + 200);
    v108 = *(_QWORD *)(v138 + 216);
    v109 = *(_QWORD *)(v138 + 224);
    v116 = *(_QWORD *)(v138 + 232);
    v110 = *(_QWORD *)(v138 + 240);
    v111 = *(_QWORD *)(v138 + 248);
    v112 = *(_QWORD *)(v138 + 256);
    v114 = *(_QWORD *)(v138 + 264);
    v113 = *(_QWORD *)(v138 + 272);
    LOBYTE(v117) = *(_BYTE *)(v138 + 280);
    sub_1BA6E8A48(v142, v140, v108, v109, v116, v110, v111, v112, v114, v113, v117);
    v107 = v140;
    v115 = v142;
  }
  *(_QWORD *)&v171[0] = v115;
  *((_QWORD *)&v171[0] + 1) = v107;
  *(_QWORD *)&v171[1] = v108;
  *((_QWORD *)&v171[1] + 1) = v109;
  *(_QWORD *)&v171[2] = v116;
  *((_QWORD *)&v171[2] + 1) = v110;
  *(_QWORD *)&v171[3] = v111;
  *((_QWORD *)&v171[3] + 1) = v112;
  *(_QWORD *)&v171[4] = v114;
  *((_QWORD *)&v171[4] + 1) = v113;
  v118 = v137[36];
  LOBYTE(v171[5]) = v117;
  if (!v118)
  {
    v118 = *(_QWORD *)(v138 + 288);
    swift_bridgeObjectRetain();
  }
  sub_1BA744E38((uint64_t)v181, (uint64_t)__dst, (unint64_t *)&qword_1ED3B6270);
  if (*((_BYTE *)v137 + 504) == 1)
  {
    v119 = (_QWORD *)v138;
    v139 = *(_BYTE *)(v138 + 504);
  }
  else
  {
    v139 = 0;
    v119 = v137;
  }
  v141 = v119[62];
  v143 = v118;
  v120 = v137[64];
  if (!v120)
    v120 = swift_bridgeObjectRetain();
  v176 = v120;
  v121 = v137[65];
  v122 = v137[66];
  v123 = v121;
  v124 = v122;
  if (v121 == 9)
  {
    v123 = *(_QWORD *)(v138 + 520);
    v124 = *(_QWORD *)(v138 + 528);
    sub_1BA6E8A60(v123, v124);
  }
  v170[0] = v123;
  v170[1] = v124;
  v125 = v137[67];
  v126 = v137[68];
  v127 = v125;
  v128 = v126;
  if (v125 == 9)
  {
    v127 = *(_QWORD *)(v138 + 536);
    v128 = *(_QWORD *)(v138 + 544);
    sub_1BA6E8A60(v127, v128);
  }
  v175[0] = v127;
  v175[1] = v128;
  v129 = *((unsigned __int8 *)v137 + 552);
  if (v129 == 2)
    LOBYTE(v129) = *(_BYTE *)(v138 + 552);
  v130 = v137[70];
  if (!v130)
    v130 = swift_bridgeObjectRetain();
  v174 = v130;
  v131 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v135, v134, v136, v133, (uint64_t)v96, (uint64_t *)&v177, (uint64_t)__src, v149, v171, v143, (uint64_t)__dst, v141, v139, &v176, v170, v175, v129, &v174);
  sub_1BA6E6C68(v169);
  sub_1BA6A0C50(v178, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  swift_bridgeObjectRetain();
  sub_1BA6E8A48(v165, v163, v161, v159, v157, v155, v153, v151, v147, v145, v144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E8A60(v121, v122);
  sub_1BA6E8A60(v125, v126);
  swift_bridgeObjectRetain();
  return v131;
}

uint64_t sub_1BA6E8A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t result;

  if (a11 != 254)
    return swift_retain();
  return result;
}

uint64_t sub_1BA6E8A60(uint64_t result, uint64_t a2)
{
  if (result != 9)
    return sub_1BA5E7FF4(a2);
  return result;
}

uint64_t sub_1BA6E8A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t result;

  if (a11 != 254)
    return swift_release();
  return result;
}

uint64_t sub_1BA6E8A90(uint64_t result, uint64_t a2)
{
  if (result != 9)
    return sub_1BA5E800C(a2);
  return result;
}

void sub_1BA6E8AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a14 >> 1 != 0xFFFFFFFF)
    sub_1BA6E8AE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_1BA6E8AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA6E8B18()
{
  swift_retain();
  return swift_retain();
}

uint64_t sub_1BA6E8B38()
{
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA6E8B50()
{
  uint64_t v0;

  return sub_1BA7566C0(v0);
}

uint64_t sub_1BA6E8B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA5DCC20(a7);
}

void sub_1BA6E8B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a14 >> 1 != 0xFFFFFFFF)
    sub_1BA6E8CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t destroy for FormatTextNodeStyle.Selector(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) != 0)
    swift_release();
  v2 = *(_QWORD *)(a1 + 128);
  if (v2 >> 1 != 0xFFFFFFFF)
    sub_1BA6E8CCC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v2);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 240) != 254)
    swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 480) != 9 && (~*(_QWORD *)(a1 + 488) & 0xF000000000000007) != 0)
    swift_release();
  if (*(_BYTE *)(a1 + 496) != 9 && (~*(_QWORD *)(a1 + 504) & 0xF000000000000007) != 0)
    swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BA6E8CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __asm { BR              X11 }
}

uint64_t sub_1BA6E8D04()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1BA6E8D20()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA6E8D3C(uint64_t result)
{
  return sub_1BA756FBC(result);
}

uint64_t sub_1BA6E8D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA5DCC4C(a7);
}

_QWORD *sub_1BA6E8D7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFB98, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 528);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[66 * v8 + 4])
          memmove(v12, a4 + 4, 528 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6E962C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, char a17, uint64_t *a18)
{
  uint64_t v18;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v40[128];
  _BYTE v41[208];

  v34 = *a6;
  sub_1BA744E38(a7, (uint64_t)v40, (unint64_t *)&qword_1ED3B30E8);
  v32 = a9[1];
  v33 = *a9;
  v30 = a9[3];
  v31 = a9[2];
  v21 = *((_QWORD *)a9 + 9);
  v29 = *((_QWORD *)a9 + 8);
  v22 = *((_BYTE *)a9 + 80);
  sub_1BA744E38(a11, (uint64_t)v41, (unint64_t *)&qword_1ED3B6270);
  v23 = *a14;
  v24 = *a15;
  v25 = a15[1];
  v26 = a16[1];
  v35 = *a16;
  v27 = *a18;
  swift_beginAccess();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v18 + 48) = a5;
  *(_QWORD *)(v18 + 56) = v34;
  sub_1BA744E38((uint64_t)v40, v18 + 64, (unint64_t *)&qword_1ED3B30E8);
  *(_QWORD *)(v18 + 192) = a8;
  *(_OWORD *)(v18 + 200) = v33;
  *(_OWORD *)(v18 + 216) = v32;
  *(_OWORD *)(v18 + 232) = v31;
  *(_OWORD *)(v18 + 248) = v30;
  *(_QWORD *)(v18 + 264) = v29;
  *(_QWORD *)(v18 + 272) = v21;
  *(_BYTE *)(v18 + 280) = v22;
  *(_QWORD *)(v18 + 288) = a10;
  sub_1BA744E38((uint64_t)v41, v18 + 296, (unint64_t *)&qword_1ED3B6270);
  *(_QWORD *)(v18 + 496) = a12;
  *(_BYTE *)(v18 + 504) = a13 & 1;
  *(_QWORD *)(v18 + 512) = v23;
  *(_QWORD *)(v18 + 520) = v24;
  *(_QWORD *)(v18 + 528) = v25;
  *(_QWORD *)(v18 + 536) = v35;
  *(_QWORD *)(v18 + 544) = v26;
  *(_BYTE *)(v18 + 552) = a17;
  *(_QWORD *)(v18 + 560) = v27;
  return v18;
}

uint64_t sub_1BA6E90A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[200];
  _BYTE v93[200];
  _BYTE v94[128];
  _BYTE v95[128];
  _QWORD v96[16];
  _BYTE v97[200];
  _QWORD v98[16];
  _BYTE v99[208];

  v77 = *(_QWORD *)(a1 + 16);
  sub_1BA744E38(a1 + 24, (uint64_t)v96, (unint64_t *)&qword_1ED3B30E8);
  v58 = *(_QWORD *)(a1 + 168);
  v60 = *(_QWORD *)(a1 + 160);
  v54 = *(_QWORD *)(a1 + 184);
  v56 = *(_QWORD *)(a1 + 176);
  v50 = *(_QWORD *)(a1 + 200);
  v52 = *(_QWORD *)(a1 + 192);
  v46 = *(_QWORD *)(a1 + 216);
  v48 = *(_QWORD *)(a1 + 208);
  v64 = *(_QWORD *)(a1 + 232);
  v62 = *(_BYTE *)(a1 + 240);
  v44 = *(_QWORD *)(a1 + 224);
  sub_1BA744E38(a1 + 256, (uint64_t)v97, (unint64_t *)&qword_1ED3B6270);
  v72 = *(_BYTE *)(a1 + 464);
  v40 = *(_QWORD *)(a1 + 480);
  v39 = *(_QWORD *)(a1 + 496);
  v37 = *(_QWORD *)(a1 + 488);
  v38 = *(_QWORD *)(a1 + 504);
  v70 = *(_BYTE *)(a1 + 512);
  v36 = *(_QWORD *)(a1 + 520);
  v71 = *v2;
  v5 = v2[2];
  v73 = *(_QWORD *)(a1 + 456);
  v74 = v2[1];
  sub_1BA744E38((uint64_t)(v2 + 3), (uint64_t)v98, (unint64_t *)&qword_1ED3B30E8);
  v6 = v2[19];
  v7 = v2[20];
  v9 = v2[21];
  v8 = v2[22];
  v90 = v2[24];
  v91 = v2[23];
  v88 = v2[26];
  v89 = v2[25];
  v87 = v2[27];
  v82 = v2[29];
  v83 = v2[28];
  v81 = *((unsigned __int8 *)v2 + 240);
  v10 = v2[31];
  sub_1BA744E38((uint64_t)(v2 + 32), (uint64_t)v99, (unint64_t *)&qword_1ED3B6270);
  v69 = v2[57];
  v80 = v2[59];
  v11 = v2[62];
  v84 = v2[61];
  v85 = v2[60];
  v86 = v2[63];
  v67 = *((unsigned __int8 *)v2 + 512);
  v68 = *((unsigned __int8 *)v2 + 464);
  v12 = v5;
  v42 = v2[65];
  v75 = v5;
  if ((~v5 & 0xF000000000000007) == 0)
  {
    sub_1BA6E6C68(v77);
    v12 = v77;
  }
  v66 = v12;
  v13 = v98;
  sub_1BA744E38((uint64_t)v98, (uint64_t)v95, (unint64_t *)&qword_1ED3B30E8);
  if (sub_1BAB05F98((uint64_t)v95) == 1)
  {
    v13 = v96;
    sub_1BA6A0C50(v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  }
  sub_1BA744E38((uint64_t)v13, (uint64_t)v94, (unint64_t *)&qword_1ED3B30E8);
  v14 = v6;
  v15 = v7;
  if (!v6)
    v14 = swift_bridgeObjectRetain();
  v65 = v14;
  v76 = v8;
  v78 = v7;
  v16 = v9;
  v18 = v90;
  v17 = v91;
  v20 = v88;
  v19 = v89;
  v21 = v87;
  v23 = v82;
  v22 = v83;
  v24 = v81;
  v79 = v11;
  if (v81 == 254)
  {
    v15 = v60;
    v17 = v54;
    v18 = v52;
    v20 = v48;
    sub_1BA6E8A48(v60, v58, v56, v54, v52, v50, v48, v46, v44, v64, v62);
    v16 = v58;
    v8 = v56;
    v19 = v50;
    v21 = v46;
    v22 = v44;
    v23 = v64;
    v24 = v62;
  }
  v45 = v24;
  v47 = v23;
  v49 = v22;
  v51 = v21;
  v53 = v20;
  v55 = v19;
  v57 = v18;
  v59 = v17;
  v61 = v8;
  v63 = v16;
  v25 = v10;
  if (!v10)
    v25 = swift_bridgeObjectRetain();
  v43 = v25;
  sub_1BA744E38((uint64_t)v99, (uint64_t)v93, (unint64_t *)&qword_1ED3B6270);
  if (sub_1BA92287C((uint64_t)v93) == 1)
    v26 = v97;
  else
    v26 = v99;
  sub_1BA744E38((uint64_t)v26, (uint64_t)v92, (unint64_t *)&qword_1ED3B6270);
  v27 = v80;
  if (!v80)
    v27 = swift_bridgeObjectRetain();
  v41 = v27;
  v28 = v84;
  v29 = v85;
  if (v85 == 9)
  {
    v28 = v37;
    sub_1BA6E8A60(v40, v37);
    v29 = v40;
  }
  v30 = v11;
  v31 = v86;
  if (v11 == 9)
  {
    v31 = v38;
    v30 = v39;
    sub_1BA6E8A60(v39, v38);
  }
  v32 = v42;
  if (!v42)
  {
    v32 = v36;
    swift_bridgeObjectRetain();
  }
  if (v67 == 2)
    v33 = v70;
  else
    v33 = v67;
  if (v68)
    v34 = v73;
  else
    v34 = v69;
  *(_QWORD *)a2 = v71;
  *(_QWORD *)(a2 + 8) = v74;
  *(_QWORD *)(a2 + 16) = v66;
  sub_1BA744E38((uint64_t)v94, a2 + 24, (unint64_t *)&qword_1ED3B30E8);
  *(_QWORD *)(a2 + 152) = v65;
  *(_QWORD *)(a2 + 160) = v15;
  *(_QWORD *)(a2 + 168) = v63;
  *(_QWORD *)(a2 + 176) = v61;
  *(_QWORD *)(a2 + 184) = v59;
  *(_QWORD *)(a2 + 192) = v57;
  *(_QWORD *)(a2 + 200) = v55;
  *(_QWORD *)(a2 + 208) = v53;
  *(_QWORD *)(a2 + 216) = v51;
  *(_QWORD *)(a2 + 224) = v49;
  *(_QWORD *)(a2 + 232) = v47;
  *(_BYTE *)(a2 + 240) = v45;
  *(_QWORD *)(a2 + 248) = v43;
  sub_1BA744E38((uint64_t)v92, a2 + 256, (unint64_t *)&qword_1ED3B6270);
  *(_QWORD *)(a2 + 456) = v34;
  *(_BYTE *)(a2 + 464) = v68 & v72;
  *(_QWORD *)(a2 + 472) = v41;
  *(_QWORD *)(a2 + 480) = v29;
  *(_QWORD *)(a2 + 488) = v28;
  *(_QWORD *)(a2 + 496) = v30;
  *(_QWORD *)(a2 + 504) = v31;
  *(_BYTE *)(a2 + 512) = v33;
  *(_QWORD *)(a2 + 520) = v32;
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v75);
  sub_1BA6A0C50(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  swift_bridgeObjectRetain();
  sub_1BA6E8A48(v78, v9, v76, v91, v90, v89, v88, v87, v83, v82, v81);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E8A60(v85, v84);
  sub_1BA6E8A60(v79, v86);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA6E962C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 528 * a1 + 32;
    v6 = a3 + 528 * v4;
    if (v5 >= v6 || v5 + 528 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6E9720()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C2960)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C2960);
  }
}

uint64_t sub_1BA6E9780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t i;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v36 = a3;
  v40 = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v35 - v5;
  v6 = type metadata accessor for FormatOption();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v39 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v38 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v15)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = i;
      v16 = v14 | (i << 6);
      goto LABEL_23;
    }
    v17 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v17 >= v38)
      goto LABEL_31;
    v18 = *(_QWORD *)(v37 + 8 * v17);
    v19 = i + 1;
    if (!v18)
    {
      v19 = i + 2;
      if (i + 2 >= v38)
        goto LABEL_31;
      v18 = *(_QWORD *)(v37 + 8 * v19);
      if (!v18)
      {
        v19 = i + 3;
        if (i + 3 >= v38)
          goto LABEL_31;
        v18 = *(_QWORD *)(v37 + 8 * v19);
        if (!v18)
        {
          v19 = i + 4;
          if (i + 4 >= v38)
            goto LABEL_31;
          v18 = *(_QWORD *)(v37 + 8 * v19);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v18 - 1) & v18;
    v15 = v19;
    v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_23:
    v21 = v39;
    v22 = *(_QWORD *)(v40 + 16);
    sub_1BA6E9B50(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v16) + 16));
    v23 = *v21;
    v24 = v21[1];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_beginAccess();
    v25 = *(_QWORD *)(v22 + 16);
    if (*(_QWORD *)(v25 + 16))
    {
      swift_bridgeObjectRetain();
      v26 = sub_1BA6E35A8(v23, v24);
      if ((v27 & 1) != 0)
      {
        v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v28 + 16);
        swift_retain();
        swift_release();
        sub_1BA6E9B50(v29);
        swift_release();
        v30 = 0;
        goto LABEL_29;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    v30 = 1;
LABEL_29:
    v32 = v41;
    v31 = v42;
    v33 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v43, v30, 1, v42);
    swift_bridgeObjectRelease();
    LODWORD(v31) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v31);
    sub_1BA502AD0(v33, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    v34 = MEMORY[0x1E0DEE9D8];
    if ((_DWORD)v31 == 1)
      v34 = sub_1BA6E9D28(v36);
    swift_release();
    result = sub_1BA6E9BD8(v34);
  }
  v20 = i + 5;
  if (i + 5 >= v38)
  {
LABEL_31:
    swift_release();
    return v44;
  }
  v18 = *(_QWORD *)(v37 + 8 * v20);
  if (v18)
  {
    v19 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v19 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v19 >= v38)
      goto LABEL_31;
    v18 = *(_QWORD *)(v37 + 8 * v19);
    ++v20;
    if (v18)
      goto LABEL_22;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1BA6E9B40(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA6E9B50(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA6E9B8C()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FormatOption();
  v1 = swift_projectBox();
  return sub_1BA4C2DD8(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
}

uint64_t sub_1BA6E9BC8(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA6E9BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BA6EA0D0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6E9D28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  sub_1BA6EA07C();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  v11 = v1[7];
  v12 = v1[8];
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v12;
  v13 = v2[4];
  if (v13)
  {
    if (v13 == 1)
    {
      swift_bridgeObjectRetain();
      v14 = v2[6];
      if (!v14)
      {
LABEL_16:
        sub_1BA6E9B50(v2[2]);
        v39 = *((_QWORD *)v6 + 2);
        swift_retain();
        v30 = sub_1BB370874(a1);
        swift_release();
        if ((v30 & 1) != 0)
        {
          v39 = 36;
          v40 = 0xE100000000000000;
          swift_bridgeObjectRetain();
          sub_1BB872AFC(v31);
          swift_bridgeObjectRelease();
          sub_1BB872AFC(v32);
          v33 = v39;
          v34 = v40;
          sub_1BA900B74((uint64_t)v6);
          v36 = *(_QWORD *)(v10 + 16);
          v35 = *(_QWORD *)(v10 + 24);
          if (v36 >= v35 >> 1)
            v10 = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v35 > 1), v36 + 1, 1, (_QWORD *)v10);
          *(_QWORD *)(v10 + 16) = v36 + 1;
          v37 = v10 + 16 * v36;
          *(_QWORD *)(v37 + 32) = v33;
          *(_QWORD *)(v37 + 40) = v34;
        }
        else
        {
          sub_1BA900B74((uint64_t)v6);
        }
        return v10;
      }
    }
    else
    {
      v25 = v2[3];
      swift_bridgeObjectRetain();
      sub_1BA6EA1F0(v25, v13);
      v10 = (uint64_t)sub_1BA6EA0D0((_QWORD *)1, 2, 1, (_QWORD *)v10);
      *(_QWORD *)(v10 + 16) = 2;
      *(_QWORD *)(v10 + 48) = v25;
      *(_QWORD *)(v10 + 56) = v13;
      v14 = v2[6];
      if (!v14)
        goto LABEL_16;
    }
  }
  else
  {
    sub_1BA6E9B50(v2[2]);
    v39 = *((_QWORD *)v9 + 2);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA6EA204();
    v16 = v15;
    swift_release();
    if (v16)
    {
      v39 = 36;
      v40 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v17);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v18);
      sub_1BB872AFC(v19);
      swift_bridgeObjectRelease();
      v20 = v39;
      v21 = v40;
      sub_1BA900B74((uint64_t)v9);
      v23 = *(_QWORD *)(v10 + 16);
      v22 = *(_QWORD *)(v10 + 24);
      if (v23 >= v22 >> 1)
        v10 = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v22 > 1), v23 + 1, 1, (_QWORD *)v10);
      *(_QWORD *)(v10 + 16) = v23 + 1;
      v24 = v10 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v21;
      v14 = v2[6];
      if (!v14)
        goto LABEL_16;
    }
    else
    {
      sub_1BA900B74((uint64_t)v9);
      v14 = v2[6];
      if (!v14)
        goto LABEL_16;
    }
  }
  if (v14 != 1)
  {
    v26 = v2[5];
    v27 = *(_QWORD *)(v10 + 16);
    v28 = *(_QWORD *)(v10 + 24);
    swift_bridgeObjectRetain();
    if (v27 >= v28 >> 1)
      v10 = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v28 > 1), v27 + 1, 1, (_QWORD *)v10);
    *(_QWORD *)(v10 + 16) = v27 + 1;
    v29 = v10 + 16 * v27;
    *(_QWORD *)(v29 + 32) = v26;
    *(_QWORD *)(v29 + 40) = v14;
  }
  return v10;
}

void sub_1BA6EA07C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9FA0)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9FA0);
  }
}

_QWORD *sub_1BA6EA0D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA6EBFA0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6EA1F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1BA6EA204()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA6EA260()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BA6EB330(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v18 = sub_1BB874608();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1BB874398() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1BB874398() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1BA6EB5B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  unint64_t *v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v60 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v61 = 0;
    v6 = 0;
    v57 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v58 = (unint64_t)(v7 + 63) >> 6;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_77;
          }
          if (v13 >= v58)
            goto LABEL_75;
          v14 = *(_QWORD *)(v57 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v13 + 1;
            if (v13 + 1 >= v58)
              goto LABEL_75;
            v14 = *(_QWORD *)(v57 + 8 * v15);
            if (!v14)
            {
              v16 = v13 + 2;
              if (v16 >= v58)
                goto LABEL_75;
              v14 = *(_QWORD *)(v57 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  v15 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_78;
                  if (v15 >= v58)
                    goto LABEL_75;
                  v14 = *(_QWORD *)(v57 + 8 * v15);
                  ++v16;
                  if (v14)
                    goto LABEL_20;
                }
              }
              v15 = v16;
            }
          }
LABEL_20:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v20 = sub_1BB874608();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1BB874398() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1BB874398() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_36;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_36:
      v6 = v62;
      v5 = a3;
      v60[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_79;
    }
  }
  v34 = 0;
  v59 = a3 + 56;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v61 = 0;
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_59;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v41 >= v63)
      goto LABEL_75;
    v42 = *(_QWORD *)(v59 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_75;
      v42 = *(_QWORD *)(v59 + 8 * v34);
      if (!v42)
        break;
    }
LABEL_58:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_59:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v47 = sub_1BB874608();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_44;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1BB874398() & 1) != 0)
    {
LABEL_72:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v60 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_75:
        swift_retain();
        return sub_1BA6EBA94(v60, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1BB874398() & 1) != 0)
          goto LABEL_72;
      }
LABEL_44:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 2;
  if (v43 >= v63)
    goto LABEL_75;
  v42 = *(_QWORD *)(v59 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_58;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_75;
    v42 = *(_QWORD *)(v59 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_58;
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1BA6EBA94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_34:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BA6EE8F0(0, &qword_1ED3B9A20);
  result = sub_1BB873C78();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_37;
    if (v14 >= v30)
      goto LABEL_34;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_34;
      v15 = a1[v10];
      if (!v15)
        break;
    }
LABEL_21:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    result = sub_1BB874608();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (!v5)
      goto LABEL_34;
  }
  v16 = v14 + 2;
  if (v16 >= v30)
    goto LABEL_34;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_34;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1BA6EBD18()
{
  return swift_release();
}

uint64_t sub_1BA6EBD20(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  unint64_t i;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  v31 = v4 + 56;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v32 = (unint64_t)(v6 + 63) >> 6;
  v33 = v4;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_29;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v14 >= v32)
      goto LABEL_44;
    v15 = *(_QWORD *)(v31 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v32)
        goto LABEL_44;
      v15 = *(_QWORD *)(v31 + 8 * v11);
      if (!v15)
        break;
    }
LABEL_28:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_29:
      v17 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * v13);
      v19 = *v17;
      v18 = v17[1];
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v20 = sub_1BB874608();
      v21 = -1 << *(_BYTE *)(v5 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
      {
        v23 = *(_QWORD *)(v5 + 48);
        v24 = (_QWORD *)(v23 + 16 * v22);
        v25 = *v24 == v19 && v24[1] == v18;
        if (v25 || (sub_1BB874398() & 1) != 0)
        {
LABEL_43:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return 0;
        }
        v26 = ~v21;
        for (i = v22 + 1; ; i = v28 + 1)
        {
          v28 = i & v26;
          if (((*(_QWORD *)(v9 + (((i & v26) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v26)) & 1) == 0)
            break;
          v29 = (_QWORD *)(v23 + 16 * v28);
          v30 = *v29 == v19 && v29[1] == v18;
          if (v30 || (sub_1BB874398() & 1) != 0)
            goto LABEL_43;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v16 = v14 + 2;
  if (v16 >= v32)
  {
LABEL_44:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  v15 = *(_QWORD *)(v31 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_28;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v32)
      goto LABEL_44;
    v15 = *(_QWORD *)(v31 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_28;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BA6EBFA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6EC090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[5];

  v21 = a7;
  v22 = a6;
  v20 = a2;
  v11 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8741D0();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - v15;
  sub_1BB8746C8();
  v23[3] = a3;
  v23[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, v7, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, a4);
  v18 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v14);
  return sub_1BA6EDB2C((uint64_t)v16, (uint64_t)v23, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0, v14, a4, v18, v21, v22);
}

uint64_t sub_1BA6EC1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[5];

  v30 = a4;
  v31 = a1;
  v32 = a8;
  v28 = a2;
  v29 = a10;
  v15 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB8741D0();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - v19;
  sub_1BB8746C8();
  v33[3] = a3;
  v33[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, v10, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v28, a6);
  v22 = (_QWORD *)swift_allocObject();
  v23 = v30;
  v22[2] = a3;
  v22[3] = v23;
  v22[4] = a5;
  v22[5] = a6;
  v22[6] = a7;
  v22[7] = a9;
  v24 = v29;
  v25 = v31;
  v22[8] = v29;
  v22[9] = v25;
  v26 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v18);
  return sub_1BA6EDB2C((uint64_t)v20, (uint64_t)v33, (uint64_t)v17, (uint64_t)sub_1BB7E2AA4, (uint64_t)v22, v18, a6, v26, v32, v24);
}

uint64_t TraversalOnlyEncoder.container<A>(keyedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TraversalOnlyEncoder.KeyedContainer(0, a2, a3, a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](&unk_1BB9054D8, v4);
  return sub_1BB8741DC();
}

uint64_t type metadata accessor for TraversalOnlyEncoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TraversalOnlyEncoder.KeyedContainer);
}

uint64_t sub_1BA6EC410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a5;
  v26 = a1;
  sub_1BA4B07F0(0, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - v13;
  v15 = sub_1BB872874();
  Dictionary<>.formatCodingVersionInfo.getter(v15, (uint64_t)v14);
  v16 = type metadata accessor for FormatVersionInfo(0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16);
  if ((_DWORD)v17)
  {
    sub_1BA5E01A4((uint64_t)v14, (uint64_t)v12, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo);
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v12, v15);
    swift_bridgeObjectRelease();
    sub_1BA6ED6EC((uint64_t)v14, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    LOBYTE(v18) = 1;
  }
  else
  {
    v19 = MEMORY[0x1E0C80A78](v17);
    *(&v24 - 2) = a2;
    *(&v24 - 1) = a3;
    MEMORY[0x1E0C80A78](v19);
    v20 = v25;
    *(&v24 - 2) = a4;
    *(&v24 - 1) = v20;
    v22 = sub_1BA9FB364(v26, (uint64_t)sub_1BAA0239C, v21, (uint64_t)sub_1BAA0239C, (uint64_t)(&v24 - 4));
    if (v5)
    {
      v18 = &qword_1ED3C7A78;
      sub_1BA5E01A4((uint64_t)v14, (uint64_t)v12, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo);
      Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v12, v15);
      swift_bridgeObjectRelease();
      sub_1BA6ED6EC((uint64_t)v14, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    }
    else
    {
      LOBYTE(v18) = v22;
      Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v14, v15);
      swift_bridgeObjectRelease();
    }
  }
  return v18 & 1;
}

uint64_t sub_1BA6EC658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a5;
  v24 = a1;
  sub_1BA4B07F0(0, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v15 = sub_1BB872874();
  Dictionary<>.formatCodingVersionInfo.getter(v15, (uint64_t)v14);
  v16 = type metadata accessor for FormatVersionInfo(0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16);
  if ((_DWORD)v17)
    goto LABEL_3;
  v18 = MEMORY[0x1E0C80A78](v17);
  *(&v22 - 2) = a2;
  *(&v22 - 1) = a3;
  MEMORY[0x1E0C80A78](v18);
  v19 = v23;
  *(&v22 - 2) = a4;
  *(&v22 - 1) = v19;
  sub_1BA9FA484(v24, sub_1BAA0239C, v20, sub_1BAA0239C, (uint64_t)(&v22 - 4));
  if (v5)
  {
LABEL_3:
    sub_1BA5E01A4((uint64_t)v14, (uint64_t)v12, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo);
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v12, v15);
    swift_bridgeObjectRelease();
    return sub_1BA6ED6EC((uint64_t)v14, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  }
  else
  {
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v14, v15);
    return swift_bridgeObjectRelease();
  }
}

uint64_t getEnumTagSinglePayload for FormatVersionInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA6EC848()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA6EC850(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + (v7 | 7) + 40) & ~(v7 | 7);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 <= v9)
    v10 = *(_QWORD *)(v6 + 64);
  v11 = v9 + v7;
  v12 = ((v9 + 7 + ((v9 + v7) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v10)
    v13 = v10;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v8 + v13);
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X14 }
  }
  if (v14 == 2)
  {
    v16 = ~v7;
    v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v17(v8, v5);
    v17((v11 + v8) & v16, v5);
  }
  else
  {
    if (v14 != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
      return swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA6EC9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v6[5];

  v6[3] = &type metadata for TraversalOnlyEncoder;
  v6[4] = sub_1BA6ECAA0();
  sub_1BA6ECAE4(a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v6);
  sub_1BB872850();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

unint64_t sub_1BA6ECAA0()
{
  unint64_t result;

  result = qword_1ED3A2B20;
  if (!qword_1ED3A2B20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TraversalOnlyEncoder, &type metadata for TraversalOnlyEncoder);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B20);
  }
  return result;
}

uint64_t sub_1BA6ECAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;

  v9 = *v4;
  v10 = v4[1];
  sub_1BA6ECE94();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 64) = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  *a4 = v9;
  a4[1] = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA6ECBC8(uint64_t a1, void (*a2)(_QWORD), unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v18 = v6 + v4;
  else
    v18 = v6;
  v5 = sub_1BA6ECD60(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = v5[2];
  if ((v5[3] >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v13 = (unint64_t)&v5[5 * v12 + 4];
  if (a1 + 32 < v13 + 40 * v4 && v13 < a1 + 32 + 40 * v4)
    goto LABEL_24;
  sub_1BA505288(0, a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
  v15 = v5[2];
  v16 = __OFADD__(v15, v4);
  v17 = v15 + v4;
  if (!v16)
  {
    v5[2] = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

_QWORD *sub_1BA6ECD60(_QWORD *result, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      a5(0);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6ECEE8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void sub_1BA6ECE94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3250)
  {
    sub_1BAEE45D8();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3250);
  }
}

uint64_t sub_1BA6ECEE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1BA505288(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA6ECFFC(uint64_t a1)
{
  return sub_1BA6ECBC8(a1, (void (*)(_QWORD))sub_1BA6ECE94, (unint64_t *)&qword_1ED3A3258);
}

uint64_t Dictionary<>.formatCodingVersionInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEC990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  v7 = sub_1BB873E58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB873E4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(_QWORD *)(a1 + 16) && (v12 = sub_1BA6EDA24((uint64_t)v10), (v13 & 1) != 0))
    {
      sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v19);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((_QWORD *)&v20 + 1))
    {
      sub_1BA4B07F0(0, &qword_1EF2ACD60, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v14 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 88);
        swift_beginAccess();
        sub_1BA4C2DD8(v14, a2, type metadata accessor for FormatVersionInfo);
        swift_release();
        v15 = type metadata accessor for FormatVersionInfo(0);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
      }
    }
    else
    {
      sub_1BA6ED6EC((uint64_t)&v19, (uint64_t)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    }
    v16 = type metadata accessor for FormatVersionInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCE5A70](a1, v6, a5);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t type metadata accessor for FormatVersioningMode(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3C9330);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t type metadata accessor for FormatVersionInfo(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3C7A38);
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t type metadata accessor for FormatContent.Resolved()
{
  uint64_t result;

  result = qword_1ED3D3740;
  if (!qword_1ED3D3740)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Dictionary<>.formatCodingVersionInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];
  __int128 v28;
  __int128 v29;

  v27[0] = a1;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v27 - v5;
  v7 = type metadata accessor for FormatVersionInfo(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v27 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEC990], v3);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v27 - v15;
  v17 = sub_1BB873E58();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB873E4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  if (*(_QWORD *)(a2 + 16) && (v22 = sub_1BA6EDA24((uint64_t)v20), (v23 & 1) != 0))
  {
    sub_1BA747A10(*(_QWORD *)(a2 + 56) + 32 * v22, (uint64_t)&v28);
  }
  else
  {
    v28 = 0u;
    v29 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (*((_QWORD *)&v29 + 1))
  {
    sub_1BA4B07F0(0, &qword_1EF2ACD60, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v24 = v27[1];
      sub_1BA9FD1C0(v27[0], (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        sub_1BA5193C4((uint64_t)v6, (uint64_t)v13, type metadata accessor for FormatVersionInfo);
        sub_1BA5193C4((uint64_t)v13, (uint64_t)v11, type metadata accessor for FormatVersionInfo);
        v26 = v24 + *(_QWORD *)(*(_QWORD *)v24 + 88);
        swift_beginAccess();
        sub_1BA9FD21C((uint64_t)v11, v26);
        swift_endAccess();
        return swift_release();
      }
      swift_release();
      v25 = (uint64_t)v6;
      return sub_1BA6ED6EC(v25, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    }
  }
  else
  {
    sub_1BA6ED6EC((uint64_t)&v28, (uint64_t)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  }
  v25 = v27[0];
  return sub_1BA6ED6EC(v25, (uint64_t)&qword_1ED3C7A78, (uint64_t)type metadata accessor for FormatVersionInfo, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
}

uint64_t sub_1BA6ED6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BA6ED734(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  sub_1BA4AD288(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA6ED778(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;
  char v10;
  _BYTE v11[16];
  __int128 v12;
  __int128 v13;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78]();
  v3 = &v11[-v2];
  v4 = sub_1BB873E58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB873E4C();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
    if (*(_QWORD *)(a1 + 16) && (v9 = sub_1BA6EDA24((uint64_t)v7), (v10 & 1) != 0))
    {
      sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    if (*((_QWORD *)&v13 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v11[15];
    }
    else
    {
      sub_1BA6EDA74((uint64_t)&v12);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BA6ED8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1BB873E58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_1BB872958();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1BA6EDA24(uint64_t a1)
{
  uint64_t v2;

  sub_1BB873E58();
  v2 = sub_1BB87285C();
  return sub_1BA6ED8FC(a1, v2);
}

uint64_t sub_1BA6EDA74(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4CF8F4(0, (unint64_t *)&qword_1ED3BA040);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA6EDAC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BA040)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BA040);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVersionInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA6EDB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t result;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a4;
  v27 = a5;
  v17 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a9, a1, a6);
  v22 = (int *)type metadata accessor for VersionedKeyedEncodingContainer(0, a6, a8, v21);
  sub_1BA4C010C(a2, a9 + v22[9]);
  sub_1BA6EDC70(a3, a7, a10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 8))(a3, a7);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, a6);
  result = sub_1BA6EDD40((uint64_t)v19, a9 + v22[10]);
  v24 = (_QWORD *)(a9 + v22[11]);
  v25 = v27;
  *v24 = v26;
  v24[1] = v25;
  return result;
}

uint64_t type metadata accessor for VersionedKeyedEncodingContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VersionedKeyedEncodingContainer);
}

uint64_t sub_1BA6EDC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA6EDCB0(a2, a3);
  type metadata accessor for FormatVersionRequirement.Value(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BA6EDCB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BA6EDCD4@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1BA6EDD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatVersionRequirement(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3CAF48);
}

uint64_t sub_1BA6EDD98(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FormatVersionRequirement.Value(0);
  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      v4 = sub_1BB86EB84();
      v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v5(a1, v4);
      sub_1BA6F3F88();
      v5(a1 + *(int *)(v6 + 48), v4);
      return swift_bridgeObjectRelease();
    case 1:
      v7 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      sub_1BAA00E84(0, (unint64_t *)&qword_1EF2A98B0);
      return swift_bridgeObjectRelease();
    case 0:
      v3 = sub_1BB86EB84();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

uint64_t type metadata accessor for FormatVersionRequirement.Value(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3CAEC8);
}

uint64_t sub_1BA6EDEB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C2478, (uint64_t)qword_1ED476C20, a1);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1BA6EDEF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  char v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  __n128 *v24;
  char v25[16];
  uint64_t (*v26)();
  uint64_t v27;
  __n128 v28;
  uint64_t v29;

  sub_1BA6EE1B8(0);
  v11 = v10;
  v12 = (unint64_t *)(v5 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v28.n128_u64[0] = a2;
  v28.n128_u64[1] = a3;
  v15 = (__n128 *)swift_allocObject();
  sub_1BA6EE228(&v28, v15 + 1);
  v15[2].n128_u64[0] = v14;
  v15[2].n128_u64[1] = v13;
  sub_1BA6EE1A4(a2, a3);
  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA6EE264();
  swift_retain();
  v16 = sub_1BB87444C();
  v28.n128_u64[0] = a2;
  v28.n128_u64[1] = a3;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA6EE228(&v28, (__n128 *)(v17 + 24));
  sub_1BA4C010C(v5 + *(int *)(v11 + 36), (uint64_t)&v28);
  __swift_project_boxed_opaque_existential_1(&v28, v29);
  v26 = sub_1BAEE4828;
  v27 = v17;
  v21 = a4;
  v22 = a5;
  v23 = sub_1BAEE4820;
  v24 = v15;
  sub_1BA6EE1A4(a2, a3);
  LOBYTE(v16) = sub_1BA6EC410(a1, (uint64_t)sub_1BA4D7948, (uint64_t)v25, (uint64_t)sub_1BAE76064, (uint64_t)v20);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return v16 & 1;
}

void sub_1BA6EE0BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA6B8518();
    v7 = a3(a1, &type metadata for FormatCodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA6EE118()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = 1701869940;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v3 = 1635017060;
      break;
    case 2uLL:
      v3 = 0x617461646174656DLL;
      break;
    case 3uLL:
      v3 = 1885433183;
      break;
    default:
      v3 = v1;
      break;
  }
  sub_1BA6EE1A4(v1, v2);
  return v3;
}

uint64_t sub_1BA6EE1A4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1BA6EE1B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9538)
  {
    sub_1BA6EE0BC(255, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BA6EE264();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9538);
  }
}

__n128 *sub_1BA6EE228(__n128 *a1, __n128 *a2)
{
  __swift_memcpy16_8(a2, a1);
  return a2;
}

unint64_t sub_1BA6EE264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB658;
  if (!qword_1ED3AB658)
  {
    sub_1BA6EE0BC(255, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB658);
  }
  return result;
}

uint64_t sub_1BA6EE2BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BA6EE8F0(0, &qword_1ED3B9A20);
  v3 = sub_1BB873C60();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA6EE5AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v8 = sub_1BB874608();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BB874398() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BB874398() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BA6EE758(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BA6EE758(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BA6EE2BC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BA6EF188();
      goto LABEL_22;
    }
    sub_1BA6EEDD0();
  }
  v11 = *v4;
  sub_1BB8745CC();
  sub_1BB872A90();
  result = sub_1BB874608();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BB874398(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BB874554();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BB874398();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1BA6EE8F0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB873C84();
    if (!v4)
      atomic_store(v3, a2);
  }
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1BA6EE974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40[16];
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  char *v44;
  uint64_t v45;

  v39 = a7;
  v45 = a8;
  v35 = a4;
  v36 = a5;
  v37 = a3;
  v31[0] = a1;
  v10 = *(_QWORD *)(a6 + 16);
  v11 = *(_QWORD *)(a6 + 24);
  v34 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v18 = (char *)v31 - v17;
  v19 = (uint64_t *)(v8 + *(int *)(a6 + 44));
  v20 = *v19;
  v32 = v19[1];
  v33 = v20;
  v21 = a2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v18, a2, AssociatedTypeWitness, v16);
  v22 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v31[1] = v10;
  v31[2] = v11;
  v25 = v39;
  *((_QWORD *)v24 + 2) = v10;
  *((_QWORD *)v24 + 3) = v25;
  v26 = v45;
  *((_QWORD *)v24 + 4) = v11;
  *((_QWORD *)v24 + 5) = v26;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v24[v22], v18, AssociatedTypeWitness);
  v27 = &v24[v23];
  v28 = v32;
  *(_QWORD *)v27 = v33;
  *((_QWORD *)v27 + 1) = v28;
  v41 = v35;
  v42 = v36;
  v43 = sub_1BB7E29C0;
  v44 = v24;
  swift_retain();
  v29 = v38;
  sub_1BA6EEB2C(v37, v21, (uint64_t)sub_1BB7E26A8, (uint64_t)v40, v34);
  if (!v29)
    sub_1BB874464();
  return swift_release();
}

uint64_t sub_1BA6EEB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, double);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  _BYTE v45[16];
  uint64_t (*v46)();
  _QWORD *v47;
  _QWORD v48[4];
  uint64_t v49;

  v37 = a3;
  v38 = a4;
  v35 = a2;
  v36 = a5;
  v39 = a1;
  v7 = *(_QWORD *)(a5 + 24);
  v49 = *(_QWORD *)(a5 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v32 = *(_QWORD *)(v10 + 64);
  v11 = v32;
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v27 - v13;
  v15 = (uint64_t *)(v5 + *(int *)(a5 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = v17;
  v28 = v16;
  v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v34(v14, a2, AssociatedTypeWitness, v12);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = (v18 + 32) & ~v18;
  v31 = v18 | 7;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v49;
  *(_QWORD *)(v20 + 24) = v7;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v30(v20 + v19, v14, AssociatedTypeWitness);
  v21 = (_QWORD *)(v20 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  v22 = v28;
  *v21 = v29;
  v21[1] = v22;
  swift_retain();
  v23 = v33;
  v24 = sub_1BB87444C();
  ((void (*)(char *, uint64_t, uint64_t))v34)(v14, v35, AssociatedTypeWitness);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v49;
  v25[3] = v7;
  v25[4] = v24;
  v30((uint64_t)v25 + ((v18 + 40) & ~v18), v14, AssociatedTypeWitness);
  sub_1BA4C010C(v23 + *(int *)(v36 + 36), (uint64_t)v48);
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  v46 = sub_1BB7E26A4;
  v47 = v25;
  v41 = v37;
  v42 = v38;
  v43 = sub_1BB7E269C;
  v44 = v20;
  sub_1BA6EC658(v39, (uint64_t)sub_1BAA0239C, (uint64_t)v45, (uint64_t)sub_1BB7E26A8, (uint64_t)v40);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
}

unint64_t sub_1BA6EEDB4(unint64_t result)
{
  if ((result >> 62) <= 1)
    return swift_release();
  return result;
}

uint64_t sub_1BA6EEDD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BA6EE8F0(0, &qword_1ED3B9A20);
  v3 = sub_1BB873C60();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    result = sub_1BB874608();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BA6EF090(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  switch((2 * a8) | ((a7 & 8) != 0))
  {
    case 0:
      result = sub_1BA6EF818(result, a2, a3, a4, a5, a6, a7);
      break;
    case 2:
      result = sub_1BA739218(result, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
      break;
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 8:
      result = sub_1BA968124(result, a2, a3, a4, a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FormatAction()
{
  uint64_t result;

  result = qword_1ED3BA9D8;
  if (!qword_1ED3BA9D8)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1BA6EF188()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BA6EE8F0(0, &qword_1ED3B9A20);
  v2 = *v0;
  v3 = sub_1BB873C54();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for FormatContentSlotItemObject()
{
  uint64_t result;

  result = qword_1ED3C28D0;
  if (!qword_1ED3C28D0)
    return swift_getSingletonMetadata();
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

void sub_1BA6EF3B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2E70)
  {
    sub_1BB86C67C();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2E70);
  }
}

uint64_t sub_1BA6EF404(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  switch((a7 >> 21) & 7)
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      result = swift_bridgeObjectRelease();
      break;
    case 5u:
      result = sub_1BA6EF090(result, a2, a3, a4, a5, a6, a7, SBYTE1(a7));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA6EF43C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int128 v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v4 = a2[11];
  v71 = a2[10];
  v72 = v4;
  v73 = *((_QWORD *)a2 + 24);
  v5 = a2[7];
  v67 = a2[6];
  v68 = v5;
  v6 = a2[9];
  v69 = a2[8];
  v70 = v6;
  v7 = a2[3];
  v63 = a2[2];
  v64 = v7;
  v8 = a2[5];
  v65 = a2[4];
  v66 = v8;
  v9 = a2[1];
  v61 = *a2;
  v62 = v9;
  *(_QWORD *)(v2 + 64) = 0;
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v11;
  *(_QWORD *)(v2 + 24) = v10;
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 40) = v12;
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v13;
  v14 = *((_QWORD *)&v71 + 1);
  if (!*((_QWORD *)&v71 + 1))
    v14 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 56) = v14;
  v15 = v72;
  if (!(_QWORD)v72)
  {
    swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 64);
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  *(_QWORD *)(v2 + 64) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v62;
  v60 = v62;
  if ((~(_QWORD)v62 & 0xF000000000000007) == 0)
  {
    v16 = *(_QWORD *)(a1 + 72);
    sub_1BA6E6C68(v16);
  }
  *(_QWORD *)(v2 + 72) = v16;
  v17 = *((_QWORD *)&v62 + 1);
  if (!*((_QWORD *)&v62 + 1))
    v17 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 80) = v17;
  v18 = BYTE10(v70);
  if (BYTE10(v70) == 9)
    v18 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(v2 + 88) = v18;
  v19 = *((_QWORD *)&v63 + 1);
  v21 = v63;
  v58 = v21 >> 64;
  v20 = v21;
  v59 = v63;
  v22 = v64;
  v57 = v64;
  if (v64 >= 0xFEu)
  {
    v20 = *(_QWORD *)(a1 + 96);
    v19 = *(_QWORD *)(a1 + 104);
    v22 = *(_BYTE *)(a1 + 112);
    sub_1BA6E6C54(v20, v19, v22);
  }
  *(_QWORD *)(v2 + 96) = v20;
  *(_QWORD *)(v2 + 104) = v19;
  *(_BYTE *)(v2 + 112) = v22;
  v23 = v71;
  v56 = v71;
  if ((_QWORD)v71 == 3)
  {
    v23 = *(_QWORD *)(a1 + 120);
    sub_1BA6E6C80(v23);
  }
  *(_QWORD *)(v2 + 120) = v23;
  v24 = BYTE9(v70);
  if (BYTE9(v70) == 4)
    v24 = *(_BYTE *)(a1 + 128);
  v25 = *((_QWORD *)&v64 + 1);
  v27 = *((_QWORD *)&v65 + 1);
  v26 = v65;
  v29 = *((_QWORD *)&v66 + 1);
  v28 = v66;
  v30 = *((_QWORD *)&v67 + 1);
  v31 = v67;
  v33 = *((_QWORD *)&v68 + 1);
  v34 = v68;
  v32 = v69;
  v54 = v65;
  v55 = *((_QWORD *)&v64 + 1);
  v52 = v66;
  v53 = *((_QWORD *)&v65 + 1);
  v50 = v67;
  v51 = *((_QWORD *)&v66 + 1);
  v48 = v68;
  v49 = *((_QWORD *)&v67 + 1);
  v46 = v69;
  v47 = *((_QWORD *)&v68 + 1);
  *(_BYTE *)(v2 + 128) = v24;
  v35 = BYTE8(v69);
  v45 = BYTE8(v69);
  if (BYTE8(v69) == 254)
  {
    v43 = *(_QWORD *)(a1 + 144);
    v44 = *(_QWORD *)(a1 + 136);
    v28 = *(_QWORD *)(a1 + 160);
    v42 = *(_QWORD *)(a1 + 152);
    v29 = *(_QWORD *)(a1 + 168);
    v31 = *(_QWORD *)(a1 + 176);
    v30 = *(_QWORD *)(a1 + 184);
    v34 = *(_QWORD *)(a1 + 192);
    v33 = *(_QWORD *)(a1 + 200);
    v32 = *(_QWORD *)(a1 + 208);
    v35 = *(_BYTE *)(a1 + 216);
    sub_1BA6E8A48(v44, v43, v42, v28, v29, v31, v30, v34, v33, v32, v35);
    v27 = v42;
    v26 = v43;
    v25 = v44;
  }
  *(_QWORD *)(v2 + 136) = v25;
  *(_QWORD *)(v2 + 144) = v26;
  *(_QWORD *)(v2 + 152) = v27;
  *(_QWORD *)(v2 + 160) = v28;
  *(_QWORD *)(v2 + 168) = v29;
  *(_QWORD *)(v2 + 176) = v31;
  *(_QWORD *)(v2 + 184) = v30;
  *(_QWORD *)(v2 + 192) = v34;
  *(_QWORD *)(v2 + 200) = v33;
  *(_QWORD *)(v2 + 208) = v32;
  v36 = v70;
  v37 = v70;
  *(_BYTE *)(v2 + 216) = v35;
  if ((~v37 & 0xF000000000000007) == 0)
  {
    v37 = *(_QWORD *)(a1 + 224);
    sub_1BA5E7FF4(v37);
  }
  *(_QWORD *)(v2 + 224) = v37;
  v38 = BYTE8(v70);
  if (BYTE8(v70) == 2)
    v38 = *(_BYTE *)(a1 + 232);
  *(_BYTE *)(v2 + 232) = v38;
  v39 = *((_QWORD *)&v72 + 1);
  v40 = v73;
  sub_1BA6E6C68(v60);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v59, v58, v57);
  sub_1BA6E6C80(v56);
  sub_1BA6E8A48(v55, v54, v53, v52, v51, v50, v49, v48, v47, v46, v45);
  sub_1BA5E7FF4(v36);
  sub_1BA6E6C90(*((uint64_t *)&v72 + 1));
  sub_1BAC685AC((uint64_t)&v61);
  if (v39 == 1)
  {
    v39 = *(_QWORD *)(a1 + 240);
    v40 = *(_QWORD *)(a1 + 248);
    sub_1BA6E6C90(v39);
  }
  *(_QWORD *)(v2 + 240) = v39;
  *(_QWORD *)(v2 + 248) = v40;
  sub_1BA6E70E4(a1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, v2 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask);
  return v2;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1BA6EF818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 1u)
    return sub_1BA7331A8(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA6EF82C(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  switch((a6 >> 1) & 0xF)
  {
    case 2u:
      result = sub_1BAC65374(result, a2, a3, a4, a5, a6 & 0xE1, (uint64_t (*)(void))sub_1BA967D84, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA740434);
      break;
    case 3u:
      result = sub_1BA967D84(result, a2);
      break;
    case 7u:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 8u:
      result = sub_1BA967F18(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA967D84);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1BA6EF8CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA6EFEAC();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4])
          memmove(v12, a4 + 4, 208 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6EF9F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6EF9F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 208 * a1 + 32;
    v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3CC698, (uint64_t (*)(void))sub_1BA82D21C, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6EFB14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = type metadata accessor for FormatCompilerPrimitiveProperty(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA6EFB6C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3CC698)
  {
    v2 = sub_1BA82D21C();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3CC698);
  }
}

uint64_t sub_1BA6EFBC4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 2)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB939690;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1BA6EFEAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFC40)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3CC698, (uint64_t (*)(void))sub_1BA82D21C, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFC40);
  }
}

uint64_t sub_1BA6EFF20(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BA6F0104, (unint64_t *)&qword_1ED3B2E30);
  *v3 = result;
  return result;
}

uint64_t sub_1BA6EFF54(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    a5(0);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1BA4D9CE8(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6F0104()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9D60)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B2E30);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9D60);
  }
}

unint64_t sub_1BA6F0168()
{
  unint64_t result;

  result = qword_1ED3B91B0;
  if (!qword_1ED3B91B0)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED3B91B0);
  }
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BA6F01D0(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v37 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BA6F04E0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 1)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB91F6C0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BA6F0790(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  double v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120[2];
  uint64_t v121[2];
  uint64_t v122;
  _QWORD v123[25];
  __int128 v124[12];
  _BYTE v125[128];
  unint64_t v126;
  _QWORD v127[16];
  _QWORD v128[16];
  __int128 v129[9];
  char v130[136];

  v3 = v1;
  v106 = a1;
  v4 = *v1;
  swift_beginAccess();
  v5 = v1[3];
  v105 = v1[2];
  v6 = v1[4];
  v108 = v3[5];
  swift_beginAccess();
  v7 = v3[7];
  v107 = v3[6];
  v103 = v6;
  v104 = v4;
  if ((~v7 & 0xF000000000000007) != 0)
  {
    if (v7 >> 61 == 3)
    {
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      v10 = v5;
      v11 = *(_QWORD *)(v7 + 32);
      v12 = *(_BYTE *)(v7 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA745F88(v8, v9, v11, v12);
      sub_1BA962510(v106, v8, v9, v11, v12);
      if (v2)
      {
        sub_1BA6F3F50(v8, v9, v11, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v14 = *(_QWORD *)&v124[0];
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v8;
      *(_QWORD *)(v15 + 24) = v9;
      *(_QWORD *)(v15 + 32) = v11;
      *(_BYTE *)(v15 + 40) = v12;
      v7 = v15 | 0x8000000000000000;
      *(_QWORD *)(v15 + 48) = v14;
      v5 = v10;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E6C68(v7);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v126 = v7;
  sub_1BA6A09F0((uint64_t)(v3 + 8), (uint64_t)v128, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  sub_1BA6A09F0((uint64_t)v128, (uint64_t)v129, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  if (sub_1BAB05F98((uint64_t)v129) == 1)
  {
    sub_1BA6A09F0((uint64_t)v128, (uint64_t)v127, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    v16 = v106;
  }
  else
  {
    sub_1BA7439D4(v129, (uint64_t)v130);
    sub_1BA6A09F0((uint64_t)v128, (uint64_t)v123, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    sub_1BA6A0C50(v123, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    v16 = v106;
    sub_1BA742658();
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6A0C50(v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
      v17 = v7;
      return sub_1BA6E6CD8(v17);
    }
    sub_1BA6A0C50(v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    sub_1BA7439D4(v124, (uint64_t)&v109);
    sub_1BA7439D4(&v109, (uint64_t)v125);
    nullsub_1(v125);
    sub_1BA6A09F0((uint64_t)v125, (uint64_t)v127, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  }
  v18 = sub_1BA6A09F0((uint64_t)v127, (uint64_t)v125, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  if (v3[24])
  {
    *(_QWORD *)&v124[0] = v16;
    MEMORY[0x1E0C80A78](v18);
    v82 = v124;
    v20 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)&v80, v19);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6A0C50(v127, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
      return sub_1BA6E6CD8(v7);
    }
    v21 = v20;
    v96 = v7;
    v101 = 0;
    v91 = v5;
  }
  else
  {
    v96 = v7;
    v101 = v2;
    v91 = v5;
    v21 = 0;
  }
  v22 = v3[25];
  v23 = v3[26];
  v25 = v3[27];
  v24 = v3[28];
  v26 = v3[29];
  v27 = v3[30];
  v29 = v3[31];
  v28 = v3[32];
  v102 = v3[33];
  v30 = v3[34];
  v99 = v22;
  v100 = v30;
  v31 = *((unsigned __int8 *)v3 + 280);
  v94 = v27;
  v95 = v29;
  v92 = v25;
  v93 = v24;
  v98 = v31;
  if (v31 != 254)
  {
    v97 = v23;
    swift_retain();
    v32 = v26;
    v33 = v26;
    v34 = v101;
    sub_1BA742954(v16, v32);
    if (v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v82) = v98;
      v81 = v100;
      v80 = v102;
      v35 = v99;
      v36 = v97;
      v37 = v92;
      v38 = v93;
      v39 = v33;
      v40 = v94;
      v41 = v95;
      v42 = v28;
LABEL_47:
      sub_1BA6E8A78(v35, v36, v37, v38, v39, v40, v41, v42, v80, v81, v82);
      sub_1BA6A0C50(v127, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
      v17 = v96;
      return sub_1BA6E6CD8(v17);
    }
    v101 = 0;
    LODWORD(v23) = v97;
    v25 = v92;
    v43 = v93;
    v44 = v33;
    v27 = v94;
    v29 = v95;
    sub_1BA6E8A78(v99, v97, v92, v93, v44, v94, v95, v28, v102, v100, v98);
    LOBYTE(v31) = v98;
    v22 = v99;
    v24 = v43;
    v26 = *(_QWORD *)&v124[0];
    v23 = v23;
  }
  v89 = v28;
  v90 = v21;
  *(_QWORD *)&v109 = v22;
  *((_QWORD *)&v109 + 1) = v23;
  v97 = v23;
  v110 = v25;
  v111 = v24;
  v88 = v26;
  v112 = v26;
  v113 = v27;
  v114 = v29;
  v115 = v28;
  v45 = v102;
  v46 = v100;
  v116 = v102;
  v117 = v100;
  v118 = v31;
  v47 = v3[36];
  sub_1BA6A09F0((uint64_t)(v3 + 37), (uint64_t)v124, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  sub_1BA6A09F0((uint64_t)v124, (uint64_t)v123, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  v87 = v3[62];
  v86 = *((unsigned __int8 *)v3 + 504);
  v48 = v3[64];
  if (v48)
  {
    v49 = v106;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v50 = v101;
    v51 = sub_1BA72BED4(v121[0], v48);
    v52 = v50;
    v53 = v96;
    if (v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA6E8A78(v99, v97, v92, v93, v88, v94, v95, v89, v102, v46, v98);
      sub_1BA6A0C50(v127, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
      v17 = v53;
      return sub_1BA6E6CD8(v17);
    }
    v56 = v51;
    v85 = v47;
    swift_release();
    v57 = swift_allocObject();
    *(double *)(v57 + 16) = v56;
    sub_1BA790480();
    v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v58 + 32) = v57;
    v54 = v58;
    *(_BYTE *)(v58 + 40) = 0;
    swift_bridgeObjectRelease();
    v55 = v49;
    v96 = v53;
    v45 = v102;
  }
  else
  {
    v85 = v47;
    swift_bridgeObjectRetain();
    v54 = 0;
    v55 = v106;
    v52 = v101;
  }
  v84 = v54;
  v122 = v54;
  v59 = v3[65];
  v60 = v3[66];
  v61 = v59;
  if (v59 == 9)
  {
    v62 = v90;
  }
  else
  {
    if ((~v60 & 0xF000000000000007) != 0)
    {
      v101 = v3[65];
      sub_1BA5E7FF4(v60);
      sub_1BA742954(v55, v60);
      v62 = v90;
      if (v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_45:
        v68 = v101;
        v69 = v60;
        goto LABEL_46;
      }
      sub_1BA6E8A90(v101, v60);
      v60 = v121[0];
    }
    else
    {
      sub_1BA6E8A90(v59, v3[66]);
      v62 = v90;
    }
    v59 = v61;
  }
  v121[0] = v59;
  v121[1] = v60;
  v63 = v3[67];
  v64 = v3[68];
  v65 = v63;
  v101 = v59;
  if (v63 != 9)
  {
    v83 = v60;
    if ((~v64 & 0xF000000000000007) != 0)
    {
      v90 = v63;
      v67 = v64;
      sub_1BA5E7FF4(v64);
      sub_1BA742954(v55, v67);
      if (v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A90(v90, v67);
        v68 = v101;
        v69 = v83;
LABEL_46:
        sub_1BA6E8A90(v68, v69);
        swift_bridgeObjectRelease();
        LOBYTE(v82) = v98;
        v80 = v45;
        v81 = v46;
        v35 = v99;
        v36 = v97;
        v37 = v92;
        v38 = v93;
        v39 = v88;
        v42 = v89;
        v40 = v94;
        v41 = v95;
        goto LABEL_47;
      }
      sub_1BA6E8A90(v90, v67);
      v64 = v120[0];
    }
    else
    {
      v66 = v64;
      sub_1BA6E8A90(v63, v64);
      v64 = v66;
    }
    v63 = v65;
    v60 = v83;
  }
  v120[0] = v63;
  v120[1] = v64;
  v70 = v3[70];
  if (v70)
  {
    v71 = *((_BYTE *)v3 + 552);
    v90 = v63;
    v83 = v64;
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v72 = sub_1BA72BED4(v119, v70);
    if (v52)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E8A90(v90, v83);
      goto LABEL_45;
    }
    v74 = v72;
    swift_release();
    v75 = swift_allocObject();
    *(double *)(v75 + 16) = v74;
    sub_1BA790480();
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v73 + 32) = v75;
    *(_BYTE *)(v73 + 40) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v71 = *((_BYTE *)v3 + 552);
    v73 = 0;
  }
  v76 = v91;
  v77 = v103;
  v78 = v87;
  v79 = v86;
  v119 = v73;
  swift_allocObject();
  return FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v105, v76, v77, v108, v107, (uint64_t *)&v126, (uint64_t)v125, v62, &v109, v85, (uint64_t)v123, v78, v79, &v122, v121, v120, v71, &v119);
}

uint64_t sub_1BA6F11B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned int v16;
  unint64_t v17;
  size_t v18;
  uint64_t isStackAllocationSafe;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t j;
  uint64_t result;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58[66];
  _QWORD v59[72];

  v56 = a1;
  v57 = 0;
  v59[70] = *MEMORY[0x1E0C80C00];
  v50 = *v1;
  swift_beginAccess();
  v45 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = sub_1BA6E8D7C(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v46 = sub_1BA6F1804(0, v3, 0, v4);
  v49 = *(_QWORD *)(v2 + 16);
  if (!v49)
  {
LABEL_31:
    sub_1BA6F1A4C(0);
    v33 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      v35 = v34 - 1;
      for (i = 32; ; i += 536)
      {
        memcpy(v59, (const void *)(v33 + i), 0x218uLL);
        sub_1BAC67FA0((uint64_t)v59);
        v38 = v5[2];
        v37 = v5[3];
        if (v38 >= v37 >> 1)
          v5 = sub_1BA6E8D7C((_QWORD *)(v37 > 1), v38 + 1, 1, v5);
        v5[2] = v38 + 1;
        memcpy(&v5[66 * v38 + 4], v59, 0x210uLL);
        if (!v35)
          break;
        --v35;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v5[2];
    if (v39)
    {
      v40 = (uint64_t)v45;
      swift_retain();
      swift_bridgeObjectRetain();
      v41 = v39 - 1;
      v42 = v40;
      for (j = 4; ; j += 66)
      {
        memcpy(v59, &v5[j], 0x210uLL);
        memcpy(v58, v59, sizeof(v58));
        swift_allocObject();
        sub_1BAC67FA0((uint64_t)v59);
        v42 = sub_1BB4EC884(v42, v58);
        swift_release();
        if (!v41)
          break;
        --v41;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v42 = (uint64_t)v45;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v42;
  }
  v48 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v47 = v2;
LABEL_3:
  v52 = v6;
  memcpy(v59, (const void *)(v48 + 528 * v6), 0x210uLL);
  v7 = v59[0];
  v8 = v59[1];
  sub_1BAC67FA0((uint64_t)v59);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v58[0] = v7;
  v58[1] = v8;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E583C(v58);
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v9 + 16);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v51 = v5;
  v10 = 0;
  v11 = (uint64_t *)(v9 + 64);
  v12 = v9;
  while (1)
  {
    if (v10 >= *(_QWORD *)(v12 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    v53 = *(v11 - 2);
    v13 = *(v11 - 1);
    v14 = *v11;
    v15 = *(_BYTE *)(v13 + 32);
    v16 = v15 & 0x3F;
    v17 = (unint64_t)((1 << v15) + 63) >> 6;
    v18 = 8 * v17;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v16 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v20 = (char *)swift_slowAlloc();
    bzero(v20, v18);
    v24 = v17;
    v22 = v57;
    v23 = sub_1BA6EB5B4((uint64_t)v20, v24, v13, v56);
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_47;
    v57 = 0;
    MEMORY[0x1BCCE5C38](v20, -1, -1);
LABEL_15:
    v25 = sub_1BA6EB330(v23, v13);
    swift_release();
    if ((v25 & 1) != 0 && (sub_1BA6EBD20(v56, v14) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v26 = v53;
      if (v53 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC67FA0((uint64_t)v59);
        v5 = v51;
        v32 = v51[2];
        v31 = v51[3];
        v2 = v47;
        if (v32 >= v31 >> 1)
          v5 = sub_1BA6E8D7C((_QWORD *)(v31 > 1), v32 + 1, 1, v51);
        v5[2] = v32 + 1;
        memcpy(&v5[66 * v32 + 4], v59, 0x210uLL);
      }
      else
      {
        sub_1BAC67FA0((uint64_t)v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v2 = v47;
        v28 = v46[2];
        v27 = v46[3];
        v5 = v51;
        if (v28 >= v27 >> 1)
          v46 = sub_1BA6F1804((_QWORD *)(v27 > 1), v28 + 1, 1, v46);
        memcpy(v58, v59, sizeof(v58));
        v29 = v46;
        v46[2] = v28 + 1;
        v30 = &v29[67 * v28];
        memcpy(v30 + 4, v58, 0x210uLL);
        v30[70] = v26;
      }
LABEL_26:
      sub_1BAC68120((uint64_t)v59);
LABEL_27:
      v6 = v52 + 1;
      if (v52 + 1 == v49)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(_QWORD *)(v2 + 16))
LABEL_45:
        __break(1u);
      goto LABEL_3;
    }
    ++v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 += 5;
    if (v54 == v10)
    {
      swift_bridgeObjectRelease();
      sub_1BAC68120((uint64_t)v59);
      v5 = v51;
      v2 = v47;
      goto LABEL_27;
    }
  }
  v55 = &v45;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v20 = (char *)&v45 - ((v18 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v20, v18);
  v21 = v17;
  v22 = v57;
  v23 = sub_1BA6EB5B4((uint64_t)v20, v21, v13, v56);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v57 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  result = MEMORY[0x1BCCE5C38](v20, -1, -1);
  __break(1u);
  return result;
}

_QWORD *sub_1BA6F1804(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA6F1ACC();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 536);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[67 * v8 + 4])
          memmove(v12, a4 + 4, 536 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6F1928(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6F1928(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 536 * a1 + 32;
    v6 = a3 + 536 * v4;
    if (v5 >= v6 || v5 + 536 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3CC688, (uint64_t (*)(void))sub_1BA82DFC8, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6F1A4C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3CC688)
  {
    v2 = sub_1BA82DFC8();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3CC688);
  }
}

uint64_t sub_1BA6F1AA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D60, (uint64_t)qword_1ED476C38, a1);
}

uint64_t sub_1BA6F1AC0(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BA6E38F8);
}

void sub_1BA6F1ACC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFC20)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3CC688, (uint64_t (*)(void))sub_1BA82DFC8, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFC20);
  }
}

uint64_t sub_1BA6F1B40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t *v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _QWORD *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  __int128 *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  uint64_t v102;
  char v103;
  __int128 v104;
  char v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  _BOOL8 v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  _BOOL8 v119;
  uint64_t v120;
  char v121;
  unint64_t v122;
  char v123;
  _QWORD *v124;
  __int128 *v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  _QWORD *v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t *v149;
  _OWORD *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  _QWORD *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  __int128 *v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  unint64_t v191;
  unint64_t v192;
  _OWORD *v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  unsigned __int8 v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t result;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int64_t v279;
  uint64_t v280;
  uint64_t v281;
  _QWORD *v282;
  uint64_t v283;
  _OWORD v284[8];
  _OWORD v285[2];
  _QWORD *v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  _BYTE v295[25];
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  _BYTE v304[25];
  unint64_t v305;

  swift_beginAccess();
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  swift_beginAccess();
  v225 = v1;
  v7 = v1[6];
  swift_beginAccess();
  v226 = a1;
  v8 = *(_QWORD *)(a1 + 48);
  v305 = MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v8 + 16);
  if (__OFADD__(v9, v10))
    goto LABEL_98;
  v222 = v5;
  v224 = v4;
  sub_1BA6F2DBC();
  v223 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = (_OWORD *)v7;
  sub_1BB8727C0();
  v282 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v7 + 16);
  v221 = v6;
  v227 = v8;
  if (!v12)
    goto LABEL_20;
  v279 = v10;
  swift_bridgeObjectRetain();
  v13 = v11[9];
  v302 = v11[8];
  v303 = v13;
  *(_OWORD *)v304 = v11[10];
  *(_OWORD *)&v304[9] = *(_OWORD *)((char *)v11 + 169);
  v14 = v11[5];
  v298 = v11[4];
  v299 = v14;
  v15 = v11[7];
  v300 = v11[6];
  v301 = v15;
  v16 = v11[3];
  v296 = v11[2];
  v297 = v16;
  v17 = *((_QWORD *)&v296 + 1);
  v18 = v12 - 1;
  for (i = 12; ; i += 10)
  {
    v20 = v296;
    sub_1BAC68F14((uint64_t)&v296);
    sub_1BAC68F14((uint64_t)&v296);
    swift_bridgeObjectRetain();
    v21 = v305;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v284[0] = v21;
    v24 = sub_1BA6E35A8(v20, v17);
    v25 = *(_QWORD *)(v21 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v28 = v23;
    if (*(_QWORD *)(v21 + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C7760();
        if ((v28 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B6BB4(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_1BA6E35A8(v20, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_99;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_11:
        v31 = *(_QWORD **)&v284[0];
        v32 = (__int128 *)(*(_QWORD *)(*(_QWORD *)&v284[0] + 56) + 160 * v24);
        v33 = v32[1];
        v287 = *v32;
        v288 = v33;
        v34 = v32[5];
        v36 = v32[2];
        v35 = v32[3];
        v291 = v32[4];
        v292 = v34;
        v289 = v36;
        v290 = v35;
        v38 = v32[7];
        v37 = v32[8];
        v39 = v32[6];
        *(_OWORD *)&v295[9] = *(__int128 *)((char *)v32 + 137);
        v294 = v38;
        *(_OWORD *)v295 = v37;
        v293 = v39;
        sub_1BAC68FF0((uint64_t)&v287);
        v40 = v297;
        *v32 = v296;
        v32[1] = v40;
        v41 = v301;
        v43 = v298;
        v42 = v299;
        v32[4] = v300;
        v32[5] = v41;
        v32[2] = v43;
        v32[3] = v42;
        v45 = v303;
        v44 = *(_OWORD *)v304;
        v46 = v302;
        *(__int128 *)((char *)v32 + 137) = *(_OWORD *)&v304[9];
        v32[7] = v45;
        v32[8] = v44;
        v32[6] = v46;
        goto LABEL_15;
      }
    }
    v31 = *(_QWORD **)&v284[0];
    *(_QWORD *)(*(_QWORD *)&v284[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v47 = (uint64_t *)(v31[6] + 16 * v24);
    *v47 = v20;
    v47[1] = v17;
    v48 = (_OWORD *)(v31[7] + 160 * v24);
    v49 = *(_OWORD *)&v304[9];
    v51 = v303;
    v50 = *(_OWORD *)v304;
    v48[6] = v302;
    v48[7] = v51;
    v48[8] = v50;
    *(_OWORD *)((char *)v48 + 137) = v49;
    v53 = v300;
    v52 = v301;
    v54 = v299;
    v48[2] = v298;
    v48[3] = v54;
    v48[4] = v53;
    v48[5] = v52;
    v55 = v297;
    *v48 = v296;
    v48[1] = v55;
    v56 = v31[2];
    v57 = __OFADD__(v56, 1);
    v58 = v56 + 1;
    if (v57)
      goto LABEL_94;
    v31[2] = v58;
    swift_bridgeObjectRetain();
LABEL_15:
    v305 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v59 = v282[2];
    v60 = v282[3];
    swift_bridgeObjectRetain();
    if (v59 >= v60 >> 1)
      v282 = sub_1BA6E6D30((_QWORD *)(v60 > 1), v59 + 1, 1, v282);
    v282[2] = v59 + 1;
    v61 = &v282[2 * v59];
    v61[4] = v20;
    v61[5] = v17;
    sub_1BAC68FF0((uint64_t)&v296);
    if (!v18)
      break;
    v62 = v11[i + 1];
    v296 = v11[i];
    v297 = v62;
    v63 = v11[i + 2];
    v64 = v11[i + 3];
    v65 = v11[i + 5];
    v300 = v11[i + 4];
    v301 = v65;
    v298 = v63;
    v299 = v64;
    v66 = v11[i + 6];
    v67 = v11[i + 7];
    v68 = v11[i + 8];
    *(_OWORD *)&v304[9] = *(_OWORD *)((char *)&v11[i + 8] + 9);
    v303 = v67;
    *(_OWORD *)v304 = v68;
    v302 = v66;
    v17 = *((_QWORD *)&v296 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  v8 = v227;
  v10 = v279;
LABEL_20:
  v69 = sub_1BA6E6D30(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v70 = *(_QWORD *)(v8 + 16);
  if (!v70)
    goto LABEL_66;
  swift_bridgeObjectRetain();
  v71 = *(_OWORD *)(v8 + 144);
  v302 = *(_OWORD *)(v8 + 128);
  v303 = v71;
  *(_OWORD *)v304 = *(_OWORD *)(v8 + 160);
  *(_OWORD *)&v304[9] = *(_OWORD *)(v8 + 169);
  v72 = *(_OWORD *)(v8 + 80);
  v298 = *(_OWORD *)(v8 + 64);
  v299 = v72;
  v73 = *(_OWORD *)(v8 + 112);
  v300 = *(_OWORD *)(v8 + 96);
  v301 = v73;
  v74 = *(_OWORD *)(v8 + 48);
  v296 = *(_OWORD *)(v8 + 32);
  v297 = v74;
  v75 = v70 - 1;
  v280 = 192;
  v76 = *((_QWORD *)&v296 + 1);
  while (2)
  {
    v77 = v296;
    v78 = (_QWORD *)v305;
    v79 = *(_QWORD *)(v305 + 16);
    sub_1BAC68F14((uint64_t)&v296);
    if (v79)
    {
      swift_bridgeObjectRetain();
      v80 = sub_1BA6E35A8(v77, v76);
      if ((v81 & 1) != 0)
      {
        v82 = (__int128 *)(v78[7] + 160 * v80);
        v83 = v82[1];
        v287 = *v82;
        v288 = v83;
        v84 = v82[5];
        v86 = v82[2];
        v85 = v82[3];
        v291 = v82[4];
        v292 = v84;
        v289 = v86;
        v290 = v85;
        v87 = v82[6];
        v88 = v82[7];
        v89 = v82[8];
        *(_OWORD *)&v295[9] = *(__int128 *)((char *)v82 + 137);
        v294 = v88;
        *(_OWORD *)v295 = v89;
        v293 = v87;
        sub_1BAC68F14((uint64_t)&v287);
        swift_bridgeObjectRelease();
        v90 = v288;
        v91 = v288;
        if ((~(_QWORD)v288 & 0xF000000000000007) == 0)
        {
          v91 = v297;
          sub_1BA6E6C68(v297);
        }
        v92 = *((_QWORD *)&v288 + 1);
        if (!*((_QWORD *)&v288 + 1))
          v92 = swift_bridgeObjectRetain();
        v237 = v92;
        v228 = v91;
        v94 = *((_QWORD *)&v289 + 1);
        v93 = v289;
        v95 = v290;
        v259 = v289;
        v261 = v69;
        v257 = *((_QWORD *)&v289 + 1);
        v96 = v290;
        if (v290 >= 0xFEu)
        {
          v94 = *((_QWORD *)&v298 + 1);
          v93 = v298;
          v96 = v299;
          sub_1BA6E6C54(v298, *((uint64_t *)&v298 + 1), v299);
        }
        v233 = v94;
        v235 = v93;
        v239 = v75;
        v97 = *((_QWORD *)&v290 + 1);
        v98 = v291;
        v99 = *((_QWORD *)&v294 + 1);
        v100 = *(_QWORD *)v295;
        v253 = v291;
        v255 = *((_QWORD *)&v290 + 1);
        v249 = v292;
        v251 = *((_QWORD *)&v291 + 1);
        v276 = v292;
        v277 = *((_QWORD *)&v291 + 1);
        v245 = v293;
        v247 = *((_QWORD *)&v292 + 1);
        v272 = v293;
        v274 = *((_QWORD *)&v292 + 1);
        v241 = v294;
        v243 = *((_QWORD *)&v293 + 1);
        v269 = v294;
        v271 = *((_QWORD *)&v293 + 1);
        v265 = *(_QWORD *)v295;
        v267 = *((_QWORD *)&v294 + 1);
        v101 = v295[8];
        v263 = v295[8];
        if (v295[8] == 254)
        {
          v97 = *((_QWORD *)&v299 + 1);
          v98 = v300;
          v263 = v304[8];
          v265 = *(_QWORD *)v304;
          v267 = *((_QWORD *)&v303 + 1);
          v276 = v301;
          v277 = *((_QWORD *)&v300 + 1);
          v272 = v302;
          v274 = *((_QWORD *)&v301 + 1);
          v269 = v303;
          v271 = *((_QWORD *)&v302 + 1);
          sub_1BA6E8A48(*((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), v301, *((uint64_t *)&v301 + 1), v302, *((uint64_t *)&v302 + 1), v303, *((uint64_t *)&v303 + 1), *(uint64_t *)v304, v304[8]);
        }
        v231 = v98;
        v102 = *(_QWORD *)&v295[16];
        if (!*(_QWORD *)&v295[16])
          v102 = swift_bridgeObjectRetain();
        v230 = v102;
        v103 = v295[24];
        if (v295[24] == 2)
          v103 = v304[24];
        v229 = v103;
        v104 = v287;
        swift_bridgeObjectRetain_n();
        sub_1BA6E6C68(v90);
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v259, v257, v95);
        sub_1BA6E8A48(v255, v253, v251, v249, v247, v245, v243, v241, v99, v100, v101);
        swift_bridgeObjectRetain();
        v105 = swift_isUniquelyReferenced_nonNull_native();
        v286 = v78;
        v305 = 0x8000000000000000;
        v107 = sub_1BA6E35A8(v104, *((uint64_t *)&v104 + 1));
        v108 = v78[2];
        v109 = (v106 & 1) == 0;
        v110 = v108 + v109;
        if (__OFADD__(v108, v109))
          goto LABEL_96;
        v111 = v106;
        if (v78[3] >= v110)
        {
          v69 = v261;
          v75 = v239;
          if ((v105 & 1) != 0)
          {
            v114 = v228;
            if ((v106 & 1) == 0)
              goto LABEL_61;
          }
          else
          {
            sub_1BB4C7760();
            v114 = v228;
            if ((v111 & 1) == 0)
              goto LABEL_61;
          }
        }
        else
        {
          sub_1BB4B6BB4(v110, v105);
          v112 = sub_1BA6E35A8(v104, *((uint64_t *)&v104 + 1));
          v69 = v261;
          v75 = v239;
          if ((v111 & 1) != (v113 & 1))
            goto LABEL_99;
          v107 = v112;
          v114 = v228;
          if ((v111 & 1) == 0)
          {
LABEL_61:
            v140 = v286;
            v286[(v107 >> 6) + 8] |= 1 << v107;
            *(_OWORD *)(v140[6] + 16 * v107) = v104;
            v163 = v140[7] + 160 * v107;
            *(_OWORD *)v163 = v104;
            *(_QWORD *)(v163 + 16) = v114;
            *(_QWORD *)(v163 + 24) = v237;
            *(_QWORD *)(v163 + 32) = v235;
            *(_QWORD *)(v163 + 40) = v233;
            *(_BYTE *)(v163 + 48) = v96;
            *(_QWORD *)(v163 + 56) = v97;
            *(_QWORD *)(v163 + 64) = v231;
            *(_QWORD *)(v163 + 72) = v277;
            *(_QWORD *)(v163 + 80) = v276;
            *(_QWORD *)(v163 + 88) = v274;
            *(_QWORD *)(v163 + 96) = v272;
            *(_QWORD *)(v163 + 104) = v271;
            *(_QWORD *)(v163 + 112) = v269;
            *(_QWORD *)(v163 + 120) = v267;
            *(_QWORD *)(v163 + 128) = v265;
            *(_BYTE *)(v163 + 136) = v263;
            *(_QWORD *)(v163 + 144) = v230;
            *(_BYTE *)(v163 + 152) = v229;
            v164 = v140[2];
            v57 = __OFADD__(v164, 1);
            v165 = v164 + 1;
            if (v57)
              goto LABEL_97;
            v140[2] = v165;
            swift_bridgeObjectRetain();
            goto LABEL_63;
          }
        }
        v140 = v286;
        v141 = v286[7] + 160 * v107;
        v142 = *(_OWORD *)(v141 + 16);
        v284[0] = *(_OWORD *)v141;
        v284[1] = v142;
        v143 = *(_OWORD *)(v141 + 80);
        v145 = *(_OWORD *)(v141 + 32);
        v144 = *(_OWORD *)(v141 + 48);
        v284[4] = *(_OWORD *)(v141 + 64);
        v284[5] = v143;
        v284[2] = v145;
        v284[3] = v144;
        v147 = *(_OWORD *)(v141 + 112);
        v146 = *(_OWORD *)(v141 + 128);
        v148 = *(_OWORD *)(v141 + 96);
        *(_OWORD *)((char *)v285 + 9) = *(_OWORD *)(v141 + 137);
        v284[7] = v147;
        v285[0] = v146;
        v284[6] = v148;
        sub_1BAC68FF0((uint64_t)v284);
        *(_OWORD *)v141 = v104;
        *(_QWORD *)(v141 + 16) = v114;
        *(_QWORD *)(v141 + 24) = v237;
        *(_QWORD *)(v141 + 32) = v235;
        *(_QWORD *)(v141 + 40) = v233;
        *(_BYTE *)(v141 + 48) = v96;
        *(_QWORD *)(v141 + 56) = v97;
        *(_QWORD *)(v141 + 64) = v231;
        *(_QWORD *)(v141 + 72) = v277;
        *(_QWORD *)(v141 + 80) = v276;
        *(_QWORD *)(v141 + 88) = v274;
        *(_QWORD *)(v141 + 96) = v272;
        *(_QWORD *)(v141 + 104) = v271;
        *(_QWORD *)(v141 + 112) = v269;
        *(_QWORD *)(v141 + 120) = v267;
        *(_QWORD *)(v141 + 128) = v265;
        *(_BYTE *)(v141 + 136) = v263;
        *(_QWORD *)(v141 + 144) = v230;
        *(_BYTE *)(v141 + 152) = v229;
LABEL_63:
        v305 = (unint64_t)v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC68FF0((uint64_t)&v287);
        sub_1BAC68FF0((uint64_t)&v296);
        v8 = v227;
        if (!v75)
          goto LABEL_65;
LABEL_64:
        v166 = *(_OWORD *)(v8 + v280 + 16);
        v296 = *(_OWORD *)(v8 + v280);
        v297 = v166;
        v167 = *(_OWORD *)(v8 + v280 + 32);
        v168 = *(_OWORD *)(v8 + v280 + 48);
        v169 = *(_OWORD *)(v8 + v280 + 80);
        v300 = *(_OWORD *)(v8 + v280 + 64);
        v301 = v169;
        v298 = v167;
        v299 = v168;
        v170 = *(_OWORD *)(v8 + v280 + 96);
        v171 = *(_OWORD *)(v8 + v280 + 112);
        v172 = *(_OWORD *)(v8 + v280 + 128);
        *(_OWORD *)&v304[9] = *(_OWORD *)(v8 + v280 + 137);
        v303 = v171;
        *(_OWORD *)v304 = v172;
        v302 = v170;
        v76 = *((_QWORD *)&v296 + 1);
        v280 += 160;
        --v75;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1BAC68F14((uint64_t)&v296);
  swift_bridgeObjectRetain();
  v115 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v284[0] = v78;
  v117 = sub_1BA6E35A8(v77, v76);
  v118 = v78[2];
  v119 = (v116 & 1) == 0;
  v120 = v118 + v119;
  if (__OFADD__(v118, v119))
    goto LABEL_93;
  v121 = v116;
  if (v78[3] >= v120)
  {
    if ((v115 & 1) != 0)
    {
      if ((v116 & 1) == 0)
        goto LABEL_54;
    }
    else
    {
      sub_1BB4C7760();
      if ((v121 & 1) == 0)
        goto LABEL_54;
    }
    goto LABEL_49;
  }
  sub_1BB4B6BB4(v120, v115);
  v122 = sub_1BA6E35A8(v77, v76);
  if ((v121 & 1) != (v123 & 1))
    goto LABEL_99;
  v117 = v122;
  if ((v121 & 1) != 0)
  {
LABEL_49:
    v124 = *(_QWORD **)&v284[0];
    v125 = (__int128 *)(*(_QWORD *)(*(_QWORD *)&v284[0] + 56) + 160 * v117);
    v126 = v125[1];
    v287 = *v125;
    v288 = v126;
    v127 = v125[5];
    v129 = v125[2];
    v128 = v125[3];
    v291 = v125[4];
    v292 = v127;
    v289 = v129;
    v290 = v128;
    v131 = v125[7];
    v130 = v125[8];
    v132 = v125[6];
    *(_OWORD *)&v295[9] = *(__int128 *)((char *)v125 + 137);
    v294 = v131;
    *(_OWORD *)v295 = v130;
    v293 = v132;
    sub_1BAC68FF0((uint64_t)&v287);
    v133 = v297;
    *v125 = v296;
    v125[1] = v133;
    v134 = v301;
    v136 = v298;
    v135 = v299;
    v125[4] = v300;
    v125[5] = v134;
    v125[2] = v136;
    v125[3] = v135;
    v138 = v303;
    v137 = *(_OWORD *)v304;
    v139 = v302;
    *(__int128 *)((char *)v125 + 137) = *(_OWORD *)&v304[9];
    v125[7] = v138;
    v125[8] = v137;
    v125[6] = v139;
    goto LABEL_56;
  }
LABEL_54:
  v124 = *(_QWORD **)&v284[0];
  *(_QWORD *)(*(_QWORD *)&v284[0] + 8 * (v117 >> 6) + 64) |= 1 << v117;
  v149 = (uint64_t *)(v124[6] + 16 * v117);
  *v149 = v77;
  v149[1] = v76;
  v150 = (_OWORD *)(v124[7] + 160 * v117);
  v151 = *(_OWORD *)&v304[9];
  v153 = v303;
  v152 = *(_OWORD *)v304;
  v150[6] = v302;
  v150[7] = v153;
  v150[8] = v152;
  *(_OWORD *)((char *)v150 + 137) = v151;
  v155 = v300;
  v154 = v301;
  v156 = v299;
  v150[2] = v298;
  v150[3] = v156;
  v150[4] = v155;
  v150[5] = v154;
  v157 = v297;
  *v150 = v296;
  v150[1] = v157;
  v158 = v124[2];
  v57 = __OFADD__(v158, 1);
  v159 = v158 + 1;
  if (v57)
    goto LABEL_95;
  v124[2] = v159;
  swift_bridgeObjectRetain();
LABEL_56:
  v305 = (unint64_t)v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v160 = v69[2];
  v161 = v69[3];
  swift_bridgeObjectRetain();
  if (v160 >= v161 >> 1)
    v69 = sub_1BA6E6D30((_QWORD *)(v161 > 1), v160 + 1, 1, v69);
  v69[2] = v160 + 1;
  v162 = &v69[2 * v160];
  v162[4] = v77;
  v162[5] = v76;
  sub_1BAC68FF0((uint64_t)&v296);
  if (v75)
    goto LABEL_64;
LABEL_65:
  swift_bridgeObjectRelease();
LABEL_66:
  *(_QWORD *)&v296 = v69;
  swift_bridgeObjectRetain();
  v173 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v173);
  v174 = v296;
  v175 = *(_QWORD *)(v296 + 16);
  if (v175)
  {
    swift_bridgeObjectRetain();
    v176 = (uint64_t *)(v174 + 40);
    v177 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v178 = v305;
      if (*(_QWORD *)(v305 + 16))
      {
        v180 = *(v176 - 1);
        v179 = *v176;
        swift_bridgeObjectRetain_n();
        v181 = sub_1BA6E35A8(v180, v179);
        if ((v182 & 1) != 0)
        {
          v183 = (__int128 *)(*(_QWORD *)(v178 + 56) + 160 * v181);
          v184 = v183[1];
          v296 = *v183;
          v297 = v184;
          v185 = v183[5];
          v187 = v183[2];
          v186 = v183[3];
          v300 = v183[4];
          v301 = v185;
          v298 = v187;
          v299 = v186;
          v188 = v183[6];
          v189 = v183[7];
          v190 = v183[8];
          *(_OWORD *)&v304[9] = *(__int128 *)((char *)v183 + 137);
          v303 = v189;
          *(_OWORD *)v304 = v190;
          v302 = v188;
          sub_1BAC68F14((uint64_t)&v296);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v177 = sub_1BA6F2B98(0, v177[2] + 1, 1, v177);
          v192 = v177[2];
          v191 = v177[3];
          if (v192 >= v191 >> 1)
            v177 = sub_1BA6F2B98((_QWORD *)(v191 > 1), v192 + 1, 1, v177);
          v177[2] = v192 + 1;
          v193 = &v177[20 * v192];
          v194 = v297;
          v193[2] = v296;
          v193[3] = v194;
          v195 = v298;
          v196 = v299;
          v197 = v301;
          v193[6] = v300;
          v193[7] = v197;
          v193[4] = v195;
          v193[5] = v196;
          v198 = v302;
          v199 = v303;
          v200 = *(_OWORD *)v304;
          *(_OWORD *)((char *)v193 + 169) = *(_OWORD *)&v304[9];
          v193[9] = v199;
          v193[10] = v200;
          v193[8] = v198;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v176 += 2;
      --v175;
    }
    while (v175);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v177 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v201 = v225[7];
  if (!v201)
  {
    v201 = *(_QWORD *)(v226 + 56);
    swift_bridgeObjectRetain();
  }
  v275 = v225[8];
  v202 = v275;
  if ((~v275 & 0xF000000000000007) == 0)
  {
    v202 = *(_QWORD *)(v226 + 64);
    sub_1BA6E6C68(v202);
  }
  v203 = v225[9];
  if (!v203)
    v203 = swift_bridgeObjectRetain();
  v262 = v203;
  v264 = v202;
  v273 = v201;
  v204 = v225[10];
  v205 = v225[11];
  v268 = v205;
  v270 = v204;
  v206 = *((unsigned __int8 *)v225 + 96);
  v266 = *((_BYTE *)v225 + 96);
  if (v206 >= 0xFE)
  {
    v204 = *(_QWORD *)(v226 + 80);
    v205 = *(_QWORD *)(v226 + 88);
    LOBYTE(v206) = *(_BYTE *)(v226 + 96);
    sub_1BA6E6C54(v204, v205, v206);
  }
  v238 = v206;
  v242 = v205;
  v244 = v204;
  v207 = v225[13];
  v208 = v225[14];
  v209 = v225[18];
  v210 = v225[19];
  v211 = v225[20];
  v212 = v225[21];
  v258 = v208;
  v260 = v207;
  v254 = v225[16];
  v256 = v225[15];
  v281 = v254;
  v283 = v256;
  v250 = v209;
  v252 = v225[17];
  v278 = v252;
  v246 = v211;
  v248 = v210;
  v240 = v212;
  v236 = v225[22];
  v213 = v236;
  v214 = *((unsigned __int8 *)v225 + 184);
  v215 = *((_BYTE *)v225 + 184);
  if (v214 == 254)
  {
    v207 = *(_QWORD *)(v226 + 104);
    v208 = *(_QWORD *)(v226 + 112);
    v209 = *(_QWORD *)(v226 + 144);
    v210 = *(_QWORD *)(v226 + 152);
    v211 = *(_QWORD *)(v226 + 160);
    v212 = *(_QWORD *)(v226 + 168);
    v213 = *(_QWORD *)(v226 + 176);
    v215 = *(_BYTE *)(v226 + 184);
    v281 = *(_QWORD *)(v226 + 128);
    v283 = *(_QWORD *)(v226 + 120);
    v278 = *(_QWORD *)(v226 + 136);
    sub_1BA6E8A48(v207, v208, v283, v281, v278, v209, v210, v211, v212, v213, v215);
  }
  v232 = v210;
  v234 = v209;
  v216 = v208;
  v217 = v207;
  v218 = *((unsigned __int8 *)v225 + 185);
  if (v218 == 2)
    LOBYTE(v218) = *(_BYTE *)(v226 + 185);
  v219 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v219 + 16) = v224;
  *(_QWORD *)(v219 + 24) = v223;
  *(_QWORD *)(v219 + 32) = v222;
  *(_QWORD *)(v219 + 40) = v221;
  swift_beginAccess();
  *(_QWORD *)(v219 + 48) = v177;
  *(_QWORD *)(v219 + 56) = v273;
  *(_QWORD *)(v219 + 64) = v264;
  *(_QWORD *)(v219 + 72) = v262;
  *(_QWORD *)(v219 + 80) = v244;
  *(_QWORD *)(v219 + 88) = v242;
  *(_BYTE *)(v219 + 96) = v238;
  *(_QWORD *)(v219 + 104) = v217;
  *(_QWORD *)(v219 + 112) = v216;
  *(_QWORD *)(v219 + 120) = v283;
  *(_QWORD *)(v219 + 128) = v281;
  *(_QWORD *)(v219 + 136) = v278;
  *(_QWORD *)(v219 + 144) = v234;
  *(_QWORD *)(v219 + 152) = v232;
  *(_QWORD *)(v219 + 160) = v211;
  *(_QWORD *)(v219 + 168) = v212;
  *(_QWORD *)(v219 + 176) = v213;
  *(_BYTE *)(v219 + 184) = v215;
  *(_BYTE *)(v219 + 185) = v218;
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v275);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v270, v268, v266);
  sub_1BA6E8A48(v260, v258, v256, v254, v252, v250, v248, v246, v240, v236, v214);
  return v219;
}

uint64_t sub_1BA6F2B04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0x80) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for FormatViewNodeStyle.Selector(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) != 0)
    swift_release();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD)
    sub_1BA6F2B88(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v2);
  if (*(unsigned __int8 *)(a1 + 136) != 254)
    swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA6F2B88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0x80) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *sub_1BA6F2B98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3CFBA8, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4])
          memmove(v12, a4 + 4, 160 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6F2CC8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6F2CC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6F2DBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF638)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF638);
  }
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1BA6F2E38@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t result;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33[2];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  v4 = sub_1BB86BE54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  *(_QWORD *)&v35[0] = *a1;
  *((_QWORD *)&v35[0] + 1) = v9;
  sub_1BA7114A0();
  swift_bridgeObjectRetain();
  v10 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v30 = v9;
    v31 = v8;
    v32 = a2;
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1BA6F32E0(0, v11, 0);
    v29[1] = v10;
    v12 = (uint64_t *)(v10 + 56);
    do
    {
      v13 = *(v12 - 3);
      v14 = *(v12 - 2);
      v15 = *(v12 - 1);
      v16 = *v12;
      swift_bridgeObjectRetain();
      v33[0] = MEMORY[0x1BCCE334C](v13, v14, v15, v16);
      v33[1] = v17;
      sub_1BB86BDA0();
      v18 = sub_1BB873AEC();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      sub_1BA6F30A4(v18, v20, (uint64_t *)v35);
      swift_bridgeObjectRelease();
      v21 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA6F32E0(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v34;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BA6F32E0(v22 > 1, v23 + 1, 1);
        v21 = v34;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      v24 = v21 + 40 * v23;
      v25 = v35[0];
      v26 = v35[1];
      *(_QWORD *)(v24 + 64) = v36;
      *(_OWORD *)(v24 + 32) = v25;
      *(_OWORD *)(v24 + 48) = v26;
      v12 += 4;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v8 = v31;
    a2 = v32;
    v9 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v33[0] = v21;
  swift_bridgeObjectRetain();
  sub_1BA6F32FC(v33);
  result = swift_bridgeObjectRelease();
  v28 = v33[0];
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v28;
  return result;
}

unint64_t sub_1BA6F30A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];
  uint64_t v36;
  uint64_t v37;

  v3 = a2;
  v4 = a1;
  v6 = MEMORY[0x1E0DEE9E8];
  v36 = MEMORY[0x1E0DEE9E8];
  v37 = MEMORY[0x1E0DEE9E8];
  v35[0] = a1;
  v35[1] = a2;
  sub_1BA7114A0();
  v7 = sub_1BB873B4C();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v33 = v4;
    v34 = v3;
    swift_bridgeObjectRetain();
    v32 = v7;
    v9 = (uint64_t *)(v7 + 56);
    while (1)
    {
      v13 = *(v9 - 3);
      v14 = *(v9 - 2);
      v16 = *(v9 - 1);
      v15 = *v9;
      swift_bridgeObjectRetain();
      if (v14 >> 14 == v13 >> 14)
        break;
      if (sub_1BB873A50() == 33 && v17 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
          break;
      }
      result = sub_1BB873A38();
      if ((v21 & 1) != 0)
        result = v14;
      if (v14 >> 14 < result >> 14)
      {
        __break(1u);
        return result;
      }
      v22 = sub_1BB873A68();
      v24 = v23;
      v26 = v25;
      v28 = v27;
      swift_bridgeObjectRelease();
      v10 = MEMORY[0x1BCCE334C](v22, v24, v26, v28);
      v12 = v29;
      swift_bridgeObjectRelease();
LABEL_4:
      sub_1BA6EE5AC(v35, v10, v12);
      swift_bridgeObjectRelease();
      v9 += 4;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        v6 = v36;
        v30 = v37;
        v31 = *(_QWORD *)(v32 + 16);
        v3 = v34;
        v4 = v33;
        goto LABEL_19;
      }
    }
    v10 = MEMORY[0x1BCCE334C](v13, v14, v16, v15);
    v12 = v11;
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v31 = 0;
  v30 = v6;
LABEL_19:
  result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v3;
  a3[2] = v31;
  a3[3] = v30;
  a3[4] = v6;
  return result;
}

uint64_t sub_1BA6F32E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA7444D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA6F32FC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6F3364(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BA6F3378(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BA6F3364(uint64_t a1)
{
  return sub_1BA7444D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA6F3378(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t i;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *__dst;

  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v94 = 0;
      v95 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v97 = *(_QWORD *)(v95 + 40 * i + 16);
        v98 = v94;
        do
        {
          v99 = v95 + v98;
          if (*(_QWORD *)(v95 + v98 + 16) >= v97)
            break;
          if (!v95)
            goto LABEL_140;
          v100 = v95 + v98;
          v101 = *(_QWORD *)(v95 + v98 + 48);
          v102 = *(_OWORD *)(v95 + v98 + 64);
          v103 = *(_OWORD *)(v99 + 16);
          result = *(_QWORD *)(v99 + 32);
          v104 = *(_QWORD *)(v99 + 40);
          *(_OWORD *)(v99 + 40) = *(_OWORD *)v99;
          *(_OWORD *)(v99 + 56) = v103;
          *(_QWORD *)(v99 + 72) = result;
          *(_QWORD *)v100 = v104;
          *(_QWORD *)(v100 + 8) = v101;
          *(_QWORD *)(v99 + 16) = v97;
          v98 -= 40;
          *(_OWORD *)(v100 + 24) = v102;
        }
        while (v98 != -40);
        v94 += 40;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v114 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v105 = v12;
      v116 = v9;
      if (v13 >= 2)
      {
        v106 = *v114;
        do
        {
          v107 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v106)
            goto LABEL_144;
          v108 = v105;
          v109 = *(_QWORD *)&v105[16 * v107 + 32];
          v110 = *(_QWORD *)&v105[16 * v13 + 24];
          sub_1BB0430A0((char *)(v106 + 40 * v109), (char *)(v106 + 40 * *(_QWORD *)&v105[16 * v13 + 16]), v106 + 40 * v110, __dst);
          if (v1)
            break;
          if (v110 < v109)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_1BACAB464((uint64_t)v108);
          if (v107 >= *((_QWORD *)v108 + 2))
            goto LABEL_133;
          v111 = &v108[16 * v107 + 32];
          *(_QWORD *)v111 = v109;
          *((_QWORD *)v111 + 1) = v110;
          v112 = *((_QWORD *)v108 + 2);
          if (v13 > v112)
            goto LABEL_134;
          memmove(&v108[16 * v13 + 16], &v108[16 * v13 + 32], 16 * (v112 - v13));
          v105 = v108;
          *((_QWORD *)v108 + 2) = v112 - 1;
          v13 = v112 - 1;
        }
        while (v112 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v116 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    v116 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v115 = *a1 + 96;
  v113 = *a1 + 24;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v117 = v6;
  v118 = v3;
  v119 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 40 * v10 + 16);
      v16 = *(_QWORD *)(v11 + 40 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v115 + 40 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 5;
          v19 = v20;
          if (v16 < v15 == v18 >= v20)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = 40 * v10;
          v22 = 40 * v14;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = v11 + v22;
              v26 = *(_OWORD *)(v11 + v22);
              v27 = v11 + v21;
              v28 = *(_QWORD *)(v11 + v22 + 16);
              v29 = *(_OWORD *)(v11 + v22 + 24);
              v30 = *(_QWORD *)(v11 + v21 - 8);
              v31 = *(_OWORD *)(v11 + v21 - 24);
              *(_OWORD *)v25 = *(_OWORD *)(v11 + v21 - 40);
              *(_OWORD *)(v25 + 16) = v31;
              *(_QWORD *)(v25 + 32) = v30;
              *(_OWORD *)(v27 - 40) = v26;
              *(_QWORD *)(v27 - 24) = v28;
              *(_OWORD *)(v27 - 16) = v29;
            }
            ++v24;
            v21 -= 40;
            v22 += 40;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v32 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v32 >= v3)
      v32 = v3;
    if (v32 < v14)
      break;
    if (v10 != v32)
    {
      v33 = v113 + 40 * v10;
      do
      {
        v34 = *(_QWORD *)(v11 + 40 * v10 + 16);
        v35 = v14;
        v36 = v33;
        do
        {
          if (*(_QWORD *)(v36 - 48) >= v34)
            break;
          if (!v11)
            goto LABEL_141;
          v37 = v36 - 24;
          v38 = *(_QWORD *)(v36 - 32);
          v40 = *(_OWORD *)(v36 - 64);
          v39 = *(_OWORD *)(v36 - 48);
          *(_OWORD *)(v36 - 40) = *(_OWORD *)v36;
          v36 -= 40;
          v41 = *(_QWORD *)(v36 + 16);
          v42 = *(_QWORD *)(v36 + 24);
          *(_OWORD *)v37 = v40;
          *(_OWORD *)(v37 + 16) = v39;
          *(_QWORD *)(v37 + 32) = v38;
          *(_QWORD *)(v36 - 24) = v41;
          *(_QWORD *)(v36 - 16) = v42;
          *(_QWORD *)(v36 - 8) = v34;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v33 += 40;
      }
      while (v10 != v32);
      v10 = v32;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BACAA368(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v44 = *((_QWORD *)v12 + 2);
    v43 = *((_QWORD *)v12 + 3);
    v13 = v44 + 1;
    v11 = v119;
    if (v44 >= v43 >> 1)
    {
      v93 = sub_1BACAA368((char *)(v43 > 1), v44 + 1, 1, v12);
      v11 = v119;
      v12 = v93;
    }
    *((_QWORD *)v12 + 2) = v13;
    v45 = v12 + 32;
    v46 = &v12[16 * v44 + 32];
    *(_QWORD *)v46 = v14;
    *((_QWORD *)v46 + 1) = v10;
    if (v44)
    {
      while (1)
      {
        v47 = v13 - 1;
        if (v13 >= 4)
        {
          v52 = &v45[16 * v13];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_119;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_120;
          v59 = v13 - 2;
          v60 = &v45[16 * v13 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_122;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_125;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_129;
            v75 = v50 < v85;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v76 = *((_QWORD *)v12 + 4);
            v77 = *((_QWORD *)v12 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_77;
          }
          v49 = *((_QWORD *)v12 + 4);
          v48 = *((_QWORD *)v12 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_121;
        v59 = v13 - 2;
        v65 = &v45[16 * v13 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_124;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_127;
        if (__OFADD__(v69, v74))
          goto LABEL_128;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_83:
          if (v75)
            v47 = v59;
          goto LABEL_85;
        }
LABEL_77:
        if ((v70 & 1) != 0)
          goto LABEL_123;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_126;
        if (v81 < v69)
          goto LABEL_15;
LABEL_85:
        v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v87 = v12;
        v88 = &v45[16 * v86];
        v89 = *(_QWORD *)v88;
        v90 = &v45[16 * v47];
        v91 = *((_QWORD *)v90 + 1);
        sub_1BB0430A0((char *)(v11 + 40 * *(_QWORD *)v88), (char *)(v11 + 40 * *(_QWORD *)v90), v11 + 40 * v91, __dst);
        if (v1)
          goto LABEL_93;
        if (v91 < v89)
          goto LABEL_116;
        if (v47 > *((_QWORD *)v87 + 2))
          goto LABEL_117;
        *(_QWORD *)v88 = v89;
        *(_QWORD *)&v45[16 * v86 + 8] = v91;
        v92 = *((_QWORD *)v87 + 2);
        if (v47 >= v92)
          goto LABEL_118;
        v12 = v87;
        v13 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((_QWORD *)v87 + 2) = v92 - 1;
        v11 = v119;
        if (v92 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v117;
    v3 = v118;
    if (v10 >= v118)
    {
      v9 = v116;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_1BA6F3B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v54 = a3;
  v47 = a7;
  v48 = a8;
  v55 = a4;
  v45 = a2;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v46 = v12;
  v50 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v50 + 64);
  MEMORY[0x1E0C80A78](v12);
  v49 = (char *)v39 - v14;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v39 - v18;
  v57 = a1;
  KeyPath = swift_getKeyPath();
  swift_unownedRetainStrong();
  v21 = *(_QWORD *)(a5 + 32);
  sub_1BA71CA6C(v21);
  v52 = a5;
  swift_release();
  v56 = v21;
  v51 = a6;
  v22 = v53;
  sub_1BA717E88();
  sub_1BA719718(v21);
  if (!v22)
  {
    v41 = v13;
    v42 = v19;
    v25 = v49;
    v24 = v50;
    v43 = v17;
    v44 = KeyPath;
    v53 = v16;
    v26 = v52;
    swift_unownedRetainStrong();
    swift_beginAccess();
    v27 = *(_QWORD *)(v26 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    v28 = v51;
    swift_retain();
    v29 = sub_1BB67D4D4(v27, v28);
    v40 = a9;
    swift_bridgeObjectRelease();
    swift_release();
    v30 = v24;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v39[1] = v29;
    v32 = v46;
    v31(v25, v45, v46);
    v33 = (*(unsigned __int8 *)(v30 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v34 = v28;
    v35 = (char *)swift_allocObject();
    *((_QWORD *)v35 + 2) = v47;
    *((_QWORD *)v35 + 3) = v34;
    v36 = v54;
    *((_QWORD *)v35 + 4) = v52;
    *((_QWORD *)v35 + 5) = v36;
    v37 = v48;
    *((_QWORD *)v35 + 6) = v55;
    *((_QWORD *)v35 + 7) = v37;
    *((_QWORD *)v35 + 8) = v40;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v35[v33], v25, v32);
    swift_retain();
    swift_retain();
    swift_unownedRetain();
    sub_1BA7099D4();
    sub_1BA50AD30(&qword_1ED3C4560, 255, (uint64_t (*)(uint64_t))sub_1BA7099D4, MEMORY[0x1E0DB5B88]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v38 = v42;
    sub_1BB86D534();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v53);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

void sub_1BA6F3ED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA7399D0();
    v7 = a3(a1, &type metadata for FormatLayout, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA6F3F34@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D18, (uint64_t)qword_1ED476B60, a1);
}

uint64_t sub_1BA6F3F50(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA6F3F88()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1ED3A3AD0)
  {
    sub_1BB86EB84();
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1ED3A3AD0);
  }
}

uint64_t sub_1BA6F4014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1BA6E35A8(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1BB4C1F6C();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA7AAAE4(v19, a6 & 1);
  v25 = sub_1BA6E35A8(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BA6F41A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9F10)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B6FC0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9F10);
  }
}

__n128 __swift_memcpy121_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(__int128 *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

void sub_1BA6F4230()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9F60)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&unk_1ED3B8000);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9F60);
  }
}

uint64_t sub_1BA6F4294(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[4];
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v3 = (uint64_t)v1;
  v72 = *v1;
  swift_beginAccess();
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v8 = *(_QWORD *)(v3 + 40);
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v73 = v7;
  if (!v10)
  {
    v71 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = swift_bridgeObjectRetain();
    v13 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v11 = sub_1BA72BED4(v74, v10);
  if (!v2)
  {
    v14 = v11;
    v71 = v6;
    swift_release();
    v15 = swift_allocObject();
    *(double *)(v15 + 16) = v14;
    sub_1BA790480();
    v12 = swift_allocObject();
    v13 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v12 + 32) = v15;
    *(_BYTE *)(v12 + 40) = 0;
LABEL_6:
    v16 = *(_QWORD *)(v3 + 64);
    if ((~v16 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BA6F5534(a1, v16);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E6CD8(v16);
LABEL_19:
        swift_bridgeObjectRelease();
        return v3;
      }
      v12 = sub_1BA6E6CD8(v16);
      v16 = v74;
    }
    if (*(_QWORD *)(v3 + 72))
    {
      v74 = a1;
      MEMORY[0x1E0C80A78](v12);
      v50[2] = &v74;
      v18 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)v50, v17);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E6CD8(v16);
        swift_bridgeObjectRelease();
        return v3;
      }
      v53 = v16;
      v54 = v5;
      v52 = a1;
      v55 = v8;
      v56 = v9;
      v59 = v13;
    }
    else
    {
      v53 = v16;
      v54 = v5;
      v52 = a1;
      v55 = v8;
      v56 = v9;
      v59 = v13;
      v18 = 0;
    }
    v60 = v18;
    v20 = *(_QWORD *)(v3 + 80);
    v19 = *(_QWORD *)(v3 + 88);
    v21 = *(unsigned __int8 *)(v3 + 96);
    v22 = *(_QWORD *)(v3 + 104);
    v67 = *(_QWORD *)(v3 + 112);
    v24 = *(_QWORD *)(v3 + 120);
    v23 = *(_QWORD *)(v3 + 128);
    v25 = *(_QWORD *)(v3 + 136);
    v26 = *(_QWORD *)(v3 + 144);
    v27 = *(_QWORD *)(v3 + 160);
    v28 = *(_QWORD *)(v3 + 168);
    v29 = *(_QWORD *)(v3 + 176);
    v30 = *(unsigned __int8 *)(v3 + 184);
    v69 = *(_QWORD *)(v3 + 152);
    v70 = v27;
    v68 = v26;
    v65 = v24;
    v66 = v23;
    v64 = v22;
    v63 = v28;
    v62 = v29;
    v61 = v30;
    v58 = v19;
    v57 = v20;
    if (v30 == 254)
    {
      v52 = v25;
      v31 = v21;
      sub_1BA6E6C54(v20, v19, v21);
      v32 = v67;
    }
    else
    {
      v51 = v21;
      v33 = v28;
      v34 = v29;
      v35 = v30;
      sub_1BA6E6C54(v20, v19, v21);
      sub_1BA6E8A48(v22, v67, v24, v23, v25, v68, v69, v70, v33, v34, v35);
      sub_1BA742954(v52, v25);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A78(v64, v67, v65, v66, v25, v68, v69, v70, v63, v62, v61);
        sub_1BA6E6CC4(v57, v58, v51);
        sub_1BA6E6CD8(v53);
        goto LABEL_19;
      }
      v37 = v67;
      sub_1BA6E8A78(v64, v67, v65, v66, v25, v68, v69, v70, v63, v62, v61);
      v52 = v74;
      v32 = v37;
      v31 = v51;
    }
    v38 = v56;
    v39 = v55;
    v40 = v54;
    v41 = v53;
    v42 = *(_BYTE *)(v3 + 185);
    v3 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v3 + 16) = v71;
    *(_QWORD *)(v3 + 24) = v40;
    *(_QWORD *)(v3 + 32) = v73;
    *(_QWORD *)(v3 + 40) = v39;
    swift_beginAccess();
    v43 = v59;
    *(_QWORD *)(v3 + 48) = v38;
    *(_QWORD *)(v3 + 56) = v43;
    v44 = v60;
    *(_QWORD *)(v3 + 64) = v41;
    *(_QWORD *)(v3 + 72) = v44;
    v45 = v58;
    *(_QWORD *)(v3 + 80) = v57;
    *(_QWORD *)(v3 + 88) = v45;
    *(_BYTE *)(v3 + 96) = v31;
    *(_QWORD *)(v3 + 104) = v64;
    *(_QWORD *)(v3 + 112) = v32;
    v46 = v66;
    *(_QWORD *)(v3 + 120) = v65;
    *(_QWORD *)(v3 + 128) = v46;
    v47 = v68;
    *(_QWORD *)(v3 + 136) = v52;
    *(_QWORD *)(v3 + 144) = v47;
    v48 = v70;
    *(_QWORD *)(v3 + 152) = v69;
    *(_QWORD *)(v3 + 160) = v48;
    v49 = v62;
    *(_QWORD *)(v3 + 168) = v63;
    *(_QWORD *)(v3 + 176) = v49;
    *(_BYTE *)(v3 + 184) = v61;
    *(_BYTE *)(v3 + 185) = v42;
    return v3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1BA6F4888(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  unint64_t v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t i;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *j;
  __int128 *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t result;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  void *v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _OWORD v115[2];
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _OWORD v125[2];
  uint64_t v126;

  v105 = a1;
  v106 = 0;
  v126 = *MEMORY[0x1E0C80C00];
  v99 = *v1;
  swift_beginAccess();
  v94 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v101 = sub_1BA6F2B98(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v95 = sub_1BA6F4FF0(0, v3, 0, v4);
  v97 = *(_QWORD *)(v2 + 16);
  v98 = v2;
  if (!v97)
  {
LABEL_31:
    sub_1BA6F523C(0);
    v55 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(v55 + 16);
    if (v56)
    {
      v57 = v56 - 1;
      for (i = 32; ; i += 168)
      {
        v59 = *(_OWORD *)(v55 + i);
        v60 = *(_OWORD *)(v55 + i + 32);
        v108 = *(_OWORD *)(v55 + i + 16);
        v109 = v60;
        v107 = v59;
        v61 = *(_OWORD *)(v55 + i + 48);
        v62 = *(_OWORD *)(v55 + i + 64);
        v63 = *(_OWORD *)(v55 + i + 96);
        v112 = *(_OWORD *)(v55 + i + 80);
        v113 = v63;
        v110 = v61;
        v111 = v62;
        v64 = *(_OWORD *)(v55 + i + 112);
        v65 = *(_OWORD *)(v55 + i + 128);
        v66 = *(_OWORD *)(v55 + i + 144);
        v116 = *(_QWORD *)(v55 + i + 160);
        v115[0] = v65;
        v115[1] = v66;
        v114 = v64;
        sub_1BAC68F14((uint64_t)&v107);
        v67 = v101;
        v69 = v101[2];
        v68 = v101[3];
        if (v69 >= v68 >> 1)
          v67 = sub_1BA6F2B98((_QWORD *)(v68 > 1), v69 + 1, 1, v101);
        v67[2] = v69 + 1;
        v101 = v67;
        v70 = &v67[20 * v69];
        v71 = v108;
        v70[2] = v107;
        v70[3] = v71;
        v72 = v109;
        v73 = v110;
        v74 = v112;
        v70[6] = v111;
        v70[7] = v74;
        v70[4] = v72;
        v70[5] = v73;
        v75 = v113;
        v76 = v114;
        v77 = v115[0];
        *(_OWORD *)((char *)v70 + 169) = *(_OWORD *)((char *)v115 + 9);
        v70[9] = v76;
        v70[10] = v77;
        v70[8] = v75;
        if (!v57)
          break;
        --v57;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = v101;
    v79 = v101[2];
    if (v79)
    {
      v80 = (uint64_t)v94;
      swift_retain();
      swift_bridgeObjectRetain();
      v81 = v79 - 1;
      v82 = v80;
      v83 = 4;
      for (j = v78; ; j = v101)
      {
        v85 = (__int128 *)&j[v83];
        v86 = v85[1];
        v107 = *v85;
        v108 = v86;
        v87 = v85[2];
        v88 = v85[3];
        v89 = v85[5];
        v111 = v85[4];
        v112 = v89;
        v109 = v87;
        v110 = v88;
        v90 = v85[6];
        v91 = v85[7];
        v92 = v85[8];
        *(_OWORD *)((char *)v115 + 9) = *(__int128 *)((char *)v85 + 137);
        v115[0] = v92;
        v113 = v90;
        v114 = v91;
        v123 = v90;
        v124 = v91;
        v125[0] = v92;
        *(_OWORD *)((char *)v125 + 9) = *(_OWORD *)((char *)v115 + 9);
        v119 = v109;
        v120 = v110;
        v121 = v111;
        v122 = v89;
        v117 = v107;
        v118 = v108;
        swift_allocObject();
        sub_1BAC68F14((uint64_t)&v107);
        v82 = sub_1BA6F5AAC(v82, &v117);
        swift_release();
        if (!v81)
          break;
        --v81;
        v83 += 20;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v82 = (uint64_t)v94;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v82;
  }
  v96 = v2 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
LABEL_3:
  v100 = v5;
  v6 = (__int128 *)(v96 + 160 * v5);
  v7 = v6[1];
  v117 = *v6;
  v118 = v7;
  v8 = v6[2];
  v9 = v6[3];
  v10 = v6[5];
  v121 = v6[4];
  v122 = v10;
  v119 = v8;
  v120 = v9;
  v11 = v6[6];
  v12 = v6[7];
  v13 = v6[8];
  *(_OWORD *)((char *)v125 + 9) = *(__int128 *)((char *)v6 + 137);
  v124 = v12;
  v125[0] = v13;
  v123 = v11;
  v14 = v117;
  sub_1BAC68F14((uint64_t)&v117);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v107 = v14;
  swift_bridgeObjectRetain();
  v15 = sub_1BA6E583C((uint64_t *)&v107);
  swift_bridgeObjectRelease();
  v103 = *(_QWORD *)(v15 + 16);
  if (!v103)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v16 = 0;
  v17 = (uint64_t *)(v15 + 64);
  v18 = v15;
  while (1)
  {
    if (v16 >= *(_QWORD *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    v102 = *(v17 - 2);
    v19 = *(v17 - 1);
    v20 = *v17;
    v21 = *(_BYTE *)(v19 + 32);
    v22 = v21 & 0x3F;
    v23 = (unint64_t)((1 << v21) + 63) >> 6;
    v24 = 8 * v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v22 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v26 = (char *)swift_slowAlloc();
    bzero(v26, v24);
    v30 = v23;
    v28 = v106;
    v29 = sub_1BA6EB5B4((uint64_t)v26, v30, v19, v105);
    swift_bridgeObjectRelease();
    if (v28)
      goto LABEL_47;
    v106 = 0;
    MEMORY[0x1BCCE5C38](v26, -1, -1);
LABEL_15:
    v31 = sub_1BA6EB330(v29, v19);
    swift_release();
    if ((v31 & 1) != 0 && (sub_1BA6EBD20(v105, v20) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v32 = v102;
      if (v102 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC68F14((uint64_t)&v117);
        v44 = v101;
        v46 = v101[2];
        v45 = v101[3];
        if (v46 >= v45 >> 1)
          v44 = sub_1BA6F2B98((_QWORD *)(v45 > 1), v46 + 1, 1, v101);
        v44[2] = v46 + 1;
        v101 = v44;
        v47 = &v44[20 * v46];
        v48 = v118;
        v47[2] = v117;
        v47[3] = v48;
        v49 = v119;
        v50 = v120;
        v51 = v122;
        v47[6] = v121;
        v47[7] = v51;
        v47[4] = v49;
        v47[5] = v50;
        v52 = v123;
        v53 = v124;
        v54 = v125[0];
        *(_OWORD *)((char *)v47 + 169) = *(_OWORD *)((char *)v125 + 9);
        v47[9] = v53;
        v47[10] = v54;
        v47[8] = v52;
      }
      else
      {
        sub_1BAC68F14((uint64_t)&v117);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = v95;
        v35 = v95[2];
        v34 = v95[3];
        if (v35 >= v34 >> 1)
          v33 = sub_1BA6F4FF0((_QWORD *)(v34 > 1), v35 + 1, 1, v95);
        v111 = v121;
        v112 = v122;
        v109 = v119;
        v110 = v120;
        *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)((char *)v125 + 9);
        v115[0] = v125[0];
        v113 = v123;
        v114 = v124;
        v107 = v117;
        v108 = v118;
        v33[2] = v35 + 1;
        v95 = v33;
        v36 = &v33[21 * v35];
        v37 = v108;
        *((_OWORD *)v36 + 2) = v107;
        *((_OWORD *)v36 + 3) = v37;
        v38 = v109;
        v39 = v110;
        v40 = v112;
        *((_OWORD *)v36 + 6) = v111;
        *((_OWORD *)v36 + 7) = v40;
        *((_OWORD *)v36 + 4) = v38;
        *((_OWORD *)v36 + 5) = v39;
        v41 = v113;
        v42 = v114;
        v43 = v115[1];
        *((_OWORD *)v36 + 10) = v115[0];
        *((_OWORD *)v36 + 11) = v43;
        *((_OWORD *)v36 + 8) = v41;
        *((_OWORD *)v36 + 9) = v42;
        v36[24] = v32;
      }
LABEL_26:
      sub_1BAC68FF0((uint64_t)&v117);
LABEL_27:
      v5 = v100 + 1;
      if (v100 + 1 == v97)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v5 >= *(_QWORD *)(v98 + 16))
LABEL_45:
        __break(1u);
      goto LABEL_3;
    }
    ++v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 += 5;
    if (v103 == v16)
    {
      swift_bridgeObjectRelease();
      sub_1BAC68FF0((uint64_t)&v117);
      goto LABEL_27;
    }
  }
  v104 = &v94;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v26 = (char *)&v94 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v26, v24);
  v27 = v23;
  v28 = v106;
  v29 = sub_1BA6EB5B4((uint64_t)v26, v27, v19, v105);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v106 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  result = MEMORY[0x1BCCE5C38](v26, -1, -1);
  __break(1u);
  return result;
}

_QWORD *sub_1BA6F4FF0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA6F5A38();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 168);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[21 * v8 + 4])
          memmove(v12, a4 + 4, 168 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6F5118(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA6F5118(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 168 * a1 + 32;
    v6 = a3 + 168 * v4;
    if (v5 >= v6 || v5 + 168 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3CC690, (uint64_t (*)(void))sub_1BA82DCC4, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA6F523C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3CC690)
  {
    v2 = sub_1BA82DCC4();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3CC690);
  }
}

uint64_t sub_1BA6F5294(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (*v5++)
  {
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_QWORD *)(v7 + 72) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1BA6F5534(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1BA6F5588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = swift_allocObject();
  sub_1BA742954(v4, v5);
  if (v2)
    swift_deallocUninitializedObject();
  else
    *v3 = v6;
}

void sub_1BA6F5A38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFC30)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3CC690, (uint64_t (*)(void))sub_1BA82DCC4, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFC30);
  }
}

uint64_t sub_1BA6F5AAC(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  unsigned __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[25];

  v4 = a2[7];
  v56 = a2[6];
  v57 = v4;
  *(_OWORD *)v58 = a2[8];
  *(_OWORD *)&v58[9] = *(__int128 *)((char *)a2 + 137);
  v5 = a2[3];
  v52 = a2[2];
  v53 = v5;
  v6 = a2[5];
  v54 = a2[4];
  v55 = v6;
  v7 = a2[1];
  v50 = *a2;
  v51 = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)(v2 + 24) = v9;
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 40) = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v11;
  v12 = *(_QWORD *)&v58[16];
  if (!*(_QWORD *)&v58[16])
    v12 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 56) = v12;
  v49 = v51;
  v13 = v51;
  if ((~(_QWORD)v51 & 0xF000000000000007) == 0)
  {
    v13 = *(_QWORD *)(a1 + 64);
    sub_1BA6E6C68(v13);
  }
  *(_QWORD *)(v2 + 64) = v13;
  v14 = *((_QWORD *)&v51 + 1);
  if (!*((_QWORD *)&v51 + 1))
    v14 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 72) = v14;
  v15 = *((_QWORD *)&v52 + 1);
  v17 = v52;
  v47 = v17 >> 64;
  v16 = v17;
  v48 = v52;
  v18 = v53;
  v46 = v53;
  if (v53 >= 0xFEu)
  {
    v16 = *(_QWORD *)(a1 + 80);
    v15 = *(_QWORD *)(a1 + 88);
    v18 = *(_BYTE *)(a1 + 96);
    sub_1BA6E6C54(v16, v15, v18);
  }
  *(_QWORD *)(v2 + 80) = v16;
  *(_QWORD *)(v2 + 88) = v15;
  v20 = *((_QWORD *)&v54 + 1);
  v19 = v54;
  v22 = *((_QWORD *)&v55 + 1);
  v21 = v55;
  v25 = *((_QWORD *)&v56 + 1);
  v24 = v56;
  v23 = v57;
  v44 = v54;
  v45 = *((_QWORD *)&v53 + 1);
  v26 = *((_QWORD *)&v53 + 1);
  v42 = v55;
  v43 = *((_QWORD *)&v54 + 1);
  v40 = v56;
  v41 = *((_QWORD *)&v55 + 1);
  v38 = v57;
  v39 = *((_QWORD *)&v56 + 1);
  v28 = *((_QWORD *)&v57 + 1);
  v27 = *(_QWORD *)v58;
  v36 = *(_QWORD *)v58;
  v37 = *((_QWORD *)&v57 + 1);
  *(_BYTE *)(v2 + 96) = v18;
  v29 = v58[8];
  v35 = v58[8];
  if (v58[8] == 254)
  {
    v33 = *(_QWORD *)(a1 + 112);
    v34 = *(_QWORD *)(a1 + 104);
    v21 = *(_QWORD *)(a1 + 128);
    v32 = *(_QWORD *)(a1 + 120);
    v22 = *(_QWORD *)(a1 + 136);
    v24 = *(_QWORD *)(a1 + 144);
    v25 = *(_QWORD *)(a1 + 152);
    v23 = *(_QWORD *)(a1 + 160);
    v28 = *(_QWORD *)(a1 + 168);
    v27 = *(_QWORD *)(a1 + 176);
    v29 = *(_BYTE *)(a1 + 184);
    sub_1BA6E8A48(v34, v33, v32, v21, v22, v24, v25, v23, v28, v27, v29);
    v20 = v32;
    v19 = v33;
    v26 = v34;
  }
  *(_QWORD *)(v2 + 104) = v26;
  *(_QWORD *)(v2 + 112) = v19;
  *(_QWORD *)(v2 + 120) = v20;
  *(_QWORD *)(v2 + 128) = v21;
  *(_QWORD *)(v2 + 136) = v22;
  *(_QWORD *)(v2 + 144) = v24;
  *(_QWORD *)(v2 + 152) = v25;
  *(_QWORD *)(v2 + 160) = v23;
  *(_QWORD *)(v2 + 168) = v28;
  *(_QWORD *)(v2 + 176) = v27;
  *(_BYTE *)(v2 + 184) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v49);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v48, v47, v46);
  sub_1BA6E8A48(v45, v44, v43, v42, v41, v40, v39, v38, v37, v36, v35);
  sub_1BAC68FF0((uint64_t)&v50);
  v30 = v58[24];
  if (v58[24] == 2)
    v30 = *(_BYTE *)(a1 + 185);
  *(_BYTE *)(v2 + 185) = v30;
  return v2;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA6F5D74(unint64_t result)
{
  unint64_t v1;

  v1 = result >> 62;
  if (!(result >> 62) || (_DWORD)v1 == 2 || (_DWORD)v1 == 1)
    return swift_release();
  return result;
}

uint64_t sub_1BA6F5D98@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D58, (uint64_t)qword_1ED476C08, a1);
}

uint64_t FormatOptionExpression.Exists.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[4];
  int v29;
  _BYTE *v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v30 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v32 = &v28[-v6];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v28[-v8];
  sub_1BAE774BC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)v1;
  v14 = *(_QWORD *)(v1 + 8);
  v31 = *(unsigned __int8 *)(v1 + 16);
  v29 = *(unsigned __int8 *)(v1 + 17);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE773B4();
  v18 = sub_1BA4A2870(&qword_1ED3D1040, (uint64_t (*)(uint64_t))sub_1BAE773B4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionExpression.Exists, v19, v15, (uint64_t)&type metadata for FormatOptionExpression.Exists, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  v20 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = v33;
  sub_1BAD164A4(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v25 = (uint64_t)v32;
    v23(v32, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BAD165FC(v31, 1, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    v26 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BAD16758(v29, 2, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE774BC);
}

unint64_t sub_1BA6F60E4()
{
  unint64_t result;

  result = qword_1ED39CC38;
  if (!qword_1ED39CC38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionType, &type metadata for FormatOptionType);
    atomic_store(result, (unint64_t *)&qword_1ED39CC38);
  }
  return result;
}

unint64_t sub_1BA6F6128()
{
  unint64_t result;

  result = qword_1ED39B840;
  if (!qword_1ED39B840)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionExpression.Exists.Operator, &type metadata for FormatOptionExpression.Exists.Operator);
    atomic_store(result, (unint64_t *)&qword_1ED39B840);
  }
  return result;
}

void sub_1BA6F616C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9CA0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B0A08);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9CA0);
  }
}

uint64_t FormatHBoxNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  __int128 v65;
  char v66;
  __int128 v67;
  char v68;
  unint64_t v69;
  __int128 v70;
  char v71;
  char v72;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v58 = (char *)&v57 - v8;
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v57 - v10;
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v62 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v57 - v19;
  sub_1BAE98358(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1BAE98448();
  v27 = sub_1BA4A2870(&qword_1ED3D1550, (uint64_t (*)(uint64_t))sub_1BAE98448, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v28, v24, v4, v26, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v23, v27, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v30 = v2[2];
  v29 = v2[3];
  v61 = v2;
  v31 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v31 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v34(v20, v33, v32);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v64 = v23;
  v35 = v63;
  sub_1BAD265E8(v30, v29, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE56734, (uint64_t (*)(uint64_t))sub_1BAE983D0, &qword_1ED3AF2A0);
  if (v35)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v64;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34(v17, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    v34(v17, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    v38 = v61;
    swift_beginAccess();
    v39 = v38[8];
    v40 = (uint64_t)v62;
    v41 = v33;
    v63 = v34;
    v34(v62, v33, v32);
    swift_storeEnumTagMultiPayload();
    if (((v39 >> 59) & 0x1E | (v39 >> 2) & 1) == 0x16 && v39 == 0xB000000000000008)
    {
      v36 = (uint64_t)v64;
    }
    else
    {
      sub_1BA71CA6C(v39);
      v36 = (uint64_t)v64;
      if ((sub_1BAE56734(v40, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v70 = xmmword_1BB8D2D70;
        v71 = 0;
        v69 = v39;
        sub_1BAE983D0();
        sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
        sub_1BA6371A0();
        sub_1BB874464();
        v36 = (uint64_t)v64;
        v38 = v61;
      }
      v40 = (uint64_t)v62;
    }
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v39);
    v43 = v38[9];
    v42 = v38[10];
    v44 = qword_1ED3C6D00;
    swift_bridgeObjectRetain();
    v45 = v63;
    if (v44 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476B48);
    v47 = (uint64_t)v60;
    v45(v60, v46, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6C1C8(v43, v42, 4, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v48 = (uint64_t)v59;
    v45(v59, v41, v32);
    swift_storeEnumTagMultiPayload();
    v49 = swift_bridgeObjectRetain();
    sub_1BAD2DF84(v49, 5, 0, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = v61;
    swift_beginAccess();
    v51 = v50[12];
    v52 = (uint64_t)v58;
    v45(v58, v41, v32);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE56734(v52, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v67 = xmmword_1BB8D2DA0;
      v68 = 0;
      *(_QWORD *)&v65 = v51;
      sub_1BAE983D0();
      sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
      v52 = (uint64_t)v58;
    }
    sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v61;
    swift_beginAccess();
    v54 = *((_BYTE *)v53 + 104);
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v55 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476BC0);
    v56 = (uint64_t)v57;
    v45(v57, v55, v32);
    swift_storeEnumTagMultiPayload();
    if ((v54 & 1) != 0 && (sub_1BAE56734(v56, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v65 = xmmword_1BB8D2DB0;
      v66 = 0;
      v72 = 1;
      sub_1BAE983D0();
      sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BAE98358);
}

uint64_t FormatVBoxNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  __int128 v65;
  char v66;
  __int128 v67;
  char v68;
  unint64_t v69;
  __int128 v70;
  char v71;
  char v72;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v58 = (char *)&v57 - v8;
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v57 - v10;
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v62 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v57 - v19;
  sub_1BAECA534(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1BAECA624();
  v27 = sub_1BA4A2870(&qword_1ED3D15A0, (uint64_t (*)(uint64_t))sub_1BAECA624, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v28, v24, v4, v26, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v23, v27, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v30 = v2[2];
  v29 = v2[3];
  v61 = v2;
  v31 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v31 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v34(v20, v33, v32);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v64 = v23;
  v35 = v63;
  sub_1BAD265E8(v30, v29, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE55DAC, (uint64_t (*)(uint64_t))sub_1BAECA5AC, &qword_1ED3AF300);
  if (v35)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v64;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34(v17, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    v34(v17, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    v38 = v61;
    swift_beginAccess();
    v39 = v38[8];
    v40 = (uint64_t)v62;
    v41 = v33;
    v63 = v34;
    v34(v62, v33, v32);
    swift_storeEnumTagMultiPayload();
    if (((v39 >> 59) & 0x1E | (v39 >> 2) & 1) == 0x16 && v39 == 0xB000000000000008)
    {
      v36 = (uint64_t)v64;
    }
    else
    {
      sub_1BA71CA6C(v39);
      v36 = (uint64_t)v64;
      if ((sub_1BAE55DAC(v40, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v70 = xmmword_1BB8D2D70;
        v71 = 0;
        v69 = v39;
        sub_1BAECA5AC();
        sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
        sub_1BA6371A0();
        sub_1BB874464();
        v36 = (uint64_t)v64;
        v38 = v61;
      }
      v40 = (uint64_t)v62;
    }
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v39);
    v43 = v38[9];
    v42 = v38[10];
    v44 = qword_1ED3C6D00;
    swift_bridgeObjectRetain();
    v45 = v63;
    if (v44 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476B48);
    v47 = (uint64_t)v60;
    v45(v60, v46, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6A684(v43, v42, 4, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v48 = (uint64_t)v59;
    v45(v59, v41, v32);
    swift_storeEnumTagMultiPayload();
    v49 = swift_bridgeObjectRetain();
    sub_1BAD2D604(v49, 5, 0, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = v61;
    swift_beginAccess();
    v51 = v50[12];
    v52 = (uint64_t)v58;
    v45(v58, v41, v32);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE55DAC(v52, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v67 = xmmword_1BB8D2DA0;
      v68 = 0;
      *(_QWORD *)&v65 = v51;
      sub_1BAECA5AC();
      sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
      v52 = (uint64_t)v58;
    }
    sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v61;
    swift_beginAccess();
    v54 = *((_BYTE *)v53 + 104);
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v55 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476BC0);
    v56 = (uint64_t)v57;
    v45(v57, v55, v32);
    swift_storeEnumTagMultiPayload();
    if ((v54 & 1) != 0 && (sub_1BAE55DAC(v56, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v65 = xmmword_1BB8D2DB0;
      v66 = 0;
      v72 = 1;
      sub_1BAECA5AC();
      sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BAECA534);
}

uint64_t sub_1BA6F7430(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA6F746C + 4 * byte_1BB8AE52C[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA6F746C()
{
  return 1701667182;
}

uint64_t sub_1BA6F747C()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA6F749C()
{
  return 0x6465726975716572;
}

uint64_t sub_1BA6F74B4()
{
  return 0x746C7561666564;
}

uint64_t sub_1BA6F74CC()
{
  return 0x7461636572706564;
}

uint64_t sub_1BA6F74E8()
{
  return 0x72656C69706D6F63;
}

unint64_t sub_1BA6F750C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA6F7528()
{
  return 1885433183;
}

uint64_t FormatType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  _BYTE v31[56];
  uint64_t v32;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v28 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  sub_1BAE7B19C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  sub_1BA6F788C((uint64_t)(v1 + 4), (uint64_t)v31);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE7B094();
  v18 = sub_1BA4A2870(&qword_1ED3D1480, (uint64_t (*)(uint64_t))sub_1BAE7B094, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatType, v19, v15, (uint64_t)&type metadata for FormatType, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v18, (uint64_t)&off_1E734BD80);
  v20 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = v32;
  sub_1BAD245F0(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v25 = (uint64_t)v29;
    v23(v29, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    v26 = (uint64_t)v30;
    v23(v30, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BA6F7850((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA709DE8);
    sub_1BAD24748((uint64_t)v31, 2, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    sub_1BA6F7850((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6C0C20);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE7B19C);
}

uint64_t sub_1BA6F7850(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_1BA6F788C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

unint64_t sub_1BA6F78E4()
{
  unint64_t result;

  result = qword_1ED39B698;
  if (!qword_1ED39B698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition, &type metadata for FormatTypeDefinition);
    atomic_store(result, (unint64_t *)&qword_1ED39B698);
  }
  return result;
}

void sub_1BA6F7928()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3C47C0)
  {
    sub_1BB86C67C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81FD38();
    sub_1BA81FE04();
    sub_1BA81FDC0();
    sub_1BA81FCB0();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, v0, MEMORY[0x1E0CB0038]);
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, v0, MEMORY[0x1E0CB0010]);
    v1 = sub_1BB86E53C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3C47C0);
  }
}

void sub_1BA6F7A14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBAA0)
  {
    type metadata accessor for FormatBlock();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBAA0);
  }
}

void sub_1BA6F7A88(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA52E378(255, a3, a4);
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    v5 = sub_1BB872F4C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BA6F7B10@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D40, (uint64_t)qword_1ED476BC0, a1);
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t destroy for FormatURL(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for FormatAbsoluteURL();
  }
  return swift_bridgeObjectRelease();
}

void sub_1BA6F7BEC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C4958, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA6F7C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v8 = type metadata accessor for FormatOption();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA709CA4(0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(_QWORD *)(a3 + 16);
  if (v38)
  {
    v36 = v10;
    v15 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v16 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain();
    v17 = 0;
    v41 = a3;
    v40 = v14;
    v34 = v15;
    v35 = v16;
    while (1)
    {
      v39 = v17;
      sub_1BA4C2DD8(v15 + v16 * v17, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA709CA4);
      v18 = (_QWORD *)*v14;
      swift_beginAccess();
      v19 = v18[8];
      v20 = *(_QWORD *)(v19 + 16);
      v42 = v18;
      if (v20)
        break;
      swift_retain();
      v24 = (uint64_t)v36;
LABEL_9:
      swift_beginAccess();
      v25 = v18[9];
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v43 = a1;
        v27 = v37;
        v28 = v25 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        v33[1] = v25;
        swift_bridgeObjectRetain_n();
        v29 = *(_QWORD *)(v27 + 72);
        while (1)
        {
          sub_1BA4C2DD8(v28, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v50 = *(_QWORD *)(v24 + 16);
          v30 = *(_OWORD *)(a2 + 48);
          v46 = *(_OWORD *)(a2 + 32);
          v47 = v30;
          v48 = *(_OWORD *)(a2 + 64);
          v49 = *(_QWORD *)(a2 + 80);
          v31 = *(_OWORD *)(a2 + 16);
          v44 = *(_OWORD *)a2;
          v45 = v31;
          swift_retain();
          sub_1BA711C44();
          if (v4)
            break;
          swift_release();
          sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v28 += v29;
          if (!--v26)
          {
            swift_bridgeObjectRelease_n();
            a1 = v43;
            v18 = v42;
            goto LABEL_14;
          }
        }
        swift_release();
        sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_19;
      }
LABEL_14:
      swift_beginAccess();
      v32 = v18[11];
      swift_bridgeObjectRetain();
      sub_1BA6FEDF0(a1, a2, v32);
      swift_release();
      swift_bridgeObjectRelease();
      v14 = v40;
      v16 = v35;
      if (v4)
        goto LABEL_20;
      v17 = v39 + 1;
      sub_1BA4A2E80((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1BA709CA4);
      v15 = v34;
      if (v17 == v38)
        goto LABEL_21;
    }
    swift_bridgeObjectRetain_n();
    swift_retain();
    v43 = v19;
    v21 = v19 + 48;
    while (1)
    {
      v50 = *(_QWORD *)(v21 - 16);
      v22 = *(_OWORD *)(a2 + 48);
      v46 = *(_OWORD *)(a2 + 32);
      v47 = v22;
      v48 = *(_OWORD *)(a2 + 64);
      v49 = *(_QWORD *)(a2 + 80);
      v23 = *(_OWORD *)(a2 + 16);
      v44 = *(_OWORD *)a2;
      v45 = v23;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v4)
        break;
      v21 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v20)
      {
        swift_bridgeObjectRelease_n();
        v24 = (uint64_t)v36;
        v18 = v42;
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_19:
    v14 = v40;
LABEL_20:
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA709CA4);
LABEL_21:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA6F8088(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v34 = *a2;
  v32 = *((_BYTE *)a2 + 9);
  v33 = *((_BYTE *)a2 + 8);
  v30 = a2[3];
  v31 = a2[2];
  v28 = a2[5];
  v29 = a2[4];
  v26 = a2[7];
  v27 = a2[6];
  v4 = a2[9];
  v25 = a2[8];
  v5 = v2[4];
  v6 = a2[10];
  if (v5 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v7 = result;
    if (result)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v9 = 0;
      v10 = v5 & 0xC000000000000001;
      v22 = v5 + 32;
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
      v24 = v5;
      v21 = v7;
      v19 = v2;
      v20 = v5 & 0xC000000000000001;
      while (1)
      {
        if (v10)
        {
          v11 = MEMORY[0x1BCCE4630](v9, v5);
          v12 = __OFADD__(v9++, 1);
          if (v12)
            goto LABEL_19;
        }
        else
        {
          if (v9 >= *(_QWORD *)(v23 + 16))
          {
            __break(1u);
            return result;
          }
          v11 = *(_QWORD *)(v22 + 8 * v9);
          swift_retain();
          v12 = __OFADD__(v9++, 1);
          if (v12)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v36 = *(_QWORD *)(v11 + 16);
        v37 = v34;
        v38 = v33;
        v39 = v32;
        v40 = v31;
        v41 = v30;
        v42 = v29;
        v43 = v28;
        v44 = v27;
        v45 = v26;
        v46 = v25;
        v47 = v4;
        v48 = v6;
        sub_1BA6F9BF4();
        if (v3)
        {
          swift_bridgeObjectRelease();
          return swift_release();
        }
        swift_beginAccess();
        v2 = *(uint64_t **)(v11 + 24);
        v13 = v2[2];
        if (v13)
        {
          swift_bridgeObjectRetain_n();
          v14 = v2 + 6;
          do
          {
            v36 = *(v14 - 2);
            v37 = v34;
            v38 = v33;
            v39 = v32;
            v40 = v31;
            v41 = v30;
            v42 = v29;
            v43 = v28;
            v44 = v27;
            v45 = v26;
            v46 = v25;
            v47 = v4;
            v48 = v6;
            swift_bridgeObjectRetain();
            swift_retain_n();
            v2 = &v36;
            sub_1BA6F84BC(a1, &v37);
            v14 += 5;
            swift_bridgeObjectRelease();
            swift_release_n();
            --v13;
          }
          while (v13);
          swift_release();
          result = swift_bridgeObjectRelease_n();
          v5 = v24;
          v10 = v20;
          v7 = v21;
          if (v9 == v21)
          {
LABEL_17:
            result = swift_bridgeObjectRelease();
            v2 = v19;
            goto LABEL_22;
          }
        }
        else
        {
          result = swift_release();
          if (v9 == v7)
            goto LABEL_17;
        }
      }
    }
  }
  result = swift_bridgeObjectRelease();
LABEL_22:
  v15 = v2[5];
  if (v15)
  {
    result = swift_beginAccess();
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      v18 = v16 + 48;
      while (1)
      {
        v49 = *(_QWORD *)(v18 - 16);
        v37 = v34;
        v38 = v33;
        v39 = v32;
        v40 = v31;
        v41 = v30;
        v42 = v29;
        v43 = v28;
        v44 = v27;
        v45 = v26;
        v46 = v25;
        v47 = v4;
        v48 = v6;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC(a1, &v37);
        if (v3)
          break;
        v18 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        if (!--v17)
          return swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
  }
  return result;
}

void sub_1BA6F84BC()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for FormatOptionsNodeStatement();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X11 }
}

uint64_t sub_1BA6F8634()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  swift_retain();
  v2 = v0;
  v3 = *(_QWORD *)(v1 - 320);
  sub_1BA70E27C(*(_QWORD *)(v1 - 328), v2);
  if (!v3)
    *(_QWORD *)(v1 - 320) = 0;
  return swift_release();
}

uint64_t type metadata accessor for FormatOptionsNodeStatement()
{
  uint64_t result;

  result = qword_1ED3CB998;
  if (!qword_1ED3CB998)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA6F9BF4()
{
  __asm { BR              X12 }
}

void sub_1BA6F9C60()
{
  uint64_t v0;

  if ((*(_WORD *)(v0 + 48) & 0x8001) == 0)
    sub_1BA711C44();
}

void sub_1BA6F9EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47 = *(char *)(v38 + 56);
  if (v47 < 0)
  {
    *(_DWORD *)(v46 - 72) = v47;
    v48 = *(_QWORD *)(v38 + 32);
    v51 = *(_QWORD *)(v38 + 40);
    v49 = *(_QWORD *)(v38 + 48);
    a28 = v44;
    a29 = v45;
    v50 = v48;
    a34 = a3;
    a35 = v42;
    a36 = v41;
    a37 = v39;
    a38 = v40;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BA7538E0(v43, (uint64_t)&a27);
    sub_1BAA376C0(v50, v51, v49, *(_DWORD *)(v46 - 72));
  }
  JUMPOUT(0x1BA6F9E9CLL);
}

uint64_t sub_1BA6F9F38(uint64_t a1, __int128 *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v7 = type metadata accessor for FormatOption();
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a3 >> 62))
  {
    v10 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  v35 = v9;
  v12 = 0;
  v13 = a3 & 0xC000000000000001;
  v32 = a3 & 0xFFFFFFFFFFFFFF8;
  v31 = a3 + 32;
  v9 = 0xFFFFFFFFFFFFFF9;
  v38 = a3;
  v34 = v10;
  v33 = a3 & 0xC000000000000001;
  while (1)
  {
    if (v13)
    {
      v14 = MEMORY[0x1BCCE4630](v12, a3);
      v15 = __OFADD__(v12, 1);
      v16 = v12 + 1;
      if (v15)
        goto LABEL_25;
    }
    else
    {
      if (v12 >= *(_QWORD *)(v32 + 16))
      {
        __break(1u);
        return result;
      }
      v14 = *(_QWORD *)(v31 + 8 * v12);
      swift_retain();
      v15 = __OFADD__(v12, 1);
      v16 = v12 + 1;
      if (v15)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    v37 = v16;
    swift_beginAccess();
    v17 = *(_QWORD *)(v14 + 32);
    v18 = *(_QWORD *)(v17 + 16);
    v39 = v14;
    if (v18)
      break;
LABEL_15:
    swift_beginAccess();
    v22 = *(_QWORD *)(v14 + 40);
    v23 = *(_QWORD *)(v22 + 16);
    v24 = v35;
    if (v23)
    {
      v40 = a1;
      v25 = v36;
      v26 = v22 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      v30 = v22;
      swift_bridgeObjectRetain_n();
      v27 = *(_QWORD *)(v25 + 72);
      while (1)
      {
        sub_1BA4C2DD8(v26, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v47 = *(_QWORD *)(v24 + 16);
        v28 = a2[3];
        v43 = a2[2];
        v44 = v28;
        v45 = a2[4];
        v46 = *((_QWORD *)a2 + 10);
        v29 = a2[1];
        v41 = *a2;
        v42 = v29;
        swift_retain();
        sub_1BA711C44();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v26 += v27;
        if (!--v23)
        {
          swift_release();
          result = swift_bridgeObjectRelease_n();
          a1 = v40;
          v9 = 0xFFFFFFFFFFFFFF9;
          goto LABEL_21;
        }
      }
      swift_release();
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    result = swift_release();
LABEL_21:
    v12 = v37;
    a3 = v38;
    v13 = v33;
    if (v37 == v34)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  v40 = v17;
  v19 = v17 + 48;
  while (1)
  {
    v47 = *(_QWORD *)(v19 - 16);
    v20 = a2[3];
    v43 = a2[2];
    v44 = v20;
    v45 = a2[4];
    v46 = *((_QWORD *)a2 + 10);
    v21 = a2[1];
    v41 = *a2;
    v42 = v21;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1BA6F84BC(a1, &v41);
    if (v3)
      break;
    v19 += 40;
    swift_bridgeObjectRelease();
    swift_release_n();
    if (!--v18)
    {
      swift_bridgeObjectRelease_n();
      v14 = v39;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void sub_1BA6FA32C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v6 = a2[3];
  v7 = a2[4];
  v34 = a2[2];
  v35 = a2[5];
  v8 = a2[6];
  v9 = a2[8];
  v10 = a2[9];
  v32 = a2[10];
  v33 = a2[7];
  swift_beginAccess();
  v24 = v2;
  v36 = v3;
  v23 = v4;
  v37 = v4;
  v31 = v5;
  v38 = v5;
  v39 = v34;
  v40 = v6;
  v30 = v6;
  v41 = v7;
  v42 = v35;
  v43 = v8;
  v44 = v33;
  v45 = v9;
  v46 = v10;
  v29 = v10;
  v47 = v32;
  sub_1BA6FA63C();
  if (!v27)
  {
    v26 = v8;
    v28 = v7;
    v11 = v2;
    swift_beginAccess();
    v12 = *(_QWORD *)(v2 + 88);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v14 = v23;
      v15 = v3;
      v16 = a1;
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v13; ++i)
      {
        v18 = *(_QWORD *)(v12 + 8 * i + 32);
        v36 = v15;
        v37 = v23;
        v38 = v31;
        v39 = v34;
        v40 = v30;
        v41 = v28;
        v42 = v35;
        v43 = v26;
        v44 = v33;
        v45 = v9;
        v46 = v29;
        v47 = v32;
        sub_1BA7196DC(v18);
        sub_1BA6FA7EC();
        sub_1BA719340(v18);
      }
      swift_bridgeObjectRelease_n();
      v3 = v15;
      v19 = v35;
      v11 = v24;
    }
    else
    {
      v14 = v23;
      v16 = a1;
      v19 = v35;
    }
    swift_beginAccess();
    v20 = *(_QWORD *)(v11 + 96);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain_n();
      v22 = v20 + 48;
      do
      {
        v48 = *(_QWORD *)(v22 - 16);
        v36 = v3;
        v37 = v14;
        v38 = v31;
        v39 = v34;
        v40 = v30;
        v41 = v28;
        v42 = v19;
        v43 = v26;
        v44 = v33;
        v45 = v9;
        v46 = v29;
        v47 = v32;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC(v16, &v36);
        v22 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v21;
        v19 = v35;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BA6FA63C()
{
  __asm { BR              X11 }
}

void sub_1BA6FA6C4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v6 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v4 - 40) = *(_QWORD *)(v5 + 16);
  sub_1BA6FAF04(v2, v3);
  if (!v1)
  {
    *(_QWORD *)(v4 - 40) = v6;
    sub_1BA6FAF04(v2, v3);
  }
  sub_1BA6FA6A8();
}

void sub_1BA6FA70C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10))
    sub_1BA7538E0(v1, v2);
  sub_1BA6FA6A8();
}

void sub_1BA6FA730(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v4 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v2 - 40) = *(_QWORD *)(v3 + 16);
  sub_1BA6FA63C();
  if (!v1 && (~v4 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)(v2 - 40) = v4;
    sub_1BA6FA63C();
  }
  sub_1BA6FA6A8();
}

void sub_1BA6FA784(uint64_t a1@<X8>, __int128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v6);
  sub_1BA72621C(v3, &a2, v7);
  if (!v2)
  {
    *(_QWORD *)(v4 - 40) = v6;
    sub_1BA6FA63C();
  }
  swift_bridgeObjectRelease();
  sub_1BA719718(v6);
  sub_1BA6FA6A8();
}

void sub_1BA6FA7EC()
{
  __asm { BR              X11 }
}

void sub_1BA6FA880(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  a19 = a4;
  a20 = a3;
  a21 = a5;
  a22 = v34;
  a23 = v33;
  a24 = v32;
  a25 = v31;
  a26 = v30;
  a27 = v39;
  a28 = v38;
  a29 = v37;
  a30 = v36;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA7538E0(v35, (uint64_t)&a19);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6FA85C();
}

void sub_1BA6FA8E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  a19 = a4;
  a20 = a3;
  a21 = a5;
  a22 = v34;
  a23 = v33;
  a24 = v32;
  a25 = v31;
  a26 = v30;
  a27 = v39;
  a28 = v38;
  a29 = v37;
  a30 = v36;
  swift_retain();
  sub_1BA7538E0(v35, (uint64_t)&a19);
  swift_release();
  sub_1BA6FA85C();
}

void sub_1BA6FA940(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;

  v3 = *(_QWORD *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10) + 16);
  if (v3)
  {
    for (i = swift_bridgeObjectRetain() + 40; ; i += 16)
    {
      *(_QWORD *)(v2 - 72) = *(_QWORD *)(i - 8);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA6F9BF4();
      if (v1)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        JUMPOUT(0x1BA6FA860);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1BA6FA85C();
}

void sub_1BA6FAA58()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA6FAB18()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BA6FAAF8 + 4 * byte_1BB8A643A[(v0 >> 1) & 0xF]))();
}

void sub_1BA6FAB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  *(_QWORD *)(v37 - 176) = v35;
  *(_BYTE *)(v37 - 168) = v36;
  *(_BYTE *)(v37 - 167) = a33;
  v39 = *(_QWORD *)(v37 - 72);
  *(_QWORD *)(v37 - 160) = a34;
  *(_QWORD *)(v37 - 152) = v39;
  *(_QWORD *)(v37 - 144) = a35;
  *(_QWORD *)(v37 - 136) = v38;
  *(_QWORD *)(v37 - 128) = a8;
  *(_QWORD *)(v37 - 120) = a7;
  *(_QWORD *)(v37 - 112) = a6;
  *(_QWORD *)(v37 - 104) = a5;
  *(_QWORD *)(v37 - 96) = a4;
  sub_1BA7E8890();
  sub_1BA6FAAF8();
}

void sub_1BA6FAB88()
{
  sub_1BA6FAAF8();
}

uint64_t sub_1BA6FAB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unint64_t v16;
  uint64_t v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1BA6FABD0 + 4 * byte_1BB8A6432[v16 >> 62]))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v17, a8, a7,
           a6,
           a5,
           a4,
           a1);
}

#error "1BA6FADF4: call analysis failed (funcsize=41)"

#error "1BA6FAE68: call analysis failed (funcsize=29)"

uint64_t sub_1BA6FAF04(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)v2 >> 61 == 3)
  {
    v3 = a2[10];
    v4 = *((_BYTE *)a2 + 9);
    v5 = *((_BYTE *)a2 + 8);
    v6 = *a2;
    v17 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v9 = v6;
    v10 = v5;
    v11 = v4;
    v7 = *((_OWORD *)a2 + 2);
    v12 = *((_OWORD *)a2 + 1);
    v13 = v7;
    v8 = *((_OWORD *)a2 + 4);
    v14 = *((_OWORD *)a2 + 3);
    v15 = v8;
    v16 = v3;
    return sub_1BA6FAF04(result, &v9);
  }
  return result;
}

void sub_1BA6FAF80()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  sub_1BA6FB120();
  if (!v1)
  {
    swift_beginAccess();
    if (*(__int16 *)(v0 + 72) <= -513)
      sub_1BA75DD88();
  }
}

void sub_1BA6FB120()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 8))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

unint64_t sub_1BA6FB198()
{
  char v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  uint64_t v7;

  if (v1 >> 62 == 1)
  {
    v3 = *(_QWORD *)(v1 + 16);
    v4 = *(_QWORD *)(v1 + 24);
    v5 = *(_QWORD *)(v1 + 32);
    sub_1BA72F4F8(v1, v0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA775C3C(v2, (uint64_t)&v7, v3, v4, v5);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1BA72E4D0(v1, v0);
  }
  return result;
}

void sub_1BA6FB29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  _QWORD v53[11];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v66 = a2;
  v69 = a1;
  v4 = type metadata accessor for FormatPropertyDefinition(0);
  v61 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatOption();
  v53[9] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v58 = a3;
  v15 = *(_QWORD *)(a3 + 16);
  if (!v15)
    return;
  v53[5] = (char *)v53 - v13;
  v53[7] = v14;
  v53[8] = v7;
  v53[4] = v9;
  v53[6] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  v16 = v58 + 32;
  swift_bridgeObjectRetain();
  v17 = 0;
  v54 = v6;
  v56 = v15;
  v55 = v16;
  while (1)
  {
    v18 = v16 + 88 * v17;
    v19 = *(unsigned __int8 *)(v18 + 80);
    if (v19 >> 6)
    {
      v64 = *(_QWORD *)(v18 + 8);
      v20 = *(_QWORD *)(v18 + 24);
      v68 = *(_QWORD *)(v18 + 32);
      v21 = *(_QWORD *)(v18 + 40);
      v65 = *(_QWORD *)(v18 + 48);
      v22 = *(_QWORD *)(v18 + 64);
      v67 = *(_QWORD *)(v18 + 56);
      v23 = *(_QWORD *)(v18 + 72);
      if (v19 >> 6 == 1)
      {
        if ((v19 & 1) == 0)
        {
          if (*(_BYTE *)(v65 + 41))
            v24 = 4;
          else
            v24 = 0;
          v25 = (char *)&loc_1BA6FB594
              + 4 * word_1BB8A5794[v24 & 0xFFFFFFFC | (*(unsigned __int8 *)(v65 + 40) >> 2) & 3];
          v62 = v22;
          v53[10] = v21;
          v63 = v20;
          v57 = v17;
          __asm { BR              X9 }
        }
        goto LABEL_3;
      }
      v26 = *(_QWORD *)(v68 + 16);
      if (v26)
        break;
    }
LABEL_3:
    if (++v17 == v15)
      goto LABEL_17;
  }
  v57 = v17;
  v27 = v67;
  v28 = v68;
  v29 = v23;
  v30 = v65;
  v31 = v19;
  v32 = v68 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
  v63 = v20;
  v33 = v21;
  sub_1BA709DE8(v68, v21, v65, v67, v22, v29, v31);
  sub_1BA709DE8(v28, v33, v30, v27, v22, v29, v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v28;
  v35 = v33;
  v36 = v27;
  v37 = v66;
  v62 = v22;
  v59 = v29;
  v60 = v31;
  sub_1BA709DE8(v34, v33, v30, v36, v22, v29, v31);
  v38 = *(_QWORD *)(v61 + 72);
  v39 = (uint64_t)v54;
  while (1)
  {
    sub_1BA4C2DD8(v32, v39, type metadata accessor for FormatPropertyDefinition);
    v40 = v70;
    FormatPropertyDefinition.bind(binder:context:)(v69, v37);
    v70 = v40;
    if (v40)
      break;
    sub_1BA4A2E80(v39, type metadata accessor for FormatPropertyDefinition);
    v32 += v38;
    if (!--v26)
    {
      v41 = v67;
      v42 = v68;
      v43 = v65;
      v44 = v62;
      v45 = v59;
      v46 = v60;
      sub_1BA6C0C20(v68, v35, v65, v67, v62, v59, v60);
      sub_1BA6C0C20(v42, v35, v43, v41, v44, v45, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v42, v35, v43, v41, v44, v45, v46);
      v15 = v56;
      v16 = v55;
      v17 = v57;
      goto LABEL_3;
    }
  }
  sub_1BA4A2E80(v39, type metadata accessor for FormatPropertyDefinition);
  v47 = v67;
  v48 = v68;
  v49 = v65;
  v50 = v62;
  v51 = v59;
  v52 = v60;
  sub_1BA6C0C20(v68, v35, v65, v67, v62, v59, v60);
  sub_1BA6C0C20(v48, v35, v49, v47, v50, v51, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v48, v35, v49, v47, v50, v51, v52);
LABEL_17:
  swift_bridgeObjectRelease();
}

void sub_1BA6FEDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD v47[7];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v64 = a1;
  v65 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v47 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v7);
  v63 = (char *)v47 - v8;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)v47 - v10;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)v47 - v12;
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)v47 - v14;
  v15 = type metadata accessor for FormatPropertyDefinition(0);
  v51 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v47 - v19;
  v21 = *(_QWORD *)(a3 + 16);
  if (v21)
  {
    v47[6] = a3;
    swift_bridgeObjectRetain();
    v22 = a3 + 32;
    v23 = 0;
    v53 = v15;
    v52 = v17;
    v50 = v21;
    v49 = a3 + 32;
    v54 = v6;
    v48 = v20;
    do
    {
      v24 = v22 + 88 * v23;
      v25 = *(unsigned __int8 *)(v24 + 80);
      if (v25 >> 6)
      {
        v26 = *(_QWORD *)(v24 + 8);
        v28 = *(_QWORD *)(v24 + 24);
        v27 = *(_QWORD *)(v24 + 32);
        v29 = *(_QWORD *)(v24 + 40);
        v68 = *(_QWORD *)(v24 + 48);
        v30 = *(_QWORD *)(v24 + 56);
        v31 = *(_QWORD *)(v24 + 64);
        v32 = *(_QWORD *)(v24 + 72);
        v66 = v30;
        v67 = v32;
        if (v25 >> 6 == 1)
        {
          if ((v25 & 1) == 0)
          {
            if (*(_BYTE *)(v68 + 41))
              v33 = 4;
            else
              v33 = 0;
            v34 = (char *)&loc_1BA6FF06C
                + 4 * word_1BB927AE4[v33 & 0xFFFFFFFC | (*(unsigned __int8 *)(v68 + 40) >> 2) & 3];
            v56 = v29;
            v57 = v27;
            v59 = v26;
            v58 = v28;
            v55 = v23;
            __asm { BR              X9 }
          }
        }
        else if (*(_QWORD *)(v27 + 16))
        {
          v35 = v31;
          v55 = v23;
          v36 = v29;
          v37 = v27 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
          v38 = v25;
          v39 = v68;
          v58 = v28;
          v59 = v26;
          v40 = v66;
          v41 = v67;
          v42 = v35;
          sub_1BA709DE8(v27, v36, v68, v66, v35, v67, v38);
          sub_1BA709DE8(v27, v36, v39, v40, v42, v41, v38);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v57 = v27;
          v56 = v36;
          v43 = v41;
          v44 = (uint64_t)v52;
          sub_1BA709DE8(v27, v36, v39, v40, v42, v43, v38);
          v69 = *(_QWORD *)(v51 + 72);
          v45 = (uint64_t)v48;
          sub_1BA4C2DD8(v37, (uint64_t)v48, type metadata accessor for FormatPropertyDefinition);
          sub_1BA4C2DD8(v45, v44, type metadata accessor for FormatPropertyDefinition);
          v46 = (char *)&loc_1BA6FF704 + 4 * byte_1BB927AD8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
      }
      ++v23;
    }
    while (v23 != v21);
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for FormatPropertyDefinition(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B7888);
}

uint64_t sub_1BA702174(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  swift_beginAccess();
  v14 = v2[8];
  sub_1BA71CA6C(v14);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v14);
  if (!v3)
  {
    swift_beginAccess();
    v7 = v2[11];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    result = swift_beginAccess();
    v11 = v2[12];
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      v13 = v11 + 64;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(a1, a2);
        v13 += 40;
        swift_bridgeObjectRelease();
        swift_release();
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t FormatSourceMapNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  CFTimeInterval v51;
  uint64_t v52;
  _QWORD v53[3];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  sub_1BA4B07F0(0, &qword_1ED3C0AD8, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v53 - v7;
  v56 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  MEMORY[0x1E0C80A78](v56);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  v11 = v2[1];
  v14 = v2[2];
  v13 = v2[3];
  v15 = v2[4];
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData);
  v61 = a1;
  v62 = v3;
  *((_QWORD *)&v58 + 1) = v15;
  *(_QWORD *)&v58 = v13;
  v63 = v11;
  v54 = v8;
  v60 = v12;
  v59 = a2;
  if (!v16)
  {
    v73 = 0;
    v27 = *(_QWORD *)(a1 + 16);
    if (v27)
      goto LABEL_7;
LABEL_11:
    if (v14)
    {
      v71 = 0u;
      v72 = 0u;
      v70 = 0u;
      v69 = 0;
      v67 = 0u;
      v68 = 0u;
      v41 = v63;
      v64 = v63;
      v65 = v14;
      v42 = v58;
      v66 = v58;
      swift_bridgeObjectRetain_n();
      v43 = v12;
      v44 = sub_1BA706104(0, 0, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9E8], 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)&v70, (uint64_t)&v67, &v64);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)&v67, (uint64_t (*)(_QWORD))sub_1BB179EB4);
      *(_QWORD *)&v70 = v43;
      swift_retain();
      v45 = v62;
      FormatNode.bind(binder:context:)();
      if (v45)
      {
        swift_release();
        v46 = *(_QWORD *)(v44 + 24);
        *(_QWORD *)&v70 = v41;
        *((_QWORD *)&v70 + 1) = v14;
        v71 = v42;
        sub_1BB62DA9C(v46, (uint64_t *)&v70, v45, 0);
        swift_willThrow();

        swift_bridgeObjectRelease();
        result = swift_release();
        if (!v73)
          return result;
        goto LABEL_21;
      }
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v70 = v12;
    swift_retain();
    FormatNode.bind(binder:context:)();
LABEL_16:
    result = swift_release();
    if (!v73)
      return result;
    goto LABEL_24;
  }
  v57 = v10;
  v17 = v13;
  v18 = v14;
  v19 = v11;
  v20 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)&v70 = v12;
  sub_1BB57F380();
  v73 = v21;
  v23 = v22;
  *(_QWORD *)&v70 = v12;
  LODWORD(v55) = sub_1BB57DC18();
  v24 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)&v70 = v19;
  *((_QWORD *)&v70 + 1) = v18;
  v14 = v18;
  *(_QWORD *)&v71 = v17;
  *((_QWORD *)&v71 + 1) = v15;
  type metadata accessor for FormatNodeDebugRecord();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  v73 = sub_1BAF200B0(v73, v23, v55, v24, (uint64_t *)&v70);
  if (v73)
  {
    swift_beginAccess();
    v25 = swift_retain();
    MEMORY[0x1BCCE36AC](v25);
    if (*(_QWORD *)((*(_QWORD *)(v20 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v20 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_endAccess();
  }
  swift_release();
  swift_bridgeObjectRelease();
  v26 = v61;
  swift_bridgeObjectRelease();
  v10 = v57;
  v12 = v60;
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
    goto LABEL_11;
LABEL_7:
  if (!v14)
    goto LABEL_15;
  v71 = 0u;
  v72 = 0u;
  v70 = 0u;
  v69 = 0;
  v67 = 0u;
  v68 = 0u;
  v64 = v63;
  v65 = v14;
  v28 = v63;
  v29 = v58;
  v66 = v58;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v30 = sub_1BA706104(0, 0, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9E8], 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)&v70, (uint64_t)&v67, &v64);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)&v67, (uint64_t (*)(_QWORD))sub_1BB179EB4);
  *(_QWORD *)&v10[*(int *)(v56 + 24)] = v30;
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v10 = v12;
  *((_QWORD *)v10 + 1) = v28;
  *((_QWORD *)v10 + 2) = v14;
  *(_OWORD *)(v10 + 24) = v29;
  v56 = OBJC_IVAR____TtC8NewsFeed14FormatDebugger_lock;
  v31 = v12 & 0xFFFFFFFFFFFFFF9;
  swift_retain();
  swift_bridgeObjectRetain();
  v59 = v30;
  swift_retain();
  sub_1BB86DD20();
  v32 = v27 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
  swift_beginAccess();
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  v53[2] = v33;
  v55 = v32;
  sub_1BB86E80C();
  swift_endAccess();
  sub_1BB86DD2C();
  *(_QWORD *)&v67 = v63;
  *((_QWORD *)&v67 + 1) = v14;
  v68 = v29;
  sub_1BB47F030((uint64_t *)&v67, 0, &v70);
  v34 = *((_QWORD *)&v70 + 1);
  if (*((_QWORD *)&v70 + 1))
  {
    v36 = *((_QWORD *)&v71 + 1);
    v35 = (void *)v72;
    v53[1] = v31;
    v37 = v71;
    v57 = v10;
    v38 = v70;
    sub_1BB47DFBC((uint64_t *)&v70);
    v10 = v57;
    v39 = v35;
    v40 = v62;
    sub_1BB62DCB0(v38, v34, v37, v36, v39);
  }
  else
  {
    v40 = v62;
  }
  *(_QWORD *)&v70 = v60;
  swift_retain();
  v48 = v59;
  FormatNode.bind(binder:context:)();
  if (v40)
  {
    swift_release();
    v49 = *(_QWORD *)(v48 + 24);
    *(_QWORD *)&v70 = v63;
    *((_QWORD *)&v70 + 1) = v14;
    v71 = v58;
    swift_retain();
    sub_1BB62DA9C(v49, (uint64_t *)&v70, v40, v27);
    swift_release();
    swift_willThrow();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    result = sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatDebuggerCallStackFrame);
    if (!v73)
      return result;
LABEL_21:
    if ((*(_BYTE *)(v73 + 96) & 1) == 0)
      return swift_release();
    goto LABEL_25;
  }
  swift_release();
  sub_1BB86DD20();
  swift_beginAccess();
  v50 = (uint64_t)v54;
  sub_1BB86E7F4();
  swift_endAccess();
  sub_1BA5C699C(v50, &qword_1ED3C0AD8, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1BB86DD2C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  result = sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatDebuggerCallStackFrame);
  if (!v73)
    return result;
LABEL_24:
  if (*(_BYTE *)(v73 + 96) == 1)
  {
LABEL_25:
    v51 = CACurrentMediaTime();
    v52 = v73;
    *(CFTimeInterval *)(v73 + 88) = v51;
    *(_BYTE *)(v52 + 96) = 0;
  }
  return swift_release();
}

uint64_t type metadata accessor for FormatDebuggerCallStackFrame(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C21B8);
}

void FormatNode.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA702BC4()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  FormatHBoxNode.bind(binder:context:)(v1, v0);
  return swift_release();
}

void FormatSize.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA703514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v1)
          break;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatSwitchNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;

  v4 = v2;
  v43 = a2;
  v39 = a1;
  v5 = sub_1BB86EB00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 32);
  if (v9 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v10 = result;
    if (result)
    {
LABEL_3:
      v29 = v4;
      v4 = 0;
      v38 = v9 & 0xC000000000000001;
      v32 = v9 + 32;
      v33 = v9 & 0xFFFFFFFFFFFFFF8;
      v31 = 1;
      v30 = v9;
      v34 = v6;
      v35 = v5;
      v36 = v8;
      v37 = v10;
      do
      {
        if (v38)
        {
          v12 = MEMORY[0x1BCCE4630](v4, v9);
          v13 = __OFADD__(v4++, 1);
          if (v13)
            goto LABEL_28;
        }
        else
        {
          if (v4 >= *(_QWORD *)(v33 + 16))
          {
            __break(1u);
            return result;
          }
          v12 = *(_QWORD *)(v32 + 8 * v4);
          swift_retain();
          v13 = __OFADD__(v4++, 1);
          if (v13)
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        *(_QWORD *)&v40 = *(_QWORD *)(v12 + 16);
        swift_retain();
        sub_1BA7049A8();
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_release();
        }
        swift_release();
        if ((sub_1BB86EAF4() & 1) == 0)
        {
          *(_QWORD *)&v40 = *(_QWORD *)(v12 + 16);
          swift_retain();
          FormatExpression.bind(binder:context:)();
          swift_release();
          swift_beginAccess();
          v14 = *(_QWORD *)(v12 + 24);
          v15 = *(_QWORD *)(v14 + 16);
          if (v15)
          {
            swift_bridgeObjectRetain_n();
            v16 = (_QWORD *)(v14 + 64);
            do
            {
              v17 = *v16;
              v40 = *((_OWORD *)v16 - 2);
              v41 = *((_OWORD *)v16 - 1);
              v42 = v17;
              swift_bridgeObjectRetain();
              swift_retain();
              FormatSourceMapNode.bind(binder:context:)(v39, v43);
              v16 += 5;
              swift_bridgeObjectRelease();
              swift_release();
              --v15;
            }
            while (v15);
            swift_bridgeObjectRelease_n();
            v31 = 0;
            v9 = v30;
          }
          else
          {
            v31 = 0;
          }
          v6 = v34;
          v5 = v35;
          v8 = v36;
        }
        v18 = sub_1BB86EAE8();
        swift_release();
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        if ((v18 & 1) != 0)
          return swift_bridgeObjectRelease();
      }
      while (v4 != v37);
      swift_bridgeObjectRelease();
      v4 = v29;
      v19 = v31;
      if (*(_QWORD *)(v29 + 40))
        goto LABEL_31;
      goto LABEL_21;
    }
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v19 = 1;
  if (!*(_QWORD *)(v4 + 40))
  {
LABEL_21:
    result = swift_beginAccess();
    if ((*(_BYTE *)(v4 + 48) & v19 & 1) != 0)
    {
      swift_beginAccess();
      v20 = *(_QWORD *)(v4 + 64);
      if (v20)
      {
        v21 = *(_QWORD *)(v4 + 56);
        type metadata accessor for FormatLayoutError();
        sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        v23 = v22;
        v24 = swift_allocError();
        v25 = v39;
        *v26 = v4;
        v26[1] = v25;
        v26[2] = v43;
        swift_storeEnumTagMultiPayload();
        *v23 = v21;
        v23[1] = v20;
        v23[2] = v24;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for FormatLayoutError();
        sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        v27 = v39;
        *v28 = v4;
        v28[1] = v27;
        v28[2] = v43;
        swift_storeEnumTagMultiPayload();
      }
      swift_retain();
      swift_retain();
      swift_retain();
      return swift_willThrow();
    }
    return result;
  }
LABEL_31:
  swift_retain();
  FormatSwitchNodeDefault.bind(binder:context:)(v39, v43);
  result = swift_release();
  if (!v3)
    return swift_beginAccess();
  return result;
}

void FormatExpression.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA70483C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a3;
  v7 = sub_1BB86EB00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v21 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - v11;
  v13 = v3[1];
  v24 = *v3;
  swift_retain();
  v22 = a1;
  v23 = a2;
  sub_1BA7049A8(a1, a2);
  result = swift_release();
  if (!v4)
  {
    v19 = v7;
    v24 = v13;
    swift_retain();
    v15 = v21;
    sub_1BA7049A8(v22, v23);
    swift_release();
    sub_1BB86EAD0();
    v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17 = v19;
    v16(v15, v19);
    return ((uint64_t (*)(char *, uint64_t))v16)(v12, v17);
  }
  return result;
}

void sub_1BA7049A8()
{
  uint64_t v1;

  v1 = sub_1BB86EB00();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA704A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x1E0DB4D68], v1);
}

void sub_1BA704E5C()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BA704F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0DB4D68];
  v2 = sub_1BB86EB00();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(*(_QWORD *)(v0 - 208), v1, v2);
}

unint64_t sub_1BA705894(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA7058C4(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA7058F4(uint64_t a1, uint64_t a2, __int16 a3)
{
  char v3;

  sub_1BA7148E0(a1, a2, a3);
  return v3 & 1;
}

uint64_t FormatSnippetNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[4];
  _BYTE v80[32];
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v4 = v2;
  v77 = a1;
  v6 = type metadata accessor for FormatOption();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v63 - v13;
  *((_QWORD *)&v83 + 1) = type metadata accessor for FormatNodeBinderContext();
  *(_QWORD *)&v84 = &protocol witness table for FormatNodeBinderContext;
  *(_QWORD *)&v82 = a2;
  swift_retain();
  v15 = sub_1BA706DFC(&v82);
  if (v3)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  v17 = v15;
  v85 = (uint64_t)v14;
  v73 = v6;
  v71 = a2;
  v68 = v11;
  v64 = v8;
  v78 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  swift_beginAccess();
  v18 = v4[3];
  v69 = v4[2];
  v67 = (uint64_t *)(v17 + 72);
  swift_beginAccess();
  v74 = (_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 72);
  v20 = *(_QWORD *)(v19 + 16);
  v21 = v75;
  v72 = v4;
  v70 = v18;
  if (v20)
  {
    *(_QWORD *)&v82 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v20, 0);
    v22 = v82;
    v23 = *(unsigned __int8 *)(v21 + 80);
    v66 = v19;
    v24 = v19 + ((v23 + 32) & ~v23);
    v76 = *(_QWORD *)(v21 + 72);
    v25 = v85;
    do
    {
      sub_1BA4C2DD8(v24, v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v26 = swift_allocBox();
      sub_1BA5193C4(v25, v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v82 = v22;
      v29 = *(_QWORD *)(v22 + 16);
      v28 = *(_QWORD *)(v22 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1BA76B828(v28 > 1, v29 + 1, 1);
        v22 = v82;
      }
      *(_QWORD *)(v22 + 16) = v29 + 1;
      *(_QWORD *)(v22 + 8 * v29 + 32) = v26 | 0xA000000000000004;
      v24 += v76;
      --v20;
      v25 = v85;
    }
    while (v20);
    swift_bridgeObjectRelease();
    v21 = v75;
    v4 = v72;
  }
  else
  {
    swift_bridgeObjectRetain();
    v22 = MEMORY[0x1E0DEE9D8];
    v25 = v85;
  }
  v65 = v4 + 11;
  swift_beginAccess();
  v30 = v4[11];
  v31 = *(_QWORD *)(v30 + 16);
  v32 = MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    *(_QWORD *)&v82 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v31, 0);
    v32 = v82;
    v33 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v34 = v21;
    v66 = v30;
    v35 = v30 + v33;
    v76 = *(_QWORD *)(v34 + 72);
    do
    {
      sub_1BA4C2DD8(v35, v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v36 = swift_allocBox();
      sub_1BA5193C4(v25, v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v82 = v32;
      v39 = *(_QWORD *)(v32 + 16);
      v38 = *(_QWORD *)(v32 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1BA76B828(v38 > 1, v39 + 1, 1);
        v32 = v82;
      }
      *(_QWORD *)(v32 + 16) = v39 + 1;
      *(_QWORD *)(v32 + 8 * v39 + 32) = v36 | 0x5000000000000004;
      v35 += v76;
      --v31;
      v25 = v85;
    }
    while (v31);
    swift_bridgeObjectRelease();
    v4 = v72;
  }
  *(_QWORD *)&v82 = v22;
  sub_1BA7082C0(v32);
  v40 = v82;
  v41 = v74;
  swift_beginAccess();
  v42 = v41[10];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v43 = swift_bridgeObjectRetain();
  v44 = sub_1BA6E4124(v43, v42);
  swift_beginAccess();
  v45 = v4[12];
  v83 = 0u;
  v84 = 0u;
  v82 = 0u;
  v81 = 0;
  memset(v80, 0, sizeof(v80));
  memset(v79, 0, sizeof(v79));
  swift_bridgeObjectRetain();
  v46 = sub_1BA706104(v69, v70, v40, v44, 0, 0, 0, v45, (uint64_t *)&v82, (uint64_t)v80, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA502AD0((uint64_t)v80, qword_1ED3B2E38, (void (*)(uint64_t))sub_1BA7C2A4C);
  swift_beginAccess();
  v47 = v41[8];
  v48 = *(_QWORD *)(v47 + 16);
  if (v48)
  {
    swift_bridgeObjectRetain_n();
    v49 = (_QWORD *)(v47 + 64);
    while (1)
    {
      v50 = *v49;
      v82 = *((_OWORD *)v49 - 2);
      v83 = *((_OWORD *)v49 - 1);
      *(_QWORD *)&v84 = v50;
      swift_bridgeObjectRetain();
      swift_retain();
      v51 = v78;
      FormatSourceMapNode.bind(binder:context:)(v77, v46);
      v78 = v51;
      if (v51)
        break;
      v49 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v48)
      {
        swift_bridgeObjectRelease_n();
        v41 = v74;
        goto LABEL_21;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_21:
    v52 = (uint64_t)v68;
    v53 = *(_QWORD *)(*v67 + 16);
    if (v53)
    {
      v54 = *v67 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
      v55 = *(_QWORD *)(v75 + 72);
      v85 = *v67;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v54, v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        *(_QWORD *)&v82 = *(_QWORD *)(v52 + 16);
        swift_retain();
        v56 = v78;
        FormatOptionValue.bind(binder:context:)(v77, v46);
        v78 = v56;
        if (v56)
          break;
        swift_release();
        sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v54 += v55;
        if (!--v53)
        {
          swift_bridgeObjectRelease_n();
          v41 = v74;
          goto LABEL_26;
        }
      }
      swift_release();
      sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_26:
      swift_beginAccess();
      v57 = v41[11];
      swift_bridgeObjectRetain();
      v58 = v78;
      sub_1BA6FB29C(v77, v46, v57);
      if (v58)
      {
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v59 = *v65;
        v60 = *(_QWORD *)(*v65 + 16);
        if (v60)
        {
          v61 = v59 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
          v85 = *(_QWORD *)(v75 + 72);
          v78 = v59;
          swift_bridgeObjectRetain_n();
          v62 = (uint64_t)v64;
          do
          {
            sub_1BA4C2DD8(v61, v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v79[0] = *(_QWORD *)(v62 + 16);
            swift_retain();
            FormatOptionValue.bind(binder:context:)(v77, v46);
            swift_release();
            sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v61 += v85;
            --v60;
          }
          while (v60);
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_release();
        }
        return swift_release();
      }
    }
  }
}

uint64_t sub_1BA706104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t *a9, uint64_t a10, uint64_t *a11)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  _BYTE v95[40];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104[10];

  v12 = (uint64_t)v11;
  v82 = a7;
  v83 = a8;
  v77 = a6;
  LODWORD(v79) = a5;
  v80 = a4;
  v81 = a3;
  v76 = *v11;
  v15 = type metadata accessor for GroupLayoutContext();
  v73 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v74 = v16;
  v75 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a9;
  v18 = a9[1];
  v87 = a9[2];
  v88 = v17;
  v19 = a9[3];
  v85 = a9[4];
  v86 = v19;
  v84 = a9[5];
  v20 = *a11;
  v21 = a11[1];
  v22 = a11[2];
  v23 = a11[3];
  *(_WORD *)v104 = 0;
  v24 = (_QWORD *)v11[3];
  swift_retain();
  if (!a2)
  {
    v25 = v24;
    if (v21)
      goto LABEL_3;
LABEL_5:
    v26 = v25;
    goto LABEL_6;
  }
  v25 = sub_1BA70A34C(a1, a2);
  swift_release();
  swift_beginAccess();
  v104[1] = 1;
  if (!v21)
    goto LABEL_5;
LABEL_3:
  v96 = v20;
  v97 = v21;
  v98 = v22;
  v99 = v23;
  swift_bridgeObjectRetain();
  v26 = sub_1BB58CD54(&v96);
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  v104[1] = 1;
LABEL_6:
  v27 = v18;
  v28 = v81;
  v29 = v82;
  v30 = sub_1BA706AF4(v80, v79 & 1, v12, &v104[1], v104);
  v31 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options);
  if (*(_QWORD *)(v28 + 16) && (v32 = sub_1BA6E2510(v28)) != 0)
  {
    v33 = v32;
    swift_beginAccess();
    v104[1] = 1;
    swift_beginAccess();
    v104[0] = 1;
    v31 = v33;
    v34 = a10;
    if (!v29)
    {
LABEL_9:
      v35 = *(_QWORD *)(v12 + 40);
      v77 = *(_QWORD *)(v12 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  else
  {
    swift_retain();
    v34 = a10;
    if (!v29)
      goto LABEL_9;
  }
  swift_beginAccess();
  v104[1] = 1;
  v35 = v29;
LABEL_12:
  v36 = v83;
  swift_bridgeObjectRetain();
  v37 = sub_1BA70685C(v36, (_QWORD *)v12, (uint64_t)&v104[1]);
  if (v27)
  {
    swift_beginAccess();
    LODWORD(v83) = 0;
    v38 = v88;
    v81 = v87;
    v82 = v88;
    v104[1] = 1;
    v39 = v27;
    v79 = v85;
    v80 = v86;
    v78 = v84;
  }
  else
  {
    v40 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
    v39 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 8);
    v41 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 24);
    v42 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 32);
    v43 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 40);
    v44 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
    v81 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 16);
    v82 = v40;
    v79 = v42;
    v80 = v41;
    v78 = v43;
    LODWORD(v83) = v44;
    sub_1BA7066DC(v40, v39, v81, v41, v42, v43, v44);
    v38 = v88;
  }
  sub_1BA70A834(v38, v27);
  v45 = sub_1BA7066F4(v34, v12, &v104[1]);
  v47 = v46;
  swift_beginAccess();
  if (v104[1] == 1)
  {
    v86 = v47;
    swift_beginAccess();
    v48 = &unk_1ED476000;
    v71 = v35;
    v72 = v26;
    v69 = v31;
    v70 = v37;
    v87 = v45;
    v88 = v39;
    v68 = v30;
    if (v104[0] == 1)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
      v49 = v75;
      sub_1BA70A964(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext, v75);
      v50 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      v51 = (v74 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
      v52 = swift_allocObject();
      v53 = v52 + v50;
      v48 = (_QWORD *)&unk_1ED476000;
      sub_1BA5193C4(v49, v53, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      *(_QWORD *)(v52 + v51) = v31;
      *(_QWORD *)(v52 + ((v51 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
      swift_retain();
      swift_bridgeObjectRetain();
      v54 = v49;
      v84 = sub_1BB86DD98();
    }
    else
    {
      v84 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions);
      swift_retain();
      v54 = v75;
    }
    v85 = *(_QWORD *)(v12 + 16);
    v55 = *(_BYTE *)(v12 + 49);
    v56 = *(_QWORD *)(v12 + 56);
    v57 = *(_QWORD *)(v12 + 64);
    v58 = *(_QWORD *)(v12 + 72);
    v59 = *(void **)(v12 + 80);
    v60 = *(_QWORD *)(v12 + 88);
    v61 = *(_QWORD *)(v12 + 96);
    v62 = *(_QWORD *)(v12 + 104);
    LOBYTE(v96) = *(_BYTE *)(v12 + 48);
    BYTE1(v96) = v55;
    v97 = v56;
    v98 = v57;
    v99 = v58;
    v100 = v59;
    v101 = v60;
    v102 = v61;
    v63 = v12 + v48[272];
    v103 = v62;
    sub_1BA70A964(v63, v54);
    v64 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData);
    sub_1BA4C010C(v12 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger, (uint64_t)v95);
    *(_QWORD *)&v89 = v82;
    *((_QWORD *)&v89 + 1) = v88;
    v90 = v81;
    v91 = v80;
    v92 = v79;
    v93 = v78;
    v94 = v83;
    v12 = swift_allocObject();
    swift_bridgeObjectRetain();
    v65 = v85;
    swift_retain();
    sub_1BA70A884(v58, v59);
    swift_retain();
    sub_1BB3759B4((uint64_t)v72, v65, (char *)&v96, v69, v68, v54, v77, v71, v70, v64, v84, (uint64_t)v95, &v89, v87, v86);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA63333C(v82, v39, v81, v80, v79, v78, v83);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1BA7066DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;

  if (a7 != 255)
    return sub_1BB334E40();
  return result;
}

uint64_t sub_1BA7066F4(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11[2];
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_1BA706C0C(a1, (uint64_t)&v12);
  if (v13)
  {
    sub_1BA4CECCC(&v12, (uint64_t)v14);
    swift_beginAccess();
    *a3 = 1;
    v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8);
    v11[0] = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    v11[1] = v5;
    v6 = v15;
    v7 = v16;
    v8 = __swift_project_boxed_opaque_existential_1(v14, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA787460((uint64_t)v8, v11, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return v11[0];
  }
  else
  {
    sub_1BA5C699C((uint64_t)&v12, qword_1ED3B2E38, (uint64_t (*)(uint64_t))sub_1BA7C2A4C);
    v9 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_1BA706800(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA70685C(unint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;

  v5 = a1;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      swift_beginAccess();
      *(_BYTE *)a3 = 1;
      a2 = *(_QWORD **)((char *)a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks);
      v28 = v5 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = 4;
      v27 = v5;
      while (1)
      {
        v9 = v7 - 4;
        if (v28)
        {
          a3 = MEMORY[0x1BCCE4630](v7 - 4, v5);
          v10 = v7 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_23;
        }
        else
        {
          a3 = *(_QWORD *)(v5 + 8 * v7);
          swift_retain();
          v10 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        v11 = v6;
        v5 = *(_QWORD *)(a3 + 16);
        v12 = *(_QWORD *)(a3 + 24);
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v15 = sub_1BA6E35A8(v5, v12);
        v16 = a2[2];
        v17 = (v14 & 1) == 0;
        v18 = v16 + v17;
        if (__OFADD__(v16, v17))
          goto LABEL_24;
        v19 = v14;
        if (a2[3] >= v18)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v14 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_1BA76AEB0();
            if ((v19 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_1BA7677D8(v18, isUniquelyReferenced_nonNull_native);
          v20 = sub_1BA6E35A8(v5, v12);
          if ((v19 & 1) != (v21 & 1))
          {
            result = sub_1BB874560();
            __break(1u);
            return result;
          }
          v15 = v20;
          if ((v19 & 1) != 0)
          {
LABEL_4:
            v8 = a2[7];
            swift_release();
            *(_QWORD *)(v8 + 8 * v15) = a3;
            goto LABEL_5;
          }
        }
        a2[(v15 >> 6) + 8] |= 1 << v15;
        v22 = (uint64_t *)(a2[6] + 16 * v15);
        *v22 = v5;
        v22[1] = v12;
        *(_QWORD *)(a2[7] + 8 * v15) = a3;
        v23 = a2[2];
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
          goto LABEL_25;
        a2[2] = v25;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v7;
        v6 = v11;
        v5 = v27;
        if (v10 == v11)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)a2;
        }
      }
    }
  }
  a2 = *(_QWORD **)((char *)a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks);
  swift_bridgeObjectRetain();
  return (uint64_t)a2;
}

uint64_t sub_1BA706AF4(uint64_t a1, char a2, uint64_t a3, _BYTE *a4, _BYTE *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = a1;
  v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors);
  if (*(_QWORD *)(a1 + 16) || (a2 & 1) != 0)
  {
    if ((sub_1BA70BA78(*(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors), a1) & 1) == 0)
    {
      swift_beginAccess();
      *a4 = 1;
      swift_beginAccess();
      *a5 = 1;
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v10 = swift_bridgeObjectRetain();
        return sub_1BA6E4124(v10, v9);
      }
      goto LABEL_8;
    }
    if ((a2 & 1) != 0)
    {
      swift_beginAccess();
      *a4 = 1;
      swift_beginAccess();
      *a5 = 1;
LABEL_8:
      swift_bridgeObjectRetain();
      return v8;
    }
  }
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_1BA706C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatNodeBinderContext()
{
  uint64_t result;

  result = qword_1ED3BA7C8;
  if (!qword_1ED3BA7C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatSnippetNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *(_QWORD *)(v2 + 88);
  v10 = *(_QWORD *)(result + 16);
  if (v10)
  {
    v11 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    v13[1] = *(_QWORD *)(v2 + 88);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v15 = *((_QWORD *)v8 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(a1, v14);
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v11 += v12;
      if (!--v10)
        return swift_bridgeObjectRelease_n();
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BA706DFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE v23[24];

  v2 = v1;
  sub_1BA4A3FB4(0, &qword_1ED3C6838, sub_1BA709CA4);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v23[-v5];
  sub_1BA709CA4(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets;
  swift_beginAccess();
  v15 = *(_QWORD *)(v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = *(_QWORD *)(v2 + 40);
    v17 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v17, v16);
    if ((v19 & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v15 + 56) + *(_QWORD *)(v9 + 72) * v18, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA709CA4);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, 1, 1, v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_1BA502AD0((uint64_t)v6, &qword_1ED3C6838, sub_1BA709CA4);
    v20 = type metadata accessor for FormatLayoutError();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v21 = v2;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_willThrow();
  }
  else
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA709CA4);
    v20 = *v11;
    swift_retain();
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA709CA4);
  }
  return v20;
}

uint64_t sub_1BA7070C4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA709CA4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA707100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA709CA4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA707144(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupLayoutContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA707180(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD v83[2];
  uint64_t v84;
  uint64_t v85;

  v78 = a4;
  v6 = v5;
  v7 = v4;
  v74 = a1;
  v76 = type metadata accessor for FormatOption();
  v80 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v85 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C6838, (uint64_t (*)(uint64_t))sub_1BA709CA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v69 - v12;
  sub_1BA709CA4(0);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v77 = (uint64_t *)((char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = a2;
  v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets;
  swift_beginAccess();
  v19 = *(_QWORD *)(v18 + 8);
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 16);
  v79 = v7;
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v15);
LABEL_7:
    sub_1BA5C699C((uint64_t)v13, &qword_1ED3C6838, (uint64_t (*)(uint64_t))sub_1BA709CA4);
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v27 = v79;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  v73 = a3;
  v21 = v7[5];
  v22 = v7[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1BA6E35A8(v22, v21);
  if ((v24 & 1) != 0)
  {
    sub_1BA4C2DD8(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v16 + 72) * v23, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA709CA4);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v26 = v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, v25, 1, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
    goto LABEL_7;
  v29 = (uint64_t)v13;
  v30 = v77;
  sub_1BA5193C4(v29, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BA709CA4);
  v31 = v79;
  swift_beginAccess();
  v33 = v31[2];
  v32 = v31[3];
  swift_bridgeObjectRetain();
  sub_1BA709F80(v33, v32);
  swift_bridgeObjectRelease();
  v35 = v31[2];
  v34 = v31[3];
  swift_bridgeObjectRetain();
  v71 = sub_1BA70A468(v35, v34);
  swift_release();
  swift_bridgeObjectRelease();
  v36 = *v30;
  swift_beginAccess();
  v75 = v36;
  v37 = *(_QWORD *)(v36 + 72);
  v38 = *(_QWORD *)(v37 + 16);
  v39 = MEMORY[0x1E0DEE9D8];
  v72 = v6;
  if (v38)
  {
    v82 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v38, 0);
    v39 = v82;
    v40 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    v70 = v37;
    v41 = v37 + v40;
    v42 = *(_QWORD *)(v80 + 72);
    do
    {
      v43 = v85;
      sub_1BA4C2DD8(v41, v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v44 = swift_allocBox();
      sub_1BA5193C4(v43, v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v82 = v39;
      v47 = *(_QWORD *)(v39 + 16);
      v46 = *(_QWORD *)(v39 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1BA76B828(v46 > 1, v47 + 1, 1);
        v39 = v82;
      }
      *(_QWORD *)(v39 + 16) = v47 + 1;
      *(_QWORD *)(v39 + 8 * v47 + 32) = v44 | 0xA000000000000004;
      v41 += v42;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    v6 = v72;
    v26 = v78;
    v31 = v79;
  }
  swift_beginAccess();
  v48 = v31[11];
  v49 = *(_QWORD *)(v48 + 16);
  v50 = MEMORY[0x1E0DEE9D8];
  if (v49)
  {
    v81 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v49, 0);
    v50 = v81;
    v51 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    v70 = v48;
    v52 = v48 + v51;
    v80 = *(_QWORD *)(v80 + 72);
    do
    {
      v53 = v85;
      sub_1BA4C2DD8(v52, v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v54 = swift_allocBox();
      sub_1BA5193C4(v53, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v81 = v50;
      v57 = *(_QWORD *)(v50 + 16);
      v56 = *(_QWORD *)(v50 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1BA76B828(v56 > 1, v57 + 1, 1);
        v50 = v81;
      }
      *(_QWORD *)(v50 + 16) = v57 + 1;
      *(_QWORD *)(v50 + 8 * v57 + 32) = v54 | 0x5000000000000004;
      v52 += v80;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
    v6 = v72;
    v26 = v78;
  }
  v81 = v39;
  sub_1BA7082C0(v50);
  sub_1BA70B0DC(v81);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v58 = swift_bridgeObjectRetain();
  sub_1BA707E14(v58, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v59 = swift_bridgeObjectRetain();
  v60 = sub_1BA70B5E0(v59);
  swift_release();
  swift_bridgeObjectRelease();
  v61 = v75;
  swift_beginAccess();
  v62 = *(_QWORD *)(v61 + 64);
  v63 = *(_QWORD *)(v62 + 16);
  if (v63)
  {
    swift_bridgeObjectRetain();
    v64 = 32;
    v65 = v73;
    v66 = v74;
    while (1)
    {
      v67 = *(_OWORD *)(v62 + v64);
      v68 = *(_OWORD *)(v62 + v64 + 16);
      v84 = *(_QWORD *)(v62 + v64 + 32);
      v83[0] = v67;
      v83[1] = v68;
      sub_1BA7086BC((uint64_t)v83);
      v26(v66, v60, v65);
      if (v6)
        break;
      sub_1BA708680((uint64_t)v83);
      v64 += 40;
      if (!--v63)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA4A2E80((uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BA709CA4);
    return sub_1BA708680((uint64_t)v83);
  }
  else
  {
LABEL_25:
    swift_release();
    return sub_1BA4A2E80((uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BA709CA4);
  }
}

uint64_t sub_1BA707940(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v11 = v10 - 1;
  if (!(_DWORD)v10)
    v11 = 0;
  if (v10 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = *(_DWORD *)(v9 + 84);
  if (v12 <= v7)
    v13 = v7;
  else
    v13 = v12;
  if ((_DWORD)v10)
    v14 = 7;
  else
    v14 = 8;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = v15 | 7;
  v17 = (v15 | 7) + *(_QWORD *)(v6 + 64);
  v18 = v15 + 16;
  v19 = *(_QWORD *)(v9 + 64);
  v20 = v19 + v15;
  if (v13 < a2)
  {
    if ((((v17 & ~v16)
         + ((((((((v14 + v19 + ((v20 + ((v20 + (v18 & ~v15)) & ~v15)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v21 = 2;
    else
      v21 = a2 - v13 + 1;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    __asm { BR              X6 }
  }
  if (v7 >= v12)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v25 = a1;
    v10 = v7;
    v8 = v5;
    return v26(v25, v10, v8);
  }
  v25 = (v18 + ((v17 + a1) & ~v16)) & ~v15;
  if (v10 >= 0x7FFFFFFF)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v26(v25, v10, v8);
  }
  v27 = (v20 + ((v20 + v25) & ~v15)) & ~v15;
  if (v11 == v12)
  {
    v28 = (*(uint64_t (**)(uint64_t))(v9 + 48))(v27);
    if (v28 >= 2)
      return v28 - 1;
    else
      return 0;
  }
  else
  {
    if ((_DWORD)v10)
      v29 = *(_QWORD *)(v9 + 64);
    else
      v29 = v19 + 1;
    v30 = *(_QWORD *)((v27 + v29 + 7) & 0xFFFFFFFFFFFFF8);
    if (v30 >= 0xFFFFFFFF)
      LODWORD(v30) = -1;
    return (v30 + 1);
  }
}

void sub_1BA707B6C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  v15 = *(_QWORD *)(v10 + 64);
  if (v11)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = v15 + 1;
  v14 = *(unsigned __int8 *)(v10 + 80);
  if (v13 < a3)
  {
    if ((((v14 | 7) + *(_DWORD *)(v7 + 64)) & ~(v14 | 7))
       + (((((((((_DWORD)v16
               + (((_DWORD)v15
                 + (_DWORD)v14
                 + (((_DWORD)v15 + (_DWORD)v14 + (((_DWORD)v14 + 16) & ~(_DWORD)v14)) & ~(_DWORD)v14)) & ~(_DWORD)v14)
               + 7) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == -8)
      v17 = a3 - v13 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v9 = v18;
    else
      v9 = 0;
  }
  if (a2 > v13)
  {
    if ((((v14 | 7) + *(_DWORD *)(v7 + 64)) & ~(v14 | 7))
       + (((((((((_DWORD)v16
               + (((_DWORD)v15
                 + (_DWORD)v14
                 + (((_DWORD)v15 + (_DWORD)v14 + (((_DWORD)v14 + 16) & ~(_DWORD)v14)) & ~(_DWORD)v14)) & ~(_DWORD)v14)
               + 7) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != -8)
    {
      v19 = ~v13 + a2;
      bzero(a1, (((v14 | 7) + *(_QWORD *)(v7 + 64)) & ~(v14 | 7))+ ((((((((v16 + ((v15 + v14 + ((v15 + v14 + ((v14 + 16) & ~v14)) & ~v14)) & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_1BA707CE0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unsigned int a4@<W8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  unsigned int v19;
  int v20;
  void (*v21)(unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)(v13 + v16) = 0;
  if ((_DWORD)v12)
  {
    if (v15 >= a4)
    {
      v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v22 = v13;
      v23 = v12;
      a2 = v15;
      a3 = v14;
LABEL_7:
      v21(v22, v23, a2, a3);
      return;
    }
    v18 = (_DWORD *)((v9 + v13) & a1);
    if (a4 < v12)
    {
      v19 = (((((((v10 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8;
      if (v19 != -8)
      {
        v20 = ~a4 + v12;
        bzero(v18, v19 + 8);
        *v18 = v20;
      }
      return;
    }
    v22 = ((unint64_t)v18 + v8) & v11;
    if (a2 >= 0x7FFFFFFF)
    {
      v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v23 = v12;
      goto LABEL_7;
    }
    v22 = (v7 + ((v7 + v22) & v11)) & v11;
    if (v5 == a4)
    {
      v23 = (v12 + 1);
      v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      goto LABEL_7;
    }
    if ((v12 & 0x80000000) != 0)
      v24 = v12 ^ 0x80000000;
    else
      v24 = (v12 - 1);
    *(_QWORD *)((v22 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = v24;
  }
}

uint64_t sub_1BA707E14(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  char v59[8];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[4];

  v3 = v2;
  v6 = *v3;
  v7 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16) && (a2 & 1) == 0)
    goto LABEL_5;
  v10 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  if ((sub_1BA70BA78(v10, a1) & 1) == 0)
  {
    if ((a2 & 1) == 0)
    {
      v47 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = sub_1BA6E4124(a1, v10);
      goto LABEL_9;
    }
LABEL_7:
    v47 = v6;
    swift_bridgeObjectRetain();
LABEL_9:
    sub_1BA4C2DD8((uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v11 = *((_BYTE *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    v12 = *((_BYTE *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    v13 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v14 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v46 = v9;
    v38 = v14;
    v43 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    v42 = *(void **)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    v41 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    v15 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    v40 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    v39 = v15;
    v59[0] = v11;
    v59[1] = v12;
    v60 = v13;
    v61 = v14;
    v62 = v43;
    v63 = v42;
    v64 = v41;
    v65 = v40;
    v66 = v15;
    v51 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    v52 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v16 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    v17 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    v18 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v67[2] = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v67[3] = v18;
    v67[0] = v16;
    v67[1] = v17;
    v49 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    v50 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BA70AF2C((uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v58, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v19 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    v44 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    v48 = v19;
    v21 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    v20 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    v22 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    v35 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    v23 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    v24 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(_QWORD *)&v53 = v21;
    *((_QWORD *)&v53 + 1) = v20;
    v54 = v35;
    v55 = v22;
    v56 = v23;
    v57 = v24;
    v37 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    v25 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    v45 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    v36 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    sub_1BA70A884(v43, v42);
    swift_retain();
    swift_retain();
    sub_1BA70A8DC((uint64_t)v67);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v21, v20);
    v26 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v37;
    swift_bridgeObjectRetain();
    v28 = sub_1BB86DD74();
    swift_release();
    v30 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v29 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    v32 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    v31 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BB29AEAC((uint64_t)v46, v59, v51, v52, v67, a1, v49, v50, (uint64_t)v58, v44, v48, &v53, v27, v45, v26, v28, v30, v29, v32,
             v31);
  }
  if ((a2 & 1) != 0)
    goto LABEL_7;
LABEL_5:
  swift_retain();
  return (uint64_t)v3;
}

uint64_t sub_1BA7082C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BB38E71C(isUniquelyReferenced_nonNull_native, v15, 1, v3, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  sub_1BA76B9F0(0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for GroupLayoutBindingContext()
{
  uint64_t result;

  result = qword_1ED3B7BB0;
  if (!qword_1ED3B7BB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA708474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  __int128 v14;
  __int128 v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  _OWORD v25[2];
  uint64_t v26;

  v10 = sub_1BA710928(a3, a2, a4);
  if (v10)
  {
    v11 = v10;
    sub_1BB86D588();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      for (i = 32; ; i += 40)
      {
        v14 = *(_OWORD *)(v11 + i);
        v15 = *(_OWORD *)(v11 + i + 16);
        v26 = *(_QWORD *)(v11 + i + 32);
        v25[0] = v14;
        v25[1] = v15;
        sub_1BA7086BC((uint64_t)v25);
        sub_1BA7086F8(a1, a4, a5);
        if (v5)
          break;
        sub_1BA708680((uint64_t)v25);
        if (!--v12)
          return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return sub_1BA708680((uint64_t)v25);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_unownedRetainStrong();
    swift_beginAccess();
    v17 = *(_BYTE *)(a3 + 48);
    result = swift_release();
    if ((v17 & 1) != 0)
    {
      swift_unownedRetainStrong();
      swift_beginAccess();
      v19 = *(_QWORD *)(a3 + 56);
      v18 = *(_QWORD *)(a3 + 64);
      swift_bridgeObjectRetain();
      swift_release();
      type metadata accessor for FormatLayoutError();
      sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v21 = v20;
      if (v18)
      {
        v22 = swift_allocError();
        v24 = v23;
        swift_unownedRetainStrong();
        *v24 = a3;
        swift_storeEnumTagMultiPayload();
        *v21 = v19;
        v21[1] = v18;
        v21[2] = v22;
      }
      else
      {
        swift_unownedRetainStrong();
        *v21 = a3;
      }
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1BA708680(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA7086BC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA7086F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v30[5];
  _BYTE v31[32];
  uint64_t v32;

  v4 = (uint64_t)v3;
  v30[4] = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(v6 + 24);
    sub_1BB68036C(v3, &v32);
    sub_1BB68036C(&v32, v30);
    sub_1BB57F380();
    v10 = v9;
    v12 = v11;
    sub_1BB68036C(&v32, v30);
    v13 = sub_1BB57DC18();
    v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    sub_1BA6A09F0(v4 + 8, (uint64_t)v31, &qword_1EF2CA060, (uint64_t)&type metadata for FormatSourceMap);
    sub_1BA6A09F0((uint64_t)v31, (uint64_t)v30, &qword_1EF2CA060, (uint64_t)&type metadata for FormatSourceMap);
    type metadata accessor for FormatNodeDebugRecord();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v31);
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v31);
    swift_retain();
    swift_retain();
    v15 = sub_1BAF200B0(v10, v12, v13, v14, v30);
    if (v15)
    {
      swift_beginAccess();
      v16 = swift_retain();
      MEMORY[0x1BCCE36AC](v16);
      if (*(_QWORD *)((*(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_endAccess();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA73D624((uint64_t)v31);
  }
  else
  {
    v15 = 0;
  }
  v17 = *(_QWORD *)(a3 + 80);
  v18 = *(_QWORD *)(v4 + 8);
  v19 = *(_QWORD *)(v4 + 16);
  v21 = *(_QWORD *)(v4 + 24);
  v20 = *(_QWORD *)(v4 + 32);
  if (v17)
  {
    if (v19)
    {
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a2;
      *(_QWORD *)(v22 + 24) = v18;
      *(_QWORD *)(v22 + 32) = v19;
      *(_QWORD *)(v22 + 40) = v21;
      *(_QWORD *)(v22 + 48) = v20;
      v23 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v22 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v22 + 72) = v23;
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v22 + 96) = v17;
      *(_QWORD *)(v22 + 104) = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BA7086BC(v4);
      sub_1BA7099D4();
      sub_1BA709A78();
      swift_retain();
      sub_1BB86D480();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_14;
    }
  }
  else if (v19)
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = a2;
    *(_QWORD *)(v24 + 24) = v18;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v21;
    *(_QWORD *)(v24 + 48) = v20;
    v25 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)v4;
    *(_OWORD *)(v24 + 72) = v25;
    *(_QWORD *)(v24 + 88) = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(v24 + 96) = a3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1BA7086BC(v4);
    sub_1BA7099D4();
    sub_1BA709A78();
    swift_retain();
    sub_1BB86D480();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)v4;
  swift_retain();
  sub_1BA708AD0(a1, a2, a3, v26);
LABEL_14:
  result = swift_release();
  if (v15)
  {
    if (*(_BYTE *)(v15 + 96) == 1)
    {
      *(CFTimeInterval *)(v15 + 88) = CACurrentMediaTime();
      *(_BYTE *)(v15 + 96) = 0;
    }
    return swift_release();
  }
  return result;
}

void sub_1BA708AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA708B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  sub_1BA7179E4(v2, v1, v0, (uint64_t (*)(_QWORD, double))sub_1BA7099D4, sub_1BA709A78, (uint64_t)sub_1BA5729AC, MEMORY[0x1E0DB5A98]);
  return swift_release();
}

void sub_1BA7099D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4568)
  {
    type metadata accessor for FormatLayoutAttributes();
    sub_1BA7399D0();
    sub_1BA50AD30(&qword_1ED3C9F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v0 = sub_1BB86D594();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4568);
  }
}

uint64_t sub_1BA709A78()
{
  return sub_1BA4A2870(&qword_1ED3C4560, (uint64_t (*)(uint64_t))sub_1BA7099D4, MEMORY[0x1E0DB5B88]);
}

uint64_t sub_1BA709A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA709CA4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA709AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  int v21;
  size_t v22;
  size_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (_QWORD *)((v10 + a1) & ~(v9 | 7));
  v12 = (_QWORD *)((v10 + a2) & ~(v9 | 7));
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = ((unint64_t)v11 + v9 + 16) & ~v9;
  v14 = ((unint64_t)v12 + v9 + 16) & ~v9;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v15(v13, v14, v7);
  v16 = *(_QWORD *)(v8 + 64);
  v17 = (v16 + v9 + v13) & ~v9;
  v18 = (v16 + v9 + v14) & ~v9;
  v15(v17, v18, v7);
  v19 = (void *)((v16 + v9 + v17) & ~v9);
  v20 = (const void *)((v16 + v9 + v18) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7))
  {
    v21 = *(_DWORD *)(v8 + 84);
    if (v21)
      v22 = v16;
    else
      v22 = v16 + 1;
    memcpy(v19, v20, v22);
  }
  else
  {
    v15((uint64_t)v19, (uint64_t)v20, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    v21 = *(_DWORD *)(v8 + 84);
  }
  if (v21)
    v23 = v16;
  else
    v23 = v16 + 1;
  v24 = (_QWORD *)(((unint64_t)v19 + v23 + 7) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA709CA4(uint64_t a1)
{
  sub_1BA5AA2AC(a1, &qword_1ED3BCCC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, sub_1BA8CD1C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
}

_QWORD *initializeWithCopy for FormatStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FormatType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA709DE8(v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  return a1;
}

uint64_t sub_1BA709DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  int v7;
  uint64_t result;
  char v13;

  v7 = a7 >> 6;
  if (v7 == 2)
    return swift_bridgeObjectRetain();
  if (v7 != 1)
  {
    if (a7 >> 6)
      return result;
    return swift_bridgeObjectRetain();
  }
  v13 = a7 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA7261E0(a3, a4, a5, a6, v13);
}

uint64_t initializeWithCopy for FormatGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 <= 2)
  {
    *(_OWORD *)(a1 + 64) = *v7;
  }
  else
  {
    *(_BYTE *)(a1 + 64) = *(_BYTE *)v7;
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA709F80(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[40];
  char v55[8];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[4];

  v3 = v2;
  v48 = a2;
  v44 = *v2;
  v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v5);
  v47 = (uint64_t)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v47, v7);
  v8 = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v12 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v15 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v55[0] = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v55[1] = v8;
  v56 = v10;
  v57 = v9;
  v58 = v11;
  v59 = v12;
  v60 = v13;
  v61 = v14;
  v62 = v15;
  v46 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  swift_bridgeObjectRetain();
  sub_1BA70A884(v11, v12);
  swift_retain();
  v45 = sub_1BA70A34C(a1, v48);
  v16 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v63[0] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v63[1] = v16;
  v17 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v18 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v63[2] = v17;
  v63[3] = v18;
  v19 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BA70AF2C((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v54, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v23 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v24 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v25 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v26 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v27 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v37[0] = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v49 = v23;
  *((_QWORD *)&v49 + 1) = v24;
  v50 = v25;
  v51 = v26;
  v52 = v27;
  v53 = v37[0];
  v40 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v28 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  v43 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v38 = v28;
  v39 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v29 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  v42 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v37[1] = v29;
  v30 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v31 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v41 = v30;
  v44 = swift_allocObject();
  sub_1BA70A8DC((uint64_t)v63);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v23, v24);
  swift_bridgeObjectRetain();
  v32 = v40;
  swift_bridgeObjectRetain();
  v33 = v38;
  swift_bridgeObjectRetain();
  v34 = v39;
  swift_retain();
  v35 = swift_bridgeObjectRetain();
  return sub_1BB29AEAC(v47, v55, v46, (uint64_t)v45, v63, v48, v19, v20, (uint64_t)v54, v22, v21, &v49, v32, v43, v33, v34, v42, v35, v41,
           v31);
}

_QWORD *sub_1BA70A34C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  if (v2[3])
  {
    if (!a2)
    {
      swift_retain();
      return v3;
    }
    v17 = v2[2];
    v18 = v2[3];
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v6);
    sub_1BB872AFC(v7);
    v9 = v2[4];
    v8 = v2[5];
    v10 = v3[6];
    v11 = v3[7];
    v3 = (_QWORD *)swift_allocObject();
    v3[2] = v17;
    v3[3] = v18;
    v3[4] = v9;
    v3[5] = v8;
    v3[6] = v10;
    v3[7] = v11;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = v2[4];
    v12 = v2[5];
    v14 = v3[6];
    v15 = v3[7];
    v3 = (_QWORD *)swift_allocObject();
    v3[2] = a1;
    v3[3] = a2;
    v3[4] = v13;
    v3[5] = v12;
    v3[6] = v14;
    v3[7] = v15;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1BA70A468(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[40];
  char v55[8];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[4];

  v3 = v2;
  v48 = a2;
  v44 = *v2;
  v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v5);
  v47 = (uint64_t)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v47, v7);
  v8 = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v12 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v15 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v55[0] = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v55[1] = v8;
  v56 = v10;
  v57 = v9;
  v58 = v11;
  v59 = v12;
  v60 = v13;
  v61 = v14;
  v62 = v15;
  v46 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  swift_bridgeObjectRetain();
  sub_1BA70A884(v11, v12);
  swift_retain();
  v45 = sub_1BA70AFC8(a1, v48);
  v16 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v63[0] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v63[1] = v16;
  v17 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v18 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v63[2] = v17;
  v63[3] = v18;
  v19 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BA70AF2C((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v54, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v23 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v24 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v25 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v26 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v27 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v37[0] = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v49 = v23;
  *((_QWORD *)&v49 + 1) = v24;
  v50 = v25;
  v51 = v26;
  v52 = v27;
  v53 = v37[0];
  v40 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v28 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  v43 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v38 = v28;
  v39 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v29 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  v42 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v37[1] = v29;
  v30 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v31 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v41 = v30;
  v44 = swift_allocObject();
  sub_1BA70A8DC((uint64_t)v63);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v23, v24);
  swift_bridgeObjectRetain();
  v32 = v40;
  swift_bridgeObjectRetain();
  v33 = v38;
  swift_bridgeObjectRetain();
  v34 = v39;
  swift_retain();
  v35 = swift_bridgeObjectRetain();
  return sub_1BB29AEAC(v47, v55, v46, (uint64_t)v45, v63, v48, v19, v20, (uint64_t)v54, v22, v21, &v49, v32, v43, v33, v34, v42, v35, v41,
           v31);
}

uint64_t sub_1BA70A834(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA70A884(uint64_t result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA70A8DC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA70A964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupLayoutContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatNodeContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70AF8C(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

void sub_1BA70AB94(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BA70ABF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for GroupLayoutContext()
{
  uint64_t result;

  result = qword_1ED3B5678;
  if (!qword_1ED3B5678)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)(a2 + v11);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(a2 + v11 + 16);
  *(_WORD *)(v12 + 17) = *(_WORD *)(a2 + v11 + 17);
  *(_BYTE *)(v12 + 19) = *(_BYTE *)(a2 + v11 + 19);
  *(_DWORD *)(v12 + 20) = *(_DWORD *)(a2 + v11 + 20);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  if (v14 >= 2)
    v14 = swift_bridgeObjectRetain();
  *(_QWORD *)(v12 + 24) = v14;
  v15 = type metadata accessor for FeedLayoutSolverOptions(0);
  v16 = *(int *)(v15 + 36);
  v17 = (void *)(v12 + v16);
  v18 = (const void *)(v13 + v16);
  v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1BA914C98();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_QWORD *)(v12 + *(int *)(v15 + 40)) = *(_QWORD *)(v13 + *(int *)(v15 + 40));
  v23 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t destroy for GroupLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  if (*(_QWORD *)(v7 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v9 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1BA70AF2C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA5B089C(0, a3, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA70AF8C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA5B089C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

_QWORD *sub_1BA70AFC8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v3 = v2;
  v6 = v2[5];
  if (v6)
    v7 = a2 == 0;
  else
    v7 = 1;
  if (v7)
  {
    v9 = v3[2];
    v8 = v3[3];
    v10 = v3[6];
    v11 = v3[7];
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v9;
    v19[3] = v8;
    v19[4] = a1;
    v19[5] = a2;
    v19[6] = v10;
    v19[7] = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = v3[3];
    v13 = v3[2];
    v21 = v3[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v14);
    sub_1BB872AFC(v15);
    v16 = v6;
    v18 = v3[6];
    v17 = v3[7];
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v13;
    v19[3] = v12;
    v19[4] = v21;
    v19[5] = v16;
    v19[6] = v18;
    v19[7] = v17;
    swift_retain();
  }
  swift_bridgeObjectRetain();
  return v19;
}

uint64_t sub_1BA70B0DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[40];
  char v60[8];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[4];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) && (v8 = sub_1BA6E2510(a1)) != 0)
  {
    v49 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    v9 = v8;
    v35 = v8;
    sub_1BA4C2DD8((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v10 = *((_BYTE *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    v11 = *((_BYTE *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    v12 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v39 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v45 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    v44 = *(void **)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    v43 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    v13 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    v42 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    v41 = v13;
    v60[0] = v10;
    v60[1] = v11;
    v61 = v12;
    v62 = v39;
    v63 = v45;
    v64 = v44;
    v65 = v43;
    v66 = v42;
    v67 = v13;
    v52 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    v53 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v14 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    v15 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    v16 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v68[2] = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v68[3] = v16;
    v68[0] = v14;
    v68[1] = v15;
    v51 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BA70AF2C((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v59, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v17 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    v40 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    v50 = v17;
    v46 = v4;
    v48 = v7;
    v18 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    v20 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    v21 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    v22 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    v23 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(_QWORD *)&v54 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    v19 = v54;
    *((_QWORD *)&v54 + 1) = v18;
    v55 = v20;
    v56 = v21;
    v57 = v22;
    v58 = v23;
    v38 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    v24 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    v47 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    v36 = v24;
    v37 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v9;
    *(_QWORD *)(v25 + 24) = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1BA70A884(v45, v44);
    swift_retain();
    swift_retain();
    sub_1BA70A8DC((uint64_t)v68);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v19, v18);
    v26 = v36;
    swift_bridgeObjectRetain();
    v27 = v35;
    swift_retain();
    v28 = v38;
    swift_bridgeObjectRetain();
    v29 = sub_1BB86DD74();
    swift_release();
    v31 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v30 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    v33 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    v32 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BB29AEAC((uint64_t)v48, v60, v52, v53, v68, v49, v27, v51, (uint64_t)v59, v40, v50, &v54, v28, v47, v26, v29, v31, v30, v33,
             v32);
  }
  else
  {
    swift_retain();
  }
  return (uint64_t)v2;
}

uint64_t destroy for FeedLayoutCacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v4 = a1 + *(int *)(a2 + 76);
  v5 = sub_1BB86D93C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1BA70B5E0(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[48];
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];

  v2 = v1;
  v50 = *v2;
  v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_3;
LABEL_5:
    swift_retain();
    return (uint64_t)v2;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  v47 = v6;
  sub_1BA4C2DD8((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v7 = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v8 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v11 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v58[0] = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v58[1] = v7;
  v59 = v9;
  v60 = v8;
  v61 = v10;
  v62 = v11;
  v63 = v12;
  v64 = v13;
  v65 = v14;
  v49 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v15 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v16 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v17 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v18 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v46 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v66[2] = v17;
  v66[3] = v18;
  v51 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v66[0] = v15;
  v66[1] = v16;
  v45 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  *(_QWORD *)&v52 = a1;
  swift_bridgeObjectRetain();
  sub_1BA70A884(v10, v11);
  swift_retain();
  swift_retain();
  sub_1BA70A8DC((uint64_t)v66);
  sub_1BA4B07F0(0, &qword_1ED3C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA767F68();
  sub_1BA4A2870(&qword_1ED3BCBD0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t)&protocol conformance descriptor for FormatBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v19 = v45;
  swift_bridgeObjectRetain();
  v20 = sub_1BB872BBC();
  v45 = sub_1BA768518(v20, v19);
  sub_1BA70AF2C((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v57, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v23 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v52 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v24 = v52;
  *((_QWORD *)&v52 + 1) = v23;
  v53 = v25;
  v54 = v26;
  v55 = v27;
  v56 = v28;
  v41 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v39 = v29;
  v40 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  v43 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v31 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v32 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v42 = v31;
  v50 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v24, v23);
  swift_bridgeObjectRetain();
  v33 = v41;
  swift_bridgeObjectRetain();
  v34 = v39;
  swift_bridgeObjectRetain();
  v35 = v40;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1BB29AEAC((uint64_t)v47, v58, v49, v48, v66, v46, v51, v45, (uint64_t)v57, v21, v22, &v52, v33, v44, v34, v35, v43, v30, v42,
           v32);
}

uint64_t sub_1BA70BA78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t i;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (*(_QWORD *)(a1 + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v3 = a2;
  v4 = a1;
  v31 = a2 + 56;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v30 = (unint64_t)(63 - v5) >> 6;
  v32 = a1 + 56;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v12)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (i << 6);
      v12 = i;
      if (!*(_QWORD *)(v4 + 16))
        goto LABEL_40;
      goto LABEL_25;
    }
    v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v30)
      goto LABEL_41;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v12 = i + 1;
    if (!v14)
    {
      v12 = i + 2;
      if (i + 2 >= v30)
        goto LABEL_41;
      v14 = *(_QWORD *)(v31 + 8 * v12);
      if (!v14)
      {
        v12 = i + 3;
        if (i + 3 >= v30)
          goto LABEL_41;
        v14 = *(_QWORD *)(v31 + 8 * v12);
        if (!v14)
          break;
      }
    }
LABEL_24:
    v7 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
    if (!*(_QWORD *)(v4 + 16))
    {
LABEL_40:
      v2 = 0;
      goto LABEL_42;
    }
LABEL_25:
    v16 = v3;
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v19 = *v17;
    v18 = v17[1];
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v20 = sub_1BB874608();
    v21 = v4;
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = v20 & ~v22;
    if (((*(_QWORD *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_39;
    v24 = *(_QWORD *)(v21 + 48);
    v25 = (_QWORD *)(v24 + 16 * v23);
    v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_1BB874398() & 1) == 0)
    {
      v27 = ~v22;
      while (1)
      {
        v23 = (v23 + 1) & v27;
        if (((*(_QWORD *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          break;
        v28 = (_QWORD *)(v24 + 16 * v23);
        v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_1BB874398() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      v2 = 0;
LABEL_42:
      sub_1BA6EBD18();
      return v2;
    }
LABEL_7:
    result = swift_bridgeObjectRelease();
    v3 = v16;
    v4 = v21;
  }
  v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_41:
    v2 = 1;
    goto LABEL_42;
  }
  v14 = *(_QWORD *)(v31 + 8 * v15);
  if (v14)
  {
    v12 = i + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v30)
      goto LABEL_41;
    v14 = *(_QWORD *)(v31 + 8 * v12);
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for FormatItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = (_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 0xF)
  {
    *(_QWORD *)(a1 + 48) = *v7;
    *(_QWORD *)(a1 + 56) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
  }
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA70BE5C()
{
  return swift_retain();
}

uint64_t destroy for GroupLayoutBindingContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void FormatAdjustment.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA70BF54()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain();
  swift_retain();
  FormatTextNodeStyle.bind(binder:context:)(v1, v0);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = a3[13];
  v16 = a2 + v9;
  v17 = a1 + v9;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = sub_1BB86D8A0();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v17, v16, v10);
  v11 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA70C72C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  unint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  void *v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  int v141;
  int EnumCaseMultiPayload;
  uint64_t v143;
  uint64_t result;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  unint64_t v170;
  unint64_t v171;

  v164 = a3;
  v169 = a4;
  sub_1BA70E200();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v166 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v163 = (uint64_t)&v147 - v17;
  MEMORY[0x1E0C80A78](v18);
  v162 = (uint64_t)&v147 - v19;
  MEMORY[0x1E0C80A78](v20);
  v161 = (uint64_t)&v147 - v21;
  MEMORY[0x1E0C80A78](v22);
  v158 = (char *)&v147 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v147 - v25;
  MEMORY[0x1E0C80A78](v27);
  v160 = (uint64_t)&v147 - v28;
  MEMORY[0x1E0C80A78](v29);
  v157 = (char *)&v147 - v30;
  MEMORY[0x1E0C80A78](v31);
  v159 = (char *)&v147 - v32;
  MEMORY[0x1E0C80A78](v33);
  v155 = (char *)&v147 - v34;
  MEMORY[0x1E0C80A78](v35);
  v156 = (uint64_t)&v147 - v36;
  MEMORY[0x1E0C80A78](v37);
  v153 = (char *)&v147 - v38;
  MEMORY[0x1E0C80A78](v39);
  v154 = (uint64_t)&v147 - v40;
  MEMORY[0x1E0C80A78](v41);
  v150 = (char *)&v147 - v42;
  MEMORY[0x1E0C80A78](v43);
  v149 = (char *)&v147 - v44;
  MEMORY[0x1E0C80A78](v45);
  v148 = (char *)&v147 - v46;
  MEMORY[0x1E0C80A78](v47);
  v152 = (char *)&v147 - v48;
  MEMORY[0x1E0C80A78](v49);
  v151 = (char *)&v147 - v50;
  MEMORY[0x1E0C80A78](v51);
  v147 = (char *)&v147 - v52;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v147 - v54;
  v56 = *a1;
  v57 = *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40);
  v165 = (char *)a2;
  v58 = *(_QWORD **)(a2 + v57);
  v171 = v56;
  FormatLayoutValue.identifier.getter();
  v60 = v59;
  v62 = v61;
  swift_beginAccess();
  v63 = v58[3];
  if (*(_QWORD *)(v63 + 16) && (v64 = sub_1BA6E35A8(v60, v62), (v65 & 1) != 0))
  {
    v66 = v64;
    v168 = v11;
    v170 = v56;
    v67 = (uint64_t)v55;
    v68 = *(_QWORD *)(v63 + 56);
    v69 = type metadata accessor for FormatNodeStateData.Data();
    v70 = v26;
    v71 = v13;
    v72 = *(_QWORD *)(v69 - 8);
    v73 = v68 + *(_QWORD *)(v72 + 72) * v66;
    v56 = v170;
    sub_1BA4C2DD8(v73, v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v74 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56);
    v13 = v71;
    v26 = v70;
    v55 = (char *)v67;
    v75 = v67;
    v11 = v168;
    v74(v75, 0, 1, v69);
  }
  else
  {
    v76 = type metadata accessor for FormatNodeStateData.Data();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v55, 1, 1, v76);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  v171 = v56;
  FormatLayoutValue.identifier.getter();
  v78 = v77;
  v80 = v79;
  swift_beginAccess();
  v81 = v58[4];
  if (*(_QWORD *)(v81 + 16))
  {
    swift_bridgeObjectRetain();
    v82 = sub_1BA6E35A8(v78, v80);
    if ((v83 & 1) != 0)
    {
      v170 = *(_QWORD *)(*(_QWORD *)(v81 + 56) + 8 * v82);
      swift_retain();
    }
    else
    {
      v170 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v170 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  v171 = v56;
  FormatLayoutValue.identifier.getter();
  v85 = v84;
  v87 = v86;
  swift_beginAccess();
  v88 = v58[5];
  if (*(_QWORD *)(v88 + 16))
  {
    swift_bridgeObjectRetain();
    v89 = sub_1BA6E35A8(v85, v87);
    if ((v90 & 1) != 0)
    {
      v91 = *(_QWORD *)(v88 + 56) + 24 * v89;
      v93 = *(void **)v91;
      v92 = *(_QWORD *)(v91 + 8);
      v94 = *(_QWORD *)(v91 + 16);
      swift_bridgeObjectRetain();
      v168 = v94;
      swift_bridgeObjectRetain();
    }
    else
    {
      v93 = 0;
      v92 = 0;
      v168 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v93 = 0;
    v92 = 0;
    v168 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  v95 = *(int *)(v11 + 48);
  sub_1BA5E01A4((uint64_t)v55, (uint64_t)v13, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v167 = v95;
  *(_QWORD *)&v13[v95] = v56;
  v96 = (v56 >> 59) & 0x1E | (v56 >> 2) & 1;
  switch(v96)
  {
    case 0:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      v97 = type metadata accessor for FormatNodeStateData.Data();
      v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 48))(v13, 1, v97);
      v99 = (unint64_t *)v169;
      if (v98 == 1)
        goto LABEL_87;
      v100 = v162;
      sub_1BA5E01A4((uint64_t)v13, v162, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 4)
        goto LABEL_98;
      sub_1BB67B8B0((uint64_t)v55, v56, (uint64_t)v165, v99, a5, a6);
      goto LABEL_75;
    case 1:
      v101 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v13, 1, v101) == 1)
        goto LABEL_22;
      v26 = v151;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v151, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (EnumCaseMultiPayload != 10)
        goto LABEL_85;
      sub_1BA73663C((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
      swift_release();
      sub_1BA8E94B8((uint64_t)v93, v92);
      sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v121 = (uint64_t)v26;
      goto LABEL_76;
    case 2:
      swift_retain();
      sub_1BA761028(v56, (uint64_t)v165, (uint64_t)v93, v92, v168, v170, v169);
      swift_release();
      sub_1BA8E94B8((uint64_t)v93, v92);
      goto LABEL_24;
    case 3:
      v102 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v13, 1, v102) == 1)
        goto LABEL_22;
      v26 = v150;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v150, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 3)
        goto LABEL_84;
      swift_retain();
      swift_release();
      v103 = (uint64_t)v93;
      sub_1BB67A2A8((uint64_t)v55, v56, (uint64_t)v164, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_81;
    case 4:
      v104 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v13, 1, v104) == 1)
        goto LABEL_22;
      v26 = v149;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v149, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 2)
        goto LABEL_84;
      swift_retain();
      swift_release();
      v103 = (uint64_t)v93;
      sub_1BA749BE8((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_81;
    case 5:
      v105 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48))(v13, 1, v105) == 1)
        goto LABEL_22;
      v26 = v147;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v147, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_84;
      swift_retain();
      swift_release();
      v103 = (uint64_t)v93;
      sub_1BA749A4C((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_81;
    case 7:
      v106 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 48))(v13, 1, v106) == 1)
        goto LABEL_22;
      v26 = v152;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v152, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v107 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v107 != 6)
        goto LABEL_85;
      v108 = v26;
      v109 = (uint64_t)v93;
      sub_1BA65DCF8((uint64_t)v55, v56, (uint64_t)v165, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_55;
    case 9:
      v110 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 48))(v13, 1, v110) == 1)
        goto LABEL_22;
      v26 = v148;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v148, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 8)
        goto LABEL_84;
      swift_retain();
      swift_release();
      v103 = (uint64_t)v93;
      sub_1BB679BB8((uint64_t)v55, v56, (uint64_t)v165, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_81;
    case 10:
      v111 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v13, 1, v111) == 1)
        goto LABEL_22;
      v26 = v153;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v153, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v112 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v112 != 9)
        goto LABEL_85;
      v103 = (uint64_t)v93;
      sub_1BB67A774((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_81;
    case 11:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      v113 = type metadata accessor for FormatNodeStateData.Data();
      v114 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v13, 1, v113);
      v99 = (unint64_t *)v169;
      if (v114 == 1)
        goto LABEL_87;
      v115 = v154;
      sub_1BA5E01A4((uint64_t)v13, v154, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload())
        goto LABEL_71;
      sub_1BB67A4CC((uint64_t)v55, v56, (uint64_t)v164, (uint64_t *)v99);
      goto LABEL_62;
    case 12:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      v116 = type metadata accessor for FormatNodeStateData.Data();
      v117 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v13, 1, v116);
      v99 = (unint64_t *)v169;
      if (v117 == 1)
        goto LABEL_87;
      v115 = v156;
      sub_1BA5E01A4((uint64_t)v13, v156, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 11)
        goto LABEL_71;
      sub_1BB67A910((uint64_t)v55, v56, (uint64_t *)v99);
      goto LABEL_62;
    case 13:
      v118 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48))(v13, 1, v118) == 1)
        goto LABEL_22;
      v26 = v155;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v155, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 12)
        goto LABEL_84;
      swift_retain();
      swift_release();
      swift_bridgeObjectRelease();
      v103 = (uint64_t)v93;
      sub_1BB67AAFC((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
      goto LABEL_81;
    case 14:
      v119 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 48))(v13, 1, v119) == 1)
        goto LABEL_22;
      v26 = v159;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v159, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v120 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v120 != 13)
        goto LABEL_85;
      v108 = v26;
      v109 = (uint64_t)v93;
      sub_1BB67ACD0((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
LABEL_55:
      swift_release();
      sub_1BA8E94B8(v109, v92);
      sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v121 = (uint64_t)v108;
      goto LABEL_76;
    case 15:
      v122 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 48))(v13, 1, v122) == 1)
        goto LABEL_22;
      v26 = v157;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v157, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 14)
        goto LABEL_84;
      v123 = *(void **)v26;
      v124 = *((_QWORD *)v26 + 1);
      v165 = v55;
      v166 = v13;
      v125 = (void *)*((_QWORD *)v26 + 2);
      v126 = *((_QWORD *)v26 + 3);
      v127 = (void *)*((_QWORD *)v26 + 4);
      v128 = (void *)*((_QWORD *)v26 + 6);
      v163 = *((_QWORD *)v26 + 5);
      v164 = v127;
      v129 = v26[56];
      swift_retain();
      sub_1BA899748(v123, v124, v125, v126, v164, v163, v128, v129);
      v130 = (uint64_t)v165;
      sub_1BB67AF04((uint64_t)v165, v56, v170, v93, v92, v168, v169);
      swift_release();
      sub_1BA8E94B8((uint64_t)v93, v92);
      sub_1BA5C699C(v130, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v131 = (uint64_t)v166;
      swift_release();
      v132 = v131;
      return sub_1BA5C699C(v132, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    case 16:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      v133 = type metadata accessor for FormatNodeStateData.Data();
      v134 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 48))(v13, 1, v133);
      v99 = (unint64_t *)v169;
      if (v134 == 1)
        goto LABEL_87;
      v115 = v160;
      sub_1BA5E01A4((uint64_t)v13, v160, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 15)
        goto LABEL_71;
      sub_1BB67B0FC((uint64_t)v55, v56, (uint64_t *)v99);
LABEL_62:
      swift_release();
      sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v121 = v115;
      goto LABEL_76;
    case 17:
      v135 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 48))(v13, 1, v135) == 1)
        goto LABEL_22;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v26, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v136 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v136 != 17)
        goto LABEL_85;
      sub_1BB67B2E8((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
      swift_release();
      sub_1BA8E94B8((uint64_t)v93, v92);
      sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v121 = (uint64_t)v26;
      goto LABEL_76;
    case 18:
      v137 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 48))(v13, 1, v137) == 1)
        goto LABEL_22;
      v26 = v158;
      sub_1BA5E01A4((uint64_t)v13, (uint64_t)v158, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() == 18)
      {
        v143 = *((_QWORD *)v26 + 1);
        swift_retain();
        sub_1BA8979BC(v143);
        v103 = (uint64_t)v93;
        sub_1BB67B514((uint64_t)v55, v56, v170, (uint64_t)v93, v92, v168, v169);
LABEL_81:
        swift_release();
        sub_1BA8E94B8(v103, v92);
        sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        goto LABEL_82;
      }
LABEL_84:
      swift_retain();
LABEL_85:
      sub_1BA8E94B8((uint64_t)v93, v92);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
LABEL_86:
      v99 = (unint64_t *)v169;
      goto LABEL_87;
    case 19:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      v138 = type metadata accessor for FormatNodeStateData.Data();
      v139 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 48))(v13, 1, v138);
      v99 = (unint64_t *)v169;
      if (v139 == 1)
        goto LABEL_87;
      v115 = v161;
      sub_1BA5E01A4((uint64_t)v13, v161, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 19)
      {
LABEL_71:
        sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
        goto LABEL_87;
      }
      swift_release();
      sub_1BB67B6CC((uint64_t)v55, v56, (uint64_t)v164, v99);
      swift_release();
LABEL_24:
      sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      goto LABEL_82;
    case 20:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      v140 = type metadata accessor for FormatNodeStateData.Data();
      v141 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 48))(v13, 1, v140);
      v99 = (unint64_t *)v169;
      if (v141 == 1)
        goto LABEL_87;
      v100 = v163;
      sub_1BA5E01A4((uint64_t)v13, v163, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 20)
      {
LABEL_98:
        sub_1BA4A2E80(v100, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
LABEL_87:
        v145 = type metadata accessor for FormatNodeStateData.Data();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 48))(v13, 1, v145) != 1)
        {
          v146 = (uint64_t)v166;
          sub_1BA5E01A4((uint64_t)v13, (uint64_t)v166, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
          if (swift_getEnumCaseMultiPayload() == 7)
          {
            sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
            swift_release();
            goto LABEL_96;
          }
          sub_1BA4A2E80(v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
        }
        if (v96 != 8 && v96 != 20 && (v96 != 21 || v56 != 0xA000000000000004))
        {
          swift_release();
          sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
          *v99 = 0xF000000000000007;
          return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA70E200);
        }
        sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
LABEL_96:
        swift_release();
        swift_release();
        result = sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        *v99 = 0xF000000000000007;
        return result;
      }
      sub_1BB67BE24((uint64_t)v55, v56, v99);
LABEL_75:
      swift_release();
      sub_1BA5C699C((uint64_t)v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      v121 = v100;
LABEL_76:
      sub_1BA4A2E80(v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
LABEL_82:
      swift_release();
      v132 = (uint64_t)v13;
      return sub_1BA5C699C(v132, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    default:
LABEL_22:
      swift_retain();
      sub_1BA8E94B8((uint64_t)v93, v92);
      goto LABEL_86;
  }
}

uint64_t sub_1BA70DDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB31191C(a1, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline, 0x6461654864656546, 0xEC000000656E696CLL, a2);
}

uint64_t storeEnumTagSinglePayload for FeedHeadline()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedHeadline(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, int *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v42;
  uint64_t v43;
  char *__dst;
  int *v45;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v8 = a3[10];
    v9 = (_BYTE *)(a1 + v8);
    v10 = (uint64_t)a2 + v8;
    *v9 = *((_BYTE *)a2 + v8);
    v9[1] = *((_BYTE *)a2 + v8 + 1);
    v11 = type metadata accessor for FeedHeadline.State(0);
    v12 = *(int *)(v11 + 24);
    __dst = &v9[v12];
    v45 = (int *)v11;
    v13 = (char *)(v10 + v12);
    v14 = (int *)type metadata accessor for SharedItem();
    v43 = *((_QWORD *)v14 - 1);
    v15 = *(unsigned int (**)(char *, uint64_t, int *))(v43 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v15(v13, 1, v14))
    {
      v16 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(__dst, v13, v18);
      __dst[v14[5]] = v13[v14[5]];
      v19 = v14[6];
      v20 = *(void **)&v13[v19];
      *(_QWORD *)&__dst[v19] = v20;
      v21 = v14[7];
      v42 = &__dst[v21];
      v22 = &v13[v21];
      v23 = sub_1BB86C67C();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      v25 = v20;
      v24(v42, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56))(__dst, 0, 1, v14);
    }
    v9[v45[7]] = *(_BYTE *)(v10 + v45[7]);
    v9[v45[8]] = *(_BYTE *)(v10 + v45[8]);
    v9[v45[9]] = *(_BYTE *)(v10 + v45[9]);
    v9[v45[10]] = *(_BYTE *)(v10 + v45[10]);
    v26 = a3[11];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_1BB871B24();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = a3[12];
    v33 = (_QWORD *)((char *)v4 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    if (v35 >= 0x11)
    {
      *v33 = *v34;
      v33[1] = v35;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    v36 = a3[13];
    v37 = *(uint64_t *)((char *)a2 + v36);
    if (v37 >= 2)
    {
      if (v37 == 2)
      {
        *(_QWORD *)((char *)v4 + v36) = 2;
      }
      else
      {
        *(_QWORD *)((char *)v4 + v36) = v37;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)((char *)v4 + v36) = v37;
    }
    v38 = a3[14];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)((char *)v4 + v38) = v39;
    v40 = v39;
  }
  return v4;
}

uint64_t type metadata accessor for FormatViewData(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3BABF0);
}

void FormatLayoutValue.identifier.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA70E164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BA70E1B8()
{
  JUMPOUT(0x1BA70E16CLL);
}

uint64_t type metadata accessor for FormatGroupLayoutFactory.Bound()
{
  uint64_t result;

  result = qword_1ED3B7770;
  if (!qword_1ED3B7770)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA70E200()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C2168)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C2168);
  }
}

void sub_1BA70E27C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v6 = a2[3];
  v7 = a2[4];
  v34 = a2[2];
  v35 = a2[5];
  v8 = a2[6];
  v9 = a2[8];
  v10 = a2[9];
  v32 = a2[10];
  v33 = a2[7];
  swift_beginAccess();
  v24 = v2;
  v36 = v3;
  v23 = v4;
  v37 = v4;
  v31 = v5;
  v38 = v5;
  v39 = v34;
  v40 = v6;
  v30 = v6;
  v41 = v7;
  v42 = v35;
  v43 = v8;
  v44 = v33;
  v45 = v9;
  v46 = v10;
  v29 = v10;
  v47 = v32;
  sub_1BA6FA63C();
  if (!v27)
  {
    v26 = v8;
    v28 = v7;
    v11 = v2;
    swift_beginAccess();
    v12 = *(_QWORD *)(v2 + 96);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v14 = v23;
      v15 = v3;
      v16 = a1;
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v13; ++i)
      {
        v18 = *(_QWORD *)(v12 + 8 * i + 32);
        v36 = v15;
        v37 = v23;
        v38 = v31;
        v39 = v34;
        v40 = v30;
        v41 = v28;
        v42 = v35;
        v43 = v26;
        v44 = v33;
        v45 = v9;
        v46 = v29;
        v47 = v32;
        sub_1BA7196DC(v18);
        sub_1BA6FA7EC();
        sub_1BA719340(v18);
      }
      swift_bridgeObjectRelease_n();
      v3 = v15;
      v19 = v35;
      v11 = v24;
    }
    else
    {
      v14 = v23;
      v16 = a1;
      v19 = v35;
    }
    swift_beginAccess();
    v20 = *(_QWORD *)(v11 + 104);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain_n();
      v22 = v20 + 48;
      do
      {
        v48 = *(_QWORD *)(v22 - 16);
        v36 = v3;
        v37 = v14;
        v38 = v31;
        v39 = v34;
        v40 = v30;
        v41 = v28;
        v42 = v19;
        v43 = v26;
        v44 = v33;
        v45 = v9;
        v46 = v29;
        v47 = v32;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC(v16, &v36);
        v22 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v21;
        v19 = v35;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
  }
}

void FormatDimensionSizingValue.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA70E5D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v1)
          break;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA70E854@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionValue.init(from:)(a1, a2);
}

uint64_t FormatOptionValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  v28 = a2;
  sub_1BA7125BC(0);
  v26[3] = v3;
  MEMORY[0x1E0C80A78](v3);
  v26[2] = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA712634(0);
  v6 = v5;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  *(_QWORD *)&v27 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v26 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v13 = (void *)v29;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
    goto LABEL_10;
  v26[1] = v8;
  *(_QWORD *)&v29 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v27;
  v18 = v12;
  if ((v16 & 1) == 0)
  {
LABEL_8:
    sub_1BA70F328();
    v30 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v19 = sub_1BB8740EC();
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v21 = (unint64_t *)(v19 + 40);
  while (1)
  {
    v22 = *v21;
    if (*v21 >= 4)
      break;
    v21 += 2;
    if (!--v20)
      goto LABEL_7;
  }
  v23 = *(v21 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v14 = (void *)swift_allocError();
  *(_QWORD *)v24 = v23;
  *(_QWORD *)(v24 + 8) = v22;
  *(_QWORD *)(v24 + 16) = &unk_1E7268080;
  *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v23, v22);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v17);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v14);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA70F2E0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = type metadata accessor for FormatSelectorValue(0, a3, a4, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BA70F328()
{
  unint64_t result;

  result = qword_1ED3C7980;
  if (!qword_1ED3C7980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D03E8, &_s10CodingTypeON_161);
    atomic_store(result, (unint64_t *)&qword_1ED3C7980);
  }
  return result;
}

unint64_t sub_1BA70F36C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5F18;
  if (!qword_1ED3B5F18)
  {
    sub_1BA50CAA8(255, &qword_1ED3B5F20, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F18);
  }
  return result;
}

uint64_t sub_1BA70F3D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_BYTE *, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_1BA856968();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v56[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v60 = &v56[-v9];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v56[-v11];
  v13 = type metadata accessor for FormatOption();
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)&v56[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v59 = &v56[-v17];
  v18 = *(_QWORD *)v2;
  v19 = *(_QWORD *)(v2 + 8);
  v66 = *(_QWORD *)(v2 + 16);
  v63 = *(_QWORD *)(v2 + 24);
  v64 = a1;
  v20 = *(__int16 *)(v2 + 32);
  sub_1BB86DD80();
  swift_retain();
  swift_release();
  swift_bridgeObjectRetain();
  v69 = MEMORY[0x1E0DEE9E8];
  v65 = v18;
  LOBYTE(a1) = sub_1BA7143DC(v18, v19, &v69);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    v21 = *MEMORY[0x1E0DB4D68];
    v22 = sub_1BB86EB00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a2, v21, v22);
  }
  v58 = a2;
  v24 = v20;
  if (v20 < 0)
  {
    sub_1BA738818();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_BYTE *)(inited + 32) = v66;
    v31 = sub_1BA862600(inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    v32 = v65;
    FormatOptionCollection.subscript.getter(v65, v19, (uint64_t)v7);
    v33 = v61;
    v34 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48);
    v35 = v34(v7, 1, v62);
    v36 = v67;
    if (v35 == 1)
    {
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA856968);
      v37 = 1;
    }
    else
    {
      sub_1BA8569CC((uint64_t)v7, (uint64_t)v15);
      sub_1BB6B7DF4(v15, v31);
      if (v36)
      {
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        v39 = v32;
        v40 = v19;
        v41 = v66;
        v42 = v63;
        return sub_1BA636D30(v39, v40, v41, v42, v24);
      }
      sub_1BA8569CC((uint64_t)v15, (uint64_t)v60);
      v37 = 0;
    }
    v45 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    v46 = v60;
    v47 = v62;
    v45(v60, v37, 1, v62);
    swift_bridgeObjectRelease();
    sub_1BA636D30(v32, v19, v66, v63, v24);
    v34(v46, 1, v47);
    sub_1BB86EB0C();
    v52 = (uint64_t (*)(_QWORD))sub_1BA856968;
    v53 = (uint64_t)v46;
  }
  else
  {
    LODWORD(v60) = v20;
    swift_bridgeObjectRetain();
    v25 = v66;
    v26 = v63;
    v57 = v20 & 1;
    sub_1BA7114EC(v66, v63, v20 & 1);
    v27 = v67;
    if (qword_1ED3BB4A8 != -1)
      swift_once();
    v28 = qword_1ED3B9688;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v65;
    sub_1BB3757A0(v65, v19, v28, 1, (uint64_t)v12);
    if (v27)
    {
      swift_bridgeObjectRelease();
      sub_1BA636D30(v29, v19, v25, v26, (__int16)v60);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48))(v12, 1, v62);
    v24 = (__int16)v60;
    if (v38 == 1)
    {
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA856968);
      sub_1BB86EAB8();
      v39 = v65;
      v40 = v19;
      v41 = v25;
      v42 = v26;
      return sub_1BA636D30(v39, v40, v41, v42, v24);
    }
    v43 = v59;
    sub_1BA8569CC((uint64_t)v12, (uint64_t)v59);
    swift_retain();
    v44 = v64;
    sub_1BA711554();
    swift_release();
    v48 = v69;
    v49 = v25;
    v50 = v25;
    v51 = v57;
    sub_1BA7114EC(v50, v26, v57);
    sub_1BA710690(v44, v49, v26, v51, (uint64_t)&OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options, (uint64_t (*)(uint64_t, uint64_t, double))sub_1BA711554, &v69);
    sub_1BA636D1C(v49, v26, v51);
    v54 = v69;
    v69 = v48;
    v68 = v54;
    swift_bridgeObjectRetain();
    sub_1BA713440();
    v55 = (__int16)v60;
    swift_bridgeObjectRelease();
    sub_1BA70FF28(v48, v54, SHIBYTE(v55));
    sub_1BB86EB0C();
    swift_release();
    swift_release();
    sub_1BA636D30(v65, v19, v49, v63, v55);
    v52 = (uint64_t (*)(_QWORD))type metadata accessor for FormatOption;
    v53 = (uint64_t)v43;
  }
  return sub_1BA4A2E80(v53, v52);
}

BOOL sub_1BA70FA4C(uint64_t a1, __int128 *a2)
{
  _BYTE v4[40];

  sub_1BA711488(a2, (uint64_t)v4);
  return sub_1BA70FA90(a1);
}

BOOL sub_1BA70FA90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for FormatOption();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v13);
  v36 = (uint64_t)&v35 - v16;
  v18 = *(_QWORD *)v1;
  v17 = *(_QWORD *)(v1 + 8);
  v19 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = *(__int16 *)(v1 + 32);
  if (v21 < 0)
  {
    v35 = v15;
    v36 = v14;
    swift_bridgeObjectRetain();
    if ((v19 & 0x100) == 0)
    {
      FormatOptionCollection.subscript.getter(v18, v17, (uint64_t)v7);
      sub_1BA636D30(v18, v17, v19, v20, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v36) == 1)
      {
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA856968);
      }
      else
      {
        v26 = (uint64_t)v7;
        v27 = v35;
        sub_1BA8569CC(v26, v35);
        v38 = *(_QWORD *)(v27 + 16);
        FormatOptionValue.type.getter();
        LOBYTE(v38) = v19;
        v28 = FormatOptionType.rawValue.getter();
        v30 = v29;
        if (v28 == FormatOptionType.rawValue.getter() && v30 == v31)
        {
          swift_bridgeObjectRelease_n();
          sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          return 1;
        }
        v32 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        if ((v32 & 1) != 0)
          return 1;
      }
      return 0;
    }
    FormatOptionCollection.subscript.getter(v18, v17, (uint64_t)v4);
    sub_1BA636D30(v18, v17, v19, v20, v21);
    v34 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v36) == 1;
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA856968);
  }
  else
  {
    v22 = v14;
    sub_1BA711500(v18, v17, v19, v20, v21);
    swift_bridgeObjectRetain();
    FormatOptionCollection.subscript.getter(v18, v17, (uint64_t)v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v22) == 1)
    {
      sub_1BA636D30(v18, v17, v19, v20, v21);
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA856968);
      return 0;
    }
    v23 = v36;
    sub_1BA8569CC((uint64_t)v10, v36);
    swift_retain();
    sub_1BA711ECC();
    swift_release();
    v24 = v38;
    sub_1BA7114EC(v19, v20, v21 & 1);
    sub_1BA710690(v37, v19, v20, v21 & 1, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options, (uint64_t (*)(uint64_t, uint64_t, double))sub_1BA711ECC, &v38);
    sub_1BA636D1C(v19, v20, v21 & 1);
    sub_1BA70FF28(v24, v38, SBYTE1(v21));
    v34 = v33;
    sub_1BA636D30(v18, v17, v19, v20, v21);
    sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_release();
    swift_release();
  }
  return v34;
}

void sub_1BA70FF28(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA70FF58()
{
  uint64_t v0;
  unint64_t v2;

  return static FormatOptionValue.== infix(_:_:)((uint64_t *)(v0 - 8), &v2) & 1;
}

uint64_t static FormatOptionValue.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - v14;
  v16 = *a1;
  v17 = *a2;
  v18 = (unint64_t)*a1 >> 60;
  switch((int)v18)
  {
    case 0:
      if (v17 >> 60)
        goto LABEL_32;
      v19 = *(_BYTE *)(v16 + 16) ^ *(_BYTE *)(v17 + 16) ^ 1;
      return v19 & 1;
    case 1:
      v24 = *(_QWORD *)(v16 + 32);
      v25 = *(_QWORD *)(v16 + 40);
      if (v17 >> 60 != 1)
      {
        if (v17 >> 60 != 5)
          goto LABEL_32;
        if (v24 == *(_QWORD *)(v17 + 16) && v25 == *(_QWORD *)(v17 + 24))
        {
          v19 = 1;
          goto LABEL_59;
        }
        goto LABEL_58;
      }
      v41 = *(_QWORD *)(v17 + 32);
      v42 = *(_QWORD *)(v17 + 40);
      if (*(_QWORD *)(v16 + 16) != *(_QWORD *)(v17 + 16) || *(_QWORD *)(v16 + 24) != *(_QWORD *)(v17 + 24))
      {
        v19 = 0;
        if ((sub_1BB874398() & 1) == 0)
          return v19 & 1;
      }
      if (v24 != v41 || v25 != v42)
        return sub_1BB874398();
      goto LABEL_55;
    case 2:
      if (v17 >> 60 != 2)
        goto LABEL_32;
      v20 = swift_projectBox();
      v21 = swift_projectBox();
      sub_1BA6AA01C(v20, (uint64_t)v15, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D5EC);
      sub_1BA6AA01C(v21, (uint64_t)v12, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D5EC);
      swift_retain();
      swift_retain();
      v19 = sub_1BB86C868();
      sub_1BA6AA068((uint64_t)v12, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D5EC);
      sub_1BA6AA068((uint64_t)v15, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D5EC);
      goto LABEL_38;
    case 3:
      if (v17 >> 60 != 3)
        goto LABEL_32;
      v19 = *(double *)(v16 + 16) == *(double *)(v17 + 16);
      return v19 & 1;
    case 4:
      if (v17 >> 60 != 4)
        goto LABEL_32;
      v19 = *(_QWORD *)(v16 + 16) == *(_QWORD *)(v17 + 16);
      return v19 & 1;
    case 5:
      v22 = *(_QWORD *)(v16 + 16);
      v23 = *(_QWORD *)(v16 + 24);
      if (v17 >> 60 == 1)
      {
        if (v22 == *(_QWORD *)(v17 + 32) && v23 == *(_QWORD *)(v17 + 40))
          v19 = 1;
        else
LABEL_58:
          v19 = sub_1BB874398();
LABEL_59:
        swift_retain();
        goto LABEL_43;
      }
      if (v17 >> 60 != 5)
      {
LABEL_32:
        if (v17 >> 60 == 9)
        {
          if ((_DWORD)v18 == 9)
          {
            v38 = *(_QWORD *)(v16 + 16);
            v43 = *(_QWORD *)(v17 + 16);
            v44 = v38;
            swift_retain();
            swift_retain();
            static FormatAsyncImageContent.== infix(_:_:)((uint64_t)&v44);
LABEL_37:
            v19 = v37;
LABEL_38:
            swift_release();
LABEL_43:
            swift_release();
            return v19 & 1;
          }
        }
        else if (v17 >> 60 == 8)
        {
          v43 = *(_QWORD *)(v17 + 24);
          v44 = v16;
          swift_retain();
          swift_retain();
          v37 = static FormatOptionValue.== infix(_:_:)(&v44, &v43);
          goto LABEL_37;
        }
        v19 = 0;
        return v19 & 1;
      }
      if (v22 == *(_QWORD *)(v17 + 16) && v23 == *(_QWORD *)(v17 + 24))
      {
LABEL_55:
        v19 = 1;
        return v19 & 1;
      }
      return sub_1BB874398();
    case 6:
      if (v17 >> 60 != 6)
        goto LABEL_32;
      v26 = swift_projectBox();
      v27 = swift_projectBox();
      sub_1BA6AA01C(v26, (uint64_t)v9, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D4C8);
      sub_1BA6AA01C(v27, (uint64_t)v6, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D4C8);
      swift_retain();
      swift_retain();
      v28 = sub_1BB86C538();
      v30 = v29;
      if (v28 == sub_1BB86C538() && v30 == v31)
        v19 = 1;
      else
        v19 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D4C8);
      sub_1BA6AA068((uint64_t)v9, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D4C8);
      swift_release();
      goto LABEL_43;
    case 7:
      if (v17 >> 60 != 7)
        goto LABEL_32;
      v33 = *(_QWORD *)(v16 + 16);
      v43 = *(_QWORD *)(v17 + 16);
      v44 = v33;
      swift_retain();
      swift_retain();
      static FormatColor.== infix(_:_:)((uint64_t)&v44);
      goto LABEL_42;
    case 8:
      v35 = *(_QWORD *)(v16 + 24);
      if (v17 >> 60 == 8)
      {
        v43 = *(_QWORD *)(v17 + 24);
        v44 = v35;
        swift_retain();
      }
      else
      {
        v43 = *a2;
        v44 = v35;
        swift_retain();
      }
      swift_retain();
      v34 = static FormatOptionValue.== infix(_:_:)(&v44, &v43);
      goto LABEL_42;
    case 12:
      if (v17 >> 60 != 12)
        goto LABEL_32;
      v36 = *(_QWORD *)(v16 + 16);
      v43 = *(_QWORD *)(v17 + 16);
      v44 = v36;
      swift_retain();
      swift_retain();
      static FormatFont.== infix(_:_:)((uint64_t)&v44);
LABEL_42:
      v19 = v34;
      swift_release();
      goto LABEL_43;
    default:
      goto LABEL_32;
  }
}

void sub_1BA710610(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_1BA4A2870(a4, a3, a5);
    v13 = type metadata accessor for FormatSelectorValue(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t sub_1BA710690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, double)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a5;
  v40 = a3;
  v41 = a2;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatOption();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v36 - v20);
  if ((a4 & 1) == 0)
    return a6(a1, v41, v19);
  v36 = v18;
  v37 = v7;
  v38 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a6;
  v23 = v40;
  swift_bridgeObjectRetain();
  v24 = v41;
  FormatOptionCollection.subscript.getter(v41, v23, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA856968);
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v25 = v24;
    v25[1] = v23;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    sub_1BA636D1C(v24, v23, 1);
    sub_1BA8569CC((uint64_t)v14, (uint64_t)v21);
    v27 = *v21;
    v26 = v21[1];
    v28 = v21[2];
    swift_bridgeObjectRetain();
    v29 = v28;
    v30 = v37;
    v38(&v42, a1, v29);
    if (v30)
    {
      swift_bridgeObjectRelease();
      return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    }
    else
    {
      v31 = v42;
      v32 = v36;
      *v36 = v27;
      v32[1] = v26;
      v32[2] = v31;
      v32[3] = 1;
      v33 = (char *)v32 + *(int *)(v15 + 28);
      v34 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v35 = v32[2];
      swift_retain();
      result = sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *a7 = v35;
    }
  }
  return result;
}

uint64_t sub_1BA710928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  char v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(swift_unownedRetainStrong() + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (v4 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      v6 = 4;
      do
      {
        v7 = v6 - 4;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1BCCE4630](v6 - 4, v4);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_20;
        }
        else
        {
          v8 = *(_QWORD *)(v4 + 8 * v6);
          swift_retain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        swift_retain();
        sub_1BA710B08();
        if ((v11 & 1) != 0)
          v12 = v10(a3, a2);
        else
          v12 = ((uint64_t (*)(uint64_t))v10)(a3);
        sub_1BA7114E4();
        swift_release();
        if ((v12 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v14 = (uint64_t *)(v8 + 24);
          goto LABEL_17;
        }
        swift_release();
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  swift_unownedRetainStrong();
  v13 = *(_QWORD *)(a1 + 40);
  swift_retain();
  swift_release();
  if (!v13)
    return 0;
  v14 = (uint64_t *)(v13 + 16);
LABEL_17:
  swift_beginAccess();
  v15 = *v14;
  swift_bridgeObjectRetain();
  swift_release();
  return v15;
}

void sub_1BA710B08()
{
  __asm { BR              X10 }
}

uint64_t (*sub_1BA710B48())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  *(_BYTE *)(swift_allocObject() + 16) = v1;
  return sub_1BA62B57C;
}

uint64_t sub_1BA711488(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_WORD *)(a2 + 32) = *((_WORD *)a1 + 16);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1BA7114A0()
{
  unint64_t result;

  result = qword_1ED3B91A0;
  if (!qword_1ED3B91A0)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED3B91A0);
  }
  return result;
}

uint64_t sub_1BA7114E4()
{
  return swift_release();
}

uint64_t sub_1BA7114EC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_1BA711500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  char v7;

  if (a5 < 0)
    return swift_bridgeObjectRetain();
  v7 = a5 & 1;
  swift_bridgeObjectRetain();
  return sub_1BA7114EC(a3, a4, v7);
}

BOOL sub_1BA71154C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA70FA4C(a1, (__int128 *)(v1 + 16));
}

void sub_1BA711554()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EE8, v0, &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EF0, v3, (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BA7116BC()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 184) = v0;
  return swift_retain();
}

void sub_1BA711A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  *(_QWORD *)(v5 - 232) = v0;
  v6 = swift_projectBox();
  sub_1BA7A64B4(v6, v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  sub_1BA7F8B2C(v3);
  v7 = swift_allocObject();
  v8 = swift_allocBox();
  v10 = v9;
  v11 = *(_QWORD *)(v5 - 224);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v9, v3, v11);
  *(_QWORD *)(v10 + *(int *)(v4 + 36)) = MEMORY[0x1E0DEE9D8];
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_retain();
  v12(v3, v11);
  sub_1BA7A6424(v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v7 + 24) = v8 | 0x6000000000000000;
  JUMPOUT(0x1BA711B08);
}

void sub_1BA711B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_allocObject();
  v4 = *(_QWORD *)(v1 - 176);
  sub_1BA9A9738(*(_QWORD *)(v1 - 208), v2);
  if (v4)
    swift_deallocUninitializedObject();
  else
    **(_QWORD **)(v1 - 184) = v3 | 0x7000000000000000;
  JUMPOUT(0x1BA7119F8);
}

void sub_1BA711C44()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA7125BC(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA712634(0);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

uint64_t sub_1BA711D14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_projectBox();
  sub_1BA4C2DD8(v1, v0, (uint64_t (*)(_QWORD))sub_1BA712634);
  return sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))sub_1BA712634);
}

void sub_1BA711E6C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v3 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA7F8DE4(v1, v2 - 160, v4, v5);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BA711E4CLL);
}

void sub_1BA711ECC()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EE8, v0, &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EF0, v3, (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BA712034()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 184) = v0;
  return swift_retain();
}

void sub_1BA712398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  *(_QWORD *)(v5 - 232) = v0;
  v6 = swift_projectBox();
  sub_1BA7A64B4(v6, v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  sub_1BA7B0DE8(v3);
  v7 = swift_allocObject();
  v8 = swift_allocBox();
  v10 = v9;
  v11 = *(_QWORD *)(v5 - 224);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v9, v3, v11);
  *(_QWORD *)(v10 + *(int *)(v4 + 36)) = MEMORY[0x1E0DEE9D8];
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_retain();
  v12(v3, v11);
  sub_1BA7A6424(v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v7 + 24) = v8 | 0x6000000000000000;
  JUMPOUT(0x1BA712480);
}

void sub_1BA71248C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_allocObject();
  v4 = *(_QWORD *)(v1 - 176);
  sub_1BA742954(*(_QWORD *)(v1 - 208), v2);
  if (v4)
    swift_deallocUninitializedObject();
  else
    **(_QWORD **)(v1 - 184) = v3 | 0x7000000000000000;
  JUMPOUT(0x1BA712370);
}

void sub_1BA7125BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B5EE8)
  {
    v2 = sub_1BB86C67C();
    v3 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v5 = type metadata accessor for FormatSelectorValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B5EE8);
  }
}

void sub_1BA712634(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B5EF0)
  {
    v2 = sub_1BB86C8B0();
    v3 = sub_1BA49A584();
    v5 = type metadata accessor for FormatSelectorValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B5EF0);
  }
}

uint64_t sub_1BA712694(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  size_t v51;
  uint64_t isStackAllocationSafe;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return a2 & 1;
  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v69 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v59 = a2;
  if (v6)
  {
    v68[0] = *(_QWORD *)(v69 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v66 = v68[0];
  }
  else
  {
    v66 = sub_1BA6E3F38();
    swift_release();
  }
  v60 = a3 + 32;
  v58 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
LABEL_8:
  v65 = v9;
  v10 = v60 + 24 * v9;
  v12 = *(_QWORD *)v10;
  v11 = *(_QWORD *)(v10 + 8);
  v62 = *(unsigned __int8 *)(v10 + 16);
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = qword_1ED4768D0;
  v15 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v12, v11);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 24 * v18 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v20 + 16);
      if (!v44)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      v63 = v20;
      v64 = v11;
      v45 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v48 = *(_BYTE *)(v46 + 32);
        v49 = v48 & 0x3F;
        v50 = (unint64_t)((1 << v48) + 63) >> 6;
        v51 = 8 * v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v49 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
          v53 = sub_1BA6EB5B4((uint64_t)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = (void *)swift_slowAlloc();
          bzero(v54, v51);
          v53 = sub_1BA6EB5B4((uint64_t)v54, v50, v46, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v54, -1, -1);
        }
        v55 = sub_1BA6EB330(v53, v46);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v66, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v59 = v62;
LABEL_7:
            v9 = v65 + 1;
            if (v65 + 1 == v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              LOBYTE(a2) = v59;
              return a2 & 1;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 += 5;
        if (!--v44)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v63 = v15;
  swift_endAccess();
  v67[0] = v12;
  v67[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v67, v68);
  v21 = v68[1];
  v64 = v68[0];
  v22 = v68[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v22;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v12;
  v25 = isUniquelyReferenced_nonNull_native;
  v67[0] = *v16;
  v26 = v67[0];
  *v16 = 0x8000000000000000;
  v27 = v24;
  v28 = v11;
  v30 = sub_1BA6E35A8(v24, v11);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v34 = v29;
  if (*(_QWORD *)(v26 + 24) >= v33)
  {
    if ((v25 & 1) != 0)
    {
      v37 = (_QWORD *)v67[0];
      if ((v29 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v37 = (_QWORD *)v67[0];
      if ((v34 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v39 = (uint64_t *)(v37[6] + 16 * v30);
    *v39 = v27;
    v39[1] = v28;
    v40 = (uint64_t *)(v37[7] + 24 * v30);
    *v40 = v64;
    v40[1] = v21;
    v40[2] = v20;
    v41 = v37[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_41;
    v11 = v28;
    v37[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v33, v25);
  v35 = sub_1BA6E35A8(v27, v28);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    v37 = (_QWORD *)v67[0];
    if ((v34 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v38 = (uint64_t *)(v37[7] + 24 * v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v38 = v64;
    v38[1] = v21;
    v38[2] = v20;
    v11 = v28;
LABEL_25:
    *v16 = (uint64_t)v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA712CB4(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1BA712694(a1, a2, a3);
}

uint64_t sub_1BA712D00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  unint64_t v52;
  size_t v53;
  uint64_t isStackAllocationSafe;
  uint64_t v55;
  void *v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[2];
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(v1 + 32);
  v77 = v3;
  v69 = *(_QWORD *)(v3 + 16);
  if (!v69)
  {
    v8 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v1 + 32);
    return sub_1BA7133FC(v1);
  }
  sub_1BB86DD80();
  v4 = *(_QWORD *)(*(_QWORD *)(v79 + 40) + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  v65 = (_QWORD *)a1;
  if (v5)
  {
    v78[0] = *(_QWORD *)(v79 + 56);
    v6 = swift_bridgeObjectRetain();
    v7 = sub_1BA6E42A0(v6);
    sub_1BA6E3FB8(v7);
    swift_release();
    v75 = v78[0];
  }
  else
  {
    v75 = sub_1BA6E3F38();
    swift_release();
  }
  v68 = v3 + 32;
  v64 = (uint64_t *)v1;
  v10 = *(_QWORD *)(v1 + 24);
  v66 = *(_QWORD *)(v1 + 16);
  sub_1BA781758((uint64_t)&v77);
  swift_bridgeObjectRetain_n();
  sub_1BA781758((uint64_t)&v77);
  v11 = 0;
  v63[1] = v10;
  v67 = v10;
LABEL_9:
  v74 = v11;
  v13 = (uint64_t *)(v68 + 32 * v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v13[3];
  v70 = v13[2];
  v17 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v73 = v16;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = qword_1ED4768D0;
  v19 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v20 = (uint64_t *)(v18 + 16);
  swift_beginAccess();
  v21 = *(_QWORD *)(v18 + 16);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(v15, v14);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v46 = *(_QWORD *)(v24 + 16);
      if (!v46)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v74;
        goto LABEL_8;
      }
      v71 = v24;
      v72 = v14;
      v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        v48 = *(v47 - 1);
        v49 = *v47;
        v50 = *(_BYTE *)(v48 + 32);
        v51 = v50 & 0x3F;
        v52 = (unint64_t)((1 << v50) + 63) >> 6;
        v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          v55 = sub_1BA6EB5B4((uint64_t)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v75);
          swift_bridgeObjectRelease();
        }
        else
        {
          v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          v55 = sub_1BA6EB5B4((uint64_t)v56, v52, v48, v75);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v56, -1, -1);
        }
        v57 = sub_1BA6EB330(v55, v48);
        swift_release();
        if ((v57 & 1) != 0)
        {
          v58 = sub_1BA6EBD20(v75, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v58 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = v74;
            v66 = v70;
            v67 = v73;
LABEL_8:
            swift_bridgeObjectRelease();
            v11 = v12 + 1;
            if (v11 == v69)
            {
              sub_1BA4F6CCC((uint64_t)&v77);
              swift_bridgeObjectRelease();
              sub_1BA4F6CCC((uint64_t)&v77);
              v60 = *v64;
              v59 = v64[1];
              swift_bridgeObjectRetain();
              result = swift_bridgeObjectRelease();
              v61 = v65;
              *v65 = v60;
              v61[1] = v59;
              v62 = v67;
              v61[2] = v66;
              v61[3] = v62;
              v61[4] = MEMORY[0x1E0DEE9D8];
              return result;
            }
            goto LABEL_9;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v47 += 5;
        if (!--v46)
          goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }
  v71 = v19;
  swift_endAccess();
  v76[0] = v15;
  v76[1] = v14;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v76, v78);
  v25 = v78[1];
  v72 = v78[0];
  v26 = v78[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v26;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = *v20;
  v29 = v76[0];
  *v20 = 0x8000000000000000;
  v30 = v15;
  v32 = sub_1BA6E35A8(v15, v14);
  v33 = *(_QWORD *)(v29 + 16);
  v34 = (v31 & 1) == 0;
  v35 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v36 = v31;
  if (*(_QWORD *)(v29 + 24) >= v35)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v39 = (_QWORD *)v76[0];
      if ((v31 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v39 = (_QWORD *)v76[0];
      if ((v36 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    v41 = (uint64_t *)(v39[6] + 16 * v32);
    *v41 = v30;
    v41[1] = v14;
    v42 = (uint64_t *)(v39[7] + 24 * v32);
    *v42 = v72;
    v42[1] = v25;
    v42[2] = v27;
    v43 = v39[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_41;
    v24 = v27;
    v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  sub_1BA7AAAE4(v35, isUniquelyReferenced_nonNull_native);
  v37 = sub_1BA6E35A8(v30, v14);
  if ((v36 & 1) == (v38 & 1))
  {
    v32 = v37;
    v39 = (_QWORD *)v76[0];
    if ((v36 & 1) == 0)
      goto LABEL_24;
LABEL_22:
    v40 = (uint64_t *)(v39[7] + 24 * v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v40 = v72;
    v40[1] = v25;
    v40[2] = v27;
    v24 = v27;
LABEL_26:
    *v20 = (uint64_t)v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_27;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA7133FC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA713440()
{
  __asm { BR              X10 }
}

void sub_1BA713494(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[5];
  uint64_t v14;

  if (v5 >> 60)
  {
    if (v5 >> 60 == 11)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      *v10 = v3;
      v10[1] = v2;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v5 >> 60 == 8)
      {
        if (a1 == 8)
        {
          v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          v14 = *(_QWORD *)(v4 + 24);
          v13[0] = v7;
          v9 = v8 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          *(_QWORD *)(v6 - 72) = v9;
          swift_retain();
          ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_1BA713440)(v13, v1, v3, v2);
          swift_release();
          swift_release();
          swift_release_n();
        }
        else
        {
          v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          v14 = v4;
          v13[0] = v11;
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_1BA713440)(v13, v1, v3, v2);
          swift_release();
        }
        swift_release();
        swift_release_n();
        goto LABEL_13;
      }
      if (a1 == 8)
      {
        v14 = *(_QWORD *)(v4 + 24);
        v13[0] = v5;
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_1BA713440)(v13, v1, v3, v2);
        swift_release();
        swift_release();
        swift_release_n();
LABEL_13:
        swift_release();
        return;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      *v12 = v4;
      v12[1] = v5;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      swift_retain();
    }
    swift_willThrow();
  }
}

void initializeWithCopy for FormatOptionsNodeStatementValue()
{
  char *v0;

  v0 = (char *)sub_1BA713A5C + 4 * byte_1BB91A8F9[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BA713A5C()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BA713CDC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  switch((2 * a8) | ((a7 & 8) != 0))
  {
    case 0:
      result = sub_1BA7143C8(result, a2, a3, a4, a5, a6, a7);
      break;
    case 2:
      result = sub_1BA739218(result, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
      break;
    case 3:
    case 4:
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      break;
    case 8:
      result = sub_1BA968170(result, a2, a3, a4, a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

void FormatOptionValue.type.getter()
{
  __asm { BR              X12 }
}

void sub_1BA713DC8(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BA713E54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    FormatOptionType.rawValue.getter();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t FormatOptionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA714210 + 4 * byte_1BB94D6B0[*v0]))(0x6E61656C6F6F62, 0xE700000000000000);
}

uint64_t sub_1BA714210()
{
  return 1702125924;
}

uint64_t sub_1BA714220()
{
  return 1836412517;
}

uint64_t sub_1BA714230()
{
  return 0x74616F6C66;
}

uint64_t sub_1BA714244()
{
  return 0x72656765746E69;
}

uint64_t sub_1BA714258()
{
  return 0x676E69727473;
}

uint64_t sub_1BA71426C()
{
  return 7107189;
}

uint64_t sub_1BA71427C()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BA714290()
{
  return 0x6567616D69;
}

uint64_t sub_1BA7142A4()
{
  return 0x6F65646976;
}

uint64_t sub_1BA7142B8()
{
  return 1953394534;
}

uint64_t sub_1BA7142C8()
{
  return 0x616C506F65646976;
}

uint64_t sub_1BA7142E8(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1BA712694(a1, a2, a3);
}

uint64_t sub_1BA714334(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  switch((a7 >> 21) & 7)
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      result = swift_bridgeObjectRetain();
      break;
    case 5u:
      result = sub_1BA713CDC(result, a2, a3, a4, a5, a6, a7, SBYTE1(a7));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA71436C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA714378(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1BA714378(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((a2() & 1) != 0)
    return a4(a1) & 1;
  else
    return 0;
}

uint64_t sub_1BA7143C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 1u)
    return sub_1BA7336E0(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA7143DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  BOOL v34;
  uint64_t v35;
  unint64_t i;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46[11];

  v45 = a3;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - v7;
  v44 = v3;
  FormatOptionCollection.subscript.getter(a1, a2, (uint64_t)&v41 - v7);
  v9 = type metadata accessor for FormatOption();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    goto LABEL_5;
  }
  v10 = *((_QWORD *)v8 + 3);
  sub_1BA6E9BC8(v10);
  result = sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  if (!v10)
  {
    v12 = 0;
    return v12 & 1;
  }
  if (v10 == 1)
  {
LABEL_5:
    v46[0] = a1;
    v46[1] = a2;
    v46[9] = 0x797274656D6F6567;
    v46[10] = 0xE800000000000000;
    sub_1BA7114A0();
    v12 = sub_1BB873B40();
    return v12 & 1;
  }
  v13 = 0;
  v14 = *(_QWORD *)(v10 + 56);
  v42 = v10 + 56;
  v15 = 1 << *(_BYTE *)(v10 + 32);
  if (v15 < 64)
    v16 = ~(-1 << v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  v43 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_29;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v20 >= v43)
      goto LABEL_47;
    v21 = *(_QWORD *)(v42 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v43)
        goto LABEL_47;
      v21 = *(_QWORD *)(v42 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v43)
          goto LABEL_47;
        v21 = *(_QWORD *)(v42 + 8 * v13);
        if (!v21)
          break;
      }
    }
LABEL_28:
    v17 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_29:
    v23 = v10;
    v24 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v19);
    v26 = *v24;
    v25 = v24[1];
    v27 = *v45;
    if (!*(_QWORD *)(*v45 + 16))
    {
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v28 = sub_1BB874608();
    v29 = -1 << *(_BYTE *)(v27 + 32);
    v30 = v28 & ~v29;
    v31 = v27 + 56;
    if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
    {
      v32 = *(_QWORD *)(v27 + 48);
      v33 = (_QWORD *)(v32 + 16 * v30);
      v34 = *v33 == v26 && v33[1] == v25;
      if (!v34 && (sub_1BB874398() & 1) == 0)
      {
        v35 = ~v29;
        for (i = v30 + 1; ; i = v37 + 1)
        {
          v37 = i & v35;
          if (((*(_QWORD *)(v31 + (((i & v35) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v35)) & 1) == 0)
            break;
          v38 = (_QWORD *)(v32 + 16 * v37);
          v39 = *v38 == v26 && v38[1] == v25;
          if (v39 || (sub_1BB874398() & 1) != 0)
            goto LABEL_12;
        }
        goto LABEL_45;
      }
LABEL_12:
      result = swift_bridgeObjectRelease();
      v10 = v23;
    }
    else
    {
LABEL_45:
      swift_bridgeObjectRetain();
      v40 = (uint64_t)v45;
      sub_1BA6EE5AC(v46, v26, v25);
      swift_bridgeObjectRelease();
      LOBYTE(v40) = sub_1BA7143DC(v26, v25, v40);
      result = swift_bridgeObjectRelease();
      v10 = v23;
      if ((v40 & 1) != 0)
      {
        swift_release();
        v12 = 1;
        return v12 & 1;
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v43)
  {
LABEL_47:
    swift_release();
    v12 = 0;
    return v12 & 1;
  }
  v21 = *(_QWORD *)(v42 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_28;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v43)
      goto LABEL_47;
    v21 = *(_QWORD *)(v42 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_28;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1BA7147C0(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  switch((a6 >> 1) & 0xF)
  {
    case 2u:
      result = sub_1BAC65374(result, a2, a3, a4, a5, a6 & 0xE1, (uint64_t (*)(void))sub_1BA967EC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA740408);
      break;
    case 3u:
      result = sub_1BA967EC0(result, a2);
      break;
    case 7u:
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      break;
    case 8u:
      result = sub_1BA967F18(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA967EC0);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA714860(uint64_t a1)
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(v1 + 26))
    v2 = 0x10000;
  else
    v2 = 0;
  return sub_1BA714880(a1, *(_QWORD *)(v1 + 16), v2 | *(unsigned __int16 *)(v1 + 24));
}

uint64_t sub_1BA714880(uint64_t a1, uint64_t a2, int a3)
{
  unsigned __int8 v4;

  sub_1BA7148E0(a1, a2, a3);
  return (((a3 & 0x10000) == 0) ^ v4) & 1;
}

void sub_1BA7148E0(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v6);
  __asm { BR              X10 }
}

uint64_t sub_1BA7149D0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;

  sub_1BA758A00(*(_QWORD *)(v3 + *v4), v5);
  if (!v2)
  {
    *(_BYTE *)(v0 + 152) = v1;
    FormatWebEmbedBinding.Bool.BOOL(from:)(v5);
    v1 = v6;
    sub_1BA4A2E80(v5, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  }
  return v1 & 1;
}

void sub_1BA714C78(void *a1)
{
  uint64_t v1;

  objc_msgSend(a1, sel_isPaid);
  sub_1BA8D1FE4(v1);
  JUMPOUT(0x1BA714C28);
}

void sub_1BA714C84(void *a1)
{
  uint64_t v1;

  objc_msgSend(a1, sel_isBundlePaid);
  sub_1BA8D1FE4(v1);
  JUMPOUT(0x1BA714C28);
}

void sub_1BA714C90()
{
  JUMPOUT(0x1BA714CB0);
}

void sub_1BA714CA0()
{
  JUMPOUT(0x1BA714CA8);
}

void sub_1BA714CBC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  _BYTE *v53;
  void (*v54)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v55;
  uint64_t v56;
  char *v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(__int128 *, _QWORD);
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  char v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void **v126;
  uint64_t v127;
  unsigned int (*v128)(uint64_t, uint64_t, uint64_t);
  int v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  int EnumCaseMultiPayload;
  void *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  void (*v151)(_BYTE *, _QWORD);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  objc_class *v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  void *v173;
  id v174;
  void (*v175)(uint64_t, uint64_t);
  uint64_t v176;
  void (*v177)(_BYTE *, _QWORD);
  void (*v178)(_QWORD *, _QWORD);
  _BYTE *v179;
  uint64_t v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v190;
  uint64_t v191;
  void *v192;
  id v193;
  id v194;
  void *v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int (*v199)(uint64_t, uint64_t, uint64_t);
  uint64_t v200;
  uint64_t (*v201)(uint64_t, uint64_t);
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  void (*v207)(uint64_t, _BYTE *, uint64_t);
  uint64_t v208;
  char *v209;
  void **v210;
  unsigned int (*v211)(uint64_t, uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t KeyPath;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  _BYTE *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  void (*v232)(char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD v251[8];
  objc_super v252;
  _BYTE v253[32];
  _OWORD v254[6];
  _OWORD v255[2];
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  _OWORD v262[2];
  uint64_t v263;
  _OWORD v264[6];
  _OWORD v265[2];
  _BYTE v266[144];
  char *v267;

  v218 = a1;
  v206 = sub_1BB86C67C();
  v203 = *(_QWORD *)(v206 - 8);
  MEMORY[0x1E0C80A78](v206);
  v202 = (uint64_t)&v199 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v205 = (char *)&v199 - v4;
  v5 = sub_1BB86C37C();
  v212 = *(_QWORD *)(v5 - 8);
  v213 = v5;
  MEMORY[0x1E0C80A78](v5);
  v217 = (char *)&v199 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v216 = (char *)&v199 - v8;
  v226 = sub_1BB86C1D8();
  MEMORY[0x1E0C80A78](v226);
  v225 = (char *)&v199 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86C424();
  v223 = *(_QWORD *)(v10 - 8);
  v224 = v10;
  MEMORY[0x1E0C80A78](v10);
  v222 = (char *)&v199 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA716CEC();
  v227 = v12;
  MEMORY[0x1E0C80A78](v12);
  v204 = (char *)&v199 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v229 = (char *)&v199 - v15;
  sub_1BA4A3FB4(0, qword_1ED3CDB10, (void (*)(uint64_t))type metadata accessor for FormatAttributedStringAttachment);
  MEMORY[0x1E0C80A78](v16);
  v208 = (uint64_t)&v199 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v210 = (void **)((char *)&v199 - v19);
  MEMORY[0x1E0C80A78](v20);
  v215 = (uint64_t)&v199 - v21;
  sub_1BA716D64();
  v247 = v22;
  v238 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v209 = (char *)&v199 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v248 = (char *)&v199 - v25;
  v26 = sub_1BB86C2A4();
  v27 = *(_QWORD *)(v26 - 8);
  v249 = v26;
  v250 = v27;
  MEMORY[0x1E0C80A78](v26);
  v245 = (char *)&v199 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C44B0, v29);
  MEMORY[0x1E0C80A78](v30);
  v242 = (char *)&v199 - v31;
  v32 = sub_1BB86C2B0();
  v239 = *(_QWORD *)(v32 - 8);
  v240 = v32;
  MEMORY[0x1E0C80A78](v32);
  v243 = (char *)&v199 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v267 = (char *)&v199 - v35;
  v36 = sub_1BB86C2BC();
  v246 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v244 = (char *)&v199 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_1BB86C304();
  v38 = *(_QWORD *)(v221 - 8);
  MEMORY[0x1E0C80A78](v221);
  v40 = (char *)&v199 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v241 = (char *)&v199 - v42;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v199 - v44;
  sub_1BA716C74();
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v199 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49);
  v52 = (char *)&v199 - v51;
  if (v1[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_buildType] != 1)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
    v179 = &v1[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString];
    swift_beginAccess();
    (*(void (**)(char *, _BYTE *, uint64_t))(v38 + 16))(v40, v179, v221);
    swift_getKeyPath();
    sub_1BB86C184();
    sub_1BA716DBC();
LABEL_82:
    sub_1BB8734B0();
    return;
  }
  v211 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1;
  v53 = &v1[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString];
  v236 = v50;
  swift_beginAccess();
  v54 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v38 + 16);
  v228 = v53;
  v55 = v53;
  v56 = v221;
  v207 = v54;
  v54((uint64_t)v45, v55, v221);
  v57 = v244;
  sub_1BB86C2D4();
  v58 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8);
  v214 = v45;
  v201 = v58;
  v58((uint64_t)v45, v56);
  v59 = v246;
  v233 = *(void (**)(char *, char *, uint64_t))(v246 + 16);
  v233(v48, v57, v36);
  v60 = sub_1BB344198();
  v61 = v267;
  v235 = v60;
  sub_1BB8730D8();
  v62 = *(void (**)(char *, uint64_t))(v59 + 8);
  v237 = v36;
  v232 = v62;
  v62(v57, v36);
  v63 = v236;
  v65 = v239;
  v64 = v240;
  (*(void (**)(char *, char *, uint64_t))(v239 + 32))(&v48[*((int *)v236 + 9)], v61, v240);
  sub_1BB003000((uint64_t)v48, (uint64_t)v52);
  v66 = *((int *)v63 + 9);
  v236 = v52;
  v67 = &v52[v66];
  v230 = (uint64_t)v211 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle;
  v200 = v218 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config;
  v246 = MEMORY[0x1E0DEE9E0];
  v234 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v68 = v243;
  v69 = v267;
  v231 = v67;
LABEL_3:
  v70 = v69;
  while (1)
  {
    v234(v70, v67, v64);
    v71 = v68;
    v72 = v64;
    v73 = v237;
    v74 = (uint64_t)v236;
    sub_1BB873114();
    sub_1BA4A2870(&qword_1ED3A2450, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF150], MEMORY[0x1E0CAF158]);
    v75 = sub_1BB872958();
    v76 = *(void (**)(char *, uint64_t))(v65 + 8);
    v77 = v71;
    v78 = v267;
    v76(v77, v72);
    v76(v78, v72);
    if ((v75 & 1) != 0)
      break;
    v79 = v74;
    v80 = (void (*)(__int128 *, _QWORD))sub_1BB873198();
    v81 = v249;
    v82 = v242;
    (*(void (**)(char *))(v250 + 16))(v242);
    v80(&v256, 0);
    v83 = v244;
    v233(v244, (char *)v79, v73);
    v84 = v250;
    sub_1BB873120();
    v85 = v82;
    v86 = v241;
    v232(v83, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v81);
    v87 = v79;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v85, 1, v81) == 1)
      goto LABEL_56;
    v88 = v245;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v245, v85, v81);
    swift_getKeyPath();
    sub_1BA82DA04();
    sub_1BB86C28C();
    swift_release();
    swift_getKeyPath();
    sub_1BB3441C8();
    sub_1BB86C490();
    swift_release();
    v89 = v256;
    if (v256 != 18)
    {
      swift_getKeyPath();
      sub_1BB34420C();
      v119 = v247;
      v118 = v248;
      sub_1BB86C490();
      swift_release();
      v120 = v89;
      v121 = v211;
      v122 = v219;
      sub_1BB343484(v120, v263, v264);
      v219 = v122;
      if (v122)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v238 + 8))(v118, v119);
        sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))sub_1BA716C74);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v245, v249);
        return;
      }
      v260 = v264[4];
      v261 = v264[5];
      v262[0] = v265[0];
      *(_OWORD *)((char *)v262 + 9) = *(_OWORD *)((char *)v265 + 9);
      v256 = v264[0];
      v257 = v264[1];
      v258 = v264[2];
      v259 = v264[3];
      swift_bridgeObjectRelease();
      v123 = (uint64_t)v209;
      (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v209, v118, v119);
      swift_retain();
      v124 = v215;
      sub_1BB0A69AC(v123, v215);
      v125 = v124;
      v126 = v210;
      sub_1BB344250(v125, (uint64_t)v210);
      v127 = type metadata accessor for FormatAttributedStringAttachment();
      v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 48);
      KeyPath = v127;
      v199 = v128;
      v129 = ((uint64_t (*)(void **, uint64_t))v128)(v126, 1);
      v130 = (uint64_t)v216;
      v131 = v245;
      v132 = v221;
      v133 = (uint64_t)v214;
      if (v129 != 1)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          v135 = *v126;
          v136 = (uint64_t)v229;
          if (EnumCaseMultiPayload == 1)
          {
            sub_1BB86C298();
            swift_beginAccess();
            sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
            v137 = v222;
            sub_1BB86C328();
            swift_endAccess();
            sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))sub_1BA716CEC);
            sub_1BB86C3F4();
            (*(void (**)(char *, uint64_t))(v223 + 8))(v137, v224);
            sub_1BA4A2870(&qword_1EF2B1828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
            v138 = sub_1BB872B80();
            v140 = v139;
            v141 = sub_1BAC89268(v135);
          }
          else
          {
            sub_1BB86C298();
            swift_beginAccess();
            sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
            v155 = v222;
            sub_1BB86C328();
            swift_endAccess();
            sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))sub_1BA716CEC);
            sub_1BB86C3F4();
            (*(void (**)(char *, uint64_t))(v223 + 8))(v155, v224);
            sub_1BA4A2870(&qword_1EF2B1828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
            v138 = sub_1BB872B80();
            v140 = v156;
            v141 = sub_1BAC896DC((uint64_t)v135);
          }
          v157 = (uint64_t)v141;
          v158 = v246;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v254[0] = v158;
          sub_1BB4BE12C(v157, v138, v140, isUniquelyReferenced_nonNull_native);
          v246 = *(_QWORD *)&v254[0];

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA741B54((uint64_t)v264);
          sub_1BB344308(v215);
          (*(void (**)(char *, uint64_t))(v238 + 8))(v248, v247);
          (*(void (**)(char *, uint64_t))(v250 + 8))(v131, v249);
          goto LABEL_53;
        }
        sub_1BA4A2E80((uint64_t)v126, (uint64_t (*)(_QWORD))type metadata accessor for FormatAttributedStringAttachment);
        v132 = v221;
      }
      v207(v133, v228, v132);
      sub_1BA744E84(v133, v130);
      v142 = v201(v133, v132);
      MEMORY[0x1E0C80A78](v142);
      *(&v199 - 2) = v121;
      *(&v199 - 1) = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v131;
      v254[4] = v260;
      v254[5] = v261;
      v255[0] = v262[0];
      *(_OWORD *)((char *)v255 + 9) = *(_OWORD *)((char *)v262 + 9);
      v254[0] = v256;
      v254[1] = v257;
      v254[2] = v258;
      v254[3] = v259;
      nullsub_1(v254);
      sub_1BB3442AC((uint64_t)v254, (uint64_t)v266);
      sub_1BA741FD8((uint64_t)v264);
      v143 = v219;
      sub_1BB3430AC((uint64_t (*)(uint64_t))sub_1BB3442A4, (uint64_t)(&v199 - 4), (uint64_t)v266);
      v219 = v143;
      if (v143)
      {
        sub_1BA741B54((uint64_t)v264);
        sub_1BA741B54((uint64_t)v264);
        (*(void (**)(char *, uint64_t))(v212 + 8))(v216, v213);
        sub_1BB344308(v215);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v248, v247);
        sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))sub_1BA716C74);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v250 + 8))(v131, v249);
        return;
      }
      v145 = v144;
      sub_1BA741B54((uint64_t)v264);
      v68 = v243;
      if (v145)
      {
        v146 = v229;
        sub_1BB86C298();
        (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v217, v216, v213);
        v147 = v214;
        sub_1BB86C310();
        swift_beginAccess();
        sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
        sub_1BA4A2870(&qword_1EF2C1860, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
        v148 = v221;
        sub_1BB86C208();
        swift_endAccess();
        v201((uint64_t)v147, v148);
        v149 = (uint64_t)v146;
      }
      else
      {
        v150 = v229;
        sub_1BB86C298();
        swift_beginAccess();
        sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
        v151 = (void (*)(_BYTE *, _QWORD))sub_1BB86C31C();
        sub_1BB86C418();
        v151(v253, 0);
        swift_endAccess();
        v149 = (uint64_t)v150;
      }
      v152 = v215;
      v67 = v231;
      v153 = KeyPath;
      sub_1BA4A2E80(v149, (uint64_t (*)(_QWORD))sub_1BA716CEC);
      v154 = v208;
      sub_1BB344250(v152, v208);
      if (v199(v154, 1, v153) == 1)
      {
        sub_1BA741B54((uint64_t)v264);
        (*(void (**)(char *, uint64_t))(v212 + 8))(v216, v213);
        sub_1BB344308(v152);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v248, v247);
        (*(void (**)(char *, uint64_t))(v250 + 8))(v245, v249);
        sub_1BB344308(v154);
LABEL_46:
        v65 = v239;
        v64 = v240;
        v69 = v267;
        goto LABEL_3;
      }
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1BA741B54((uint64_t)v264);
        (*(void (**)(char *, uint64_t))(v212 + 8))(v216, v213);
        sub_1BB344308(v152);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v248, v247);
        (*(void (**)(char *, uint64_t))(v250 + 8))(v245, v249);
        sub_1BA4A2E80(v154, (uint64_t (*)(_QWORD))type metadata accessor for FormatAttributedStringAttachment);
        goto LABEL_46;
      }
      v160 = v203;
      v161 = (uint64_t)v205;
      v162 = v206;
      (*(void (**)(char *, uint64_t, uint64_t))(v203 + 32))(v205, v154, v206);
      sub_1BB86C298();
      KeyPath = swift_getKeyPath();
      v199 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))swift_getKeyPath();
      v163 = *(_QWORD *)(v200 + 16);
      if (v163)
      {
        v164 = *(_QWORD *)(v200 + 8);
        swift_bridgeObjectRetain();
        v165 = v202;
        sub_1BA7EDAF0(v161, v164, v163, v202);
        v166 = v165;
      }
      else
      {
        v166 = v202;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v202, v161, v162);
      }
      swift_bridgeObjectRelease();
      v167 = (objc_class *)type metadata accessor for FormatAttributedStringLink();
      v168 = objc_allocWithZone(v167);
      v169 = v166;
      v170 = sub_1BB86C580();
      v172 = v171;
      v173 = (void *)sub_1BB86C6DC();
      sub_1BA69D314(v170, v172);
      v252.receiver = v168;
      v252.super_class = v167;
      v174 = objc_msgSendSuper2(&v252, sel_initWithData_ofType_, v173, 0, v199);

      v175 = *(void (**)(uint64_t, uint64_t))(v160 + 8);
      v175(v169, v162);
      v251[7] = v174;
      swift_beginAccess();
      sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
      v176 = (uint64_t)v204;
      v177 = (void (*)(_BYTE *, _QWORD))sub_1BB86C31C();
      sub_1BB86C184();
      sub_1BA716DBC();
      v178 = (void (*)(_QWORD *, _QWORD))sub_1BB86C40C();
      sub_1BA5AA2AC(0, (unint64_t *)&qword_1ED3C44D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1A00], sub_1BA716DBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CAFB30]);
      sub_1BB34436C();
      sub_1BB86C49C();
      v178(v251, 0);
      v177(v253, 0);
      swift_endAccess();
      swift_release();
      sub_1BA741B54((uint64_t)v264);
      sub_1BA4A2E80(v176, (uint64_t (*)(_QWORD))sub_1BA716CEC);
      v175((uint64_t)v205, v206);
      (*(void (**)(char *, uint64_t))(v212 + 8))(v216, v213);
      sub_1BB344308(v215);
      (*(void (**)(char *, uint64_t))(v238 + 8))(v248, v247);
      (*(void (**)(char *, uint64_t))(v250 + 8))(v245, v249);
LABEL_53:
      v65 = v239;
      v64 = v240;
      v68 = v243;
      v69 = v267;
      v67 = v231;
      goto LABEL_3;
    }
    v90 = *(_QWORD *)(v230 + 104);
    v91 = *(_QWORD *)(v90 + 288);
    if (!v91 || !*(_QWORD *)(v91 + 16))
    {
      v108 = v248;
      v109 = v249;
      v110 = v247;
      v111 = v238;
      v68 = v243;
      v67 = v231;
LABEL_29:
      v70 = v267;
      goto LABEL_30;
    }
    v92 = (uint64_t)v229;
    sub_1BB86C298();
    swift_beginAccess();
    v93 = sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
    v94 = v222;
    KeyPath = v93;
    sub_1BB86C328();
    swift_endAccess();
    sub_1BA4A2E80(v92, (uint64_t (*)(_QWORD))sub_1BA716CEC);
    sub_1BB86C3F4();
    (*(void (**)(char *, uint64_t))(v223 + 8))(v94, v224);
    sub_1BA4A2870(&qword_1EF2B1828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
    v95 = sub_1BB872B80();
    v97 = v96;
    v98 = *(_QWORD *)(v90 + 288);
    if (!v98 || (v99 = *(_QWORD *)(v98 + 16)) == 0)
    {
      v109 = v249;
      v84 = v250;
      v110 = v247;
LABEL_28:
      v68 = v243;
      v67 = v231;
      swift_bridgeObjectRelease();
      v111 = v238;
      v108 = v248;
      goto LABEL_29;
    }
    v100 = v95;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v101 = 0;
    v102 = v97;
    v103 = v100;
    do
    {
      v107 = *(unsigned __int8 *)(v98 + v101 + 32);
      if (*(_BYTE *)(v98 + v101 + 32))
      {
        *(_QWORD *)&v256 = v103;
        *((_QWORD *)&v256 + 1) = v102;
        if (v107 == 1)
        {
          sub_1BA7114A0();
          v104 = sub_1BB873AD4();
        }
        else
        {
          sub_1BA7114A0();
          v104 = sub_1BB873AF8();
        }
      }
      else
      {
        *(_QWORD *)&v256 = v103;
        *((_QWORD *)&v256 + 1) = v102;
        sub_1BA7114A0();
        v104 = sub_1BB873AE0();
      }
      v103 = v104;
      v106 = v105;
      swift_bridgeObjectRelease();
      v102 = v106;
      ++v101;
    }
    while (v99 != v101);
    swift_bridgeObjectRelease();
    v112 = v100 == v103 && v97 == v106;
    v84 = v250;
    if (v112)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      v109 = v249;
      v110 = v247;
      v88 = v245;
      goto LABEL_28;
    }
    v113 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v114 = v221;
    if ((v113 & 1) != 0)
      goto LABEL_27;
    v115 = v245;
    sub_1BB86C298();
    sub_1BB86C274();
    v116 = v214;
    v88 = v115;
    sub_1BB86C310();
    swift_beginAccess();
    sub_1BA4A2870(&qword_1EF2C1860, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
    v117 = (uint64_t)v229;
    sub_1BB86C208();
    swift_endAccess();
    v201((uint64_t)v116, v114);
    sub_1BA4A2E80(v117, (uint64_t (*)(_QWORD))sub_1BA716CEC);
    v108 = v248;
    v109 = v249;
    v110 = v247;
    v111 = v238;
    v68 = v243;
    v70 = v267;
    v67 = v231;
LABEL_30:
    (*(void (**)(char *, uint64_t))(v111 + 8))(v108, v110);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v88, v109);
    v65 = v239;
    v64 = v240;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v250 + 56))(v242, 1, 1, v249);
  v87 = v74;
  v86 = v241;
LABEL_56:
  sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))sub_1BA716C74);
  v180 = v246;
  if (!*(_QWORD *)(v246 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
    v207((uint64_t)v86, v228, v221);
    swift_getKeyPath();
    sub_1BB86C184();
    sub_1BA716DBC();
    goto LABEL_82;
  }
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
  v207((uint64_t)v214, v228, v221);
  v181 = (void *)sub_1BB8734BC();
  v182 = 0;
  v183 = *(_QWORD *)(v180 + 64);
  v250 = v180 + 64;
  v184 = 1 << *(_BYTE *)(v180 + 32);
  v185 = -1;
  if (v184 < 64)
    v185 = ~(-1 << v184);
  v186 = v185 & v183;
  v267 = (char *)((unint64_t)(v184 + 63) >> 6);
  while (2)
  {
    if (v186)
    {
      v187 = __clz(__rbit64(v186));
      v186 &= v186 - 1;
      v188 = v187 | (v182 << 6);
LABEL_74:
      v192 = *(void **)(*(_QWORD *)(v180 + 56) + 8 * v188);
      swift_bridgeObjectRetain();
      v193 = v192;
      v194 = objc_msgSend(v181, sel_mutableString);
      v195 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v196 = objc_msgSend(v194, sel_rangeOfString_, v195);
      v198 = v197;

      if (v196 != (id)sub_1BB86BC14())
        objc_msgSend(v181, sel_replaceCharactersInRange_withAttributedString_, v196, v198, v193);

      v180 = v246;
      continue;
    }
    break;
  }
  if (__OFADD__(v182++, 1))
  {
    __break(1u);
    goto LABEL_86;
  }
  if (v182 >= (uint64_t)v267)
    goto LABEL_80;
  v190 = *(_QWORD *)(v250 + 8 * v182);
  if (v190)
  {
LABEL_73:
    v186 = (v190 - 1) & v190;
    v188 = __clz(__rbit64(v190)) + (v182 << 6);
    goto LABEL_74;
  }
  v191 = v182 + 1;
  if (v182 + 1 >= (uint64_t)v267)
    goto LABEL_80;
  v190 = *(_QWORD *)(v250 + 8 * v191);
  if (v190)
    goto LABEL_72;
  v191 = v182 + 2;
  if (v182 + 2 >= (uint64_t)v267)
    goto LABEL_80;
  v190 = *(_QWORD *)(v250 + 8 * v191);
  if (v190)
    goto LABEL_72;
  v191 = v182 + 3;
  if (v182 + 3 >= (uint64_t)v267)
  {
LABEL_80:
    swift_release();
    return;
  }
  v190 = *(_QWORD *)(v250 + 8 * v191);
  if (v190)
  {
LABEL_72:
    v182 = v191;
    goto LABEL_73;
  }
  while (1)
  {
    v182 = v191 + 1;
    if (__OFADD__(v191, 1))
      break;
    if (v182 >= (uint64_t)v267)
      goto LABEL_80;
    v190 = *(_QWORD *)(v250 + 8 * v182);
    ++v191;
    if (v190)
      goto LABEL_73;
  }
LABEL_86:
  __break(1u);
}

void sub_1BA716524()
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v8);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

BOOL sub_1BA7166AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 88) + *(int *)(v0 + 40);
  return *(_BYTE *)(v2 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 32)) == 2;
}

void sub_1BA716C74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFA70)
  {
    sub_1BB86C2BC();
    sub_1BA4A2870(&qword_1ED3C44B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF160], MEMORY[0x1E0CAF180]);
    v0 = sub_1BB873E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFA70);
  }
}

void sub_1BA716CEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF8A8)
  {
    sub_1BB86C2E0();
    sub_1BA4A2870(&qword_1ED3C44C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF1B0], MEMORY[0x1E0CAF1C0]);
    v0 = sub_1BB8731D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF8A8);
  }
}

void sub_1BA716D64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C44D0)
  {
    sub_1BA82DA04();
    v0 = sub_1BB86C4A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C44D0);
  }
}

uint64_t sub_1BA716DBC()
{
  return sub_1BA4A2870(&qword_1ED3C44A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1A00], MEMORY[0x1E0DC19F8]);
}

uint64_t sub_1BA716DD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA761F00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA716DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  unint64_t v53;
  size_t v54;
  uint64_t isStackAllocationSafe;
  uint64_t v56;
  void *v57;
  char v58;
  char v59;
  uint64_t result;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v65 = *(_QWORD *)(a4 + 16);
  if (v65)
  {
    sub_1BB86DD80();
    v7 = *(_QWORD *)(*(_QWORD *)(v75 + 40) + 16);
    swift_beginAccess();
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 16) + 16);
    v62 = a2;
    if (v8)
    {
      v74[0] = *(_QWORD *)(v75 + 56);
      v9 = swift_bridgeObjectRetain();
      v10 = sub_1BA6E42A0(v9);
      sub_1BA6E3FB8(v10);
      swift_release();
      v72 = v74[0];
    }
    else
    {
      v72 = sub_1BA6E3F38();
      swift_release();
    }
    v64 = a4 + 32;
    v61[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v11 = 0;
    v61[1] = a3;
    v63 = a3;
    while (1)
    {
      v13 = (uint64_t *)(v64 + 32 * v11);
      v15 = *v13;
      v14 = v13[1];
      v16 = v13[3];
      v66 = v13[2];
      v17 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v69 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1)
        swift_once();
      v18 = qword_1ED4768D0;
      v19 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v21 + 16);
      v70 = v11;
      if (!v22)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v23 = sub_1BA6E35A8(v15, v14);
      if ((v24 & 1) == 0)
        break;
      v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v70;
        goto LABEL_8;
      }
      v68 = v14;
      v71 = v25;
      v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        v49 = *(v48 - 1);
        v50 = *v48;
        v51 = *(_BYTE *)(v49 + 32);
        v52 = v51 & 0x3F;
        v53 = (unint64_t)((1 << v51) + 63) >> 6;
        v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          v56 = sub_1BA6EB5B4((uint64_t)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v72);
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          v56 = sub_1BA6EB5B4((uint64_t)v57, v53, v49, v72);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v57, -1, -1);
        }
        v58 = sub_1BA6EB330(v56, v49);
        swift_release();
        if ((v58 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v48 += 5;
        if (!--v47)
          goto LABEL_7;
      }
      v59 = sub_1BA6EBD20(v72, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v70;
      v62 = v66;
      v63 = v69;
LABEL_8:
      swift_bridgeObjectRelease();
      v11 = v12 + 1;
      if (v11 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v62;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v67 = v19;
    swift_endAccess();
    v73[0] = v15;
    v73[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v73, v74);
    v26 = v74[1];
    v68 = v74[0];
    v27 = v74[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71 = v27;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *v20;
    v29 = v73[0];
    *v20 = 0x8000000000000000;
    v30 = v15;
    v31 = v14;
    v33 = sub_1BA6E35A8(v15, v14);
    v34 = *(_QWORD *)(v29 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v37 = v32;
    if (*(_QWORD *)(v29 + 24) < v36)
    {
      sub_1BA7AAAE4(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_1BA6E35A8(v30, v31);
      if ((v37 & 1) != (v39 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v33 = v38;
      v40 = (_QWORD *)v73[0];
      if ((v37 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v41 = v68;
      v41[1] = v26;
      v25 = v71;
      v41[2] = v71;
      v14 = v31;
LABEL_26:
      *v20 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v40 = (_QWORD *)v73[0];
      if ((v32 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v40 = (_QWORD *)v73[0];
      if ((v37 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v42 = (uint64_t *)(v40[6] + 16 * v33);
    *v42 = v30;
    v42[1] = v31;
    v43 = (uint64_t *)(v40[7] + 24 * v33);
    *v43 = v68;
    v43[1] = v26;
    v25 = v71;
    v43[2] = v71;
    v44 = v40[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_42;
    v14 = v31;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BA717468(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA7174A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA7174B0(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1BA7174B0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((a2() & 1) != 0)
    return 1;
  else
    return a4(a1) & 1;
}

uint64_t sub_1BA717500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA716DE0(a1, a2, a3, a4);
}

unint64_t sub_1BA71754C()
{
  unint64_t result;

  result = qword_1ED3B4988;
  if (!qword_1ED3B4988)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionEnum, &type metadata for FormatOptionEnum);
    atomic_store(result, (unint64_t *)&qword_1ED3B4988);
  }
  return result;
}

uint64_t sub_1BA717590(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(void))
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(void);
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  _QWORD v47[2];
  char *v48;
  char *v49;
  void (*v50)(_QWORD);
  void (*v51)(void);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;

  v50 = a3;
  v51 = a4;
  v5 = v4;
  sub_1BA4CDF6C(0, &qword_1ED3B0660, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)v47 - v9;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v59 = v10;
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)v47 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v47 - v15;
  MEMORY[0x1E0C80A78](v17);
  v53 = (char *)v47 - v18;
  v62 = a1;
  swift_beginAccess();
  v19 = v5[2];
  v20 = v5[3];
  swift_bridgeObjectRetain();
  v21 = sub_1BA717D44(v19, v20);
  v23 = v22;
  v24 = a2;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v25 = v5[5];
  swift_beginAccess();
  v61 = v5[4];
  v26 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v26);
  v27 = v16;
  v28 = v55;
  sub_1BA717E88();
  if (v28)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA719718(v26);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v30 = v53;
    v47[0] = v21;
    v55 = v24;
    sub_1BA719718(v26);
    swift_bridgeObjectRelease();
    v31 = v52;
    v32 = v59;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v60, v27, v59);
    v54 = *(_QWORD *)(v25 + 16);
    v48 = v27;
    v47[1] = v23;
    if (v54)
    {
      v33 = swift_bridgeObjectRetain();
      v34 = 0;
      v35 = v49;
      v36 = v56;
      v37 = v59;
      do
      {
        v38 = v31;
        v39 = v33;
        v40 = *(_QWORD *)(v33 + 8 * v34 + 32);
        v61 = v40;
        sub_1BA7196DC(v40);
        sub_1BA71B2A4();
        ++v34;
        v41 = v60;
        sub_1BB86DB64();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v58);
        sub_1BA719340(v40);
        v31 = v38;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
        v42 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v42(v41, v36, v37);
        v33 = v39;
      }
      while (v54 != v34);
      swift_bridgeObjectRelease();
      v43 = v51;
      v44 = v53;
      v32 = v59;
    }
    else
    {
      v42 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v43 = v51;
      v44 = v30;
    }
    v42(v44, v60, v32);
    v45 = v32;
    v46 = *(void (**)(char *, uint64_t))(v31 + 8);
    v46(v48, v45);
    swift_bridgeObjectRelease();
    v50(0);
    v43();
    sub_1BB86D4EC();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v46)(v44, v45);
  }
}

uint64_t sub_1BA7179E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, double), uint64_t (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t, _QWORD, char *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD, double);
  uint64_t (*v40)(void);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, _QWORD, char *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v40 = a5;
  v41 = a6;
  v38 = a3;
  v39 = a4;
  v10 = v8;
  v11 = v7;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v43 = *(_QWORD *)(v14 - 8);
  v44 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - v15;
  v49 = a1;
  v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v18 = *(_QWORD *)(v11 + 16);
  v19 = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRetain();
  v45 = sub_1BA717D44(v18, v19);
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v11 + 80);
  v42 = a7;
  if (v22)
  {
    v23 = *(_QWORD *)(v17 + 24);
    if (v23)
    {
      v47 = *(_QWORD *)(v17 + 16);
      v48 = v23;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v24);
      sub_1BB872AFC(v25);
      swift_bridgeObjectRelease_n();
      v22 = v48;
      v37 = v47;
    }
    else
    {
      v37 = *(_QWORD *)(v11 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v37 = 0;
  }
  swift_beginAccess();
  v26 = *(unsigned __int8 *)(v11 + 104);
  swift_beginAccess();
  v46 = *(_QWORD *)(v11 + 64);
  v27 = v46;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v27);
  sub_1BA717E88();
  if (v10)
  {
    sub_1BA719718(v27);
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v36 = v26;
    sub_1BA719718(v27);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_retain();
    v28 = swift_bridgeObjectRetain();
    v30 = sub_1BB67D4D4(v28, a2);
    swift_bridgeObjectRelease();
    v31 = swift_release();
    v35 = (uint64_t)&v35;
    v32 = MEMORY[0x1E0C80A78](v31);
    *(&v35 - 6) = v11;
    *(&v35 - 5) = a2;
    *(&v35 - 4) = v37;
    *(&v35 - 3) = v22;
    v33 = v39(0, v32);
    v34 = v40();
    v42(v45, v21, v36, v16, v30, v41, &v35 - 8, v33, v34);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA717D44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!v2[3])
  {
    swift_bridgeObjectRetain();
    v7 = v2[7];
    if (!v7)
      return a1;
    goto LABEL_3;
  }
  v13 = v2[2];
  v14 = v2[3];
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  sub_1BB872AFC(v6);
  a1 = v13;
  a2 = v14;
  v7 = v2[7];
  if (v7)
  {
LABEL_3:
    v8 = *(_QWORD *)(v7 + 32);
    v9 = v2[6];
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *(_QWORD *)(v8 + 16);
    *(_QWORD *)(v8 + 16) = 0x8000000000000000;
    sub_1BB4BDE60(v9, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v8 + 16) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void sub_1BA717E88()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1BB86EE18();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86D99C();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X11 }
}

uint64_t sub_1BA717F6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = swift_allocObject();
  sub_1BB86DD80();
  v4 = *(_QWORD *)(v1 - 144);
  v5 = sub_1BA72BED4(*(_QWORD *)(v1 - 136), v2);
  swift_release();
  if (v4)
    return swift_deallocUninitializedObject();
  *(double *)(v3 + 16) = v5;
  v6 = *(uint64_t **)(v1 - 160);
  *v6 = v3;
  v7 = *MEMORY[0x1E0DB6320];
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
}

unint64_t sub_1BA719340(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA71937C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA719398(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BA719398(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BA719638();
  sub_1BA4CDF6C(0, &qword_1ED3B0660, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1ED3B0660, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA7195B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BA50AD30(a4, 255, a3, a5);
    v9 = sub_1BB873C84();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA719638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9C68)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B0660, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9C68);
  }
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatAdjustment(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA7196DC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1BA7196DC(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA719718(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FormatVBoxNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA719774()
{
  unint64_t result;

  result = qword_1ED3C81C8;
  if (!qword_1ED3C81C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoxNodeResize, &type metadata for FormatBoxNodeResize);
    atomic_store(result, (unint64_t *)&qword_1ED3C81C8);
  }
  return result;
}

uint64_t sub_1BA7197B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v18 = *a7;
  v20 = *a8;
  v21 = a8[1];
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v11 + 64) = v18;
  *(_QWORD *)(v11 + 72) = v20;
  *(_QWORD *)(v11 + 80) = v21;
  swift_beginAccess();
  *(_QWORD *)(v11 + 88) = a9;
  swift_beginAccess();
  *(_QWORD *)(v11 + 96) = a10;
  swift_beginAccess();
  *(_BYTE *)(v11 + 104) = a11;
  return v11;
}

unint64_t sub_1BA719928()
{
  unint64_t result;

  result = qword_1ED3C6CE8;
  if (!qword_1ED3C6CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4400, &_s14descr1E72CC061V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C6CE8);
  }
  return result;
}

uint64_t sub_1BA71996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  __int128 v16;
  __int128 v17;
  _OWORD v19[2];
  uint64_t v20;

  swift_beginAccess();
  sub_1BB86D414();
  v12 = sub_1BA71AE4C(a4, a5);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
    return swift_release();
  swift_bridgeObjectRetain();
  for (i = 32; ; i += 40)
  {
    v16 = *(_OWORD *)(v13 + i);
    v17 = *(_OWORD *)(v13 + i + 16);
    v20 = *(_QWORD *)(v13 + i + 32);
    v19[0] = v16;
    v19[1] = v17;
    sub_1BA7086BC((uint64_t)v19);
    sub_1BA719A9C(a1, v12, a6);
    if (v6)
      break;
    sub_1BA708680((uint64_t)v19);
    if (!--v14)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1BA708680((uint64_t)v19);
}

uint64_t sub_1BA719A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v30[5];
  _BYTE v31[32];
  uint64_t v32;

  v4 = (uint64_t)v3;
  v30[4] = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(v6 + 24);
    sub_1BB68036C(v3, &v32);
    sub_1BB68036C(&v32, v30);
    sub_1BB57F380();
    v10 = v9;
    v12 = v11;
    sub_1BB68036C(&v32, v30);
    v13 = sub_1BB57DC18();
    v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    sub_1BA6A09F0(v4 + 8, (uint64_t)v31, &qword_1EF2CA060, (uint64_t)&type metadata for FormatSourceMap);
    sub_1BA6A09F0((uint64_t)v31, (uint64_t)v30, &qword_1EF2CA060, (uint64_t)&type metadata for FormatSourceMap);
    type metadata accessor for FormatNodeDebugRecord();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v31);
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v31);
    swift_retain();
    swift_retain();
    v15 = sub_1BAF200B0(v10, v12, v13, v14, v30);
    if (v15)
    {
      swift_beginAccess();
      v16 = swift_retain();
      MEMORY[0x1BCCE36AC](v16);
      if (*(_QWORD *)((*(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_endAccess();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA73D624((uint64_t)v31);
  }
  else
  {
    v15 = 0;
  }
  v17 = *(_QWORD *)(a3 + 80);
  v18 = *(_QWORD *)(v4 + 8);
  v19 = *(_QWORD *)(v4 + 16);
  v21 = *(_QWORD *)(v4 + 24);
  v20 = *(_QWORD *)(v4 + 32);
  if (v17)
  {
    if (v19)
    {
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a2;
      *(_QWORD *)(v22 + 24) = v18;
      *(_QWORD *)(v22 + 32) = v19;
      *(_QWORD *)(v22 + 40) = v21;
      *(_QWORD *)(v22 + 48) = v20;
      v23 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v22 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v22 + 72) = v23;
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v22 + 96) = v17;
      *(_QWORD *)(v22 + 104) = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BA7086BC(v4);
      sub_1BA71AE1C(0);
      sub_1BA71AE30();
      swift_retain();
      sub_1BB86D480();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_14;
    }
  }
  else if (v19)
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = a2;
    *(_QWORD *)(v24 + 24) = v18;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v21;
    *(_QWORD *)(v24 + 48) = v20;
    v25 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)v4;
    *(_OWORD *)(v24 + 72) = v25;
    *(_QWORD *)(v24 + 88) = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(v24 + 96) = a3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1BA7086BC(v4);
    sub_1BA71AE1C(0);
    sub_1BA71AE30();
    swift_retain();
    sub_1BB86D480();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)v4;
  swift_retain();
  sub_1BA719E74(a1, a2, a3, v26);
LABEL_14:
  result = swift_release();
  if (v15)
  {
    if (*(_BYTE *)(v15 + 96) == 1)
    {
      *(CFTimeInterval *)(v15 + 88) = CACurrentMediaTime();
      *(_BYTE *)(v15 + 96) = 0;
    }
    return swift_release();
  }
  return result;
}

void sub_1BA719E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA719EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  sub_1BA7179E4(v2, v1, v0, (uint64_t (*)(_QWORD, double))sub_1BA71AE1C, sub_1BA71AE30, (uint64_t)sub_1BA5729AC, MEMORY[0x1E0DB5A98]);
  return swift_release();
}

void sub_1BA71AD78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for FormatLayout;
    v8[1] = type metadata accessor for FormatLayoutAttributes();
    v8[2] = sub_1BA7399D0();
    v8[3] = sub_1BA4A2870(&qword_1ED3C9F20, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA71AE1C(uint64_t a1)
{
  sub_1BA71AD78(a1, &qword_1ED3C4558, MEMORY[0x1E0DB5A10]);
}

uint64_t sub_1BA71AE30()
{
  return sub_1BA4A2870(&qword_1ED3C4550, (uint64_t (*)(uint64_t))sub_1BA71AE1C, MEMORY[0x1E0DB5A18]);
}

uint64_t sub_1BA71AE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[32];
  char v63[8];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[4];

  v3 = v2;
  v6 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v6);
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (a2)
  {
    v54 = a1;
    v55 = (uint64_t)&v34 - v8;
    sub_1BA4C2DD8(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)&v34 - v8, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v9 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    v10 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v44 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    v50 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    v49 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    v48 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    v47 = v13;
    v63[0] = v9;
    v63[1] = v10;
    v64 = v11;
    v65 = v44;
    v66 = v12;
    v67 = v50;
    v68 = v49;
    v69 = v48;
    v70 = v13;
    v56 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    v51 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v14 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    v15 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    v16 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v71[2] = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v71[3] = v16;
    v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    v71[0] = v14;
    v71[1] = v15;
    v45 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BA70AF2C(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v62, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    v38 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    v46 = a2;
    v37 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    v36 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    v35 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(_QWORD *)&v57 = v37;
    *((_QWORD *)&v57 + 1) = v36;
    v58 = v20;
    v59 = v21;
    v60 = v22;
    v61 = v35;
    v42 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    v53 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    v40 = v23;
    v41 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    v43 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v39 = v24;
    v52 = swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BA70A884(v12, v50);
    swift_retain();
    v25 = v51;
    swift_retain();
    sub_1BA70A8DC((uint64_t)v71);
    swift_bridgeObjectRetain();
    v26 = v45;
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v37, v36);
    v28 = v46;
    swift_bridgeObjectRetain();
    v29 = v42;
    swift_bridgeObjectRetain();
    v30 = v40;
    swift_bridgeObjectRetain();
    v31 = v41;
    swift_retain();
    v32 = swift_bridgeObjectRetain();
    return sub_1BB29AEAC(v55, v63, v56, v25, v71, v17, v26, v18, (uint64_t)v62, v27, v19, &v57, v29, v53, v30, v31, v43, v32, v54,
             v28);
  }
  else
  {
    swift_retain();
  }
  return v3;
}

uint64_t FormatVBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11)
{
  return sub_1BA7197B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

void sub_1BA71B2A4()
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1BB86D9F0();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

void sub_1BA71B350(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 - 112) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 - 96) = v4;
  v5 = sub_1BA72BD68();
  if (!v1)
  {
    *(double *)v2 = v5;
    *(_QWORD *)(v2 + 8) = v6;
    *(_QWORD *)(v2 + 16) = v7;
    *(_QWORD *)(v2 + 24) = v8;
    v9 = *MEMORY[0x1E0DB5C20];
    sub_1BA6F3ED8(0, &qword_1ED3B0660, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v2, v9, v10);
  }
}

uint64_t sub_1BA71C134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t *v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v9 = v4[1];
  v15 = *v4;
  v10 = a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + *(int *)(type metadata accessor for GroupLayoutContext() + 48)) + 16)
                 + 16))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA6E35A8(a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_1BA71C838();
  v11 = swift_allocBox();
  sub_1BA71C7D8(v9);
  sub_1BA71C360();
  sub_1BA71C808(v9);
  if (v5)
    return swift_deallocBox();
  sub_1BA71C7D8(v15);
  sub_1BA71C360();
  sub_1BA71C808(v15);
  *a4 = v11;
  v13 = *MEMORY[0x1E0DB63D0];
  sub_1BA71C89C();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a4, v13, v14);
}

void sub_1BA71C360()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA71C3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = swift_allocObject();
  sub_1BB86DD80();
  v5 = sub_1BA72BED4(v9, v3);
  swift_release();
  if (v1)
    return swift_deallocUninitializedObject();
  *(double *)(v4 + 16) = v5;
  *v2 = v4;
  v6 = *MEMORY[0x1E0DB5FA0];
  v7 = sub_1BB86D894();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v2, v6, v7);
}

unint64_t sub_1BA71C7D8(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA71C808(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BA71C838()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B06E0)
  {
    sub_1BB86D894();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B06E0);
  }
}

void sub_1BA71C89C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0720)
  {
    sub_1BA7399D0();
    v0 = sub_1BB86DB7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0720);
  }
}

uint64_t sub_1BA71C8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, void (*a6)(uint64_t)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;

  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    v18 = a4;
    v19 = a7;
    swift_bridgeObjectRetain();
    v12 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v13 = *v12;
      swift_retain();
      a5(v13);
      swift_retain();
      sub_1BA710B08();
      v16 = (v15 & 1) != 0 ? v14(a2, a1) : ((uint64_t (*)(uint64_t))v14)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v16 & 1) != 0)
        break;
      v12 += 2;
      swift_release();
      a6(v13);
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        a7 = v19;
        a4 = v18;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    a5(v13);
    swift_release();
    result = ((uint64_t (*)(uint64_t))a6)(v13);
    *v19 = v13;
  }
  else
  {
LABEL_9:
    *a7 = a4;
    return ((uint64_t (*)(uint64_t))a5)(a4);
  }
  return result;
}

unint64_t sub_1BA71CA6C(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA71CAA8()
{
  unint64_t result;

  result = qword_1ED3C6BB8;
  if (!qword_1ED3C6BB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA7C0, &_s10CodingKeysON_121);
    atomic_store(result, (unint64_t *)&qword_1ED3C6BB8);
  }
  return result;
}

uint64_t sub_1BA71CAEC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA7309F4(a1, v1 + 16);
}

_QWORD *initializeWithCopy for HeadlineViewLayout.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, int *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  char *__dst;
  int *v52;

  *a1 = *a2;
  v3 = a3[5];
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = *(_QWORD *)((char *)a2 + v3 + 8);
  *(_QWORD *)v4 = *(_QWORD *)((char *)a2 + v3);
  *((_QWORD *)v4 + 1) = v6;
  v4[24] = *((_BYTE *)a2 + v3 + 24);
  *((_QWORD *)v4 + 2) = *(_QWORD *)((char *)a2 + v3 + 16);
  v7 = *(_QWORD *)((char *)a2 + v3 + 40);
  *((_QWORD *)v4 + 4) = *(_QWORD *)((char *)a2 + v3 + 32);
  *((_QWORD *)v4 + 5) = v7;
  *((_QWORD *)v4 + 6) = *(_QWORD *)((char *)a2 + v3 + 48);
  v4[56] = *((_BYTE *)a2 + v3 + 56);
  v52 = (int *)type metadata accessor for FeedHeadline(0);
  v8 = v52[10];
  v9 = &v4[v8];
  v10 = &v5[v8];
  *v9 = v5[v8];
  v9[1] = v5[v8 + 1];
  v11 = (int *)type metadata accessor for FeedHeadline.State(0);
  v12 = v11[6];
  __dst = &v9[v12];
  v13 = &v10[v12];
  v14 = (int *)type metadata accessor for SharedItem();
  v48 = *((_QWORD *)v14 - 1);
  v15 = *(unsigned int (**)(char *, uint64_t, int *))(v48 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v15(v13, 1, v14))
  {
    v16 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(__dst, v13, v17);
    __dst[v14[5]] = v13[v14[5]];
    v18 = v14[6];
    v19 = *(void **)&v13[v18];
    *(_QWORD *)&__dst[v18] = v19;
    v20 = v14[7];
    v49 = &v13[v20];
    v50 = &__dst[v20];
    v21 = sub_1BB86C67C();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v23 = v19;
    v22(v50, v49, v21);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v48 + 56))(__dst, 0, 1, v14);
  }
  v9[v11[7]] = v10[v11[7]];
  v9[v11[8]] = v10[v11[8]];
  v9[v11[9]] = v10[v11[9]];
  v9[v11[10]] = v10[v11[10]];
  v24 = v52[11];
  v25 = &v4[v24];
  v26 = &v5[v24];
  v27 = sub_1BB871B24();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = v52[12];
  v31 = &v4[v30];
  v32 = &v5[v30];
  v33 = *((_QWORD *)v32 + 1);
  if (v33 >= 0x11)
  {
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  v34 = v52[13];
  v35 = *(_QWORD *)&v5[v34];
  if (v35 >= 2)
  {
    if (v35 == 2)
    {
      *(_QWORD *)&v4[v34] = 2;
    }
    else
    {
      *(_QWORD *)&v4[v34] = v35;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)&v4[v34] = v35;
  }
  v36 = v52[14];
  v37 = *(void **)&v5[v36];
  *(_QWORD *)&v4[v36] = v37;
  v38 = a3[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = *(_OWORD *)((char *)a2 + v38 + 24);
  *(_OWORD *)((char *)a1 + v38 + 24) = v41;
  v42 = v41;
  v43 = **(void (***)(char *, char *, uint64_t))(v41 - 8);
  v44 = v37;
  v43(v39, v40, v42);
  v45 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v45) = *(_QWORD *)((char *)a2 + v45);
  v46 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA71CE94(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA71CE9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA71CE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v19[2];
  uint64_t v20;

  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v20 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
  {
    v19[0] = *(_QWORD *)(v20 + 56);
    v6 = swift_bridgeObjectRetain();
    v7 = sub_1BA6E42A0(v6);
    sub_1BA6E3FB8(v7);
    swift_release();
    v8 = v19[0];
  }
  else
  {
    v8 = sub_1BA6E3F38();
    swift_release();
  }
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v19[0] = a2;
  v19[1] = a3;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E583C(v19);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
LABEL_13:
    v17 = 0;
    goto LABEL_14;
  }
  v11 = (uint64_t *)(v9 + 64);
  while (1)
  {
    v12 = *(v11 - 1);
    v13 = *v11;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA71D208(v8, v12);
    v15 = sub_1BA6EB330(v14, v12);
    swift_release();
    if ((v15 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    v11 += 5;
    if (!--v10)
      goto LABEL_13;
  }
  v16 = sub_1BA6EBD20(v8, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
    goto LABEL_9;
  v17 = 1;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BA71D07C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a2 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x1BCCE5C38](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1BA71D208(uint64_t a1, uint64_t a2)
{
  return sub_1BA71D07C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1BA6EB5B4);
}

void sub_1BA71D254(unint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;

  v70 = a1;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v72 = v15;
  v71 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v83 = (char *)&v64 - v16;
  sub_1BA7226D8();
  MEMORY[0x1E0C80A78](v17);
  v77 = (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v78 = (uint64_t)&v64 - v20;
  v76 = type metadata accessor for FormatNodeStateData.Data();
  v73 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v75 = (uint64_t *)((char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unownedRetainStrong();
  v22 = a3[9];
  swift_retain();
  swift_release();
  v85 = v22;
  v79 = a4;
  v81 = a5;
  sub_1BA724A8C();
  swift_release();
  v23 = a7;
  v24 = *(_QWORD *)(a7 + 32);
  swift_bridgeObjectRetain();
  v82 = a6;
  v74 = a2;
  v80 = a8;
  v25 = v84;
  sub_1BA72FB30((uint64_t)a3, a6, a2, a8);
  if (!v25)
  {
    v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v75;
    *v75 = v27;
    v29 = v76;
    swift_storeEnumTagMultiPayload();
    v68 = v23;
    v30 = *(_QWORD *)(v23 + 24);
    v31 = v78;
    sub_1BA4C2DD8(v28, v78, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v66 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56);
    v66(v31, 0, 1, v29);
    v32 = v77;
    sub_1BA4C2DD8(v31, v77, (uint64_t (*)(_QWORD))sub_1BA7226D8);
    v65 = v30;
    swift_beginAccess();
    swift_retain();
    v84 = v27;
    v33 = v81;
    swift_bridgeObjectRetain();
    v67 = v30 + 24;
    sub_1BA722740(v32, v79, v33);
    swift_endAccess();
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA7226D8);
    sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    swift_unownedRetainStrong();
    v34 = a3[4];
    sub_1BA725020(v34);
    swift_release();
    v85 = v34;
    sub_1BA725104();
    v73 = v35;
    sub_1BA725050(v34);
    v36 = *(_QWORD *)(v24 + 56);
    swift_unownedRetainStrong();
    v37 = a3[4];
    v69 = v36;
    swift_bridgeObjectRetain();
    sub_1BA725020(v37);
    swift_release();
    v85 = v37;
    v38 = *(id *)(*(_QWORD *)(v84 + 16) + 32);
    sub_1BA7253B0();
    sub_1BA725050(v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v39 = v82;
    v40 = (uint64_t *)(*(_QWORD *)(v82 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v41 = *v40;
    v42 = v40[1];
    swift_unownedRetainStrong();
    v43 = a3[8];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    v44 = sub_1BA7250BC(v43, v39, v41, v42);
    v45 = a3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v44 && (swift_beginAccess(), (v46 = *(_QWORD *)(v44 + 72)) != 0))
    {
      v47 = v39;
      if (*(_QWORD *)(v46 + 16))
      {
        v48 = v44;
        v49 = *(_QWORD *)(v44 + 56);
        v74 = *(_QWORD *)(v44 + 48);
        v50 = *(unsigned __int8 *)(v44 + 64);
        swift_retain();
        swift_retain();
        v51 = swift_bridgeObjectRetain();
        v73 = sub_1BB67D220(v51, v47);
        swift_bridgeObjectRelease();
        swift_release();
        v58 = v50;
        if (v50)
          v59 = 0;
        else
          v59 = v49;
        if (v50)
          v60 = 0;
        else
          v60 = v74;
        type metadata accessor for FormatAnimationData();
        v61 = swift_allocObject();
        v74 = v48;
        *(_QWORD *)(v61 + 16) = v48;
        *(_QWORD *)(v61 + 24) = v60;
        *(_QWORD *)(v61 + 32) = v59;
        *(_BYTE *)(v61 + 40) = v58;
        v62 = v65;
        *(_QWORD *)(v61 + 48) = v73;
        swift_beginAccess();
        swift_retain_n();
        v53 = v81;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v86 = *(_QWORD *)(v62 + 32);
        *(_QWORD *)(v62 + 32) = 0x8000000000000000;
        sub_1BA81C03C(v61, v79, v53, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v62 + 32) = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release_n();
        v52 = v70;
LABEL_9:
        v54 = v80;
        v85 = v52;
        swift_getKeyPath();
        swift_unownedRetainStrong();
        swift_beginAccess();
        v55 = v45[6];
        swift_bridgeObjectRetain();
        swift_release();
        swift_retain();
        v80 = sub_1BB67D4D4(v55, v47);
        swift_bridgeObjectRelease();
        swift_release();
        v56 = (_QWORD *)swift_allocObject();
        v56[2] = v79;
        v56[3] = v53;
        v56[4] = v68;
        v56[5] = v84;
        v56[6] = v47;
        v56[7] = v45;
        v56[8] = v54;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_unownedRetain();
        sub_1BA7099D4();
        sub_1BA50AD30(&qword_1ED3C4560, 255, (uint64_t (*)(uint64_t))sub_1BA7099D4, MEMORY[0x1E0DB5B88]);
        swift_retain();
        sub_1BB86D474();
        v82 = 0;
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_unownedRetainStrong();
        v57 = *((unsigned __int8 *)v45 + 129);
        swift_release();
        __asm { BR              X9 }
      }
    }
    else
    {
      v47 = v39;
    }
    v74 = v44;
    v52 = v70;
    v53 = v81;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BA71DE4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t *, uint64_t);
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  char v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  int v92;
  uint64_t v93;
  void *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  unsigned __int8 v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  unsigned int (*v139)(char *, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  unint64_t v162;
  uint64_t v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  uint64_t v182;
  int *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  int *v187;
  unsigned int (*v188)(char *, uint64_t, int *);
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  unint64_t v192;
  void *v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  id v197;
  id v198;
  __int128 v199;
  int v200;
  void *v201;
  uint64_t v202;
  void *v203;
  uint64_t v204;
  id v205;
  id v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  const void *v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int (*v225)(const void *, uint64_t, uint64_t);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void (*v237)(uint64_t, uint64_t, uint64_t);
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  unint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  unint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void (*v278)(uint64_t, uint64_t, uint64_t);
  uint64_t v279;
  void *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  id v286;
  _QWORD *v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void *v292;
  uint64_t v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void *v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  void (*v309)(char *, char *, uint64_t);
  id v310;
  uint64_t v311;
  void *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  __int128 v318;
  _OWORD *v319;
  _OWORD *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t v325;
  void *v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  unsigned int (*v330)(char *, uint64_t, uint64_t);
  uint64_t v331;
  uint64_t v332;
  _QWORD *v333;
  _QWORD *v334;
  uint64_t v335;
  uint64_t v336;
  unsigned int (*v337)(_QWORD *, uint64_t, uint64_t);
  uint64_t v338;
  __int128 v339;
  _OWORD *v340;
  _OWORD *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  _QWORD *v345;
  _QWORD *v346;
  unint64_t v347;
  uint64_t v348;
  unint64_t v349;
  __int128 v350;
  _OWORD *v351;
  _OWORD *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  _BYTE *v358;
  char *v359;
  int *v360;
  uint64_t v361;
  char *v362;
  int *v363;
  unsigned int (*v364)(char *, uint64_t, int *);
  uint64_t v365;
  __int128 v366;
  __int128 v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _OWORD *v372;
  _OWORD *v373;
  __int128 v374;
  void *v375;
  uint64_t v376;
  void *v377;
  uint64_t v378;
  id v379;
  id v380;
  __int128 v381;
  uint64_t v382;
  void *v383;
  id v384;
  __int128 v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  id v389;
  _QWORD *v390;
  unint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  void *v396;
  id v397;
  _QWORD *v398;
  unint64_t v399;
  void *v400;
  uint64_t v401;
  uint64_t v402;
  void *v403;
  uint64_t v404;
  id v405;
  id v406;
  __int128 v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  void *v413;
  uint64_t v414;
  char *v415;
  char *v416;
  id v417;
  uint64_t v418;
  char *v419;
  char *v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  _QWORD *v425;
  _QWORD *v426;
  unint64_t v427;
  uint64_t v428;
  unint64_t v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  uint64_t v434;
  uint64_t v435;
  void *v436;
  id v437;
  _QWORD *v438;
  unint64_t v439;
  uint64_t v440;
  void *v441;
  void (*v442)(_QWORD *, _QWORD, uint64_t, int *);
  id v443;
  uint64_t v444;
  _QWORD *v445;
  uint64_t *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  int EnumCaseMultiPayload;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  uint64_t v456;
  char *v457;
  char *v458;
  __int128 v459;
  uint64_t v460;
  uint64_t v461;
  void *v462;
  uint64_t v463;
  _QWORD *v464;
  _QWORD *v465;
  uint64_t v466;
  unsigned int (*v467)(_QWORD *, uint64_t, uint64_t);
  id v468;
  uint64_t v469;
  void **v470;
  unsigned int v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  char v477;
  unsigned __int8 v478;
  void *v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  int v490;
  uint64_t v491;
  uint64_t v492;
  char *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  unsigned int (*v497)(char *, uint64_t, uint64_t);
  uint64_t v498;
  void *v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  char *v507;
  uint64_t v508;
  unsigned int (*v509)(char *, uint64_t, uint64_t);
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  int *v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  _QWORD *v521;
  unint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  unint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  _QWORD *v533;
  _QWORD *v534;
  uint64_t v535;
  uint64_t v536;
  void *v537;
  void (*v538)(_QWORD *, _QWORD, uint64_t, uint64_t);
  id v539;
  uint64_t result;
  uint64_t v541;
  char *__dst;
  int *v543;
  uint64_t v544;
  void (*v545)(char *, char *, uint64_t);
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  void *v551;
  void *v552;
  int *v553;
  int *v554;
  int *v555;
  char v556;
  char *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  char v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t *v565;
  uint64_t *v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1BB871B24();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_241;
    case 1u:
    case 2u:
    case 3u:
    case 7u:
    case 8u:
    case 0x13u:
      *(_QWORD *)a1 = *a2;
      swift_retain();
      goto LABEL_241;
    case 4u:
      v7 = type metadata accessor for FeedItem(0);
      v570 = a1;
      v565 = a2;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v8 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v8;
          v9 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v9;
          *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
          v10 = a2 + 5;
          v11 = a2[6];
          swift_bridgeObjectRetain();
          if (v11 >= 0x11)
          {
            *(_QWORD *)(a1 + 40) = *v10;
            *(_QWORD *)(a1 + 48) = v11;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v10;
          }
          goto LABEL_227;
        case 1u:
          v157 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v157;
          v158 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v158;
          *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
          v159 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v159;
          v160 = a2[8];
          *(_QWORD *)(a1 + 56) = a2[7];
          *(_QWORD *)(a1 + 64) = v160;
          v161 = a2 + 9;
          v162 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v162 >= 0x11)
          {
            *(_QWORD *)(a1 + 72) = *v161;
            *(_QWORD *)(a1 + 80) = v162;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v161;
          }
          goto LABEL_227;
        case 2u:
          v163 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v163;
          v164 = (int *)type metadata accessor for FeedBannerAd();
          v165 = v164[5];
          v166 = a1 + v165;
          v167 = (uint64_t)a2 + v165;
          v168 = sub_1BB8721C0();
          v169 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 16);
          swift_bridgeObjectRetain();
          v169(v166, v167, v168);
          *(_QWORD *)(a1 + v164[6]) = *(uint64_t *)((char *)a2 + v164[6]);
          v170 = v164[7];
          v171 = a1 + v170;
          v172 = (uint64_t)a2 + v170;
          *(_QWORD *)v171 = *(_QWORD *)v172;
          *(_BYTE *)(v171 + 8) = *(_BYTE *)(v172 + 8);
          v173 = v164[8];
          v174 = a1 + v173;
          v175 = (uint64_t)a2 + v173;
          v176 = *(_QWORD *)(v175 + 8);
          if (v176 >= 0x11)
            goto LABEL_84;
          *(_OWORD *)v174 = *(_OWORD *)v175;
          goto LABEL_227;
        case 3u:
          v177 = a1;
          v178 = a2[1];
          *(_QWORD *)v177 = *a2;
          *(_QWORD *)(v177 + 8) = v178;
          *(_QWORD *)(v177 + 16) = a2[2];
          *(_BYTE *)(v177 + 24) = *((_BYTE *)a2 + 24);
          v179 = a2[5];
          *(_QWORD *)(v177 + 32) = a2[4];
          *(_QWORD *)(v177 + 40) = v179;
          *(_QWORD *)(v177 + 48) = a2[6];
          *(_BYTE *)(v177 + 56) = *((_BYTE *)a2 + 56);
          v553 = (int *)type metadata accessor for FeedHeadline(0);
          v180 = v553[10];
          v181 = (_BYTE *)(v177 + v180);
          v182 = (uint64_t)a2 + v180;
          *v181 = *((_BYTE *)a2 + v180);
          v181[1] = *((_BYTE *)a2 + v180 + 1);
          v183 = (int *)type metadata accessor for FeedHeadline.State(0);
          v184 = v183[6];
          v185 = &v181[v184];
          v186 = (char *)(v182 + v184);
          v187 = (int *)type metadata accessor for SharedItem();
          v548 = *((_QWORD *)v187 - 1);
          v188 = *(unsigned int (**)(char *, uint64_t, int *))(v548 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v188(v186, 1, v187))
          {
            v189 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
          }
          else
          {
            v302 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(v185, v186, v302);
            v185[v187[5]] = v186[v187[5]];
            v303 = v187[6];
            v304 = *(void **)&v186[v303];
            *(_QWORD *)&v185[v303] = v304;
            v305 = v187[7];
            v306 = &v185[v305];
            v307 = &v186[v305];
            v308 = sub_1BB86C67C();
            v309 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 16);
            v310 = v304;
            v309(v306, v307, v308);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v548 + 56))(v185, 0, 1, v187);
          }
          v181[v183[7]] = *(_BYTE *)(v182 + v183[7]);
          v181[v183[8]] = *(_BYTE *)(v182 + v183[8]);
          v181[v183[9]] = *(_BYTE *)(v182 + v183[9]);
          v181[v183[10]] = *(_BYTE *)(v182 + v183[10]);
          v311 = v553[11];
          a1 = v570;
          v312 = (void *)(v570 + v311);
          v313 = (char *)v565 + v311;
          v314 = sub_1BB871B24();
          v315 = *(_QWORD *)(v314 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v315 + 48))(v313, 1, v314))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v312, v313, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v315 + 16))(v312, v313, v314);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v315 + 56))(v312, 0, 1, v314);
          }
          a2 = v565;
          v344 = v553[12];
          v345 = (_QWORD *)(v570 + v344);
          v346 = (uint64_t *)((char *)v565 + v344);
          v347 = v346[1];
          if (v347 >= 0x11)
          {
            *v345 = *v346;
            v345[1] = v347;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v345 = *(_OWORD *)v346;
          }
          v348 = v553[13];
          v349 = *(uint64_t *)((char *)v565 + v348);
          if (v349 >= 2)
          {
            if (v349 == 2)
            {
              *(_QWORD *)(v570 + v348) = 2;
            }
            else
            {
              *(_QWORD *)(v570 + v348) = v349;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)(v570 + v348) = v349;
          }
          v382 = v553[14];
          v383 = *(void **)((char *)v565 + v382);
          *(_QWORD *)(v570 + v382) = v383;
          v384 = v383;
          goto LABEL_227;
        case 4u:
          v190 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v190;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v191 = a2 + 3;
          v192 = a2[4];
          if (v192 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v191;
            *(_QWORD *)(a1 + 32) = v192;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v191;
          }
          v271 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v271;
          v272 = (int *)type metadata accessor for FeedWebEmbed();
          v273 = v272[8];
          v274 = a1 + v273;
          v275 = (uint64_t)a2 + v273;
          v276 = sub_1BB86C67C();
          v277 = *(_QWORD *)(v276 - 8);
          v278 = *(void (**)(uint64_t, uint64_t, uint64_t))(v277 + 16);
          swift_bridgeObjectRetain();
          v278(v274, v275, v276);
          v555 = v272;
          v279 = v272[9];
          v280 = (void *)(a1 + v279);
          v281 = (char *)a2 + v279;
          v545 = (void (*)(char *, char *, uint64_t))v278;
          v549 = v276;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v277 + 48))((uint64_t)a2 + v279, 1, v276))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
          }
          else
          {
            v278((uint64_t)v280, (uint64_t)v281, v276);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v280, 0, 1, v276);
          }
          *(_QWORD *)(a1 + v272[10]) = *(uint64_t *)((char *)a2 + v272[10]);
          *(_QWORD *)(a1 + v272[11]) = *(uint64_t *)((char *)a2 + v272[11]);
          v332 = v272[12];
          v333 = (_QWORD *)(a1 + v332);
          v334 = (uint64_t *)((char *)a2 + v332);
          v335 = type metadata accessor for FeedHeadline(0);
          v336 = *(_QWORD *)(v335 - 8);
          v337 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v336 + 48);
          swift_retain();
          swift_retain();
          if (v337(v334, 1, v335))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v333, v334, *(_QWORD *)(*(_QWORD *)(v338 - 8) + 64));
          }
          else
          {
            v543 = (int *)v335;
            v544 = v336;
            v355 = v334[1];
            *v333 = *v334;
            v333[1] = v355;
            v333[2] = v334[2];
            *((_BYTE *)v333 + 24) = *((_BYTE *)v334 + 24);
            v356 = v334[5];
            v333[4] = v334[4];
            v333[5] = v356;
            v333[6] = v334[6];
            *((_BYTE *)v333 + 56) = *((_BYTE *)v334 + 56);
            v357 = *(int *)(v335 + 40);
            v358 = (char *)v333 + v357;
            v359 = (char *)v334 + v357;
            *v358 = *((_BYTE *)v334 + v357);
            v358[1] = *((_BYTE *)v334 + v357 + 1);
            v360 = (int *)type metadata accessor for FeedHeadline.State(0);
            v361 = v360[6];
            __dst = &v358[v361];
            v362 = &v359[v361];
            v363 = (int *)type metadata accessor for SharedItem();
            v541 = *((_QWORD *)v363 - 1);
            v364 = *(unsigned int (**)(char *, uint64_t, int *))(v541 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v364(v362, 1, v363))
            {
              v365 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v362, *(_QWORD *)(*(_QWORD *)(v365 - 8) + 64));
            }
            else
            {
              v411 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v411 - 8) + 16))(__dst, v362, v411);
              __dst[v363[5]] = v362[v363[5]];
              v412 = v363[6];
              v413 = *(void **)&v362[v412];
              *(_QWORD *)&__dst[v412] = v413;
              v414 = v363[7];
              v415 = &__dst[v414];
              v416 = &v362[v414];
              v417 = v413;
              v545(v415, v416, v549);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v541 + 56))(__dst, 0, 1, v363);
            }
            v358[v360[7]] = v359[v360[7]];
            v358[v360[8]] = v359[v360[8]];
            v358[v360[9]] = v359[v360[9]];
            v358[v360[10]] = v359[v360[10]];
            v418 = v543[11];
            v419 = (char *)v333 + v418;
            v420 = (char *)v334 + v418;
            v421 = sub_1BB871B24();
            v422 = *(_QWORD *)(v421 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v422 + 48))(v420, 1, v421))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v419, v420, *(_QWORD *)(*(_QWORD *)(v423 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v422 + 16))(v419, v420, v421);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v422 + 56))(v419, 0, 1, v421);
            }
            a1 = v570;
            v424 = v543[12];
            v425 = (_QWORD *)((char *)v333 + v424);
            v426 = (_QWORD *)((char *)v334 + v424);
            v427 = v426[1];
            if (v427 >= 0x11)
            {
              *v425 = *v426;
              v425[1] = v427;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v425 = *(_OWORD *)v426;
            }
            v428 = v543[13];
            v429 = *(_QWORD *)((char *)v334 + v428);
            if (v429 >= 2)
            {
              if (v429 == 2)
              {
                *(_QWORD *)((char *)v333 + v428) = 2;
              }
              else
              {
                *(_QWORD *)((char *)v333 + v428) = v429;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)((char *)v333 + v428) = v429;
            }
            v440 = v543[14];
            v441 = *(void **)((char *)v334 + v440);
            *(_QWORD *)((char *)v333 + v440) = v441;
            v442 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v544 + 56);
            v443 = v441;
            v442(v333, 0, 1, v543);
          }
          v444 = v555[13];
          v445 = (_QWORD *)(a1 + v444);
          v446 = (uint64_t *)((char *)a2 + v444);
          v447 = type metadata accessor for WebEmbedDataVisualization();
          v448 = *(_QWORD *)(v447 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v448 + 48))(v446, 1, v447))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v445, v446, *(_QWORD *)(*(_QWORD *)(v449 - 8) + 64));
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v451 = *v446;
            if (EnumCaseMultiPayload == 1)
            {
              v452 = v446[1];
              *v445 = v451;
              v445[1] = v452;
              v453 = type metadata accessor for GenericDataVisualization();
              v454 = *(int *)(v453 + 20);
              v455 = (char *)v445 + v454;
              v456 = a1;
              v457 = (char *)v446 + v454;
              swift_bridgeObjectRetain();
              v458 = v457;
              a1 = v456;
              v545(v455, v458, v549);
              *(_QWORD *)((char *)v445 + *(int *)(v453 + 24)) = *(uint64_t *)((char *)v446 + *(int *)(v453 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *v445 = v451;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v448 + 56))(v445, 0, 1, v447);
          }
          *(_BYTE *)(a1 + v555[14]) = *((_BYTE *)a2 + v555[14]);
          goto LABEL_227;
        case 5u:
          v193 = (void *)*a2;
          v194 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v194;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
          v195 = (void *)a2[7];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_QWORD *)(a1 + 56) = v195;
          *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
          v196 = a2[10];
          v197 = v193;
          swift_bridgeObjectRetain();
          v198 = v195;
          if (v196 == 1)
          {
            v199 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v199;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *(_QWORD *)(a1 + 72) = a2[9];
            *(_QWORD *)(a1 + 80) = v196;
            v283 = a2[12];
            *(_QWORD *)(a1 + 88) = a2[11];
            *(_QWORD *)(a1 + 96) = v283;
            v285 = (void *)a2[13];
            v284 = a2[14];
            *(_QWORD *)(a1 + 104) = v285;
            *(_QWORD *)(a1 + 112) = v284;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v286 = v285;
          }
          v287 = a2 + 15;
          v288 = a2[16];
          if (v288 >= 0x11)
          {
            *(_QWORD *)(a1 + 120) = *v287;
            *(_QWORD *)(a1 + 128) = v288;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v287;
          }
          *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
          goto LABEL_227;
        case 6u:
          v200 = *((unsigned __int8 *)a2 + 281);
          if (v200 == 2)
          {
            v368 = a2[1];
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = v368;
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            v369 = a2[7];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = v369;
            v370 = a2[9];
            *(_QWORD *)(a1 + 64) = a2[8];
            *(_QWORD *)(a1 + 72) = v370;
            v371 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v371 == 1)
            {
              v372 = (_OWORD *)(a1 + 80);
              v373 = a2 + 10;
              v374 = *((_OWORD *)a2 + 8);
              *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 128) = v374;
              *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
              goto LABEL_180;
            }
            *(_QWORD *)(a1 + 80) = a2[10];
            *(_QWORD *)(a1 + 88) = v371;
            v392 = a2[15];
            swift_bridgeObjectRetain();
            if (v392)
            {
              v393 = a2[16];
              *(_QWORD *)(a1 + 120) = v392;
              *(_QWORD *)(a1 + 128) = v393;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v392 - 8))(a1 + 96, (uint64_t)(a2 + 12), v392);
              *(_QWORD *)(a1 + 136) = a2[17];
            }
            else
            {
              v459 = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
              *(_OWORD *)(a1 + 112) = v459;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
            }
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
          }
          else
          {
            if (v200 == 1)
            {
              v201 = (void *)*a2;
              v202 = a2[1];
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = v202;
              *(_QWORD *)(a1 + 16) = a2[2];
              *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
              *(_QWORD *)(a1 + 32) = a2[4];
              *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
              v203 = (void *)a2[7];
              *(_QWORD *)(a1 + 48) = a2[6];
              *(_QWORD *)(a1 + 56) = v203;
              *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
              v204 = a2[10];
              v205 = v201;
              swift_bridgeObjectRetain();
              v206 = v203;
              if (v204 == 1)
              {
                v207 = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
                *(_OWORD *)(a1 + 88) = v207;
                *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
              }
              else
              {
                *(_QWORD *)(a1 + 72) = a2[9];
                *(_QWORD *)(a1 + 80) = v204;
                v386 = a2[12];
                *(_QWORD *)(a1 + 88) = a2[11];
                *(_QWORD *)(a1 + 96) = v386;
                v388 = (void *)a2[13];
                v387 = a2[14];
                *(_QWORD *)(a1 + 104) = v388;
                *(_QWORD *)(a1 + 112) = v387;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v389 = v388;
              }
              v390 = a2 + 15;
              v391 = a2[16];
              if (v391 >= 0x11)
              {
                *(_QWORD *)(a1 + 120) = *v390;
                *(_QWORD *)(a1 + 128) = v391;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)v390;
              }
              v373 = a2 + 18;
              v400 = (void *)a2[18];
              *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
              if (v400)
              {
                v401 = a2[19];
                v402 = a2[20];
                *(_QWORD *)(a1 + 144) = v400;
                *(_QWORD *)(a1 + 152) = v401;
                *(_QWORD *)(a1 + 160) = v402;
                *(_WORD *)(a1 + 168) = *((_WORD *)a2 + 84);
                *(_QWORD *)(a1 + 176) = a2[22];
                *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
                v403 = (void *)a2[25];
                *(_QWORD *)(a1 + 192) = a2[24];
                *(_QWORD *)(a1 + 200) = v403;
                *(_BYTE *)(a1 + 208) = *((_BYTE *)a2 + 208);
                v404 = a2[28];
                v405 = v400;
                swift_bridgeObjectRetain();
                v406 = v403;
                if (v404 == 1)
                {
                  v407 = *(_OWORD *)(a2 + 29);
                  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
                  *(_OWORD *)(a1 + 232) = v407;
                  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
                }
                else
                {
                  *(_QWORD *)(a1 + 216) = a2[27];
                  *(_QWORD *)(a1 + 224) = v404;
                  v434 = a2[30];
                  *(_QWORD *)(a1 + 232) = a2[29];
                  *(_QWORD *)(a1 + 240) = v434;
                  v436 = (void *)a2[31];
                  v435 = a2[32];
                  *(_QWORD *)(a1 + 248) = v436;
                  *(_QWORD *)(a1 + 256) = v435;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v437 = v436;
                }
                v438 = a2 + 33;
                v439 = a2[34];
                if (v439 >= 0x11)
                {
                  *(_QWORD *)(a1 + 264) = *v438;
                  *(_QWORD *)(a1 + 272) = v439;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(a1 + 264) = *(_OWORD *)v438;
                }
                *(_BYTE *)(a1 + 280) = *((_BYTE *)a2 + 280);
                goto LABEL_195;
              }
              v372 = (_OWORD *)(a1 + 144);
              v430 = *((_OWORD *)a2 + 16);
              *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
              *(_OWORD *)(a1 + 256) = v430;
              *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
              v431 = *((_OWORD *)a2 + 12);
              *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
              *(_OWORD *)(a1 + 192) = v431;
              v432 = *((_OWORD *)a2 + 14);
              *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
              *(_OWORD *)(a1 + 224) = v432;
LABEL_180:
              v433 = v373[1];
              *v372 = *v373;
              v372[1] = v433;
              goto LABEL_195;
            }
            v375 = (void *)*a2;
            v376 = a2[1];
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = v376;
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            v377 = (void *)a2[7];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = v377;
            *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
            v378 = a2[10];
            v379 = v375;
            swift_bridgeObjectRetain();
            v380 = v377;
            if (v378 == 1)
            {
              v381 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v381;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *(_QWORD *)(a1 + 72) = a2[9];
              *(_QWORD *)(a1 + 80) = v378;
              v394 = a2[12];
              *(_QWORD *)(a1 + 88) = a2[11];
              *(_QWORD *)(a1 + 96) = v394;
              v396 = (void *)a2[13];
              v395 = a2[14];
              *(_QWORD *)(a1 + 104) = v396;
              *(_QWORD *)(a1 + 112) = v395;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v397 = v396;
            }
            v398 = a2 + 15;
            v399 = a2[16];
            if (v399 >= 0x11)
            {
              *(_QWORD *)(a1 + 120) = *v398;
              *(_QWORD *)(a1 + 128) = v399;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v398;
            }
            *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
          }
LABEL_195:
          *(_BYTE *)(a1 + 281) = v200;
LABEL_227:
          swift_storeEnumTagMultiPayload();
LABEL_228:
          v514 = (int *)type metadata accessor for FormatItemNodeData();
          v515 = v514[5];
          v516 = a1 + v515;
          v517 = (uint64_t)a2 + v515;
          v518 = *(uint64_t *)((char *)a2 + v515 + 8);
          *(_QWORD *)v516 = *(uint64_t *)((char *)a2 + v515);
          *(_QWORD *)(v516 + 8) = v518;
          v519 = *(uint64_t *)((char *)a2 + v515 + 24);
          *(_QWORD *)(v516 + 16) = *(uint64_t *)((char *)a2 + v515 + 16);
          *(_QWORD *)(v516 + 24) = v519;
          v520 = *(uint64_t *)((char *)a2 + v515 + 40);
          *(_QWORD *)(v516 + 32) = *(uint64_t *)((char *)a2 + v515 + 32);
          *(_QWORD *)(v516 + 40) = v520;
          v521 = (uint64_t *)((char *)a2 + v515 + 48);
          v522 = *(uint64_t *)((char *)a2 + v515 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v522 >= 0xF)
          {
            *(_QWORD *)(v516 + 48) = *v521;
            *(_QWORD *)(v516 + 56) = v522;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v516 + 48) = *(_OWORD *)v521;
          }
          v523 = *(_QWORD *)(v517 + 72);
          *(_QWORD *)(v516 + 64) = *(_QWORD *)(v517 + 64);
          *(_QWORD *)(v516 + 72) = v523;
          v524 = *(_QWORD *)(v517 + 88);
          *(_QWORD *)(v516 + 80) = *(_QWORD *)(v517 + 80);
          *(_QWORD *)(v516 + 88) = v524;
          v525 = *(_QWORD *)(v517 + 104);
          *(_QWORD *)(v516 + 96) = *(_QWORD *)(v517 + 96);
          *(_QWORD *)(v516 + 104) = v525;
          *(_QWORD *)(v516 + 112) = *(_QWORD *)(v517 + 112);
          *(_BYTE *)(v516 + 120) = *(_BYTE *)(v517 + 120);
          v526 = v514[6];
          v527 = *(uint64_t *)((char *)v565 + v526);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA728598(v527);
          a1 = v570;
          *(_QWORD *)(v570 + v526) = v527;
          v528 = v514[7];
          v529 = v570 + v528;
          v530 = (uint64_t)v565 + v528;
          v531 = sub_1BB86FE38();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v531 - 8) + 16))(v529, v530, v531);
          v532 = v514[8];
          v533 = (_QWORD *)(v570 + v532);
          v534 = (uint64_t *)((char *)v565 + v532);
          v535 = v534[1];
          if (v535)
          {
            *v533 = *v534;
            v533[1] = v535;
            v533[2] = v534[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v533 = *(_OWORD *)v534;
            v533[2] = v534[2];
          }
LABEL_241:
          swift_storeEnumTagMultiPayload();
          return a1;
        case 7u:
          v208 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v208;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
          v209 = a2[7];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_QWORD *)(a1 + 56) = v209;
          v210 = a2[9];
          *(_QWORD *)(a1 + 64) = a2[8];
          *(_QWORD *)(a1 + 72) = v210;
          v211 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v211 == 1)
          {
            v212 = *((_OWORD *)a2 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 128) = v212;
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
            v213 = *((_OWORD *)a2 + 6);
            *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
            *(_OWORD *)(a1 + 96) = v213;
          }
          else
          {
            *(_QWORD *)(a1 + 80) = a2[10];
            *(_QWORD *)(a1 + 88) = v211;
            v289 = a2[15];
            swift_bridgeObjectRetain();
            if (v289)
            {
              v290 = a2[16];
              *(_QWORD *)(a1 + 120) = v289;
              *(_QWORD *)(a1 + 128) = v290;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v289 - 8))(a1 + 96, (uint64_t)(a2 + 12), v289);
              *(_QWORD *)(a1 + 136) = a2[17];
            }
            else
            {
              v385 = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
              *(_OWORD *)(a1 + 112) = v385;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
            }
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
          }
          goto LABEL_227;
        case 8u:
          v214 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v214;
          v215 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v216 = (_QWORD *)(a1 + v215);
          v217 = (uint64_t)a2 + v215;
          v218 = *(uint64_t *)((char *)a2 + v215 + 8);
          *v216 = *(uint64_t *)((char *)a2 + v215);
          v216[1] = v218;
          v219 = *(uint64_t *)((char *)a2 + v215 + 24);
          v216[2] = *(uint64_t *)((char *)a2 + v215 + 16);
          v216[3] = v219;
          v554 = (int *)type metadata accessor for FormatCustomItem.Resolved();
          v220 = v554[6];
          v221 = (char *)v216 + v220;
          v222 = (const void *)(v217 + v220);
          v223 = type metadata accessor for FormatCustomItem.Action();
          v224 = *(_QWORD *)(v223 - 8);
          v225 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v224 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v225(v222, 1, v223))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            v317 = sub_1BB86C67C();
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v317 - 8) + 16))(v221, v222, v317);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v224 + 56))(v221, 0, 1, v223);
          }
          *(_QWORD *)((char *)v216 + v554[7]) = *(_QWORD *)(v217 + v554[7]);
          swift_bridgeObjectRetain();
          a1 = v570;
          goto LABEL_112;
        case 9u:
          v227 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v227;
          v228 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v228;
          v229 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v229)
          {
            v230 = a2[8];
            *(_QWORD *)(a1 + 56) = v229;
            *(_QWORD *)(a1 + 64) = v230;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v229 - 8))(a1 + 32, (uint64_t)(a2 + 4), v229);
          }
          else
          {
            v318 = *((_OWORD *)a2 + 3);
            *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
            *(_OWORD *)(a1 + 48) = v318;
            *(_QWORD *)(a1 + 64) = a2[8];
          }
          v319 = (_OWORD *)(a1 + 72);
          v320 = a2 + 9;
          v321 = a2[12];
          if (v321)
          {
            v322 = a2[13];
            *(_QWORD *)(a1 + 96) = v321;
            *(_QWORD *)(a1 + 104) = v322;
            (**(void (***)(_OWORD *, _OWORD *))(v321 - 8))(v319, v320);
          }
          else
          {
            v350 = *(_OWORD *)(a2 + 11);
            *v319 = *v320;
            *(_OWORD *)(a1 + 88) = v350;
            *(_QWORD *)(a1 + 104) = a2[13];
          }
          v351 = (_OWORD *)(a1 + 112);
          v352 = a2 + 14;
          v353 = a2[17];
          if (v353)
          {
            v354 = a2[18];
            *(_QWORD *)(a1 + 136) = v353;
            *(_QWORD *)(a1 + 144) = v354;
            (**(void (***)(_OWORD *, _OWORD *))(v353 - 8))(v351, v352);
          }
          else
          {
            v367 = *((_OWORD *)a2 + 8);
            *v351 = *v352;
            *(_OWORD *)(a1 + 128) = v367;
            *(_QWORD *)(a1 + 144) = a2[18];
          }
          goto LABEL_227;
        case 0xAu:
          v231 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v231;
          v232 = (int *)type metadata accessor for FeedEngagementBanner();
          v233 = v232[5];
          v234 = a1 + v233;
          v235 = (uint64_t)a2 + v233;
          v236 = sub_1BB86EDAC();
          v237 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v236 - 8) + 16);
          swift_bridgeObjectRetain();
          v237(v234, v235, v236);
          *(_QWORD *)(a1 + v232[6]) = *(uint64_t *)((char *)a2 + v232[6]);
          v238 = v232[7];
          v239 = a1 + v238;
          v240 = (uint64_t)a2 + v238;
          *(_QWORD *)v239 = *(_QWORD *)v240;
          *(_BYTE *)(v239 + 8) = *(_BYTE *)(v240 + 8);
          v241 = v232[8];
          v174 = a1 + v241;
          v175 = (uint64_t)a2 + v241;
          v176 = *(_QWORD *)(v175 + 8);
          if (v176 >= 0x11)
          {
LABEL_84:
            *(_QWORD *)v174 = *(_QWORD *)v175;
            *(_QWORD *)(v174 + 8) = v176;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v174 = *(_OWORD *)v175;
          }
          goto LABEL_227;
        case 0xBu:
          *(_QWORD *)a1 = *a2;
          swift_retain();
          goto LABEL_227;
        case 0xCu:
          v242 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v242;
          v243 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v243;
          *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_227;
        case 0xDu:
          v244 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v244;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v245 = a2 + 3;
          v246 = a2[4];
          if (v246 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v245;
            *(_QWORD *)(a1 + 32) = v246;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v245;
          }
          v291 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v291;
          v292 = (void *)a2[8];
          *(_QWORD *)(a1 + 56) = a2[7];
          *(_QWORD *)(a1 + 64) = v292;
          *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
          *(_QWORD *)(a1 + 80) = a2[10];
          v293 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v294 = v292;
          swift_bridgeObjectRetain();
          if (v293)
          {
            v295 = a2[15];
            *(_QWORD *)(a1 + 112) = v293;
            *(_QWORD *)(a1 + 120) = v295;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v293 - 8))(a1 + 88, (uint64_t)(a2 + 11), v293);
          }
          else
          {
            v339 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 104) = v339;
            *(_QWORD *)(a1 + 120) = a2[15];
          }
          v340 = (_OWORD *)(a1 + 128);
          v341 = a2 + 16;
          v342 = a2[19];
          if (v342)
          {
            v343 = a2[20];
            *(_QWORD *)(a1 + 152) = v342;
            *(_QWORD *)(a1 + 160) = v343;
            (**(void (***)(_OWORD *, _OWORD *))(v342 - 8))(v340, v341);
          }
          else
          {
            v366 = *((_OWORD *)a2 + 9);
            *v340 = *v341;
            *(_OWORD *)(a1 + 144) = v366;
            *(_QWORD *)(a1 + 160) = a2[20];
          }
          goto LABEL_227;
        case 0xEu:
          v247 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v247;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v248 = a2 + 3;
          v249 = a2[4];
          if (v249 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v248;
            *(_QWORD *)(a1 + 32) = v249;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v248;
          }
          v296 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v296;
          *(_QWORD *)(a1 + 56) = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_227;
        case 0xFu:
          v250 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v250;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v251 = a2 + 3;
          v252 = a2[4];
          if (v252 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v251;
            *(_QWORD *)(a1 + 32) = v252;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v251;
          }
          v297 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v297;
          v298 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)(a1 + v298) = *(uint64_t *)((char *)a2 + v298);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v299 = (char *)&loc_1BA71F580 + 4 * word_1BB8F029E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x10u:
          v253 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v253;
          v254 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v254;
          v255 = a2[5];
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_QWORD *)(a1 + 40) = v255;
          *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          v256 = a2[10];
          v257 = a2[11];
          *(_QWORD *)(a1 + 72) = a2[9];
          *(_QWORD *)(a1 + 80) = v256;
          v258 = a2[12];
          v259 = a2[13];
          *(_QWORD *)(a1 + 88) = v257;
          *(_QWORD *)(a1 + 96) = v258;
          *(_QWORD *)(a1 + 104) = v259;
          *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
          v260 = a1;
          v261 = a2[16];
          *(_QWORD *)(v260 + 120) = a2[15];
          *(_QWORD *)(v260 + 128) = v261;
          *(_BYTE *)(v260 + 136) = *((_BYTE *)a2 + 136);
          v262 = a2[19];
          *(_QWORD *)(v260 + 144) = a2[18];
          *(_QWORD *)(v260 + 152) = v262;
          v263 = a2[21];
          *(_QWORD *)(v260 + 160) = a2[20];
          *(_QWORD *)(v260 + 168) = v263;
          *(_BYTE *)(v260 + 184) = *((_BYTE *)a2 + 184);
          *(_QWORD *)(v260 + 176) = a2[22];
          v264 = a2[25];
          *(_QWORD *)(v260 + 192) = a2[24];
          *(_QWORD *)(v260 + 200) = v264;
          *(_BYTE *)(v260 + 224) = *((_BYTE *)a2 + 224);
          v265 = a2[27];
          *(_QWORD *)(v260 + 208) = a2[26];
          *(_QWORD *)(v260 + 216) = v265;
          v266 = a2 + 29;
          v267 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v267 >= 0x11)
          {
            *(_QWORD *)(v260 + 232) = *v266;
            *(_QWORD *)(v260 + 240) = v267;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v260 + 232) = *(_OWORD *)v266;
          }
          a1 = v260;
LABEL_112:
          swift_storeEnumTagMultiPayload();
          a2 = v565;
          goto LABEL_228;
        default:
          memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          goto LABEL_228;
      }
    case 5u:
      v12 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v12;
      v13 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v13;
      v14 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v14;
      v15 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v15;
      v16 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v16;
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      v17 = a1;
      v18 = a2[12];
      *(_QWORD *)(v17 + 88) = a2[11];
      *(_QWORD *)(v17 + 96) = v18;
      *(_BYTE *)(v17 + 104) = *((_BYTE *)a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v17;
      swift_bridgeObjectRetain();
      goto LABEL_241;
    case 6u:
      v19 = type metadata accessor for FormatAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)a1 = *a2;
          v20 = (void **)(a2 + 1);
          v21 = *((unsigned __int8 *)a2 + 16);
          swift_bridgeObjectRetain();
          if (v21 <= 0xFD)
          {
            v156 = *v20;
            sub_1BA727178(v156, v21);
            *(_QWORD *)(a1 + 8) = v156;
            *(_BYTE *)(a1 + 16) = v21;
          }
          else
          {
            *(_QWORD *)(a1 + 8) = *v20;
            *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          }
          goto LABEL_200;
        case 1u:
          v111 = *a2;
          v112 = a2[1];
          v113 = a2[2];
          v114 = a2[3];
          v559 = v19;
          v115 = a2[4];
          v116 = *((_BYTE *)a2 + 41);
          v117 = a1;
          v118 = *((_BYTE *)a2 + 40);
          sub_1BA7271AC((id)*a2, v112, v113, v114, v115, v118, v116);
          *(_QWORD *)v117 = v111;
          *(_QWORD *)(v117 + 8) = v112;
          *(_QWORD *)(v117 + 16) = v113;
          *(_QWORD *)(v117 + 24) = v114;
          *(_QWORD *)(v117 + 32) = v115;
          v19 = v559;
          *(_BYTE *)(v117 + 40) = v118;
          a1 = v117;
          *(_BYTE *)(v117 + 41) = v116;
          v119 = (void *)a2[7];
          *(_QWORD *)(v117 + 48) = a2[6];
          LOBYTE(v112) = *((_BYTE *)a2 + 64);
          swift_bridgeObjectRetain();
          sub_1BA727178(v119, v112);
          *(_QWORD *)(v117 + 56) = v119;
          *(_BYTE *)(v117 + 64) = v112;
          goto LABEL_200;
        case 2u:
          *(_QWORD *)a1 = *a2;
          swift_retain();
          goto LABEL_200;
        case 4u:
          v120 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v120;
          v121 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v121;
          v122 = a2[5];
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_QWORD *)(a1 + 40) = v122;
          v560 = v19;
          v123 = a2[6];
          v124 = a2[7];
          v125 = a1;
          v126 = a2[8];
          v127 = a2[9];
          v128 = *((_BYTE *)a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA7261E0(v123, v124, v126, v127, v128);
          *(_QWORD *)(v125 + 48) = v123;
          *(_QWORD *)(v125 + 56) = v124;
          v19 = v560;
          *(_QWORD *)(v125 + 64) = v126;
          *(_QWORD *)(v125 + 72) = v127;
          a1 = v125;
          *(_BYTE *)(v125 + 80) = v128;
          v129 = a2[12];
          *(_QWORD *)(v125 + 88) = a2[11];
          *(_QWORD *)(v125 + 96) = v129;
          v130 = a2[14];
          *(_QWORD *)(v125 + 104) = a2[13];
          *(_QWORD *)(v125 + 112) = v130;
          *(_QWORD *)(v125 + 120) = a2[15];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_200;
        case 5u:
          v131 = type metadata accessor for FormatPurchaseData(0);
          v132 = swift_getEnumCaseMultiPayload();
          if (v132 == 1)
          {
            v268 = type metadata accessor for FormatPurchaseLandingPageData();
            v269 = *(_QWORD *)(v268 - 8);
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v269 + 48))(a2, 1, v268))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
              memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
            }
            else
            {
              v564 = v19;
              v323 = a2;
              v324 = a2[1];
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = v324;
              v325 = *(int *)(v268 + 20);
              v326 = (void *)(a1 + v325);
              v566 = v323;
              v327 = (char *)v323 + v325;
              v328 = type metadata accessor for FormatPostPurchaseData();
              v329 = *(_QWORD *)(v328 - 8);
              v330 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v329 + 48);
              swift_bridgeObjectRetain();
              if (v330(v327, 1, v328))
              {
                sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                memcpy(v326, v327, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
              }
              else
              {
                v408 = a1;
                v409 = sub_1BB86C67C();
                v410 = *(_QWORD *)(v409 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v410 + 48))(v327, 2, v409))
                {
                  memcpy(v326, v327, *(_QWORD *)(v329 + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v410 + 16))(v326, v327, v409);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v410 + 56))(v326, 0, 2, v409);
                }
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v329 + 56))(v326, 0, 1, v328);
                a1 = v408;
              }
              v19 = v564;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v269 + 56))(a1, 0, 1, v268);
              a2 = v566;
            }
          }
          else
          {
            if (v132)
            {
              memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
              goto LABEL_200;
            }
            v561 = v19;
            v133 = a2[1];
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = v133;
            v134 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
            v135 = (void *)(a1 + v134);
            v136 = (char *)a2 + v134;
            v137 = type metadata accessor for FormatPostPurchaseData();
            v138 = *(_QWORD *)(v137 - 8);
            v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
            swift_bridgeObjectRetain();
            if (v139(v136, 1, v137))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
            }
            else
            {
              v300 = sub_1BB86C67C();
              v301 = *(_QWORD *)(v300 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v301 + 48))(v136, 2, v300))
              {
                memcpy(v135, v136, *(_QWORD *)(v138 + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v301 + 16))(v135, v136, v300);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v301 + 56))(v135, 0, 2, v300);
              }
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
            }
            v19 = v561;
          }
          swift_storeEnumTagMultiPayload();
LABEL_200:
          swift_storeEnumTagMultiPayload();
LABEL_201:
          v460 = type metadata accessor for FormatButtonNodeDataAction();
          v461 = *(int *)(v460 + 20);
          v462 = *(void **)((char *)a2 + v461);
          *(_QWORD *)(a1 + v461) = v462;
          v463 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
          v464 = (_QWORD *)(a1 + v463);
          v465 = (uint64_t *)((char *)a2 + v463);
          v466 = *(_QWORD *)(v460 - 8);
          v467 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v466 + 48);
          v468 = v462;
          if (v467(v465, 1, v460))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
            memcpy(v464, v465, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                *v464 = *v465;
                v470 = (void **)(v465 + 1);
                v471 = *((unsigned __int8 *)v465 + 16);
                swift_bridgeObjectRetain();
                if (v471 <= 0xFD)
                {
                  v499 = *v470;
                  sub_1BA727178(v499, v471);
                  v464[1] = v499;
                  *((_BYTE *)v464 + 16) = v471;
                }
                else
                {
                  v464[1] = *v470;
                  *((_BYTE *)v464 + 16) = *((_BYTE *)v465 + 16);
                }
                goto LABEL_239;
              case 1u:
                v567 = v466;
                v472 = *v465;
                v473 = v465[1];
                v474 = v465[2];
                v475 = v465[3];
                v476 = v465[4];
                v477 = *((_BYTE *)v465 + 41);
                v571 = a1;
                v478 = *((_BYTE *)v465 + 40);
                sub_1BA7271AC((id)*v465, v473, v474, v475, v476, v478, v477);
                *v464 = v472;
                v464[1] = v473;
                v464[2] = v474;
                v464[3] = v475;
                v464[4] = v476;
                *((_BYTE *)v464 + 40) = v478;
                a1 = v571;
                *((_BYTE *)v464 + 41) = v477;
                v479 = (void *)v465[7];
                v464[6] = v465[6];
                LOBYTE(v473) = *((_BYTE *)v465 + 64);
                swift_bridgeObjectRetain();
                sub_1BA727178(v479, v473);
                v464[7] = v479;
                *((_BYTE *)v464 + 64) = v473;
                v466 = v567;
                goto LABEL_239;
              case 2u:
                *v464 = *v465;
                swift_retain();
                goto LABEL_239;
              case 4u:
                v480 = v465[1];
                *v464 = *v465;
                v464[1] = v480;
                v481 = v465[3];
                v464[2] = v465[2];
                v464[3] = v481;
                v482 = v465[5];
                v464[4] = v465[4];
                v464[5] = v482;
                v483 = v465[6];
                v484 = v465[7];
                v572 = a1;
                v486 = v465[8];
                v485 = v465[9];
                v556 = *((_BYTE *)v465 + 80);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BA7261E0(v483, v484, v486, v485, v556);
                v464[6] = v483;
                v464[7] = v484;
                v464[8] = v486;
                v464[9] = v485;
                a1 = v572;
                *((_BYTE *)v464 + 80) = v556;
                v487 = v465[12];
                v464[11] = v465[11];
                v464[12] = v487;
                v488 = v465[14];
                v464[13] = v465[13];
                v464[14] = v488;
                v464[15] = v465[15];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_239;
              case 5u:
                v489 = type metadata accessor for FormatPurchaseData(0);
                v490 = swift_getEnumCaseMultiPayload();
                if (v490 == 1)
                {
                  v569 = v466;
                  v500 = type metadata accessor for FormatPurchaseLandingPageData();
                  v501 = *(_QWORD *)(v500 - 8);
                  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v501 + 48))(v465, 1, v500))
                  {
                    sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                    memcpy(v464, v465, *(_QWORD *)(*(_QWORD *)(v502 - 8) + 64));
                  }
                  else
                  {
                    v574 = a1;
                    v505 = v465[1];
                    *v464 = *v465;
                    v464[1] = v505;
                    v506 = *(int *)(v500 + 20);
                    v557 = (char *)v464 + v506;
                    v507 = (char *)v465 + v506;
                    v508 = type metadata accessor for FormatPostPurchaseData();
                    v550 = *(_QWORD *)(v508 - 8);
                    v509 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v550 + 48);
                    swift_bridgeObjectRetain();
                    if (v509(v507, 1, v508))
                    {
                      sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                      memcpy(v557, v507, *(_QWORD *)(*(_QWORD *)(v510 - 8) + 64));
                    }
                    else
                    {
                      v511 = sub_1BB86C67C();
                      v512 = *(_QWORD *)(v511 - 8);
                      v546 = v511;
                      if ((*(unsigned int (**)(char *, uint64_t))(v512 + 48))(v507, 2))
                      {
                        v513 = v550;
                        memcpy(v557, v507, *(_QWORD *)(v550 + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v512 + 16))(v557, v507, v546);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v512 + 56))(v557, 0, 2, v546);
                        v513 = v550;
                      }
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v513 + 56))(v557, 0, 1, v508);
                    }
                    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v501 + 56))(v464, 0, 1, v500);
                    a1 = v574;
                  }
                  v466 = v569;
                }
                else
                {
                  if (v490)
                  {
                    memcpy(v464, v465, *(_QWORD *)(*(_QWORD *)(v489 - 8) + 64));
                    goto LABEL_239;
                  }
                  v568 = v466;
                  v573 = a1;
                  v491 = v465[1];
                  *v464 = *v465;
                  v464[1] = v491;
                  v492 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                  v493 = (char *)v464 + v492;
                  v494 = (char *)v465 + v492;
                  v495 = type metadata accessor for FormatPostPurchaseData();
                  v496 = *(_QWORD *)(v495 - 8);
                  v497 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v496 + 48);
                  swift_bridgeObjectRetain();
                  if (v497(v494, 1, v495))
                  {
                    sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                    memcpy(v493, v494, *(_QWORD *)(*(_QWORD *)(v498 - 8) + 64));
                  }
                  else
                  {
                    v503 = sub_1BB86C67C();
                    v504 = *(_QWORD *)(v503 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v504 + 48))(v494, 2, v503))
                    {
                      memcpy(v493, v494, *(_QWORD *)(v496 + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v504 + 16))(v493, v494, v503);
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v504 + 56))(v493, 0, 2, v503);
                    }
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v496 + 56))(v493, 0, 1, v495);
                  }
                  v466 = v568;
                  a1 = v573;
                }
                swift_storeEnumTagMultiPayload();
LABEL_239:
                swift_storeEnumTagMultiPayload();
LABEL_240:
                v536 = *(int *)(v460 + 20);
                v537 = *(void **)((char *)v465 + v536);
                *(_QWORD *)((char *)v464 + v536) = v537;
                v538 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v466 + 56);
                v539 = v537;
                v538(v464, 0, 1, v460);
                break;
              default:
                memcpy(v464, v465, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
                goto LABEL_240;
            }
          }
          break;
        default:
          memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          goto LABEL_201;
      }
      goto LABEL_241;
    case 0xAu:
      v22 = type metadata accessor for FormatViewBackground(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v141 = a2[2];
          v551 = (void *)a2[3];
          v142 = a2[4];
          v143 = a2[5];
          v144 = a2[6];
          v145 = a2[7];
          v146 = a2[8];
          v547 = a2[9];
          v562 = *((_BYTE *)a2 + 80);
          sub_1BAA8C5C0(v141, (uint64_t)v551, v142, v143, v144, v145, v146, v547, v562);
          *(_QWORD *)(a1 + 16) = v141;
          *(_QWORD *)(a1 + 24) = v551;
          *(_QWORD *)(a1 + 32) = v142;
          *(_QWORD *)(a1 + 40) = v143;
          *(_QWORD *)(a1 + 48) = v144;
          *(_QWORD *)(a1 + 56) = v145;
          *(_QWORD *)(a1 + 64) = v146;
          *(_QWORD *)(a1 + 72) = v547;
          *(_BYTE *)(a1 + 80) = v562;
          v147 = a2[11];
          v148 = a2[13];
          v149 = a2[14];
          v150 = a2[15];
          v151 = a2[16];
          v153 = a2[17];
          v152 = a2[18];
          v552 = (void *)v152;
          v563 = a2[12];
          v154 = *((_BYTE *)a2 + 152);
          sub_1BAA8C5C0(v147, v563, v148, v149, v150, v151, v153, v152, v154);
          *(_QWORD *)(a1 + 88) = v147;
          *(_QWORD *)(a1 + 96) = v563;
          *(_QWORD *)(a1 + 104) = v148;
          *(_QWORD *)(a1 + 112) = v149;
          *(_QWORD *)(a1 + 120) = v150;
          *(_QWORD *)(a1 + 128) = v151;
          *(_QWORD *)(a1 + 136) = v153;
          *(_QWORD *)(a1 + 144) = v552;
          *(_BYTE *)(a1 + 152) = v154;
        }
        else if (v92 == 1)
        {
          *(_QWORD *)a1 = *a2;
          v93 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
          v94 = (void *)(a1 + v93);
          v95 = (char *)a2 + v93;
          v96 = sub_1BB86FBD4();
          v97 = *(_QWORD *)(v96 - 8);
          v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
          swift_retain();
          if (v98(v95, 1, v96))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v97 + 16))(v94, v95, v96);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
          }
        }
        else
        {
          v155 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v155;
          swift_retain();
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
      }
      goto LABEL_241;
    case 0xBu:
      *(_QWORD *)a1 = *a2;
      v25 = type metadata accessor for FormatMicaData();
      v26 = *(int *)(v25 + 20);
      v27 = (void *)(a1 + v26);
      v28 = (char *)a2 + v26;
      v29 = sub_1BB86FBD4();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_retain();
      if (v31(v28, 1, v29))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v100 = *(int *)(v25 + 24);
      v101 = a1 + v100;
      v102 = (uint64_t)a2 + v100;
      *(_DWORD *)v101 = *(_DWORD *)v102;
      *(_BYTE *)(v101 + 4) = *(_BYTE *)(v102 + 4);
      goto LABEL_241;
    case 0xCu:
      v33 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v33;
      v34 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v34;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_241;
    case 0xDu:
      v35 = sub_1BB86C67C();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v36 + 16);
      v37(a1, a2, v35);
      v38 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      v39 = (void *)(a1 + v38);
      v40 = (char *)a2 + v38;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))((uint64_t)a2 + v38, 1, v35))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v37((uint64_t)v39, (uint64_t *)v40, v35);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      v103 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
      v104 = a1 + v103;
      v105 = (uint64_t)a2 + v103;
      v106 = *(void **)v105;
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *(_BYTE *)(v104 + 8) = *(_BYTE *)(v105 + 8);
      *(_QWORD *)(v104 + 16) = *(_QWORD *)(v105 + 16);
      *(_WORD *)(v104 + 24) = *(_WORD *)(v105 + 24);
      v108 = *(void **)(v105 + 32);
      v107 = *(_QWORD *)(v105 + 40);
      *(_QWORD *)(v104 + 32) = v108;
      *(_QWORD *)(v104 + 40) = v107;
      v109 = v106;
      v110 = v108;
      goto LABEL_241;
    case 0xEu:
      v42 = (void *)*a2;
      v43 = a2[1];
      v44 = (void *)a2[2];
      v45 = a2[3];
      v46 = (void *)a2[4];
      v47 = a2[5];
      v48 = (void *)a2[6];
      v49 = *((_BYTE *)a2 + 56);
      sub_1BA8996DC(v42, v43, v44, v45, v46, v47, v48, v49);
      *(_QWORD *)a1 = v42;
      *(_QWORD *)(a1 + 8) = v43;
      *(_QWORD *)(a1 + 16) = v44;
      *(_QWORD *)(a1 + 24) = v45;
      *(_QWORD *)(a1 + 32) = v46;
      *(_QWORD *)(a1 + 40) = v47;
      *(_QWORD *)(a1 + 48) = v48;
      *(_BYTE *)(a1 + 56) = v49;
      goto LABEL_241;
    case 0xFu:
      v50 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(a1, a2, v50);
      v51 = (int *)type metadata accessor for SharedItem();
      *(_BYTE *)(a1 + v51[5]) = *((_BYTE *)a2 + v51[5]);
      v52 = v51[6];
      v53 = *(void **)((char *)a2 + v52);
      *(_QWORD *)(a1 + v52) = v53;
      v54 = v51[7];
      v55 = a1 + v54;
      v56 = (uint64_t)a2 + v54;
      v57 = sub_1BB86C67C();
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      v59 = v53;
      v58(v55, v56, v57);
      goto LABEL_241;
    case 0x10u:
      v60 = (void *)*a2;
      v61 = a2[1];
      v62 = a2[2];
      v63 = a2[3];
      v64 = a2[4];
      v65 = a2[5];
      v66 = a2;
      v68 = a2[6];
      v67 = a2[7];
      v69 = *((_BYTE *)v66 + 64);
      sub_1BA7F6D0C(v60, v61, v62, v63, v64, v65, v68, v67, v69);
      *(_QWORD *)a1 = v60;
      *(_QWORD *)(a1 + 8) = v61;
      *(_QWORD *)(a1 + 16) = v62;
      *(_QWORD *)(a1 + 24) = v63;
      *(_QWORD *)(a1 + 32) = v64;
      *(_QWORD *)(a1 + 40) = v65;
      *(_QWORD *)(a1 + 48) = v68;
      *(_QWORD *)(a1 + 56) = v67;
      *(_BYTE *)(a1 + 64) = v69;
      goto LABEL_241;
    case 0x11u:
      v70 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v70;
      v71 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v71;
      v72 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v72;
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      v73 = (int *)type metadata accessor for FormatVideoPlayerData();
      v74 = v73[9];
      v558 = a1 + v74;
      v75 = (uint64_t)a2 + v74;
      v76 = a1;
      v77 = sub_1BB86C67C();
      v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v79 = v77;
      a1 = v76;
      v78(v558, v75, v79);
      *(_QWORD *)(v76 + v73[10]) = *(uint64_t *)((char *)a2 + v73[10]);
      *(_BYTE *)(v76 + v73[11]) = *((_BYTE *)a2 + v73[11]);
      v80 = v73[12];
      v81 = v76 + v80;
      v82 = (uint64_t)a2 + v80;
      *(_OWORD *)v81 = *(_OWORD *)v82;
      v83 = *(_QWORD *)(v82 + 24);
      *(_QWORD *)(v81 + 16) = *(_QWORD *)(v82 + 16);
      *(_QWORD *)(v81 + 24) = v83;
      *(_BYTE *)(v81 + 32) = *(_BYTE *)(v82 + 32);
      v84 = *(_QWORD *)(v82 + 48);
      *(_QWORD *)(v81 + 40) = *(_QWORD *)(v82 + 40);
      *(_QWORD *)(v81 + 48) = v84;
      *(_BYTE *)(v76 + v73[13]) = *((_BYTE *)a2 + v73[13]);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_241;
    case 0x12u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v85 = a2[1];
      sub_1BA897950(v85);
      *(_QWORD *)(a1 + 8) = v85;
      goto LABEL_241;
    case 0x14u:
      v86 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v86;
      v87 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v88 = a1 + v87;
      v89 = (uint64_t)a2 + v87;
      v90 = sub_1BB871E24();
      v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v88, v89, v90);
      goto LABEL_241;
    default:
      memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

void sub_1BA7213E0(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  int EnumCaseMultiPayload;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v10 = sub_1BB871B24();
      goto LABEL_27;
    case 1u:
    case 2u:
    case 3u:
    case 7u:
    case 8u:
    case 0x13u:
      goto LABEL_21;
    case 4u:
      type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 48) < 0x11uLL)
            goto LABEL_106;
          goto LABEL_105;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) < 0x11uLL)
            goto LABEL_106;
          goto LABEL_105;
        case 2u:
          swift_bridgeObjectRelease();
          v25 = type metadata accessor for FeedBannerAd();
          v26 = a1 + *(int *)(v25 + 20);
          v27 = sub_1BB8721C0();
          goto LABEL_88;
        case 3u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v28 = (int *)type metadata accessor for FeedHeadline(0);
          v29 = a1 + v28[10];
          v30 = v29 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v31 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
          {
            v32 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);

            v33 = v30 + *(int *)(v31 + 28);
            v34 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
          }
          v35 = a1 + v28[11];
          v36 = sub_1BB871B24();
          v37 = *(_QWORD *)(v36 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
          if (*(_QWORD *)(a1 + v28[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + v28[13]) >= 3uLL)
            swift_unknownObjectRelease();

          goto LABEL_106;
        case 4u:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v38 = (int *)type metadata accessor for FeedWebEmbed();
          v39 = a1 + v38[8];
          v40 = sub_1BB86C67C();
          v41 = *(_QWORD *)(v40 - 8);
          v42 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
          v42(v39, v40);
          v43 = a1 + v38[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v43, 1, v40))
            v42(v43, v40);
          swift_release();
          swift_release();
          v44 = a1 + v38[12];
          v45 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v45 - 1) + 48))(v44, 1, v45))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            v46 = v45[10];
            v47 = v44 + v46 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            v48 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
            {
              v49 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v47, v49);

              v42(v47 + *(int *)(v48 + 28), v40);
            }
            v50 = v44 + v45[11];
            v51 = sub_1BB871B24();
            v52 = *(_QWORD *)(v51 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
              (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
            if (*(_QWORD *)(v44 + v45[12] + 8) >= 0x11uLL)
              swift_bridgeObjectRelease();
            if (*(_QWORD *)(v44 + v45[13]) >= 3uLL)
              swift_unknownObjectRelease();

          }
          v53 = a1 + v38[13];
          v54 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v53, 1, v54))
            goto LABEL_106;
          if (swift_getEnumCaseMultiPayload() != 1)
            goto LABEL_90;
          swift_bridgeObjectRelease();
          v55 = type metadata accessor for GenericDataVisualization();
          v42(v53 + *(int *)(v55 + 20), v40);
          goto LABEL_105;
        case 5u:
          goto LABEL_71;
        case 6u:
          v56 = *(unsigned __int8 *)(a1 + 281);
          if (v56 == 2)
            goto LABEL_75;
          if (v56 == 1)
          {

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
              swift_bridgeObjectRelease();
            v82 = *(void **)(a1 + 144);
            if (!v82)
              goto LABEL_106;

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 224) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(a1 + 272) < 0x11uLL)
              goto LABEL_106;
LABEL_105:
            swift_bridgeObjectRelease();
            goto LABEL_106;
          }
          if (*(_BYTE *)(a1 + 281))
            goto LABEL_106;
LABEL_71:

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
            goto LABEL_105;
LABEL_106:
          v63 = (int *)type metadata accessor for FormatItemNodeData();
          v64 = a1 + v63[5];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v64 + 56) >= 0xFuLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA7280A0(*(_QWORD *)(a1 + v63[6]));
          v65 = a1 + v63[7];
          v66 = sub_1BB86FE38();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
          if (*(_QWORD *)(a1 + v63[8] + 8))
          {
            swift_bridgeObjectRelease();
LABEL_110:
            swift_bridgeObjectRelease();
          }
          return;
        case 7u:
LABEL_75:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 88) != 1)
          {
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 120))
              __swift_destroy_boxed_opaque_existential_1(a1 + 96);
          }
          goto LABEL_106;
        case 8u:
          swift_bridgeObjectRelease();
          v57 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v58 = v57 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
          v59 = type metadata accessor for FormatCustomItem.Action();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
          {
            v60 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v58, v60);
          }
          goto LABEL_105;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56))
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          if (*(_QWORD *)(a1 + 96))
            __swift_destroy_boxed_opaque_existential_1(a1 + 72);
          if (*(_QWORD *)(a1 + 136))
            __swift_destroy_boxed_opaque_existential_1(a1 + 112);
          goto LABEL_106;
        case 0xAu:
          swift_bridgeObjectRelease();
          v25 = type metadata accessor for FeedEngagementBanner();
          v26 = a1 + *(int *)(v25 + 20);
          v27 = sub_1BB86EDAC();
LABEL_88:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
          if (*(_QWORD *)(a1 + *(int *)(v25 + 32) + 8) < 0x11uLL)
            goto LABEL_106;
          goto LABEL_105;
        case 0xBu:
LABEL_90:
          swift_release();
          goto LABEL_106;
        case 0xCu:
          goto LABEL_99;
        case 0xDu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 112))
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          if (*(_QWORD *)(a1 + 152))
            __swift_destroy_boxed_opaque_existential_1(a1 + 128);
          goto LABEL_106;
        case 0xEu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
LABEL_99:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_106;
        case 0xFu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v61 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          v62 = v61 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_152;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                v84 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v62, 1, v84))
                {
                  v85 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v62, v85);
                }
              }
              v86 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              v87 = v62 + *(int *)(v86 + 20);
              v88 = swift_getEnumCaseMultiPayload();
              if (v88 == 5 || v88 == 4)
              {
                v89 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v87, 1, v89))
                {
                  v90 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v87, v90);
                }
              }
              v62 += *(int *)(v86 + 24);
LABEL_152:
              v91 = swift_getEnumCaseMultiPayload();
              if (v91 == 5 || v91 == 4)
              {
                v92 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 48))(v62, 1, v92))goto LABEL_163;
              }
              goto LABEL_106;
            case 2u:
              v93 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v62, 1, v93))
              {
                goto LABEL_106;
              }
              v94 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 8))(v62, v94);
              v95 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              v96 = v62 + *(int *)(v95 + 24);
              swift_bridgeObjectRelease();
              v97 = *(_QWORD *)(v96 + 24);
              if (v97 >> 60 != 15)
                sub_1BA69D314(*(_QWORD *)(v96 + 16), v97);
              goto LABEL_105;
            case 3u:
              v98 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              v99 = v62 + *(int *)(v98 + 24);
              v100 = type metadata accessor for PuzzleStreak();
              v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 48);
              if (!v101(v99, 1, v100))
              {
                v102 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 8))(v99, v102);
              }
              v62 += *(int *)(v98 + 28);
              if (!v101(v62, 1, v100))
              {
LABEL_163:
                v103 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 8))(v62, v103);
              }
              goto LABEL_106;
            default:
              goto LABEL_106;
          }
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
            goto LABEL_105;
          goto LABEL_106;
        default:
          goto LABEL_106;
      }
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_110;
    case 6u:
      type metadata accessor for FormatAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v11 = *(unsigned __int8 *)(a1 + 16);
          if (v11 <= 0xFD)
            sub_1BA726DA4(*(void **)(a1 + 8), v11);
          goto LABEL_116;
        case 1u:
          sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
          swift_bridgeObjectRelease();
          sub_1BA726DA4(*(void **)(a1 + 56), *(_BYTE *)(a1 + 64));
          goto LABEL_116;
        case 2u:
          swift_release();
          goto LABEL_116;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6C1F54(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_116;
        case 5u:
          type metadata accessor for FormatPurchaseData(0);
          v23 = swift_getEnumCaseMultiPayload();
          if (v23 == 1)
          {
            v67 = type metadata accessor for FormatPurchaseLandingPageData();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(a1, 1, v67))
              goto LABEL_116;
            swift_bridgeObjectRelease();
            v24 = *(int *)(v67 + 20);
          }
          else
          {
            if (v23)
              goto LABEL_116;
            swift_bridgeObjectRelease();
            v24 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          }
          v68 = a1 + v24;
          v69 = type metadata accessor for FormatPostPurchaseData();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v68, 1, v69))
          {
            v70 = sub_1BB86C67C();
            v71 = *(_QWORD *)(v70 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v68, 2, v70))
              (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v68, v70);
          }
LABEL_116:
          v72 = type metadata accessor for FormatButtonNodeDataAction();

          v73 = a1 + *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v73, 1, v72))
            return;
          break;
        default:
          goto LABEL_116;
      }
      break;
    case 0xAu:
      v2 = type metadata accessor for FormatViewBackground(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
        return;
      v3 = swift_getEnumCaseMultiPayload();
      switch(v3)
      {
        case 2:
          sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
          sub_1BAA4E044(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
          break;
        case 1:
          swift_release();
          v12 = type metadata accessor for FormatViewBackground.Mica(0);
LABEL_23:
          v13 = a1 + *(int *)(v12 + 20);
          v14 = sub_1BB86FBD4();
          v15 = *(_QWORD *)(v14 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
          {
            v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
            v17 = v13;
            v18 = v14;
LABEL_28:
            v16(v17, v18);
          }
          break;
        case 0:
          swift_release();
LABEL_21:
          swift_release();
          break;
      }
      return;
    case 0xBu:
      swift_release();
      v12 = type metadata accessor for FormatMicaData();
      goto LABEL_23;
    case 0xCu:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 0xDu:
      v4 = sub_1BB86C67C();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v6(a1, v4);
      v7 = a1 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
        v6(v7, v4);
      v8 = a1 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);

      v9 = *(void **)(v8 + 32);
      goto LABEL_133;
    case 0xEu:
      sub_1BA899748(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_BYTE *)(a1 + 56));
      return;
    case 0xFu:
      v19 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
      v20 = type metadata accessor for SharedItem();

      a1 += *(int *)(v20 + 28);
      v10 = sub_1BB86C67C();
      goto LABEL_27;
    case 0x10u:
      sub_1BA7F6D98(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
      return;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v21 = a1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
      v22 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_110;
    case 0x12u:
      sub_1BA8979BC(*(_QWORD *)(a1 + 8));
      return;
    case 0x14u:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v10 = sub_1BB871E24();
LABEL_27:
      v18 = v10;
      v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v17 = a1;
      goto LABEL_28;
    default:
      return;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v74 = *(unsigned __int8 *)(v73 + 16);
      if (v74 <= 0xFD)
        sub_1BA726DA4(*(void **)(v73 + 8), v74);
      goto LABEL_132;
    case 1u:
      sub_1BA726DD8(*(void **)v73, *(_QWORD *)(v73 + 8), *(_QWORD *)(v73 + 16), *(_QWORD *)(v73 + 24), *(_QWORD *)(v73 + 32), *(unsigned __int8 *)(v73 + 40), *(_BYTE *)(v73 + 41));
      swift_bridgeObjectRelease();
      sub_1BA726DA4(*(void **)(v73 + 56), *(_BYTE *)(v73 + 64));
      goto LABEL_132;
    case 2u:
      swift_release();
      goto LABEL_132;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(*(_QWORD *)(v73 + 48), *(_QWORD *)(v73 + 56), *(_QWORD *)(v73 + 64), *(_QWORD *)(v73 + 72), *(_BYTE *)(v73 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_132;
    case 5u:
      type metadata accessor for FormatPurchaseData(0);
      v75 = swift_getEnumCaseMultiPayload();
      if (v75 == 1)
      {
        v77 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v73, 1, v77))
          goto LABEL_132;
        swift_bridgeObjectRelease();
        v76 = *(int *)(v77 + 20);
      }
      else
      {
        if (v75)
          goto LABEL_132;
        swift_bridgeObjectRelease();
        v76 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      v78 = v73 + v76;
      v79 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v78, 1, v79))
      {
        v80 = sub_1BB86C67C();
        v81 = *(_QWORD *)(v80 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v78, 2, v80))
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v78, v80);
      }
LABEL_132:
      v9 = *(void **)(v73 + *(int *)(v72 + 20));
LABEL_133:

      return;
    default:
      goto LABEL_132;
  }
}

void sub_1BA7226D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C41E8)
  {
    type metadata accessor for FormatNodeStateData.Data();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C41E8);
  }
}

uint64_t type metadata accessor for FormatViewBackground(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3BA7B0);
}

uint64_t sub_1BA722740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for FormatNodeStateData.Data();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BA5C699C(a1, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BAA49088(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  }
  else
  {
    sub_1BA73E4D0(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C02E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data, (void (*)(_QWORD, __n128))sub_1BA74AFEC, (void (*)(unint64_t, char *))sub_1BA82E948, (void (*)(char *, unint64_t))sub_1BA73E4D0);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for FormatNodeStateData.Data()
{
  uint64_t result;

  result = qword_1ED3C2158;
  if (!qword_1ED3C2158)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatButtonNodeDataAction()
{
  uint64_t result;

  result = qword_1ED3CB6C8;
  if (!qword_1ED3CB6C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t getEnumTagSinglePayload for FormatButtonNodeDataAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for FormatButtonNodeData()
{
  uint64_t result;

  result = qword_1ED3C8B88;
  if (!qword_1ED3C8B88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7229AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BA7229F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  void *v97;
  const void *v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  const void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  const void *v124;
  uint64_t v125;
  unsigned int (**v126)(const void *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  const void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  _OWORD *v140;
  _OWORD *v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int (**v157)(const void *, uint64_t, uint64_t);
  const void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  _OWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _OWORD *v178;
  _OWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  unsigned int (**v187)(const void *, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unsigned int (**v193)(const void *, uint64_t, uint64_t);
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  int *v203;
  uint64_t v204;
  _OWORD *v205;
  _OWORD *v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t result;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int *v222;
  uint64_t v223;
  char *v224;
  _QWORD *v225;
  void (*v226)(char *, char *, void *);
  uint64_t v227;
  uint64_t v228;
  void *v229;
  char *v230;
  void (**v231)(void);
  unsigned int (**v232)(const void *, uint64_t, uint64_t);
  int *v233;
  int *v234;
  unsigned int (**v235)(const void *, uint64_t, uint64_t);
  char *v236;
  char *v237;
  void (**__dst)(void *, const void *, uint64_t);
  void *__dsta;

  if (a1 != a2)
  {
    sub_1BA7249BC(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1BB871B24();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_113;
      case 4u:
        v7 = type metadata accessor for FeedItem(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v8 = (int *)type metadata accessor for FeedBannerAd();
            v9 = v8[5];
            v10 = a1 + v9;
            v11 = a2 + v9;
            v12 = sub_1BB8721C0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
            *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
            v13 = v8[7];
            v14 = a1 + v13;
            v15 = a2 + v13;
            *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
            *(_QWORD *)v14 = *(_QWORD *)v15;
            *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
            goto LABEL_105;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
            *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
            v233 = (int *)type metadata accessor for FeedHeadline(0);
            v78 = v233[10];
            v79 = (_BYTE *)(a1 + v78);
            v80 = a2 + v78;
            *v79 = *(_BYTE *)(a2 + v78);
            v79[1] = *(_BYTE *)(a2 + v78 + 1);
            v81 = (int *)type metadata accessor for FeedHeadline.State(0);
            v82 = v81[6];
            v83 = &v79[v82];
            v84 = (char *)(v80 + v82);
            v85 = (int *)type metadata accessor for SharedItem();
            v86 = *((_QWORD *)v85 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
            {
              v87 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            }
            else
            {
              v128 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v83, v84, v128);
              v83[v85[5]] = v84[v85[5]];
              *(_QWORD *)&v83[v85[6]] = *(_QWORD *)&v84[v85[6]];
              v129 = v85[7];
              v230 = &v83[v129];
              v130 = &v84[v129];
              v131 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v230, v130, v131);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
            }
            v79[v81[7]] = *(_BYTE *)(v80 + v81[7]);
            v79[v81[8]] = *(_BYTE *)(v80 + v81[8]);
            v79[v81[9]] = *(_BYTE *)(v80 + v81[9]);
            v79[v81[10]] = *(_BYTE *)(v80 + v81[10]);
            v132 = v233[11];
            v133 = (void *)(a1 + v132);
            v134 = (const void *)(a2 + v132);
            v135 = sub_1BB871B24();
            v136 = *(_QWORD *)(v135 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v133, v134, v135);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
            }
            *(_OWORD *)(a1 + v233[12]) = *(_OWORD *)(a2 + v233[12]);
            v146 = v233[13];
            v147 = *(_QWORD *)(a2 + v146);
            if (v147 == 2)
              v147 = 2;
            *(_QWORD *)(a1 + v146) = v147;
            *(_QWORD *)(a1 + v233[14]) = *(_QWORD *)(a2 + v233[14]);
            goto LABEL_105;
          case 4u:
            v88 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v88;
            *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            v89 = (int *)type metadata accessor for FeedWebEmbed();
            v90 = v89[8];
            v91 = a1 + v90;
            v92 = a2 + v90;
            v93 = sub_1BB86C67C();
            v94 = *(_QWORD *)(v93 - 8);
            v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
            v95(v91, v92, v93);
            v234 = v89;
            v96 = v89[9];
            v97 = (void *)(a1 + v96);
            v98 = (const void *)(a2 + v96);
            v226 = (void (*)(char *, char *, void *))v95;
            v229 = (void *)v93;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(a2 + v96, 1, v93))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
              memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
            }
            else
            {
              v95((uint64_t)v97, (uint64_t)v98, v93);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v97, 0, 1, v93);
            }
            v138 = v89;
            *(_QWORD *)(a1 + v89[10]) = *(_QWORD *)(a2 + v89[10]);
            *(_QWORD *)(a1 + v89[11]) = *(_QWORD *)(a2 + v89[11]);
            v139 = v89[12];
            v140 = (_OWORD *)(a1 + v139);
            v141 = (_OWORD *)(a2 + v139);
            v142 = (int *)type metadata accessor for FeedHeadline(0);
            v143 = *((_QWORD *)v142 - 1);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v143 + 48))(v141, 1, v142))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
            }
            else
            {
              v220 = v143;
              *v140 = *v141;
              *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);
              *((_BYTE *)v140 + 24) = *((_BYTE *)v141 + 24);
              *((_QWORD *)v140 + 4) = *((_QWORD *)v141 + 4);
              *(_OWORD *)((char *)v140 + 40) = *(_OWORD *)((char *)v141 + 40);
              *((_BYTE *)v140 + 56) = *((_BYTE *)v141 + 56);
              v148 = v142[10];
              v149 = (char *)v140 + v148;
              v150 = (char *)v141 + v148;
              *v149 = *((_BYTE *)v141 + v148);
              v149[1] = *((_BYTE *)v141 + v148 + 1);
              v151 = type metadata accessor for FeedHeadline.State(0);
              v152 = *(int *)(v151 + 24);
              v222 = (int *)v151;
              v224 = &v149[v152];
              v153 = &v150[v152];
              v154 = (int *)type metadata accessor for SharedItem();
              v219 = *((_QWORD *)v154 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v219 + 48))(v153, 1, v154))
              {
                v155 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v224, v153, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
              }
              else
              {
                v160 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v224, v153, v160);
                v224[v154[5]] = v153[v154[5]];
                *(_QWORD *)&v224[v154[6]] = *(_QWORD *)&v153[v154[6]];
                v226(&v224[v154[7]], &v153[v154[7]], v229);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v219 + 56))(v224, 0, 1, v154);
              }
              v149[v222[7]] = v150[v222[7]];
              v149[v222[8]] = v150[v222[8]];
              v149[v222[9]] = v150[v222[9]];
              v149[v222[10]] = v150[v222[10]];
              v161 = v142[11];
              v162 = (char *)v140 + v161;
              v163 = (char *)v141 + v161;
              v164 = sub_1BB871B24();
              v165 = *(_QWORD *)(v164 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
              {
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
                memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v162, v163, v164);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
              }
              v138 = v234;
              *(_OWORD *)((char *)v140 + v142[12]) = *(_OWORD *)((char *)v141 + v142[12]);
              v167 = v142[13];
              v168 = *(_QWORD *)((char *)v141 + v167);
              if (v168 == 2)
                v168 = 2;
              *(_QWORD *)((char *)v140 + v167) = v168;
              *(_QWORD *)((char *)v140 + v142[14]) = *(_QWORD *)((char *)v141 + v142[14]);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v220 + 56))(v140, 0, 1, v142);
            }
            v169 = v138[13];
            v170 = (_OWORD *)(a1 + v169);
            v171 = (_OWORD *)(a2 + v169);
            v172 = type metadata accessor for WebEmbedDataVisualization();
            v173 = *(_QWORD *)(v172 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172))
            {
              sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *v170 = *v171;
                v175 = type metadata accessor for GenericDataVisualization();
                v226((char *)v170 + *(int *)(v175 + 20), (char *)v171 + *(int *)(v175 + 20), v229);
                *(_QWORD *)((char *)v170 + *(int *)(v175 + 24)) = *(_QWORD *)((char *)v171 + *(int *)(v175 + 24));
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v170, v171, *(_QWORD *)(v173 + 64));
              }
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
            }
            *(_BYTE *)(a1 + v138[14]) = *(_BYTE *)(a2 + v138[14]);
            goto LABEL_105;
          case 8u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v100 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            v101 = (_OWORD *)(a1 + v100);
            v102 = a2 + v100;
            v103 = *(_OWORD *)(a2 + v100 + 16);
            *v101 = *(_OWORD *)(a2 + v100);
            v101[1] = v103;
            v104 = type metadata accessor for FormatCustomItem.Resolved();
            v105 = *(int *)(v104 + 24);
            v106 = (char *)v101 + v105;
            v107 = (const void *)(v102 + v105);
            v108 = type metadata accessor for FormatCustomItem.Action();
            v109 = *(_QWORD *)(v108 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
            {
              sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
            }
            else
            {
              v145 = sub_1BB86C67C();
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v106, v107, v145);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
            }
            *(_QWORD *)((char *)v101 + *(int *)(v104 + 28)) = *(_QWORD *)(v102 + *(int *)(v104 + 28));
            goto LABEL_105;
          case 0xAu:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v111 = (int *)type metadata accessor for FeedEngagementBanner();
            v112 = v111[5];
            v113 = a1 + v112;
            v114 = a2 + v112;
            v115 = sub_1BB86EDAC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
            *(_QWORD *)(a1 + v111[6]) = *(_QWORD *)(a2 + v111[6]);
            v116 = v111[7];
            v117 = a1 + v116;
            v118 = a2 + v116;
            *(_BYTE *)(v117 + 8) = *(_BYTE *)(v118 + 8);
            *(_QWORD *)v117 = *(_QWORD *)v118;
            *(_OWORD *)(a1 + v111[8]) = *(_OWORD *)(a2 + v111[8]);
LABEL_105:
            swift_storeEnumTagMultiPayload();
            break;
          case 0xFu:
            v119 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v119;
            *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            v120 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            *(_QWORD *)(a1 + v120) = *(_QWORD *)(a2 + v120);
            type metadata accessor for PuzzleStatistic();
            type metadata accessor for PuzzleStatisticCategory(0);
            v121 = (char *)&loc_1BA7233EC + 4 * word_1BB8F03A0[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
            return result;
          default:
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v203 = (int *)type metadata accessor for FormatItemNodeData();
        v204 = v203[5];
        v205 = (_OWORD *)(a1 + v204);
        v206 = (_OWORD *)(a2 + v204);
        v207 = v206[3];
        v205[2] = v206[2];
        v205[3] = v207;
        v208 = v206[1];
        *v205 = *v206;
        v205[1] = v208;
        *(_OWORD *)((char *)v205 + 105) = *(_OWORD *)((char *)v206 + 105);
        v209 = v206[6];
        v210 = v206[4];
        v205[5] = v206[5];
        v205[6] = v209;
        v205[4] = v210;
        *(_QWORD *)(a1 + v203[6]) = *(_QWORD *)(a2 + v203[6]);
        v211 = v203[7];
        v212 = a1 + v211;
        v213 = a2 + v211;
        v214 = sub_1BB86FE38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
        v215 = v203[8];
        v216 = a1 + v215;
        v217 = a2 + v215;
        *(_OWORD *)v216 = *(_OWORD *)v217;
        *(_QWORD *)(v216 + 16) = *(_QWORD *)(v217 + 16);
        goto LABEL_113;
      case 6u:
        v16 = type metadata accessor for FormatAction();
        if (swift_getEnumCaseMultiPayload() != 5)
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          goto LABEL_86;
        }
        v17 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v75 = type metadata accessor for FormatPurchaseLandingPageData();
          v76 = *(_QWORD *)(v75 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(a2, 1, v75))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v123 = *(int *)(v75 + 20);
            __dsta = (void *)(a1 + v123);
            v124 = (const void *)(a2 + v123);
            v125 = type metadata accessor for FormatPostPurchaseData();
            v126 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v125 - 8);
            if (v126[6](v124, 1, v125))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dsta, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            }
            else
            {
              v235 = v126;
              v156 = sub_1BB86C67C();
              v231 = *(void (***)(void))(v156 - 8);
              if (((unsigned int (*)(const void *, uint64_t, uint64_t))v231[6])(v124, 2, v156))
              {
                v157 = v235;
                v158 = v124;
                v159 = __dsta;
                memcpy(__dsta, v158, (size_t)v235[8]);
              }
              else
              {
                v159 = __dsta;
                v231[4]();
                ((void (*)(void *, _QWORD, uint64_t, uint64_t))v231[7])(__dsta, 0, 2, v156);
                v157 = v235;
              }
              ((void (*)(void *, _QWORD, uint64_t, uint64_t))v157[7])(v159, 0, 1, v125);
            }
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v75);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            goto LABEL_85;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v19 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v20 = (void *)(a1 + v19);
          v21 = (const void *)(a2 + v19);
          v22 = type metadata accessor for FormatPostPurchaseData();
          v23 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          }
          else
          {
            v122 = sub_1BB86C67C();
            __dst = *(void (***)(void *, const void *, uint64_t))(v122 - 8);
            if (((unsigned int (*)(const void *, uint64_t, uint64_t))__dst[6])(v21, 2, v122))
            {
              memcpy(v20, v21, *(_QWORD *)(v23 + 64));
            }
            else
            {
              __dst[4](v20, v21, v122);
              ((void (*)(void *, _QWORD, uint64_t, uint64_t))__dst[7])(v20, 0, 2, v122);
            }
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_85:
        swift_storeEnumTagMultiPayload();
LABEL_86:
        v176 = type metadata accessor for FormatButtonNodeDataAction();
        *(_QWORD *)(a1 + *(int *)(v176 + 20)) = *(_QWORD *)(a2 + *(int *)(v176 + 20));
        v177 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
        v178 = (_OWORD *)(a1 + v177);
        v179 = (_OWORD *)(a2 + v177);
        v180 = *(_QWORD *)(v176 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v180 + 48))(v179, 1, v176))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
          memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
          goto LABEL_113;
        }
        if (swift_getEnumCaseMultiPayload() != 5)
        {
          memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          goto LABEL_112;
        }
        v182 = type metadata accessor for FormatPurchaseData(0);
        v183 = swift_getEnumCaseMultiPayload();
        if (v183 == 1)
        {
          v189 = type metadata accessor for FormatPurchaseLandingPageData();
          v190 = *(_QWORD *)(v189 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v190 + 48))(v179, 1, v189))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
          }
          else
          {
            v228 = v190;
            *v178 = *v179;
            v196 = *(int *)(v189 + 20);
            v237 = (char *)v178 + v196;
            v197 = (char *)v179 + v196;
            v198 = type metadata accessor for FormatPostPurchaseData();
            v225 = *(_QWORD **)(v198 - 8);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v225[6])(v197, 1, v198))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v237, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
              v200 = v228;
            }
            else
            {
              v223 = v198;
              v201 = sub_1BB86C67C();
              v221 = *(_QWORD *)(v201 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v197, 2, v201))
              {
                v202 = v225;
                memcpy(v237, v197, v225[8]);
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v237, v197, v201);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v237, 0, 2, v201);
                v202 = v225;
              }
              v200 = v228;
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v202[7])(v237, 0, 1, v223);
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v178, 0, 1, v189);
          }
        }
        else
        {
          if (v183)
          {
            memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
            goto LABEL_111;
          }
          *v178 = *v179;
          v184 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v236 = (char *)v178 + v184;
          v185 = (char *)v179 + v184;
          v186 = type metadata accessor for FormatPostPurchaseData();
          v187 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v186 - 8);
          if (v187[6](v185, 1, v186))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v236, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
          }
          else
          {
            v232 = v187;
            v192 = sub_1BB86C67C();
            v227 = *(_QWORD *)(v192 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48))(v185, 2, v192))
            {
              v193 = v232;
              v194 = v185;
              v195 = v236;
              memcpy(v236, v194, (size_t)v232[8]);
            }
            else
            {
              v195 = v236;
              (*(void (**)(void))(v227 + 32))();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v236, 0, 2, v192);
              v193 = v232;
            }
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v193[7])(v195, 0, 1, v186);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_111:
        swift_storeEnumTagMultiPayload();
LABEL_112:
        *(_QWORD *)((char *)v178 + *(int *)(v176 + 20)) = *(_QWORD *)((char *)v179 + *(int *)(v176 + 20));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v178, 0, 1, v176);
LABEL_113:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v25 = type metadata accessor for FormatViewBackground(0);
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v62 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
            v63 = (void *)(a1 + v62);
            v64 = (const void *)(a2 + v62);
            v65 = sub_1BB86FBD4();
            v66 = *(_QWORD *)(v65 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
              memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v66 + 32))(v63, v64, v65);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
            }
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v26 + 64));
          }
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
        }
        goto LABEL_113;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v28 = type metadata accessor for FormatMicaData();
        v29 = *(int *)(v28 + 20);
        v30 = (void *)(a1 + v29);
        v31 = (const void *)(a2 + v29);
        v32 = sub_1BB86FBD4();
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v68 = *(int *)(v28 + 24);
        v69 = a1 + v68;
        v70 = a2 + v68;
        *(_DWORD *)v69 = *(_DWORD *)v70;
        *(_BYTE *)(v69 + 4) = *(_BYTE *)(v70 + 4);
        goto LABEL_113;
      case 0xDu:
        v35 = sub_1BB86C67C();
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
        v37(a1, a2, v35);
        v38 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
        v39 = (void *)(a1 + v38);
        v40 = (const void *)(a2 + v38);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v38, 1, v35))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v37((uint64_t)v39, (uint64_t)v40, v35);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
        }
        v71 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
        v72 = (_OWORD *)(a1 + v71);
        v73 = (_OWORD *)(a2 + v71);
        v74 = v73[1];
        *v72 = *v73;
        v72[1] = v74;
        v72[2] = v73[2];
        goto LABEL_113;
      case 0xFu:
        v42 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(a1, a2, v42);
        v43 = (int *)type metadata accessor for SharedItem();
        *(_BYTE *)(a1 + v43[5]) = *(_BYTE *)(a2 + v43[5]);
        *(_QWORD *)(a1 + v43[6]) = *(_QWORD *)(a2 + v43[6]);
        v44 = v43[7];
        v45 = a1 + v44;
        v46 = a2 + v44;
        v47 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        goto LABEL_113;
      case 0x11u:
        v48 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v48;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v49 = (int *)type metadata accessor for FormatVideoPlayerData();
        v50 = v49[9];
        v51 = a1 + v50;
        v52 = a2 + v50;
        v53 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        *(_QWORD *)(a1 + v49[10]) = *(_QWORD *)(a2 + v49[10]);
        *(_BYTE *)(a1 + v49[11]) = *(_BYTE *)(a2 + v49[11]);
        v54 = v49[12];
        v55 = a1 + v54;
        v56 = a2 + v54;
        v57 = *(_OWORD *)(v56 + 16);
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *(_OWORD *)(v55 + 16) = v57;
        *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
        *(_QWORD *)(v55 + 48) = *(_QWORD *)(v56 + 48);
        *(_BYTE *)(a1 + v49[13]) = *(_BYTE *)(a2 + v49[13]);
        goto LABEL_113;
      case 0x14u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v58 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        v59 = a1 + v58;
        v60 = a2 + v58;
        v61 = sub_1BB871E24();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        goto LABEL_113;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1BA7249BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatNodeStateData.Data();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA7249F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(uint64_t, unint64_t))
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v11 = (_QWORD *)(a5[6] + 16 * a1);
  *v11 = a2;
  v11[1] = a3;
  v12 = a5[7];
  v13 = a6(0);
  result = a7(a4, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1);
  v15 = a5[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a5[2] = v17;
  return result;
}

void sub_1BA724A8C()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA724B0C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

void sub_1BA724B44(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  unsigned __int8 *v21;
  int v22;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BB21CCFC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v1 - 104) = v2;
  v4 = v2 & 0xFFFFFFFFFFFFFFFLL;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1BA724A8C();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_release();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  *(_BYTE *)(inited + 48) = v10 & 1;
  swift_bridgeObjectRetain();
  swift_retain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BB563FD0(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v1 - 104) = inited;
  sub_1BA741040(v12);
  v13 = *(_QWORD *)(v1 - 104);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    *(_QWORD *)(v1 - 288) = v4;
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = v13 + 40;
    v17 = 0xE000000000000000;
    v18 = v14;
    do
    {
      *(_QWORD *)(v1 - 104) = v15;
      *(_QWORD *)(v1 - 96) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v1 - 104);
      v17 = *(_QWORD *)(v1 - 96);
      v16 += 24;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v20 = 0;
    v21 = (unsigned __int8 *)(v13 + 48);
    do
    {
      v22 = *v21;
      v21 += 24;
      v20 |= v22;
      --v14;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  JUMPOUT(0x1BA724B18);
}

unint64_t sub_1BA725020(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA725050(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FormatItemNodeData()
{
  uint64_t result;

  result = qword_1ED3C7DB8;
  if (!qword_1ED3C7DB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7250BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA6E3AA0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
}

void sub_1BA725104()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA725150()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1BA724A8C();
  v1 = v0;
  swift_release();
  return v1;
}

void sub_1BA7253B0()
{
  __asm { BR              X11 }
}

unint64_t sub_1BA725414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v1 - 88) = v2;
  sub_1BA71CA6C(v2);
  sub_1BA717E88();
  return sub_1BA719718(v2);
}

uint64_t sub_1BA72594C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *v0;
  v1 = v0[1];
  sub_1BB86DD80();
  v3 = *(_QWORD *)(*(_QWORD *)(v8 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
  {
    v9 = *(_QWORD *)(v8 + 56);
    v4 = swift_bridgeObjectRetain();
    v5 = sub_1BA6E42A0(v4);
    sub_1BA6E3FB8(v5);
    swift_release();
    v6 = v9;
  }
  else
  {
    v6 = sub_1BA6E3F38();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1BA761FE4(v2, v1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BB86EB0C();
}

void FormatBindingExpression.bind(binder:context:)()
{
  uint64_t v1;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

unint64_t sub_1BA725B00(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 - 200) = v9;
  *(_QWORD *)(v15 - 192) = v14;
  *(_QWORD *)(v15 - 184) = v13;
  *(_QWORD *)(v15 - 176) = v12;
  *(_QWORD *)(v15 - 168) = v10;
  *(_BYTE *)(v15 - 160) = v4;
  *(_QWORD *)(v15 - 240) = v3;
  *(_QWORD *)(v15 - 232) = a1;
  *(_DWORD *)(v15 - 72) = a2;
  v16 = v4;
  *(_QWORD *)(v15 - 256) = v7;
  *(_QWORD *)(v15 - 248) = v2;
  *(_QWORD *)(v15 - 224) = v6;
  *(_QWORD *)(v15 - 216) = v5;
  *(_QWORD *)(v15 - 264) = v8;
  sub_1BA7147C0(v9, v14, v13, v12, v10, v4);
  FormatImageNodeBinding.bind(binder:context:)(v11, *(_QWORD *)(v15 - 208));
  return sub_1BA752A0C(v9, v14, v13, v12, v10, v16, *(_QWORD *)(v15 - 240), *(_QWORD *)(v15 - 248), *(_QWORD *)(v15 - 216), *(_QWORD *)(v15 - 224), *(_QWORD *)(v15 - 256), *(_QWORD *)(v15 - 264), *(_QWORD *)(v15 - 232), *(_DWORD *)(v15 - 72));
}

uint64_t sub_1BA726060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a3;
  v7 = sub_1BB86EB00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v21 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - v11;
  v13 = v3[1];
  v24 = *v3;
  swift_retain();
  v22 = a1;
  v23 = a2;
  sub_1BA7049A8(a1, a2);
  result = swift_release();
  if (!v4)
  {
    v19 = v7;
    v24 = v13;
    swift_retain();
    v15 = v21;
    sub_1BA7049A8(v22, v23);
    swift_release();
    sub_1BB86EADC();
    v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17 = v19;
    v16(v15, v19);
    return ((uint64_t (*)(char *, uint64_t))v16)(v12, v17);
  }
  return result;
}

uint64_t FormatVBoxNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA702174(a1, a2);
}

uint64_t sub_1BA7261E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA72621C(uint64_t a1, __int128 *a2, uint64_t a3)
{
  return sub_1BA726248(a1, a2, a3, (void (*)(uint64_t))sub_1BA71CA6C, (void (*)(uint64_t, __int128 *))sub_1BA6FA63C, (void (*)(uint64_t))sub_1BA719718);
}

uint64_t sub_1BA726248(uint64_t result, __int128 *a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t, __int128 *), void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t *i;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v7 = v6;
  v8 = *(_QWORD *)(a3 + 16);
  if (v8)
  {
    v12 = result;
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a3 + 40); ; i += 2)
    {
      v14 = *i;
      v27 = *(i - 1);
      v15 = a2[3];
      v23 = a2[2];
      v24 = v15;
      v25 = a2[4];
      v26 = *((_QWORD *)a2 + 10);
      v16 = a2[1];
      v21 = *a2;
      v22 = v16;
      swift_retain();
      a4(v14);
      sub_1BA6F9BF4();
      if (v7)
        break;
      v27 = v14;
      v17 = a2[3];
      v23 = a2[2];
      v24 = v17;
      v25 = a2[4];
      v26 = *((_QWORD *)a2 + 10);
      v18 = a2[1];
      v21 = *a2;
      v22 = v18;
      a5(v12, &v21);
      v7 = 0;
      swift_release();
      a6(v14);
      if (!--v8)
        return swift_bridgeObjectRelease();
    }
    swift_release();
    a6(v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA726394(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD v22[5];
  uint64_t v23;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v7;
  v22[4] = *(_OWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v8;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[6];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA726664(a1, a2);
    v13 = v2[8];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v22, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (uint64_t *)(v15 + 72);
        do
        {
          v18 = *v17;
          if (*v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v22, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v17 += 7;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    sub_1BA73B1E0();
    swift_beginAccess();
    v19 = v4[11];
    if (v19 >> 62 == 1)
    {
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      sub_1BA67D3F4(v20);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v22, v20, v21);
      sub_1BA6EEDB4(v20);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BA726664(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _OWORD v49[5];
  uint64_t v50;
  uint64_t v51;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v49[2] = *(_OWORD *)(a2 + 32);
  v49[3] = v7;
  v49[4] = *(_OWORD *)(a2 + 64);
  v50 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v49[0] = *(_OWORD *)a2;
  v49[1] = v8;
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain_n();
    v11 = *(_OWORD *)(v9 + 192);
    v45 = *(_OWORD *)(v9 + 176);
    v46 = v11;
    v47 = *(_OWORD *)(v9 + 208);
    v48 = *(_QWORD *)(v9 + 224);
    v12 = *(_OWORD *)(v9 + 128);
    v41 = *(_OWORD *)(v9 + 112);
    v42 = v12;
    v13 = *(_OWORD *)(v9 + 160);
    v43 = *(_OWORD *)(v9 + 144);
    v44 = v13;
    v14 = *(_OWORD *)(v9 + 48);
    v15 = *(_OWORD *)(v9 + 80);
    v16 = *(_OWORD *)(v9 + 96);
    v38 = *(_OWORD *)(v9 + 64);
    v39 = v15;
    v40 = v16;
    v36 = *(_OWORD *)(v9 + 32);
    v37 = v14;
    sub_1BAC68490((uint64_t)&v36);
    sub_1BA726AB8(a1, a2);
    if (v3)
    {
      sub_1BAC685AC((uint64_t)&v36);
      swift_bridgeObjectRelease_n();
      return;
    }
    v17 = 232;
    while (1)
    {
      sub_1BAC685AC((uint64_t)&v36);
      if (!--v10)
        break;
      v18 = v9 + v17;
      v19 = *(_OWORD *)(v9 + v17);
      v17 += 200;
      v36 = v19;
      v20 = *(_OWORD *)(v18 + 16);
      v21 = *(_OWORD *)(v18 + 32);
      v22 = *(_OWORD *)(v18 + 64);
      v39 = *(_OWORD *)(v18 + 48);
      v40 = v22;
      v37 = v20;
      v38 = v21;
      v23 = *(_OWORD *)(v18 + 80);
      v24 = *(_OWORD *)(v18 + 96);
      v25 = *(_OWORD *)(v18 + 128);
      v43 = *(_OWORD *)(v18 + 112);
      v44 = v25;
      v41 = v23;
      v42 = v24;
      v26 = *(_OWORD *)(v18 + 144);
      v27 = *(_OWORD *)(v18 + 160);
      v28 = *(_OWORD *)(v18 + 176);
      v48 = *(_QWORD *)(v18 + 192);
      v46 = v27;
      v47 = v28;
      v45 = v26;
      sub_1BAC68490((uint64_t)&v36);
      sub_1BA726AB8(a1, a2);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v29 = *(_QWORD *)(v2 + 64);
  if (v29)
  {
    swift_bridgeObjectRetain();
    sub_1BA767FC8(a1, (uint64_t)v49, v29);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) == 0 || (sub_1BA755CC8(), !v3))
  {
    v30 = *(_QWORD *)(v4 + 80);
    if (v30 && (v31 = *(_QWORD *)(v30 + 16)) != 0)
    {
      v51 = swift_bridgeObjectRetain();
      v32 = v51 + 64;
      while (1)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA7547AC();
        if (v3)
          break;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v32 += 40;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
LABEL_20:
      v33 = *(_QWORD *)(v4 + 120);
      if (v33 >= 3)
      {
        if (v33 != 3)
        {
          v34 = *(_QWORD *)(v33 + 16);
          v35 = *(_QWORD *)(v33 + 24);
          sub_1BA6E6C80(*(_QWORD *)(v4 + 120));
          sub_1BA6E6E84(v34);
          sub_1BA6E6E84(v35);
          sub_1BA7852C4(a1, (uint64_t)v49, v34, v35);
          sub_1BA6E7468(v34);
          sub_1BA6E7468(v35);
          sub_1BA6E6CF0(v33);
          if (v3)
            return;
        }
      }
      else
      {
        sub_1BA6E6CF0(*(_QWORD *)(v4 + 120));
      }
      if (*(unsigned __int8 *)(v4 + 216) == 254 || (sub_1BA7547AC(), !v3))
      {
        if ((~*(_QWORD *)(v4 + 224) & 0xF000000000000007) != 0)
          sub_1BA7547AC();
      }
    }
  }
}

void sub_1BA726AB8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  _OWORD v26[5];
  uint64_t v27;
  uint64_t v28;

  v5 = *(_OWORD *)(a2 + 48);
  v26[2] = *(_OWORD *)(a2 + 32);
  v26[3] = v5;
  v26[4] = *(_OWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v26[0] = *(_OWORD *)a2;
  v26[1] = v6;
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 88);
  v9 = *(unsigned __int8 *)(v2 + 136);
  v10 = *(_QWORD *)(v2 + 144);
  v11 = *(_QWORD *)(v2 + 160);
  v12 = *(_QWORD *)(v2 + 176);
  if ((~*(_QWORD *)(v2 + 16) & 0xF000000000000007) != 0)
  {
    v24 = *(_QWORD *)(v2 + 160);
    v25 = *(_QWORD *)(v2 + 24);
    v22 = *(unsigned __int8 *)(v2 + 136);
    v13 = *(_QWORD *)(v2 + 176);
    v14 = *(_QWORD *)(v2 + 88);
    v28 = *(_QWORD *)(v2 + 16);
    sub_1BA755CC8();
    if (v3)
      return;
    v8 = v14;
    v12 = v13;
    v9 = v22;
    v11 = v24;
    v7 = v25;
  }
  if (!v7)
  {
LABEL_10:
    if (v9 == 254)
      goto LABEL_14;
    goto LABEL_13;
  }
  v21 = v10;
  v15 = *(_QWORD *)(v7 + 16);
  if (v15)
  {
    v23 = v9;
    v20 = v8;
    v16 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      v28 = *(_QWORD *)(v16 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v16 += 40;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        v8 = v20;
        v10 = v21;
        v9 = v23;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    return;
  }
  v10 = v21;
  if (v9 != 254)
  {
LABEL_13:
    v28 = v8;
    sub_1BA7547AC();
    if (v3)
      return;
  }
LABEL_14:
  if ((~v10 & 0xF000000000000007) == 0 || (v28 = v10, sub_1BA7547AC(), !v3))
  {
    if (v11 >= 3)
    {
      if (v11 != 3)
      {
        v17 = v11;
        v18 = *(_QWORD *)(v11 + 16);
        v19 = *(_QWORD *)(v11 + 24);
        sub_1BA6E6C80(v17);
        sub_1BA6E6E84(v18);
        sub_1BA6E6E84(v19);
        sub_1BA7852C4(a1, (uint64_t)v26, v18, v19);
        sub_1BA6E7468(v18);
        sub_1BA6E7468(v19);
        sub_1BA6E6CF0(v17);
        if (v3)
          return;
      }
    }
    else
    {
      sub_1BA6E6CF0(v11);
    }
    if (v12)
      sub_1BA767FC8(a1, (uint64_t)v26, v12);
  }
}

void sub_1BA726DA4(void *a1, unsigned __int8 a2)
{
  switch(a2 >> 4)
  {
    case 0:
    case 2:
      swift_unknownObjectRelease();
      break;
    case 1:

      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      swift_release();
      break;
    default:
      return;
  }
}

void sub_1BA726DD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_unknownObjectRelease();
      goto LABEL_5;
    case 1:
    case 4:
    case 14:
      goto LABEL_7;
    case 2:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      return;
    case 3:

      swift_bridgeObjectRelease();
LABEL_7:
      swift_unknownObjectRelease();
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_release();
      break;
    case 12:

      break;
    case 13:
      swift_unknownObjectRelease();
      sub_1BAB5D8AC(a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1BA726EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void))
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v8 = v6;
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_1BA707E14(v10, 0);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v14 = *v12;
  v13 = v12[1];
  v15 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1BB66B870(v15, v11, v14, v13, (void (*)(uint64_t))sub_1BA6F11B4, sub_1BA6F0790, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6F04E0, (void (*)(_QWORD))type metadata accessor for FormatTextNodeStyle, (void (*)(uint64_t))sub_1BA6E794C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v7)
  {
    swift_beginAccess();
    v17 = v8[2];
    v18 = v8[3];
    swift_retain();
    swift_bridgeObjectRetain();
    v19 = sub_1BA717D44(v17, v18);
    v21 = v20;
    swift_release();
    swift_bridgeObjectRelease();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_bridgeObjectRetain();
    swift_unownedRelease();
    swift_unownedRelease();
    swift_unownedRetain();
    swift_release();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v8;
    v22[3] = v19;
    v22[4] = v21;
    v22[5] = v11;
    v22[6] = a3;
    v22[7] = v16;
    a5(0);
    a6();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BB86D504();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t FormatHBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11)
{
  return sub_1BA7197B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id sub_1BA727178(id result, unsigned __int8 a2)
{
  switch(a2 >> 4)
  {
    case 0:
    case 2:
      result = (id)swift_unknownObjectRetain();
      break;
    case 1:
      result = result;
      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      result = (id)swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

id sub_1BA7271AC(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  id v10;
  id v12;

  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      return (id)swift_unknownObjectRetain();
    case 1:
    case 4:
    case 14:
      return (id)swift_unknownObjectRetain();
    case 2:
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_7;
    case 3:
      v12 = result;
      swift_unknownObjectRetain();
      v10 = v12;
LABEL_7:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      result = (id)swift_retain();
      break;
    case 12:
      result = result;
      break;
    case 13:
      swift_unknownObjectRetain();
      result = (id)sub_1BAB5B700(a2, a3, a4, a5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA7272EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA7280F4(a1, a2, (__int128 *)(v2 + 16));
}

void sub_1BA7272F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD v15[5];
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v6;
  v15[4] = *(_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v7;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v8 = v2[6];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v11);
        sub_1BA6FA7EC();
        sub_1BA719340(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA7274BC(a1, a2);
    if (v2[8])
      sub_1BAC56620(a1, a2);
    swift_beginAccess();
    v12 = v2[10];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v15, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BA7274BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[5];
  uint64_t v13;
  uint64_t v14;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v6;
  v12[4] = *(_OWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BA7276B0(a1, (uint64_t)v12, v8);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((~*(_QWORD *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      v14 = *(_QWORD *)(v4 + 64);
      sub_1BA755CC8();
    }
    v9 = *(_QWORD *)(v4 + 72);
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v11 = swift_bridgeObjectRetain() + 64;
        do
        {
          v14 = *(_QWORD *)(v11 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA7547AC();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v11 += 40;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease();
      }
    }
    if (*(unsigned __int8 *)(v4 + 184) != 254)
    {
      v14 = *(_QWORD *)(v4 + 136);
      sub_1BA7547AC();
    }
  }
}

uint64_t sub_1BA7276B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[3];
  uint64_t v34;

  v23 = *(_QWORD *)(a3 + 16);
  if (v23)
  {
    v24 = a3 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = (__int128 *)(v24 + 160 * v4);
      v6 = v5[7];
      v31 = v5[6];
      v32 = v6;
      v33[0] = v5[8];
      *(_OWORD *)((char *)v33 + 9) = *(__int128 *)((char *)v5 + 137);
      v7 = v5[3];
      v27 = v5[2];
      v28 = v7;
      v8 = v5[5];
      v29 = v5[4];
      v30 = v8;
      v9 = v5[1];
      v25 = *v5;
      v26 = v9;
      if ((~(_QWORD)v9 & 0xF000000000000007) != 0)
      {
        v34 = v9;
        sub_1BAC68F14((uint64_t)&v25);
        sub_1BA755CC8();
        if (v3)
          goto LABEL_17;
      }
      else
      {
        sub_1BAC68F14((uint64_t)&v25);
      }
      if (*((_QWORD *)&v26 + 1))
      {
        v10 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 16);
        if (v10)
          break;
      }
LABEL_13:
      v12 = BYTE8(v33[0]);
      if (BYTE8(v33[0]) != 254)
      {
        v19 = *((_QWORD *)&v32 + 1);
        v20 = *(_QWORD *)&v33[0];
        v22 = v32;
        v13 = *((_QWORD *)&v30 + 1);
        v21 = v31;
        v14 = *((_QWORD *)&v29 + 1);
        v18 = v30;
        v16 = *((_QWORD *)&v28 + 1);
        v15 = v29;
        v34 = *((_QWORD *)&v30 + 1);
        swift_retain();
        sub_1BA7547AC();
        sub_1BA6E8A78(v16, v15, v14, v18, v13, v21, *((uint64_t *)&v21 + 1), v22, v19, v20, v12);
        if (v3)
          goto LABEL_17;
      }
      ++v4;
      sub_1BAC68FF0((uint64_t)&v25);
      if (v4 == v23)
        return swift_bridgeObjectRelease();
    }
    v11 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      v34 = *(_QWORD *)(v11 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v11 += 40;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_17:
    sub_1BAC68FF0((uint64_t)&v25);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA7279A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void))
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v52;

  v8 = v6;
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_1BA707E14(v10, 0);
  swift_bridgeObjectRelease();
  v12 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v13 = (uint64_t *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v15 = *v13;
  v14 = v13[1];
  v16 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BB66B870(v16, v11, v15, v14, (void (*)(uint64_t))sub_1BA6E5070, sub_1BA6E4614, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6EFBC4, (void (*)(_QWORD))type metadata accessor for FormatImageNodeStyle, (void (*)(uint64_t))sub_1BA6E59C4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7)
    return swift_release();
  v47 = a2;
  v48 = v17;
  swift_beginAccess();
  v19 = v8[2];
  v20 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA717D44(v19, v20);
  v23 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  v24 = (uint64_t *)(*(_QWORD *)(v11 + v12) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v25 = *v24;
  v26 = v24[1];
  v27 = v8[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = sub_1BA6E3AA0(v27, v11, v25, v26, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
  v45 = v21;
  v46 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v28 && (swift_beginAccess(), (v29 = *(_QWORD *)(v28 + 72)) != 0) && *(_QWORD *)(v29 + 16))
  {
    v30 = *(_QWORD *)(v28 + 48);
    v31 = *(_QWORD *)(v28 + 56);
    v32 = *(unsigned __int8 *)(v28 + 64);
    swift_retain();
    swift_retain();
    v33 = swift_bridgeObjectRetain();
    v39 = sub_1BB67D220(v33, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v32)
      v40 = 0;
    else
      v40 = v31;
    if (v32)
      v41 = 0;
    else
      v41 = v30;
    type metadata accessor for FormatAnimationData();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v28;
    *(_QWORD *)(v42 + 24) = v41;
    *(_QWORD *)(v42 + 32) = v40;
    *(_BYTE *)(v42 + 40) = v32;
    *(_QWORD *)(v42 + 48) = v39;
    v34 = a3;
    v43 = *(_QWORD *)(a3 + 24);
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = *(_QWORD *)(v43 + 32);
    *(_QWORD *)(v43 + 32) = 0x8000000000000000;
    sub_1BA81C03C(v42, v45, v46, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v43 + 32) = v52;
    v36 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    v35 = v47;
  }
  else
  {
    v34 = a3;
    v36 = v23;
    v35 = v47;
  }
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  v37 = v36;
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v45;
  v38[3] = v37;
  v38[4] = v8;
  v38[5] = v11;
  v38[6] = v48;
  v38[7] = v35;
  v38[8] = v34;
  a5(0);
  a6();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86D504();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t FormatSwitchNodeDefault.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    v9 = v7 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, a2);
      if (v3)
        break;
      v9 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v8)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BA727FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)((((v4 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA728038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5F08;
  if (!qword_1ED3B5F08)
  {
    sub_1BA50CAA8(255, &qword_1ED3B5F10, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F08);
  }
  return result;
}

unint64_t sub_1BA7280A0(unint64_t result)
{
  if (!(result >> 62))
    return swift_release();
  return result;
}

uint64_t sub_1BA7280B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA76D7E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7280F4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v13;
  char v14;
  __int128 v16;
  _OWORD v17[2];
  uint64_t v18;
  _BYTE v19[48];

  v6 = sub_1BB86D738();
  type metadata accessor for FormatImageNodeContext();
  v7 = swift_allocObject();
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v7 + 16) = _Q0;
  *(_QWORD *)(v7 + 32) = 0x3FF0000000000000;
  *(_QWORD *)(v7 + 40) = v6;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_OWORD *)(v7 + 96) = 0u;
  *(_OWORD *)(v7 + 112) = 0u;
  *(_BYTE *)(v7 + 128) = 0;
  sub_1BA728238((uint64_t)a3, (uint64_t)v19);
  sub_1BA728238((uint64_t)v19, (uint64_t)&v16);
  sub_1BA5769D0((uint64_t)a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7147C0);
  sub_1BA76C8BC(a1, a2, v7, (uint64_t)&v18);
  sub_1BA5769D0((uint64_t)a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF82C);
  v13 = a3[1];
  v16 = *a3;
  v17[0] = v13;
  *(_OWORD *)((char *)v17 + 10) = *(__int128 *)((char *)a3 + 26);
  sub_1BA728274(a1, (uint64_t)&v18);
  LOBYTE(a1) = v14;
  swift_release();
  swift_release();
  return a1 & 1;
}

uint64_t sub_1BA728238(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

void sub_1BA728274(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

BOOL sub_1BA7282D4@<W0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  int v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  id v9;
  BOOL v10;
  _QWORD v12[3];
  uint64_t v13;
  _OWORD v14[8];
  void (*v15)(_QWORD *__return_ptr);

  v3 = a1[7];
  v14[5] = a1[6];
  v4 = a1[8];
  v5 = a1[9];
  v1[6] = v3;
  v1[7] = v4;
  v1[8] = v5;
  v6 = a1[3];
  v14[1] = a1[2];
  v14[2] = v6;
  v7 = a1[5];
  v14[3] = a1[4];
  v14[4] = v7;
  v14[0] = a1[1];
  v8 = (void *)objc_opt_self();
  sub_1BB0A416C((uint64_t)v14);
  v9 = objc_msgSend(v8, sel_currentTraitCollection);
  v15(v12);

  sub_1BB0A41A0((uint64_t)v14);
  if (v2)
    v10 = v13 != 0;
  else
    v10 = v13 == 0;
  sub_1BA728544((uint64_t)v12);
  return v10;
}

uint64_t sub_1BA728544(uint64_t a1)
{
  uint64_t v2;

  sub_1BA65DC00(0, (unint64_t *)&qword_1ED3C2250, qword_1ED3B0960);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA728598(unint64_t result)
{
  if (!(result >> 62))
    return swift_retain();
  return result;
}

id sub_1BA7285A8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FeedHeadline(0);
  return sub_1BA749830(a1);
}

unint64_t sub_1BA728610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74[3];
  unint64_t v75;

  v69 = a1;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v4);
  v64 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatOption();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v58 = (uint64_t)&v57 - v9;
  MEMORY[0x1E0C80A78](v10);
  v63 = (uint64_t)&v57 - v11;
  sub_1BA72C428(0, (unint64_t *)&unk_1ED3B0818);
  v13 = v12;
  v14 = swift_allocBox();
  v16 = v15;
  sub_1BB86E830();
  sub_1BA72C428(0, &qword_1ED3B0810);
  v18 = v17;
  v19 = swift_allocBox();
  sub_1BB86E830();
  v70 = *(_QWORD *)(a2 + 16);
  if (!v70)
  {
LABEL_42:
    while (1)
    {
      swift_beginAccess();
      v47 = sub_1BB86E818();
      swift_endAccess();
      if ((v47 & 1) != 0)
        break;
      sub_1BA8559D0();
      if (v2)
        goto LABEL_49;
    }
    swift_beginAccess();
    sub_1BB86E7F4();
    swift_endAccess();
    if ((v73 & 1) == 0)
    {
      v18 = v72;
      swift_beginAccess();
      v48 = sub_1BB86E818();
      swift_endAccess();
      if ((v48 & 1) != 0)
      {
        swift_release();
        swift_release();
        return v18;
      }
    }
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    v18 = (unint64_t)v49;
    *v49 = sub_1BB107088(a2);
    *(_QWORD *)(v18 + 8) = v50;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_49:
    swift_release();
LABEL_50:
    swift_release();
    return v18;
  }
  v67 = v16;
  v68 = v13;
  v61 = v14;
  v62 = v19;
  v71 = a2 + 32;
  swift_bridgeObjectRetain();
  v20 = 0;
  v75 = v18;
  v60 = a2;
  while (1)
  {
    v22 = v71 + 24 * v20;
    v23 = *(_QWORD *)v22;
    if ((*(_BYTE *)(v22 + 17) & 1) != 0)
    {
      v24 = *(_QWORD *)v22;
      swift_beginAccess();
      sub_1BB86E800();
      swift_endAccess();
      if ((char)v72 == 6)
      {
        LOBYTE(v72) = v23;
LABEL_9:
        swift_beginAccess();
        goto LABEL_39;
      }
      if (v24 >= 4)
      {
        if (v24 == 4)
        {
          LOBYTE(v72) = 4;
          goto LABEL_9;
        }
        v38 = 1;
        if ((char)v72 <= 3)
        {
LABEL_16:
          v39 = qword_1BB87DB58[(char)v72];
          if (v24 > 3)
          {
LABEL_17:
            v18 = 2;
            goto LABEL_30;
          }
LABEL_29:
          v18 = qword_1BB87DB58[(char)v23];
LABEL_30:
          if (((v39 >= v18) & ~v38) == 0)
          {
            while (1)
            {
              swift_beginAccess();
              sub_1BB86E800();
              swift_endAccess();
              if ((unint64_t)(char)v72 > 3 || qword_1BB87DB58[(char)v72] >= v18)
                break;
              sub_1BA8559D0();
              if (v2)
              {
                swift_release();
                goto LABEL_55;
              }
            }
            if (v24 == 5)
            {
              swift_beginAccess();
              v18 = v75;
              sub_1BB86E800();
              swift_endAccess();
              if (v72 != 4)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for FormatLayoutError();
                sub_1BA689E84();
                swift_allocError();
                v55 = v54;
                *v54 = sub_1BB107088(a2);
                v55[1] = v56;
                swift_storeEnumTagMultiPayload();
                swift_willThrow();
                swift_release();
                goto LABEL_50;
              }
              swift_beginAccess();
              sub_1BB86E7F4();
              goto LABEL_40;
            }
          }
          LOBYTE(v72) = v23;
          swift_beginAccess();
          v18 = v75;
LABEL_39:
          sub_1BB86E80C();
LABEL_40:
          swift_endAccess();
          goto LABEL_5;
        }
      }
      else
      {
        v38 = 0;
        if ((char)v72 <= 3)
          goto LABEL_16;
      }
      v39 = 2;
      if (v24 > 3)
        goto LABEL_17;
      goto LABEL_29;
    }
    v18 = *(_QWORD *)(v22 + 8);
    v25 = *(_BYTE *)(v22 + 16);
    if ((v25 & 1) != 0)
      break;
    v21 = *(_QWORD *)v22;
LABEL_4:
    v72 = v21;
    swift_beginAccess();
    sub_1BB86E80C();
    swift_endAccess();
    sub_1BA728F8C(v23, v18, v25, 0);
    v18 = v75;
LABEL_5:
    if (++v20 == v70)
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
  v26 = *(_QWORD *)(v69 + 40);
  v27 = *(_QWORD *)(v26 + 16);
  swift_beginAccess();
  v28 = *(_QWORD *)(v27 + 16);
  if (*(_QWORD *)(v28 + 16))
  {
    sub_1BA8569BC(v23, v18, v25, 0);
    swift_bridgeObjectRetain_n();
    v29 = sub_1BA6E35A8(v23, v18);
    if ((v30 & 1) != 0)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
      swift_endAccess();
      swift_retain();
      sub_1BA728F8C(v23, v18, v25, 0);
      v32 = *(_QWORD *)(v31 + 16);
      swift_retain();
      swift_release();
      v33 = v59;
      sub_1BA6E9B50(v32);
      swift_release();
      v34 = (uint64_t)v33;
      v35 = v58;
      sub_1BA8569CC(v34, v58);
      v36 = v35;
      v37 = v64;
      sub_1BA8569CC(v36, v64);
LABEL_25:
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v37, 0, 1, v66);
      sub_1BA728F8C(v23, v18, v25, 0);
      v45 = v63;
      sub_1BA8569CC(v37, v63);
      v74[0] = *(_QWORD *)(v45 + 16);
      swift_retain();
      v46 = sub_1BA73DA40(v74, v69, v45);
      if (v2)
      {
        swift_release();
        sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        sub_1BA728F8C(v23, v18, v25, 0);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v18;
      }
      v21 = v46;
      swift_release();
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      a2 = v60;
      goto LABEL_4;
    }
    swift_endAccess();
    sub_1BA728F8C(v23, v18, v25, 0);
  }
  else
  {
    swift_endAccess();
    sub_1BA8569BC(v23, v18, v25, 0);
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  v40 = *(_QWORD *)(v26 + 24);
  if (!*(_QWORD *)(v40 + 16))
  {
    swift_endAccess();
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  v41 = sub_1BA6E35A8(v23, v18);
  if ((v42 & 1) != 0)
  {
    v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
    swift_endAccess();
    swift_retain();
    sub_1BA728F8C(v23, v18, v25, 0);
    v44 = *(_QWORD *)(v43 + 16);
    swift_retain();
    swift_release();
    v37 = v64;
    sub_1BA6E9B50(v44);
    swift_release();
    goto LABEL_25;
  }
  swift_endAccess();
  sub_1BA728F8C(v23, v18, v25, 0);
LABEL_54:
  v51 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v64, 1, 1, v66);
  sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA856968);
  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  *v52 = v23;
  v52[1] = v18;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA728F8C(v23, v18, v25, 0);
  swift_release();
LABEL_55:
  swift_release();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1BA728F8C(uint64_t result, uint64_t a2, char a3, char a4)
{
  if ((a4 & 1) == 0)
    return sub_1BA69C828(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1BA728F9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v19 = *a2;
  v17 = *((_BYTE *)a2 + 9);
  v18 = *((_BYTE *)a2 + 8);
  v15 = a2[3];
  v16 = a2[2];
  v13 = a2[5];
  v14 = a2[4];
  v4 = a2[8];
  v11 = a2[7];
  v12 = a2[6];
  v5 = a2[9];
  v6 = a2[10];
  result = swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 88);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    v10 = v8 + 48;
    while (1)
    {
      v33 = *(_QWORD *)(v10 - 16);
      v21 = v19;
      v22 = v18;
      v23 = v17;
      v24 = v16;
      v25 = v15;
      v26 = v14;
      v27 = v13;
      v28 = v12;
      v29 = v11;
      v30 = v4;
      v31 = v5;
      v32 = v6;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC(a1, &v21);
      if (v3)
        break;
      v10 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v9)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

void sub_1BA729130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[272];

  v1 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1BAE79BFC(v0, (uint64_t)v6);
  __asm { BR              X11 }
}

uint64_t sub_1BA729288@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 + 816) = a1 & 0xF7;
  v4 = *(_QWORD *)(v1 + 784);
  v5 = *(_QWORD *)(v1 + 776);
  v6 = *(_QWORD *)(v1 + 768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAE79C38(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
  v7 = sub_1BA733748(v3, v6, v5, v4, v6, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t initializeWithCopy for FormatSupplementary(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA729B74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v62 = a8;
  v68 = (char *)a7;
  v67 = a3;
  v65 = a9;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  MEMORY[0x1E0C80A78](v22);
  v63 = (uint64_t)v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v61 = (uint64_t)v58 - v25;
  v60 = type metadata accessor for FormatNodeStateData.Data();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v27 = (char *)v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FormatViewData(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v58 - v32;
  v64 = a2;
  v66 = a4;
  v67 = a5;
  v34 = (uint64_t)v69;
  result = sub_1BA72A704(a1, (uint64_t)v58 - v32);
  if (!v34)
  {
    v58[1] = 0;
    v36 = a1;
    v68 = v33;
    sub_1BA57B488((uint64_t)v33, (uint64_t)v30, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    v69 = v30;
    sub_1BA4C2DD8((uint64_t)v30, (uint64_t)v27, type metadata accessor for FormatViewData);
    v37 = v60;
    swift_storeEnumTagMultiPayload();
    v38 = v61;
    sub_1BA4C2DD8((uint64_t)v27, v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v38, 0, 1, v37);
    v39 = v63;
    sub_1BA57B488(v38, v63, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    v40 = v67;
    swift_bridgeObjectRetain();
    sub_1BA722740(v39, v66, v40);
    swift_endAccess();
    sub_1BA502AD0(v38, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v41 = v64;
    v42 = *(_QWORD *)(v64 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_unownedRetainStrong();
    swift_beginAccess();
    v44 = *(_QWORD *)(a6 + 16);
    v43 = *(_QWORD *)(a6 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    v45 = *(_QWORD *)(v42 + 40);
    if (v45)
    {
      v74 = *(_QWORD *)(v42 + 32);
      v75 = v45;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v46);
      sub_1BB872AFC(v47);
      swift_bridgeObjectRelease();
      v44 = v74;
      v43 = v75;
    }
    swift_unownedRetainStrong();
    swift_beginAccess();
    v48 = *(_QWORD *)(a6 + 24);
    v62 = *(_QWORD *)(a6 + 16);
    v61 = v48;
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    v49 = *(_QWORD *)(a6 + 40);
    swift_retain();
    swift_release();
    v63 = v44;
    if (v49)
    {
      v50 = *(_QWORD *)(v49 + 16);
      swift_retain();
      swift_release();
    }
    else
    {
      v50 = 0;
    }
    v51 = swift_allocObject();
    v76 = v50;
    swift_unownedRetainStrong();
    swift_beginAccess();
    v60 = *(_QWORD *)(a6 + 72);
    swift_release();
    swift_unownedRetainStrong();
    swift_beginAccess();
    v52 = *(_QWORD *)(a6 + 80);
    sub_1BA67D3F4(v52);
    swift_release();
    v72 = v52;
    sub_1BA67C978(v41, &v73);
    sub_1BA6EEDB4(v52);
    swift_unownedRetainStrong();
    swift_beginAccess();
    LOBYTE(v52) = *(_BYTE *)(a6 + 88);
    swift_release();
    sub_1BB86DD80();
    v53 = v70;
    swift_unownedRetainStrong();
    v54 = *(_QWORD *)(a6 + 96);
    v55 = *(_BYTE *)(a6 + 104);
    swift_release();
    v70 = v54;
    v71 = v55;
    type metadata accessor for FormatViewNodeLayoutAttributes();
    swift_allocObject();
    swift_retain();
    v56 = v67;
    swift_bridgeObjectRetain();
    v57 = FormatViewNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(v66, v56, v63, v43, v62, v61, v36, &v76, a10, a11, a12, a13, v60, &v73, v52, v53, &v70);
    sub_1BA4A2E80((uint64_t)v69, type metadata accessor for FormatViewData);
    result = sub_1BA502AD0((uint64_t)v68, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    *(_QWORD *)(v51 + 16) = v57;
    *v65 = v51 | 4;
  }
  return result;
}

uint64_t type metadata accessor for FormatViewNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t destroy for FormatViewData(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for FormatViewBackground(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    switch((_DWORD)result)
    {
      case 2:
        sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
        return sub_1BAA4E044(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
      case 1:
        swift_release();
        v4 = a1 + *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
        v5 = sub_1BB86FBD4();
        v6 = *(_QWORD *)(v5 - 8);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
        if (!(_DWORD)result)
          return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
        break;
      case 0:
        swift_release();
        return swift_release();
    }
  }
  return result;
}

_OWORD *initializeWithCopy for FormatViewData(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v4 = type metadata accessor for FormatViewBackground(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v15 = *((_QWORD *)a2 + 2);
      v16 = *((_QWORD *)a2 + 3);
      v17 = *((_QWORD *)a2 + 4);
      v18 = *((_QWORD *)a2 + 5);
      v19 = *((_QWORD *)a2 + 6);
      v20 = *((_QWORD *)a2 + 7);
      v32 = *((_QWORD *)a2 + 9);
      v33 = *((_QWORD *)a2 + 8);
      v35 = *((_BYTE *)a2 + 80);
      sub_1BAA8C5C0(v15, v16, v17, v18, v19, v20, v33, v32, v35);
      *((_QWORD *)a1 + 2) = v15;
      *((_QWORD *)a1 + 3) = v16;
      *((_QWORD *)a1 + 4) = v17;
      *((_QWORD *)a1 + 5) = v18;
      *((_QWORD *)a1 + 6) = v19;
      *((_QWORD *)a1 + 7) = v20;
      *((_QWORD *)a1 + 8) = v33;
      *((_QWORD *)a1 + 9) = v32;
      *((_BYTE *)a1 + 80) = v35;
      v21 = *((_QWORD *)a2 + 12);
      v22 = *((_QWORD *)a2 + 13);
      v23 = *((_QWORD *)a2 + 14);
      v24 = *((_QWORD *)a2 + 15);
      v25 = *((_QWORD *)a2 + 16);
      v27 = *((_QWORD *)a2 + 17);
      v26 = *((_QWORD *)a2 + 18);
      v34 = v26;
      v36 = *((_QWORD *)a2 + 11);
      v28 = *((_BYTE *)a2 + 152);
      sub_1BAA8C5C0(v36, v21, v22, v23, v24, v25, v27, v26, v28);
      *((_QWORD *)a1 + 11) = v36;
      *((_QWORD *)a1 + 12) = v21;
      *((_QWORD *)a1 + 13) = v22;
      *((_QWORD *)a1 + 14) = v23;
      *((_QWORD *)a1 + 15) = v24;
      *((_QWORD *)a1 + 16) = v25;
      *((_QWORD *)a1 + 17) = v27;
      *((_QWORD *)a1 + 18) = v34;
      *((_BYTE *)a1 + 152) = v28;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86FBD4();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_retain();
      if (v13(v10, 1, v11))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      v29 = *(_QWORD *)a2;
      v30 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = v29;
      *((_QWORD *)a1 + 1) = v30;
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t FormatViewNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  ValueMetadata *v27;
  _UNKNOWN **v28;
  uint64_t v29;

  v18 = *a8;
  v19 = *a14;
  v20 = *a17;
  v21 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(_QWORD *)(v17 + 96) = a7;
  *(_QWORD *)(v17 + 104) = v18;
  *(_QWORD *)(v17 + 112) = a13;
  *(_QWORD *)(v17 + 120) = v19;
  *(_BYTE *)(v17 + 128) = a15;
  *(_QWORD *)(v17 + 136) = a16;
  *(_QWORD *)(v17 + 144) = v20;
  *(_BYTE *)(v17 + 152) = v21;
  if (a7)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F90, (uint64_t (*)(uint64_t))sub_1BAA7FD74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    v24 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v25 = *(_QWORD *)(a7 + 64);
    if ((~v25 & 0xF000000000000007) != 0)
    {
      v28 = &protocol witness table for FormatBackground;
      v27 = &type metadata for FormatBackground;
      v26 = *(_QWORD *)(a7 + 64);
    }
    else
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 56) = v27;
    *(_QWORD *)(inited + 64) = v28;
    swift_retain_n();
    swift_retain();
    sub_1BA6E6C68(v25);
    v29 = sub_1BA67D820(v24);
    swift_setDeallocating();
    sub_1BAA7FD74(0);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    v29 = MEMORY[0x1E0DEE9E8];
  }
  *(_QWORD *)(v17 + 160) = v29;
  return v17;
}

uint64_t sub_1BA72A704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
  MEMORY[0x1E0C80A78](v3);
  if (a1)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if ((~v4 & 0xF000000000000007) != 0)
      __asm { BR              X11 }
  }
  v5 = type metadata accessor for FormatViewBackground(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
}

void sub_1BA72A834(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = a1[8];
  v4[15] = a1[7];
  v4[16] = v5;
  v4[17] = a1[9];
  *(_OWORD *)((char *)v1 + 137) = *(_OWORD *)((char *)a1 + 153);
  v6 = a1[4];
  v1[2] = a1[3];
  v1[3] = v6;
  v7 = a1[6];
  v1[4] = a1[5];
  v1[5] = v7;
  v8 = a1[2];
  *v1 = a1[1];
  v1[1] = v8;
  v9 = *(_QWORD *)(v2 + 352);
  sub_1BAB05A20(v2 + 352);
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v10 = sub_1BA72BED4(*(_QWORD *)(v2 + 208), v9);
  if (v3)
  {
    swift_release();
    sub_1BAC65F98(v2 + 352);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_release();
    v12 = *(_QWORD *)(v2 + 360);
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v13 = sub_1BA72BED4(*(_QWORD *)(v2 + 208), v12);
    swift_bridgeObjectRelease();
    swift_release();
    v14 = *(_QWORD *)(v2 + 368);
    v15 = *(_QWORD *)(v2 + 376);
    *(_QWORD *)(v2 + 96) = v15;
    *(_QWORD *)(v2 + 104) = v14;
    v16 = *(_QWORD *)(v2 + 384);
    v17 = *(_QWORD *)(v2 + 392);
    *(_QWORD *)(v2 + 64) = v17;
    *(_QWORD *)(v2 + 72) = v16;
    v18 = *(_QWORD *)(v2 + 400);
    v19 = *(_QWORD *)(v2 + 408);
    *(_QWORD *)(v2 + 48) = v19;
    *(_QWORD *)(v2 + 56) = v18;
    v20 = *(_QWORD *)(v2 + 416);
    v21 = *(_QWORD *)(v2 + 424);
    *(_QWORD *)(v2 + 40) = v20;
    *(_QWORD *)(v2 + 80) = 0;
    *(_QWORD *)(v2 + 88) = v21;
    v22 = *(unsigned __int8 *)(v2 + 432);
    *(_DWORD *)(v2 + 32) = v22;
    v23 = *(_QWORD *)(v2 + 440);
    v24 = *(_QWORD *)(v2 + 448);
    v25 = *(_QWORD *)(v2 + 456);
    v26 = *(_QWORD *)(v2 + 464);
    v27 = *(_QWORD *)(v2 + 472);
    v28 = *(_QWORD *)(v2 + 480);
    *(_QWORD *)(v2 + 16) = v28;
    *(_QWORD *)(v2 + 24) = v23;
    v29 = *(_QWORD *)(v2 + 496);
    *(_QWORD *)(v2 + 8) = *(_QWORD *)(v2 + 488);
    v30 = *(_BYTE *)(v2 + 504);
    sub_1BAA8C5C0(v14, v15, v16, v17, v18, v19, v20, v21, v22);
    v31 = v23;
    v32 = *(_QWORD *)(v2 + 8);
    sub_1BAA8C5C0(v31, v24, v25, v26, v27, v28, v32, v29, v30);
    sub_1BAC65F98(v2 + 352);
    v33 = *(_DWORD *)(v2 + 32);
    *(_BYTE *)(v2 + 208) = v33;
    *(_BYTE *)(v2 + 176) = v30;
    v34 = *(_QWORD *)(v2 + 104);
    v35 = *(_QWORD *)(v2 + 112);
    *(double *)v35 = v11;
    *(double *)(v35 + 8) = v13;
    v36 = *(_QWORD *)(v2 + 96);
    *(_QWORD *)(v35 + 16) = v34;
    *(_QWORD *)(v35 + 24) = v36;
    v37 = *(_QWORD *)(v2 + 64);
    *(_QWORD *)(v35 + 32) = *(_QWORD *)(v2 + 72);
    *(_QWORD *)(v35 + 40) = v37;
    v38 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v35 + 48) = *(_QWORD *)(v2 + 56);
    *(_QWORD *)(v35 + 56) = v38;
    v39 = *(_QWORD *)(v2 + 88);
    *(_QWORD *)(v35 + 64) = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v35 + 72) = v39;
    *(_BYTE *)(v35 + 80) = v33;
    *(_QWORD *)(v35 + 88) = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v35 + 96) = v24;
    *(_QWORD *)(v35 + 104) = v25;
    *(_QWORD *)(v35 + 112) = v26;
    v40 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v35 + 120) = v27;
    *(_QWORD *)(v35 + 128) = v40;
    *(_QWORD *)(v35 + 136) = v32;
    *(_QWORD *)(v35 + 144) = v29;
    *(_BYTE *)(v35 + 152) = *(_BYTE *)(v2 + 176);
    v41 = type metadata accessor for FormatViewBackground(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v35, 0, 1, v41);
  }
  JUMPOUT(0x1BA72A804);
}

uint64_t sub_1BA72B228(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v18 = v6 + v4;
  else
    v18 = v6;
  v5 = sub_1BB38E5E0(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = v5[2];
  if ((v5[3] >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v13 = (unint64_t)&v5[3 * v12 + 4];
  if (a1 + 32 < v13 + 24 * v4 && v13 < a1 + 32 + 24 * v4)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
  v15 = v5[2];
  v16 = __OFADD__(v15, v4);
  v17 = v15 + v4;
  if (!v16)
  {
    v5[2] = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA72B394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, double), uint64_t (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD, double);
  uint64_t (*v49)(void);
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58[13];

  v51 = a7;
  v50 = a6;
  v49 = a5;
  v48 = a4;
  v9 = v8;
  v10 = v7;
  v47 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v52 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - v14;
  v58[12] = a1;
  swift_beginAccess();
  v16 = *(_QWORD *)(v10 + 16);
  v17 = *(_QWORD *)(v10 + 24);
  swift_bridgeObjectRetain();
  v18 = sub_1BA717D44(v16, v17);
  v55 = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v10 + 32);
  v21 = *(_QWORD *)(v10 + 40);
  swift_beginAccess();
  v22 = *(_QWORD *)(v10 + 48);
  v58[0] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v54 = sub_1BB669C8C(v22, v58);
  v56 = v9;
  swift_retain();
  v23 = v20;
  v24 = v18;
  v46 = sub_1BA717D44(v23, v21);
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = v55;
  swift_release();
  swift_release();
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(v10 + 112);
  swift_beginAccess();
  v57 = *(_QWORD *)(v10 + 88);
  v29 = v57;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v29);
  v30 = v56;
  sub_1BA717E88();
  if (v30)
  {
    sub_1BA719718(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    v45 = v15;
    v43 = v28;
    v56 = v26;
    v44 = v24;
    v32 = v52;
    sub_1BA719718(v29);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_retain();
    v33 = swift_bridgeObjectRetain();
    v34 = sub_1BB67D4D4(v33, a2);
    swift_bridgeObjectRelease();
    v35 = swift_release();
    v42 = (uint64_t)&v42;
    v36 = MEMORY[0x1E0C80A78](v35);
    v37 = v48(0, v36);
    v38 = v49();
    v41 = v37;
    v39 = v45;
    v51(v44, v27, v43, v45, v34, v46, v56, v54, v50, &v42 - 6, v41, v38);
    v40 = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v39, v40);
  }
}

uint64_t FormatBoolBinding.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v3 = *(unsigned __int16 *)(v2 + 8);
  if (((1 << (v3 >> 13)) & 0xD7) == 0)
  {
    v5 = result;
    if (v3 >> 13 == 3)
    {
      if ((v3 & 0x80) == 0 || ((v3 >> 7) & 0x3E | (v3 >> 5) & 1) != 7)
        return result;
    }
    else if ((v3 & 0x80) == 0)
    {
      return result;
    }
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v6 = *((_QWORD *)&v9 + 1);
      v7 = v10;
      __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, a2, v6, v7);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    }
    else
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
      return sub_1BA65DB80((uint64_t)&v8, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

void sub_1BA72B8F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __int128 v59[5];
  uint64_t v60;
  uint64_t v61;

  v4 = v2;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_OWORD *)(a2 + 48);
  v59[2] = *(_OWORD *)(a2 + 32);
  v59[3] = v11;
  v59[4] = *(_OWORD *)(a2 + 64);
  v60 = *(_QWORD *)(a2 + 80);
  v12 = *(_OWORD *)(a2 + 16);
  v59[0] = *(_OWORD *)a2;
  v59[1] = v12;
  v51 = v2[6];
  sub_1BA6FA63C();
  v13 = v3;
  if (!v3)
  {
    v61 = a2;
    v43 = v10;
    swift_beginAccess();
    v14 = v2[8];
    v15 = *(_QWORD *)(v14 + 16);
    v44 = v8;
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v15; ++i)
      {
        v17 = *(_QWORD *)(v14 + 8 * i + 32);
        v51 = v17;
        sub_1BA7196DC(v17);
        sub_1BA6FA7EC();
        sub_1BA719340(v17);
      }
      swift_bridgeObjectRelease_n();
      v8 = v44;
    }
    v45 = a1;
    swift_beginAccess();
    v18 = v2[9];
    v19 = *(_QWORD *)(v18 + 16);
    v42 = v4;
    if (v19)
    {
      v49 = 0;
      swift_bridgeObjectRetain_n();
      v41 = v18;
      v20 = (uint64_t *)(v18 + 48);
      while (1)
      {
        v46 = v19;
        v22 = *(v20 - 2);
        v21 = *(v20 - 1);
        v23 = *v20;
        v24 = v20[1];
        v25 = v20[2];
        v26 = v20[3];
        v27 = v20[4];
        v28 = v20[5];
        v51 = v22;
        v52 = v21;
        v53 = v23;
        v54 = v24;
        v55 = v25;
        v56 = v26;
        v57 = v27;
        v58 = v28;
        v47 = v28;
        v48 = v27;
        sub_1BA76B724(v22, v21, v23, v24, v25, v26, v27);
        v29 = v49;
        sub_1BAC5FA3C();
        v49 = v29;
        if (v29)
          break;
        v20 += 8;
        sub_1BA76B698(v22, v21, v23, v24, v25, v26, v48);
        v19 = v46 - 1;
        if (v46 == 1)
        {
          swift_bridgeObjectRelease_n();
          v13 = v49;
          v4 = v42;
          v30 = (uint64_t)v43;
          v8 = v44;
          goto LABEL_12;
        }
      }
      sub_1BA76B698(v22, v21, v23, v24, v25, v26, v48);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v30 = (uint64_t)v43;
LABEL_12:
      swift_beginAccess();
      v31 = v4[11];
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        v33 = v31 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v34 = *(_QWORD *)(v8 + 72);
        v61 = v4[11];
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v33, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v50 = *(_QWORD *)(v30 + 16);
          swift_retain();
          sub_1BA711C44();
          if (v13)
            break;
          swift_release();
          sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v33 += v34;
          if (!--v32)
          {
            swift_bridgeObjectRelease_n();
            v4 = v42;
            goto LABEL_17;
          }
        }
        swift_release();
        sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_17:
        swift_beginAccess();
        v35 = v4[12];
        swift_bridgeObjectRetain();
        v36 = v45;
        sub_1BA6F9F38(v45, v59, v35);
        swift_bridgeObjectRelease();
        if (!v13)
        {
          swift_beginAccess();
          v37 = v4[14];
          if (v37 >> 62 == 1)
          {
            v38 = *(_QWORD *)(v37 + 16);
            v39 = *(_QWORD *)(v37 + 24);
            sub_1BA67D3F4(v4[14]);
            sub_1BA67D3F4(v38);
            swift_bridgeObjectRetain();
            sub_1BB5742EC(v36, (uint64_t)v59, v38, v39);
            sub_1BA6EEDB4(v38);
            swift_bridgeObjectRelease();
            sub_1BA6EEDB4(v37);
          }
          swift_beginAccess();
          v40 = v4[15];
          swift_bridgeObjectRetain();
          sub_1BB5701AC(v36, v59, v40);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

double sub_1BA72BD68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v8;

  v3 = *v0;
  v2 = v0[1];
  v5 = v0[2];
  v4 = v0[3];
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v6 = sub_1BA72BED4(v8, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v8, v2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v8, v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v8, v4);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v6;
}

double sub_1BA72BED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_1BA72C428(0, &qword_1ED3B0808);
  swift_allocBox();
  sub_1BB86E830();
  sub_1BA72C428(0, &qword_1ED3B0810);
  swift_allocBox();
  sub_1BB86E830();
  v22 = *(_QWORD *)(a2 + 16);
  if (v22)
  {
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = v5 + 16 * v6;
      v8 = *(_QWORD *)v7;
      if ((*(_BYTE *)(v7 + 8) & 1) != 0)
        break;
      v23 = *(_QWORD *)v7;
      swift_retain();
      FormatFloat.value(contextLayoutOptions:)();
      if (v2)
      {
        sub_1BA72C46C(v8, 0);
LABEL_36:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      swift_beginAccess();
      sub_1BB86E80C();
      swift_endAccess();
      sub_1BA72C46C(v8, 0);
LABEL_6:
      if (++v6 == v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    v9 = *(_QWORD *)v7;
    swift_beginAccess();
    sub_1BB86E800();
    swift_endAccess();
    if ((char)v23 == 6)
    {
LABEL_3:
      LOBYTE(v23) = v9;
LABEL_4:
      swift_beginAccess();
      sub_1BB86E80C();
LABEL_5:
      swift_endAccess();
      v5 = a2 + 32;
      goto LABEL_6;
    }
    if (v9 >= 4)
    {
      if (v9 == 4)
      {
        LOBYTE(v23) = 4;
        goto LABEL_4;
      }
      v10 = 1;
      if ((char)v23 <= 3)
      {
LABEL_11:
        v11 = qword_1BB87DB58[(char)v23];
        if (v9 > 3)
        {
LABEL_12:
          v12 = 2;
LABEL_20:
          if (((v11 >= v12) & ~v10) == 0)
          {
            while (1)
            {
              swift_beginAccess();
              sub_1BB86E800();
              swift_endAccess();
              if ((unint64_t)(char)v23 > 3 || qword_1BB87DB58[(char)v23] >= v12)
                break;
              sub_1BA72D374();
              if (v2)
                goto LABEL_36;
            }
            if (v9 == 5)
            {
              swift_beginAccess();
              sub_1BB86E800();
              swift_endAccess();
              if (v23 != 4)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for FormatLayoutError();
                sub_1BA689E84();
                swift_allocError();
                v20 = v19;
                *v19 = sub_1BB106F08(a2);
                v20[1] = v21;
                swift_storeEnumTagMultiPayload();
                swift_willThrow();
                swift_release();
                goto LABEL_39;
              }
              swift_beginAccess();
              sub_1BB86E7F4();
              goto LABEL_5;
            }
          }
          goto LABEL_3;
        }
LABEL_19:
        v12 = qword_1BB87DB58[(char)v8];
        goto LABEL_20;
      }
    }
    else
    {
      v10 = 0;
      if ((char)v23 <= 3)
        goto LABEL_11;
    }
    v11 = 2;
    if (v9 > 3)
      goto LABEL_12;
    goto LABEL_19;
  }
LABEL_29:
  while (1)
  {
    swift_beginAccess();
    v13 = sub_1BB86E818();
    swift_endAccess();
    if ((v13 & 1) != 0)
      break;
    sub_1BA72D374();
    if (v2)
      goto LABEL_38;
  }
  swift_beginAccess();
  sub_1BB86E7F4();
  swift_endAccess();
  if ((v24 & 1) == 0)
  {
    v3 = *(double *)&v23;
    swift_beginAccess();
    v14 = sub_1BB86E818();
    swift_endAccess();
    if ((v14 & 1) != 0)
    {
      swift_release();
      swift_release();
      return v3;
    }
  }
  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  v16 = v15;
  *v15 = sub_1BB106F08(a2);
  v16[1] = v17;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_38:
  swift_release();
LABEL_39:
  swift_release();
  return v3;
}

void sub_1BA72C428(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB86E83C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA72C46C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

void FormatFloat.value(contextLayoutOptions:)()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

double sub_1BA72C540@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 16);
}

void sub_1BA72C70C(uint64_t a1)
{
  __asm { BR              X11 }
}

double sub_1BA72C76C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  v3 = swift_allocError();
  sub_1BA900B30(v0, v4);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v1 - 184) = v3;
  swift_willThrow();
  return v2;
}

uint64_t sub_1BA72D374()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v8;

  sub_1BA72C428(0, &qword_1ED3B0808);
  swift_projectBox();
  sub_1BA72C428(0, &qword_1ED3B0810);
  swift_projectBox();
  swift_beginAccess();
  sub_1BB86E7F4();
  swift_endAccess();
  if ((v8 & 1) == 0)
  {
    swift_beginAccess();
    sub_1BB86E7F4();
    swift_endAccess();
    swift_beginAccess();
    sub_1BB86E7F4();
    swift_endAccess();
    __asm { BR              X10 }
  }
  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  v1 = v0;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BB106F08(v2);
  v5 = v4;
  swift_bridgeObjectRelease();
  *v1 = v3;
  v1[1] = v5;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BA72D534()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  v1 = v0;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BB106F08(v2);
  v5 = v4;
  swift_bridgeObjectRelease();
  *v1 = v3;
  v1[1] = v5;
  JUMPOUT(0x1BA72D4B8);
}

void sub_1BA72D590()
{
  swift_beginAccess();
  sub_1BB86E80C();
  swift_endAccess();
  JUMPOUT(0x1BA72D4C4);
}

void sub_1BA72D5EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  v1 = v0;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BB106F08(v2);
  v5 = v4;
  swift_bridgeObjectRelease();
  *v1 = v3;
  v1[1] = v5;
  JUMPOUT(0x1BA72D4B8);
}

uint64_t storeEnumTagSinglePayload for FormatEquationOperator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA72D694 + 4 * byte_1BB88B015[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA72D6C8 + 4 * asc_1BB88B010[v4]))();
}

uint64_t sub_1BA72D6C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA72D6D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA72D6D8);
  return result;
}

uint64_t sub_1BA72D6E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA72D6ECLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA72D6F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA72D6F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA72D704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v48;
  uint64_t v49;

  v8 = v7;
  v9 = v6;
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BA707E14(v11, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = *(_QWORD *)(v6 + 16);
  v14 = *(_QWORD *)(v6 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  v48 = sub_1BA717D44(v13, v14);
  v16 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  v17 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v18 = (uint64_t *)(*(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v20 = *v18;
  v19 = v18[1];
  v21 = *(_QWORD *)(v9 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1BB66B870(v21, v12, v20, v19, (void (*)(uint64_t))sub_1BA6F4888, sub_1BA6F4294, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6F5294, (void (*)(_QWORD))type metadata accessor for FormatViewNodeStyle, (void (*)(uint64_t))sub_1BA6F1B40);
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v43 = v16;
    v44 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v23 = (uint64_t *)(*(_QWORD *)(v12 + v17) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v25 = *v23;
    v24 = v23[1];
    v26 = *(_QWORD *)(v9 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1BA6E3AA0(v26, v12, v25, v24, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v28 && (swift_beginAccess(), (v29 = *(_QWORD *)(v28 + 72)) != 0) && *(_QWORD *)(v29 + 16))
    {
      v30 = *(_QWORD *)(v28 + 56);
      v42 = *(_QWORD *)(v28 + 48);
      v31 = *(unsigned __int8 *)(v28 + 64);
      swift_retain();
      swift_retain();
      v32 = swift_bridgeObjectRetain();
      v36 = sub_1BB67D220(v32, v12);
      swift_bridgeObjectRelease();
      swift_release();
      if (v31)
        v37 = 0;
      else
        v37 = v30;
      if (v31)
        v38 = 0;
      else
        v38 = v42;
      type metadata accessor for FormatAnimationData();
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = v28;
      *(_QWORD *)(v39 + 24) = v38;
      *(_QWORD *)(v39 + 32) = v37;
      *(_BYTE *)(v39 + 40) = v31;
      *(_QWORD *)(v39 + 48) = v36;
      v33 = a3;
      v40 = *(_QWORD *)(a3 + 24);
      swift_beginAccess();
      swift_retain_n();
      v34 = v43;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = *(_QWORD *)(v40 + 32);
      *(_QWORD *)(v40 + 32) = 0x8000000000000000;
      sub_1BA81C03C(v39, v48, v43, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v40 + 32) = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release_n();
    }
    else
    {
      v33 = a3;
      v34 = v43;
    }
    swift_unownedRetainStrong();
    swift_bridgeObjectRetain();
    swift_unownedRetain();
    swift_release();
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v48;
    v35[3] = v34;
    v35[4] = v9;
    v35[5] = v12;
    v35[6] = v44;
    v35[7] = a2;
    v35[8] = v33;
    a5(0);
    a6();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BB86D504();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t FormatAccessibilityNode.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);

  v3 = v2;
  v4 = v1;
  v6 = *(_QWORD *)v4;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  sub_1BAE76B34(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAE76C24();
  v20 = sub_1BA4A2870(&qword_1ED3D1060, (uint64_t (*)(uint64_t))sub_1BAE76C24, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v21, v17, v6, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v16, v20, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v23 = *(_QWORD *)(v4 + 16);
  v22 = *(_QWORD *)(v4 + 24);
  v24 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v43(v13, v26, v25);
  v42 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD265E8(v23, v22, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE495DC, (uint64_t (*)(uint64_t))sub_1BAE76BAC, &qword_1ED3AEC60);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v30 = (uint64_t)v16;
  }
  else
  {
    swift_beginAccess();
    v27 = *(_QWORD *)(v4 + 32);
    v28 = *(_BYTE *)(v4 + 40);
    v29 = (uint64_t)v41;
    v43(v41, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BA72F4F8(v27, v28);
    sub_1BAD15DD0(v27, v28, 1, 0, 0, v29, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    sub_1BA72E4D0(v27, v28);
    v41 = v16;
    v32 = v43;
    swift_beginAccess();
    v33 = *(_QWORD *)(v4 + 48);
    v34 = *(_QWORD *)(v4 + 56);
    v35 = *(_QWORD *)(v4 + 64);
    v36 = *(_WORD *)(v4 + 72);
    sub_1BA72FFC4(v33, v34, v35, v36);
    if (qword_1ED3C6D18 != -1)
      swift_once();
    v37 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476B60);
    v38 = (uint64_t)v40;
    v32(v40, v37, v25);
    swift_storeEnumTagMultiPayload();
    v39 = v41;
    sub_1BAD4982C(v33, v34, v35, v36, 2, 0, 0, v38);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    sub_1BA72E4BC(v33, v34, v35, v36);
    v30 = (uint64_t)v39;
  }
  return sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BAE76B34);
}

uint64_t sub_1BA72E05C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  __int128 v31;
  int v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  unsigned __int16 v38;

  v2 = v1;
  sub_1BAEF9EE8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE76C24();
  sub_1BA4A2870(&qword_1ED3D1060, (uint64_t (*)(uint64_t))sub_1BAE76C24, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v2;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (_BYTE *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v13 - 1);
      v33 = *((_QWORD *)v13 - 2);
      swift_bridgeObjectRetain_n();
      v18 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v18);
      *(_QWORD *)&v28[-32] = &_s10CodingKeysON_229;
      *(_QWORD *)&v28[-24] = sub_1BAE76CA4();
      *(_QWORD *)&v28[-16] = sub_1BA72E504();
      *(_QWORD *)&v28[-8] = sub_1BAE76CE8();
      swift_getKeyPath();
      swift_retain();
      v19 = sub_1BAE71220((uint64_t)&unk_1E7254F70);
      swift_release_n();
      sub_1BA98D1F0();
      v2 = swift_allocError();
      v20 = v33;
      *(_QWORD *)v21 = v33;
      *(_QWORD *)(v21 + 8) = v17;
      *(_QWORD *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v17, 1);
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v14 = sub_1BAE0F8F8((uint64_t)v8, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF9EE8);
  v16 = v15;
  v36 = xmmword_1BB8A1A10;
  LOBYTE(v37) = 0;
  sub_1BA72F62C();
  sub_1BB8740D4();
  v33 = v34;
  v23 = BYTE8(v34);
  v34 = xmmword_1BB8D2D60;
  v35 = 0;
  sub_1BA650C04();
  sub_1BB874068();
  v31 = v36;
  v30 = v37;
  v32 = v38;
  type metadata accessor for FormatAccessibilityNode();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  v29 = v23;
  *(_QWORD *)(v2 + 48) = 0;
  *(_WORD *)(v2 + 72) = -512;
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v14;
  *(_QWORD *)(v2 + 24) = v16;
  *(_QWORD *)(v2 + 32) = v33;
  *(_BYTE *)(v2 + 40) = v29;
  swift_beginAccess();
  v24 = *(_QWORD *)(v2 + 48);
  v25 = *(_QWORD *)(v2 + 56);
  v26 = *(_QWORD *)(v2 + 64);
  *(_OWORD *)(v2 + 48) = v31;
  *(_QWORD *)(v2 + 64) = v30;
  v27 = *(_WORD *)(v2 + 72);
  *(_WORD *)(v2 + 72) = v32;
  sub_1BA72E4BC(v24, v25, v26, v27);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1BA72E4BC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if ((unsigned __int16)((unsigned __int16)a4 >> 9) <= 0x7Eu)
    return sub_1BA733340(a1, a2, a3, a4);
  return a1;
}

unint64_t sub_1BA72E4D0(unint64_t result, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 4;
  else
    v2 = 0;
  if (((result >> 60) & 3 | v2) <= 5)
    return swift_release();
  return result;
}

unint64_t sub_1BA72E504()
{
  unint64_t result;

  result = qword_1ED3CA350;
  if (!qword_1ED3CA350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0848, &_s10CodingKeysON_229);
    atomic_store(result, (unint64_t *)&qword_1ED3CA350);
  }
  return result;
}

uint64_t sub_1BA72E548(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BA72E568(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1BA72E568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  _QWORD v26[9];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v29 = a7;
  v30 = a2;
  v33 = a4;
  v31 = a1;
  sub_1BA7226D8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - v14;
  v16 = type metadata accessor for FormatNodeStateData.Data();
  v26[5] = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  swift_unownedRetainStrong();
  swift_beginAccess();
  v17 = *(unsigned __int16 *)(a3 + 72);
  v28 = a5;
  v26[8] = v15;
  v26[7] = v12;
  v26[6] = v16;
  if (v17 >> 9 >= 0x7F)
  {
    swift_release();
    v32 = 255;
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(a3 + 48);
  v19 = *(_QWORD *)(a3 + 56);
  v20 = *(_QWORD *)(a3 + 64);
  sub_1BA733718(v18, v19, v20, v17);
  swift_release();
  if ((v17 & 0x8000) != 0)
  {
    v34 = v18;
    v35 = v19;
    v36 = v20;
    LOWORD(v37) = v17 & 0x1FF;
    sub_1BAA2AFD8(v18, v19, v20, v17, BYTE1(v17) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BA73AA74();
    if (v7)
    {
      sub_1BA72E4BC(v18, v19, v20, v17);
      return sub_1BA72E4BC(v18, v19, v20, v17);
    }
    sub_1BA72E4BC(v18, v19, v20, v17);
    sub_1BA72E4BC(v18, v19, v20, v17);
    v32 = 1;
LABEL_11:
    swift_unownedRetainStrong();
    swift_beginAccess();
    v22 = *(_QWORD *)(a3 + 32);
    v23 = *(_BYTE *)(a3 + 40);
    v24 = (v22 >> 60) & 3;
    if (v23)
      v25 = 4;
    else
      v25 = 0;
    v27 = *(unsigned __int8 *)(a3 + 40);
    sub_1BA72F4F8(v22, v23);
    swift_release();
    __asm { BR              X10 }
  }
  sub_1BB86DD80();
  sub_1BA72BED4(v34, v18);
  if (!v7)
  {
    swift_release();
    sub_1BA72E4BC(v18, v19, v20, v17);
    v32 = 0;
    goto LABEL_11;
  }
  swift_release();
  return sub_1BA72E4BC(v18, v19, v20, v17);
}

unint64_t sub_1BA72F4F8(unint64_t result, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 4;
  else
    v2 = 0;
  if (((result >> 60) & 3 | v2) <= 5)
    return swift_retain();
  return result;
}

uint64_t FormatComputed.__deallocating_deinit()
{
  FormatComputed.deinit();
  return swift_deallocClassInstance();
}

uint64_t *FormatComputed.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  sub_1BA72F5F4(v0[2], *((_BYTE *)v0 + 24));
  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3((char *)v0 + *(_QWORD *)(*v0 + 96), v2);
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v3((char *)v0 + *(_QWORD *)(*v0 + 112), v2);
  sub_1BA49EBE0(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
  return v0;
}

uint64_t sub_1BA72F5F4(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1BA7331E0(result, a2 & 1);
  return result;
}

uint64_t type metadata accessor for FormatAccessibilityLayoutValue()
{
  return objc_opt_self();
}

unint64_t sub_1BA72F62C()
{
  unint64_t result;

  result = qword_1ED3B8018;
  if (!qword_1ED3B8018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityProperty, &type metadata for FormatAccessibilityProperty);
    atomic_store(result, (unint64_t *)&qword_1ED3B8018);
  }
  return result;
}

uint64_t sub_1BA72F670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)@<X0>(uint64_t *@<X8>);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t (*v49)@<X0>(uint64_t *@<X8>);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(_QWORD *@<X8>);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)@<X0>(uint64_t *@<X8>);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[56];
  uint64_t *v70;

  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v65 - v16;
  v18 = *(_QWORD *)a3;
  v19 = *(unsigned __int8 *)(a3 + 8);
  v20 = (_QWORD *)*v4;
  v21 = *v4 >> 62;
  if ((_DWORD)v21)
  {
    if ((_DWORD)v21 == 1)
    {
      v22 = v20[2];
      v23 = v20[3];
      v24 = v20[4];
      MEMORY[0x1E0C80A78](v15);
      *(&v65 - 4) = a1;
      *(&v65 - 3) = a2;
      *(&v65 - 2) = v25;
      *((_BYTE *)&v65 - 8) = v19;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v26 = sub_1BB640CFC(a1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB5E64C4, (uint64_t)(&v65 - 6), v22, v23, v24);
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_release();
      if (!v5)
      {
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v26;
        *a4 = result | 0x8000000000000000;
      }
    }
    else
    {
      v70 = (uint64_t *)a4;
      v66 = v5;
      v67 = v18;
      v33 = v20[2];
      v32 = v20[3];
      v68 = v15;
      swift_bridgeObjectRetain();
      v34 = sub_1BA7305D0();
      v65 = v11;
      v35 = v34;
      v36 = (uint64_t *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      v38 = *v36;
      v37 = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39 = sub_1BA732CA4(v33, v32, a1, v38, v37);
      v41 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
      *((_QWORD *)v42 + 2) = v35;
      *((_QWORD *)v42 + 3) = v33;
      *((_QWORD *)v42 + 4) = v32;
      v43 = v67;
      sub_1BA7305B8(v67, v19);
      swift_retain();
      sub_1BB86C8A4();
      sub_1BA733154(0, v44, v45, v46);
      v47 = (char *)swift_allocObject();
      *((_QWORD *)v47 + 4) = v39;
      *((_QWORD *)v47 + 5) = v41;
      v48 = (uint64_t *)&v47[*(_QWORD *)(*(_QWORD *)v47 + 112)];
      *v48 = v39;
      v48[1] = v41;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v47[*(_QWORD *)(*(_QWORD *)v47 + 104)], v13, v68);
      *((_QWORD *)v47 + 2) = v43;
      v47[24] = v19;
      swift_bridgeObjectRetain();
      if (v19 == 255)
      {
        swift_release();
        v49 = 0;
        v42 = 0;
      }
      else
      {
        v49 = sub_1BB5E6484;
      }
      v62 = swift_allocObject();
      v63 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v47[*(_QWORD *)(*(_QWORD *)v47 + 120)];
      *v63 = v49;
      v63[1] = v42;
      result = swift_release();
      *(_QWORD *)(v62 + 16) = v47;
      *v70 = v62;
    }
  }
  else
  {
    v67 = v18;
    v68 = v15;
    v70 = (uint64_t *)a4;
    sub_1BAE79BFC((uint64_t)(v20 + 2), (uint64_t)v69);
    sub_1BAE79C38((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
    v28 = sub_1BA7305D0();
    v29 = swift_allocObject();
    sub_1BA730B8C();
    if (v5)
    {
      swift_release();
      sub_1BAE79C38((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF090);
      return swift_deallocUninitializedObject();
    }
    else
    {
      v50 = v30;
      v51 = v31;
      v66 = v29;
      v52 = swift_allocObject();
      sub_1BAE79BFC((uint64_t)v69, v52 + 16);
      v65 = v52;
      *(_QWORD *)(v52 + 72) = v28;
      swift_retain();
      v53 = v67;
      sub_1BA7305B8(v67, v19);
      sub_1BB86C8A4();
      sub_1BA733154(0, v54, v55, v56);
      v57 = (char *)swift_allocObject();
      *((_QWORD *)v57 + 4) = v50;
      *((_QWORD *)v57 + 5) = v51;
      v58 = &v57[*(_QWORD *)(*(_QWORD *)v57 + 112)];
      *(_QWORD *)v58 = v50;
      *((_QWORD *)v58 + 1) = v51;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v57[*(_QWORD *)(*(_QWORD *)v57 + 104)], v17, v68);
      *((_QWORD *)v57 + 2) = v53;
      v57[24] = v19;
      swift_bridgeObjectRetain();
      if (v19 == 255)
      {
        swift_release();
        v59 = 0;
        v60 = 0;
        v61 = v66;
      }
      else
      {
        v59 = sub_1BB5E654C;
        v60 = v65;
        v61 = v66;
      }
      v64 = &v57[*(_QWORD *)(*(_QWORD *)v57 + 120)];
      *(_QWORD *)v64 = v59;
      *((_QWORD *)v64 + 1) = v60;
      result = swift_release();
      *(_QWORD *)(v61 + 16) = v57;
      *v70 = v61;
    }
  }
  return result;
}

void sub_1BA72FB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)@<X0>(_QWORD *@<X8>);
  double v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  int v60;
  void *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;

  v8 = sub_1BB86C8B0();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v66 = v10;
  v62 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v62 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v54 - v12;
  swift_unownedRetainStrong();
  v14 = *(_QWORD *)(a1 + 72);
  swift_retain();
  swift_release();
  v68 = v14;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = v67;
  sub_1BA72FFD8();
  v20 = v19;
  swift_release();
  if (v18)
    return;
  v61 = v20;
  v67 = v15;
  v56 = v13;
  v57 = v11;
  v21 = v16;
  v22 = v66;
  v59 = v17;
  swift_unownedRetainStrong();
  v24 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v25 = *(_QWORD *)(a1 + 96);
  v26 = *(unsigned __int16 *)(a1 + 104);
  sub_1BA72FFC4(v24, v23, v25, *(_WORD *)(a1 + 104));
  swift_release();
  v58 = v26 >> 9;
  if (v26 >> 9 <= 0x7E)
  {
    if ((v26 & 0x8000) != 0)
    {
      v68 = v24;
      v69 = v23;
      v70 = v25;
      v71 = v26 & 0x1FF;
      sub_1BAA69C5C(v24, v23, v25, v26, BYTE1(v26) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
      sub_1BA73AA74();
      v53 = v52;
      sub_1BA72E4BC(v24, v23, v25, v26);
      sub_1BA72E4BC(v24, v23, v25, v26);
      v55 = 0;
      v60 = 1;
      v28 = v22;
      v29 = v62;
      v30 = v56;
      v27 = v53;
      goto LABEL_5;
    }
    sub_1BB86DD80();
    v48 = sub_1BA72BED4(v68, v24);
    swift_release();
    sub_1BA72E4BC(v24, v23, v25, v26);
    v55 = 0;
    v60 = 0;
    v27 = *(_QWORD *)&v48;
  }
  else
  {
    v55 = 0;
    v27 = 0;
    v60 = 255;
  }
  v28 = v22;
  v29 = v62;
  v30 = v56;
LABEL_5:
  v31 = v61;
  v67 = v27;
  v32 = sub_1BA7305D0();
  v33 = swift_allocObject();
  swift_unownedRetainStrong();
  swift_weakInit();
  v34 = v31;
  v35 = v27;
  v36 = v60;
  sub_1BA7305B8(v35, v60);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v21, v28);
  v37 = v28;
  v38 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v39 = v30;
  v40 = (v57 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject();
  v42 = v29;
  v43 = v41;
  *(_QWORD *)(v41 + 16) = v33;
  *(_QWORD *)(v41 + 24) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v41 + v38, v39, v37);
  *(_QWORD *)(v43 + v40) = v59;
  swift_retain();
  swift_retain();
  v44 = v63;
  sub_1BB86C8A4();
  sub_1BA732C20(0);
  v45 = (char *)swift_allocObject();
  *((_QWORD *)v45 + 4) = v34;
  *(_QWORD *)&v45[*(_QWORD *)(*(_QWORD *)v45 + 112)] = v34;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v45[*(_QWORD *)(*(_QWORD *)v45 + 104)], v44, v65);
  v46 = v67;
  *((_QWORD *)v45 + 2) = v67;
  v45[24] = v36;
  if (v58 <= 0x7E)
  {
    v49 = v34;
    swift_release();
    sub_1BA72F5F4(v46, v60);

    v47 = sub_1BAA6A788;
  }
  else
  {
    swift_release();
    swift_release();
    v47 = 0;
    v43 = 0;
  }
  v50 = &v45[*(_QWORD *)(*(_QWORD *)v45 + 120)];
  *(_QWORD *)v50 = v47;
  *((_QWORD *)v50 + 1) = v43;
  type metadata accessor for FormatText();
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v45;
  *(_QWORD *)(v51 + 24) = 0;
}

uint64_t sub_1BA72FFC4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if ((unsigned __int16)((unsigned __int16)a4 >> 9) <= 0x7Eu)
    return sub_1BA733718(a1, a2, a3, a4);
  return a1;
}

void sub_1BA72FFD8()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA730060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  v6 = (uint64_t *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory]
                 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  v8 = *v6;
  v7 = v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1BA732CA4(v5, v4, (uint64_t)v2, v8, v7);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_1BA7417FC(v9, v11, v1, v2);
  if (!v3)
    v1 = (uint64_t)v12;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BA7305B8(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1BA749544(result, a2 & 1);
  return result;
}

uint64_t sub_1BA7305D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[40];
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];

  v1 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v1);
  v50 = (uint64_t)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v50, v3);
  v4 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v5 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v46 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v45 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v44 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v43 = v9;
  v58[0] = v4;
  v58[1] = v5;
  v59 = v6;
  v60 = v7;
  v61 = v8;
  v62 = v46;
  v63 = v45;
  v64 = v44;
  v65 = v9;
  v51 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  v48 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v10 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v11 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v12 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v66[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v66[3] = v12;
  v41 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v66[0] = v10;
  v66[1] = v11;
  v42 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BA70AF2C(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v57, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v34 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v33 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v31 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v52 = v34;
  *((_QWORD *)&v52 + 1) = v33;
  v53 = v32;
  v54 = v31;
  v55 = v16;
  v56 = v17;
  v38 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  v49 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v36 = v18;
  v37 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  v40 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v35 = v19;
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v39 = v20;
  v47 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BA70A884(v8, v46);
  swift_retain();
  v22 = v48;
  swift_retain();
  sub_1BA70A8DC((uint64_t)v66);
  v23 = v41;
  swift_bridgeObjectRetain();
  v24 = v42;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v34, v33);
  v25 = v21;
  swift_bridgeObjectRetain();
  v26 = v38;
  swift_bridgeObjectRetain();
  v27 = v36;
  swift_bridgeObjectRetain();
  v28 = v37;
  swift_retain();
  v29 = swift_bridgeObjectRetain();
  return sub_1BB29AEAC(v50, v58, v51, v22, v66, v23, v24, v13, (uint64_t)v57, v14, v15, &v52, v26, v49, v27, v28, v40, v29, v39,
           v25);
}

uint64_t sub_1BA7309F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  char v10;
  char v11;
  unsigned int v13;
  _OWORD v14[2];
  _BYTE v15[19];
  _BYTE v16[56];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char v22;

  v2 = a2;
  sub_1BAE79BFC(a2, (uint64_t)v16);
  sub_1BAE79C38((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
  sub_1BA730B8C();
  v2 += 56;
  sub_1BAE79C38((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF090);
  v3 = *(_OWORD *)(v2 + 16);
  v14[0] = *(_OWORD *)v2;
  v14[1] = v3;
  *(_OWORD *)v15 = *(_OWORD *)(v2 + 32);
  *(_DWORD *)&v15[15] = *(_DWORD *)(v2 + 47);
  v4 = v14[0];
  v5 = v3;
  v7 = *(_QWORD *)v15;
  v6 = *(_QWORD *)&v15[8];
  v8 = v15[18];
  v9 = *(_WORD *)&v15[16];
  v13 = *(unsigned __int16 *)&v15[16] | (v15[18] << 16);
  sub_1BB5066F8((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA714334);
  v17 = v4;
  v18 = v5;
  v19 = v7;
  v20 = v6;
  v22 = v8;
  v21 = v9;
  sub_1BA731518();
  v11 = v10;
  swift_bridgeObjectRelease();
  sub_1BA6EF404(v4, *((uint64_t *)&v4 + 1), v5, *((uint64_t *)&v5 + 1), v7, v6, v13);
  return v11 & 1;
}

void sub_1BA730B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[272];

  v1 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1BAE79BFC(v0, (uint64_t)v6);
  __asm { BR              X11 }
}

uint64_t sub_1BA730CE4@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 + 816) = a1 & 0xF7;
  v4 = *(_QWORD *)(v1 + 784);
  v5 = *(_QWORD *)(v1 + 776);
  v6 = *(_QWORD *)(v1 + 768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAE79C38(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
  v7 = sub_1BA746674(v3, v6, v5, v4, v6, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1BA731518()
{
  uint64_t v0;
  _QWORD v1[6];

  sub_1BB5066BC(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA731584()
{
  sub_1BA7114A0();
  return sub_1BB873B40() & 1;
}

void FormatHeadlineBinding.Text.text(from:computedContext:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v33 = a4;
  v34 = a3;
  v39 = a2;
  v42 = a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)v29 - v7;
  v30 = sub_1BB86C67C();
  v29[4] = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29[2] = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v29[3] = (char *)v29 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v5);
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)v29 - v12;
  v13 = type metadata accessor for FeedHeadline(0);
  v37 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v35 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v32 = (char *)v29 - v16;
  MEMORY[0x1E0C80A78](v17);
  v36 = (char *)v29 - v18;
  MEMORY[0x1E0C80A78](v19);
  v20 = sub_1BB86C8B0();
  v41 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v40 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v22, v5);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  __asm { BR              X10 }
}

uint64_t sub_1BA731D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v10 = v5;
  v11 = v4;
  *(_QWORD *)(v9 - 232) = v3;
  *(_QWORD *)(v9 - 224) = v2;
  v12 = v1;
  v13 = v0;
  v14 = objc_msgSend(*(id *)(*(_QWORD *)(v9 - 200) + 40), sel_publishDate);
  if (v14)
  {
    v15 = v14;
    sub_1BB86C874();

    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  v17 = *(_QWORD *)(v9 - 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v7, v16, 1, v6);
  sub_1BA76D70C(v7, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v8, 1, v6) == 1)
  {
    sub_1BA5C699C(v7, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 0;
  }
  else
  {
    v18 = *(_QWORD *)(v9 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v18, v8, v6);
    *(_QWORD *)(v9 - 184) = v13;
    *(_QWORD *)(v9 - 176) = v11;
    v19 = v10;
    *(_QWORD *)(v9 - 328) = v10;
    *(_QWORD *)(v9 - 168) = v10;
    *(_QWORD *)(v9 - 160) = v12;
    v20 = v12;
    v22 = *(_QWORD *)(v9 - 232);
    v21 = *(_QWORD *)(v9 - 224);
    *(_QWORD *)(v9 - 152) = v21;
    *(_QWORD *)(v9 - 144) = v22;
    sub_1BA7143C8(v13, v11, v19, v20, v21, v22, 0);
    *(_QWORD *)(v9 - 200) = FormatDateFormat.format(_:)(v18);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v6);
    v23 = v11;
    v24 = *(_QWORD *)(v9 - 200);
    sub_1BA6EF818(v13, v23, *(_QWORD *)(v9 - 328), v20, v21, v22, 0);
    sub_1BA5C699C(v7, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  return v24;
}

void sub_1BA732C20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B3F78)
  {
    v2 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9860);
    v5 = type metadata accessor for FormatComputed(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B3F78);
  }
}

uint64_t type metadata accessor for FormatText()
{
  return objc_opt_self();
}

uint64_t sub_1BA732CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  unint64_t v32;
  size_t v33;
  uint64_t isStackAllocationSafe;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59[2];
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a5 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    return a1;
  }
  v10 = (uint64_t *)(*(_QWORD *)(a5 + 56) + 40 * v8);
  a1 = *v10;
  v11 = v10[1];
  v12 = v10[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v12 + 16);
  if (!v46)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a1;
  }
  v47 = v12;
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v13 = *(_QWORD *)(*(_QWORD *)(v60 + 40) + 16);
  swift_beginAccess();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 16);
  v50 = a1;
  if (v14)
  {
    v59[0] = *(_QWORD *)(v60 + 56);
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA6E42A0(v15);
    sub_1BA6E3FB8(v16);
    swift_release();
    v57 = v59[0];
  }
  else
  {
    v57 = sub_1BA6E3F38();
    swift_release();
  }
  swift_bridgeObjectRelease();
  v53 = v11;
  swift_bridgeObjectRelease();
  v54 = 0;
  v18 = 0;
  v58 = 0;
  v19 = v47;
  v45 = v47 + 32;
  while (1)
  {
    if (v18 >= *(_QWORD *)(v19 + 16))
      goto LABEL_33;
    v49 = v18;
    v20 = (uint64_t *)(v45 + 32 * v18);
    v21 = *v20;
    v22 = v20[1];
    v23 = v20[3];
    v51 = v20[2];
    v24 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    v52 = v23;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v59[0] = v21;
    v59[1] = v22;
    swift_bridgeObjectRetain();
    v25 = sub_1BA6E583C(v59);
    v48 = v22;
    swift_bridgeObjectRelease();
    v55 = *(_QWORD *)(v25 + 16);
    if (v55)
      break;
LABEL_12:
    v18 = v49 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v47;
    if (v18 == v46)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v50;
    }
  }
  v26 = 0;
  v27 = (uint64_t *)(v25 + 64);
  while (1)
  {
    if (v26 >= *(_QWORD *)(v25 + 16))
    {
      __break(1u);
LABEL_33:
      __break(1u);
    }
    v56 = *(v27 - 2);
    v28 = *(v27 - 1);
    v29 = *v27;
    v30 = *(_BYTE *)(v28 + 32);
    v31 = v30 & 0x3F;
    v32 = (unint64_t)((1 << v30) + 63) >> 6;
    v33 = 8 * v32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v31 > 0xD)
    {
      isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        v35 = (char *)swift_slowAlloc();
        bzero(v35, v33);
        v39 = v32;
        v40 = v58;
        v38 = sub_1BA6EB5B4((uint64_t)v35, v39, v28, v57);
        swift_bridgeObjectRelease();
        v58 = v40;
        if (v40)
          goto LABEL_34;
        MEMORY[0x1BCCE5C38](v35, -1, -1);
        goto LABEL_27;
      }
    }
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v35 = (char *)&v45 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v35, v33);
    v36 = v32;
    v37 = v58;
    v38 = sub_1BA6EB5B4((uint64_t)v35, v36, v28, v57);
    swift_bridgeObjectRelease();
    v58 = v37;
    if (v37)
      break;
LABEL_27:
    v41 = sub_1BA6EB330(v38, v28);
    swift_release();
    if ((v41 & 1) != 0 && (sub_1BA6EBD20(v57, v29) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = v56;
      if (v54 < v56)
      {
        swift_bridgeObjectRelease();
        v43 = swift_bridgeObjectRetain();
        v50 = v51;
        v53 = v43;
        v54 = v42;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    ++v26;
    v27 += 5;
    if (v55 == v26)
      goto LABEL_12;
  }
  v44 = v58;
  swift_willThrow();

  __break(1u);
LABEL_34:

  result = MEMORY[0x1BCCE5C38](v35, -1, -1);
  __break(1u);
  return result;
}

void sub_1BA733154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3F70)
  {
    v4 = type metadata accessor for FormatComputed(0, MEMORY[0x1E0DEA968], a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3F70);
  }
}

uint64_t sub_1BA7331A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((unint64_t)(a3 - 1) >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA7331E0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1BA7331EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v15 = a4;
    v16 = a5;
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v10 = *v9;
      swift_retain();
      swift_retain_n();
      sub_1BA710B08();
      v13 = (v12 & 1) != 0 ? v11(a2, a1) : ((uint64_t (*)(uint64_t))v11)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v13 & 1) != 0)
        break;
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a5 = v16;
        a4 = v15;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    result = swift_release();
    *v16 = v10;
  }
  else
  {
LABEL_9:
    *a5 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BA733340(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0)
    return sub_1BAA2AFD8(a1, a2, a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_1BA733370()
{
  unint64_t result;

  result = qword_1ED39BA78;
  if (!qword_1ED39BA78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityProperty, &type metadata for FormatAccessibilityProperty);
    atomic_store(result, (unint64_t *)&qword_1ED39BA78);
  }
  return result;
}

uint64_t sub_1BA7333B4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_1BA7333CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA7333D8(a1, a2, *(uint64_t (**)(uint64_t, double))(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(uint64_t, char *))(v2 + 32));
}

uint64_t sub_1BA7333D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, double), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v18;

  sub_1BA75C00C();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3(a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if ((v15 & 1) != 0)
    v16 = a5(a1, v14);
  else
    v16 = 0;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

void sub_1BA7334B8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _QWORD *v18;
  char *v19;
  uint64_t *v20;
  void (*v21)(_QWORD *@<X8>);
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;

  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(v2 + 129) >= 5u)
  {
    *a2 = 0xF000000000000007;
  }
  else
  {
    v25 = a2;
    v10 = *(_QWORD *)(a1 + 16);
    v11 = objc_msgSend(*(id *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 112)), sel_string, v7);
    v12 = sub_1BB8729A0();
    v14 = v13;

    v15 = v10 + *(_QWORD *)(*(_QWORD *)v10 + 104);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v15, v5);
    v16 = *(_QWORD *)(v10 + 16);
    v17 = *(unsigned __int8 *)(v10 + 24);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = sub_1BAA6A15C;
    v18[3] = 0;
    v18[4] = sub_1BAA6A1FC;
    v18[5] = v10;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B3F70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatComputed);
    v19 = (char *)swift_allocObject();
    *((_QWORD *)v19 + 4) = v12;
    *((_QWORD *)v19 + 5) = v14;
    v20 = (uint64_t *)&v19[*(_QWORD *)(*(_QWORD *)v19 + 112)];
    *v20 = v12;
    v20[1] = v14;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v19[*(_QWORD *)(*(_QWORD *)v19 + 104)], v9, v5);
    *((_QWORD *)v19 + 2) = v16;
    v19[24] = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17 == 255)
    {
      swift_release();
      v21 = 0;
      v18 = 0;
    }
    else
    {
      v21 = sub_1BAA6A24C;
    }
    v22 = v25;
    v23 = swift_allocObject();
    v24 = &v19[*(_QWORD *)(*(_QWORD *)v19 + 120)];
    *(_QWORD *)v24 = v21;
    *((_QWORD *)v24 + 1) = v18;
    *(_QWORD *)(v23 + 16) = v19;
    *v22 = v23;
    sub_1BA7305B8(v16, v17);
  }
}

uint64_t sub_1BA7336E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((unint64_t)(a3 - 1) >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA733718(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0)
    return sub_1BAA2AFD8(a1, a2, a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1BA733748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30[2];
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v34 = a7;
  v37 = a6;
  v30[0] = a4;
  v30[1] = a5;
  v10 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v10);
  v31 = (uint64_t *)((char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatOption();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options);
  v20 = a3;
  FormatOptionCollection.subscript.getter(a2, a3, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA856968);
    v21 = (uint64_t)v31;
    *v31 = a2;
    *(_QWORD *)(v21 + 8) = v20;
    swift_storeEnumTagMultiPayload();
    v22 = *(_BYTE *)(v33 + 48);
    sub_1BA689E84();
    v23 = (void *)swift_allocError();
    sub_1BA4C2DD8(v21, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if ((v22 & 1) != 0)
    {
      v35 = 0x3A676E697373694DLL;
      v36 = 0xEB000000007B7B20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v25);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v26);
      v19 = v35;
      sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return v19;
    }
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA8569CC((uint64_t)v14, (uint64_t)v18);
    swift_retain();
    v19 = v33;
    v27 = v32;
    sub_1BA711554();
    swift_release();
    if (!v27)
    {
      sub_1BA7469BC(v35, a2, a3, v30[0], v19);
      v19 = v28;
      swift_release();
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_1BA733A84(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t result;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v8 = v7;
  swift_beginAccess();
  v15 = *(_QWORD *)(a2[11] + 16);
  result = v15 + 3;
  if (__OFADD__(v15, 3))
  {
    __break(1u);
  }
  else
  {
    v31 = a7;
    sub_1BB86D6A8();
    swift_getKeyPath();
    v35 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0DB64C8];
    v33 = a3;
    v34 = a4;
    v17 = MEMORY[0x1E0DB5DD0];
    sub_1BA735194(0, (unint64_t *)&qword_1ED3C4578, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
    sub_1BA735154(&qword_1ED3C4570, (unint64_t *)&qword_1ED3C4578, (uint64_t (*)(uint64_t, _QWORD *))v17, MEMORY[0x1E0DB5DD8]);
    sub_1BA50AD30((unint64_t *)&qword_1ED3B05F8, 255, (uint64_t (*)(uint64_t))sub_1BA62E870, MEMORY[0x1E0DB5A60]);
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    v39 = a1;
    swift_getKeyPath();
    v18 = *(_QWORD *)(a5 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_beginAccess();
    v20 = a2[2];
    v19 = a2[3];
    v21 = *(_QWORD *)(v18 + 40);
    if (v21)
    {
      v33 = *(_QWORD *)(v18 + 32);
      v34 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v22);
      sub_1BB872AFC(v23);
      swift_bridgeObjectRelease();
      v20 = v33;
      v19 = v34;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v35 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0DB64C8];
    v33 = v20;
    v34 = v19;
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    v39 = a1;
    swift_getKeyPath();
    v25 = a2[2];
    v24 = a2[3];
    v35 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0DB64C8];
    v33 = v25;
    v34 = v24;
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    v26 = a2[11];
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain();
      for (i = 32; ; i += 40)
      {
        v29 = *(_OWORD *)(v26 + i);
        v30 = *(_OWORD *)(v26 + i + 16);
        v38 = *(_QWORD *)(v26 + i + 32);
        v37[0] = v29;
        v37[1] = v30;
        sub_1BA7086BC((uint64_t)v37);
        sub_1BA733DB8(a1, a6, v31);
        if (v8)
          break;
        sub_1BA708680((uint64_t)v37);
        if (!--v27)
          return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return sub_1BA708680((uint64_t)v37);
    }
  }
  return result;
}

uint64_t sub_1BA733DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v30[5];
  _BYTE v31[32];
  uint64_t v32;

  v4 = (uint64_t)v3;
  v30[4] = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(v6 + 24);
    sub_1BB68036C(v3, &v32);
    sub_1BB68036C(&v32, v30);
    sub_1BB57F380();
    v10 = v9;
    v12 = v11;
    sub_1BB68036C(&v32, v30);
    v13 = sub_1BB57DC18();
    v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    sub_1BA6A09F0(v4 + 8, (uint64_t)v31, &qword_1EF2CA060, (uint64_t)&type metadata for FormatSourceMap);
    sub_1BA6A09F0((uint64_t)v31, (uint64_t)v30, &qword_1EF2CA060, (uint64_t)&type metadata for FormatSourceMap);
    type metadata accessor for FormatNodeDebugRecord();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v31);
    swift_bridgeObjectRetain();
    sub_1BA739BF4((uint64_t)v31);
    swift_retain();
    swift_retain();
    v15 = sub_1BAF200B0(v10, v12, v13, v14, v30);
    if (v15)
    {
      swift_beginAccess();
      v16 = swift_retain();
      MEMORY[0x1BCCE36AC](v16);
      if (*(_QWORD *)((*(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_endAccess();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA73D624((uint64_t)v31);
  }
  else
  {
    v15 = 0;
  }
  v17 = *(_QWORD *)(a3 + 80);
  v18 = *(_QWORD *)(v4 + 8);
  v19 = *(_QWORD *)(v4 + 16);
  v21 = *(_QWORD *)(v4 + 24);
  v20 = *(_QWORD *)(v4 + 32);
  if (v17)
  {
    if (v19)
    {
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a2;
      *(_QWORD *)(v22 + 24) = v18;
      *(_QWORD *)(v22 + 32) = v19;
      *(_QWORD *)(v22 + 40) = v21;
      *(_QWORD *)(v22 + 48) = v20;
      v23 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v22 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v22 + 72) = v23;
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v22 + 96) = v17;
      *(_QWORD *)(v22 + 104) = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BA7086BC(v4);
      sub_1BA735094();
      sub_1BA735138();
      swift_retain();
      sub_1BB86D480();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_14;
    }
  }
  else if (v19)
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = a2;
    *(_QWORD *)(v24 + 24) = v18;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v21;
    *(_QWORD *)(v24 + 48) = v20;
    v25 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)v4;
    *(_OWORD *)(v24 + 72) = v25;
    *(_QWORD *)(v24 + 88) = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(v24 + 96) = a3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1BA7086BC(v4);
    sub_1BA735094();
    sub_1BA735138();
    swift_retain();
    sub_1BB86D480();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)v4;
  swift_retain();
  sub_1BA734190(a1, a2, a3, v26);
LABEL_14:
  result = swift_release();
  if (v15)
  {
    if (*(_BYTE *)(v15 + 96) == 1)
    {
      *(CFTimeInterval *)(v15 + 88) = CACurrentMediaTime();
      *(_BYTE *)(v15 + 96) = 0;
    }
    return swift_release();
  }
  return result;
}

void sub_1BA734190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7341E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  sub_1BA7179E4(v2, v1, v0, (uint64_t (*)(_QWORD, double))sub_1BA735094, sub_1BA735138, (uint64_t)sub_1BA5729AC, MEMORY[0x1E0DB5A98]);
  return swift_release();
}

void sub_1BA735094()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4578)
  {
    type metadata accessor for FormatLayoutAttributes();
    sub_1BA7399D0();
    sub_1BA50AD30(&qword_1ED3C9F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v0 = sub_1BB86D6B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4578);
  }
}

uint64_t sub_1BA735138()
{
  return sub_1BA4A2870(&qword_1ED3C4570, (uint64_t (*)(uint64_t))sub_1BA735094, MEMORY[0x1E0DB5DD8]);
}

uint64_t sub_1BA735154(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA735194(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA735194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for FormatLayout;
    v8[1] = type metadata accessor for FormatLayoutAttributes();
    v8[2] = sub_1BA7399D0();
    v8[3] = sub_1BA50AD30(&qword_1ED3C9F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t FormatHBoxNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA702174(a1, a2);
}

uint64_t type metadata accessor for FormatCompilerOptions(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3C9508);
}

uint64_t _s8NewsFeed0B8BannerAdV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA7353AC((uint64_t)a1, (uint64_t)&v14 - v8);
    sub_1BA7353AC((uint64_t)a2, (uint64_t)v6);
  }
  else
  {
    v11 = sub_1BB874398();
    sub_1BA7353AC((uint64_t)a1, (uint64_t)v9);
    sub_1BA7353AC((uint64_t)a2, (uint64_t)v6);
    v12 = 0;
    if ((v11 & 1) == 0)
      goto LABEL_9;
  }
  v12 = MEMORY[0x1BCCE2AB8](&v9[*(int *)(v4 + 20)], &v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1BA735370((uint64_t)v6);
  sub_1BA735370((uint64_t)v9);
  return v12 & 1;
}

uint64_t sub_1BA735370(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedBannerAd();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA7353AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedBannerAd();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeWithCopy for FeedBannerAd(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB8721C0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  if (v18 >= 0x11)
  {
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t FormatVOverlayNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA7354D8(a1, a2);
}

uint64_t sub_1BA7354D8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  swift_beginAccess();
  v14 = v2[11];
  sub_1BA71CA6C(v14);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v14);
  if (!v3)
  {
    swift_beginAccess();
    v7 = v2[12];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    result = swift_beginAccess();
    v11 = v2[13];
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      v13 = v11 + 64;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(a1, a2);
        v13 += 40;
        swift_bridgeObjectRelease();
        swift_release();
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatDecoration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v14 = (uint64_t *)(a2 + 96);
  v9 = *(_BYTE *)(a2 + 106);
  v10 = *(unsigned __int16 *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 255)
  {
    *(_QWORD *)(a1 + 96) = *v14;
    *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)v14 + 7);
  }
  else
  {
    v11 = v10 & 0xFF00FFFF | (v9 << 16);
    v12 = *v14;
    sub_1BA77A170(*v14, v11, SBYTE2(v11), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
    *(_QWORD *)(a1 + 96) = v12;
    *(_WORD *)(a1 + 104) = v11;
    *(_BYTE *)(a1 + 106) = BYTE2(v11);
  }
  return a1;
}

uint64_t sub_1BA7357FC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(void), uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  _OWORD *v55;
  uint64_t KeyPath;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, _QWORD, uint64_t);
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t (*v75)(_QWORD);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  uint64_t (*v83)(void);
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  _OWORD *v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;

  v84 = a8;
  v83 = a7;
  v82 = a6;
  v81 = a5;
  v90 = a4;
  v11 = v10;
  v12 = v9;
  v91 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v86 = v15;
  v85 = *(uint64_t **)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v80 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v77 - v18;
  v88 = (_QWORD *)sub_1BB86DA38();
  v87 = (_OWORD *)*(v88 - 1);
  MEMORY[0x1E0C80A78](v88);
  v89 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = a1;
  swift_beginAccess();
  v21 = v12[2];
  v22 = v12[3];
  swift_bridgeObjectRetain();
  v92 = sub_1BA717D44(v21, v22);
  v93 = v23;
  swift_bridgeObjectRelease();
  v24 = v12[2];
  v25 = v12[3];
  swift_bridgeObjectRetain();
  sub_1BA709F80(v24, v25);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v26 = swift_bridgeObjectRetain();
  sub_1BA707E14(v26, 0);
  swift_release();
  swift_bridgeObjectRelease();
  v27 = sub_1BA70A468(0, 0);
  swift_release();
  v28 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  v29 = (uint64_t *)(*(_QWORD *)(v27 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v30 = *v29;
  v31 = v29[1];
  v32 = v12[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1BB66B870(v32, v27, v30, v31, (void (*)(uint64_t))sub_1BA9EEB88, sub_1BB66EE24, (uint64_t (*)(uint64_t, uint64_t))sub_1BB67E364, (void (*)(_QWORD))type metadata accessor for FormatGroupNodeStyle, (void (*)(uint64_t))sub_1BA9EDC24);
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v78 = v19;
    v79 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v35 = (*((uint64_t (**)(char *, _QWORD, _QWORD *))v87 + 13))(v89, *MEMORY[0x1E0DB6208], v88);
    v88 = &v77;
    MEMORY[0x1E0C80A78](v35);
    v36 = v92;
    *(&v77 - 6) = (uint64_t)v12;
    *(&v77 - 5) = v36;
    v37 = v93;
    v73 = v93;
    v74 = a2;
    v75 = (uint64_t (*)(_QWORD))v27;
    v76 = v91;
    sub_1BA71AD78(0, &qword_1ED3C45B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
    swift_allocObject();
    v90 = sub_1BB86DB4C();
    v89 = (char *)a2;
    v38 = (uint64_t *)(*(_QWORD *)(v27 + v28) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v39 = *v38;
    v40 = v38[1];
    v41 = v12[15];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = sub_1BA6E3AA0(v41, v27, v39, v40, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v88 = (_QWORD *)v42;
    if (v42)
    {
      swift_beginAccess();
      v43 = *(_QWORD *)(v42 + 72);
      if (v43)
      {
        if (*(_QWORD *)(v43 + 16))
        {
          v44 = v88;
          v45 = v88[7];
          v87 = (_OWORD *)v88[6];
          v46 = *((unsigned __int8 *)v88 + 64);
          swift_retain();
          swift_retain();
          v47 = swift_bridgeObjectRetain();
          v48 = sub_1BB67D220(v47, v27);
          swift_bridgeObjectRelease();
          swift_release();
          v49 = v46;
          if (v46)
            v50 = 0;
          else
            v50 = v45;
          v77 = v50;
          if (v46)
            v51 = 0;
          else
            v51 = v87;
          type metadata accessor for FormatAnimationData();
          v52 = swift_allocObject();
          *(_QWORD *)(v52 + 16) = v44;
          *(_QWORD *)(v52 + 24) = v51;
          *(_QWORD *)(v52 + 32) = v77;
          *(_BYTE *)(v52 + 40) = v49;
          *(_QWORD *)(v52 + 48) = v48;
          v53 = *(_QWORD *)(v91 + 24);
          swift_beginAccess();
          swift_retain_n();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v94 = *(_QWORD *)(v53 + 32);
          *(_QWORD *)(v53 + 32) = 0x8000000000000000;
          sub_1BA81C03C(v52, v92, v37, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v53 + 32) = v94;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_release_n();
        }
      }
    }
    v55 = (_OWORD *)swift_allocObject();
    v55[1] = 0u;
    v55[2] = 0u;
    v55[3] = 0u;
    v55[4] = 0u;
    v55[5] = 0u;
    KeyPath = swift_getKeyPath();
    swift_beginAccess();
    v94 = v12[4];
    v57 = v94;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v57);
    sub_1BA717E88();
    v77 = KeyPath;
    v87 = v55;
    sub_1BA719718(v57);
    swift_beginAccess();
    swift_retain();
    v58 = swift_bridgeObjectRetain();
    sub_1BB67D4D4(v58, v27);
    swift_bridgeObjectRelease();
    swift_release();
    v59 = (_QWORD *)swift_allocObject();
    v59[2] = v87;
    v59[3] = v12;
    v60 = v79;
    v59[4] = v27;
    v59[5] = v60;
    v61 = v82(0);
    v62 = v83();
    v83 = (uint64_t (*)(void))v27;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v81 = v62;
    v76 = v62;
    v82 = (uint64_t (*)(_QWORD))v61;
    v75 = (uint64_t (*)(_QWORD))v61;
    v63 = v92;
    v64 = v78;
    sub_1BB86D51C();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v65 = v85;
    v66 = (void (*)(char *, uint64_t))v85[1];
    v67 = v86;
    v66(v64, v86);
    swift_beginAccess();
    v68 = v12[16];
    if (v68)
    {
      v84 = 0;
      v69 = (uint64_t (*)(char *, _QWORD, uint64_t))v65[13];
      v70 = v80;
      v71 = v69(v80, *MEMORY[0x1E0DB63C0], v67);
      v85 = &v77;
      MEMORY[0x1E0C80A78](v71);
      *(&v77 - 8) = v63;
      *(&v77 - 7) = v37;
      v72 = v89;
      *(&v77 - 6) = v68;
      *(&v77 - 5) = (uint64_t)v72;
      swift_retain();
      v76 = v81;
      v74 = &v77 - 10;
      v75 = v82;
      v73 = a9;
      sub_1BB86D468();
      v66(v70, v67);
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BA73635C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = v6 + a1;
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v7 + 15) & 0xFFFFFFFFFFFFF8);
  *v10 = *v9;
  v11 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 < 0xFFFFFFFF)
  {
    v14 = *(_OWORD *)v12;
    v15 = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)(v12 + 16);
    *(_OWORD *)(v11 + 32) = v15;
    *(_OWORD *)v11 = v14;
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
    *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
    *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void FormatImageNodeBinding.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD v14[4];
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v14[2] = a1;
  v14[3] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - v5;
  v7 = *(_QWORD *)v2;
  v8 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  v12 = *(unsigned __int8 *)(v2 + 40);
  if ((v12 & 0x1E) == 0xE)
  {
    v15 = *(_QWORD *)v2;
    v16 = v8;
    v17 = v9;
    v21 = 8;
    sub_1BA7147C0(v7, v8, v9, v10, v11, v12);
    v13 = sub_1BB6B84D4(&v15, &v21);
    if (v3)
      return;
    v14[1] = v13;
    sub_1BB3757A0(v7, v8, v13, 1, (uint64_t)v6);
    sub_1BA6AA068((uint64_t)v6, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
    swift_bridgeObjectRelease();
  }
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  FormatImageNodeBinding.bindChildren(binder:context:)();
}

uint64_t sub_1BA7365C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA7365D0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA7365D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  char v6;

  if (*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1BA6E35A8(a2, a3);
    v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1BA73663C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;

  v28 = a7;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for FormatViewData(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5E01A4(a1, (uint64_t)v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v19 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v15, 1, v19) == 1)
  {
    sub_1BA5C699C((uint64_t)v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 10)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v18, type metadata accessor for FormatViewData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 1)
  {
    v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA572014(0, &qword_1ED3C6D98, (void (*)(uint64_t))type metadata accessor for FormatViewData, (unint64_t *)&unk_1ED3CEFA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
    v22 = v21;
    v23 = swift_allocBox();
    v25 = (_QWORD *)(v24 + *(int *)(v22 + 48));
    sub_1BA5193C4((uint64_t)v18, v24, type metadata accessor for FormatViewData);
    *v25 = v20;
    v25[1] = a3;
    v25[2] = a4;
    v25[3] = a5;
    v25[4] = a6;
    *v28 = v23 | 0x1000000000000000;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatViewData);
  __break(1u);
  return result;
}

uint64_t FormatViewNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v4 = v2;
  v21 = v2[4];
  sub_1BA71CA6C(v21);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v21);
  sub_1BA719718(v21);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7])
    FormatViewNodeStyle.bind(binder:context:)(a1, a2);
  v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 88);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (uint64_t *)(v14 + 72);
      do
      {
        v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  result = swift_beginAccess();
  v18 = v4[10];
  if (v18 >> 62 == 1)
  {
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 24);
    sub_1BA67D3F4(v18);
    sub_1BA67D3F4(v19);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v19, v20);
    sub_1BA6EEDB4(v19);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v18);
  }
  return result;
}

uint64_t FormatViewNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v2;
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BA736F80(a1, a2, v7);
  if (v3)
    return swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v4 + 56);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      v11 = (_BYTE *)(v9 + 40);
      do
      {
        if ((*v11 & 1) == 0)
        {
          v12 = *((_QWORD *)v11 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v12, 0);
          sub_1BA72C46C(v12, 0);
        }
        v11 += 16;
        --v10;
      }
      while (v10);
      result = swift_bridgeObjectRelease_n();
    }
  }
  v13 = *(_QWORD *)(v4 + 64);
  if ((~v13 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)();
    result = sub_1BA6E6CD8(v13);
  }
  v14 = *(_QWORD *)(v4 + 72);
  if (v14)
    result = sub_1BAB73D7C(a1, a2, v14);
  v15 = *(unsigned __int8 *)(v4 + 184);
  if (v15 != 254)
  {
    v25 = *(_QWORD *)(v4 + 104);
    v26 = *(_QWORD *)(v4 + 112);
    v16 = *(_QWORD *)(v4 + 136);
    v27 = *(_QWORD *)(v4 + 120);
    v28 = *(_QWORD *)(v4 + 144);
    v17 = *(_QWORD *)(v4 + 160);
    v29 = *(_QWORD *)(v4 + 152);
    v30 = *(_QWORD *)(v4 + 128);
    v19 = *(_QWORD *)(v4 + 168);
    v18 = *(_QWORD *)(v4 + 176);
    swift_retain();
    FormatColor.bind(binder:context:)();
    switch(v15)
    {
      case 0:
        v23 = 0;
        goto LABEL_19;
      case 1:
        v20 = v28;
        v24 = v17;
        v21 = v29;
        sub_1BABD5EE8(a1, a2);
        v22 = 1;
        goto LABEL_25;
      case 2:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        return sub_1BA6E8A78(v25, v26, v27, v30, v16, v28, v29, v17, v19, v18, 2u);
      case 3:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        return sub_1BA6E8A78(v25, v26, v27, v30, v16, v28, v29, v17, v19, v18, 3u);
      case 4:
        v20 = v28;
        v24 = v17;
        v21 = v29;
        sub_1BABD5EE8(a1, a2);
        v22 = 4;
LABEL_25:
        result = sub_1BA6E8A78(v25, v26, v27, v30, v16, v20, v21, v24, v19, v18, v22);
        break;
      case 5:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        result = sub_1BA6E8A78(v25, v26, v27, v30, v16, v28, v29, v17, v19, v18, 5u);
        break;
      default:
        v23 = -1;
LABEL_19:
        result = sub_1BA6E8A78(v25, v26, v27, v30, v16, v28, v29, v17, v19, v18, v23);
        break;
    }
  }
  return result;
}

uint64_t sub_1BA736F80(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  unsigned __int8 v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t i;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[25];
  uint64_t v120;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return result;
  v5 = result;
  v6 = a3 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v104 = v5;
  v99 = v3;
  for (i = v6; ; v6 = i)
  {
    v103 = v7;
    v8 = (__int128 *)(v6 + 160 * v7);
    v9 = v8[6];
    v10 = v8[8];
    v118 = v8[7];
    *(_OWORD *)v119 = v10;
    *(_OWORD *)&v119[9] = *(__int128 *)((char *)v8 + 137);
    v11 = v8[3];
    v113 = v8[2];
    v114 = v11;
    v12 = v8[5];
    v115 = v8[4];
    v116 = v12;
    v117 = v9;
    v13 = v8[1];
    v111 = *v8;
    v112 = v13;
    v14 = v13;
    if ((~(_QWORD)v13 & 0xF000000000000007) != 0)
      break;
    sub_1BAC68F14((uint64_t)&v111);
    v15 = *((_QWORD *)&v112 + 1);
    if (*((_QWORD *)&v112 + 1))
      goto LABEL_8;
LABEL_13:
    v21 = v119[8];
    if (v119[8] != 254)
    {
      v22 = v119[8];
      v23 = *((_QWORD *)&v114 + 1);
      v24 = v115;
      v100 = v116;
      v101 = v117;
      v25 = *((_QWORD *)&v118 + 1);
      v106 = v118;
      v107 = *((_QWORD *)&v117 + 1);
      v26 = *(_QWORD *)v119;
      v27 = *((_QWORD *)&v116 + 1);
      *(_QWORD *)&v108 = *((_QWORD *)&v116 + 1);
      swift_retain_n();
      v28 = v120;
      FormatColor.bind(binder:context:)();
      v120 = v28;
      if (v28)
      {
        sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v27, v101, v107, v106, v25, v26, v21);
        sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v27, v101, v107, v106, v25, v26, v22);
        goto LABEL_111;
      }
      v98 = v25;
      sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v27, v101, v107, v106, v25, v26, v21);
      v29 = v106;
      switch(v22)
      {
        case 0:
          v94 = 0;
          goto LABEL_18;
        case 1:
          v30 = v26;
          v95 = v24;
          v96 = v27;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v31 = *((_QWORD *)&v109 + 1);
            v32 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v33 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8))(v104, a2, v31, v32);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v34 = v98;
            v120 = v33;
            if (v33)
              goto LABEL_109;
            v29 = v106;
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v34 = v98;
          }
          if (swift_dynamicCast())
          {
            v49 = *((_QWORD *)&v109 + 1);
            v50 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v51 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8))(v104, a2, v49, v50);
            v120 = v51;
            if (v51)
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
LABEL_109:
              v93 = 1;
LABEL_110:
              sub_1BA6E8A78(v23, v95, *((uint64_t *)&v24 + 1), v100, v96, v101, v107, v106, v34, v30, v93);
LABEL_111:
              sub_1BAC68FF0((uint64_t)&v111);
              return swift_bridgeObjectRelease();
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v52 = 1;
LABEL_50:
            sub_1BA6E8A78(v23, v95, *((uint64_t *)&v24 + 1), v100, v96, v101, v107, v106, v34, v30, v52);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v65 = 1;
LABEL_65:
            sub_1BA6E8A78(v23, v95, *((uint64_t *)&v24 + 1), v100, v96, v101, v24, v29, v34, v30, v65);
          }
          v3 = v99;
          break;
        case 2:
          v35 = v26;
          v97 = v27;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v36 = *((_QWORD *)&v109 + 1);
            v37 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v38 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8))(v104, a2, v36, v37);
            v39 = v98;
            v120 = v38;
            if (v38)
              goto LABEL_103;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v39 = v98;
          }
          if (swift_dynamicCast())
          {
            v53 = *((_QWORD *)&v109 + 1);
            v54 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v55 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8))(v104, a2, v53, v54);
            v120 = v55;
            if (v55)
              goto LABEL_103;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          v66 = v106;
          if (swift_dynamicCast())
          {
            v67 = *((_QWORD *)&v109 + 1);
            v68 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v69 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8))(v104, a2, v67, v68);
            v120 = v69;
            if (v69)
              goto LABEL_103;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v66 = v106;
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          if (!swift_dynamicCast())
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v87 = 2;
            goto LABEL_89;
          }
          v77 = *((_QWORD *)&v109 + 1);
          v78 = v110;
          __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
          v79 = v120;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 8))(v104, a2, v77, v78);
          v120 = v79;
          if (!v79)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v80 = 2;
            goto LABEL_85;
          }
LABEL_103:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          v92 = 2;
          goto LABEL_106;
        case 3:
          v35 = v26;
          v97 = v27;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v40 = *((_QWORD *)&v109 + 1);
            v41 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v42 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v104, a2, v40, v41);
            v39 = v98;
            v120 = v42;
            if (v42)
              goto LABEL_104;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v39 = v98;
          }
          if (swift_dynamicCast())
          {
            v56 = *((_QWORD *)&v109 + 1);
            v57 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v58 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8))(v104, a2, v56, v57);
            v120 = v58;
            if (v58)
              goto LABEL_104;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          v66 = v106;
          if (swift_dynamicCast())
          {
            v70 = *((_QWORD *)&v109 + 1);
            v71 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v72 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8))(v104, a2, v70, v71);
            v120 = v72;
            if (v72)
              goto LABEL_104;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v66 = v106;
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          if (!swift_dynamicCast())
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v87 = 3;
            goto LABEL_89;
          }
          v81 = *((_QWORD *)&v109 + 1);
          v82 = v110;
          __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
          v83 = v120;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 8))(v104, a2, v81, v82);
          v120 = v83;
          if (!v83)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v80 = 3;
            goto LABEL_85;
          }
LABEL_104:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          v92 = 3;
          goto LABEL_106;
        case 4:
          v30 = v26;
          v95 = v24;
          v96 = v27;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v43 = *((_QWORD *)&v109 + 1);
            v44 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v45 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8))(v104, a2, v43, v44);
            v34 = v98;
            v120 = v45;
            if (v45)
              goto LABEL_107;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v29 = v106;
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v34 = v98;
          }
          if (!swift_dynamicCast())
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v65 = 4;
            goto LABEL_65;
          }
          v59 = *((_QWORD *)&v109 + 1);
          v60 = v110;
          __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
          v61 = v120;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8))(v104, a2, v59, v60);
          v120 = v61;
          if (v61)
          {
LABEL_107:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v93 = 4;
            goto LABEL_110;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          v52 = 4;
          goto LABEL_50;
        case 5:
          v35 = v26;
          v97 = v27;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v46 = *((_QWORD *)&v109 + 1);
            v47 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v48 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8))(v104, a2, v46, v47);
            v39 = v98;
            v120 = v48;
            if (v48)
              goto LABEL_105;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v39 = v98;
          }
          if (swift_dynamicCast())
          {
            v62 = *((_QWORD *)&v109 + 1);
            v63 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v64 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8))(v104, a2, v62, v63);
            v120 = v64;
            if (v64)
              goto LABEL_105;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          v66 = v106;
          if (swift_dynamicCast())
          {
            v74 = *((_QWORD *)&v109 + 1);
            v75 = v110;
            __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
            v76 = v120;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8))(v104, a2, v74, v75);
            v120 = v76;
            if (v76)
              goto LABEL_105;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v66 = v106;
          }
          else
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          if (!swift_dynamicCast())
          {
            v110 = 0;
            v108 = 0u;
            v109 = 0u;
            sub_1BA65DB80((uint64_t)&v108, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v87 = 5;
LABEL_89:
            sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v97, v101, v107, v66, v39, v35, v87);
            goto LABEL_90;
          }
          v84 = *((_QWORD *)&v109 + 1);
          v85 = v110;
          __swift_project_boxed_opaque_existential_1(&v108, *((uint64_t *)&v109 + 1));
          v86 = v120;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 8))(v104, a2, v84, v85);
          v120 = v86;
          if (!v86)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
            v80 = 5;
LABEL_85:
            sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v97, v101, v107, v106, v39, v35, v80);
LABEL_90:
            v3 = v99;
            v73 = *(_QWORD *)&v119[16];
            if (!*(_QWORD *)&v119[16])
              goto LABEL_98;
            goto LABEL_91;
          }
LABEL_105:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
          v92 = 5;
LABEL_106:
          sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v97, v101, v107, v106, v39, v35, v92);
          goto LABEL_111;
        default:
          v94 = -1;
LABEL_18:
          sub_1BA6E8A78(v23, v24, *((uint64_t *)&v24 + 1), v100, v27, v101, v107, v106, v98, v26, v94);
          goto LABEL_90;
      }
    }
    v73 = *(_QWORD *)&v119[16];
    if (*(_QWORD *)&v119[16])
    {
LABEL_91:
      v88 = *(_QWORD *)(v73 + 16);
      if (!v88)
        goto LABEL_98;
      swift_bridgeObjectRetain_n();
      v89 = (_BYTE *)(v73 + 40);
      while (1)
      {
        if ((*v89 & 1) == 0)
        {
          *(_QWORD *)&v108 = *((_QWORD *)v89 - 1);
          v90 = v108;
          swift_retain_n();
          v91 = v120;
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v90, 0);
          sub_1BA72C46C(v90, 0);
          v120 = v91;
          if (v91)
            break;
        }
        v89 += 16;
        if (!--v88)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_98;
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_111;
    }
LABEL_98:
    ++v7;
    sub_1BAC68FF0((uint64_t)&v111);
    if (v103 + 1 == v3)
      return swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v108 = v13;
  sub_1BAC68F14((uint64_t)&v111);
  sub_1BA6E6C68(v14);
  v16 = v120;
  FormatBackground.bind(binder:context:)();
  v120 = v16;
  if (v16)
  {
    sub_1BA6E6CD8(v14);
    goto LABEL_111;
  }
  sub_1BA6E6CD8(v14);
  v15 = *((_QWORD *)&v112 + 1);
  if (!*((_QWORD *)&v112 + 1))
    goto LABEL_13;
LABEL_8:
  v17 = *(_QWORD *)(v15 + 16);
  if (!v17)
    goto LABEL_13;
  v18 = swift_bridgeObjectRetain() + 64;
  while (1)
  {
    v105 = v17;
    v19 = *(_QWORD *)(v18 - 16);
    *(_QWORD *)&v108 = *(_QWORD *)(v18 - 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v20 = v120;
    FormatColor.bind(binder:context:)();
    if (v20)
      break;
    swift_release();
    *(_QWORD *)&v108 = v19;
    swift_retain();
    FormatFloat.bind(binder:context:)();
    v120 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v18 += 40;
    v17 = v105 - 1;
    if (v105 == 1)
    {
      swift_bridgeObjectRelease();
      v3 = v99;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_1BAC68FF0((uint64_t)&v111);
  result = swift_bridgeObjectRelease();
  v120 = v20;
  return result;
}

uint64_t FormatAccessibilityNode.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;

  v2 = v0;
  swift_beginAccess();
  v14 = *(_QWORD *)(v0 + 32);
  v15 = *(_BYTE *)(v0 + 40);
  sub_1BA72F4F8(v14, v15);
  FormatAccessibilityProperty.bind(binder:context:)();
  result = sub_1BA72E4D0(v14, v15);
  if (!v1)
  {
    result = swift_beginAccess();
    v4 = *(unsigned __int16 *)(v0 + 72);
    if (v4 >> 9 <= 0x7E)
    {
      v6 = *(_QWORD *)(v0 + 48);
      v5 = *(_QWORD *)(v0 + 56);
      v7 = *(_QWORD *)(v2 + 64);
      if ((v4 & 0x8000) != 0)
      {
        sub_1BAC65170(v6, v5, v7, v4, BYTE1(v4) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
        FormatCommandBinding.bind(binder:context:)();
        v11 = v6;
        v12 = v5;
        v13 = v7;
      }
      else
      {
        v8 = *(_QWORD *)(v6 + 16);
        if (!v8)
          return result;
        sub_1BA72FFC4(v6, v5, v7, v4);
        v16 = v7;
        sub_1BA7AAE84(v6, v5, v7, v4);
        v9 = (_BYTE *)(v6 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            v10 = *((_QWORD *)v9 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v10, 0);
            sub_1BA72C46C(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        sub_1BA72E4BC(v6, v5, v16, v4);
        v11 = v6;
        v12 = v5;
        v13 = v16;
      }
      return sub_1BA72E4BC(v11, v12, v13, v4);
    }
  }
  return result;
}

void FormatAccessibilityProperty.bind(binder:context:)()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 8))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

unint64_t sub_1BA7382C8()
{
  char v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;

  if (v1 >> 62)
  {
    if (v1 >> 62 != 1)
      return result;
    v4 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)(v1 + 24);
    v6 = *(_QWORD *)(v1 + 32);
    sub_1BA72F4F8(v1, v0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAB6EED4(v3, v2, v4, v5, v6);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_retain();
    FormatTextNodeBinding.bind(binder:context:)(v3, v2);
  }
  return sub_1BA72E4D0(v1, v0);
}

void FormatTextNodeBinding.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;

  v22 = a1;
  v23 = a2;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v4);
  v7 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_BYTE *)(v2 + 48);
  v13 = *(_BYTE *)(v2 + 49);
  if (((((v12 & 8) != 0) | (2 * v13)) - 3) <= 1u)
  {
    v21 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = v7;
    v25 = v6;
    v26 = v9;
    v32 = 5;
    v14 = v10;
    sub_1BA713CDC(v7, v6, v9, v8, v10, v11, v12, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1BB6B84D4(&v24, &v32);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v18 = v11;
    v19 = v8;
    v20 = v14;
    v16 = v21;
    sub_1BB3757A0(v7, v6, v15, 1, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA98DC18(v16);
    v8 = v19;
    v10 = v20;
    v11 = v18;
  }
  v24 = v7;
  v25 = v6;
  v26 = v9;
  v27 = v8;
  v28 = v10;
  v29 = v11;
  v30 = v12;
  v31 = v13;
  FormatTextNodeBinding.bindChildren(binder:context:)(v22, v23);
}

void FormatTextNodeBinding.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(unsigned __int8 *)(v2 + 48);
  if (((1 << ((2 * (*(_BYTE *)(v2 + 49) & 0x7F)) | ((v5 & 8) != 0))) & 0x2FFB) == 0)
  {
    if (((2 * (*(_BYTE *)(v2 + 49) & 0x7F)) | (v5 >> 3) & 1) == 2)
    {
      v8 = v5 >> 4;
      if (((1 << v8) & 0x777) != 0)
        return;
      if (v8 == 3)
      {
        *(_QWORD *)&v11 = *(_QWORD *)v2;
        *((_QWORD *)&v11 + 1) = v3;
        LOWORD(v12) = v4;
        sub_1BAC64FF0();
        return;
      }
    }
    if ((v3 & 0x80) != 0)
    {
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if (swift_dynamicCast())
      {
        v9 = *((_QWORD *)&v12 + 1);
        v10 = v13;
        __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
      }
      else
      {
        v13 = 0;
        v11 = 0u;
        v12 = 0u;
        sub_1BA65DB80((uint64_t)&v11, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
    }
  }
}

void sub_1BA738818()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9E48)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9E48);
  }
}

uint64_t sub_1BA73886C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA716DE0(a1, a2, a3, a4);
}

void FeedItemLayoutAttributes.identifier.getter()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for PluginLayout.Context(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for EngagementBannerViewLayout.Context();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X11 }
}

uint64_t sub_1BA738A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HeadlineViewLayout.Context(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B5770);
}

uint64_t type metadata accessor for FeedBannerAdViewLayout.Context(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3B2088);
}

uint64_t type metadata accessor for EngagementBannerViewLayout.Context()
{
  uint64_t result;

  result = qword_1ED3BF4A0;
  if (!qword_1ED3BF4A0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA738D44(unint64_t result)
{
  if (result >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1BA738D54(unint64_t result)
{
  if (result >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t destroy for FormatPropertyDefinition(uint64_t a1)
{
  uint64_t result;
  unint64_t *v3;
  uint64_t v4;
  _UNKNOWN **v5;
  unint64_t *v6;
  unint64_t (*v7)();
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = &qword_1ED3CE138;
      v4 = MEMORY[0x1E0DEAFA0];
      v5 = &protocol witness table for Bool;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CE128;
      v7 = sub_1BA7FDD98;
      v8 = &type metadata for FormatColor;
      goto LABEL_28;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA74E2EC(0);
      v10 = v9;
      v11 = a1 + *(int *)(v9 + 52);
      v12 = sub_1BB86C8B0();
      goto LABEL_13;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
      goto LABEL_30;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CE100;
      v7 = sub_1BA841CF4;
      v8 = (ValueMetadata *)MEMORY[0x1E0DEF040];
      goto LABEL_28;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = &qword_1ED3CE140;
      v4 = MEMORY[0x1E0DEB418];
      v5 = &protocol witness table for Int;
      goto LABEL_11;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = &qword_1ED3CE130;
      v4 = MEMORY[0x1E0DEA968];
      v5 = &protocol witness table for String;
LABEL_11:
      sub_1BA50CAA8(0, v3, v4, (uint64_t)v5, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      goto LABEL_29;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA74E21C(0);
      v10 = v15;
      v11 = a1 + *(int *)(v15 + 52);
      v12 = sub_1BB86C67C();
LABEL_13:
      v16 = v12;
      v17 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v16);
      swift_bridgeObjectRelease();
      v13 = *(int *)(v10 + 64);
      goto LABEL_30;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CE110;
      v7 = sub_1BA7F6E24;
      v8 = &type metadata for FormatAsyncImageContent;
      goto LABEL_28;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CE108;
      v7 = sub_1BA829B34;
      v8 = &type metadata for FormatVideoNodeContent;
      goto LABEL_28;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CE120;
      v7 = sub_1BA8378F4;
      v8 = &type metadata for FormatFont;
      goto LABEL_28;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
        swift_release();
      swift_bridgeObjectRelease();
      v6 = &qword_1ED3CE118;
      v7 = sub_1BA8266B0;
      v8 = &type metadata for FormatVideoPlayerContent;
LABEL_28:
      sub_1BA4CDF6C(0, v6, (uint64_t (*)(void))v7, (uint64_t)v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_29:
      v13 = *(int *)(v14 + 64);
LABEL_30:
      v18 = a1 + v13;
      v19 = sub_1BB86E710();
      v20 = *(_QWORD *)(v19 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA739218(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t (*a8)(void), uint64_t (*a9)(uint64_t, uint64_t, unint64_t, unint64_t), uint64_t (*a10)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v10;

  v10 = a7 >> 4;
  if (v10 == 8)
    return a10(result, a2, a3, a4, a5, a6, a7 & 0xF);
  if (v10 == 3)
    return a9(result, a2, a3, a3 >> 8);
  if (!(a7 >> 4))
    return a8();
  return result;
}

unint64_t sub_1BA739250(unint64_t result)
{
  unint64_t v1;

  v1 = result >> 62;
  if (!(result >> 62) || (_DWORD)v1 == 2 || (_DWORD)v1 == 1)
    return swift_retain();
  return result;
}

void sub_1BA739274()
{
  uint64_t v1;

  v1 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

id sub_1BA7392F0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;

  sub_1BA70DDB0(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), v0);
  if (!v1)
  {
    v3 = objc_msgSend(*(id *)(v0 + 40), sel_sourceChannel);
    if (v3)
    {
      v1 = objc_msgSend(v3, sel_theme);
      swift_unknownObjectRelease();
    }
    else
    {
      v1 = 0;
    }
    sub_1BA717468(v0);
  }
  return v1;
}

double sub_1BA7394E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  double v24;
  double v25;
  _QWORD v26[2];

  v1 = sub_1BB86D93C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v26 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - v12;
  v14 = *v0;
  if (*v0)
  {
    if (v14 == 1)
    {
      sub_1BB86D750();
      sub_1BB86D930();
      v21 = round(v20 * 56.0 * 0.25);
      if (byte_1EF3D0978)
        v17 = v21;
      else
        v17 = 14.0;
      v13 = v10;
    }
    else if (v14 == 2)
    {
      sub_1BB86D750();
      sub_1BB86D930();
      v16 = round(v15 * 80.0 * 0.25);
      if (byte_1EF3D0978)
        v17 = v16;
      else
        v17 = 20.0;
      v13 = v7;
    }
    else
    {
      sub_1BB86DD80();
      v23 = v26[0];
      v17 = sub_1BA72BED4(v26[1], v14);
      swift_release();
      if (v23)
        return v17;
      sub_1BB86D750();
      sub_1BB86D930();
      v25 = round(v17 * 4.0 * v24 * 0.25);
      if (byte_1EF3D0978)
        v17 = v25;
      v13 = v4;
    }
  }
  else
  {
    sub_1BB86D750();
    sub_1BB86D930();
    v19 = round(v18 * 48.0 * 0.25);
    if (byte_1EF3D0978)
      v17 = v19;
    else
      v17 = 12.0;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
  return v17;
}

uint64_t sub_1BA739778@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(double *, _QWORD, uint64_t);
  id v27;
  void (*v28)(double *, uint64_t);
  void (*v29)(uint64_t *, uint64_t);
  _QWORD v31[2];

  v31[1] = a3;
  sub_1BA4CDF6C(0, &qword_1ED3B0660, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (double *)((char *)v31 - v10);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v31 - v19;
  if (a1)
  {
    objc_msgSend(a1, sel_bannerImageScale, v18);
    v22 = v21;
    objc_msgSend(a1, sel_bannerImageBaselineOffsetPercentage);
    v24 = v23;
  }
  else
  {
    v22 = 1.0;
    v24 = 0;
  }
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(double *)(v25 + 24) = a4;
  *v16 = v25;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB6370], v13);
  *v11 = v22;
  v26 = *(void (**)(double *, _QWORD, uint64_t))(v9 + 104);
  v26(v11, *MEMORY[0x1E0DB5C10], v8);
  sub_1BA7399D0();
  v27 = a2;
  sub_1BB86D948();
  v28 = *(void (**)(double *, uint64_t))(v9 + 8);
  v28(v11, v8);
  v29 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v29(v16, v13);
  *v11 = 0.0;
  *((_QWORD *)v11 + 1) = v24;
  v26(v11, *MEMORY[0x1E0DB5BA0], v8);
  sub_1BB86D948();
  v28(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v29)(v20, v13);
}

unint64_t sub_1BA7399D0()
{
  unint64_t result;

  result = qword_1ED3B36B0;
  if (!qword_1ED3B36B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayout, &type metadata for FormatLayout);
    atomic_store(result, (unint64_t *)&qword_1ED3B36B0);
  }
  return result;
}

uint64_t sub_1BA739A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3B9928, type metadata accessor for CGRect);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA739A68(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BB86D774();
  v10 = v9;
  v11 = sub_1BB86D738();
  type metadata accessor for FormatImageNodeContext();
  v12 = swift_allocObject();
  *(double *)(v12 + 16) = a3;
  *(double *)(v12 + 24) = a4;
  *(_QWORD *)(v12 + 32) = v10;
  *(_QWORD *)(v12 + 40) = v11;
  sub_1BA739B78(a6, v12 + 48);
  swift_unownedRetainStrong();
  sub_1BA739BF4(a6);
  swift_retain();
  swift_release();
  sub_1BA73B78C();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA739B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3C9EF0, (uint64_t)&type metadata for FormatImageRequestData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatImageNodeContext()
{
  return objc_opt_self();
}

uint64_t sub_1BA739BF4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BA739C1C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA739D68();
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA739DDC(v6, (uint64_t)&v15, (unint64_t *)&qword_1ED3B9210, qword_1ED3B0960);
    v7 = v15;
    v8 = v16;
    result = sub_1BA6E35A8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1BA4CECCC(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BA739D68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9AA0)
  {
    sub_1BA4D9CE8(255, qword_1ED3B0960);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9AA0);
  }
}

uint64_t sub_1BA739DDC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1BA739E2C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BA739E2C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA4D9CE8(255, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA739E90(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  char v53;

  v47 = 0.0;
  v48 = -2.68156159e154;
  if (a1)
    v16 = *(_BYTE *)(a1 + 128);
  else
    v16 = 4;
  LOBYTE(v51) = v16;
  sub_1BA4CF8F4(0, &qword_1ED3B4BC8);
  sub_1BB872A00();
  sub_1BB872AFC(v17);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v18);
  if (a1)
  {
    v19 = *(_QWORD *)(a1 + 96);
    v20 = *(_QWORD *)(a1 + 104);
    v21 = *(_BYTE *)(a1 + 112);
    sub_1BA6E6C54(v19, v20, v21);
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v21 = -2;
  }
  v51 = (id)v19;
  v52 = v20;
  v53 = v21;
  sub_1BA4CF8F4(0, &qword_1ED3B5560);
  sub_1BB872A00();
  sub_1BB872AFC(v22);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v23);
  v46 = a9;
  if (a1 && (swift_beginAccess(), *(_QWORD *)(a1 + 64)))
  {
    v24 = swift_bridgeObjectRetain();
    v25 = MEMORY[0x1BCCE36DC](v24, &type metadata for FormatImageAdjustment);
    v27 = v26;
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v27 = 0;
  }
  v51 = (id)v25;
  v52 = v27;
  sub_1BA4CF8F4(0, (unint64_t *)&qword_1ED3B9200);
  sub_1BB872A00();
  sub_1BB872AFC(v28);
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_beginAccess();
    v29 = *(_QWORD *)(a1 + 64);
    if (v29)
    {
      if (*(_QWORD *)(v29 + 16))
      {
        v51 = objc_msgSend(a2, sel_userInterfaceStyle);
        sub_1BB87420C();
      }
    }
  }
  sub_1BA739B78(a3, (uint64_t)&v51);
  v47 = 0.0;
  v48 = -2.68156159e154;
  sub_1BA739BF4(a3);
  sub_1BB873CB4();
  v49 = 0;
  v50 = 0xE000000000000000;
  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  sub_1BB86FA84();
  sub_1BB872AFC(v30);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v31);
  v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C0440, (uint64_t (*)(uint64_t))type metadata accessor for RenderingMode, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v33);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v34);
  v47 = a5;
  v48 = a6;
  type metadata accessor for CGSize(0);
  sub_1BB873E34();
  sub_1BB872AFC(v35);
  sub_1BB872FDC();
  sub_1BB872AFC(v36);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v37);
  sub_1BA739A14(v46, (uint64_t)&v47);
  sub_1BA4B07F0(0, &qword_1ED3B9928, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, v32);
  sub_1BB872A00();
  sub_1BB872AFC(v38);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v39);
  sub_1BB872AFC(v40);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v41);
  sub_1BB872AFC(v42);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v43);
  sub_1BB872AFC(v44);
  swift_bridgeObjectRelease();
  return v49;
}

void FormatAsyncImageContent.bind(binder:context:)()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA73A3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v3 - 72) = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 56);
  *(_QWORD *)(v3 - 192) = v4;
  *(_QWORD *)(v3 - 184) = v5;
  *(_QWORD *)(v3 - 176) = v6;
  *(_QWORD *)(v3 - 168) = v7;
  *(_QWORD *)(v3 - 160) = v8;
  *(_BYTE *)(v3 - 152) = v9;
  sub_1BA7147C0(v4, v5, v6, v7, v8, v9);
  FormatImageNodeBinding.bind(binder:context:)(v1, *(_QWORD *)(v3 - 72));
  return sub_1BA6EF82C(v4, v5, v6, v7, v8, v9);
}

_QWORD *sub_1BA73A8BC(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19[3];
  char v20;
  char v21;
  uint64_t v22;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_QWORD *)(a4 + 32);
  v9 = *(_BYTE *)(a4 + 41);
  v10 = *(unsigned __int8 *)(a4 + 40);
  v19[0] = *(_QWORD *)(a4 + 16);
  v19[1] = v7;
  v19[2] = v8;
  v20 = v10;
  v21 = v9;
  swift_retain();
  sub_1BB6415C4(v19[0], v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  v12 = v11;
  sub_1BB6415C4(v19[0], v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = (_QWORD *)swift_release();
  if (!v6)
  {
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BB641918(v14, a2);
    swift_bridgeObjectRelease();
    v22 = a6;
    swift_retain();
    a2(v19, &v22);
    swift_release();
    v16 = v19[0];
    sub_1BA4AD288(0, &qword_1ED3CAA68, (uint64_t)&type metadata for FormatImage, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue);
    result = (_QWORD *)swift_allocObject();
    result[3] = v15;
    result[4] = v16;
    result[2] = v12;
  }
  return result;
}

void sub_1BA73AA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD v9[50];

  sub_1BA4A3FB4(0, &qword_1ED3CBC00, (void (*)(uint64_t))type metadata accessor for LiveActivityCommandContext);
  MEMORY[0x1E0C80A78](v1);
  v9[0] = (char *)v9 - v2;
  v3 = sub_1BB86EF08();
  v4 = *(_QWORD *)(v3 - 8);
  v9[1] = v3;
  v9[2] = v4;
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4A3FB4(0, &qword_1ED3C6110, (void (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  if (*(_BYTE *)(v0 + 25))
    v8 = 4;
  else
    v8 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BA73ABE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  unsigned int v6;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = a4;
  *(_BYTE *)(v4 + 48) = v6;
  sub_1BA856ECC(a2, a3, a4, v6, (uint64_t (*)(void))sub_1BA856DD0);
  sub_1BA7E84DC();
  v11 = v10;
  sub_1BB077AE8(a2, a3, a4, v6, v5, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return v11;
}

uint64_t sub_1BA73B1B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA73B1CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1BA73B1E0()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA73B280@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))((char *)sub_1BA73B2AC + 4 * word_1BB8A63F0[(*(unsigned __int8 *)(a1 + 56) >> 1) & 0xF]))();
}

void sub_1BA73B2AC(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 288) = v4;
  *(_QWORD *)(v6 - 280) = v3;
  *(_QWORD *)(v6 - 272) = v2;
  *(_QWORD *)(v6 - 264) = v1;
  *(_QWORD *)(v6 - 256) = v5;
  *(_BYTE *)(v6 - 248) = a1 & 0xE1;
  sub_1BA7E8890();
}

void sub_1BA73B67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v5 - 320) = v3;
  *(_QWORD *)(v5 - 312) = v2;
  *(_QWORD *)(v5 - 304) = v1;
  *(_QWORD *)(v5 - 296) = v0;
  v6 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v5 - 256) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v5 - 240) = v6;
  *(_OWORD *)(v5 - 224) = *(_OWORD *)(v4 + 64);
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v4 + 80);
  v7 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v5 - 288) = *(_OWORD *)v4;
  *(_OWORD *)(v5 - 272) = v7;
  sub_1BA7F1480();
  JUMPOUT(0x1BA73B5C4);
}

void sub_1BA73B6E4(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 288) = v4;
  *(_QWORD *)(v6 - 280) = v3;
  *(_QWORD *)(v6 - 272) = v2;
  *(_QWORD *)(v6 - 264) = v1;
  *(_QWORD *)(v6 - 256) = v5;
  *(_BYTE *)(v6 - 248) = a1 & 1;
  sub_1BAC5A8D8();
  JUMPOUT(0x1BA73B5C4);
}

void sub_1BA73B758()
{
  sub_1BA73B78C();
}

void sub_1BA73B78C()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA73C29C();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X11 }
}

uint64_t sub_1BA73B880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  *(_QWORD *)(v4 - 224) = v1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(unsigned __int8 *)(a1 + 56);
  *(_QWORD *)(v4 - 200) = v5;
  *(_QWORD *)(v4 - 192) = v6;
  *(_QWORD *)(v4 - 184) = v7;
  *(_QWORD *)(v4 - 176) = v8;
  *(_QWORD *)(v4 - 168) = v9;
  *(_BYTE *)(v4 - 160) = v10;
  sub_1BA7147C0(v5, v6, v7, v8, v9, v10);
  sub_1BA76C8BC(v2, v3, *(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 224));
  return sub_1BA6EF82C(v5, v6, v7, v8, v9, v10);
}

uint64_t type metadata accessor for FormatRemoteImage()
{
  uint64_t result;

  result = qword_1ED3B4E60;
  if (!qword_1ED3B4E60)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA73C29C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C3FF0)
  {
    sub_1BB86DA68();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C3FF0);
  }
}

uint64_t sub_1BA73C2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB66B870(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BA6E5070, sub_1BA6E4614, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6EFBC4, (void (*)(_QWORD))type metadata accessor for FormatImageNodeStyle, (void (*)(uint64_t))sub_1BA6E59C4);
}

uint64_t sub_1BA73C338(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA73C36C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED3C29B0, qword_1ED3CA9D8, (uint64_t)&type metadata for FormatImage);
  *v3 = result;
  return result;
}

uint64_t sub_1BA73C36C(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = a4[3];
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = a4[2];
  if (v12 <= v13)
    v14 = a4[2];
  else
    v14 = v12;
  if (v14)
  {
    sub_1BA58281C(0, a5, a6, a7, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    v15 = (_QWORD *)swift_allocObject();
    v16 = _swift_stdlib_malloc_size(v15);
    v17 = v16 - 32;
    if (v16 < 32)
      v17 = v16 - 1;
    v15[2] = v13;
    v15[3] = 2 * (v17 >> 5);
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = (unint64_t)(v15 + 4);
  v19 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v15 != a4 || v18 >= v19 + 32 * v13)
      memmove(v15 + 4, a4 + 4, 32 * v13);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v19 >= v18 + 32 * v13 || v18 >= v19 + 32 * v13)
  {
    sub_1BA4AD288(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v15;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA73C524(uint64_t a1, char a2)
{
  sub_1BA73C538(a1, a2);
}

void sub_1BA73C538(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3C6110, (void (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BA73C5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C4AF0 != -1)
    swift_once();
  sub_1BA76C878(v0, v1);
  v2 = type metadata accessor for FeedHeadlineAudioCommandContext();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  v3 = swift_retain();
  v4 = sub_1BAFEC8E0(v3, v1);
  swift_release();
  return v4;
}

uint64_t type metadata accessor for FormatCommandAction()
{
  return objc_opt_self();
}

uint64_t sub_1BA73CD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = v4;
  swift_retain();
  *(_QWORD *)(v5 + 16) = sub_1BB871440();
  *(_QWORD *)(v5 + 24) = v10;
  *(_BYTE *)(v5 + 32) = 1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v11 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 40) = sub_1BAFEF050;
  *(_QWORD *)(v5 + 48) = v11;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v12 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 56) = sub_1BAFEF07C;
  *(_QWORD *)(v5 + 64) = v12;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v13 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 72) = sub_1BA679224;
  *(_QWORD *)(v5 + 80) = v13;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v14 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 88) = sub_1BAFEF0A8;
  *(_QWORD *)(v5 + 96) = v14;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v15 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 136) = sub_1BAFEF0EC;
  *(_QWORD *)(v5 + 144) = v15;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v16 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 104) = sub_1BAFEF130;
  *(_QWORD *)(v5 + 112) = v16;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v17 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 120) = sub_1BAFEF16C;
  *(_QWORD *)(v5 + 128) = v17;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v18 + 24, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
  *(_QWORD *)(v5 + 152) = sub_1BAFEF1B4;
  *(_QWORD *)(v5 + 160) = v18;
  swift_retain();
  sub_1BA73D078(a2);
  swift_retain();
  sub_1BA73D078(a2);
  swift_retain();
  sub_1BA73D078(a2);
  swift_retain();
  sub_1BA73D078(a2);
  swift_retain();
  sub_1BA73D078(a2);
  swift_retain();
  sub_1BA73D078(a2);
  swift_retain();
  sub_1BA73D078(a2);
  return v5;
}

uint64_t sub_1BA73D078(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

void sub_1BA73D0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 96);
  if (*(unsigned __int16 *)(v0 + 48) > 0xFFu || (sub_1BA754E6C(), !v1))
  {
    if ((~v2 & 0xF000000000000007) != 0)
    {
      swift_retain();
      swift_retain();
      sub_1BA7547AC();
      if (v1)
      {
        sub_1BA60DF1C(v2);
        return;
      }
      sub_1BA7547AC();
      sub_1BA60DF1C(v2);
    }
    if ((~v3 & 0xF000000000000007) != 0)
      sub_1BAC63538();
  }
}

uint64_t sub_1BA73D31C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;

  v4 = v3;
  swift_retain();
  *(_QWORD *)(v4 + 16) = sub_1BB871440();
  *(_QWORD *)(v4 + 24) = v8;
  *(_BYTE *)(v4 + 32) = 1;
  v18 = a2;
  v19 = a3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v9 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 40) = sub_1BAFEEEDC;
  *(_QWORD *)(v4 + 48) = v9;
  v18 = a2;
  v19 = a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v10 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 56) = sub_1BAFEEEF8;
  *(_QWORD *)(v4 + 64) = v10;
  v18 = a2;
  v19 = a3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v11 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 72) = sub_1BA67B68C;
  *(_QWORD *)(v4 + 80) = v11;
  v18 = a2;
  v19 = a3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v12 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 88) = sub_1BAFEEF34;
  *(_QWORD *)(v4 + 96) = v12;
  v18 = a2;
  v19 = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v13 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 136) = sub_1BAFEEF84;
  *(_QWORD *)(v4 + 144) = v13;
  v18 = a2;
  v19 = a3;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v14 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 104) = sub_1BAFEEFD4;
  *(_QWORD *)(v4 + 112) = v14;
  v18 = a2;
  v19 = a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v15 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 120) = sub_1BAFEEFFC;
  *(_QWORD *)(v4 + 128) = v15;
  v18 = a2;
  v19 = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v16 + 24, (uint64_t (*)(_QWORD))sub_1BA73D594);
  *(_QWORD *)(v4 + 152) = sub_1BAFEF018;
  *(_QWORD *)(v4 + 160) = v16;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v4;
}

void sub_1BA73D594()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBB00[0])
  {
    sub_1BA4C3E90(255, &qword_1ED3BE418, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1ED3BBB00);
  }
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1BA4AD288(a1, (unint64_t *)&unk_1ED3B9930, (uint64_t)&unk_1E7271F80, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BA73D624(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BA73D650(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _OWORD v24[5];
  uint64_t v25;
  uint64_t v26;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v24[2] = *(_OWORD *)(a2 + 32);
  v24[3] = v6;
  v24[4] = *(_OWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v7;
  swift_beginAccess();
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v8 = v2[6];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v11);
        sub_1BA6FA7EC();
        sub_1BA719340(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v12 = v2[8];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v24, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
    }
    if (v4[10])
      sub_1BA7E6864(a1, (uint64_t)v24, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA7B9E20);
    swift_beginAccess();
    v15 = v4[11];
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      v26 = v15;
      v17 = v15 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC(a1, v24);
        v17 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease_n();
    }
    v18 = v4[15];
    if (v18)
    {
      swift_beginAccess();
      v19 = *(_QWORD *)(v18 + 72);
      if (v19)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v24, v19);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v20 = *(_QWORD *)(v18 + 88);
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain_n();
        v22 = (uint64_t *)(v20 + 72);
        do
        {
          v23 = *v22;
          if (*v22)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v24, v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v22 += 7;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    if (v4[16])
    {
      swift_retain();
      sub_1BA7B0E34(a1, (uint64_t)v24);
      swift_release();
    }
  }
}

uint64_t sub_1BA73DA40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t result;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  unint64_t v58;
  size_t v59;
  uint64_t isStackAllocationSafe;
  char *v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char v66;
  char v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80[2];
  _QWORD v81[3];
  _QWORD v82[4];

  v82[3] = *MEMORY[0x1E0C80C00];
  v4 = *a1;
  v5 = (unint64_t)*a1 >> 60;
  if (((1 << v5) & 0x3EEF) != 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    sub_1BA4C2DD8(a3, v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v9 = v3;
  if ((_DWORD)v5 != 4)
  {
    v82[0] = *(_QWORD *)(v4 + 24);
    swift_retain_n();
    swift_retain();
    v14 = sub_1BA73DA40(v82, a2, a3);
    swift_release_n();
    result = swift_release();
    if (!v3)
      return v14;
    return result;
  }
  result = *(_QWORD *)(v4 + 16);
  if (!*(_QWORD *)(*(_QWORD *)(v4 + 24) + 16))
    return result;
  v69 = *(_QWORD *)(v4 + 24);
  v70 = result;
  v11 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v11 + 16) + 16))
  {
    v81[0] = *(_QWORD *)(a2 + 56);
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1BA6E42A0(v12);
    sub_1BA6E3FB8(v13);
    v78 = v81[0];
  }
  else
  {
    v78 = sub_1BA6E3F38();
  }
  v72 = *(_QWORD *)(v69 + 16);
  if (!v72)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return v70;
  }
  v71 = v69 + 32;
  swift_bridgeObjectRetain();
  v15 = 0;
LABEL_15:
  v16 = (uint64_t *)(v71 + 24 * v15);
  v18 = *v16;
  v17 = v16[1];
  v73 = v16[2];
  v19 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = qword_1ED4768D0;
  v21 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v22 = (uint64_t *)(v20 + 16);
  swift_beginAccess();
  v23 = *(_QWORD *)(v20 + 16);
  v24 = *(_QWORD *)(v23 + 16);
  v79 = v9;
  v77 = v15;
  if (!v24)
  {
LABEL_21:
    v74 = v21;
    swift_endAccess();
    v80[0] = v18;
    v80[1] = v17;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v80, v81);
    v28 = v81[1];
    v75 = v81[0];
    v29 = v81[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v76 = v28;
    swift_bridgeObjectRetain();
    v30 = v29;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v80[0] = *v22;
    v32 = v80[0];
    *v22 = 0x8000000000000000;
    v33 = v18;
    v34 = v17;
    v36 = sub_1BA6E35A8(v18, v17);
    v37 = *(_QWORD *)(v32 + 16);
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_50:
      __break(1u);
    }
    v40 = v35;
    if (*(_QWORD *)(v32 + 24) < v39)
    {
      sub_1BA7AAAE4(v39, isUniquelyReferenced_nonNull_native);
      v41 = sub_1BA6E35A8(v33, v34);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_52;
      v36 = v41;
      v43 = (_QWORD *)v80[0];
      if ((v40 & 1) == 0)
        goto LABEL_30;
LABEL_28:
      v44 = (_QWORD *)(v43[7] + 24 * v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v76;
      *v44 = v75;
      v44[1] = v45;
      v44[2] = v30;
      v17 = v34;
      v27 = v30;
LABEL_32:
      *v22 = (uint64_t)v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_33;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v43 = (_QWORD *)v80[0];
      if ((v35 & 1) != 0)
        goto LABEL_28;
    }
    else
    {
      sub_1BB4C1F6C();
      v43 = (_QWORD *)v80[0];
      if ((v40 & 1) != 0)
        goto LABEL_28;
    }
LABEL_30:
    v43[(v36 >> 6) + 8] |= 1 << v36;
    v46 = (uint64_t *)(v43[6] + 16 * v36);
    *v46 = v33;
    v46[1] = v34;
    v47 = (_QWORD *)(v43[7] + 24 * v36);
    v48 = v76;
    *v47 = v75;
    v47[1] = v48;
    v47[2] = v30;
    v49 = v43[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_50;
    v27 = v30;
    v43[2] = v51;
    swift_bridgeObjectRetain();
    v17 = v34;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  v25 = sub_1BA6E35A8(v18, v17);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 24 * v25 + 16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_33:
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v27 + 16);
  if (!v52)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v75 = v27;
  v76 = v17;
  v53 = (uint64_t *)(v27 + 64);
  while (1)
  {
    v54 = *(v53 - 1);
    v55 = *v53;
    v56 = *(_BYTE *)(v54 + 32);
    v57 = v56 & 0x3F;
    v58 = (unint64_t)((1 << v56) + 63) >> 6;
    v59 = 8 * v58;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v57 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v61 = (char *)swift_slowAlloc();
    bzero(v61, v59);
    v64 = v79;
    v65 = sub_1BA6EB5B4((uint64_t)v61, v58, v54, v78);
    v79 = v64;
    if (v64)
      goto LABEL_51;
    v63 = v65;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE5C38](v61, -1, -1);
LABEL_43:
    v66 = sub_1BA6EB330(v63, v54);
    swift_release();
    if ((v66 & 1) != 0)
    {
      v67 = sub_1BA6EBD20(v78, v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v67 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v70 = v73;
LABEL_14:
        v15 = v77 + 1;
        v9 = v79;
        if (v77 + 1 == v72)
        {
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v53 += 5;
    if (!--v52)
      goto LABEL_13;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v61 = (char *)&v69 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v61, v59);
  v62 = v79;
  v63 = sub_1BA6EB5B4((uint64_t)v61, v58, v54, v78);
  swift_bridgeObjectRelease();
  v79 = v62;
  if (!v62)
    goto LABEL_43;
  v68 = v79;
  swift_willThrow();

  __break(1u);
LABEL_51:
  swift_bridgeObjectRelease();

  MEMORY[0x1BCCE5C38](v61, -1, -1);
  __break(1u);
LABEL_52:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA73E158(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, __n128), void (*a5)(unint64_t, char *), void (*a6)(unint64_t, char *))
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  void (*v48)(unint64_t, char *);
  uint64_t v49;
  int v50;
  void (*v51)(unint64_t, char *);

  v48 = a6;
  v51 = a5;
  v8 = v6;
  v10 = a3(0);
  v49 = *(_QWORD *)(v10 - 8);
  v11.n128_f64[0] = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - v12;
  v14 = *v6;
  a4(0, v11);
  v50 = a2;
  v15 = sub_1BB873F54();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v47 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v45 = v6;
  v46 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  while (1)
  {
    if (v20)
    {
      v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v27 = v26 | (v23 << 6);
      goto LABEL_22;
    }
    v28 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v46)
      break;
    v29 = v47;
    v30 = v47[v28];
    ++v23;
    if (!v30)
    {
      v23 = v28 + 1;
      if (v28 + 1 >= v46)
        goto LABEL_34;
      v30 = v47[v23];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v46)
        {
LABEL_34:
          swift_release();
          v8 = v45;
          if ((v50 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v47[v31];
        if (!v30)
        {
          while (1)
          {
            v23 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v23 >= v46)
              goto LABEL_34;
            v30 = v47[v23];
            ++v31;
            if (v30)
              goto LABEL_21;
          }
        }
        v23 = v31;
      }
    }
LABEL_21:
    v20 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v23 << 6);
LABEL_22:
    v32 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v27);
    v33 = *v32;
    v34 = v32[1];
    v35 = *(_QWORD *)(v49 + 72);
    v36 = *(_QWORD *)(v14 + 56) + v35 * v27;
    if ((v50 & 1) != 0)
    {
      v51(v36, v13);
    }
    else
    {
      v48(v36, v13);
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v37 = -1 << *(_BYTE *)(v16 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v21 + 8 * (v38 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v21 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v21 + 8 * v39);
      }
      while (v43 == -1);
      v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v25 = (_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v24);
    *v25 = v33;
    v25[1] = v34;
    result = ((uint64_t (*)(char *, unint64_t))v51)(v13, *(_QWORD *)(v16 + 56) + v35 * v24);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v8 = v45;
  v29 = v47;
  if ((v50 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v44 = 1 << *(_BYTE *)(v14 + 32);
  if (v44 >= 64)
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v44;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v8 = v16;
  return result;
}

uint64_t sub_1BA73E4D0(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
}

uint64_t sub_1BA73E4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA73E540@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21[2];
  uint64_t v22;

  v2 = *v1;
  v3 = v1[1];
  sub_1BB86DD80();
  v4 = *(_QWORD *)(*(_QWORD *)(v22 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v4 + 16) + 16))
  {
    v21[0] = *(_QWORD *)(v22 + 56);
    v5 = swift_bridgeObjectRetain();
    v6 = sub_1BA6E42A0(v5);
    sub_1BA6E3FB8(v6);
    swift_release();
    v7 = v21[0];
  }
  else
  {
    v7 = sub_1BA6E3F38();
    swift_release();
  }
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v21[0] = v2;
  v21[1] = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E583C(v21);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = (unsigned int *)MEMORY[0x1E0DB4D50];
    goto LABEL_14;
  }
  v10 = (uint64_t *)(v8 + 64);
  while (1)
  {
    v11 = *(v10 - 1);
    v12 = *v10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA71D208(v7, v11);
    v14 = sub_1BA6EB330(v13, v11);
    swift_release();
    if ((v14 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    v10 += 5;
    if (!--v9)
      goto LABEL_13;
  }
  v15 = sub_1BA6EBD20(v7, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    goto LABEL_9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (unsigned int *)MEMORY[0x1E0DB4D48];
LABEL_14:
  v17 = *v16;
  v18 = sub_1BB86EB00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a1, v17, v18);
}

uint64_t FormatTextNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v2;
  v22 = v2[4];
  sub_1BA705894(v22);
  FormatTextSize.bind(binder:context:)();
  if (v3)
    return sub_1BA7058C4(v22);
  sub_1BA7058C4(v22);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7])
    FormatTextNodeStyle.bind(binder:context:)(a1, a2);
  v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 88);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (uint64_t *)(v14 + 72);
      do
      {
        v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  swift_retain();
  FormatTextContent.bind(binder:context:)();
  swift_release();
  v18 = *((unsigned __int16 *)v4 + 52);
  if (v18 >> 9 <= 0x7E)
  {
    v23 = v4[10];
    v24 = v4[11];
    v25 = v4[12];
    sub_1BA7AAE84(v23, v24, v25, v18);
    FormatComputedInvalidation.bind(binder:context:)();
    sub_1BA72E4BC(v23, v24, v25, v18);
  }
  result = swift_beginAccess();
  v19 = v4[15];
  if (v19 >> 62 == 1)
  {
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 24);
    sub_1BA67D3F4(v19);
    sub_1BA67D3F4(v20);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v20, v21);
    sub_1BA6EEDB4(v20);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v19);
  }
  return result;
}

void FormatTextContent.bind(binder:context:)()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

void sub_1BA73EB3C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  __int128 v5;

  v4 = *(_WORD *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 - 144) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 - 128) = v5;
  *(_OWORD *)(v3 - 112) = *(_OWORD *)(a1 + 48);
  *(_WORD *)(v3 - 96) = v4;
  FormatTextNodeBinding.bind(binder:context:)(v1, v2);
}

_QWORD *FormatTextNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  _QWORD *result;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[128];
  _QWORD v47[16];
  _QWORD v48[66];
  __int128 __dst[33];
  uint64_t v50;

  v4 = v3;
  v5 = v2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    memcpy(__dst, (const void *)(v8 + 32), sizeof(__dst));
    memcpy(v48, __dst, sizeof(v48));
    sub_1BAC67FA0((uint64_t)__dst);
    FormatTextNodeStyle.Selector.bind(binder:context:)(a1, a2);
    if (v3)
    {
      sub_1BAC68120((uint64_t)__dst);
      return (_QWORD *)swift_bridgeObjectRelease_n();
    }
    for (i = 560; ; i += 528)
    {
      sub_1BAC68120((uint64_t)__dst);
      if (!--v9)
        break;
      memcpy(__dst, (const void *)(v8 + i), sizeof(__dst));
      memcpy(v48, __dst, sizeof(v48));
      sub_1BAC67FA0((uint64_t)__dst);
      FormatTextNodeStyle.Selector.bind(binder:context:)(a1, a2);
    }
    swift_bridgeObjectRelease_n();
  }
  v12 = *(_QWORD *)(v5 + 56);
  if ((~v12 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)&__dst[0] = *(_QWORD *)(v5 + 56);
    swift_retain();
    FormatFont.bind(binder:context:)();
    if (v3)
      return (_QWORD *)sub_1BA6E6CD8(v12);
    sub_1BA6E6CD8(v12);
  }
  v13 = MEMORY[0x1E0DEB940];
  sub_1BA760F3C(v5 + 64, (uint64_t)v48, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  sub_1BA760F3C((uint64_t)v48, (uint64_t)__dst, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)v13, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  result = (_QWORD *)sub_1BAB05F98((uint64_t)__dst);
  if ((_DWORD)result != 1)
  {
    sub_1BA7439D4(__dst, (uint64_t)v46);
    sub_1BA760F3C((uint64_t)v48, (uint64_t)v47, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA6A0C50(v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    FormatFill.bind(binder:context:)();
    if (v3)
      return sub_1BA6A0C50(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    result = sub_1BA6A0C50(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  }
  v14 = *(_QWORD *)(v5 + 192);
  if (v14)
  {
    result = (_QWORD *)sub_1BAB73D7C(a1, a2, v14);
    if (v3)
      return result;
  }
  if (*(unsigned __int8 *)(v5 + 280) != 254)
  {
    v50 = *(unsigned __int8 *)(v5 + 280);
    v40 = *(_QWORD *)(v5 + 200);
    v41 = *(_QWORD *)(v5 + 208);
    v19 = *(_QWORD *)(v5 + 232);
    v44 = *(_QWORD *)(v5 + 240);
    v45 = *(_QWORD *)(v5 + 224);
    v20 = *(_QWORD *)(v5 + 256);
    v42 = *(_QWORD *)(v5 + 216);
    v43 = *(_QWORD *)(v5 + 248);
    v22 = *(_QWORD *)(v5 + 264);
    v21 = *(_QWORD *)(v5 + 272);
    v47[0] = v19;
    swift_retain();
    FormatColor.bind(binder:context:)();
    if (v3)
      return (_QWORD *)sub_1BA6E8A78(v40, v41, v42, v45, v19, v44, v43, v20, v22, v21, v50);
    v39 = v21;
    v23 = v22;
    v24 = v50;
    v25 = v20;
    v26 = v43;
    v27 = v44;
    v28 = v19;
    v29 = v45;
    switch((int)v50)
    {
      case 0:
        break;
      case 1:
      case 4:
        v38 = v25;
        sub_1BABD5EE8(a1, a2);
        goto LABEL_52;
      case 2:
      case 3:
      case 5:
        v38 = v25;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v4 = 0;
LABEL_52:
        v25 = v38;
        v24 = v50;
        break;
      default:
        v25 = v43;
        v26 = v44;
        v27 = v28;
        v28 = v45;
        v29 = v45;
        break;
    }
    result = (_QWORD *)sub_1BA6E8A78(v40, v41, v42, v29, v28, v27, v26, v25, v23, v39, v24);
    v15 = *(_QWORD *)(v5 + 512);
    if (!v15)
      goto LABEL_33;
    goto LABEL_21;
  }
  v15 = *(_QWORD *)(v5 + 512);
  if (v15)
  {
LABEL_21:
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      v17 = (_BYTE *)(v15 + 40);
      do
      {
        if ((*v17 & 1) == 0)
        {
          v47[0] = *((_QWORD *)v17 - 1);
          v18 = v47[0];
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v4)
          {
            sub_1BA72C46C(v18, 0);
            sub_1BA72C46C(v18, 0);
            return (_QWORD *)swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v18, 0);
          sub_1BA72C46C(v18, 0);
        }
        v17 += 16;
        --v16;
      }
      while (v16);
      result = (_QWORD *)swift_bridgeObjectRelease_n();
    }
  }
LABEL_33:
  v30 = *(_QWORD *)(v5 + 520);
  if (v30 != 9)
  {
    v31 = *(_QWORD *)(v5 + 528);
    if ((~v31 & 0xF000000000000007) != 0)
    {
      v47[0] = *(_QWORD *)(v5 + 528);
      sub_1BA5E7FF4(v31);
      FormatColor.bind(binder:context:)();
      if (v4)
        return (_QWORD *)sub_1BA6E8A90(v30, v31);
    }
    result = (_QWORD *)sub_1BA6E8A90(v30, v31);
  }
  v32 = *(_QWORD *)(v5 + 536);
  if (v32 != 9)
  {
    v33 = *(_QWORD *)(v5 + 544);
    if ((~v33 & 0xF000000000000007) != 0)
    {
      v47[0] = *(_QWORD *)(v5 + 544);
      sub_1BA5E7FF4(v33);
      FormatColor.bind(binder:context:)();
      result = (_QWORD *)sub_1BA6E8A90(v32, v33);
      if (v4)
        return result;
    }
    else
    {
      result = (_QWORD *)sub_1BA6E8A90(*(_QWORD *)(v5 + 536), *(_QWORD *)(v5 + 544));
    }
  }
  v34 = *(_QWORD *)(v5 + 560);
  if (v34)
  {
    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      swift_bridgeObjectRetain_n();
      v36 = (_BYTE *)(v34 + 40);
      do
      {
        if ((*v36 & 1) == 0)
        {
          v47[0] = *((_QWORD *)v36 - 1);
          v37 = v47[0];
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v37, 0);
          sub_1BA72C46C(v37, 0);
          if (v4)
            break;
        }
        v36 += 16;
        --v35;
      }
      while (v35);
      return (_QWORD *)swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

void FormatTextSize.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA73F864()
{
  swift_retain();
  FormatTextContent.bind(binder:context:)();
  return swift_release();
}

unint64_t FormatSymbolImage.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;

  v4 = v3;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - v10;
  v12 = *(unsigned __int8 *)(v2 + 24);
  v14 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v15 = *(unsigned __int16 *)(v2 + 48);
  v17 = *(_QWORD *)(v2 + 56);
  v16 = *(_QWORD *)(v2 + 64);
  v18 = *(_QWORD *)(v2 + 80);
  v38 = *(_QWORD *)(v2 + 72);
  v43 = *(unsigned __int8 *)(v2 + 88);
  v19 = *(_QWORD *)(v2 + 96);
  if (v12 == 1)
  {
    v31 = v13;
    v32 = v19;
    v36 = v17;
    v37 = v16;
    v34 = a2;
    v35 = v18;
    v33 = a1;
    v20 = *(_QWORD *)(v2 + 8);
    v22 = *(_QWORD *)(v2 + 16);
    v40 = *(_QWORD *)v2;
    v21 = v40;
    v41 = v20;
    v42 = v22;
    v44 = 5;
    sub_1BA60DF54(v40, v20, v22, 1);
    sub_1BA60DF54(v21, v20, v22, 1);
    v23 = sub_1BB6B84D4(&v40, &v44);
    if (v3)
      return sub_1BA60DFC4(v21, v20, v22, 1);
    sub_1BB3757A0(v21, v20, v23, 1, (uint64_t)v11);
    v4 = 0;
    sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BA60DFC4(v21, v20, v22, 1);
    v19 = v32;
    v18 = v35;
    v17 = v36;
    v16 = v37;
    v13 = v31;
  }
  if (v15 >> 8 <= 0xFE)
  {
    v36 = v17;
    v37 = v16;
    v40 = v14;
    v41 = v13;
    LOWORD(v42) = v15;
    v25 = v13;
    sub_1BA740408(v14, v13, v15, SBYTE1(v15));
    FormatSymbolConfig.bind(binder:context:)();
    if (v4)
      return sub_1BA740460(v14, v25, v15);
    sub_1BA740460(v14, v25, v15);
    v17 = v36;
    v16 = v37;
  }
  v26 = v38;
  v27 = (uint64_t)v39;
  if ((~v17 & 0xF000000000000007) != 0)
  {
    v35 = v18;
    v40 = v17;
    v29 = v17;
    v30 = v16;
    sub_1BA60DEE4(v17);
    swift_retain();
    FormatColor.bind(binder:context:)();
    if (v4)
    {
      swift_release();
      return sub_1BA60DF1C(v29);
    }
    swift_release();
    v40 = v30;
    swift_retain();
    FormatColor.bind(binder:context:)();
    swift_release();
    sub_1BA60DF1C(v29);
    v18 = v35;
    v27 = (uint64_t)v39;
  }
  if (v43)
  {
    sub_1BA69C808(v26, v18, 1);
    v28 = sub_1BA862600((uint64_t)&unk_1E7254D00);
    sub_1BB3757A0(v26, v18, v28, 1, v27);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return sub_1BA69C828(v26, v18, 1);
    }
    sub_1BA502AD0(v27, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
  }
  result = sub_1BA69C828(v26, v18, v43);
  if ((~v19 & 0xF000000000000007) != 0)
  {
    v40 = v19;
    sub_1BA739250(v19);
    FormatSymbolImageColor.bind(binder:context:)();
    return sub_1BA895BB8(v19);
  }
  return result;
}

id sub_1BA73FF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char v10;
  char v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t *v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v31 = *(_QWORD *)(v1 + 40);
  v32 = *(_QWORD *)(v1 + 32);
  v33 = *(unsigned __int16 *)(v1 + 48);
  v27 = *(_QWORD *)(v1 + 64);
  v28 = *(_QWORD *)(v1 + 56);
  v29 = *(_QWORD *)(v1 + 80);
  v30 = *(_QWORD *)(v1 + 72);
  v4 = *(_BYTE *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v34 = *(_QWORD *)v1;
  v35 = *(_QWORD *)(v1 + 8);
  v36 = *(_QWORD *)(v1 + 16);
  v37 = *(_BYTE *)(v1 + 24);
  sub_1BA60DF54(*(_QWORD *)v1, v35, v36, v37);
  v6 = sub_1BA740A34(a1);
  v8 = v7;
  sub_1BA60DFC4(v34, v35, v36, v37);
  if (!v2)
  {
    v24 = v5;
    v26 = (uint64_t)v8;
    if (v33 >> 8 <= 0xFE)
    {
      sub_1BA740408(v32, v31, v33, SBYTE1(v33));
      sub_1BA740474();
      v25 = v9;
      sub_1BA740460(v32, v31, v33);
    }
    else
    {
      v25 = 0;
    }
    sub_1BA69C808(v30, v29, v4);
    sub_1BB86DD80();
    v10 = FormatBoolean.value(contextLayoutOptions:)(v38);
    v12 = v10;
    swift_release();
    sub_1BA69C828(v30, v29, v4);
    if ((v12 & 1) != 0)
    {
      v13 = v25;
      if (!v25)
      {
        v19 = (void *)objc_opt_self();
        v15 = (id)sub_1BB872970();
        v8 = objc_msgSend(v19, sel_ts_internalSystemImageNamed_, v15);
LABEL_21:

LABEL_22:
        if (v8)
        {
          swift_bridgeObjectRelease();

          return v8;
        }
LABEL_24:
        v8 = (id)type metadata accessor for FormatLayoutError();
        sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        *v23 = v6;
        v23[1] = v26;
        v23[2] = (uint64_t)v13;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return v8;
      }
      v14 = (void *)objc_opt_self();
      v15 = v25;
      v16 = (id)sub_1BB872970();
      v8 = objc_msgSend(v14, sel_ts_internalSystemImageNamed_withConfiguration_, v16, v15);
    }
    else
    {
      if (v25)
      {
        v13 = v25;
        v17 = v25;
        swift_bridgeObjectRetain();
        v18 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v18, v17);

      }
      else
      {
        v13 = 0;
        swift_bridgeObjectRetain();
        v18 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v18);
      }

      v20 = v24;
      if ((~v24 & 0xF000000000000007) == 0)
      {
        if ((~v28 & 0xF000000000000007) == 0)
          goto LABEL_22;
        v20 = swift_allocObject();
        sub_1BA9AF40C();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
        *(_QWORD *)(v21 + 32) = v28;
        *(_QWORD *)(v21 + 40) = v27;
        *(_QWORD *)(v20 + 16) = v21;
        swift_retain();
        swift_retain();
      }
      if (!v8)
      {
        sub_1BA895BA4(v24);
        sub_1BA895BB8(v20);
        goto LABEL_24;
      }
      sub_1BA895BA4(v24);
      v16 = v8;
      FormatSymbolImageColor.symbolConfiguration(context:)();
      v15 = v22;
      v8 = objc_msgSend(v16, sel_imageByApplyingSymbolConfiguration_, v22);
      sub_1BA895BB8(v20);

    }
    goto LABEL_21;
  }
  return v8;
}

uint64_t sub_1BA740408(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 2 || a4 == 1)
    return swift_bridgeObjectRetain();
  if (!a4)
    return swift_retain();
  return result;
}

uint64_t sub_1BA740434(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 2 || a4 == 1)
    return swift_bridgeObjectRelease();
  if (!a4)
    return swift_release();
  return result;
}

uint64_t sub_1BA740460(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE1(a3) != 255)
    return sub_1BA740434(result, a2, a3, SBYTE1(a3));
  return result;
}

void sub_1BA740474()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7404B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_retain();
  v3 = sub_1BB108EA8();
  sub_1BA740434(v0, v1, v2, 0);
  return v3;
}

id sub_1BA740590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  uint64_t v46;
  void *v47;

  v4 = sub_1BB86D93C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v46 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v46 - v11;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v46 - v16;
  v18 = *(_QWORD *)v1;
  v19 = *(unsigned __int8 *)(v1 + 8);
  v20 = *(unsigned __int8 *)(v1 + 9);
  v46 = a1;
  if (v19 != 10)
  {
    v28 = v15;
    v29 = v14;
    if ((_DWORD)v20 == 5)
    {
      swift_bridgeObjectRetain();
      sub_1BB86DD80();
      v23 = v47;
      v30 = sub_1BA72BED4((uint64_t)v47, v18);
      swift_bridgeObjectRelease();
      swift_release();
      if (v2)
        return v23;
      sub_1BB86D750();
      sub_1BB86D930();
      v32 = round(v30 * 4.0 * v31 * 0.25);
      if (byte_1EF3D0978)
        v30 = v32;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
      v27 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, v19, v30, v46);
    }
    else
    {
      v41 = v20;
      swift_bridgeObjectRetain();
      sub_1BB86DD80();
      v23 = v47;
      v42 = sub_1BA72BED4((uint64_t)v47, v18);
      swift_bridgeObjectRelease();
      swift_release();
      if (v2)
        return v23;
      sub_1BB86D750();
      sub_1BB86D930();
      v44 = round(v42 * 4.0 * v43 * 0.25);
      if (byte_1EF3D0978)
        v42 = v44;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v29);
      v27 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, v19, v41 - 1, v42, v46);
    }
    return v27;
  }
  v21 = v15;
  v22 = v14;
  if ((_DWORD)v20 == 5)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v23 = v47;
    v24 = sub_1BA72BED4((uint64_t)v47, v18);
    swift_bridgeObjectRelease();
    swift_release();
    if (v2)
      return v23;
    sub_1BB86D750();
    sub_1BB86D930();
    v26 = round(v24 * 4.0 * v25 * 0.25);
    if (byte_1EF3D0978)
      v24 = v26;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
    v27 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, v24, v46);
    return v27;
  }
  v33 = v20;
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v23 = v47;
  v34 = sub_1BA72BED4((uint64_t)v47, v18);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v2)
  {
    sub_1BB86D750();
    sub_1BB86D930();
    v36 = round(v34 * 4.0 * v35 * 0.25);
    if (byte_1EF3D0978)
      v34 = v36;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
    v37 = (void *)objc_opt_self();
    v38 = v33 - 1;
    v39 = objc_msgSend(v37, sel_configurationWithPointSize_, v34, v46);
    v40 = objc_msgSend(v37, sel_configurationWithScale_, v38);
    v23 = objc_msgSend(v39, sel_configurationByApplyingConfiguration_, v40);

  }
  return v23;
}

uint64_t sub_1BA740A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v24 = a1;
  v2 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatOption();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v22 = *(_QWORD *)(v1 + 16);
    FormatOptionCollection.subscript.getter(v13, v12, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA856968);
      *v4 = v13;
      v4[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      sub_1BAB53980((uint64_t)v4, v14);
      swift_bridgeObjectRetain();
      swift_willThrow();
      v15 = (uint64_t)v4;
      v16 = type metadata accessor for FormatLayoutError;
LABEL_8:
      sub_1BA4A2E80(v15, (uint64_t (*)(_QWORD))v16);
      return v13;
    }
    v17 = v22;
    sub_1BA8569CC((uint64_t)v7, (uint64_t)v11);
    swift_retain();
    v18 = v23;
    sub_1BA711ECC();
    swift_release();
    if (v18)
    {
      v16 = type metadata accessor for FormatOption;
      v15 = (uint64_t)v11;
      goto LABEL_8;
    }
    sub_1BA7469BC(v25, v13, v12, v17, v24);
    v13 = v20;
    swift_release();
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v13;
}

uint64_t FormatBoolean.value(contextLayoutOptions:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v15;
  uint64_t v16;

  sub_1BA856968();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v11 = *(_QWORD *)(v1 + 8);
    swift_bridgeObjectRetain();
    FormatOptionCollection.subscript.getter(v10, v11, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA856968);
      v12 = type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      *v13 = v10;
      v13[1] = v11;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      sub_1BA69C828(v10, v11, 1);
      sub_1BA8569CC((uint64_t)v5, (uint64_t)v9);
      v16 = *((_QWORD *)v9 + 2);
      swift_retain();
      v12 = sub_1BAA7ED68(&v16, a1, (uint64_t)v9);
      swift_release();
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    }
  }
  else
  {
    v12 = v10 & 1;
  }
  return v12 & 1;
}

uint64_t sub_1BA740E74(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE1(a3) != 255)
    return sub_1BA740408(result, a2, a3, SBYTE1(a3));
  return result;
}

uint64_t sub_1BA740E88(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA740EB4(a1, a2, a3, *v3, (unint64_t *)&qword_1ED3BBB90, (uint64_t)&type metadata for FormatNodeCacheKey);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA740EB4(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 24 * v10;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA741040(uint64_t a1)
{
  return sub_1BA72B228(a1, (unint64_t *)&qword_1ED3BBB90, (uint64_t)&type metadata for FormatNodeCacheKey);
}

void sub_1BA741054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v18 = a2;
  v6 = sub_1BB86EB00();
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = v9 - 1;
    v15 = a3;
    v11 = a3 + 40;
    do
    {
      v12 = v10;
      v13 = *(_QWORD *)(v11 - 8);
      v19 = v13;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7049A8();
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        return;
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) == 0)
      {
        v19 = v13;
        swift_retain();
        FormatExpression.bind(binder:context:)();
        swift_release();
      }
      v14 = sub_1BB86EAE8();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
      if ((v14 & 1) != 0)
        break;
      v10 = v12 - 1;
      v11 += 16;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
}

id sub_1BA741210(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _OWORD v46[8];
  uint64_t v47;

  v8 = a3;
  v11 = *v4;
  v12 = v4[1];
  v13 = sub_1BA749020(v11, v12, a1, a2, a3, a4);
  if (!v5)
  {
    v6 = v13;
    v15 = *(_QWORD *)(v12 + 16);
    if (v15)
    {
      v40 = a4;
      v44 = a1;
      v42 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
      swift_bridgeObjectRetain();
      v39 = v12;
      v16 = (uint64_t *)(v12 + 64);
      v41 = v6;
      v43 = v8;
      do
      {
        v45 = v15;
        v17 = *v16;
        swift_retain();
        v47 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_1BB872AFC(v18);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v19);
        if (v8)
        {
          swift_retain_n();
          swift_retain();
          v20 = sub_1BA742048(v8, v44);
          sub_1BA743168(v20, v8, (uint64_t)v44, 18, v46);
          type metadata accessor for FormatAttributedString();
          swift_allocObject();
          swift_bridgeObjectRetain();
          sub_1BA741FD8((uint64_t)v46);
          sub_1BA741BFC(31611, 0xE200000000000000, (uint64_t)v46);
          sub_1BA741B54((uint64_t)v46);
          sub_1BA714CBC((uint64_t)v44);
          v22 = v21;
          swift_release();
          sub_1BA741B54((uint64_t)v46);
          swift_bridgeObjectRelease();
          v23 = objc_msgSend(v22, sel_string);
          sub_1BB8729A0();
          swift_release();

        }
        v24 = objc_msgSend(v6, sel_mutableString, v39);
        v25 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v26 = objc_msgSend(v24, sel_rangeOfString_, v25);
        v28 = v27;

        if (v26 != (id)sub_1BB86BC14())
        {
          v29 = swift_bridgeObjectRetain();
          v30 = sub_1BA707E14(v29, 0);
          swift_bridgeObjectRelease();
          v31 = (uint64_t *)(*(_QWORD *)&v44[v42] + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
          swift_beginAccess();
          v32 = *v31;
          v33 = v31[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v34 = swift_retain();
          v35 = sub_1BA748BCC(v34, v30, v32, v33);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          v36 = v35;
          if (!v35)
          {
            v36 = v43;
            swift_retain();
          }
          swift_retain();
          swift_retain();
          v37 = (void *)sub_1BA72FFD8(v30, a2, v36, v40);
          swift_release();
          swift_release();
          objc_msgSend(v41, sel_replaceCharactersInRange_withAttributedString_, v26, v28, v37);
          swift_release();
          v6 = v41;
          swift_release();

          v8 = v43;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v16 += 5;
        v15 = v45 - 1;
      }
      while (v45 != 1);
      swift_bridgeObjectRelease();
    }
    if (v8)
    {
      swift_retain();
      v38 = _s8NewsFeed19FormatTextNodeStyleC18reapplyLineSpacing010attributedD07contextSo18NSAttributedStringCAH_AA0cE7ContextCtF_0(v6);

      swift_release();
      return v38;
    }
  }
  return v6;
}

id sub_1BA7417FC(id a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  _OWORD v23[8];
  _OWORD v24[8];

  if ((sub_1BB872B5C() & 1) != 0)
  {
    v9 = sub_1BB857050((uint64_t)a1, a2);
    if (!v4)
    {
      v10 = (uint64_t)v9;
      type metadata accessor for FormatAttributedStringAnnotator();
      swift_allocObject();
      v11 = sub_1BB80ADC4(v10);
      v13 = v12;
      swift_release();
      swift_release();
      if (a3)
        v14 = a3;
      else
        v14 = sub_1BB4ECD28();
      swift_retain();
      swift_retain();
      v19 = swift_retain();
      v20 = sub_1BA742048(v19, a4);
      sub_1BA743168(v20, v14, (uint64_t)a4, 18, v24);
      type metadata accessor for FormatAttributedString();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1BA741FD8((uint64_t)v24);
      sub_1BB342B80(v11, v13, v24);
      sub_1BA714CBC((uint64_t)a4);
      a1 = v22;
      swift_release();
      sub_1BA741B54((uint64_t)v24);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if (a3)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v15 = sub_1BA742048(a3, a4);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1BA743168(v15, a3, (uint64_t)a4, 18, v23);
      type metadata accessor for FormatAttributedString();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1BA741FD8((uint64_t)v23);
      sub_1BA741BFC((uint64_t)a1, a2, (uint64_t)v23);
      sub_1BA741B54((uint64_t)v23);
      sub_1BA714CBC((uint64_t)a4);
      a1 = v21;
      swift_release();
      sub_1BA741B54((uint64_t)v23);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    a1 = objc_msgSend(v16, sel_initWithString_, v17);

  }
  return a1;
}

uint64_t sub_1BA741B54(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 64);
  swift_release();
  swift_release();

  return a1;
}

uint64_t type metadata accessor for FormatAttributedString()
{
  uint64_t result;

  result = qword_1ED3C9D70;
  if (!qword_1ED3C9D70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA741BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = v3;
  v53 = a2;
  v56 = a1;
  v6 = sub_1BB86C22C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86C37C();
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86C304();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles) = MEMORY[0x1E0DEE9E0];
  v17 = (_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  v18 = *(_OWORD *)(a3 + 80);
  v17[4] = *(_OWORD *)(a3 + 64);
  v17[5] = v18;
  v17[6] = *(_OWORD *)(a3 + 96);
  *(_OWORD *)((char *)v17 + 105) = *(_OWORD *)(a3 + 105);
  v19 = *(_OWORD *)(a3 + 16);
  *v17 = *(_OWORD *)a3;
  v17[1] = v19;
  v20 = *(_OWORD *)(a3 + 48);
  v17[2] = *(_OWORD *)(a3 + 32);
  v17[3] = v20;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_buildType) = 0;
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 104) + 288);
  v52 = v6;
  v51 = v9;
  v47 = v23;
  v48 = v22;
  v46 = (char *)&v43 - v24;
  if (v21)
  {
    v45 = v7;
    v25 = *(_QWORD *)(v21 + 16);
    if (v25)
    {
      v43 = v12;
      v44 = v4;
      sub_1BA741FD8(a3);
      v26 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = 0;
      v28 = v56;
      do
      {
        v32 = *(unsigned __int8 *)(v21 + v27 + 32);
        if (*(_BYTE *)(v21 + v27 + 32))
        {
          v54 = v28;
          v55 = v26;
          if (v32 == 1)
          {
            sub_1BA7114A0();
            v29 = sub_1BB873AD4();
          }
          else
          {
            sub_1BA7114A0();
            v29 = sub_1BB873AF8();
          }
        }
        else
        {
          v54 = v28;
          v55 = v26;
          sub_1BA7114A0();
          v29 = sub_1BB873AE0();
        }
        v28 = v29;
        v31 = v30;
        swift_bridgeObjectRelease();
        v26 = v31;
        ++v27;
      }
      while (v25 != v27);
      swift_bridgeObjectRelease();
      v33 = v28 == v56 && v31 == v53;
      v12 = v43;
      v4 = v44;
      if (v33)
      {
        swift_bridgeObjectRelease();
        v7 = v45;
      }
      else
      {
        v34 = sub_1BB874398();
        v7 = v45;
        if ((v34 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v56 = v28;
        }
      }
    }
    else
    {
      sub_1BA741FD8(a3);
      v7 = v45;
    }
  }
  else
  {
    sub_1BA741FD8(a3);
  }
  sub_1BB86C370();
  v35 = v46;
  sub_1BB86C310();
  v36 = (uint64_t)v12;
  v37 = v47;
  v38 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v4 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString, v35, v48);
  v39 = v4 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v15, v39, v38);
  sub_1BA744E84((uint64_t)v15, v36);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  v41 = v51;
  v40 = v52;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v51, *MEMORY[0x1E0CAEFE0], v52);
  swift_beginAccess();
  sub_1BB86C1FC();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v40);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v36, v50);
  return v4;
}

uint64_t sub_1BA741FD8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 40);
  v6 = *(id *)(a1 + 64);
  swift_retain();
  swift_retain();
  v7 = v2;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  return a1;
}

id sub_1BA742048(uint64_t a1, id a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  _QWORD v22[2];

  v5 = sub_1BB86D93C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86D750();
  v9 = *(_QWORD *)(a1 + 56);
  if ((~v9 & 0xF000000000000007) == 0)
  {
    a2 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 16.0);
    sub_1BB86D930();
    if (byte_1EF3D0978 == 1)
    {
      v11 = v10;
      objc_msgSend(a2, sel_pointSize);
      v13 = round(v11 * (v12 * 4.0) * 0.25);
      if (byte_1EF3D0978)
        v12 = v13;
      v14 = objc_msgSend(a2, sel_fontWithSize_, v12);

      a2 = v14;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return a2;
  }
  v22[1] = v9;
  swift_retain();
  sub_1BA742278();
  if (!v2)
  {
    a2 = v15;
    sub_1BB86D930();
    if (byte_1EF3D0978 == 1)
    {
      v17 = v16;
      objc_msgSend(a2, sel_pointSize);
      v19 = round(v17 * (v18 * 4.0) * 0.25);
      if (byte_1EF3D0978)
        v18 = v19;
      v20 = objc_msgSend(a2, sel_fontWithSize_, v18);

      sub_1BA6E6CD8(v9);
      a2 = v20;
    }
    else
    {
      sub_1BA6E6CD8(v9);
    }
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BA6E6CD8(v9);
  return a2;
}

void sub_1BA742278()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

id sub_1BA7422F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t v5;
  __int16 v6;
  __int128 v7;
  void *v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_WORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 34);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_WORD *)(a1 + 80);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v1 - 152) = v2;
  *(_WORD *)(v1 - 144) = v3;
  *(_BYTE *)(v1 - 142) = v4;
  *(_QWORD *)(v1 - 136) = v5;
  v7 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 - 112) = v7;
  *(_WORD *)(v1 - 96) = v6;
  v8 = (void *)sub_1BB86D738();
  v9 = sub_1BB376CA8(v8);

  return v9;
}

uint64_t sub_1BA742590(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy10_8(a2, a1);
  return a2;
}

unint64_t sub_1BA7425CC()
{
  unint64_t result;

  result = qword_1ED3B9940;
  if (!qword_1ED3B9940)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9940);
  }
  return result;
}

uint64_t sub_1BA742608(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA742630(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA742658()
{
  __int128 *v0;
  char *v1;
  _BYTE v2[136];

  sub_1BA7439D4(v0, (uint64_t)v2);
  v1 = (char *)sub_1BA7426C0 + 4 * byte_1BB93A688[sub_1BAB05900((uint64_t)v2)];
  __asm { BR              X10 }
}

void sub_1BA7426C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (uint64_t *)sub_1BAB0593C(v0 + 200);
  v5 = v4[1];
  sub_1BA742954(v2, *v4);
  if (!v1)
  {
    v6 = *(_QWORD *)(v0 + 56);
    sub_1BA742954(v2, v5);
    v7 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 72) = v6;
    *(_QWORD *)(v0 + 80) = v7;
    sub_1BAE90170(v0 + 72);
    sub_1BA7439D4((__int128 *)(v0 + 72), v3);
  }
}

void sub_1BA742954(uint64_t a1, uint64_t a2)
{
  sub_1BA742998(a1, a2);
}

void sub_1BA742998(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7429EC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

void sub_1BA742A28(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = swift_allocObject();
  v3(v4, v8);
  if (v2)
  {
    swift_deallocUninitializedObject();
  }
  else
  {
    v3(v4, v7);
    v10 = *(_QWORD *)(v5 - 128);
    *(_QWORD *)(v9 + 16) = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v9 + 24) = v10;
    *a2 = v9 | 0x3000000000000000;
  }
  JUMPOUT(0x1BA7429F8);
}

void sub_1BA743168(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  double v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  _OWORD *v47;
  id v48;
  char v49;
  id v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[25];
  uint64_t v59;
  _QWORD v60[16];
  __int128 v61[8];
  _QWORD v62[17];

  v11 = a2 + 64;
  sub_1BA744E38(a2 + 64, (uint64_t)v62, (unint64_t *)&qword_1ED3B30E8);
  v12 = a1;
  sub_1BA6A0C50(v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
  v13 = sub_1BA7437A4(v62, a3);
  if (v5)
  {

    swift_release();
    sub_1BA6A0C50(v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);

    swift_release();
    return;
  }
  v14 = v13;
  v49 = a4;
  sub_1BA6A0C50(v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  sub_1BA744E38(v11, (uint64_t)v60, (unint64_t *)&qword_1ED3B30E8);
  sub_1BA744E38((uint64_t)v60, (uint64_t)v61, (unint64_t *)&qword_1ED3B30E8);
  if (sub_1BAB05F98((uint64_t)v61) == 1)
  {
    v51 = v14;
    v15 = v14;
    v16 = 0;
    goto LABEL_5;
  }
  sub_1BA7439D4(v61, (uint64_t)&v52);
  v21 = sub_1BAB05900((uint64_t)&v52);
  v22 = sub_1BAB0593C((uint64_t)&v52);
  if (!v21)
  {
    v23 = *(_QWORD *)(v22 + 8);
    v14;
    sub_1BA6A0C50(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    swift_retain();
    sub_1BA742954(a3, v23);
    v51 = v14;
    swift_release();
    FormatColor.color.getter();
    v38 = v37;
    swift_release();
    sub_1BA6A0C50(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    v16 = v38;
LABEL_5:
    v17 = *(_QWORD *)(a2 + 536);
    v18 = *(_QWORD *)(a2 + 544);
    v50 = v16;
    v19 = v16;
    if (v17 == 9)
      goto LABEL_6;
LABEL_13:
    __asm { BR              X10 }
  }
  v24 = (void *)objc_opt_self();
  v51 = v14;
  v25 = v14;
  v26 = objc_msgSend(v24, sel_clearColor);
  v17 = *(_QWORD *)(a2 + 536);
  v18 = *(_QWORD *)(a2 + 544);
  v50 = v26;
  v27 = v26;
  if (v17 != 9)
    goto LABEL_13;
LABEL_6:
  v47 = a5;
  v20 = 0;
  if (v17 != 9 && (v18 & 0xF000000000000007) != 0xF000000000000007)
  {
    sub_1BA5E7FF4(v18);
    sub_1BA742954(a3, v18);
    sub_1BA6E8A90(v17, v18);
    v59 = v52;
    FormatColor.color.getter();
    v20 = v28;
    swift_release();
  }
  v29 = *(_QWORD *)(a2 + 520);
  v30 = v29 == 9 || v29 == 8;
  v31 = v30;
  v46 = v31;
  if (v30)
    v45 = 0;
  else
    v45 = qword_1BB8AA9D0[(char)v29];
  v32 = *(_QWORD *)(a2 + 528);
  v48 = v20;
  v33 = 0;
  if (v29 != 9 && (v32 & 0xF000000000000007) != 0xF000000000000007)
  {
    sub_1BA6E8A60(v29, v32);
    sub_1BA742954(a3, v32);
    sub_1BA6E8A90(v29, v32);
    v59 = v52;
    FormatColor.color.getter();
    v33 = v34;
    swift_release();
  }
  v35 = *(_QWORD *)(a2 + 560);
  v36 = v33;
  if (v35)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v39 = sub_1BA72BED4(v52, v35);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v39 = 0.0;
  }
  v40 = *(_QWORD *)(a2 + 496);
  v41 = *(_BYTE *)(a2 + 504);
  *(_QWORD *)&v52 = v12;
  *((_QWORD *)&v52 + 1) = v51;
  v53 = (unint64_t)v50;
  LOBYTE(v54) = 1;
  *((_QWORD *)&v54 + 1) = v20;
  *(_QWORD *)&v55 = v45;
  BYTE8(v55) = v46;
  *(_QWORD *)&v56 = v33;
  *((_QWORD *)&v56 + 1) = v40;
  LOBYTE(v57) = v41;
  *((double *)&v57 + 1) = v39;
  v58[0] = v35 == 0;
  *(_QWORD *)&v58[8] = a2;
  *(_QWORD *)&v58[16] = a3;
  v58[24] = v49;
  sub_1BA741FD8((uint64_t)&v52);

  sub_1BA741B54((uint64_t)&v52);
  v42 = v57;
  v47[4] = v56;
  v47[5] = v42;
  v47[6] = *(_OWORD *)v58;
  *(_OWORD *)((char *)v47 + 105) = *(_OWORD *)&v58[9];
  v43 = v53;
  *v47 = v52;
  v47[1] = v43;
  v44 = v55;
  v47[2] = v54;
  v47[3] = v44;
}

void sub_1BA743750()
{
  JUMPOUT(0x1BA7432D8);
}

void sub_1BA74375C()
{
  JUMPOUT(0x1BA7432D8);
}

void sub_1BA743768()
{
  JUMPOUT(0x1BA7432D8);
}

void sub_1BA743774()
{
  JUMPOUT(0x1BA7432D8);
}

void sub_1BA743780()
{
  JUMPOUT(0x1BA7432D8);
}

void sub_1BA74378C()
{
  JUMPOUT(0x1BA7432D8);
}

void sub_1BA743798()
{
  JUMPOUT(0x1BA7432D8);
}

id sub_1BA7437A4(_QWORD *a1, uint64_t a2)
{
  return sub_1BA7437B8(a1, a2);
}

id sub_1BA7437B8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v11[16];
  _BYTE v12[128];
  __int128 v13[8];
  __int128 v14[8];
  _BYTE v15[128];
  _BYTE v16[128];
  uint64_t v17;

  sub_1BA7443B4((uint64_t)a1, (uint64_t)v12);
  sub_1BA7443B4((uint64_t)v12, (uint64_t)v16);
  sub_1BA7443B4((uint64_t)a1, (uint64_t)v13);
  if (sub_1BAB05F98((uint64_t)v13) == 1)
    return 0;
  sub_1BA7439D4(v13, (uint64_t)v14);
  sub_1BA7439D4(v14, (uint64_t)v15);
  v5 = sub_1BAB05900((uint64_t)v15);
  if ((v5 - 1) >= 2)
  {
    if (v5)
    {
      v7 = *(_QWORD *)sub_1BAB0593C((uint64_t)v15);
      sub_1BA7443B4((uint64_t)v16, (uint64_t)v11);
      sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
      sub_1BA7EE238(a2, v7);
      if (!v2)
        __asm { BR              X10 }
      sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    }
    else
    {
      v6 = *(_QWORD *)sub_1BAB0593C((uint64_t)v15);
      v17 = v6;
      sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
      sub_1BA744388((uint64_t)&v17);
      sub_1BA742954(a2, v6);
      if (v2)
      {
        sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
        sub_1BA74435C((uint64_t)&v17);
      }
      else
      {
        sub_1BA74435C((uint64_t)&v17);
        FormatColor.color.getter();
        a2 = v8;
        sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
        swift_release();
      }
    }
  }
  else
  {
    sub_1BAB0593C((uint64_t)v15);
    return objc_msgSend((id)objc_opt_self(), sel_blackColor);
  }
  return (id)a2;
}

uint64_t sub_1BA7439D4(__int128 *a1, uint64_t a2)
{
  __swift_memcpy128_8(a2, a1);
  return a2;
}

void FormatColor.color.getter()
{
  __asm { BR              X11 }
}

id sub_1BA743A50()
{
  return objc_msgSend((id)objc_opt_self(), sel_clearColor);
}

void sub_1BA743A8C()
{
  FormatColor.color.getter();
}

id sub_1BA743C80@<X0>(uint64_t a1@<X8>)
{
  double v1;

  if (*(_BYTE *)(a1 + 32))
    v1 = 1.0;
  else
    v1 = *(double *)(a1 + 24);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, *(double *)(a1 + 16), v1);
}

id sub_1BA743CD0@<X0>(uint64_t a1@<X8>)
{
  double v1;

  if (*(_BYTE *)(a1 + 48))
    v1 = 1.0;
  else
    v1 = *(double *)(a1 + 40);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(double *)(a1 + 16) / 255.0, *(double *)(a1 + 24) / 255.0, *(double *)(a1 + 32) / 255.0, v1);
}

void FormatSystemColor.color.getter()
{
  __asm { BR              X10 }
}

id sub_1BA743D68()
{
  return objc_msgSend((id)objc_opt_self(), sel_whiteColor);
}

id sub_1BA743D8C()
{
  return objc_msgSend((id)objc_opt_self(), sel_blackColor);
}

id sub_1BA743DB0()
{
  return objc_msgSend((id)objc_opt_self(), sel_clearColor);
}

id sub_1BA743DD4()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
}

id sub_1BA743DF8()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
}

id sub_1BA743E1C()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
}

id sub_1BA743E40()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
}

id sub_1BA743E64()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
}

id sub_1BA743E88()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemPinkColor);
}

id sub_1BA743EAC()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemPurpleColor);
}

id sub_1BA743ED0()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemMintColor);
}

id sub_1BA743EF4()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemTealColor);
}

id sub_1BA743F18()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
}

id sub_1BA743F3C()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemIndigoColor);
}

id sub_1BA743F60()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemBrownColor);
}

id sub_1BA743F84()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
}

id sub_1BA743FA8()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
}

id sub_1BA743FCC()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
}

id sub_1BA743FF0()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
}

id sub_1BA744014()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
}

id sub_1BA744038()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGray6Color);
}

id sub_1BA74405C()
{
  return objc_msgSend((id)objc_opt_self(), sel_labelColor);
}

id sub_1BA744080()
{
  return objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
}

id sub_1BA7440A4()
{
  return objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
}

id sub_1BA7440C8()
{
  return objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
}

id sub_1BA7440EC()
{
  return objc_msgSend((id)objc_opt_self(), sel_linkColor);
}

id sub_1BA744110()
{
  return objc_msgSend((id)objc_opt_self(), sel_placeholderTextColor);
}

id sub_1BA744134()
{
  return objc_msgSend((id)objc_opt_self(), sel_separatorColor);
}

id sub_1BA744158()
{
  return objc_msgSend((id)objc_opt_self(), sel_opaqueSeparatorColor);
}

id sub_1BA74417C()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
}

id sub_1BA7441A0()
{
  return objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
}

id sub_1BA7441C4()
{
  return objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
}

id sub_1BA7441E8()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
}

id sub_1BA74420C()
{
  return objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
}

id sub_1BA744230()
{
  return objc_msgSend((id)objc_opt_self(), sel_tertiarySystemGroupedBackgroundColor);
}

id sub_1BA744254()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemFillColor);
}

id sub_1BA744278()
{
  return objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
}

id sub_1BA74429C()
{
  return objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
}

id sub_1BA7442C0()
{
  return objc_msgSend((id)objc_opt_self(), sel_quaternarySystemFillColor);
}

id sub_1BA7442E4()
{
  if (qword_1EF2A6C78 != -1)
    swift_once();
  return *(id *)(qword_1EF3D04F0 + 16);
}

uint64_t sub_1BA74435C(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1BA744388(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1BA7443B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7443F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA7443F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B30E8)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B30E8);
  }
}

unint64_t sub_1BA74444C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA74447C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA7444AC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, &qword_1ED3C0568, (uint64_t)&type metadata for FormatColorProcessor);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA7444D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3B9F40, (uint64_t)&type metadata for FormatStringListSelector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA74466C(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 25;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10])
      memmove(v15, v16, 8 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7447E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA744804(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA744804(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA744980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

id sub_1BA7449BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  id (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;

  v4 = *(_BYTE *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v16 = sub_1BA9B00A8;
  v17 = v6;
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1BA61387C;
  v15 = &block_descriptor_260;
  v8 = _Block_copy(&v12);
  v9 = v3;
  v10 = objc_msgSend(v7, sel_initWithDynamicProvider_, v8, v12, v13);
  _Block_release(v8);
  swift_release();
  return v10;
}

uint64_t sub_1BA744E38(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BA4CF8F4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BA744E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void (*v13)(unsigned __int8 *, _QWORD);
  void (*v14)(unsigned __int8 *, _QWORD);
  void (*v15)(unsigned __int8 *, _QWORD);
  void (*v16)(unsigned __int8 *, _QWORD);
  void (*v17)(unsigned __int8 *, _QWORD);
  void (*v18)(unsigned __int8 *, _QWORD);
  void (*v19)(unsigned __int8 *, _QWORD);
  void (*v20)(unsigned __int8 *, _QWORD);
  void (*v21)(unsigned __int8 *, _QWORD);
  void (*v22)(unsigned __int8 *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void **v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  unsigned __int8 v47[32];
  _BYTE v48[16];
  id v49;
  _BYTE v50[16];
  id v51;
  _BYTE v52[16];
  _QWORD v53[2];
  id v54;
  id v55;

  v40 = a1;
  v44 = a2;
  v37 = sub_1BB86C22C();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C44C8, (void (*)(uint64_t))MEMORY[0x1E0CAF460]);
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v33 - v5;
  v43 = sub_1BB86C37C();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v34 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v33 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  sub_1BB86C370();
  swift_getKeyPath();
  swift_getKeyPath();
  v12 = *v2;
  v39 = v2 + 15;
  v53[0] = v12;
  v38 = v12;
  sub_1BB86C184();
  sub_1BA4A2870(&qword_1ED3C44A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1A00], MEMORY[0x1E0DC19F8]);
  v13 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745A20();
  sub_1BA745B28();
  sub_1BB86C49C();
  v13(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA745768((uint64_t)(v2 + 1), (uint64_t)&v55);
  sub_1BA745768((uint64_t)&v55, (uint64_t)v53);
  sub_1BA745810(&v55);
  v14 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745BF4();
  sub_1BB86C49C();
  v14(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA745768((uint64_t)(v2 + 2), (uint64_t)&v54);
  sub_1BA745768((uint64_t)&v54, (uint64_t)v53);
  sub_1BA745810(&v54);
  v15 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745C38();
  sub_1BB86C49C();
  v15(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA744E38((uint64_t)(v2 + 9), (uint64_t)v53, &qword_1ED3B0778);
  sub_1BA744E38((uint64_t)v53, (uint64_t)v52, &qword_1ED3B0778);
  v16 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745AE4();
  sub_1BB86C49C();
  v16(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA745838((uint64_t)(v2 + 3), (uint64_t)v52);
  sub_1BA745838((uint64_t)v52, (uint64_t)v50);
  v17 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745C7C();
  sub_1BB86C49C();
  v17(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA745768((uint64_t)(v2 + 5), (uint64_t)&v51);
  sub_1BA745768((uint64_t)&v51, (uint64_t)v50);
  sub_1BA745810(&v51);
  v18 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745CC0();
  sub_1BB86C49C();
  v18(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA745838((uint64_t)(v2 + 6), (uint64_t)v50);
  sub_1BA745838((uint64_t)v50, (uint64_t)v48);
  v19 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745B6C();
  sub_1BB86C49C();
  v19(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA745768((uint64_t)(v2 + 8), (uint64_t)&v49);
  sub_1BA745768((uint64_t)&v49, (uint64_t)v48);
  sub_1BA745810(&v49);
  v20 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745BB0();
  sub_1BB86C49C();
  v20(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA744E38((uint64_t)(v2 + 11), (uint64_t)v48, &qword_1ED3B0778);
  sub_1BA744E38((uint64_t)v48, (uint64_t)v46, &qword_1ED3B0778);
  v21 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745D48();
  sub_1BB86C49C();
  v21(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v45 = v40;
  v46[0] = sub_1BA74588C((void (*)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA7F5CCC);
  v22 = (void (*)(unsigned __int8 *, _QWORD))sub_1BB86C358();
  sub_1BA745D04();
  sub_1BB86C49C();
  v22(v47, 0);
  swift_release();
  sub_1BA744E38((uint64_t)v39, (uint64_t)v46, &qword_1ED3CDAD0);
  sub_1BA744E38((uint64_t)v46, (uint64_t)v47, &qword_1ED3CDAD0);
  if (v47[0] == 18)
  {
    v23 = v42;
    v24 = (uint64_t)v41;
    v25 = v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, 1, 1, v43);
LABEL_4:
    sub_1BA745A98(v24);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v44, v11, v25);
  }
  v24 = (uint64_t)v41;
  sub_1BAFC8344((uint64_t)v38, v47[0]);
  v23 = v42;
  v25 = v43;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v24, 0, 1, v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v25) == 1)
    goto LABEL_4;
  v27 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v33, v24, v25);
  v28 = v34;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v11, v25);
  v29 = v36;
  v30 = v35;
  v31 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E0CAEFE0], v37);
  sub_1BB86C364();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32(v28, v25);
  v32(v27, v25);
  return ((uint64_t (*)(char *, uint64_t))v32)(v11, v25);
}

uint64_t sub_1BA745768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7457AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA7457AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFA08)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9990);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFA08);
  }
}

id *sub_1BA745810(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_1BA745838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3CF8E8, type metadata accessor for NSUnderlineStyle);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BA74588C(void (*a1)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  void **v2;
  id v4;
  void *v5;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _BYTE v30[200];
  _OWORD v31[8];
  uint64_t v32;
  double v33;
  char v34;

  v2 = (void **)v1;
  sub_1BA744E38(*(_QWORD *)(v1 + 104) + 296, (uint64_t)v30, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v30, (uint64_t)v31, (unint64_t *)&qword_1ED3B6270);
  if (sub_1BA92287C((uint64_t)v31) == 1)
    return 0;
  v27 = v31[6];
  v28 = v31[7];
  v29 = v32;
  v23 = v31[2];
  v24 = v31[3];
  v25 = v31[4];
  v26 = v31[5];
  v21 = v31[0];
  v22 = v31[1];
  FormatParagraphStyle.paragraphStyle.getter();
  v4 = v5;
  if ((v34 & 1) == 0)
  {
    v6 = v33;
    v7 = v5;
    a1(v7, v8, v9, v10, v11, v12, v13, v14, v21, *((_QWORD *)&v21 + 1), v22, *((_QWORD *)&v22 + 1), v23, *((_QWORD *)&v23 + 1), v24, *((_QWORD *)&v24 + 1), v25, *((_QWORD *)&v25 + 1), v26,
      *((_QWORD *)&v26 + 1),
      v27,
      *((_QWORD *)&v27 + 1),
      v28,
      *((_QWORD *)&v28 + 1),
      v29);
    v4 = v7;
    if (v15)
    {
      v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
      objc_msgSend(v4, sel_setParagraphStyle_, v7);

      v16 = *v2;
      v17 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_ts_tightenedLineSpacingForString_minimumLineSpacingMultiple_, v17, v6);
      v19 = v18;

      objc_msgSend(v4, sel_setLineSpacing_, v19);
    }

  }
  return v4;
}

void sub_1BA745A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C44D8)
  {
    sub_1BB86C184();
    sub_1BA4A2870(&qword_1ED3C44A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1A00], MEMORY[0x1E0DC19F8]);
    v0 = sub_1BB86C4A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C44D8);
  }
}

uint64_t sub_1BA745A98(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1ED3C44C8, (void (*)(uint64_t))MEMORY[0x1E0CAF460]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA745AE4()
{
  unint64_t result;

  result = qword_1ED3C44A0;
  if (!qword_1ED3C44A0)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1978], MEMORY[0x1E0DC1988]);
    atomic_store(result, (unint64_t *)&qword_1ED3C44A0);
  }
  return result;
}

unint64_t sub_1BA745B28()
{
  unint64_t result;

  result = qword_1ED3C4498;
  if (!qword_1ED3C4498)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1948], MEMORY[0x1E0DC1958]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4498);
  }
  return result;
}

unint64_t sub_1BA745B6C()
{
  unint64_t result;

  result = qword_1ED3C4490;
  if (!qword_1ED3C4490)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1930], MEMORY[0x1E0DC1940]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4490);
  }
  return result;
}

unint64_t sub_1BA745BB0()
{
  unint64_t result;

  result = qword_1ED3C4488;
  if (!qword_1ED3C4488)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1918], MEMORY[0x1E0DC1928]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4488);
  }
  return result;
}

unint64_t sub_1BA745BF4()
{
  unint64_t result;

  result = qword_1ED3C4480;
  if (!qword_1ED3C4480)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC18E8], MEMORY[0x1E0DC18F8]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4480);
  }
  return result;
}

unint64_t sub_1BA745C38()
{
  unint64_t result;

  result = qword_1ED3C4470;
  if (!qword_1ED3C4470)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC18D0], MEMORY[0x1E0DC18E0]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4470);
  }
  return result;
}

unint64_t sub_1BA745C7C()
{
  unint64_t result;

  result = qword_1ED3C4468;
  if (!qword_1ED3C4468)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC18B8], MEMORY[0x1E0DC18C8]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4468);
  }
  return result;
}

unint64_t sub_1BA745CC0()
{
  unint64_t result;

  result = qword_1ED3C4460;
  if (!qword_1ED3C4460)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC18A0], MEMORY[0x1E0DC18B0]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4460);
  }
  return result;
}

unint64_t sub_1BA745D04()
{
  unint64_t result;

  result = qword_1ED3C4458;
  if (!qword_1ED3C4458)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1888], MEMORY[0x1E0DC1898]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4458);
  }
  return result;
}

unint64_t sub_1BA745D48()
{
  unint64_t result;

  result = qword_1ED3C4450;
  if (!qword_1ED3C4450)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1870], MEMORY[0x1E0DC1880]);
    atomic_store(result, (unint64_t *)&qword_1ED3C4450);
  }
  return result;
}

uint64_t sub_1BA745D8C(_QWORD *a1, _QWORD *a2)
{
  return sub_1BA9AFCF8(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1BA9A8ACC);
}

void sub_1BA745DA8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1BA745DF0(uint64_t a1, unint64_t a2)
{
  unint64_t *v2;

  *v2 = a2;
  return sub_1BA74444C(a2);
}

uint64_t sub_1BA745F88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BA745FC0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  v11[5] = a1;
  v11[1] = a3;
  v11[3] = a5;
  v11[4] = a2;
  v6 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v6);
  v11[2] = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v10);
  __asm { BR              X10 }
}

uint64_t sub_1BA7460FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v0 + 48);
  result = sub_1BA70DDB0(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), v1);
  if (!v3)
  {
    *(_BYTE *)(v0 + 64) = *(_QWORD *)(v0 + 40);
    sub_1BAAC3F70();
    return sub_1BA4A2E80(v1, type metadata accessor for FeedHeadline);
  }
  return result;
}

id sub_1BA74658C()
{
  unsigned __int8 *v0;

  return ((id (*)())((char *)sub_1BA7465A8 + 4 * byte_1BB937960[*v0]))();
}

id sub_1BA7465A8()
{
  return (id)*MEMORY[0x1E0DC4A88];
}

id sub_1BA7465B8()
{
  return (id)*MEMORY[0x1E0DC4A90];
}

id sub_1BA7465C8()
{
  return (id)*MEMORY[0x1E0DC4A98];
}

id sub_1BA7465D8()
{
  return (id)*MEMORY[0x1E0DC4AA0];
}

id sub_1BA7465E8()
{
  return (id)*MEMORY[0x1E0DC4AB8];
}

id sub_1BA7465F8()
{
  return (id)*MEMORY[0x1E0DC4AD0];
}

id sub_1BA746608()
{
  return (id)*MEMORY[0x1E0DC4B10];
}

id sub_1BA746618()
{
  return (id)*MEMORY[0x1E0DC4AE8];
}

id sub_1BA746628()
{
  return (id)*MEMORY[0x1E0DC4B50];
}

id sub_1BA746638()
{
  return (id)*MEMORY[0x1E0DC4B58];
}

id sub_1BA746648()
{
  return (id)*MEMORY[0x1E0DC4B60];
}

uint64_t sub_1BA746658()
{
  return sub_1BB872970();
}

uint64_t sub_1BA746674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30[2];
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v34 = a7;
  v37 = a6;
  v30[0] = a4;
  v30[1] = a5;
  v10 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v10);
  v31 = (uint64_t *)((char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatOption();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v20 = a3;
  FormatOptionCollection.subscript.getter(a2, a3, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA856968);
    v21 = (uint64_t)v31;
    *v31 = a2;
    *(_QWORD *)(v21 + 8) = v20;
    swift_storeEnumTagMultiPayload();
    v22 = *(_BYTE *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    sub_1BA689E84();
    v23 = (void *)swift_allocError();
    sub_1BA4C2DD8(v21, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if ((v22 & 1) != 0)
    {
      v35 = 0x3A676E697373694DLL;
      v36 = 0xEB000000007B7B20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v25);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v26);
      v19 = v35;
      sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return v19;
    }
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA8569CC((uint64_t)v14, (uint64_t)v18);
    swift_retain();
    v19 = v33;
    v27 = v32;
    sub_1BA711ECC();
    swift_release();
    if (!v27)
    {
      sub_1BA7469BC(v35, a2, a3, v30[0], v19);
      v19 = v28;
      swift_release();
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v19;
}

void sub_1BA7469BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BA7469E8(a1, a2, a3, a4, a5, (uint64_t)sub_1BA7469BC, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BA7469E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD v36[35];

  v36[8] = a8;
  v36[19] = a5;
  v36[4] = a3;
  v36[3] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v10);
  v36[12] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v36[16] = (char *)v36 - v13;
  v14 = sub_1BB86BFF8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v36[7] = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v18);
  v36[6] = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v36[20] = (char *)v36 - v21;
  MEMORY[0x1E0C80A78](v22);
  v36[11] = (char *)v36 - v23;
  MEMORY[0x1E0C80A78](v24);
  v36[18] = (char *)v36 - v25;
  v26 = sub_1BB86C67C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v36[5] = (char *)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v36[21] = (char *)v36 - v30;
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  v36[22] = (char *)v36 - v33;
  v34 = (char *)sub_1BA746CA8 + 4 * word_1BB9081B8[a1 >> 60];
  v36[10] = a4;
  v36[15] = v14;
  v36[9] = v15;
  v36[14] = v35;
  v36[13] = v27;
  __asm { BR              X10 }
}

uint64_t sub_1BA746CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD v41[16];

  *(_QWORD *)(v5 - 184) = v0;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v5 - 152, v5 - 184);
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v5 - 256) = v6;
  if (!v6)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v5 - 184), (_OWORD *)(v5 - 120));
    __swift_destroy_boxed_opaque_existential_1(v5 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v5 - 120, v5 - 184);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1(v5 - 120);
      return *(_QWORD *)(v5 - 216);
    }
    else
    {
      v33 = type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v35 = v34;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 120), *(_QWORD *)(v5 - 96));
      swift_getDynamicType();
      v36 = *(_QWORD *)(v5 - 400);
      swift_bridgeObjectRetain();
      v37 = sub_1BB874734();
      *v35 = *(_QWORD *)(v5 - 408);
      v35[1] = v36;
      v35[2] = 0x676E69727453;
      v35[3] = 0xE600000000000000;
      v35[4] = v37;
      v35[5] = v38;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1(v5 - 120);
    }
    return v33;
  }
  swift_bridgeObjectRetain();
  v7 = 0;
  *(_QWORD *)(v5 - 344) = MEMORY[0x1E0DEE9B8] + 8;
  v8 = *(_QWORD *)(v5 - 272);
  while (1)
  {
    v11 = *(_QWORD *)(v3 + 8 * v7 + 32);
    if (v11)
      break;
    *(_QWORD *)(v5 - 248) = 0;
    *(_QWORD *)(v5 - 240) = 0xE000000000000000;
    sub_1BB873E34();
    v9 = *(_QWORD *)(v5 - 248);
    v10 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v5 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 - 216) = v9;
    *(_QWORD *)(v5 - 208) = v10;
LABEL_4:
    ++v7;
    __swift_destroy_boxed_opaque_existential_1(v5 - 184);
    sub_1BA76EAE0((_OWORD *)(v5 - 216), (_OWORD *)(v5 - 184));
    if (*(_QWORD *)(v5 - 256) == v7)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v5 - 184, v5 - 248);
  swift_bridgeObjectRetain();
  v12 = swift_dynamicCast();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v12)
  {
    v13(v8, 0, 1, v4);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    if (v14(v8, 1, v4) == 1)
      goto LABEL_26;
    v15 = v3;
    v16 = v8;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v18 = *(_QWORD *)(v5 - 264);
    v17(v18, v16, v4);
    *(_QWORD *)(v5 - 192) = v4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v5 - 216));
    *(_QWORD *)(v5 - 248) = *(_QWORD *)(v5 - 280);
    if (*(_QWORD *)(v11 + 16))
    {
      *(_QWORD *)(v5 - 288) = boxed_opaque_existential_0;
      *(_QWORD *)(v5 - 304) = v17;
      v20 = *(_QWORD *)(v5 - 336);
      sub_1BB86BF74();
      v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
      v22 = v2;
      v23 = *(_QWORD *)(v5 - 312);
      if (v21(v20, 1, v23) != 1)
      {
        v25 = *(_QWORD *)(v5 - 376);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v25, v20, v23);
        v26 = sub_1BB86BF38();
        if (v26)
          v27 = v26;
        else
          v27 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v26);
        v41[2] = v5 - 248;
        v28 = *(_QWORD *)(v5 - 296);
        v29 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v5 - 368), (uint64_t)v41, v11);
        *(_QWORD *)(v5 - 296) = v28;
        *(_QWORD *)(v5 - 72) = v27;
        sub_1BA7F0E18(v29);
        sub_1BB86BF44();
        v30 = *(_QWORD *)(v5 - 384);
        sub_1BB86BF80();
        v31 = v30;
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v23);
        v1 = *(_QWORD *)(v5 - 328);
        v32 = *(_QWORD *)(v5 - 392);
        v4 = *(_QWORD *)(v5 - 320);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v32, v18, v4);
        if (v14(v31, 1, v4) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 - 304))(*(_QWORD *)(v5 - 288), v32, v4);
          sub_1BA6AA068(v31, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v32, v4);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 - 304))(*(_QWORD *)(v5 - 288), v31, v4);
        }
        v3 = *(_QWORD *)(v5 - 352);
        v2 = *(_QWORD *)(v5 - 360);
        v8 = *(_QWORD *)(v5 - 272);
        v24 = *(_QWORD *)(v5 - 264);
        goto LABEL_20;
      }
      sub_1BA6AA068(v20, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v1 = *(_QWORD *)(v5 - 328);
      v4 = *(_QWORD *)(v5 - 320);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 16))(*(_QWORD *)(v5 - 288), v18, v4);
      v2 = v22;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v18, v4);
    }
    v8 = *(_QWORD *)(v5 - 272);
    v24 = v18;
    v3 = v15;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v24, v4);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v13(v8, 1, 1, v4);
LABEL_26:
  sub_1BA6AA068(v8, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  v33 = type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v39 = 5001813;
  v39[1] = 0xE300000000000000;
  v39[2] = 7958081;
  v39[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v5 - 184);
  __swift_destroy_boxed_opaque_existential_1(v5 - 152);
  swift_bridgeObjectRelease();
  return v33;
}

void sub_1BA7479B0(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB318FC0(a1, a2, a3, a4, a5, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

uint64_t sub_1BA747A10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1BA747A4C()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

void sub_1BA747B08(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(v1 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)v1 = v2;
}

void sub_1BA747D30()
{
  JUMPOUT(0x1BA747D3CLL);
}

void sub_1BA747D4C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  v1[3] = &type metadata for FormatVideoPlayerContent;
  *v1 = v2;
  JUMPOUT(0x1BA747D64);
}

UIColor __swiftcall UIColor.init(hex:)(Swift::String hex)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  UIColor result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  unsigned __int8 v19;
  uint64_t *p_aBlock;
  int v21;
  unsigned __int8 v22;
  id v23;
  id v24;
  void *v25;
  char v26;
  uint64_t aBlock;
  uint64_t v28;
  id (*v29)(uint64_t, void *);
  void *v30;
  id (*v31)();
  uint64_t v32;

  v1 = sub_1BA7480A8(hex._countAndFlagsBits, (unint64_t)hex._object);
  v3 = v2;
  result.super.isa = (Class)swift_bridgeObjectRelease();
  v5 = HIBYTE(v3) & 0xF;
  v6 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    LODWORD(v1) = sub_1BB0A8420(v1, v3, 16);
    v10 = v26;
    goto LABEL_48;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v1 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1BB873D80();
    LODWORD(v1) = sub_1BB0A8638(v8, v6, 16);
    v10 = v9 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return (UIColor)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, (double)BYTE3(v1) / 255.0, (double)BYTE2(v1) / 255.0, (double)BYTE1(v1) / 255.0, (double)v1 / 255.0);
LABEL_51:
    v24 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v31 = sub_1BB0A81C4;
    v32 = 0;
    aBlock = MEMORY[0x1E0C809B0];
    v28 = 1107296256;
    v29 = sub_1BA61387C;
    v30 = &block_descriptor_39;
    v25 = _Block_copy(&aBlock);
    v23 = objc_msgSend(v24, sel_initWithDynamicProvider_, v25);
    _Block_release(v25);
    return (UIColor)v23;
  }
  aBlock = v1;
  v28 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v1 == 43)
  {
    if (v5)
    {
      v16 = v5 - 1;
      if (v16)
      {
        v1 = 0;
        v17 = (unsigned __int8 *)&aBlock + 1;
        while (1)
        {
          v18 = *v17;
          v19 = v18 - 48;
          if ((v18 - 48) >= 0xA)
          {
            if ((v18 - 65) < 6)
            {
              v19 = v18 - 55;
            }
            else
            {
              if ((v18 - 97) > 5)
                goto LABEL_47;
              v19 = v18 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15)
            break;
          v15 = __OFADD__(16 * v1, v19);
          v1 = 16 * v1 + v19;
          if (v15)
            break;
          ++v17;
          if (!--v16)
          {
LABEL_46:
            v10 = 0;
            goto LABEL_48;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else
  {
    if (v1 != 45)
    {
      if (v5)
      {
        v1 = 0;
        p_aBlock = &aBlock;
        while (1)
        {
          v21 = *(unsigned __int8 *)p_aBlock;
          v22 = v21 - 48;
          if ((v21 - 48) >= 0xA)
          {
            if ((v21 - 65) < 6)
            {
              v22 = v21 - 55;
            }
            else
            {
              if ((v21 - 97) > 5)
                goto LABEL_47;
              v22 = v21 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15)
            break;
          v15 = __OFADD__(16 * v1, v22);
          v1 = 16 * v1 + v22;
          if (v15)
            break;
          p_aBlock = (uint64_t *)((char *)p_aBlock + 1);
          if (!--v5)
            goto LABEL_46;
        }
      }
      goto LABEL_47;
    }
    if (v5)
    {
      v11 = v5 - 1;
      if (v11)
      {
        v1 = 0;
        v12 = (unsigned __int8 *)&aBlock + 1;
        while (1)
        {
          v13 = *v12;
          v14 = v13 - 48;
          if ((v13 - 48) >= 0xA)
          {
            if ((v13 - 65) < 6)
            {
              v14 = v13 - 55;
            }
            else
            {
              if ((v13 - 97) > 5)
                break;
              v14 = v13 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15)
            break;
          v15 = __OFSUB__(16 * v1, v14);
          v1 = 16 * v1 - v14;
          if (v15)
            break;
          ++v12;
          if (!--v11)
            goto LABEL_46;
        }
      }
LABEL_47:
      LODWORD(v1) = 0;
      v10 = 1;
      goto LABEL_48;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7480A8(uint64_t a1, unint64_t a2)
{
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v4 = sub_1BB872B5C();
  swift_bridgeObjectRetain();
  if ((v4 & 1) != 0)
  {
    v5 = sub_1BA9C0430(1uLL, a1, a2);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1BCCE334C](v5, v7, v9, v11);
    swift_bridgeObjectRelease();
  }
  if (sub_1BB872AB4() != 8)
  {
    if (sub_1BB872AB4() == 6)
    {
      v14 = a1;
LABEL_10:
      sub_1BB872AFC(v12);
      return v14;
    }
    if (sub_1BB872AB4() == 4)
    {
      sub_1BB872AE4();
      sub_1BB872B74();
      sub_1BB872AE4();
      sub_1BB872B74();
      sub_1BB872AE4();
      sub_1BB872B74();
      sub_1BB872AE4();
      sub_1BB872B74();
      swift_bridgeObjectRelease();
      v14 = 0;
      sub_1BB873CB4();
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      return v14;
    }
    if (sub_1BB872AB4() == 3)
    {
      sub_1BB872AE4();
      sub_1BB872B74();
      sub_1BB872AE4();
      sub_1BB872B74();
      sub_1BB872AE4();
      sub_1BB872B74();
      swift_bridgeObjectRelease();
      v14 = 0;
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      sub_1BB8728B0();
      sub_1BB8728B0();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  return a1;
}

void FormatParagraphStyle.paragraphStyle.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  __asm { BR              X9 }
}

void sub_1BA7485A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14, int a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  void *v37;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  double v43;
  double v44;
  double v45;

  objc_msgSend(v37, sel_setAlignment_, 2);
  if ((v42 & 1) != 0)
  {
    if ((v41 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(v37, sel_setFirstLineHeadIndent_, v43);
    if ((v41 & 1) != 0)
    {
LABEL_3:
      if ((v40 & 1) != 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  objc_msgSend(v37, sel_setHeadIndent_, v45);
  if ((v40 & 1) != 0)
  {
LABEL_5:
    objc_msgSend(v37, sel_setLineBreakMode_, qword_1BB8852F8[v39]);
    __asm { BR              X9 }
  }
LABEL_4:
  objc_msgSend(v37, sel_setTailIndent_, v44);
  goto LABEL_5;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedItemSupplementaryAttributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = (void *)a2[4];
      v17 = (void *)a2[5];
      a1[4] = v16;
      a1[5] = v17;
      v62 = (void *)a2[6];
      v63 = (void *)a2[7];
      a1[6] = v62;
      a1[7] = v63;
      v65 = (void *)a2[8];
      a1[8] = v65;
      v18 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v66 = (_QWORD *)((char *)a1 + v18);
      v19 = (char *)a2 + v18;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v20 = v15;
      v21 = v16;
      v22 = v17;
      v23 = v62;
      v24 = v63;
      v25 = v65;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v26 = *((_QWORD *)v19 + 1);
        *v66 = *(_QWORD *)v19;
        v66[1] = v26;
        v27 = *((_QWORD *)v19 + 2);
        swift_bridgeObjectRetain();
        if (v27 >= 0xB)
        {
          v31 = *((_QWORD *)v19 + 3);
          v32 = *((_QWORD *)v19 + 4);
          v66[2] = v27;
          v66[3] = v31;
          v66[4] = v32;
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v66 + 1) = *((_OWORD *)v19 + 1);
          v66[4] = *((_QWORD *)v19 + 4);
        }
        v33 = *((_QWORD *)v19 + 6);
        v66[5] = *((_QWORD *)v19 + 5);
        v66[6] = v33;
        v66[7] = *((_QWORD *)v19 + 7);
        sub_1BB074B08();
        v35 = *(int *)(v34 + 80);
        v36 = (char *)v66 + v35;
        v37 = &v19[v35];
        *v36 = *v37;
        v64 = (uint64_t)v66 + v35 + 8;
        v38 = *((_OWORD *)v37 + 2);
        *((_OWORD *)v36 + 2) = v38;
        v39 = v38;
        v40 = **(void (***)(uint64_t, char *, uint64_t))(v38 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v64, v37 + 8, v39);
        v41 = *((_QWORD *)v37 + 7);
        *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
        *((_QWORD *)v36 + 7) = v41;
        v42 = *((_QWORD *)v37 + 9);
        *((_QWORD *)v36 + 8) = *((_QWORD *)v37 + 8);
        *((_QWORD *)v36 + 9) = v42;
        *((_QWORD *)v36 + 10) = *((_QWORD *)v37 + 10);
        v36[88] = v37[88];
        *((_QWORD *)v36 + 12) = *((_QWORD *)v37 + 12);
        v43 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v44 = v43[13];
        v60 = &v37[v44];
        v61 = &v36[v44];
        v45 = sub_1BB86D8A0();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v59(v61, v60, v45);
        *(_QWORD *)&v36[v43[14]] = *(_QWORD *)&v37[v43[14]];
        *(_QWORD *)&v36[v43[15]] = *(_QWORD *)&v37[v43[15]];
        v36[v43[16]] = v37[v43[16]];
        *(_QWORD *)&v36[v43[17]] = *(_QWORD *)&v37[v43[17]];
        *(_QWORD *)&v36[v43[18]] = *(_QWORD *)&v37[v43[18]];
        *(_QWORD *)&v36[v43[19]] = *(_QWORD *)&v37[v43[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v28 = *(_QWORD *)v19;
        v29 = *(id *)v19;
        v30 = *((_QWORD *)v19 + 1);
        *v66 = v28;
        v66[1] = v30;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v47 = *(int *)(v46 + 48);
      v48 = (_OWORD *)((char *)a1 + v47);
      v49 = (_OWORD *)((char *)a2 + v47);
      v50 = v49[13];
      v48[12] = v49[12];
      v48[13] = v50;
      v51 = v49[15];
      v48[14] = v49[14];
      v48[15] = v51;
      v52 = v49[9];
      v48[8] = v49[8];
      v48[9] = v52;
      v53 = v49[11];
      v48[10] = v49[10];
      v48[11] = v53;
      v54 = v49[5];
      v48[4] = v49[4];
      v48[5] = v54;
      v55 = v49[7];
      v48[6] = v49[6];
      v48[7] = v55;
      v56 = v49[1];
      *v48 = *v49;
      v48[1] = v56;
      v57 = v49[3];
      v48[2] = v49[2];
      v48[3] = v57;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      v10 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v10;
      v11 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v11;
      v12 = a2[13];
      a1[12] = a2[12];
      a1[13] = v12;
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1BA748BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB66B870(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BA6F11B4, sub_1BA6F0790, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6F04E0, (void (*)(_QWORD))type metadata accessor for FormatTextNodeStyle, (void (*)(uint64_t))sub_1BA6E794C);
}

uint64_t sub_1BA748C14(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  BOOL v29;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);

  v10 = a3(0);
  MEMORY[0x1E0C80A78](v10);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v31 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 == *(_QWORD *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      v26 = 1;
    }
    else
    {
      v34 = v13;
      v35 = v12;
      v36 = a3;
      v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v31 = *(_QWORD *)(v12 + 72);
      v32 = a1;
      v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v19 = v17 - 1;
      v20 = v13;
      do
      {
        v21 = v33;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v33)(v16, a1 + v18, v10, v14);
        v22 = a2;
        v21(v20, a2 + v18, v10);
        v23 = a4;
        v24 = a4;
        v25 = a5;
        sub_1BA4A2870(v24, v36, a5);
        v26 = sub_1BB872958();
        v27 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v27(v20, v10);
        v27((uint64_t)v16, v10);
        v29 = v19-- != 0;
        if ((v26 & 1) == 0)
          break;
        v18 += v31;
        a5 = v25;
        a4 = v23;
        a2 = v22;
        a1 = v32;
      }
      while (v29);
    }
  }
  else
  {
    v26 = 0;
  }
  return v26 & 1;
}

unint64_t sub_1BA748DB8()
{
  unint64_t result;

  result = qword_1ED3B9990;
  if (!qword_1ED3B9990)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9990);
  }
  return result;
}

id _s8NewsFeed19FormatTextNodeStyleC18reapplyLineSpacing010attributedD07contextSo18NSAttributedStringCAH_AA0cE7ContextCtF_0(void *a1)
{
  uint64_t v1;
  id result;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD aBlock[6];
  _BYTE v14[200];
  _BYTE v15[152];
  uint64_t v16;
  char v17;

  sub_1BA744E38(v1 + 296, (uint64_t)v14, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v14, (uint64_t)v15, (unint64_t *)&qword_1ED3B6270);
  if (sub_1BA92287C((uint64_t)v15) == 1 || (v17 & 1) != 0)
    return a1;
  v3 = v16;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, a1);
  v5 = *MEMORY[0x1E0DC1178];
  v6 = objc_msgSend(a1, sel_length);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = v3;
  v7[4] = v4;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BB4EEBA8;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1BA5D1CC0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA5D1C30;
  aBlock[3] = &block_descriptor_78;
  v9 = _Block_copy(aBlock);
  v10 = a1;
  v11 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_enumerateAttribute_inRange_options_usingBlock_, v5, 0, v6, 0x100000, v9);
  _Block_release(v9);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = (id)swift_release();
  if ((v5 & 1) == 0)
    return v11;
  __break(1u);
  return result;
}

id sub_1BA749020(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v11;
  void *v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  _OWORD v21[8];
  uint64_t v22;

  v22 = a1;
  v11 = (id)(a1 & 0xFFFFFFFFFFFFFFFLL);
  swift_retain();
  v12 = (void *)sub_1BA72FFD8(a3, a4, a5, a6);
  swift_release();
  if (!v6)
  {
    if (a5)
    {
      swift_retain();
      v14 = objc_msgSend(v12, sel_string);
      v15 = sub_1BB8729A0();
      v17 = v16;

      swift_retain();
      swift_retain();
      v18 = sub_1BA742048(a5, a3);
      sub_1BA743168(v18, a5, (uint64_t)a3, 18, v21);
      type metadata accessor for FormatAttributedString();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1BA741FD8((uint64_t)v21);
      sub_1BA741BFC(v15, v17, (uint64_t)v21);
      sub_1BA741B54((uint64_t)v21);
      sub_1BA714CBC((uint64_t)a3);
      v20 = v19;
      swift_release();
      sub_1BA741B54((uint64_t)v21);
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v20);

      swift_release();
    }
    else
    {
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v12);

    }
  }
  return v11;
}

uint64_t FormatDateFormat.format(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  __int16 v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  sub_1BA49BD7C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86CB50();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C9DC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2[2];
  if (v15 == 1)
    return sub_1BB86C760();
  if (v15 == 2)
    return sub_1BB86C754();
  v17 = v2[4];
  v18 = v2[5];
  v32 = *((unsigned __int8 *)v2 + 24);
  v33 = a1;
  v19 = v2[1];
  v29[0] = v17;
  v29[1] = v19;
  v20 = *v2;
  v30 = v18;
  v31 = v20;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1BB86C994();
  v22 = (void *)sub_1BB86C940();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  objc_msgSend(v21, sel_setLocale_, v22);

  if (v30)
  {
    sub_1BB86CB20();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1BB2CC03C((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      v23 = (void *)sub_1BB86CB38();
      objc_msgSend(v21, sel_setTimeZone_, v23);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  v24 = v31;
  objc_msgSend(v21, sel_setDateStyle_, qword_1BB903C98[(char)v31]);
  objc_msgSend(v21, sel_setTimeStyle_, qword_1BB903C98[(uint64_t)v24 >> 8]);
  objc_msgSend(v21, sel_setFormattingContext_, v32);
  if (v15)
  {
    v25 = (void *)sub_1BB872970();
    objc_msgSend(v21, sel_setLocalizedDateFormatFromTemplate_, v25);

  }
  v26 = (void *)sub_1BB86C808();
  v27 = objc_msgSend(v21, sel_stringFromDate_, v26);

  v28 = sub_1BB8729A0();
  return v28;
}

uint64_t sub_1BA749544(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_retain();
  return result;
}

double sub_1BA749550@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  return sub_1BA7495A4(a1, a2, v3 + ((v7 + 16) & ~v7), a3);
}

double sub_1BA7495A4@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double result;

  if (a2 == 2)
  {
    v6 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
    if (!v6)
      goto LABEL_22;
    v7 = objc_msgSend(v6, sel_theme);
    swift_unknownObjectRelease();
    if (!v7)
      goto LABEL_22;
    v8 = objc_msgSend(v7, sel_bannerImageForMask);
    swift_unknownObjectRelease();
    if (!v8)
      goto LABEL_22;
  }
  else
  {
    v9 = objc_msgSend(a1, sel_userInterfaceStyle);
    if ((unint64_t)v9 >= 2)
    {
      if (v9 == (id)2)
      {
        v12 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
        if (!v12)
          goto LABEL_22;
        v13 = objc_msgSend(v12, sel_theme);
        swift_unknownObjectRelease();
        if (!v13)
          goto LABEL_22;
        v8 = objc_msgSend(v13, sel_bannerImageForMask);
        swift_unknownObjectRelease();
        if (!v8)
          goto LABEL_22;
      }
      else
      {
        v14 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
        if (!v14)
          goto LABEL_22;
        v15 = objc_msgSend(v14, sel_theme);
        swift_unknownObjectRelease();
        if (!v15)
          goto LABEL_22;
        v8 = objc_msgSend(v15, sel_bannerImageForWhiteBackground);
        swift_unknownObjectRelease();
        if (!v8)
          goto LABEL_22;
      }
    }
    else
    {
      v10 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
      if (!v10)
        goto LABEL_22;
      v11 = objc_msgSend(v10, sel_theme);
      swift_unknownObjectRelease();
      if (!v11)
        goto LABEL_22;
      v8 = objc_msgSend(v11, sel_bannerImageForWhiteBackground);
      swift_unknownObjectRelease();
      if (!v8)
        goto LABEL_22;
    }
  }
  v16 = objc_msgSend(v8, sel_assetHandle);

  if (v16)
  {
    *(_QWORD *)(a4 + 24) = sub_1BA749984();
    *(_QWORD *)(a4 + 32) = sub_1BA7499C0();
    *(_QWORD *)a4 = v16;
    return result;
  }
LABEL_22:
  *(_QWORD *)(a4 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

id sub_1BA749830@<X0>(uint64_t a1@<X8>)
{
  id result;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;

  result = (id)FCThumbnailForHeadlineMinimumSize();
  if (result)
  {
    v3 = result;
    result = objc_msgSend(result, sel_thumbnailAssetHandle);
    if (result)
    {
      v4 = result;
      v5 = sub_1BA749984();
      v15 = v5;
      v6 = sub_1BA7499C0();
      v16 = v6;
      *(_QWORD *)&v14 = v4;
      v7 = (id)FCCachedThumbnailForHeadline();
      if (v7
        && (v8 = v7,
            v9 = objc_msgSend(v7, sel_thumbnailAssetHandle),
            v8,
            v9))
      {
        *((_QWORD *)&v12 + 1) = v5;
        v13 = v6;

        *(_QWORD *)&v11 = v9;
      }
      else
      {

        v13 = 0;
        v11 = 0u;
        v12 = 0u;
      }
      *(_QWORD *)(a1 + 24) = &type metadata for FormatAssetHandle;
      *(_QWORD *)(a1 + 32) = sub_1BA749A08();
      v10 = swift_allocObject();
      *(_QWORD *)a1 = v10;
      sub_1BA4CECCC(&v14, v10 + 16);
      return (id)sub_1BA5193C4((uint64_t)&v11, v10 + 56, (uint64_t (*)(_QWORD))sub_1BA76D7E0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1BA749984()
{
  unint64_t result;

  result = qword_1ED3B97A0;
  if (!qword_1ED3B97A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B97A0);
  }
  return result;
}

unint64_t sub_1BA7499C0()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1ED3CF8C0;
  if (!qword_1ED3CF8C0)
  {
    v1 = sub_1BA749984();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FCAssetHandle, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CF8C0);
  }
  return result;
}

unint64_t sub_1BA749A08()
{
  unint64_t result;

  result = qword_1ED3C2140;
  if (!qword_1ED3C2140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAssetHandle, &type metadata for FormatAssetHandle);
    atomic_store(result, (unint64_t *)&qword_1ED3C2140);
  }
  return result;
}

uint64_t sub_1BA749A4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v22;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v22 - v15);
  sub_1BA5E01A4(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v18 = *v16;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 5)
  {
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v18;
    v20[3] = v19;
    v20[4] = a3;
    v20[5] = a4;
    v20[6] = a5;
    v20[7] = a6;
    *a7 = v20;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BA749BE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v22 - v15);
  sub_1BA5E01A4(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  v18 = *v16;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 4)
  {
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v19;
    *(_QWORD *)(v20 + 32) = a3;
    *(_QWORD *)(v20 + 40) = a4;
    *(_QWORD *)(v20 + 48) = a5;
    *(_QWORD *)(v20 + 56) = a6;
    *a7 = v20 | 4;
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a4, a5);
  }
LABEL_7:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BA749D88(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BA749DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5F28;
  if (!qword_1ED3B5F28)
  {
    sub_1BA50CAA8(255, &qword_1ED3B5F30, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F28);
  }
  return result;
}

void sub_1BA749E38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[5];
  uint64_t v26;
  uint64_t v27;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v6;
  v25[4] = *(_OWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v7;
  swift_beginAccess();
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v8 = v2[6];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v11);
        sub_1BA6FA7EC();
        sub_1BA719340(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v12 = v2[8];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v25, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v15 = v4[10];
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      v27 = v15;
      v17 = v15 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC(a1, v25);
        v17 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease_n();
    }
    sub_1BA74A2B0();
    if ((~v4[13] & 0xF000000000000007) != 0)
      sub_1BA645F4C();
    if ((~v4[14] & 0xF000000000000007) != 0)
      sub_1BA74A2B0();
    if ((~v4[15] & 0xF000000000000007) != 0)
      sub_1BA645F4C();
    v18 = v4[18];
    if (v18)
    {
      swift_beginAccess();
      v19 = *(_QWORD *)(v18 + 72);
      if (v19)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v25, v19);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v20 = *(_QWORD *)(v18 + 88);
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain_n();
        v22 = (uint64_t *)(v20 + 72);
        do
        {
          v23 = *v22;
          if (*v22)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v25, v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v22 += 7;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    v24 = v4[23];
    swift_bridgeObjectRetain();
    sub_1BB5701AC(a1, v25, v24);
    swift_bridgeObjectRelease();
  }
}

void sub_1BA74A2B0()
{
  __asm { BR              X11 }
}

void sub_1BA74A338(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  if (v10 && (v11 = *(_QWORD *)(v10 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v12 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(v10 + 8 * v12 + 32);
      swift_retain();
      sub_1BAC5D4B8(v7, v8, v13);
      if (v6)
        break;
      ++v12;
      swift_release();
      if (v11 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    if (v9)
      sub_1BA7C5D48(v7, &a6, v9);
  }
  sub_1BA74A318();
}

uint64_t FormatImageNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v4 = v2;
  v21 = v2[4];
  sub_1BA71CA6C(v21);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v21);
  sub_1BA719718(v21);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7])
    FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 88);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (uint64_t *)(v14 + 72);
      do
      {
        v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  swift_release();
  result = swift_beginAccess();
  v18 = v4[11];
  if (v18 >> 62 == 1)
  {
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 24);
    sub_1BA67D3F4(v18);
    sub_1BA67D3F4(v19);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v19, v20);
    sub_1BA6EEDB4(v19);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v18);
  }
  return result;
}

uint64_t FormatImageNodeStyle.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v4 = v3;
  v5 = v2;
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    v10 = *(_OWORD *)(v8 + 192);
    v69 = *(_OWORD *)(v8 + 176);
    v70 = v10;
    v71 = *(_OWORD *)(v8 + 208);
    v72 = *(_QWORD *)(v8 + 224);
    v11 = *(_OWORD *)(v8 + 128);
    v65 = *(_OWORD *)(v8 + 112);
    v66 = v11;
    v12 = *(_OWORD *)(v8 + 160);
    v67 = *(_OWORD *)(v8 + 144);
    v68 = v12;
    v13 = *(_OWORD *)(v8 + 48);
    v14 = *(_OWORD *)(v8 + 80);
    v15 = *(_OWORD *)(v8 + 96);
    v62 = *(_OWORD *)(v8 + 64);
    v63 = v14;
    v64 = v15;
    v60 = *(_OWORD *)(v8 + 32);
    v61 = v13;
    sub_1BAC68490((uint64_t)&v60);
    FormatImageNodeStyle.Selector.bind(binder:context:)(a1, a2);
    if (v3)
    {
      sub_1BAC685AC((uint64_t)&v60);
      return swift_bridgeObjectRelease_n();
    }
    v16 = 232;
    while (1)
    {
      sub_1BAC685AC((uint64_t)&v60);
      if (!--v9)
        break;
      v17 = v8 + v16;
      v18 = *(_OWORD *)(v8 + v16);
      v16 += 200;
      v60 = v18;
      v19 = *(_OWORD *)(v17 + 16);
      v20 = *(_OWORD *)(v17 + 32);
      v21 = *(_OWORD *)(v17 + 64);
      v63 = *(_OWORD *)(v17 + 48);
      v64 = v21;
      v61 = v19;
      v62 = v20;
      v22 = *(_OWORD *)(v17 + 80);
      v23 = *(_OWORD *)(v17 + 96);
      v24 = *(_OWORD *)(v17 + 128);
      v67 = *(_OWORD *)(v17 + 112);
      v68 = v24;
      v65 = v22;
      v66 = v23;
      v25 = *(_OWORD *)(v17 + 144);
      v26 = *(_OWORD *)(v17 + 160);
      v27 = *(_OWORD *)(v17 + 176);
      v72 = *(_QWORD *)(v17 + 192);
      v70 = v26;
      v71 = v27;
      v69 = v25;
      sub_1BAC68490((uint64_t)&v60);
      FormatImageNodeStyle.Selector.bind(binder:context:)(a1, a2);
    }
    swift_bridgeObjectRelease_n();
  }
  v29 = v2[7];
  if (v29)
  {
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      swift_bridgeObjectRetain_n();
      v31 = (_BYTE *)(v29 + 40);
      do
      {
        if ((*v31 & 1) == 0)
        {
          *(_QWORD *)&v60 = *((_QWORD *)v31 - 1);
          v32 = v60;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v3)
          {
            sub_1BA72C46C(v32, 0);
            sub_1BA72C46C(v32, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v32, 0);
          sub_1BA72C46C(v32, 0);
        }
        v31 += 16;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease_n();
    }
  }
  result = swift_beginAccess();
  v33 = v2[8];
  if (v33)
  {
    swift_bridgeObjectRetain();
    sub_1BAB7F560(a1, a2, v33);
    if (v3)
      return swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v34 = v5[9];
  if ((~v34 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)();
    if (v3)
      return sub_1BA6E6CD8(v34);
    result = sub_1BA6E6CD8(v34);
  }
  v35 = v5[10];
  if (!v35 || (result = sub_1BAB73D7C(a1, a2, v35), !v3))
  {
    v36 = v5[15];
    if (v36 >= 3)
    {
      if (v36 != 3)
      {
        v37 = *(_QWORD *)(v36 + 16);
        v38 = *(_QWORD *)(v36 + 24);
        sub_1BA6E6C80(v5[15]);
        sub_1BA6E6E84(v37);
        sub_1BA6E6E84(v38);
        sub_1BA7852C4(a1, a2, v37, v38);
        sub_1BA6E7468(v37);
        sub_1BA6E7468(v38);
        result = sub_1BA6E6CF0(v36);
        if (v3)
          return result;
      }
    }
    else
    {
      result = sub_1BA6E6CF0(v5[15]);
    }
    if (*((unsigned __int8 *)v5 + 216) != 254)
    {
      v73 = *((unsigned __int8 *)v5 + 216);
      v54 = v5[17];
      v55 = v5[18];
      v41 = v5[21];
      v56 = v5[19];
      v57 = v5[20];
      v42 = v5[24];
      v58 = v5[22];
      v59 = v5[23];
      v44 = v5[25];
      v43 = v5[26];
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v3)
        return sub_1BA6E8A78(v54, v55, v56, v57, v41, v58, v59, v42, v44, v43, v73);
      v53 = v43;
      v45 = v44;
      v46 = v73;
      v47 = v42;
      v48 = v59;
      v49 = v58;
      switch((int)v73)
      {
        case 0:
          break;
        case 1:
          v50 = v47;
          sub_1BABD5EE8(a1, a2);
          v51 = 1;
          goto LABEL_46;
        case 2:
          v50 = v47;
          sub_1BABD5EE8(a1, a2);
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          v51 = 2;
LABEL_46:
          result = sub_1BA6E8A78(v54, v55, v56, v57, v41, v58, v59, v50, v45, v53, v51);
          goto LABEL_33;
        case 3:
        case 5:
          v52 = v47;
          sub_1BABD5EE8(a1, a2);
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          goto LABEL_47;
        case 4:
          v52 = v47;
          sub_1BABD5EE8(a1, a2);
LABEL_47:
          v47 = v52;
          break;
        default:
          v47 = v59;
          v48 = v58;
          v49 = v41;
          break;
      }
      result = sub_1BA6E8A78(v54, v55, v56, v57, v41, v49, v48, v47, v45, v53, v46);
    }
LABEL_33:
    v39 = v5[28];
    if ((~v39 & 0xF000000000000007) == 0
      || (swift_retain(), FormatColor.bind(binder:context:)(), result = sub_1BA5E800C(v39), !v4))
    {
      v40 = v5[30];
      if (v40 != 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        FormatImageNodeRequest.bind(binder:context:)();
        return sub_1BA6E6D00(v40);
      }
    }
  }
  return result;
}

uint64_t sub_1BA74AEA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA74AEAC(a1, (__int128 *)(v1 + 16));
}

uint64_t sub_1BA74AEAC(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int128 v17;

  v17 = *a2;
  v3 = v17;
  sub_1BA739BF4((uint64_t)&v17);
  v4 = sub_1BA717D44(v3, *((uint64_t *)&v3 + 1));
  v6 = v5;
  sub_1BA73D624((uint64_t)&v17);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(v4, v6);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 56) + 40 * v8;
      v11 = *(_QWORD *)v10;
      v12 = *(_QWORD *)(v10 + 8);
      v13 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      v15 = *(unsigned __int8 *)(v10 + 32);
      sub_1BA74AFD8(*(_QWORD *)v10, v12, v13, v14, *(_BYTE *)(v10 + 32));
      swift_bridgeObjectRelease_n();
      if (v15 == 255)
        return 1;
      sub_1BA74E778(v11, v12, v13, v14, v15);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BA74AFD8(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1)
    return sub_1BA757FCC(result, a2, a3, a4, a5);
  return result;
}

void sub_1BA74AFEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4420)
  {
    type metadata accessor for FormatNodeStateData.Data();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4420);
  }
}

uint64_t sub_1BA74B050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPropertyDefinition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void initializeWithCopy for FormatPropertyDefinition()
{
  char *v0;

  v0 = (char *)sub_1BA74B0EC + 4 * word_1BB8EE4D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA74B0EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__dst, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(const void *, uint64_t, uint64_t);
  uint64_t v39;
  void *v41;

  v29 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  v30 = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 24) = v30;
  v31 = *(_QWORD *)(v28 + 40);
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 40) = v31;
  v32 = *(_QWORD *)(v28 + 56);
  *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
  *(_QWORD *)(v27 + 56) = v32;
  *(_BYTE *)(v27 + 64) = *(_BYTE *)(v28 + 64);
  *(_BYTE *)(v27 + 65) = *(_BYTE *)(v28 + 65);
  *(_BYTE *)(v27 + 66) = *(_BYTE *)(v28 + 66);
  *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v34 = *(int *)(v33 + 64);
  v41 = (void *)(v27 + v34);
  v35 = (const void *)(v28 + v34);
  v36 = sub_1BB86E710();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38(v35, 1, v36))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v41, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(v41, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v41, 0, 1, v36);
  }
  swift_storeEnumTagMultiPayload();
  return v27;
}

void FormatPropertyDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  _QWORD v57[32];

  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v2);
  v57[23] = (char *)v57 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v57[22] = (char *)v57 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v57[21] = (char *)v57 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v8);
  v57[20] = (char *)v57 - v9;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v10);
  v57[19] = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v12);
  v57[18] = (char *)v57 - v13;
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v14);
  v57[17] = (char *)v57 - v15;
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v16);
  v57[16] = (char *)v57 - v17;
  v18 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v18);
  v57[15] = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v20);
  v57[14] = (char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v22);
  v57[13] = (char *)v57 - v23;
  v24 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v24);
  v57[12] = (char *)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v57[11] = (char *)v57 - v27;
  MEMORY[0x1E0C80A78](v28);
  v57[9] = (char *)v57 - v29;
  MEMORY[0x1E0C80A78](v30);
  v57[8] = (char *)v57 - v31;
  MEMORY[0x1E0C80A78](v32);
  v57[7] = (char *)v57 - v33;
  MEMORY[0x1E0C80A78](v34);
  v57[6] = (char *)v57 - v35;
  MEMORY[0x1E0C80A78](v36);
  v57[5] = (char *)v57 - v37;
  MEMORY[0x1E0C80A78](v38);
  v57[4] = (char *)v57 - v39;
  MEMORY[0x1E0C80A78](v40);
  v57[3] = (char *)v57 - v41;
  MEMORY[0x1E0C80A78](v42);
  v57[2] = (char *)v57 - v43;
  MEMORY[0x1E0C80A78](v44);
  v57[1] = (char *)v57 - v45;
  MEMORY[0x1E0C80A78](v46);
  v57[0] = (char *)v57 - v47;
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v48);
  v57[10] = (char *)v57 - v49;
  v50 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)v57 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v57[28] = v53;
  v57[24] = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)v57 - v54;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v57[27] = v55;
  sub_1BB8746C8();
  sub_1BA74B050(v57[25], (uint64_t)v52);
  v56 = (char *)sub_1BA74C1D4 + 4 * word_1BB8EE464[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA74C1D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[16];

  v3 = *(_QWORD *)(v2 - 256);
  sub_1BB12A284(v0, v3, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476C20);
  v8 = *(_QWORD *)(v2 - 336);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  v9 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1E0C80A78](v9);
  v14[2] = v3;
  v10 = *(_QWORD *)(v2 - 128);
  sub_1BA69F160(v8, (uint64_t)sub_1BB13B0F8, (uint64_t)v14, v4, v5);
  sub_1BA4A2E80(v8, type metadata accessor for FormatVersionRequirement);
  if (v10)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 144) + 8))(*(_QWORD *)(v2 - 120), *(_QWORD *)(v2 - 112));
  }
  else
  {
    *(_BYTE *)(v2 - 65) = 0;
    sub_1BA6F60E4();
    *(_QWORD *)(v2 - 104) = 0;
    *(_QWORD *)(v2 - 96) = 0;
    v12 = *(_QWORD *)(v2 - 120);
    v11 = *(_QWORD *)(v2 - 112);
    sub_1BB8741AC();
    sub_1BA691344(v1);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v12, v11);
  }
  return sub_1BB12A2E0(v3, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
}

uint64_t FormatPropertyDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[14];
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35[12] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v3);
  v35[11] = (char *)v35 - v4;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v5);
  v35[8] = (char *)v35 - v6;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v7);
  v35[10] = (char *)v35 - v8;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v9);
  v35[7] = (char *)v35 - v10;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v11);
  v35[9] = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v13);
  v35[6] = (char *)v35 - v14;
  sub_1BA50CAA8(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v15);
  v35[5] = (char *)v35 - v16;
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v17);
  v35[4] = (char *)v35 - v18;
  v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v19);
  v35[3] = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v21);
  v35[2] = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v23);
  v35[1] = (char *)v35 - v24;
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v25);
  v35[0] = (char *)v35 - v26;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)v35 - v29;
  v31 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v31);
  v32 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1BA6B8518();
  v35[13] = v30;
  v33 = v37;
  sub_1BB87468C();
  if (!v33)
  {
    v37 = v28;
    sub_1BA74E2A8();
    v38 = 0;
    v39 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

void sub_1BA74E17C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = type metadata accessor for FormatPrimitivePropertyDefinition(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA74E1D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = type metadata accessor for FormatPrimitivePropertyDefinition(0, a3, a4, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BA74E21C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B8A30)
  {
    v2 = sub_1BB86C67C();
    v3 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v5 = type metadata accessor for FormatPrimitivePropertyDefinition(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B8A30);
  }
}

uint64_t type metadata accessor for FormatEnumPropertyDefinition(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3CC5B8);
}

unint64_t sub_1BA74E2A8()
{
  unint64_t result;

  result = qword_1ED3B49A8;
  if (!qword_1ED3B49A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionType, &type metadata for FormatOptionType);
    atomic_store(result, (unint64_t *)&qword_1ED3B49A8);
  }
  return result;
}

void sub_1BA74E2EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B8A38)
  {
    v2 = sub_1BB86C8B0();
    v3 = sub_1BA4A2870((unint64_t *)&qword_1ED3C44F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&protocol conformance descriptor for Date);
    v5 = type metadata accessor for FormatPrimitivePropertyDefinition(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B8A38);
  }
}

unint64_t sub_1BA74E364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B5EF8;
  if (!qword_1ED3B5EF8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B5F00, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B5EF8);
  }
  return result;
}

double sub_1BA74E3CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v6;

  v3 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v4 = sub_1BA72BED4(v6, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v6, v2);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

_QWORD *initializeWithCopy for FeedBannerAdViewLayout.Context(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for FeedBannerAd();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8721C0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  v11 = v5[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = v5[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  if (v17 >= 0x11)
  {
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  return a1;
}

void sub_1BA74E57C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C47E8)
  {
    sub_1BB86E710();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C47E8);
  }
}

uint64_t sub_1BA74E5D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[32];
  uint64_t v20;

  v5 = *v2;
  v6 = v2[3];
  v7 = v2[4];
  v14 = *(_OWORD *)(v2 + 1);
  v8 = v2[1];
  swift_bridgeObjectRetain();
  v9 = sub_1BA717D44(v5, v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  v15 = v5;
  v16 = v14;
  v17 = v6;
  v18 = v7;
  sub_1BA74E95C(a1, a2, (uint64_t)v19);
  sub_1BA74E920((uint64_t)v19, (uint64_t)&v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BA74E740((uint64_t)&v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA74AFD8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = 0x8000000000000000;
  sub_1BA74E78C((uint64_t)&v15, v9, v11, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 56) = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1BA74E740((uint64_t)&v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA74E778);
  return sub_1BB86EB0C();
}

uint64_t sub_1BA74E740(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_1BA74E778(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1)
    return sub_1BA7529B4(result, a2, a3, a4, a5);
  return result;
}

uint64_t sub_1BA74E78C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BB4CE900(a1, v18[7] + 40 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BB4C2874();
      goto LABEL_7;
    }
    sub_1BA7700D8(v15, a4 & 1);
    v20 = sub_1BA6E35A8(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BB4CE900(a1, v18[7] + 40 * v12);
LABEL_11:
      sub_1BA74E8B4(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA74E8B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BA74E920(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BA74E920(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1BA74E95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v4 = a2;
  v7 = v3[2];
  v8 = v3[4];
  result = sub_1BA751F34(v3[3], a2);
  v10 = result;
  v30 = *(_QWORD *)(result + 16);
  if (v30)
  {
    v27 = v4;
    v11 = 0;
    v28 = OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots;
    v31 = result + 32;
    v29 = result;
    while (1)
    {
      if (v11 >= *(_QWORD *)(v10 + 16))
      {
        __break(1u);
        return result;
      }
      sub_1BA4C010C(v31 + 40 * v11, (uint64_t)v33);
      swift_bridgeObjectRetain();
      v12 = sub_1BA759734(v33, v7);
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v25 = v34;
        v26 = v35;
        __swift_project_boxed_opaque_existential_1(v33, v34);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 40))(&v32, v25, v26);
        *(_OWORD *)a3 = v32;
        *(_QWORD *)(a3 + 16) = v7;
        *(_QWORD *)(a3 + 24) = 0;
        *(_BYTE *)(a3 + 32) = 0;
        swift_bridgeObjectRetain();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      }
      sub_1BA7592C4(v33, (uint64_t *)&v32);
      v13 = *(_QWORD *)(v4 + 40);
      if (v13)
      {
        v14 = *(_QWORD *)(a1 + v28);
        if (*(_QWORD *)(v14 + 16))
        {
          v15 = *(_QWORD *)(v4 + 32);
          swift_bridgeObjectRetain();
          v16 = sub_1BA6E35A8(v15, v13);
          if ((v17 & 1) != 0)
          {
            v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v16);
            swift_retain();
            swift_bridgeObjectRelease();
LABEL_13:
            v21 = *(_QWORD *)(v18 + 136);
            __swift_project_boxed_opaque_existential_1(v33, v34);
            swift_bridgeObjectRetain();
            v22 = sub_1BB86DEE8();
            if (*(_QWORD *)(v21 + 16) && (sub_1BA6E35A8(v22, v23), (v24 & 1) != 0))
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              v4 = v27;
              v10 = v29;
              if ((v32 & 0x4000000000) == 0)
                *(_QWORD *)&v32 = v32 | 0x4000000000;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              v4 = v27;
              v10 = v29;
            }
            goto LABEL_18;
          }
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v14 + 16))
          {
            v19 = sub_1BA6E35A8(42, 0xE100000000000000);
            if ((v20 & 1) != 0)
            {
              v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v19);
              swift_retain();
              goto LABEL_13;
            }
          }
        }
      }
LABEL_18:
      if (*(_QWORD *)(v8 + 16))
      {
        swift_bridgeObjectRetain();
        __asm { BR              X10 }
      }
      ++v11;
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      if (v11 == v30)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
  }
  result = swift_bridgeObjectRelease();
LABEL_23:
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_BYTE *)(a3 + 32) = -1;
  return result;
}

void sub_1BA74F0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD v14[5];
  uint64_t v15;

  v5 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v5;
  v14[4] = *(_OWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v7 = *(_QWORD *)(v2 + 64);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        sub_1BA6FA7EC();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v11 = *(_QWORD *)(v2 + 80);
    if (v11 >> 62 == 1)
    {
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      sub_1BA67D3F4(v12);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v14, v12, v13);
      sub_1BA6EEDB4(v12);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t destroy for FormatItemNodeData(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  void *v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 2u:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FeedBannerAd();
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v7 = (int *)type metadata accessor for FeedHeadline(0);
      v8 = a1 + v7[10];
      v9 = v8 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v10 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        v11 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);

        v12 = v9 + *(int *)(v10 + 28);
        v13 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      }
      v14 = a1 + v7[11];
      v15 = sub_1BB871B24();
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      if (*(_QWORD *)(a1 + v7[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v7[13]) >= 3uLL)
        swift_unknownObjectRelease();

      goto LABEL_71;
    case 4u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = (int *)type metadata accessor for FeedWebEmbed();
      v18 = a1 + v17[8];
      v19 = sub_1BB86C67C();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v21(v18, v19);
      v22 = a1 + v17[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v19))
        v21(v22, v19);
      swift_release();
      swift_release();
      v23 = a1 + v17[12];
      v24 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v24 - 1) + 48))(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v25 = v24[10];
        v26 = v23 + v25 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v27 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
        {
          v28 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);

          v21(v26 + *(int *)(v27 + 28), v19);
        }
        v29 = v23 + v24[11];
        v30 = sub_1BB871B24();
        v31 = *(_QWORD *)(v30 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
        if (*(_QWORD *)(v23 + v24[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v23 + v24[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v32 = a1 + v17[13];
      v33 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
        goto LABEL_71;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v34 = type metadata accessor for GenericDataVisualization();
      v21(v32 + *(int *)(v34 + 20), v19);
      goto LABEL_70;
    case 5u:
      goto LABEL_36;
    case 6u:
      v35 = *(unsigned __int8 *)(a1 + 281);
      if (v35 == 2)
        goto LABEL_40;
      if (v35 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v46 = *(void **)(a1 + 144);
        if (!v46)
          goto LABEL_71;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 272) < 0x11uLL)
          goto LABEL_71;
LABEL_70:
        swift_bridgeObjectRelease();
        goto LABEL_71;
      }
      if (*(_BYTE *)(a1 + 281))
        goto LABEL_71;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
        goto LABEL_70;
LABEL_71:
      v42 = a1 + a2[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v42 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7280A0(*(_QWORD *)(a1 + a2[6]));
      v43 = a1 + a2[7];
      v44 = sub_1BB86FE38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
      result = *(_QWORD *)(a1 + a2[8] + 8);
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 120))
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
      }
      goto LABEL_71;
    case 8u:
      swift_bridgeObjectRelease();
      v36 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v38 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        v39 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v37, v39);
      }
      goto LABEL_70;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56))
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      if (*(_QWORD *)(a1 + 96))
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      if (*(_QWORD *)(a1 + 136))
        __swift_destroy_boxed_opaque_existential_1(a1 + 112);
      goto LABEL_71;
    case 0xAu:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FeedEngagementBanner();
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      if (*(_QWORD *)(a1 + *(int *)(v4 + 32) + 8) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_71;
    case 0xCu:
      goto LABEL_64;
    case 0xDu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      if (*(_QWORD *)(a1 + 152))
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      goto LABEL_71;
    case 0xEu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_71;
    case 0xFu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_94;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v41, 1, v48))
            {
              v49 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v41, v49);
            }
          }
          v50 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v51 = v41 + *(int *)(v50 + 20);
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v51, 1, v53))
            {
              v54 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v51, v54);
            }
          }
          v41 += *(int *)(v50 + 24);
LABEL_94:
          v55 = swift_getEnumCaseMultiPayload();
          if (v55 == 5 || v55 == 4)
          {
            v56 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v41, 1, v56))goto LABEL_105;
          }
          goto LABEL_71;
        case 2u:
          v57 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v41, 1, v57))
            goto LABEL_71;
          v58 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v41, v58);
          v59 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v60 = v41 + *(int *)(v59 + 24);
          swift_bridgeObjectRelease();
          v61 = *(_QWORD *)(v60 + 24);
          if (v61 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v60 + 16), v61);
          goto LABEL_70;
        case 3u:
          v62 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v63 = v41 + *(int *)(v62 + 24);
          v64 = type metadata accessor for PuzzleStreak();
          v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48);
          if (!v65(v63, 1, v64))
          {
            v66 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v63, v66);
          }
          v41 += *(int *)(v62 + 28);
          if (!v65(v41, 1, v64))
          {
LABEL_105:
            v67 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v41, v67);
          }
          goto LABEL_71;
        default:
          goto LABEL_71;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
        goto LABEL_70;
      goto LABEL_71;
    default:
      goto LABEL_71;
  }
}

char *initializeWithCopy for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  unsigned int (*v66)(char *, uint64_t, int *);
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  __int128 v74;
  int v75;
  void *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  id v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unsigned int (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  _QWORD *v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  __int128 v153;
  _OWORD *v154;
  _OWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int (*v163)(char *, uint64_t, uint64_t);
  uint64_t v164;
  __int128 v165;
  _OWORD *v166;
  _OWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  int *v175;
  uint64_t v176;
  char *v177;
  int *v178;
  unsigned int (*v179)(char *, uint64_t, int *);
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  id v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  _OWORD *v199;
  _OWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _OWORD *v214;
  _OWORD *v215;
  __int128 v216;
  void *v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  id v221;
  id v222;
  __int128 v223;
  uint64_t v224;
  void *v225;
  id v226;
  __int128 v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  id v231;
  _QWORD *v232;
  unint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  id v241;
  _QWORD *v242;
  unint64_t v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  uint64_t v248;
  id v249;
  id v250;
  __int128 v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  char *v256;
  char *v257;
  id v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  unint64_t v268;
  uint64_t v269;
  unint64_t v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  id v278;
  _QWORD *v279;
  unint64_t v280;
  uint64_t v281;
  void *v282;
  void (*v283)(char *, _QWORD, uint64_t, int *);
  id v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int EnumCaseMultiPayload;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  int *v296;
  char *v297;
  int *v298;
  char *v299;
  char *v300;
  char *v301;
  __int128 v302;
  int *v303;
  uint64_t v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  char *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *result;
  uint64_t v326;
  char *__dst;
  int *v328;
  int *v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  void (*v333)(char *, char *, uint64_t);
  int *v334;
  uint64_t v335;
  uint64_t v336;
  int *v337;
  int *v338;
  int *v339;
  int *v340;
  char *v341;
  char *v342;

  v6 = type metadata accessor for FeedItem(0);
  v341 = a1;
  v342 = a2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v7;
      v8 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v8;
      a1[32] = a2[32];
      v9 = a2 + 40;
      v10 = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      if (v10 >= 0x11)
      {
        *((_QWORD *)a1 + 5) = *v9;
        *((_QWORD *)a1 + 6) = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v9;
      }
      goto LABEL_148;
    case 1u:
      v50 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v50;
      v51 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v51;
      a1[32] = a2[32];
      v52 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v52;
      v53 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v53;
      v54 = a2 + 72;
      v55 = *((_QWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 >= 0x11)
      {
        *((_QWORD *)a1 + 9) = *v54;
        *((_QWORD *)a1 + 10) = v55;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v54;
      }
      goto LABEL_148;
    case 2u:
      v11 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v11;
      v12 = (int *)type metadata accessor for FeedBannerAd();
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_1BB8721C0();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v18 = v15;
      a2 = v342;
      v17(v14, v18, v16);
      *(_QWORD *)&a1[v12[6]] = *(_QWORD *)&v342[v12[6]];
      v19 = v12[7];
      v20 = &a1[v19];
      v21 = &v342[v19];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      v22 = v12[8];
      v23 = &a1[v22];
      v24 = &v342[v22];
      v25 = *((_QWORD *)v24 + 1);
      if (v25 >= 0x11)
      {
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v23 = *(_OWORD *)v24;
      }
      goto LABEL_148;
    case 3u:
      v338 = a3;
      v56 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v56;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      v57 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v57;
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      a1[56] = a2[56];
      v334 = (int *)type metadata accessor for FeedHeadline(0);
      v58 = v334[10];
      v59 = &a1[v58];
      v60 = &a2[v58];
      *v59 = a2[v58];
      v59[1] = a2[v58 + 1];
      v61 = (int *)type metadata accessor for FeedHeadline.State(0);
      v62 = v61[6];
      v63 = &v59[v62];
      v64 = &v60[v62];
      v65 = (int *)type metadata accessor for SharedItem();
      v331 = *((_QWORD *)v65 - 1);
      v66 = *(unsigned int (**)(char *, uint64_t, int *))(v331 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v66(v64, 1, v65))
      {
        v67 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        v182 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v63, v64, v182);
        v63[v65[5]] = v64[v65[5]];
        v183 = v65[6];
        v184 = *(void **)&v64[v183];
        *(_QWORD *)&v63[v183] = v184;
        v185 = v65[7];
        v186 = &v63[v185];
        v187 = &v64[v185];
        v188 = sub_1BB86C67C();
        v189 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16);
        v190 = v184;
        v189(v186, v187, v188);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v331 + 56))(v63, 0, 1, v65);
      }
      a3 = v338;
      a1 = v341;
      v59[v61[7]] = v60[v61[7]];
      v59[v61[8]] = v60[v61[8]];
      v59[v61[9]] = v60[v61[9]];
      v59[v61[10]] = v60[v61[10]];
      v191 = v334[11];
      v192 = &v341[v191];
      v193 = &v342[v191];
      v194 = sub_1BB871B24();
      v195 = *(_QWORD *)(v194 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
      }
      a2 = v342;
      v203 = v334[12];
      v204 = &v341[v203];
      v205 = &v342[v203];
      v206 = *((_QWORD *)v205 + 1);
      if (v206 >= 0x11)
      {
        *(_QWORD *)v204 = *(_QWORD *)v205;
        *((_QWORD *)v204 + 1) = v206;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v204 = *(_OWORD *)v205;
      }
      v207 = v334[13];
      v208 = *(_QWORD *)&v342[v207];
      if (v208 >= 2)
      {
        if (v208 == 2)
        {
          *(_QWORD *)&v341[v207] = 2;
        }
        else
        {
          *(_QWORD *)&v341[v207] = v208;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&v341[v207] = v208;
      }
      v224 = v334[14];
      v225 = *(void **)&v342[v224];
      *(_QWORD *)&v341[v224] = v225;
      v226 = v225;
      goto LABEL_148;
    case 4u:
      v26 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v26;
      a1[16] = a2[16];
      v27 = a2 + 24;
      v28 = *((_QWORD *)a2 + 4);
      if (v28 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v27;
        *((_QWORD *)a1 + 4) = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v27;
      }
      v122 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v122;
      v123 = (int *)type metadata accessor for FeedWebEmbed();
      v124 = v123[8];
      v125 = &a1[v124];
      v126 = &a2[v124];
      v127 = sub_1BB86C67C();
      v128 = *(_QWORD *)(v127 - 8);
      v129 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
      swift_bridgeObjectRetain();
      v129(v125, v126, v127);
      v130 = v123[9];
      v131 = &a1[v130];
      v132 = &a2[v130];
      v336 = v127;
      v333 = v129;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(&a2[v130], 1, v127))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        v129(v131, v132, v127);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v131, 0, 1, v127);
      }
      *(_QWORD *)&a1[v123[10]] = *(_QWORD *)&a2[v123[10]];
      *(_QWORD *)&a1[v123[11]] = *(_QWORD *)&a2[v123[11]];
      v158 = v123[12];
      v159 = &a1[v158];
      v160 = &a2[v158];
      v161 = type metadata accessor for FeedHeadline(0);
      v162 = *(_QWORD *)(v161 - 8);
      v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
      swift_retain();
      swift_retain();
      if (v163(v160, 1, v161))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
      }
      else
      {
        v328 = v123;
        v340 = a3;
        v170 = *((_QWORD *)v160 + 1);
        *(_QWORD *)v159 = *(_QWORD *)v160;
        *((_QWORD *)v159 + 1) = v170;
        *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
        v159[24] = v160[24];
        v171 = *((_QWORD *)v160 + 5);
        *((_QWORD *)v159 + 4) = *((_QWORD *)v160 + 4);
        *((_QWORD *)v159 + 5) = v171;
        *((_QWORD *)v159 + 6) = *((_QWORD *)v160 + 6);
        v159[56] = v160[56];
        v329 = (int *)v161;
        v172 = *(int *)(v161 + 40);
        v173 = &v159[v172];
        v174 = &v160[v172];
        *v173 = v160[v172];
        v173[1] = v160[v172 + 1];
        v175 = (int *)type metadata accessor for FeedHeadline.State(0);
        v176 = v175[6];
        __dst = &v173[v176];
        v177 = &v174[v176];
        v178 = (int *)type metadata accessor for SharedItem();
        v326 = *((_QWORD *)v178 - 1);
        v179 = *(unsigned int (**)(char *, uint64_t, int *))(v326 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v179(v177, 1, v178))
        {
          v180 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v177, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
        }
        else
        {
          v252 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(__dst, v177, v252);
          __dst[v178[5]] = v177[v178[5]];
          v253 = v178[6];
          v254 = *(void **)&v177[v253];
          *(_QWORD *)&__dst[v253] = v254;
          v255 = v178[7];
          v256 = &__dst[v255];
          v257 = &v177[v255];
          v258 = v254;
          v333(v256, v257, v336);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v326 + 56))(__dst, 0, 1, v178);
        }
        v173[v175[7]] = v174[v175[7]];
        v173[v175[8]] = v174[v175[8]];
        v173[v175[9]] = v174[v175[9]];
        v173[v175[10]] = v174[v175[10]];
        v259 = v329[11];
        v260 = &v159[v259];
        v261 = &v160[v259];
        v262 = sub_1BB871B24();
        v263 = *(_QWORD *)(v262 - 8);
        a1 = v341;
        v123 = v328;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v263 + 48))(v261, 1, v262))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v263 + 16))(v260, v261, v262);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v260, 0, 1, v262);
        }
        a3 = v340;
        v265 = v329[12];
        v266 = &v159[v265];
        v267 = &v160[v265];
        v268 = *((_QWORD *)v267 + 1);
        if (v268 >= 0x11)
        {
          *(_QWORD *)v266 = *(_QWORD *)v267;
          *((_QWORD *)v266 + 1) = v268;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v266 = *(_OWORD *)v267;
        }
        v269 = v329[13];
        v270 = *(_QWORD *)&v160[v269];
        if (v270 >= 2)
        {
          if (v270 == 2)
          {
            *(_QWORD *)&v159[v269] = 2;
          }
          else
          {
            *(_QWORD *)&v159[v269] = v270;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v159[v269] = v270;
        }
        v281 = v329[14];
        v282 = *(void **)&v160[v281];
        *(_QWORD *)&v159[v281] = v282;
        v283 = *(void (**)(char *, _QWORD, uint64_t, int *))(v162 + 56);
        v284 = v282;
        v283(v159, 0, 1, v329);
      }
      v285 = v123[13];
      v286 = &a1[v285];
      v287 = &v342[v285];
      v288 = type metadata accessor for WebEmbedDataVisualization();
      v289 = *(_QWORD *)(v288 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v289 + 48))(v287, 1, v288))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v292 = *(_QWORD *)v287;
        if (EnumCaseMultiPayload == 1)
        {
          v293 = *((_QWORD *)v287 + 1);
          *(_QWORD *)v286 = v292;
          *((_QWORD *)v286 + 1) = v293;
          v294 = type metadata accessor for GenericDataVisualization();
          v295 = *(int *)(v294 + 20);
          v296 = v123;
          v297 = &v286[v295];
          v298 = a3;
          v299 = &v287[v295];
          swift_bridgeObjectRetain();
          v300 = v297;
          v123 = v296;
          a1 = v341;
          v301 = v299;
          a3 = v298;
          v333(v300, v301, v336);
          *(_QWORD *)&v286[*(int *)(v294 + 24)] = *(_QWORD *)&v287[*(int *)(v294 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v286 = v292;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v288);
      }
      a2 = v342;
      a1[v123[14]] = v342[v123[14]];
      goto LABEL_148;
    case 5u:
      v68 = *(void **)a2;
      v69 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v69;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v70 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v70;
      a1[64] = a2[64];
      v71 = *((_QWORD *)a2 + 10);
      v72 = v68;
      swift_bridgeObjectRetain();
      v73 = v70;
      if (v71 == 1)
      {
        v74 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v74;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v71;
        v135 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v135;
        v137 = (void *)*((_QWORD *)a2 + 13);
        v136 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v137;
        *((_QWORD *)a1 + 14) = v136;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v138 = v137;
      }
      v139 = a2 + 120;
      v140 = *((_QWORD *)a2 + 16);
      if (v140 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v139;
        *((_QWORD *)a1 + 16) = v140;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v139;
      }
      a1[136] = a2[136];
      goto LABEL_148;
    case 6u:
      v75 = a2[281];
      if (v75 == 2)
      {
        v210 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v210;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v211 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v211;
        v212 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v212;
        v213 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v213 != 1)
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = v213;
          v234 = a2 + 96;
          v235 = a2;
          v236 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v236)
          {
            v237 = *((_QWORD *)v235 + 16);
            *((_QWORD *)a1 + 15) = v236;
            *((_QWORD *)a1 + 16) = v237;
            (**(void (***)(uint64_t, char *, uint64_t))(v236 - 8))((uint64_t)(a1 + 96), v234, v236);
            *((_QWORD *)a1 + 17) = *((_QWORD *)v235 + 17);
            a1[144] = v235[144];
          }
          else
          {
            v302 = *((_OWORD *)v234 + 1);
            *((_OWORD *)a1 + 6) = *(_OWORD *)v234;
            *((_OWORD *)a1 + 7) = v302;
            *((_OWORD *)a1 + 8) = *((_OWORD *)v234 + 2);
            a1[144] = v234[48];
          }
          a2 = v235;
          goto LABEL_147;
        }
        v214 = a1 + 80;
        v215 = a2 + 80;
        v216 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v216;
        a1[144] = a2[144];
LABEL_131:
        v274 = v215[1];
        *v214 = *v215;
        v214[1] = v274;
        goto LABEL_147;
      }
      if (v75 != 1)
      {
        v217 = *(void **)a2;
        v218 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v218;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v219 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v219;
        a1[64] = a2[64];
        v220 = *((_QWORD *)a2 + 10);
        v221 = v217;
        swift_bridgeObjectRetain();
        v222 = v219;
        if (v220 == 1)
        {
          v223 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v223;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v220;
          v238 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v238;
          v240 = (void *)*((_QWORD *)a2 + 13);
          v239 = *((_QWORD *)a2 + 14);
          *((_QWORD *)a1 + 13) = v240;
          *((_QWORD *)a1 + 14) = v239;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v241 = v240;
        }
        v242 = a2 + 120;
        v243 = *((_QWORD *)a2 + 16);
        if (v243 >= 0x11)
        {
          *((_QWORD *)a1 + 15) = *v242;
          *((_QWORD *)a1 + 16) = v243;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v242;
        }
        a1[136] = a2[136];
        goto LABEL_147;
      }
      v76 = *(void **)a2;
      v77 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v77;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v78 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v78;
      a1[64] = a2[64];
      v79 = *((_QWORD *)a2 + 10);
      v80 = v76;
      swift_bridgeObjectRetain();
      v81 = v78;
      if (v79 == 1)
      {
        v82 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v82;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v79;
        v228 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v228;
        v230 = (void *)*((_QWORD *)a2 + 13);
        v229 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v230;
        *((_QWORD *)a1 + 14) = v229;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v231 = v230;
      }
      v232 = a2 + 120;
      v233 = *((_QWORD *)a2 + 16);
      if (v233 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v232;
        *((_QWORD *)a1 + 16) = v233;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v232;
      }
      v215 = a2 + 144;
      v244 = (void *)*((_QWORD *)a2 + 18);
      a1[136] = a2[136];
      if (!v244)
      {
        v214 = a1 + 144;
        v271 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v271;
        *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
        v272 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v272;
        v273 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v273;
        goto LABEL_131;
      }
      v245 = *((_QWORD *)a2 + 19);
      v246 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 18) = v244;
      *((_QWORD *)a1 + 19) = v245;
      *((_QWORD *)a1 + 20) = v246;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      a1[184] = a2[184];
      v247 = (void *)*((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v247;
      a1[208] = a2[208];
      v248 = *((_QWORD *)a2 + 28);
      v249 = v244;
      swift_bridgeObjectRetain();
      v250 = v247;
      if (v248 == 1)
      {
        v251 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v251;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
        *((_QWORD *)a1 + 28) = v248;
        v275 = *((_QWORD *)a2 + 30);
        *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
        *((_QWORD *)a1 + 30) = v275;
        v277 = (void *)*((_QWORD *)a2 + 31);
        v276 = *((_QWORD *)a2 + 32);
        *((_QWORD *)a1 + 31) = v277;
        *((_QWORD *)a1 + 32) = v276;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v278 = v277;
      }
      v279 = a2 + 264;
      v280 = *((_QWORD *)a2 + 34);
      if (v280 >= 0x11)
      {
        *((_QWORD *)a1 + 33) = *v279;
        *((_QWORD *)a1 + 34) = v280;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v279;
      }
      a1[280] = a2[280];
LABEL_147:
      a1[281] = v75;
LABEL_148:
      swift_storeEnumTagMultiPayload();
LABEL_149:
      v303 = a3;
      v304 = a3[5];
      v305 = &a1[v304];
      v306 = &a2[v304];
      v307 = *(_QWORD *)&a2[v304 + 8];
      *(_QWORD *)v305 = *(_QWORD *)&a2[v304];
      *((_QWORD *)v305 + 1) = v307;
      v308 = *(_QWORD *)&a2[v304 + 24];
      *((_QWORD *)v305 + 2) = *(_QWORD *)&a2[v304 + 16];
      *((_QWORD *)v305 + 3) = v308;
      v309 = *(_QWORD *)&a2[v304 + 40];
      *((_QWORD *)v305 + 4) = *(_QWORD *)&a2[v304 + 32];
      *((_QWORD *)v305 + 5) = v309;
      v310 = &a2[v304 + 48];
      v311 = *(_QWORD *)&a2[v304 + 56];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v311 >= 0xF)
      {
        *((_QWORD *)v305 + 6) = *(_QWORD *)v310;
        *((_QWORD *)v305 + 7) = v311;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v305 + 3) = *(_OWORD *)v310;
      }
      v312 = *((_QWORD *)v306 + 9);
      *((_QWORD *)v305 + 8) = *((_QWORD *)v306 + 8);
      *((_QWORD *)v305 + 9) = v312;
      v313 = *((_QWORD *)v306 + 11);
      *((_QWORD *)v305 + 10) = *((_QWORD *)v306 + 10);
      *((_QWORD *)v305 + 11) = v313;
      v314 = *((_QWORD *)v306 + 13);
      *((_QWORD *)v305 + 12) = *((_QWORD *)v306 + 12);
      *((_QWORD *)v305 + 13) = v314;
      *((_QWORD *)v305 + 14) = *((_QWORD *)v306 + 14);
      v305[120] = v306[120];
      v315 = v303[6];
      v316 = *(_QWORD *)&v342[v315];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA728598(v316);
      *(_QWORD *)&v341[v315] = v316;
      v317 = v303[7];
      v318 = &v341[v317];
      v319 = &v342[v317];
      v320 = sub_1BB86FE38();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v320 - 8) + 16))(v318, v319, v320);
      v321 = v303[8];
      v322 = &v341[v321];
      v323 = &v342[v321];
      v324 = *((_QWORD *)v323 + 1);
      if (v324)
      {
        *(_QWORD *)v322 = *(_QWORD *)v323;
        *((_QWORD *)v322 + 1) = v324;
        *((_QWORD *)v322 + 2) = *((_QWORD *)v323 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v322 = *(_OWORD *)v323;
        *((_QWORD *)v322 + 2) = *((_QWORD *)v323 + 2);
      }
      return v341;
    case 7u:
      v83 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v83;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v84 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v84;
      v85 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v85;
      v86 = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v86 == 1)
      {
        v87 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v87;
        a1[144] = a2[144];
        v88 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v88;
      }
      else
      {
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v86;
        v141 = a2 + 96;
        v142 = a2;
        v143 = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        if (v143)
        {
          v144 = *((_QWORD *)v142 + 16);
          *((_QWORD *)a1 + 15) = v143;
          *((_QWORD *)a1 + 16) = v144;
          (**(void (***)(uint64_t, char *, uint64_t))(v143 - 8))((uint64_t)(a1 + 96), v141, v143);
          *((_QWORD *)a1 + 17) = *((_QWORD *)v142 + 17);
          a1[144] = v142[144];
        }
        else
        {
          v227 = *((_OWORD *)v141 + 1);
          *((_OWORD *)a1 + 6) = *(_OWORD *)v141;
          *((_OWORD *)a1 + 7) = v227;
          *((_OWORD *)a1 + 8) = *((_OWORD *)v141 + 2);
          a1[144] = v141[48];
        }
        a2 = v142;
      }
      goto LABEL_148;
    case 8u:
      v339 = a3;
      v89 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v89;
      v90 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v91 = &a1[v90];
      v92 = &a2[v90];
      v93 = *(_QWORD *)&a2[v90 + 8];
      *(_QWORD *)v91 = *(_QWORD *)&a2[v90];
      *((_QWORD *)v91 + 1) = v93;
      v94 = *(_QWORD *)&a2[v90 + 24];
      *((_QWORD *)v91 + 2) = *(_QWORD *)&a2[v90 + 16];
      *((_QWORD *)v91 + 3) = v94;
      v335 = type metadata accessor for FormatCustomItem.Resolved();
      v95 = *(int *)(v335 + 24);
      v96 = &v91[v95];
      v97 = &v92[v95];
      v98 = type metadata accessor for FormatCustomItem.Action();
      v332 = *(_QWORD *)(v98 - 8);
      v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v332 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v99(v97, 1, v98))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        v197 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v96, v97, v197);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v332 + 56))(v96, 0, 1, v98);
      }
      a3 = v339;
      a1 = v341;
      a2 = v342;
      *(_QWORD *)&v91[*(int *)(v335 + 28)] = *(_QWORD *)&v92[*(int *)(v335 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_148;
    case 9u:
      v29 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v29;
      v30 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v30;
      v31 = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31)
      {
        v32 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = v31;
        *((_QWORD *)a1 + 8) = v32;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v31);
      }
      else
      {
        v153 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v153;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      }
      v154 = a1 + 72;
      v155 = a2 + 72;
      v156 = *((_QWORD *)a2 + 12);
      if (v156)
      {
        v157 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = v156;
        *((_QWORD *)a1 + 13) = v157;
        (**(void (***)(_OWORD *, _OWORD *))(v156 - 8))(v154, v155);
      }
      else
      {
        v165 = *(_OWORD *)(a2 + 88);
        *v154 = *v155;
        *(_OWORD *)(a1 + 88) = v165;
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      }
      v166 = a1 + 112;
      v167 = a2 + 112;
      v168 = *((_QWORD *)a2 + 17);
      if (v168)
      {
        v169 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = v168;
        *((_QWORD *)a1 + 18) = v169;
        (**(void (***)(_OWORD *, _OWORD *))(v168 - 8))(v166, v167);
      }
      else
      {
        v181 = *((_OWORD *)a2 + 8);
        *v166 = *v167;
        *((_OWORD *)a1 + 8) = v181;
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      }
      goto LABEL_148;
    case 0xAu:
      v101 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v101;
      v102 = (int *)type metadata accessor for FeedEngagementBanner();
      v103 = v102[5];
      v104 = &a1[v103];
      v105 = &a2[v103];
      v106 = sub_1BB86EDAC();
      v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
      swift_bridgeObjectRetain();
      v108 = v106;
      a2 = v342;
      v107(v104, v105, v108);
      *(_QWORD *)&a1[v102[6]] = *(_QWORD *)&v342[v102[6]];
      v109 = v102[7];
      v110 = &a1[v109];
      v111 = &v342[v109];
      *(_QWORD *)v110 = *(_QWORD *)v111;
      v110[8] = v111[8];
      v112 = v102[8];
      v113 = &a1[v112];
      v114 = &v342[v112];
      v115 = *((_QWORD *)v114 + 1);
      if (v115 >= 0x11)
      {
        *(_QWORD *)v113 = *(_QWORD *)v114;
        *((_QWORD *)v113 + 1) = v115;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v113 = *(_OWORD *)v114;
      }
      goto LABEL_148;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      goto LABEL_148;
    case 0xCu:
      v33 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v33;
      v34 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v34;
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_148;
    case 0xDu:
      v116 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v116;
      a1[16] = a2[16];
      v117 = a2 + 24;
      v118 = *((_QWORD *)a2 + 4);
      if (v118 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v117;
        *((_QWORD *)a1 + 4) = v118;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v117;
      }
      v145 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v145;
      v146 = (void *)*((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v146;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v147 = *((_QWORD *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v148 = v146;
      swift_bridgeObjectRetain();
      if (v147)
      {
        v149 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = v147;
        *((_QWORD *)a1 + 15) = v149;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v147 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v147);
      }
      else
      {
        v198 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v198;
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      }
      v199 = a1 + 128;
      v200 = a2 + 128;
      v201 = *((_QWORD *)a2 + 19);
      if (v201)
      {
        v202 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = v201;
        *((_QWORD *)a1 + 20) = v202;
        (**(void (***)(_OWORD *, _OWORD *))(v201 - 8))(v199, v200);
      }
      else
      {
        v209 = *((_OWORD *)a2 + 9);
        *v199 = *v200;
        *((_OWORD *)a1 + 9) = v209;
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      }
      goto LABEL_148;
    case 0xEu:
      v35 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v35;
      a1[16] = a2[16];
      v36 = a2 + 24;
      v37 = *((_QWORD *)a2 + 4);
      if (v37 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v36;
        *((_QWORD *)a1 + 4) = v37;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v36;
      }
      v134 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v134;
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_148;
    case 0xFu:
      v119 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v119;
      a1[16] = a2[16];
      v120 = a2 + 24;
      v121 = *((_QWORD *)a2 + 4);
      if (v121 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v120;
        *((_QWORD *)a1 + 4) = v121;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v120;
      }
      v150 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v150;
      v151 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v151] = *(_QWORD *)&a2[v151];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v152 = (char *)&loc_1BA7508C0 + 4 * word_1BB8FCA72[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v337 = a3;
      v38 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v38;
      v39 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v39;
      v40 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v40;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      v41 = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = v41;
      v42 = *((_QWORD *)a2 + 12);
      v43 = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 12) = v42;
      *((_QWORD *)a1 + 13) = v43;
      a1[112] = a2[112];
      v44 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v44;
      a1[136] = a2[136];
      v45 = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 19) = v45;
      v46 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v46;
      a1[184] = a2[184];
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      v47 = *((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v47;
      a1[224] = a2[224];
      v48 = *((_QWORD *)a2 + 27);
      *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
      *((_QWORD *)a1 + 27) = v48;
      v330 = a2 + 232;
      v49 = *((_QWORD *)a2 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49 >= 0x11)
      {
        *((_QWORD *)a1 + 29) = *v330;
        *((_QWORD *)a1 + 30) = v49;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)v330;
      }
      a3 = v337;
      swift_storeEnumTagMultiPayload();
      goto LABEL_149;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_149;
  }
}

uint64_t sub_1BA751F34(int64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD **v42;
  uint64_t v43;
  _QWORD *v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  void *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  void *v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char v90;

  v4 = v2;
  v7 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v79 - v9;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v79 - v13;
  v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  v16 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v16 == 255)
  {
    v84 = v12;
    v88 = v3;
    v17 = v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    v82 = v17;
    sub_1BA75290C(v17, (uint64_t)v10);
    v18 = *(_QWORD *)(a2 + 32);
    v85 = *(_QWORD *)(a2 + 40);
    v86 = v18;
    v83 = v4;
    v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      swift_bridgeObjectRetain();
      v21 = 0;
      v22 = 0;
      do
      {
        v90 = *(_BYTE *)(v19 + v21 + 32);
        sub_1BA758024();
        v23 = v89;
        if ((v89 & ~v22) == 0)
          v23 = 0;
        v22 |= v23;
        ++v21;
      }
      while (v20 != v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = 0;
    }
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v22;
    sub_1BA4B07F0(0, qword_1ED3AFC28, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    v81 = v40;
    v41 = swift_allocObject();
    v87 = v41;
    *(_QWORD *)(v41 + 16) = MEMORY[0x1E0DEE9D8];
    v42 = (_QWORD **)(v41 + 16);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = sub_1BA6ADEA4;
    *(_QWORD *)(v43 + 24) = v39;
    swift_beginAccess();
    v44 = *v42;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v42 = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v44 = sub_1BA752950(0, v44[2] + 1, 1, v44);
      *v42 = v44;
    }
    v47 = v44[2];
    v46 = v44[3];
    if (v47 >= v46 >> 1)
    {
      v44 = sub_1BA752950((_QWORD *)(v46 > 1), v47 + 1, 1, v44);
      *v42 = v44;
    }
    v44[2] = v47 + 1;
    v48 = &v44[2 * v47];
    v48[4] = sub_1BA6AB18C;
    v48[5] = v43;
    swift_endAccess();
    swift_release();
    v49 = v88;
    v2 = (uint64_t)v10;
    v50 = GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(a1, v86, v85, v87);
    if (!v49)
    {
      v2 = (uint64_t)v50;
      sub_1BA752890((uint64_t)v10);
LABEL_42:
      swift_release();
      return v2;
    }
    sub_1BA752890((uint64_t)v10);
    swift_release();
    if ((*(_BYTE *)(v83 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) != 0)
    {
      sub_1BA75290C(v82, v84);
      v51 = *(_QWORD *)(v19 + 16);
      if (v51)
      {
        swift_bridgeObjectRetain();
        v52 = 0;
        v53 = 0;
        do
        {
          v90 = *(_BYTE *)(v19 + v52 + 32);
          sub_1BA758024();
          v54 = v89;
          if ((v89 & ~v53) == 0)
            v54 = 0;
          v53 |= v54;
          ++v52;
        }
        while (v51 != v52);
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = 0;
      }
      v56 = swift_allocObject();
      *(_QWORD *)(v56 + 16) = v53;
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = MEMORY[0x1E0DEE9D8];
      v58 = (_QWORD *)(v57 + 16);
      v59 = swift_allocObject();
      *(_QWORD *)(v59 + 16) = sub_1BAB19AB8;
      *(_QWORD *)(v59 + 24) = v56;
      swift_beginAccess();
      v60 = *(_QWORD **)(v57 + 16);
      swift_retain();
      v61 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v57 + 16) = v60;
      if ((v61 & 1) == 0)
      {
        v60 = sub_1BA752950(0, v60[2] + 1, 1, v60);
        *v58 = v60;
      }
      v63 = v60[2];
      v62 = v60[3];
      if (v63 >= v62 >> 1)
      {
        v60 = sub_1BA752950((_QWORD *)(v62 > 1), v63 + 1, 1, v60);
        *v58 = v60;
      }
      v60[2] = v63 + 1;
      v64 = &v60[2 * v63];
      v64[4] = sub_1BA6AB18C;
      v64[5] = v59;
      swift_endAccess();
      swift_release();
      v65 = v57;
      v66 = v84;
      v2 = (uint64_t)GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(a1, 0, 0, v65);
      sub_1BA752890(v66);

      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if ((v16 & 1) == 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
LABEL_34:
    swift_willThrow();
LABEL_35:
    swift_willThrow();
    return v2;
  }
  v25 = *v15;
  v24 = v15[1];
  v26 = v15[4];
  v27 = v15[5];
  v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  v29 = *v28;
  if (!*(_QWORD *)(v29 + 16))
  {
LABEL_33:
    swift_endAccess();
    v2 = type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v55 = v25;
    v55[1] = v24;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  v30 = sub_1BA6E35A8(v25, v24);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v87 = v26;
  v88 = v3;
  v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v86 = v32;
  v33 = v32 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
  swift_beginAccess();
  sub_1BA75290C(v33, (uint64_t)v14);
  v34 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v35 = *(_QWORD *)(v34 + 16);
  v80 = a1;
  if (v35)
  {
    swift_bridgeObjectRetain();
    v36 = 0;
    v37 = 0;
    do
    {
      v90 = *(_BYTE *)(v34 + v36 + 32);
      sub_1BA758024();
      v38 = v89;
      if ((v89 & ~v37) == 0)
        v38 = 0;
      v37 |= v38;
      ++v36;
    }
    while (v35 != v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
  }
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = v37;
  sub_1BA4B07F0(0, qword_1ED3AFC28, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = MEMORY[0x1E0DEE9D8];
  v70 = (_QWORD *)(v69 + 16);
  v71 = swift_allocObject();
  *(_QWORD *)(v71 + 16) = sub_1BAB19AB8;
  *(_QWORD *)(v71 + 24) = v68;
  swift_beginAccess();
  v72 = *(_QWORD **)(v69 + 16);
  swift_retain();
  v73 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v69 + 16) = v72;
  v74 = v27;
  if ((v73 & 1) == 0)
  {
    v72 = sub_1BA752950(0, v72[2] + 1, 1, v72);
    *v70 = v72;
  }
  v76 = v72[2];
  v75 = v72[3];
  if (v76 >= v75 >> 1)
  {
    v72 = sub_1BA752950((_QWORD *)(v75 > 1), v76 + 1, 1, v72);
    *v70 = v72;
  }
  v72[2] = v76 + 1;
  v77 = &v72[2 * v76];
  v77[4] = sub_1BA6AB18C;
  v77[5] = v71;
  swift_endAccess();
  swift_release();
  v78 = v88;
  v2 = (uint64_t)GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(v80, v87, v74, v69);
  swift_release();
  swift_release();
  sub_1BA752890((uint64_t)v14);
  if (v78)
    goto LABEL_35;
  return v2;
}

_QWORD *sub_1BA752778(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 17;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 4);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4])
          memmove(v15, a4 + 4, 16 * v10);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB394FE8(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA752890(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA7528CC()
{
  unint64_t result;

  result = qword_1ED3BA050;
  if (!qword_1ED3BA050)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED3BA050);
  }
  return result;
}

uint64_t sub_1BA75290C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BA752950(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA752778(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B0460, (uint64_t (*)(uint64_t))sub_1BA752964);
}

unint64_t sub_1BA752964()
{
  unint64_t result;

  result = qword_1ED3B03E8;
  if (!qword_1ED3B03E8)
  {
    sub_1BA81D50C();
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_1ED3B03E8);
  }
  return result;
}

uint64_t sub_1BA7529B4(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 3 && a5 != 2)
  {
    if (a5)
      return result;
    sub_1BA6E0CBC(result, a2);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA752A0C(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  switch((a14 >> 18) & 4 | ((unsigned __int16)a14 >> 14))
  {
    case 0u:
      result = sub_1BA6EF82C(result, a2, a3, a4, a5, a6);
      break;
    case 1u:
      sub_1BA6EF090(result, a2, a3, a4, a5, a6, a7, SHIBYTE(a7));
      result = sub_1BA6EF404(a8, a9, a10, a11, a12, a13, a14 & 0xFFEF3FFF);
      break;
    case 5u:
      result = sub_1BA5A7EF8(result, a2, a3, a4);
      break;
    case 6u:
      sub_1BA6F5D74(result);
      result = sub_1BA7DE08C(a2, a3);
      break;
    case 7u:
      result = sub_1BAC653C4(a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA752B5C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v8 = sub_1BB86EB00();
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11)
  {
LABEL_11:
    v25 = a4;
    sub_1BA71CA6C(a4);
    FormatSize.bind(binder:context:)(a1, a2);
    return sub_1BA719718(a4);
  }
  v20[0] = a4;
  swift_bridgeObjectRetain();
  v20[1] = a3;
  v12 = (unint64_t *)(a3 + 40);
  while (1)
  {
    v23 = v11;
    v13 = a2;
    v14 = *(v12 - 1);
    v15 = *v12;
    v25 = v14;
    swift_retain();
    sub_1BA71CA6C(v15);
    swift_retain();
    v16 = v24;
    sub_1BA7049A8();
    swift_release();
    v24 = v16;
    if (v16)
    {
      swift_release();
      sub_1BA719718(v15);
      return swift_bridgeObjectRelease();
    }
    if ((sub_1BB86EAF4() & 1) != 0)
    {
      a2 = v13;
      goto LABEL_8;
    }
    v25 = v14;
    swift_retain();
    a2 = v13;
    v17 = v24;
    FormatExpression.bind(binder:context:)();
    if (v17)
      break;
    swift_release();
    v25 = v15;
    sub_1BA71CA6C(v15);
    FormatSize.bind(binder:context:)(a1, v13);
    v24 = 0;
    sub_1BA719718(v15);
LABEL_8:
    v18 = sub_1BB86EAE8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
    swift_release();
    sub_1BA719718(v15);
    if ((v18 & 1) != 0)
      return swift_bridgeObjectRelease();
    v12 += 2;
    v11 = v23 - 1;
    if (v23 == 1)
    {
      swift_bridgeObjectRelease();
      a4 = v20[0];
      goto LABEL_11;
    }
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
  swift_release();
  sub_1BA719718(v15);
  return swift_bridgeObjectRelease();
}

void FormatCommandBinding.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  if (*(_BYTE *)(v0 + 25))
    v2 = 4;
  else
    v2 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BA752E70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v0;
  *(_QWORD *)(v5 - 96) = v4;
  *(_BYTE *)(v5 - 88) = v3;
  sub_1BA856ECC(v1, v0, v4, v3, (uint64_t (*)(void))sub_1BA856DD0);
  FormatGroupBinding.Command.bind(binder:context:)();
  return sub_1BAC65170(v1, v0, v4, v3, v2, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

void sub_1BA752F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((v4 & 1) != 0)
  {
    *(_QWORD *)(v7 - 112) = v2;
    *(_QWORD *)(v7 - 104) = v1;
    *(_QWORD *)(v7 - 96) = v5;
    *(_BYTE *)(v7 - 65) = 5;
    sub_1BAC65170(v2, v1, v5, v4, v3, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    v8 = sub_1BB6B84D4((uint64_t *)(v7 - 112), (char *)(v7 - 65));
    if (!v0)
    {
      sub_1BB3757A0(v2, v1, v8, 1, v6);
      sub_1BA502AD0(v6, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
  JUMPOUT(0x1BA752F3CLL);
}

void sub_1BA753068()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BC758)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BC758);
  }
}

void sub_1BA7530BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = v3;
  v55 = (__int128 *)a2;
  v54 = a1;
  v6 = type metadata accessor for FormatOption();
  v49 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v42 - v11);
  v50 = *(_QWORD *)(a3 + 16);
  if (v50)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v14 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    v15 = 0;
    v52 = a3;
    v47 = v12;
    v43 = v8;
    v45 = v13;
    v46 = v14;
    while (1)
    {
      sub_1BA8CAF1C(v13 + v14 * v15, (uint64_t)v12, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v16 = v12[6];
      v17 = v12[7];
      v18 = v12[8];
      v19 = *(_QWORD *)(v16 + 16);
      v51 = v15;
      v53 = v18;
      if (v19)
        break;
LABEL_8:
      swift_bridgeObjectRetain();
      sub_1BA6FEDF0(v54, (uint64_t)v55, v17);
      swift_bridgeObjectRelease();
      if (v4)
        goto LABEL_16;
      v35 = *(_QWORD *)(v53 + 16);
      if (v35)
      {
        v36 = v49;
        v37 = v53 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
        swift_bridgeObjectRetain_n();
        v38 = *(_QWORD *)(v36 + 72);
        do
        {
          sub_1BA4C2DD8(v37, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v39 = *((_QWORD *)v8 + 2);
          v40 = v55[3];
          v60 = v55[2];
          v61 = v40;
          v62 = v55[4];
          v63 = *((_QWORD *)v55 + 10);
          v64 = v39;
          v41 = v55[1];
          v58 = *v55;
          v59 = v41;
          swift_retain();
          sub_1BA711C44();
          swift_release();
          sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v37 += v38;
          --v35;
        }
        while (v35);
        swift_bridgeObjectRelease_n();
        v14 = v46;
        v15 = v51;
      }
      ++v15;
      sub_1BB06B59C((uint64_t)v12, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v13 = v45;
      if (v15 == v50)
        goto LABEL_17;
    }
    v56 = v19;
    v44 = v17;
    v72 = v4;
    v20 = v16;
    swift_bridgeObjectRetain_n();
    v48 = v20;
    v21 = (uint64_t *)(v20 + 48);
    while (1)
    {
      v22 = *(v21 - 1);
      v24 = *v21;
      v23 = v21[1];
      v25 = v21[2];
      v26 = v21[3];
      v27 = v21[4];
      v28 = v21[5];
      v64 = *(v21 - 2);
      v65 = v22;
      v66 = v24;
      v67 = v23;
      v68 = v25;
      v69 = v26;
      v70 = v27;
      v71 = v28;
      v29 = v55[3];
      v60 = v55[2];
      v61 = v29;
      v62 = v55[4];
      v63 = *((_QWORD *)v55 + 10);
      v30 = v55[1];
      v58 = *v55;
      v59 = v30;
      v31 = v64;
      v32 = v22;
      v33 = v27;
      v57 = v28;
      sub_1BA76B724(v64, v22, v24, v23, v25, v26, v27);
      v34 = v72;
      sub_1BAC5FA3C();
      v72 = v34;
      if (v34)
        break;
      v21 += 8;
      sub_1BA76B698(v31, v32, v24, v23, v25, v26, v33);
      if (!--v56)
      {
        swift_bridgeObjectRelease_n();
        v4 = v72;
        v12 = v47;
        v8 = v43;
        v14 = v46;
        v15 = v51;
        v17 = v44;
        goto LABEL_8;
      }
    }
    sub_1BA76B698(v31, v32, v24, v23, v25, v26, v33);
    swift_bridgeObjectRelease_n();
    v12 = v47;
LABEL_16:
    sub_1BB06B59C((uint64_t)v12, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
LABEL_17:
    swift_bridgeObjectRelease();
  }
}

void sub_1BA7535C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD v22[5];
  uint64_t v23;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v7;
  v22[4] = *(_OWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v8;
  sub_1BA755B9C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[6];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA7538E0(a1, a2);
    v13 = v2[8];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v22, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (uint64_t *)(v15 + 72);
        do
        {
          v18 = *v17;
          if (*v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v22, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v17 += 7;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    sub_1BA645F4C();
    if (*((__int16 *)v4 + 52) <= -513)
      sub_1BA75DD88();
    swift_beginAccess();
    v19 = v4[15];
    if (v19 >> 62 == 1)
    {
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      sub_1BA67D3F4(v20);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v22, v20, v21);
      sub_1BA6EEDB4(v20);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BA7538E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[66];
  __int128 __dst[33];
  uint64_t v58;

  v39 = *(_QWORD *)a2;
  v40 = *(_BYTE *)(a2 + 8);
  v35 = *(_BYTE *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 24);
  v34 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v37 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v58 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  v43 = *(_QWORD *)(a2 + 72);
  swift_beginAccess();
  v32 = v2;
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v9 + 16);
  v42 = v8;
  v38 = v5;
  if (v10)
  {
    swift_bridgeObjectRetain_n();
    memcpy(__dst, (const void *)(v9 + 32), sizeof(__dst));
    v11 = v10 - 1;
    for (i = 560; ; i += 528)
    {
      memcpy(v56, __dst, sizeof(v56));
      v44 = v39;
      v45 = v40;
      v46 = v35;
      v47 = v34;
      v48 = v4;
      v49 = v5;
      v50 = v37;
      v51 = v6;
      v52 = v7;
      v53 = v58;
      v54 = v43;
      v55 = v42;
      sub_1BAC67FA0((uint64_t)__dst);
      sub_1BA753EF0(a1, &v44);
      if (v3)
      {
        sub_1BAC68120((uint64_t)__dst);
        swift_bridgeObjectRelease_n();
        return;
      }
      sub_1BAC68120((uint64_t)__dst);
      if (!v11)
        break;
      memcpy(__dst, (const void *)(v9 + i), sizeof(__dst));
      --v11;
    }
    swift_bridgeObjectRelease_n();
    v15 = v34;
    v16 = v5;
    v8 = v42;
    v13 = v2;
    v14 = v35;
  }
  else
  {
    v13 = v2;
    v14 = v35;
    v15 = v34;
    v16 = v5;
  }
  if ((~*(_QWORD *)(v13 + 56) & 0xF000000000000007) != 0)
  {
    v56[0] = *(_QWORD *)(v13 + 56);
    *(_QWORD *)&__dst[0] = v39;
    BYTE8(__dst[0]) = v40;
    BYTE9(__dst[0]) = v14;
    *(_QWORD *)&__dst[1] = v15;
    *((_QWORD *)&__dst[1] + 1) = v4;
    *(_QWORD *)&__dst[2] = v16;
    *((_QWORD *)&__dst[2] + 1) = v37;
    *(_QWORD *)&__dst[3] = v6;
    *((_QWORD *)&__dst[3] + 1) = v7;
    *(_QWORD *)&__dst[4] = v58;
    *((_QWORD *)&__dst[4] + 1) = v43;
    *(_QWORD *)&__dst[5] = v8;
    v17 = v15;
    sub_1BA754E6C();
    if (v3)
      return;
    v33 = v7;
    v36 = v6;
  }
  else
  {
    v33 = v7;
    v36 = v6;
    v17 = v15;
  }
  v18 = MEMORY[0x1E0DEB940];
  sub_1BA760F3C(v13 + 64, (uint64_t)v56, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  sub_1BA760F3C((uint64_t)v56, (uint64_t)__dst, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v19 = v37;
  if (sub_1BAB05F98((uint64_t)__dst) == 1)
  {
    v20 = v14;
    v21 = v17;
    v22 = v4;
    v23 = v58;
    v24 = v43;
  }
  else
  {
    sub_1BA7439D4(__dst, (uint64_t)&v44);
    v20 = v14;
    v21 = v17;
    v22 = v4;
    v23 = v58;
    v24 = v43;
    sub_1BA754450();
    if (v3)
      return;
  }
  v25 = v2;
  v26 = *(_QWORD *)(v2 + 192);
  if (v26)
  {
    v27 = *(_QWORD *)(v26 + 16);
    v28 = v42;
    if (v27)
    {
      v29 = swift_bridgeObjectRetain() + 64;
      while (1)
      {
        v44 = v39;
        v45 = v40;
        v46 = v20;
        v47 = v34;
        v48 = v22;
        v49 = v38;
        v50 = v19;
        v51 = v36;
        v52 = v33;
        v53 = v58;
        v54 = v43;
        v55 = v28;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA7547AC();
        if (v3)
          break;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v29 += 40;
        --v27;
        v19 = v37;
        v28 = v42;
        if (!v27)
        {
          swift_bridgeObjectRelease();
          v21 = v34;
          v23 = v58;
          v24 = v43;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
LABEL_22:
    v25 = v32;
  }
  else
  {
    v28 = v42;
  }
  if (*(unsigned __int8 *)(v25 + 280) != 254)
  {
    v44 = v39;
    v45 = v40;
    v46 = v20;
    v47 = v21;
    v48 = v22;
    v49 = v38;
    v50 = v19;
    v51 = v36;
    v52 = v33;
    v53 = v23;
    v54 = v24;
    v55 = v28;
    sub_1BA7547AC();
    if (v3)
      return;
    v25 = v32;
  }
  if (*(_QWORD *)(v25 + 520) != 9)
  {
    v30 = *(_QWORD *)(v25 + 528);
    if ((~v30 & 0xF000000000000007) != 0)
    {
      v44 = v39;
      v45 = v40;
      v46 = v20;
      v47 = v21;
      v48 = v22;
      v49 = v38;
      v50 = v19;
      v51 = v36;
      v52 = v33;
      v53 = v23;
      v54 = v24;
      v55 = v28;
      sub_1BA7547AC();
      if (v3)
        return;
      v25 = v32;
    }
    else
    {
      sub_1BA6E8A90(*(_QWORD *)(v25 + 520), v30);
    }
  }
  if (*(_QWORD *)(v25 + 536) != 9)
  {
    v31 = *(_QWORD *)(v25 + 544);
    if ((~v31 & 0xF000000000000007) != 0)
    {
      v44 = v39;
      v45 = v40;
      v46 = v20;
      v47 = v21;
      v48 = v22;
      v49 = v38;
      v50 = v19;
      v51 = v36;
      v52 = v33;
      v53 = v23;
      v54 = v24;
      v55 = v28;
      sub_1BA7547AC();
    }
    else
    {
      sub_1BA6E8A90(*(_QWORD *)(v25 + 536), v31);
    }
  }
}

void sub_1BA753EF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[136];
  uint64_t v71;

  v3 = *a2;
  v44 = *((_BYTE *)a2 + 8);
  v47 = *((_BYTE *)a2 + 9);
  v4 = a2[3];
  v45 = a2[2];
  v5 = a2[4];
  v39 = a2[5];
  v6 = a2[7];
  v46 = a2[6];
  v7 = a2[8];
  v8 = a2[9];
  v9 = a2[10];
  v10 = *(_QWORD *)(v2 + 16);
  sub_1BA760F3C(v2 + 24, (uint64_t)v70, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v35 = *(unsigned __int8 *)(v2 + 240);
  v36 = *(_QWORD *)(v2 + 480);
  v37 = *(_QWORD *)(v2 + 152);
  v33 = *(_QWORD *)(v2 + 488);
  v34 = *(_QWORD *)(v2 + 496);
  v32 = *(_QWORD *)(v2 + 504);
  v43 = v8;
  if ((~v10 & 0xF000000000000007) != 0)
  {
    v48 = v10;
    *(_QWORD *)&v60 = v3;
    BYTE8(v60) = v44;
    BYTE9(v60) = v47;
    v61 = v45;
    v62 = v4;
    v63 = v5;
    v64 = v39;
    v65 = v46;
    v66 = v6;
    v67 = v7;
    v68 = v8;
    v69 = v9;
    v14 = v71;
    sub_1BA754E6C();
    if (v14)
      return;
    v13 = v5;
    v42 = v4;
    v71 = 0;
    v11 = v46;
    v12 = v39;
  }
  else
  {
    v42 = v4;
    v11 = v46;
    v12 = v39;
    v13 = v5;
  }
  sub_1BA760F3C((uint64_t)v70, (uint64_t)&v60, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v15 = v12;
  v41 = v13;
  if (sub_1BAB05F98((uint64_t)&v60) == 1)
  {
    v16 = v11;
    v17 = v6;
    v18 = v7;
    v19 = v43;
    v20 = v71;
    v21 = v13;
  }
  else
  {
    sub_1BA7439D4(&v60, (uint64_t)&v48);
    v17 = v6;
    v18 = v7;
    v19 = v43;
    v20 = v71;
    sub_1BA754450();
    if (v20)
      return;
    v21 = v13;
    v16 = v46;
  }
  v22 = v9;
  v23 = v47;
  if (v37)
  {
    v24 = *(_QWORD *)(v37 + 16);
    if (v24)
    {
      v40 = v17;
      v71 = v20;
      v25 = swift_bridgeObjectRetain() + 64;
      v38 = v3;
      while (1)
      {
        v48 = v3;
        v49 = v44;
        v50 = v47;
        v51 = v45;
        v52 = v42;
        v53 = v41;
        v54 = v15;
        v55 = v46;
        v56 = v40;
        v57 = v18;
        v58 = v43;
        v59 = v22;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v26 = v71;
        sub_1BA7547AC();
        v71 = v26;
        if (v26)
          break;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v25 += 40;
        --v24;
        v3 = v38;
        if (!v24)
        {
          swift_bridgeObjectRelease();
          v20 = v71;
          v23 = v47;
          v17 = v40;
          v21 = v41;
          v16 = v46;
          v19 = v43;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    v21 = v41;
  }
LABEL_16:
  v27 = v36;
  if (v35 != 254)
  {
    v48 = v3;
    v49 = v44;
    v50 = v23;
    v51 = v45;
    v52 = v42;
    v53 = v21;
    v54 = v15;
    v55 = v16;
    v56 = v17;
    v57 = v18;
    v58 = v19;
    v59 = v22;
    sub_1BA7547AC();
    if (v20)
      return;
    v27 = v36;
    v19 = v43;
  }
  if (v27 == 9)
  {
    v28 = v18;
    v29 = v17;
    v30 = v16;
    v31 = v23;
  }
  else if ((~v33 & 0xF000000000000007) != 0)
  {
    v48 = v3;
    v49 = v44;
    v50 = v23;
    v51 = v45;
    v52 = v42;
    v53 = v21;
    v54 = v15;
    v55 = v16;
    v56 = v17;
    v57 = v18;
    v58 = v19;
    v59 = v22;
    v71 = v22;
    sub_1BA7547AC();
    if (v20)
      return;
    v28 = v18;
    v29 = v17;
    v30 = v16;
    v31 = v23;
    v22 = v71;
  }
  else
  {
    v28 = v18;
    v29 = v17;
    v30 = v16;
    v31 = v23;
    sub_1BA6E8A90(v27, v33);
  }
  if (v34 != 9)
  {
    if ((~v32 & 0xF000000000000007) != 0)
    {
      v48 = v3;
      v49 = v44;
      v50 = v31;
      v51 = v45;
      v52 = v42;
      v53 = v41;
      v54 = v15;
      v55 = v30;
      v56 = v29;
      v57 = v28;
      v58 = v43;
      v59 = v22;
      sub_1BA7547AC();
    }
    else
    {
      sub_1BA6E8A90(v34, v32);
    }
  }
}

void sub_1BA754450()
{
  __int128 *v0;
  char *v1;
  __int128 v2[8];
  _BYTE v3[136];

  sub_1BA7439D4(v0, (uint64_t)v2);
  sub_1BA7439D4(v2, (uint64_t)v3);
  v1 = (char *)sub_1BA7544E0 + 4 * byte_1BB8A6477[sub_1BAB05900((uint64_t)v3)];
  __asm { BR              X10 }
}

_QWORD *sub_1BA7544E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  _BYTE v5[128];
  __int128 v6[22];

  v2 = (_QWORD *)sub_1BAB0593C(v1 - 216);
  v4 = v2[1];
  *(_QWORD *)(v1 - 72) = *v2;
  sub_1BA7439D4(v6, (uint64_t)v5);
  sub_1BAB0593C((uint64_t)v5);
  swift_retain();
  swift_retain();
  sub_1BA7547AC();
  if (!v0)
  {
    *(_QWORD *)(v1 - 72) = v4;
    sub_1BA7547AC();
  }
  return sub_1BA6A0C50(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
}

void sub_1BA7547AC()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA754818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v4 - 72) = *(_QWORD *)(a1 + 16);
  swift_retain();
  swift_retain();
  sub_1BA7547AC(v2, v3);
  if (!v1)
  {
    *(_QWORD *)(v4 - 72) = v5;
    sub_1BA7547AC(v2, v3);
  }
  swift_release();
  return swift_release();
}

void sub_1BA754BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
}

void sub_1BA754E6C()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA754F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = v0;
  *(_QWORD *)(v13 - 232) = v2;
  *(_QWORD *)(v13 - 224) = v1;
  *(_QWORD *)(v13 - 248) = v4;
  *(_QWORD *)(v13 - 240) = v3;
  *(_QWORD *)(v13 - 256) = v5;
  v15 = swift_projectBox();
  sub_1BA4C2DD8(v15, v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  *(_QWORD *)(v13 - 216) = v12;
  *(_BYTE *)(v13 - 208) = v11;
  *(_BYTE *)(v13 - 207) = v9;
  *(_QWORD *)(v13 - 200) = v10;
  *(_QWORD *)(v13 - 192) = v6;
  v16 = *(_QWORD *)(v13 - 224);
  *(_QWORD *)(v13 - 184) = v14;
  *(_QWORD *)(v13 - 176) = v16;
  v17 = *(_QWORD *)(v13 - 240);
  *(_QWORD *)(v13 - 168) = *(_QWORD *)(v13 - 232);
  *(_QWORD *)(v13 - 160) = v17;
  v18 = *(_QWORD *)(v13 - 256);
  *(_QWORD *)(v13 - 152) = *(_QWORD *)(v13 - 248);
  *(_QWORD *)(v13 - 144) = v18;
  *(_QWORD *)(v13 - 136) = v8;
  sub_1BA9C94C4(*(unint64_t **)(v13 - 72));
  return sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
}

void FormatOptionValue.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];

  v11[2] = a2;
  v11[1] = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v11[0] = (char *)v11 - v6;
  v7 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v8);
  sub_1BA7125BC(0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA712634(0);
  MEMORY[0x1E0C80A78](v10);
  __asm { BR              X11 }
}

uint64_t sub_1BA7552A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(v1 - 72) = *(_BYTE *)(a1 + 16);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 - 152);
    v4 = *(_QWORD *)(v1 - 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 176), v3);
    v6 = *(_QWORD *)(v1 - 200);
    v5 = *(_QWORD *)(v1 - 192);
    v7 = *(_QWORD *)(v1 - 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v6, v5, v3, v4);
    v8 = v7;
    result = __swift_destroy_boxed_opaque_existential_1(v1 - 176);
    if (v7)
    {
      *(_QWORD *)(v1 - 184) = v7;
      return result;
    }
  }
  else
  {
    *(_QWORD *)(v1 - 144) = 0;
    *(_OWORD *)(v1 - 176) = 0u;
    *(_OWORD *)(v1 - 160) = 0u;
    sub_1BA65DB80(v1 - 176, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    v5 = *(_QWORD *)(v1 - 192);
    v8 = *(_QWORD *)(v1 - 184);
    v6 = *(_QWORD *)(v1 - 200);
  }
  swift_bridgeObjectRetain();
  sub_1BABB05F0(v6, v5, v2);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 184) = v8;
  return result;
}

void sub_1BA755A18()
{
  swift_retain();
  JUMPOUT(0x1BA755A20);
}

void sub_1BA755A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 176) = v4;
  *(_QWORD *)(v5 - 168) = v3;
  *(_QWORD *)(v5 - 160) = v1;
  *(_BYTE *)(v5 - 72) = 6;
  swift_retain();
  sub_1BA690C00(v4, v3, v1, 0);
  v6 = *(_QWORD *)(v5 - 184);
  v7 = sub_1BB6B84D4((uint64_t *)(v5 - 176), (char *)(v5 - 72));
  if (v6)
  {
    *(_QWORD *)(v5 - 184) = v6;
  }
  else
  {
    sub_1BB3757A0(v4, v3, v7, 1, v0);
    *(_QWORD *)(v5 - 184) = 0;
    sub_1BA502AD0(v0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
  }
  sub_1BA5A7EF8(v4, v3, v1, 0);
  sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  JUMPOUT(0x1BA75561CLL);
}

uint64_t type metadata accessor for FormatRemoteFont()
{
  uint64_t result;

  result = qword_1ED3B49B8;
  if (!qword_1ED3B49B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatURL()
{
  uint64_t result;

  result = qword_1ED3B9030;
  if (!qword_1ED3B9030)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA755B9C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA755BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  return sub_1BB571CD8(v1, (uint64_t)&v3, *(_QWORD *)(a1 + 16));
}

void sub_1BA755C68(uint64_t a1@<X8>, __int128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1BA705894(v5);
  sub_1BB571E78(v3, &a2, v6);
  if (!v2)
  {
    *(_QWORD *)(v4 - 40) = v5;
    sub_1BA755B9C();
  }
  swift_bridgeObjectRelease();
  sub_1BA7058C4(v5);
  JUMPOUT(0x1BA755C4CLL);
}

void sub_1BA755CC8()
{
  __asm { BR              X12 }
}

void sub_1BA755D30(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = *(_QWORD *)(a1 + 16);
  sub_1BA7547AC();
}

uint64_t sub_1BA75607C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v11 = result;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return result;
  swift_bridgeObjectRetain();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  for (i = a3 + 56; ; i += 32)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    if (swift_dynamicCast())
      break;
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    sub_1BA65DB80((uint64_t)&v13, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v5)
      return swift_bridgeObjectRelease();
  }
  v16 = v4;
  v8 = *((_QWORD *)&v14 + 1);
  v9 = v15;
  __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
  v10 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v11, a2, v8, v9);
  v4 = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  if (!v10)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA7561F0(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_1BA756210()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA756270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v25 = *(_QWORD *)(a2 + 24);
  v26 = v14;
  *(_QWORD *)(v15 - 72) = *(_QWORD *)(a2 + 16);
  v30 = v10;
  v31 = v5;
  v32 = v4;
  v33 = v3;
  v34 = v11;
  v35 = v2;
  v36 = v10;
  v37 = v9;
  v38 = v8;
  v39 = v6;
  v40 = v13;
  v41 = v12;
  v42 = v14;
  v28 = v8;
  v29 = v9;
  v27 = v6;
  v16 = v13;
  v17 = v12;
  v19 = v11;
  v20 = v2;
  v21 = v3;
  v22 = v4;
  v23 = v5;
  result = ((uint64_t (*)(uint64_t, uint64_t *))sub_1BA756210)(a1, &v31);
  if (!v7)
  {
    *(_QWORD *)(v15 - 72) = v25;
    v31 = v23;
    v32 = v22;
    v33 = v21;
    v34 = v19;
    v35 = v20;
    v36 = v30;
    v37 = v29;
    v38 = v28;
    v39 = v27;
    v40 = v16;
    v41 = v17;
    v42 = v26;
    return ((uint64_t (*)(uint64_t, uint64_t *))sub_1BA756210)(a1, &v31);
  }
  return result;
}

uint64_t sub_1BA756470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    while (1)
    {
      swift_retain();
      sub_1BA7547AC();
      if (v1)
        break;
      ++v3;
      swift_release();
      if (v2 == v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA756590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    v9 = *((_QWORD *)&v13 + 1);
    v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    if (v5)
      return result;
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_1BA65DB80((uint64_t)&v12, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  swift_bridgeObjectRetain();
  sub_1BA75607C(a1, a2, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7566C0(uint64_t result)
{
  if ((result & 7u) <= 4uLL)
    return swift_retain();
  return result;
}

uint64_t sub_1BA7566E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v9 = result;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return result;
  swift_bridgeObjectRetain();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  for (i = (uint64_t *)(a3 + 48); ; i += 3)
  {
    v14 = *i;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
      break;
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1BA65DB80((uint64_t)&v11, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v4)
      return swift_bridgeObjectRelease();
  }
  v8 = *((_QWORD *)&v12 + 1);
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, a2, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  if (!v3)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA756834()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v17 = v0[3];
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    v6 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
          goto LABEL_30;
        }
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
      }
      v6 += 16;
      if (!--v5)
      {
        swift_bridgeObjectRelease_n();
        v4 = v18;
        break;
      }
    }
  }
  v8 = *(_QWORD *)(v2 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    v9 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v9 & 1) == 0)
      {
        v10 = *((_QWORD *)v9 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
          goto LABEL_30;
        }
        sub_1BA72C46C(v10, 0);
        sub_1BA72C46C(v10, 0);
      }
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
    v4 = v18;
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    v12 = (_BYTE *)(v4 + 40);
    while (1)
    {
      if ((*v12 & 1) == 0)
      {
        v13 = *((_QWORD *)v12 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
        if (v1)
          break;
      }
      v12 += 16;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    v14 = *(_QWORD *)(v17 + 16);
    if (!v14)
      return;
    swift_bridgeObjectRetain_n();
    v15 = (_BYTE *)(v17 + 40);
    do
    {
      if ((*v15 & 1) == 0)
      {
        v16 = *((_QWORD *)v15 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v16, 0);
        sub_1BA72C46C(v16, 0);
        if (v1)
          break;
      }
      v15 += 16;
      --v14;
    }
    while (v14);
  }
LABEL_30:
  swift_bridgeObjectRelease_n();
}

void FormatFloat.bind(binder:context:)()
{
  uint64_t v1;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA756B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 56) = *(_QWORD *)(a1 + 16);
  swift_retain();
  ((void (*)(uint64_t, uint64_t))FormatFloat.bind(binder:context:))(v2, v1);
  return swift_release();
}

void sub_1BA756C1C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB873C84();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BA756C74()
{
  sub_1BA7547AC();
}

void sub_1BA756CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[5];
  uint64_t v15;
  uint64_t v16;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v6;
  v14[4] = *(_OWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BA796828(a1, (uint64_t)v14, v8);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((~*(_QWORD *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      v16 = *(_QWORD *)(v4 + 64);
      sub_1BA755CC8();
    }
    v9 = *(_QWORD *)(v4 + 72);
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v13 = a1;
        v11 = swift_bridgeObjectRetain() + 64;
        do
        {
          v16 = *(_QWORD *)(v11 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA7547AC();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v11 += 40;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease();
        a1 = v13;
      }
    }
    if (*(unsigned __int8 *)(v4 + 184) != 254)
    {
      v16 = *(_QWORD *)(v4 + 136);
      sub_1BA7547AC();
    }
    v12 = *(_QWORD *)(v4 + 240);
    if (v12)
      sub_1BB5641B0(a1, (uint64_t)v14, v12);
  }
}

BOOL sub_1BA756EF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA756F00(a1, *(uint64_t (**)(void))(v1 + 16));
}

BOOL sub_1BA756F00(uint64_t a1, uint64_t (*a2)(void))
{
  return (a2() & 1) == 0;
}

uint64_t sub_1BA756F28()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86FA84();
}

uint64_t sub_1BA756F68()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_uniqueKey);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t sub_1BA756FBC(uint64_t result)
{
  if ((result & 7u) <= 4uLL)
    return swift_release();
  return result;
}

void FormatEdgeInsetsEquation.bind(binder:context:)()
{
  sub_1BA756834();
}

uint64_t destroy for FormatCompilerOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  if (*(_QWORD *)(v4 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v4 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v6 = sub_1BB86E710();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + *(int *)(a2 + 28);
  if (!v8(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7570D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_BYTE *, _QWORD, uint64_t), uint64_t (*a5)(_QWORD), uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _BYTE *a12)
{
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_BYTE *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _BYTE *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t inited;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t (*v114)(void);
  _BYTE v115[4];
  unsigned int v116;
  _BYTE *v117;
  __int128 v118;
  uint64_t v119;
  void (*v120)(_BYTE *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t (*v135)(_BYTE *, _QWORD, uint64_t);
  uint64_t (*v136)(_QWORD);
  uint64_t (*v137)(void);
  uint64_t v138;
  _BYTE *KeyPath;
  _BYTE *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v141 = a8;
  v137 = a6;
  v138 = a7;
  v135 = a4;
  v136 = a5;
  v145 = a3;
  v13 = v12;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v132 = *(_QWORD *)(v16 - 8);
  v133 = v16;
  MEMORY[0x1E0C80A78](v16);
  v131 = &v115[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v18);
  v134 = &v115[-v19];
  v142 = sub_1BB86DA38();
  KeyPath = *(_BYTE **)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v21 = &v115[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v140 = &v115[-v23];
  v156 = a1;
  swift_beginAccess();
  v24 = v13[2];
  v25 = v13[3];
  swift_bridgeObjectRetain();
  v143 = sub_1BA717D44(v24, v25);
  v146 = v26;
  swift_bridgeObjectRelease();
  v27 = v13[3];
  v154 = v13[2];
  v155 = v27;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v28);
  v29 = sub_1BA717D44(v154, v155);
  v31 = v30;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  v32 = swift_bridgeObjectRetain();
  v33 = a2;
  v34 = v144;
  v35 = sub_1BB67D954(v32, a2);
  if (v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v37 = v35;
  v128 = v21;
  swift_bridgeObjectRelease();
  v130 = (_BYTE *)v33;
  swift_release();
  v129 = v29;
  v38 = *(_QWORD *)(v145 + 24);
  swift_beginAccess();
  v39 = v146;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v153 = *(_QWORD *)(v38 + 40);
  *(_QWORD *)(v38 + 40) = 0x8000000000000000;
  v41 = v143;
  sub_1BB4BDE7C(v143, v39, v37, v143, v39, isUniquelyReferenced_nonNull_native);
  v127 = v38;
  *(_QWORD *)(v38 + 40) = v153;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  v42 = (_QWORD *)swift_allocObject();
  v144 = 0;
  v43 = v129;
  v44 = v130;
  v42[2] = v13;
  v42[3] = v44;
  v42[4] = v145;
  v42[5] = v41;
  v42[6] = v39;
  v42[7] = v43;
  v42[8] = v31;
  v45 = v136(0);
  v46 = v137();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v137 = (uint64_t (*)(void))v46;
  v138 = v45;
  sub_1BB86D504();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  v47 = swift_bridgeObjectRetain();
  sub_1BA707E14(v47, 0);
  swift_bridgeObjectRelease();
  v48 = sub_1BA70A468(0, 0);
  swift_release();
  v49 = (uint64_t (*)(_BYTE *))*((_QWORD *)KeyPath + 13);
  LODWORD(v136) = *MEMORY[0x1E0DB6208];
  v50 = v49(v140);
  KeyPath = v115;
  MEMORY[0x1E0C80A78](v50);
  *(_QWORD *)&v115[-48] = v13;
  *(_QWORD *)&v115[-40] = v41;
  v51 = v48;
  v111 = (_BYTE *)v39;
  v112 = v44;
  v113 = v48;
  v114 = (uint64_t (*)(void))v145;
  sub_1BA71AD78(0, &qword_1ED3C45B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  v53 = v52;
  swift_allocObject();
  v54 = v144;
  v55 = sub_1BB86DB4C();
  v56 = v54;
  if (v54)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v129 = v53;
    v135 = (uint64_t (*)(_BYTE *, _QWORD, uint64_t))v49;
    v141 = v55;
    type metadata accessor for FormatButtonBuildCaptureState();
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = 0;
    v58 = (uint64_t *)(*(_QWORD *)(v51 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v59 = *v58;
    v60 = v58[1];
    v61 = v13[18];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62 = sub_1BA6E3AA0(v61, v51, v59, v60, (void (*)(uint64_t))sub_1BA4FC65C, (uint64_t (*)(uint64_t))sub_1BA4CC6C0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4DF5AC, (void (*)(_QWORD))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1BA7F5F9C);
    v63 = v51;
    v64 = v13;
    v140 = (_BYTE *)v62;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v125 = v13;
    if (v140 && (swift_beginAccess(), (v65 = *((_QWORD *)v140 + 9)) != 0) && *(_QWORD *)(v65 + 16))
    {
      v66 = *((_QWORD *)v140 + 6);
      v67 = *((_QWORD *)v140 + 7);
      v68 = v140[64];
      v69 = v140;
      swift_retain();
      swift_retain();
      v70 = swift_bridgeObjectRetain();
      v71 = sub_1BB67D220(v70, v63);
      v144 = 0;
      v104 = v71;
      v126 = v57;
      swift_bridgeObjectRelease();
      v124 = v63;
      swift_release();
      if (v68)
        v105 = 0;
      else
        v105 = v67;
      if (v68)
        v106 = 0;
      else
        v106 = v66;
      type metadata accessor for FormatAnimationData();
      v107 = swift_allocObject();
      *(_QWORD *)(v107 + 16) = v69;
      *(_QWORD *)(v107 + 24) = v106;
      *(_QWORD *)(v107 + 32) = v105;
      *(_BYTE *)(v107 + 40) = v68;
      v108 = v127;
      *(_QWORD *)(v107 + 48) = v104;
      swift_beginAccess();
      swift_retain_n();
      v109 = v146;
      swift_bridgeObjectRetain();
      v110 = swift_isUniquelyReferenced_nonNull_native();
      v152 = *(_QWORD *)(v108 + 32);
      *(_QWORD *)(v108 + 32) = 0x8000000000000000;
      sub_1BA81C03C(v107, v143, v109, v110);
      *(_QWORD *)(v108 + 32) = v152;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release_n();
      v56 = v144;
      v64 = v125;
    }
    else
    {
      v126 = v57;
      v124 = v63;
    }
    KeyPath = (_BYTE *)swift_getKeyPath();
    swift_beginAccess();
    v152 = v64[4];
    v72 = v152;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v72);
    v73 = (uint64_t)v130;
    sub_1BA717E88();
    if (v56)
    {
      sub_1BA719718(v72);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      return swift_release();
    }
    sub_1BA719718(v72);
    swift_beginAccess();
    swift_retain();
    v74 = swift_bridgeObjectRetain();
    sub_1BB67D4D4(v74, v73);
    swift_bridgeObjectRelease();
    swift_release();
    v75 = (_QWORD *)swift_allocObject();
    v76 = v126;
    v75[2] = v125;
    v75[3] = v124;
    v75[4] = v76;
    swift_retain();
    swift_retain();
    swift_retain();
    v114 = v137;
    v113 = v138;
    v77 = v134;
    v78 = v125;
    sub_1BB86D51C();
    v144 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v120 = *(void (**)(_BYTE *, uint64_t))(v132 + 8);
    v120(v77, v133);
    v121 = swift_allocObject();
    *(_QWORD *)(v121 + 16) = MEMORY[0x1E0DEE9E0];
    swift_beginAccess();
    v79 = v78[11];
    v150 = 0;
    v151 = 0;
    v149 = v79;
    swift_bridgeObjectRetain();
    sub_1BA757F80(&v147);
    v80 = v148;
    if (v148)
    {
      v117 = a12;
      v119 = a11;
      v81 = v147;
      v116 = *MEMORY[0x1E0DB63C0];
      v118 = xmmword_1BB87CE70;
      while (1)
      {
        v127 = v80;
        v122 = v81;
        v147 = v80;
        v82 = sub_1BA79B89C();
        sub_1BA709F80(v82, v83);
        swift_bridgeObjectRelease();
        swift_retain();
        swift_release();
        v84 = v78[2];
        v85 = v78[3];
        swift_bridgeObjectRetain();
        v134 = (_BYTE *)sub_1BA717D44(v84, v85);
        KeyPath = v86;
        swift_release();
        swift_bridgeObjectRelease();
        v147 = v80;
        v87 = sub_1BA79B89C();
        v89 = v88;
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v118;
        *(_QWORD *)(inited + 32) = v87;
        *(_QWORD *)(inited + 40) = v89;
        swift_bridgeObjectRetain();
        v91 = sub_1BA6E43EC(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        v92 = swift_bridgeObjectRetain();
        v93 = sub_1BA6E4124(v92, v91);
        sub_1BA707E14(v93, 0);
        swift_bridgeObjectRelease();
        sub_1BA709F80(v87, v89);
        swift_release();
        v94 = sub_1BA70A468(0, 0);
        swift_release();
        v95 = v135(v128, v136, v142);
        MEMORY[0x1E0C80A78](v95);
        *(_QWORD *)&v115[-48] = v78;
        v96 = v134;
        *(_QWORD *)&v115[-40] = v134;
        v97 = v130;
        v111 = KeyPath;
        v112 = v130;
        v123 = v94;
        v113 = v94;
        v114 = (uint64_t (*)(void))v145;
        swift_allocObject();
        v98 = v144;
        v99 = sub_1BB86DB4C();
        if (v98)
          break;
        v100 = v99;
        swift_bridgeObjectRelease();
        v101 = v131;
        v102 = v133;
        v103 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(v132 + 104))(v131, v116, v133);
        MEMORY[0x1E0C80A78](v103);
        *(_QWORD *)&v115[-80] = v96;
        *(_QWORD *)&v115[-72] = KeyPath;
        *(_QWORD *)&v115[-64] = v78;
        *(_QWORD *)&v115[-56] = v97;
        *(_QWORD *)&v115[-48] = v100;
        *(_QWORD *)&v115[-40] = v126;
        v114 = v137;
        v112 = &v115[-96];
        v113 = v138;
        v111 = v117;
        sub_1BB86D468();
        v144 = 0;
        v120(v101, v102);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BA757F80(&v147);
        v81 = v147;
        v80 = v148;
        v78 = v125;
        if (!v148)
          goto LABEL_17;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
LABEL_17:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
}

void sub_1BA757F80(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = *(_QWORD *)(*v1 + 16);
  if (v2 == v3)
  {
    *a1 = 0;
    a1[1] = 0;
    return;
  }
  if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(*v1 + 8 * v2 + 32);
    v1[1] = v2 + 1;
    v5 = v1[2];
    if (!__OFADD__(v5, 1))
    {
      v1[2] = v5 + 1;
      *a1 = v5;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1BA757FCC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 3 && a5 != 2)
  {
    if (a5)
      return result;
    sub_1BA75A650(result, a2);
  }
  return swift_bridgeObjectRetain();
}

void sub_1BA758024()
{
  __asm { BR              X12 }
}

void sub_1BA758050(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BA758280(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v9 = result;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return result;
  swift_bridgeObjectRetain();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  for (i = (uint64_t *)(a3 + 48); ; i += 3)
  {
    v14 = *i;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
      break;
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1BA65DB80((uint64_t)&v11, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v4)
      return swift_bridgeObjectRelease();
  }
  v8 = *((_QWORD *)&v12 + 1);
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, a2, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  if (!v3)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA7583D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  __int128 v53[5];
  uint64_t v54;
  uint64_t v55;

  v4 = v2;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_OWORD *)(a2 + 48);
  v53[2] = *(_OWORD *)(a2 + 32);
  v53[3] = v11;
  v53[4] = *(_OWORD *)(a2 + 64);
  v54 = *(_QWORD *)(a2 + 80);
  v12 = *(_OWORD *)(a2 + 16);
  v53[0] = *(_OWORD *)a2;
  v53[1] = v12;
  v45 = v2[6];
  sub_1BA6FA63C();
  v13 = v3;
  if (!v3)
  {
    v55 = a2;
    v39 = v10;
    swift_beginAccess();
    v14 = v2[8];
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v15; ++i)
      {
        v17 = *(_QWORD *)(v14 + 8 * i + 32);
        v45 = v17;
        sub_1BA7196DC(v17);
        sub_1BA6FA7EC();
        sub_1BA719340(v17);
      }
      swift_bridgeObjectRelease_n();
    }
    v37 = v8;
    swift_beginAccess();
    v18 = v2[9];
    v19 = *(_QWORD *)(v18 + 16);
    v38 = v4;
    if (v19)
    {
      v40 = a1;
      v43 = 0;
      swift_bridgeObjectRetain_n();
      v36[1] = v18;
      v20 = (uint64_t *)(v18 + 48);
      while (1)
      {
        v41 = v19;
        v21 = *(v20 - 2);
        v22 = *(v20 - 1);
        v24 = *v20;
        v23 = v20[1];
        v26 = v20[2];
        v25 = v20[3];
        v28 = v20[4];
        v27 = v20[5];
        v45 = v21;
        v46 = v22;
        v47 = v24;
        v48 = v23;
        v49 = v26;
        v50 = v25;
        v51 = v28;
        v52 = v27;
        v42 = v27;
        sub_1BA76B724(v21, v22, v24, v23, v26, v25, v28);
        v29 = v43;
        sub_1BAC5FA3C();
        v43 = v29;
        if (v29)
          break;
        v20 += 8;
        sub_1BA76B698(v21, v22, v24, v23, v26, v25, v28);
        v19 = v41 - 1;
        if (v41 == 1)
        {
          swift_bridgeObjectRelease_n();
          v13 = v43;
          a1 = v40;
          v4 = v38;
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v21, v22, v24, v23, v26, v25, v28);
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      v30 = v4[11];
      v31 = *(_QWORD *)(v30 + 16);
      v32 = (uint64_t)v39;
      if (v31)
      {
        v33 = v30 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        v34 = *(_QWORD *)(v37 + 72);
        v55 = v4[11];
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v33, v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v44 = *(_QWORD *)(v32 + 16);
          swift_retain();
          sub_1BA711C44();
          if (v13)
            break;
          swift_release();
          sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v33 += v34;
          if (!--v31)
          {
            swift_bridgeObjectRelease_n();
            v4 = v38;
            goto LABEL_16;
          }
        }
        swift_release();
        sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        swift_beginAccess();
        v35 = v4[12];
        swift_bridgeObjectRetain();
        sub_1BA6F9F38(a1, v53, v35);
        swift_bridgeObjectRelease();
      }
    }
  }
}

_QWORD *initializeWithCopy for FormatCompilerOptions(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = *(_QWORD *)&a2[v7 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    v11 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v11;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *((_QWORD *)v8 + 1) = v10;
    v12 = *((_QWORD *)v9 + 3);
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_QWORD *)v8 + 3) = v12;
    v13 = *((_QWORD *)v9 + 5);
    *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
    *((_QWORD *)v8 + 5) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v14 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v15 = &v8[v14];
  v16 = &v9[v14];
  v17 = sub_1BB86E710();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = &a2[v21];
  if (v19(&a2[v21], 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v23, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for FormatCompilerOptions.Newsroom(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3C9478);
}

uint64_t sub_1BA758A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB31191C(a1, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, 0x4562655764656546, 0xEC0000006465626DLL, a2);
}

uint64_t storeEnumTagSinglePayload for FeedWebEmbed()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t sub_1BA758A4C()
{
  unint64_t result;

  result = qword_1ED3C2520;
  if (!qword_1ED3C2520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB952A90, &type metadata for FormatBindingError);
    atomic_store(result, (unint64_t *)&qword_1ED3C2520);
  }
  return result;
}

id sub_1BA758A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v20;
  uint64_t v21;

  v4 = sub_1BB86D93C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
     + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles;
  swift_beginAccess();
  v9 = *(id *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = swift_retain();
  v12 = sub_1BA748BCC(v11, a2, (uint64_t)v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v2)
  {
    if (v12 && (v13 = *(_QWORD *)(v12 + 56), (~v13 & 0xF000000000000007) != 0))
    {
      v21 = *(_QWORD *)(v12 + 56);
      swift_retain();
      sub_1BA742278();
      v9 = v20;
      sub_1BA6E6CD8(v13);
    }
    else
    {
      v9 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 16.0);
    }
    sub_1BB86D750();
    sub_1BB86D930();
    if (byte_1EF3D0978 == 1)
    {
      v15 = v14;
      objc_msgSend(v9, sel_pointSize);
      v17 = round(v15 * (v16 * 4.0) * 0.25);
      if (byte_1EF3D0978)
        v16 = v17;
      v18 = objc_msgSend(v9, sel_fontWithSize_, v16);

      v9 = v18;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

unint64_t FormatGroupNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t j;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;

  v4 = v2;
  swift_beginAccess();
  v42 = v2[4];
  sub_1BA71CA6C(v42);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v42);
  sub_1BA719718(v42);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v12 = v2[8];
  if (v12 >> 62 == 1)
  {
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    sub_1BA67D3F4(v4[8]);
    sub_1BA67D3F4(v13);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v13, v14);
    sub_1BA6EEDB4(v13);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v12);
  }
  if (v4[10])
    FormatGroupNodeStyle.bind(binder:context:)(a1, a2);
  v15 = v4;
  v16 = a1;
  v17 = a2;
  v18 = v15;
  swift_beginAccess();
  v43 = v18;
  v19 = v18[11];
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain_n();
    v21 = v19 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v16, v17);
      v21 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease_n();
  }
  v22 = v17;
  v23 = v16;
  v24 = v43[15];
  if (v24)
  {
    swift_beginAccess();
    v25 = *(_QWORD *)(v24 + 72);
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(v16, v22, v25);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v26 = *(_QWORD *)(v24 + 88);
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain_n();
      v28 = (uint64_t *)(v26 + 72);
      do
      {
        v29 = *v28;
        if (*v28)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(v16, v22, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v28 += 7;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease_n();
    }
  }
  result = swift_beginAccess();
  v30 = (_QWORD *)v43[16];
  if (v30)
  {
    if (v30[2])
    {
      swift_retain();
      FormatGroupNodeMaskStyle.bind(binder:context:)(v23, v22);
    }
    else
    {
      swift_retain();
    }
    v31 = v30[3];
    if (v31)
    {
      swift_beginAccess();
      v32 = *(_QWORD *)(v31 + 72);
      if (v32)
      {
        swift_bridgeObjectRetain();
        sub_1BAB758D0(v23, v22, v32);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v33 = *(_QWORD *)(v31 + 88);
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        swift_bridgeObjectRetain_n();
        v35 = (uint64_t *)(v33 + 72);
        do
        {
          v36 = *v35;
          if (*v35)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BAB758D0(v23, v22, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v35 += 7;
          --v34;
        }
        while (v34);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    v41 = v30[4];
    sub_1BA71CA6C(v41);
    FormatSize.bind(binder:context:)();
    sub_1BA719718(v41);
    swift_beginAccess();
    v37 = v30[5];
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      swift_bridgeObjectRetain_n();
      for (j = 0; j != v38; ++j)
      {
        v40 = *(_QWORD *)(v37 + 8 * j + 32);
        sub_1BA7196DC(v40);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v40);
      }
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

