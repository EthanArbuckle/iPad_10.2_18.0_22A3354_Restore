uint64_t sub_1BA90EE9C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BA90EEC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA90E9FC(*(void **)(v1 + 40), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1BA90EECC(uint64_t a1)
{
  sub_1BA90EF2C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(void **)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128));
  return a1;
}

void *sub_1BA90EF2C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    sub_1BA7B9D78(a10, a11, a12, a13, a14);
    return (void *)sub_1BA6E0CBC(a16, a17);
  }
  return result;
}

double sub_1BA90EFB8(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1BA90EFD4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA90EFF8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for FormatContent.Resolved();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[5];
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v5 = v2 + v1[14];
  v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v24 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v24(v9, v10);
    v12 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10))
      v24(v12, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v13 = v5 + v6[8];
    v14 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for GenericDataVisualization();
        v24(v13 + *(int *)(v15 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v16 = v5 + v6[9];
    sub_1BA6C5A68();
    v18 = v17;
    v19 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }

  swift_bridgeObjectRelease();
  v20 = v2 + v1[18];
  v21 = sub_1BB871E24();
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA90F390@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA90E574(*(_QWORD *)(v1 + 24), a1);
}

_QWORD *assignWithCopy for SlotReference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      a1[4] = v4;
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v4)
  {
    sub_1BA90F4A8((uint64_t)(a1 + 4));
    goto LABEL_7;
  }
  a1[4] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA90F4A8(uint64_t a1)
{
  destroy for FormatSizeEquation();
  return a1;
}

_QWORD *assignWithTake for SlotReference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v5 = a2[4];
  if (!a1[4])
    goto LABEL_5;
  if (!v5)
  {
    sub_1BA90F4A8((uint64_t)(a1 + 4));
LABEL_5:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  a1[4] = v5;
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SlotReference()
{
  return &type metadata for SlotReference;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatAuxiliaryView(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for FeedIssue.Overrides.Image(id *a1)
{

}

uint64_t assignWithCopy for FormatAuxiliaryView(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for FormatAuxiliaryView(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAuxiliaryView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAuxiliaryView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAuxiliaryView()
{
  return &type metadata for FormatAuxiliaryView;
}

uint64_t type metadata accessor for DebugNavigationController()
{
  return objc_opt_self();
}

void sub_1BA90F93C(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(a1, sel_topViewController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_navigationItem);

    v4 = (void *)sub_1BB872970();
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithTitle_style_target_action_, v4, 0, 0, 0);

    objc_msgSend(v3, sel_setBackBarButtonItem_, v5);
  }
}

BOOL static FeedServiceConfigExpansion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedServiceConfigExpansion.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedServiceConfigExpansion.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BA90FA84()
{
  return FeedServiceConfigType.appVersion.getter();
}

uint64_t FeedServiceConfigType.appVersion.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  type metadata accessor for NewsFeedBundleClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1BB86EBB4();
}

uint64_t type metadata accessor for NewsFeedBundleClass()
{
  return objc_opt_self();
}

uint64_t FeedServiceConfigType.cacheKey.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[2];

  sub_1BA76D78C();
  v18[1] = v4;
  MEMORY[0x1E0C80A78](v4);
  v18[0] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v18 - v9;
  v11 = swift_checkMetadataState();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v18 - v14;
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 64))(a1, a2, v13);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v11, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v16 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(v16 + 40))(AssociatedTypeWitness, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return sub_1BB872A00();
}

uint64_t sub_1BA90FCEC()
{
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BA90FD00(_BYTE *a1@<X8>)
{
  FeedServiceConfigType.expansion.getter(a1);
}

void FeedServiceConfigType.expansion.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_1BA90FD1C(_BYTE *a1@<X8>)
{
  FeedServiceConfigType.feedKind.getter(a1);
}

void FeedServiceConfigType.feedKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t FeedServiceConfigType.expand(cursor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 80) - 8) + 16))(a2, v2);
}

uint64_t sub_1BA90FD5C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return FeedServiceConfigType.cached(repooled:ignoreFeedItemIdentifiers:ignoreTagsForGrouping:)(a1, a2);
}

uint64_t FeedServiceConfigType.cached(repooled:ignoreFeedItemIdentifiers:ignoreTagsForGrouping:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t FeedServiceConfigType.seenContentMarker(contentConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t FeedServiceConfigType.groups.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v17 - v7;
  v9 = swift_checkMetadataState();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 64))(a1, a2, v11);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v9, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v14 = swift_getAssociatedConformanceWitness();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(AssociatedTypeWitness, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v15;
}

uint64_t FeedServiceConfigType.replacing(groups:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t, double);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t AssociatedTypeWitness;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v34 = a1;
  v35 = a4;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v33 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v28 - v9;
  v10 = swift_checkMetadataState();
  v29 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v28 - v18;
  v20 = *(void (**)(uint64_t, uint64_t, double))(a3 + 64);
  v21 = v36;
  v30 = a3;
  v20(v36, a3, v17);
  ((void (*)(uint64_t, uint64_t))v20)(v21, a3);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v10, AssociatedConformanceWitness);
  v22 = *(void (**)(char *, uint64_t))(v29 + 8);
  v22(v12, v10);
  v23 = AssociatedTypeWitness;
  v24 = swift_getAssociatedConformanceWitness();
  v25 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 64))(v34, v23, v24);
  v26 = *(void (**)(char *, uint64_t))(v33 + 8);
  v26(v7, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v25, v10, AssociatedConformanceWitness);
  v26(v25, v23);
  v22(v15, v10);
  (*(void (**)(char *, uint64_t))(v30 + 136))(v19, v36);
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, v10);
}

uint64_t _s8NewsFeed0B17ServiceConfigTypePAAE45excludedGroupKindsForIgnoredTagIdentificationShy0B4Pool_0bG04KindQZGvg_0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1BB872754();
}

unint64_t sub_1BA91029C()
{
  unint64_t result;

  result = qword_1EF2AA7B0;
  if (!qword_1EF2AA7B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceConfigExpansion, &type metadata for FeedServiceConfigExpansion);
    atomic_store(result, (unint64_t *)&qword_1EF2AA7B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedServiceConfigExpansion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA91032C + 4 * byte_1BB883F85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA910360 + 4 * asc_1BB883F80[v4]))();
}

uint64_t sub_1BA910360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA910368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA910370);
  return result;
}

uint64_t sub_1BA91037C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA910384);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA910388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA910390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceConfigExpansion()
{
  return &type metadata for FeedServiceConfigExpansion;
}

uint64_t dispatch thunk of FeedServiceConfigType.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedServiceConfigType.appVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedServiceConfigType.contentConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedServiceConfigType.cachePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedServiceConfigType.cacheKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedServiceConfigType.canCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeedServiceConfigType.selectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeedServiceConfigType.refreshInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeedServiceConfigType.excludedGroupKindsForIgnoredTagIdentification.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FeedServiceConfigType.expansion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FeedServiceConfigType.feedKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FeedServiceConfigType.replacing(contentConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of FeedServiceConfigType.expand(cursor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of FeedServiceConfigType.cached(repooled:ignoreFeedItemIdentifiers:ignoreTagsForGrouping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of FeedServiceConfigType.seenContentMarker(contentConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

ValueMetadata *_s2AdVMa()
{
  return &_s2AdVN;
}

uint64_t sub_1BA910434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1, a1);
}

uint64_t sub_1BA910440()
{
  return sub_1BB690D58();
}

uint64_t sub_1BA910450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v46 = a3;
  v47 = a2;
  v7 = *(int *)(a3 + 20);
  v48 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  v19 = *(_QWORD *)(v9 + v16 + 24);
  if (v19 >= 2)
    v19 = swift_bridgeObjectRetain();
  *(_QWORD *)(v17 + 24) = v19;
  v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v20 + 36);
  v22 = (void *)(v17 + v21);
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_QWORD *)(v17 + *(int *)(v20 + 40)) = *(_QWORD *)(v18 + *(int *)(v20 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  v28 = *(int *)(v46 + 24);
  v29 = (_QWORD *)(v48 + v28);
  v30 = v47 + v28;
  v31 = *(_QWORD *)(v47 + v28 + 8);
  *v29 = *(_QWORD *)(v47 + v28);
  v29[1] = v31;
  v32 = (int *)type metadata accessor for FeedBannerAd();
  v33 = v32[5];
  v34 = (char *)v29 + v33;
  v35 = v30 + v33;
  v36 = sub_1BB8721C0();
  v37 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  *(_QWORD *)((char *)v29 + v32[6]) = *(_QWORD *)(v30 + v32[6]);
  v38 = v32[7];
  v39 = (char *)v29 + v38;
  v40 = v30 + v38;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = *(_BYTE *)(v40 + 8);
  v41 = v32[8];
  v42 = (_QWORD *)((char *)v29 + v41);
  v43 = (_QWORD *)(v30 + v41);
  v44 = v43[1];
  if (v44 >= 0x11)
  {
    *v42 = *v43;
    v42[1] = v44;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v42 = *(_OWORD *)v43;
  }
  *(_QWORD *)(v48 + *(int *)(v46 + 28)) = *(_QWORD *)(v47 + *(int *)(v46 + 28));
  swift_retain();
  return v48;
}

uint64_t *sub_1BA910754(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v53 = a3;
  v54 = a2;
  v6 = *(int *)(a3 + 20);
  v55 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  v19 = (unint64_t *)&v7[v15 + 24];
  v20 = *(_QWORD *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v19 = *((_QWORD *)v17 + 3);
    }
  }
  else
  {
    *v19 = v20;
    if (v20 >= 2)
      swift_bridgeObjectRetain();
  }
  v52 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v52 + 36);
  v22 = (uint64_t)&v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v51 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (v27)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
      v30 = (void *)v51;
LABEL_13:
      memcpy(v30, v23, v29);
      goto LABEL_16;
    }
    v32 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v51, v23, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v51, 0, 1, v24);
  }
  else
  {
    if (v27)
    {
      sub_1BA4A2E80(v51, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
      v30 = (void *)v51;
      goto LABEL_13;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v51, v23, v33);
  }
LABEL_16:
  *(_QWORD *)&v16[*(int *)(v52 + 40)] = *(_QWORD *)&v17[*(int *)(v52 + 40)];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  swift_retain();
  swift_release();
  v7[v10[11]] = v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  swift_retain();
  swift_release();
  v34 = *(int *)(v53 + 24);
  v35 = (uint64_t *)((char *)v55 + v34);
  v36 = (char *)v54 + v34;
  *v35 = *(uint64_t *)((char *)v54 + v34);
  v35[1] = *(uint64_t *)((char *)v54 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = (int *)type metadata accessor for FeedBannerAd();
  v38 = v37[5];
  v39 = (char *)v35 + v38;
  v40 = &v36[v38];
  v41 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  *(_QWORD *)((char *)v35 + v37[6]) = *(_QWORD *)&v36[v37[6]];
  v42 = v37[7];
  v43 = (char *)v35 + v42;
  v44 = &v36[v42];
  v45 = v44[8];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v45;
  v46 = v37[8];
  v47 = (_QWORD *)((char *)v35 + v46);
  v48 = &v36[v46];
  v49 = *(_QWORD *)&v36[v46 + 8];
  if (v47[1] >= 0x11uLL)
  {
    if (v49 >= 0x11)
    {
      *v47 = *(_QWORD *)v48;
      v47[1] = *((_QWORD *)v48 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1BA905D68((uint64_t)v47);
    goto LABEL_21;
  }
  if (v49 < 0x11)
  {
LABEL_21:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    goto LABEL_23;
  }
  *v47 = *(_QWORD *)v48;
  v47[1] = *((_QWORD *)v48 + 1);
  swift_bridgeObjectRetain();
LABEL_23:
  *(uint64_t *)((char *)v55 + *(int *)(v53 + 28)) = *(uint64_t *)((char *)v54 + *(int *)(v53 + 28));
  swift_retain();
  swift_release();
  return v55;
}

uint64_t sub_1BA910BA4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *__dst;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = a3[5];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for GroupLayoutContext();
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  *(_OWORD *)v15 = *(_OWORD *)(v7 + v14);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(_BYTE *)(v15 + 19) = *(_BYTE *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v7 + v14 + 24);
  v17 = type metadata accessor for FeedLayoutSolverOptions(0);
  v18 = *(int *)(v17 + 36);
  __dst = (void *)(v15 + v18);
  v19 = (const void *)(v16 + v18);
  v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(_QWORD *)(v15 + *(int *)(v17 + 40)) = *(_QWORD *)(v16 + *(int *)(v17 + 40));
  *(_QWORD *)(v6 + v9[7]) = *(_QWORD *)(v7 + v9[7]);
  *(_QWORD *)(v6 + v9[8]) = *(_QWORD *)(v7 + v9[8]);
  *(_BYTE *)(v6 + v9[9]) = *(_BYTE *)(v7 + v9[9]);
  *(_QWORD *)(v6 + v9[10]) = *(_QWORD *)(v7 + v9[10]);
  *(_BYTE *)(v6 + v9[11]) = *(_BYTE *)(v7 + v9[11]);
  *(_QWORD *)(v6 + v9[12]) = *(_QWORD *)(v7 + v9[12]);
  v24 = a3[6];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v27 = (int *)type metadata accessor for FeedBannerAd();
  v28 = v27[5];
  v29 = v25 + v28;
  v30 = v26 + v28;
  v31 = sub_1BB8721C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  *(_QWORD *)(v25 + v27[6]) = *(_QWORD *)(v26 + v27[6]);
  v32 = v27[7];
  v33 = v25 + v32;
  v34 = v26 + v32;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_OWORD *)(v25 + v27[8]) = *(_OWORD *)(v26 + v27[8]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1BA910E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v53 = a3;
  v54 = a2;
  v7 = *(int *)(a3 + 20);
  v55 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 18) = *(_BYTE *)(v9 + v16 + 18);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_BYTE *)(v17 + 20) = *(_BYTE *)(v9 + v16 + 20);
  *(_BYTE *)(v17 + 21) = *(_BYTE *)(v9 + v16 + 21);
  *(_BYTE *)(v17 + 22) = *(_BYTE *)(v9 + v16 + 22);
  *(_BYTE *)(v17 + 23) = *(_BYTE *)(v9 + v16 + 23);
  v19 = (unint64_t *)(v8 + v16 + 24);
  v20 = *(_QWORD *)(v9 + v16 + 24);
  if (*v19 < 2)
    goto LABEL_4;
  if (v20 < 2)
  {
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v20 = *(_QWORD *)(v18 + 24);
LABEL_4:
    *v19 = v20;
    goto LABEL_6;
  }
  *v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  v52 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v52 + 36);
  v22 = v17 + v21;
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v51 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (v27)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
      v30 = (void *)v51;
LABEL_11:
      memcpy(v30, v23, v29);
      goto LABEL_14;
    }
    v32 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v51, v23, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v51, 0, 1, v24);
  }
  else
  {
    if (v27)
    {
      sub_1BA4A2E80(v51, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
      v30 = (void *)v51;
      goto LABEL_11;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v51, v23, v33);
  }
LABEL_14:
  *(_QWORD *)(v17 + *(int *)(v52 + 40)) = *(_QWORD *)(v18 + *(int *)(v52 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  swift_release();
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  swift_release();
  v34 = *(int *)(v53 + 24);
  v35 = (_QWORD *)(v55 + v34);
  v36 = v54 + v34;
  v37 = *(_QWORD *)(v54 + v34 + 8);
  *v35 = *(_QWORD *)(v54 + v34);
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v38 = (int *)type metadata accessor for FeedBannerAd();
  v39 = v38[5];
  v40 = (char *)v35 + v39;
  v41 = v36 + v39;
  v42 = sub_1BB8721C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  *(_QWORD *)((char *)v35 + v38[6]) = *(_QWORD *)(v36 + v38[6]);
  v43 = v38[7];
  v44 = (char *)v35 + v43;
  v45 = v36 + v43;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = *(_BYTE *)(v45 + 8);
  v46 = v38[8];
  v47 = (_QWORD *)((char *)v35 + v46);
  v48 = (_QWORD *)(v36 + v46);
  if (*(_QWORD *)((char *)v35 + v46 + 8) >= 0x11uLL)
  {
    v49 = v48[1];
    if (v49 >= 0x11)
    {
      *v47 = *v48;
      v47[1] = v49;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1BA905D68((uint64_t)v47);
  }
  *(_OWORD *)v47 = *(_OWORD *)v48;
LABEL_19:
  *(_QWORD *)(v55 + *(int *)(v53 + 28)) = *(_QWORD *)(v54 + *(int *)(v53 + 28));
  swift_release();
  return v55;
}

uint64_t sub_1BA911228()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA911234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for FeedBannerAd();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BA9112D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA9112E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for FeedBannerAd();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

NewsFeed::FeedGroupNativeAdInsertionLocation_optional __swiftcall FeedGroupNativeAdInsertionLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedGroupNativeAdInsertionLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedGroupNativeAdInsertionLocation.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696C69617274;
  if (*v0 != 1)
    v1 = 1701736302;
  if (*v0)
    return v1;
  else
    return 0x676E696461656CLL;
}

uint64_t sub_1BA91142C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB8049B0(*a1, *a2);
}

unint64_t sub_1BA91143C()
{
  unint64_t result;

  result = qword_1EF2AA7B8;
  if (!qword_1EF2AA7B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupNativeAdInsertionLocation, &type metadata for FeedGroupNativeAdInsertionLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2AA7B8);
  }
  return result;
}

uint64_t sub_1BA911480()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA911518()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA91158C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedGroupNativeAdInsertionLocation_optional sub_1BA911620(Swift::String *a1)
{
  return FeedGroupNativeAdInsertionLocation.init(rawValue:)(*a1);
}

void sub_1BA91162C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x676E696C69617274;
  if (v2 != 1)
  {
    v5 = 1701736302;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x676E696461656CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA911684()
{
  sub_1BA911800();
  return sub_1BB872D60();
}

uint64_t sub_1BA9116E0()
{
  sub_1BA911800();
  return sub_1BB872D0C();
}

uint64_t dispatch thunk of FeedGroupNativeAdInsertable.placementType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedGroupNativeAdInsertable.supportsNativeAds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedGroupNativeAdInsertable.nativeAdInsertionLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t storeEnumTagSinglePayload for FeedGroupNativeAdInsertionLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA911790 + 4 * byte_1BB884165[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA9117C4 + 4 * byte_1BB884160[v4]))();
}

uint64_t sub_1BA9117C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9117CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA9117D4);
  return result;
}

uint64_t sub_1BA9117E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA9117E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA9117EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9117F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1BA911800()
{
  unint64_t result;

  result = qword_1ED3C6238;
  if (!qword_1ED3C6238)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupNativeAdInsertionLocation, &type metadata for FeedGroupNativeAdInsertionLocation);
    atomic_store(result, (unint64_t *)&qword_1ED3C6238);
  }
  return result;
}

id sub_1BA91184C(uint64_t a1, id a2)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  v3 = sub_1BB8737A4();
  if (!v3)
    goto LABEL_6;
  v4 = (void *)v3;
  v5 = sub_1BB8737A4();
  if (!v5)
  {

    v2 = v4;
LABEL_6:

    return a2;
  }
  v6 = (void *)v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  if (v7)
    return v7;
  return a2;
}

id sub_1BA911940(uint64_t a1, id a2)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  v3 = sub_1BB8737A4();
  if (!v3)
    goto LABEL_6;
  v4 = (void *)v3;
  v5 = sub_1BB8737A4();
  if (!v5)
  {

    v2 = v4;
LABEL_6:

    return a2;
  }
  v6 = (void *)v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  if (v7)
    return v7;
  return a2;
}

id sub_1BA911A44(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  FormatColor.color.getter();
  v3 = v2;
  v4 = objc_msgSend(v2, sel_resolvedColorWithTraitCollection_, a1);

  return v4;
}

void _s8NewsFeed20FormatColorProcessorO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA911AE4()
{
  unint64_t v0;
  unint64_t v1;
  double v2;
  double v3;
  char v4;
  char v5;
  char v6;
  char v7;

  if (v0 >> 61)
  {
    sub_1BA74444C(v0);
    sub_1BA74444C(v1);
    sub_1BA74447C(v1);
    sub_1BA74447C(v0);
    v7 = 0;
  }
  else
  {
    v2 = *(double *)(v1 + 24);
    v3 = *(double *)(v0 + 24);
    v4 = *(_BYTE *)(v1 + 16);
    sub_1BA74444C(v0);
    sub_1BA74444C(v1);
    sub_1BB7ED8CC(v4);
    v6 = v5;
    sub_1BA74447C(v1);
    sub_1BA74447C(v0);
    v7 = v6 & (v2 == v3);
  }
  return v7 & 1;
}

unint64_t sub_1BA911DAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA911DD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA911DD0()
{
  unint64_t result;

  result = qword_1EF2AA7C0;
  if (!qword_1EF2AA7C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorProcessor, &type metadata for FormatColorProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2AA7C0);
  }
  return result;
}

unint64_t sub_1BA911E14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA58289C();
  a1[2] = sub_1BA5A3EBC();
  result = sub_1BA911E48();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA911E48()
{
  unint64_t result;

  result = qword_1EF2AA7C8;
  if (!qword_1EF2AA7C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorProcessor, &type metadata for FormatColorProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2AA7C8);
  }
  return result;
}

unint64_t *assignWithCopy for FormatColorProcessor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA74444C(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA74447C(v4);
  return a1;
}

unint64_t *assignWithTake for FormatColorProcessor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA74447C(v3);
  return a1;
}

uint64_t sub_1BA911EF4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 4)
    return v1;
  else
    return (*a1 >> 3) + 5;
}

unint64_t *sub_1BA911F10(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 5)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 5);
    v3 = 0xA000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatColorProcessor()
{
  return &type metadata for FormatColorProcessor;
}

uint64_t sub_1BA911F4C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A388(0, v2, 0);
    v3 = v15;
    v6 = (unint64_t *)(a1 + 32);
    do
    {
      v7 = *v6++;
      *(_QWORD *)&v12 = v7;
      sub_1BA74444C(v7);
      v8 = sub_1BA91206C(a2, &v12);
      sub_1BA74447C(v7);
      v15 = v3;
      v10 = *(_QWORD *)(v3 + 16);
      v9 = *(_QWORD *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BAC7A388(v9 > 1, v10 + 1, 1);
        v3 = v15;
      }
      v14 = &off_1E7335C38;
      v13 = &type metadata for FormatInspection;
      *(_QWORD *)&v12 = v8;
      *(_QWORD *)(v3 + 16) = v10 + 1;
      sub_1BA4CECCC(&v12, v3 + 40 * v10 + 32);
      --v2;
    }
    while (v2);
  }
  return v3;
}

_QWORD *sub_1BA91206C(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD *v12;
  _OWORD v14[2];
  uint64_t v15;

  if ((~*a2 & 0xF000000000000007) != 0)
    __asm { BR              X11 }
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v8);
  v9 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_1BAF89090(0x6F737365636F7250, 0xE900000000000072, 0, 0, v7, v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v10 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(v10 + 48) = v15;
  v11 = v14[1];
  *(_OWORD *)(v10 + 16) = v14[0];
  *(_OWORD *)(v10 + 32) = v11;
  v12 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v12;
}

void sub_1BA912518(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v4);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27 = 2 * v8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87FC80;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6F697469646E6F43, 0xEB000000006C616ELL, (_QWORD *)(v10 + v9));
  v11 = type metadata accessor for FormatInspectionItem(0);
  v26 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v26(v10 + v9, 0, 1, v11);
  v12 = (v3 >> 58) & 0x38;
  v25 = *(_QWORD *)((char *)&unk_1BB884430 + v12);
  v13 = *(_QWORD *)((char *)&unk_1BB884458 + v12);
  v14 = (_QWORD *)(v10 + v9 + v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v2 - 128) = v3;
  swift_retain();
  v16 = sub_1BB0A535C(v1, (_QWORD *)(v2 - 128));
  swift_release();
  *(_QWORD *)(v15 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v15 + 64) = &off_1E7335C38;
  *(_QWORD *)(v15 + 32) = v16;
  v17 = sub_1BA9747FC(v15);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v18 = sub_1BB6DF010(v17);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x6973736572707845, 0xEA00000000006E6FLL, (uint64_t)v18, v25, v13, v14);
  v26((unint64_t)v14, 0, 1, v11);
  sub_1BA8DACF0(v1);
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BA911F4C(v19, v1);
  sub_1BA8DAD20(v1);
  swift_bridgeObjectRelease();
  v21 = sub_1BA9747FC(v20);
  swift_bridgeObjectRelease();
  v22 = sub_1BB6DF010(v21);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x6F737365636F7250, 0xE900000000000072, (uint64_t)v22, 0, 0, (_QWORD *)(v10 + v9 + v27));
  v26(v10 + v9 + v27, 0, 1, v11);
  sub_1BAF89090(0x6F737365636F7250, 0xE900000000000072, 0, 0, v10, (_QWORD *)(v2 - 128));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v23 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(v23 + 48) = *(_QWORD *)(v2 - 96);
  v24 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v23 + 32) = v24;
  sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  JUMPOUT(0x1BA9124F4);
}

void sub_1BA9128E4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v4);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
  v11 = (_QWORD *)(v10 + v9);
  swift_retain();
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6563616C706552, 0xE700000000000000, v11);
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 0, 1, v12);
  v14 = (_QWORD *)((char *)v11 + v8);
  *(_QWORD *)(v2 - 128) = v3;
  swift_retain();
  v15 = sub_1BB522954(v1, (_QWORD *)(v2 - 128));
  swift_release();
  sub_1BAAF83B0(0x65756C6156, 0xE500000000000000, (uint64_t)v15, v14);
  v13(v14, 0, 1, v12);
  sub_1BAF89090(0x6F737365636F7250, 0xE900000000000072, 0, 0, v10, (_QWORD *)(v2 - 128));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(v2 - 96);
  v17 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v16 + 32) = v17;
  sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_release();
  JUMPOUT(0x1BA9124F4);
}

uint64_t sub_1BA91306C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for J6_V1()
{
  return &type metadata for J6_V1;
}

uint64_t sub_1BA9130B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AA7D0, (uint64_t (*)(void))sub_1BA9162DC, (uint64_t)&type metadata for J6_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA9162DC();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA916364(&qword_1EF2AA7D8, (uint64_t (*)(void))sub_1BA9163E0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA91326C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0x656D617266;
}

uint64_t sub_1BA9132A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA915FDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA9132CC()
{
  sub_1BA9162DC();
  return sub_1BB874710();
}

uint64_t sub_1BA9132F4()
{
  sub_1BA9162DC();
  return sub_1BB87471C();
}

double sub_1BA91331C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA9160C0(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA913360(_QWORD *a1)
{
  return sub_1BA9130B0(a1);
}

uint64_t sub_1BA913374()
{
  sub_1BA9159E4();
  return sub_1BB86D96C();
}

uint64_t sub_1BA9133DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1ED39C2D8, (uint64_t (*)(void))sub_1BA915E58, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  swift_allocObject();
  result = sub_1BB86D7C8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BA91347C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  uint64_t v60;

  v46 = a2;
  v48 = a1;
  v38 = a3;
  v39 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for GroupLayoutContext();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  v42 = (uint64_t)&v38 - v11;
  v44 = type metadata accessor for GroupLayoutBindingContext();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v41 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v3;
  v15 = (void *)*((_QWORD *)v3 + 1);
  v16 = v3[16];
  sub_1BA4C2DD8(a1, v41, v17);
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v15, v16);
  sub_1BB86C8D4();
  v18 = sub_1BB86C8C8();
  v40 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v39);
  v58 = &type metadata for J6_V1;
  v20 = sub_1BA8EDE30();
  v59 = v20;
  LOBYTE(v56) = v14;
  *((_QWORD *)&v56 + 1) = v15;
  v57 = v16;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v15, v16);
  v54 = sub_1BB874734();
  v55 = v22;
  v52 = 95;
  v53 = 0xE100000000000000;
  v50 = 45;
  v51 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v40;
  *v26 = v18;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v56, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  v29 = (uint64_t)v45;
  sub_1BA5193C4(v41, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v28, 0, 1, v44);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4(v42, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  sub_1BA7C2538(v15, v16);
  v58 = &type metadata for J6_V1;
  v59 = v20;
  LOBYTE(v56) = v14;
  *((_QWORD *)&v56 + 1) = v15;
  v57 = v16;
  sub_1BA4C2DD8(v46, v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v15, v16);
  v31 = v60;
  v32 = sub_1BB32D1C0((uint64_t)&unk_1E724F3A0, 0, 0, 0, 0, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  }
  else
  {
    v34 = v32;
    v35 = type metadata accessor for J6_V1.Bound();
    v36 = v38;
    v38[3] = v35;
    v36[4] = sub_1BA4A2870(&qword_1ED39D7E0, (uint64_t (*)(uint64_t))type metadata accessor for J6_V1.Bound, (uint64_t)&unk_1BB884548);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v56, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v29, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = v34;
  }
  return result;
}

uint64_t sub_1BA9138A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for J6_V1.Bound() + 28));
  v33 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BA8A1F94((void (*)(_QWORD *__return_ptr, _OWORD *))sub_1BA915978, (uint64_t)v32, v8);
  *(_QWORD *)&v25 = 0;
  swift_bridgeObjectRelease();
  v28 = v9;
  *(_QWORD *)&v35 = v9;
  sub_1BA4AD288(0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v11 = v10;
  sub_1BA5C69E0(&qword_1ED39D9E8, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E0DEAF50]);
  v27 = v11;
  v12 = sub_1BB8730F0();
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v29 = v12;
  v30 = 2;
  v31 = v2;
  sub_1BA915D74(0, &qword_1ED39C2F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v15 = sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v26 = v15;
  v16 = v25;
  v17 = sub_1BB86DB40();
  if (v16)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v25 = v35;
    v18 = v36;
    v19 = v37;
    v34 = v38;
    *(_QWORD *)&v35 = v28;
    MEMORY[0x1E0C80A78](v17);
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v20 = MEMORY[0x1E0DEAF38];
    sub_1BA5C69E0(&qword_1ED39D9E0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E0DEAF38]);
    sub_1BA5C69E0(&qword_1ED39D9C8, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, v20);
    swift_bridgeObjectRetain();
    v21 = sub_1BB86ED58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v35 = v21;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, v20);
    sub_1BA6B39A0();
    v22 = sub_1BB872BBC();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)a1 = 0;
    *(_OWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a1 + 40) = v22;
    *(_QWORD *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1BA913C80@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t inited;
  __int128 v21[2];
  __int128 v22[2];
  uint64_t v23[5];
  _BYTE v24[10];
  __int128 v25[7];
  _OWORD v26[2];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _OWORD v34[9];

  v5 = a1[5];
  v6 = a1[7];
  v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  v7 = a1[1];
  v8 = a1[3];
  v28 = a1[2];
  v29 = v8;
  v9 = a1[3];
  v10 = a1[5];
  v30 = a1[4];
  v31 = v10;
  v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1BA90EFB8(v34);
  sub_1BA8EDBB0((uint64_t)v34, (uint64_t)v24);
  v14 = (char *)a2 + *(int *)(type metadata accessor for J6_V1.Bound() + 24);
  v15 = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
  v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BA4C010C(v16 + 16, (uint64_t)v22);
  sub_1BA4C010C(v16 + 56, (uint64_t)v21);
  v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v22, inited + 16);
  sub_1BA4CECCC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1BA8D1F08((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

void sub_1BA913E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(unint64_t, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[49];
  _QWORD v60[49];
  _QWORD v61[49];
  _QWORD v62[50];

  v52 = a1;
  v53 = a4;
  v43 = a3;
  sub_1BA4CDF6C(0, &qword_1ED39C308, (uint64_t (*)(void))sub_1BA9159A0, (uint64_t)&type metadata for J6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t *)((char *)&v42 - v6);
  v55 = *(_QWORD *)(a2 + 16);
  if (v55)
  {
    v7 = *(_QWORD *)(a2 + 32);
    v54 = a2 + 32;
    v47 = *MEMORY[0x1E0DB63F0];
    v46 = *MEMORY[0x1E0DB6410];
    v45 = *MEMORY[0x1E0DB5C80];
    v42 = a2;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (_QWORD *)&unk_1ED3D2000;
    v44 = xmmword_1BB87CE70;
    v48 = v7;
    while (1)
    {
      v28 = *(_QWORD *)(v54 + 8 * v8);
      v29 = *(_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v7 + 16);
      v58 = v28;
      if (v29 != v30)
        break;
      if (v29 && v28 != v7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = 32;
        while (1)
        {
          sub_1BA915B28(v28 + v31, (uint64_t)v62);
          sub_1BA915B28(v7 + v31, (uint64_t)v61);
          v33 = v62[0];
          v34 = v61[0];
          v35 = *(_QWORD *)(v62[0] + 16) == *(_QWORD *)(v61[0] + 16)
             && *(_QWORD *)(v62[0] + 24) == *(_QWORD *)(v61[0] + 24);
          if (!v35 && (sub_1BB874398() & 1) == 0)
            break;
          v36 = v9[165];
          v37 = *(_QWORD *)(v33 + v36);
          v38 = *(_QWORD *)(v33 + v36 + 8);
          v39 = (_QWORD *)(v34 + v36);
          if (v37 == *v39 && v38 == v39[1])
          {
            sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
            sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
          }
          else
          {
            v41 = sub_1BB874398();
            sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
            sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
            if ((v41 & 1) == 0)
              goto LABEL_33;
          }
          if (v60[2] == v59[2] && v60[3] == v59[3])
          {
            sub_1BA915C30((uint64_t)v60);
            sub_1BA915C30((uint64_t)v59);
            sub_1BA915C30((uint64_t)v61);
            sub_1BA915C30((uint64_t)v62);
          }
          else
          {
            v32 = sub_1BB874398();
            sub_1BA915C30((uint64_t)v60);
            sub_1BA915C30((uint64_t)v59);
            sub_1BA915C30((uint64_t)v61);
            sub_1BA915C30((uint64_t)v62);
            if ((v32 & 1) == 0)
              goto LABEL_34;
          }
          v31 += 392;
          if (!--v29)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
        sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
LABEL_33:
        sub_1BA915C30((uint64_t)v60);
        sub_1BA915C30((uint64_t)v59);
        sub_1BA915C30((uint64_t)v61);
        sub_1BA915C30((uint64_t)v62);
LABEL_34:
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v28 + 16);
LABEL_28:
        if (v29 != v43)
          goto LABEL_5;
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
LABEL_4:
      v10 = v52;
      v62[0] = v52;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = 0x4024000000000000;
      v12 = v49;
      v13 = v50;
      *v49 = v11;
      v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
      v57 = v8;
      v15 = v51;
      v14(v12, v47, v51);
      v16 = MEMORY[0x1E0DB5DD0];
      sub_1BA915D74(0, &qword_1ED39C2C8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
      v56 = v17;
      sub_1BA915B74(&qword_1ED39C2C0, &qword_1ED39C2C8, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB5DD8]);
      sub_1BB86D4EC();
      v18 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
      v18(v12, v15);
      v62[0] = v10;
      v14(v12, v46, v15);
      sub_1BA915BB4();
      sub_1BA4CDF6C(0, &qword_1ED39C2A0, (uint64_t (*)(void))sub_1BA9159A0, (uint64_t)&type metadata for J6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v20 = v19;
      v21 = *(_QWORD *)(v19 - 8);
      v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v44;
      v24 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v21 + 104);
      v9 = &unk_1ED3D2000;
      v25 = v24(v23 + v22, v45, v20);
      MEMORY[0x1E0C80A78](v25);
      sub_1BB86D498();
      swift_bridgeObjectRelease();
      v26 = v12;
      v7 = v48;
      v27 = v15;
      v8 = v57;
      v18(v26, v27);
LABEL_5:
      swift_bridgeObjectRelease();
      if (++v8 == v55)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
}

void sub_1BA9142F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double (*v34)(uint64_t, uint64_t);
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t, _QWORD *);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[296];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v61 = a1;
  v5 = sub_1BB86DA38();
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C308, (uint64_t (*)(void))sub_1BA9159A0, (uint64_t)&type metadata for J6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v47 - v10);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v57 = a3 + *(int *)(type metadata accessor for J6_V1.Bound() + 24);
    v56 = *(int *)(type metadata accessor for GroupLayoutContext() + 40);
    v13 = a2 + 32;
    v55 = *MEMORY[0x1E0DB5FB0];
    v54 = *MEMORY[0x1E0DB5FB8];
    v53 = *MEMORY[0x1E0DB63D0];
    v52 = *MEMORY[0x1E0DB5C30];
    v51 = *MEMORY[0x1E0DB5C68];
    v50 = *MEMORY[0x1E0DB6208];
    v47 = a2;
    swift_bridgeObjectRetain();
    v49 = xmmword_1BB87CE70;
    v48 = v9;
    do
    {
      v64 = v13;
      v65 = v12;
      sub_1BA915B28(v13, (uint64_t)v67);
      v66 = v61;
      KeyPath = swift_getKeyPath();
      sub_1BA71C838();
      v15 = v14;
      v16 = swift_allocBox();
      v17 = v9;
      v19 = v18;
      v20 = (char *)v18 + *(int *)(v15 + 48);
      sub_1BB86D42C();
      v21 = swift_allocBox();
      sub_1BB86D420();
      *v19 = v21;
      v22 = sub_1BB86D894();
      v23 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
      v23(v19, v55, v22);
      v23((uint64_t *)v20, v54, v22);
      *v11 = v16;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v11, v53, v8);
      sub_1BA915BB4();
      sub_1BA4CDF6C(0, &qword_1ED39C2A0, (uint64_t (*)(void))sub_1BA9159A0, (uint64_t)&type metadata for J6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v25 = v24;
      v26 = *(_QWORD *)(v24 - 8);
      v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v49;
      v62 = v28;
      v29 = v28 + v27;
      sub_1BA4CDF6C(0, &qword_1ED39C290, (uint64_t (*)(void))sub_1BA9159A0, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E0DB5C60]);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v52, v30);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104))(v29, v51, v25);
      v31 = *(_QWORD *)(*(_QWORD *)(v57 + v56) + 24);
      v32 = v69;
      v33 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v34 = *(double (**)(uint64_t, uint64_t))(v33 + 16);
      swift_retain();
      v35 = v34(v32, v33);
      if (qword_1ED39E210 != -1)
        swift_once();
      objc_msgSend((id)qword_1ED476400, sel_size);
      v38 = v35 * (v36 / v37);
      v39 = v69;
      v40 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      (*(void (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
      v41 = v69;
      v42 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 56))(v41, v42);
      *(double *)&v44 = MEMORY[0x1E0C80A78](v43);
      *(&v47 - 6) = v31;
      *(&v47 - 5) = (uint64_t)v67;
      *((double *)&v47 - 4) = v38;
      *((double *)&v47 - 3) = v35;
      v46 = v44;
      (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, v50, v60);
      sub_1BA915C74();
      swift_allocObject();
      sub_1BB86DB34();
      swift_release();
      v45 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA915D74(0, &qword_1ED39C270, MEMORY[0x1E0DB5A10]);
      sub_1BA915B74(&qword_1ED39C268, &qword_1ED39C270, v45, MEMORY[0x1E0DB5A18]);
      v46 = sub_1BA915DF0();
      sub_1BB86D4C8();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v9 = v48;
      (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v11, v8);
      sub_1BA915C30((uint64_t)v67);
      v13 = v64 + 392;
      v12 = v65 - 1;
    }
    while (v65 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA914848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v10 = swift_allocObject();
  sub_1BA915B28(a2, v10 + 16);
  memcpy((void *)(v10 + 408), a3, 0x180uLL);
  v11 = a4 + *(int *)(type metadata accessor for J6_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v13 = *(_QWORD *)(v11 + *(int *)(result + 28));
  v14 = __OFADD__(v13, a1);
  v15 = v13 + a1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v10 + 792) = v15;
    *a5 = v10 | 0x5000000000000000;
  }
  return result;
}

uint64_t sub_1BA914900(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA974CEC(*(_QWORD *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_1BA914910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA91347C(a1, a2, a3);
}

uint64_t sub_1BA914924()
{
  return sub_1BB690BA8();
}

unint64_t sub_1BA914934(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA914960();
  result = sub_1BA9149A4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA914960()
{
  unint64_t result;

  result = qword_1ED39D8D0;
  if (!qword_1ED39D8D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884494, &type metadata for J6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED39D8D0);
  }
  return result;
}

unint64_t sub_1BA9149A4()
{
  unint64_t result;

  result = qword_1ED39D8C8;
  if (!qword_1ED39D8C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8844BC, &type metadata for J6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED39D8C8);
  }
  return result;
}

uint64_t type metadata accessor for J6_V1.Bound()
{
  uint64_t result;

  result = qword_1ED39D7E8;
  if (!qword_1ED39D7E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA914A24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  void *__dst;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    v33 = a3;
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1BB86D7A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = (int *)type metadata accessor for GroupLayoutContext();
    v17 = v16[5];
    v18 = v13 + v17;
    v19 = v14 + v17;
    v20 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = v16[6];
    v22 = v13 + v21;
    v23 = v14 + v21;
    *(_OWORD *)v22 = *(_OWORD *)(v14 + v21);
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(_BYTE *)(v22 + 19) = *(_BYTE *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    v24 = *(_QWORD *)(v14 + v21 + 24);
    if (v24 >= 2)
      v24 = swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 24) = v24;
    v32 = type metadata accessor for FeedLayoutSolverOptions(0);
    v25 = *(int *)(v32 + 36);
    __dst = (void *)(v22 + v25);
    v26 = (const void *)(v23 + v25);
    v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1BA914C98();
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(__dst, v26, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    *(_QWORD *)(v22 + *(int *)(v32 + 40)) = *(_QWORD *)(v23 + *(int *)(v32 + 40));
    *(_QWORD *)(v13 + v16[7]) = *(_QWORD *)(v14 + v16[7]);
    *(_QWORD *)(v13 + v16[8]) = *(_QWORD *)(v14 + v16[8]);
    *(_BYTE *)(v13 + v16[9]) = *(_BYTE *)(v14 + v16[9]);
    *(_QWORD *)(v13 + v16[10]) = *(_QWORD *)(v14 + v16[10]);
    *(_BYTE *)(v13 + v16[11]) = *(_BYTE *)(v14 + v16[11]);
    *(_QWORD *)(v13 + v16[12]) = *(_QWORD *)(v14 + v16[12]);
    *(_QWORD *)(a1 + *(int *)(v33 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v33 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1BA914C98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D24E0)
  {
    type metadata accessor for FeedLayoutSolverOptions.PluginOptions(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D24E0);
  }
}

uint64_t sub_1BA914CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *__dst;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  v32 = a3;
  v33 = a2;
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v14[6];
  v20 = v11 + v19;
  v21 = v12 + v19;
  *(_OWORD *)v20 = *(_OWORD *)(v12 + v19);
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(_BYTE *)(v20 + 19) = *(_BYTE *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  v22 = *(_QWORD *)(v12 + v19 + 24);
  if (v22 >= 2)
    v22 = swift_bridgeObjectRetain();
  *(_QWORD *)(v20 + 24) = v22;
  v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  v25 = (const void *)(v21 + v24);
  v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BA914C98();
    memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(_QWORD *)(v20 + *(int *)(v23 + 40)) = *(_QWORD *)(v21 + *(int *)(v23 + 40));
  *(_QWORD *)(v11 + v14[7]) = *(_QWORD *)(v12 + v14[7]);
  *(_QWORD *)(v11 + v14[8]) = *(_QWORD *)(v12 + v14[8]);
  *(_BYTE *)(v11 + v14[9]) = *(_BYTE *)(v12 + v14[9]);
  *(_QWORD *)(v11 + v14[10]) = *(_QWORD *)(v12 + v14[10]);
  *(_BYTE *)(v11 + v14[11]) = *(_BYTE *)(v12 + v14[11]);
  *(_QWORD *)(v11 + v14[12]) = *(_QWORD *)(v12 + v14[12]);
  *(_QWORD *)(a1 + *(int *)(v32 + 28)) = *(_QWORD *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BA914F44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;

  v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  v38 = a3;
  v39 = a2;
  v7 = *(int *)(a3 + 24);
  v40 = a1;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[6];
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  v20 = (unint64_t *)&v8[v16 + 24];
  v21 = *(_QWORD *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v17 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v20 = *((_QWORD *)v18 + 3);
    }
  }
  else
  {
    *v20 = v21;
    if (v21 >= 2)
      swift_bridgeObjectRetain();
  }
  v37 = type metadata accessor for FeedLayoutSolverOptions(0);
  v22 = *(int *)(v37 + 36);
  v23 = (uint64_t)&v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v36 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  v28 = v27((uint64_t)v24, 1, v25);
  if ((_DWORD)v23)
  {
    if (!v28)
    {
      v33 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v36, v24, v33);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1BA914C98();
    v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
    v31 = (void *)v36;
  }
  else
  {
    if (!v28)
    {
      v34 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v36, v24, v34);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v36, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v30 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64);
    v31 = (void *)v36;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(_QWORD *)&v17[*(int *)(v37 + 40)] = *(_QWORD *)&v18[*(int *)(v37 + 40)];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  *(_QWORD *)&v8[v11[8]] = *(_QWORD *)&v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  swift_retain();
  swift_release();
  v8[v11[11]] = v9[v11[11]];
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v40 + *(int *)(v38 + 28)) = *(_QWORD *)((char *)v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1BA915288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for GroupLayoutContext();
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  *(_OWORD *)v15 = *(_OWORD *)(v7 + v14);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(_BYTE *)(v15 + 19) = *(_BYTE *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v7 + v14 + 24);
  v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  v18 = (const void *)(v16 + v17);
  v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1BA914C98();
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)(v15 + *(int *)(v24 + 40)) = *(_QWORD *)(v16 + *(int *)(v24 + 40));
  *(_QWORD *)(v6 + v9[7]) = *(_QWORD *)(v7 + v9[7]);
  *(_QWORD *)(v6 + v9[8]) = *(_QWORD *)(v7 + v9[8]);
  *(_BYTE *)(v6 + v9[9]) = *(_BYTE *)(v7 + v9[9]);
  *(_QWORD *)(v6 + v9[10]) = *(_QWORD *)(v7 + v9[10]);
  *(_BYTE *)(v6 + v9[11]) = *(_BYTE *)(v7 + v9[11]);
  *(_QWORD *)(v6 + v9[12]) = *(_QWORD *)(v7 + v9[12]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BA91549C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v36 = a3;
  v37 = a2;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 18) = *(_BYTE *)(v8 + v15 + 18);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_BYTE *)(v16 + 20) = *(_BYTE *)(v8 + v15 + 20);
  *(_BYTE *)(v16 + 21) = *(_BYTE *)(v8 + v15 + 21);
  *(_BYTE *)(v16 + 22) = *(_BYTE *)(v8 + v15 + 22);
  *(_BYTE *)(v16 + 23) = *(_BYTE *)(v8 + v15 + 23);
  v18 = (unint64_t *)(v7 + v15 + 24);
  v19 = *(_QWORD *)(v8 + v15 + 24);
  if (*v18 < 2)
    goto LABEL_4;
  if (v19 < 2)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v19 = *(_QWORD *)(v17 + 24);
LABEL_4:
    *v18 = v19;
    goto LABEL_6;
  }
  *v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v35 = type metadata accessor for FeedLayoutSolverOptions(0);
  v20 = *(int *)(v35 + 36);
  v21 = v16 + v20;
  v22 = (const void *)(v17 + v20);
  v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v33 = *(_QWORD *)(v23 - 8);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v34 = v21;
  LODWORD(v21) = v24(v21, 1, v23);
  v25 = v24((uint64_t)v22, 1, v23);
  if ((_DWORD)v21)
  {
    if (!v25)
    {
      v30 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v34, v22, v30);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1BA914C98();
    v27 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64);
    v28 = (void *)v34;
  }
  else
  {
    if (!v25)
    {
      v31 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v34, v22, v31);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v34, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v27 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
    v28 = (void *)v34;
  }
  memcpy(v28, v22, v27);
LABEL_14:
  *(_QWORD *)(v16 + *(int *)(v35 + 40)) = *(_QWORD *)(v17 + *(int *)(v35 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  swift_release();
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  swift_release();
  *(_QWORD *)(a1 + *(int *)(v36 + 28)) = *(_QWORD *)(v37 + *(int *)(v36 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA9157A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA9157B4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BA915830()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BA91583C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA9158B0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA91593C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED39D7D8, (uint64_t (*)(uint64_t))type metadata accessor for J6_V1.Bound, (uint64_t)&unk_1BB884520);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA915978@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA913C80(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1BA915994(uint64_t a1)
{
  uint64_t *v1;

  sub_1BA913E10(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BA9159A0()
{
  unint64_t result;

  result = qword_1ED39D8C0;
  if (!qword_1ED39D8C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884678, &type metadata for J6_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1ED39D8C0);
  }
  return result;
}

unint64_t sub_1BA9159E4()
{
  unint64_t result;

  result = qword_1ED39D8A8;
  if (!qword_1ED39D8A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884648, &type metadata for J6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D8A8);
  }
  return result;
}

uint64_t sub_1BA915A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BA914848(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BA915A30()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA915B28(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CoverIssueViewLayout.Context(a2, a1);
  return a2;
}

uint64_t sub_1BA915B64()
{
  return swift_deallocObject();
}

uint64_t sub_1BA915B74(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA915D74(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA915BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DC08)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C2A0, (uint64_t (*)(void))sub_1BA9159A0, (uint64_t)&type metadata for J6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DC08);
  }
}

void sub_1BA915C28(uint64_t a1)
{
  uint64_t v1;

  sub_1BA9142F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA915C30(uint64_t a1)
{
  destroy for CoverIssueViewLayout.Context(a1);
  return a1;
}

uint64_t sub_1BA915C64(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB431404(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

void sub_1BA915C74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C2F0)
  {
    sub_1BA915CEC();
    sub_1BA915D30();
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C2F0);
  }
}

unint64_t sub_1BA915CEC()
{
  unint64_t result;

  result = qword_1ED39CF48;
  if (!qword_1ED39CF48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverIssueViewLayout, &type metadata for CoverIssueViewLayout);
    atomic_store(result, (unint64_t *)&qword_1ED39CF48);
  }
  return result;
}

unint64_t sub_1BA915D30()
{
  unint64_t result;

  result = qword_1ED39CF30;
  if (!qword_1ED39CF30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverIssueViewLayout.Attributes, &type metadata for CoverIssueViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39CF30);
  }
  return result;
}

void sub_1BA915D74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for J6_V1.Layout;
    v8[1] = &type metadata for J6_V1.Layout.Attributes;
    v8[2] = sub_1BA9159A0();
    v8[3] = sub_1BA9159E4();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BA915DF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39C2D0;
  if (!qword_1ED39C2D0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C2D8, (uint64_t (*)(void))sub_1BA915E58, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5EB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39C2D0);
  }
  return result;
}

unint64_t sub_1BA915E58()
{
  unint64_t result;

  result = qword_1ED39CF28;
  if (!qword_1ED39CF28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverIssueViewLayout.Attributes, &type metadata for CoverIssueViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39CF28);
  }
  return result;
}

ValueMetadata *type metadata accessor for J6_V1.Layout.Attributes()
{
  return &type metadata for J6_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for J6_V1.Layout()
{
  return &type metadata for J6_V1.Layout;
}

unint64_t sub_1BA915EC0()
{
  unint64_t result;

  result = qword_1ED39D8B8;
  if (!qword_1ED39D8B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8845E8, &type metadata for J6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D8B8);
  }
  return result;
}

unint64_t sub_1BA915F08()
{
  unint64_t result;

  result = qword_1ED39D8B0;
  if (!qword_1ED39D8B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8845C0, &type metadata for J6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D8B0);
  }
  return result;
}

unint64_t sub_1BA915F50()
{
  unint64_t result;

  result = qword_1ED39D898;
  if (!qword_1ED39D898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884598, &type metadata for J6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D898);
  }
  return result;
}

unint64_t sub_1BA915F98()
{
  unint64_t result;

  result = qword_1ED39D8A0;
  if (!qword_1ED39D8A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884610, &type metadata for J6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D8A0);
  }
  return result;
}

uint64_t sub_1BA915FDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BB963010)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BA9160C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39DBB8, (uint64_t (*)(void))sub_1BA9162DC, (uint64_t)&type metadata for J6_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA9162DC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = 1;
  sub_1BA916364(&qword_1ED39D9D0, (uint64_t (*)(void))sub_1BA916320, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BA9162DC()
{
  unint64_t result;

  result = qword_1ED39D880;
  if (!qword_1ED39D880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88476C, &type metadata for J6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39D880);
  }
  return result;
}

unint64_t sub_1BA916320()
{
  unint64_t result;

  result = qword_1ED39CF40;
  if (!qword_1ED39CF40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverIssueViewLayout.Attributes, &type metadata for CoverIssueViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39CF40);
  }
  return result;
}

uint64_t sub_1BA916364(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA9163E0()
{
  unint64_t result;

  result = qword_1ED39CF38;
  if (!qword_1ED39CF38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverIssueViewLayout.Attributes, &type metadata for CoverIssueViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39CF38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for J6_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA916470 + 4 * byte_1BB884485[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA9164A4 + 4 * byte_1BB884480[v4]))();
}

uint64_t sub_1BA9164A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9164AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA9164B4);
  return result;
}

uint64_t sub_1BA9164C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA9164C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA9164CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9164D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for J6_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for J6_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BA9164F4()
{
  unint64_t result;

  result = qword_1EF2AA7E0;
  if (!qword_1EF2AA7E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884744, &type metadata for J6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA7E0);
  }
  return result;
}

unint64_t sub_1BA91653C()
{
  unint64_t result;

  result = qword_1ED39D890;
  if (!qword_1ED39D890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8846B4, &type metadata for J6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39D890);
  }
  return result;
}

unint64_t sub_1BA916584()
{
  unint64_t result;

  result = qword_1ED39D888;
  if (!qword_1ED39D888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8846DC, &type metadata for J6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39D888);
  }
  return result;
}

uint64_t FormatArticleThumbnail.focalFrame.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FormatArticleThumbnail.accentColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.backgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.primaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.textColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.lowQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BA57B488(v1 + *(int *)(v3 + 36), a1, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.defaultQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BA57B488(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.mediumQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BA57B488(v1 + *(int *)(v3 + 44), a1, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.highQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BA57B488(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.ultraQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BA57B488(v1 + *(int *)(v3 + 52), a1, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

BOOL sub_1BA9167D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = type metadata accessor for FormatArticleThumbnail();
  MEMORY[0x1E0C80A78](v1);
  v43 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v42 = (uint64_t)&v38 - v4;
  MEMORY[0x1E0C80A78](v5);
  v41 = (uint64_t)&v38 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v38 - v23;
  v25 = (int *)v1;
  sub_1BA57B488(v0 + *(int *)(v1 + 36), (uint64_t)&v38 - v23, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v26 = type metadata accessor for FormatArticleThumbnailImage();
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  v39 = v26;
  v40 = v27;
  LODWORD(v1) = ((uint64_t (*)(char *, uint64_t))v27)(v24, 1);
  sub_1BA502AD0((uint64_t)v24, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1BA918C7C(v0, (uint64_t)v9);
  if ((_DWORD)v1 != 1)
  {
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
    v30 = v41;
    sub_1BA918C7C(v0, v41);
    goto LABEL_7;
  }
  v38 = v12;
  sub_1BA57B488((uint64_t)&v9[v25[10]], (uint64_t)v21, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  v28 = v39;
  v29 = v40(v21, 1, v39);
  sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v30 = v41;
  sub_1BA918C7C(v0, v41);
  if (v29 != 1)
  {
LABEL_7:
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
    v32 = v42;
    sub_1BA918C7C(v0, v42);
    goto LABEL_8;
  }
  sub_1BA57B488(v30 + v25[11], (uint64_t)v18, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  v31 = v40(v18, 1, v28);
  sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v32 = v42;
  sub_1BA918C7C(v0, v42);
  if (v31 != 1)
  {
LABEL_8:
    sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
    v34 = v43;
    sub_1BA918C7C(v0, v43);
    goto LABEL_9;
  }
  sub_1BA57B488(v32 + v25[12], (uint64_t)v15, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  v33 = v40(v15, 1, v28);
  sub_1BA502AD0((uint64_t)v15, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  v34 = v43;
  sub_1BA918C7C(v0, v43);
  if (v33 != 1)
  {
LABEL_9:
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
    return 0;
  }
  v35 = (uint64_t)v38;
  sub_1BA57B488(v34 + v25[13], (uint64_t)v38, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  v36 = v40((char *)v35, 1, v28) == 1;
  sub_1BA502AD0(v35, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  return v36;
}

uint64_t sub_1BA916C04(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA916C3C + 4 * byte_1BB8847C0[a1]))(0x6172466C61636F66, 0xEA0000000000656DLL);
}

uint64_t sub_1BA916C3C()
{
  return 0x6F43746E65636361;
}

uint64_t sub_1BA916C5C()
{
  return 0x756F72676B636162;
}

uint64_t sub_1BA916C80()
{
  return 0x437972616D697270;
}

uint64_t sub_1BA916CA0()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1BA916CBC()
{
  return 0x696C617551776F6CLL;
}

unint64_t sub_1BA916CE0()
{
  return 0xD000000000000013;
}

uint64_t sub_1BA916D4C()
{
  unsigned __int8 *v0;

  return sub_1BA916C04(*v0);
}

uint64_t sub_1BA916D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA91A838(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA916D78(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1BA916D84()
{
  sub_1BA918B88();
  return sub_1BB874710();
}

uint64_t sub_1BA916DAC()
{
  sub_1BA918B88();
  return sub_1BB87471C();
}

uint64_t FormatArticleThumbnail.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[32];

  sub_1BA918BCC(0, &qword_1ED3A31B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA918B88();
  sub_1BB8746C8();
  v9[31] = 0;
  sub_1BB874170();
  if (!v1)
  {
    v9[30] = 1;
    sub_1BB87411C();
    v9[29] = 2;
    sub_1BB87411C();
    v9[28] = 3;
    sub_1BB87411C();
    v9[27] = 4;
    sub_1BB87411C();
    type metadata accessor for FormatArticleThumbnail();
    v9[26] = 5;
    type metadata accessor for FormatArticleThumbnailImage();
    sub_1BA4A2870(&qword_1ED3A2C00, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnailImage);
    sub_1BB87414C();
    v9[25] = 6;
    sub_1BB87414C();
    v9[24] = 7;
    sub_1BB87414C();
    v9[15] = 8;
    sub_1BB87414C();
    v9[14] = 9;
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatArticleThumbnail.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v44 = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v40 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v40 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v40 - v15;
  sub_1BA918BCC(0, &qword_1ED3A3100, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v47 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v40 - v19;
  v51 = type metadata accessor for FormatArticleThumbnail();
  MEMORY[0x1E0C80A78](v51);
  v50 = (_QWORD *)((char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1BA918B88();
  v46 = v20;
  v23 = (uint64_t)v49;
  sub_1BB87468C();
  if (v23)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  v49 = v16;
  v42 = v10;
  v43 = v13;
  v41 = v7;
  v24 = v18;
  v25 = (uint64_t)v45;
  v61 = 0;
  v26 = sub_1BB87408C();
  v27 = (int *)v51;
  v28 = v50;
  *v50 = v26;
  *((_BYTE *)v28 + 8) = v29 & 1;
  v60 = 1;
  v28[2] = sub_1BB87402C();
  v28[3] = v30;
  v59 = 2;
  v28[4] = sub_1BB87402C();
  v28[5] = v31;
  v58 = 3;
  v28[6] = sub_1BB87402C();
  v28[7] = v32;
  v57 = 4;
  v28[8] = sub_1BB87402C();
  v28[9] = v33;
  v34 = type metadata accessor for FormatArticleThumbnailImage();
  v56 = 5;
  v40[0] = sub_1BA4A2870(&qword_1ED3A2C08, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnailImage);
  v40[1] = v34;
  sub_1BB874068();
  sub_1BA918C28((uint64_t)v49, (uint64_t)v28 + v27[9]);
  v55 = 6;
  v35 = (uint64_t)v43;
  sub_1BB874068();
  sub_1BA918C28(v35, (uint64_t)v28 + v27[10]);
  v54 = 7;
  v36 = (uint64_t)v42;
  sub_1BB874068();
  sub_1BA918C28(v36, (uint64_t)v28 + v27[11]);
  v53 = 8;
  v37 = (uint64_t)v41;
  sub_1BB874068();
  sub_1BA918C28(v37, (uint64_t)v28 + v27[12]);
  v52 = 9;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v46, v47);
  v38 = (uint64_t)v50;
  sub_1BA918C28(v25, (uint64_t)v50 + *(int *)(v51 + 52));
  sub_1BA918C7C(v38, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
}

uint64_t sub_1BA917758@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatArticleThumbnail.init(from:)(a1, a2);
}

uint64_t sub_1BA91776C(_QWORD *a1)
{
  return FormatArticleThumbnail.encode(to:)(a1);
}

BOOL _s8NewsFeed22FormatArticleThumbnailV2eeoiySbAC_ACtFZ_0(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  char v76;
  _BOOL8 result;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(char *, uint64_t, uint64_t);
  int *v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  BOOL v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int (*v164)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v165)(uint64_t, uint64_t, uint64_t);
  int *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  int *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  unsigned int (*v218)(char *, uint64_t, uint64_t);
  char *v219;
  uint64_t v220;

  v220 = type metadata accessor for FormatArticleThumbnailImage();
  v218 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v220 - 8);
  MEMORY[0x1E0C80A78](v220);
  v212 = (uint64_t)&v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v194 - v6;
  MEMORY[0x1E0C80A78](v8);
  v214 = (uint64_t)&v194 - v9;
  MEMORY[0x1E0C80A78](v10);
  v215 = (uint64_t)&v194 - v11;
  MEMORY[0x1E0C80A78](v12);
  v217 = (char *)&v194 - v13;
  sub_1BA91ACC0();
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v213 = (uint64_t)&v194 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v194 - v18;
  MEMORY[0x1E0C80A78](v20);
  v216 = (uint64_t)&v194 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v194 - v23;
  MEMORY[0x1E0C80A78](v25);
  v219 = (char *)&v194 - v26;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v194 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v194 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v194 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v194 - v38;
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  MEMORY[0x1E0C80A78]((char *)&v194 - v46);
  MEMORY[0x1E0C80A78](v47);
  MEMORY[0x1E0C80A78](v48);
  MEMORY[0x1E0C80A78](v49);
  v61 = (char *)&v194 - v57;
  v62 = *(_BYTE *)(a2 + 8);
  if ((a1[2] & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v62 = 1;
    if ((v62 & 1) != 0)
      return 0;
  }
  v211 = (char *)v51;
  v63 = *((_QWORD *)a1 + 3);
  v64 = *(_QWORD *)(a2 + 24);
  if (!v63)
  {
    v209 = v50;
    v210 = v52;
    if (v64)
      return 0;
    goto LABEL_14;
  }
  if (!v64)
    return 0;
  v209 = v50;
  v210 = v52;
  if (*((_QWORD *)a1 + 2) == *(_QWORD *)(a2 + 16) && v63 == v64)
    goto LABEL_14;
  v207 = v19;
  v208 = v53;
  v205 = v36;
  v206 = v7;
  v203 = a1;
  v204 = (char *)v15;
  v201 = a2;
  v202 = v30;
  v65 = v33;
  v66 = v58;
  v67 = v39;
  v68 = v59;
  v69 = v60;
  v70 = v24;
  v71 = v54;
  v72 = v55;
  v73 = v56;
  v74 = (char *)&v194 - v57;
  v75 = sub_1BB874398();
  v61 = v74;
  v56 = v73;
  v55 = v72;
  v54 = v71;
  v24 = v70;
  v19 = v207;
  v53 = v208;
  v60 = v69;
  v59 = v68;
  v39 = v67;
  v58 = v66;
  v33 = v65;
  a2 = v201;
  v30 = v202;
  a1 = v203;
  v15 = (uint64_t)v204;
  v36 = v205;
  v7 = v206;
  v76 = v75;
  result = 0;
  if ((v76 & 1) != 0)
  {
LABEL_14:
    v78 = *((_QWORD *)a1 + 5);
    v79 = *(_QWORD *)(a2 + 40);
    if (v78)
    {
      if (!v79)
        return 0;
      if (*((_QWORD *)a1 + 4) != *(_QWORD *)(a2 + 32) || v78 != v79)
      {
        v207 = v19;
        v208 = v53;
        v205 = v36;
        v206 = v7;
        v203 = a1;
        v204 = (char *)v15;
        v201 = a2;
        v202 = v30;
        v80 = v33;
        v81 = v58;
        v82 = v39;
        v83 = v59;
        v84 = v60;
        v85 = v24;
        v86 = v54;
        v87 = v55;
        v88 = v56;
        v89 = v61;
        v90 = sub_1BB874398();
        v61 = v89;
        v56 = v88;
        v55 = v87;
        v54 = v86;
        v24 = v85;
        v19 = v207;
        v53 = v208;
        v60 = v84;
        v59 = v83;
        v39 = v82;
        v58 = v81;
        v33 = v80;
        a2 = v201;
        v30 = v202;
        a1 = v203;
        v15 = (uint64_t)v204;
        v36 = v205;
        v7 = v206;
        v91 = v90;
        result = 0;
        if ((v91 & 1) == 0)
          return result;
      }
    }
    else if (v79)
    {
      return 0;
    }
    v92 = *((_QWORD *)a1 + 7);
    v93 = *(_QWORD *)(a2 + 56);
    if (v92)
    {
      if (!v93)
        return 0;
      if (*((_QWORD *)a1 + 6) != *(_QWORD *)(a2 + 48) || v92 != v93)
      {
        v207 = v19;
        v208 = v53;
        v205 = v36;
        v206 = v7;
        v203 = a1;
        v204 = (char *)v15;
        v201 = a2;
        v202 = v30;
        v94 = v33;
        v95 = v58;
        v96 = v39;
        v97 = v59;
        v98 = v60;
        v99 = v24;
        v100 = v54;
        v101 = v55;
        v102 = v56;
        v103 = v61;
        v104 = sub_1BB874398();
        v61 = v103;
        v56 = v102;
        v55 = v101;
        v54 = v100;
        v24 = v99;
        v19 = v207;
        v53 = v208;
        v60 = v98;
        v59 = v97;
        v39 = v96;
        v58 = v95;
        v33 = v94;
        a2 = v201;
        v30 = v202;
        a1 = v203;
        v15 = (uint64_t)v204;
        v36 = v205;
        v7 = v206;
        v105 = v104;
        result = 0;
        if ((v105 & 1) == 0)
          return result;
      }
    }
    else if (v93)
    {
      return 0;
    }
    v106 = *((_QWORD *)a1 + 9);
    v107 = *(_QWORD *)(a2 + 72);
    if (v106)
    {
      if (!v107)
        return 0;
      if (*((_QWORD *)a1 + 8) != *(_QWORD *)(a2 + 64) || v106 != v107)
      {
        v207 = v19;
        v208 = v53;
        v205 = v36;
        v206 = v7;
        v203 = a1;
        v204 = (char *)v15;
        v201 = a2;
        v202 = v30;
        v108 = v33;
        v109 = v58;
        v110 = v39;
        v111 = v59;
        v112 = v60;
        v113 = v24;
        v114 = v54;
        v115 = v55;
        v116 = v56;
        v117 = v61;
        v118 = sub_1BB874398();
        v61 = v117;
        v56 = v116;
        v55 = v115;
        v54 = v114;
        v24 = v113;
        v19 = v207;
        v53 = v208;
        v60 = v112;
        v59 = v111;
        v39 = v110;
        v58 = v109;
        v33 = v108;
        a2 = v201;
        v30 = v202;
        a1 = v203;
        v15 = (uint64_t)v204;
        v36 = v205;
        v7 = v206;
        v119 = v118;
        result = 0;
        if ((v119 & 1) == 0)
          return result;
      }
    }
    else if (v107)
    {
      return 0;
    }
    v200 = v61;
    v199 = v56;
    v198 = v55;
    v197 = v54;
    v208 = v53;
    v195 = v60;
    v196 = v59;
    v206 = v7;
    v194 = v58;
    v120 = type metadata accessor for FormatArticleThumbnail();
    sub_1BA57B488((uint64_t)a1 + *(int *)(v120 + 36), (uint64_t)v200, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v203 = (int *)v120;
    sub_1BA57B488(a2 + *(int *)(v120 + 36), (uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v121 = (uint64_t)v219;
    v204 = &v219[*(int *)(v15 + 48)];
    sub_1BA57B488((uint64_t)v200, (uint64_t)v219, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    sub_1BA57B488((uint64_t)v211, (uint64_t)v204, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v122 = v121;
    v123 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v218 + 6);
    if (v123((char *)v122, 1, v220) == 1)
    {
      v205 = v36;
      v207 = v19;
      sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0((uint64_t)v200, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      if (v123(v204, 1, v220) != 1)
        goto LABEL_49;
      sub_1BA502AD0((uint64_t)v219, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    }
    else
    {
      sub_1BA57B488((uint64_t)v219, v210, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v218 = v123;
      if (v123(v204, 1, v220) == 1)
      {
        sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA502AD0((uint64_t)v200, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        v136 = v210;
        goto LABEL_48;
      }
      v137 = (uint64_t)v217;
      sub_1BA5193C4((uint64_t)v204, (uint64_t)v217, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      if ((MEMORY[0x1BCCDCEFC](v210, v137) & 1) == 0)
      {
        sub_1BA4A2E80(v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA502AD0((uint64_t)v200, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA4A2E80(v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
        v143 = (uint64_t)v219;
        goto LABEL_82;
      }
      v207 = v19;
      v138 = *(int *)(v220 + 20);
      v139 = v137;
      v140 = v210;
      v204 = *(char **)(v210 + v138);
      v205 = v36;
      v202 = *(char **)(v139 + v138);
      sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0((uint64_t)v200, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA4A2E80(v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0((uint64_t)v219, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v123 = v218;
      if (v204 != v202)
        return 0;
    }
    v211 = v39;
    v124 = v203;
    v125 = (uint64_t)a1 + v203[10];
    v219 = v24;
    v126 = v199;
    sub_1BA57B488(v125, v199, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v127 = v123;
    v128 = v209;
    sub_1BA57B488(a2 + v124[10], v209, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v129 = (uint64_t)&v219[*(int *)(v15 + 48)];
    sub_1BA57B488(v126, (uint64_t)v219, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v217 = (char *)v129;
    v130 = v129;
    v131 = v127;
    v132 = (uint64_t)v219;
    sub_1BA57B488(v128, v130, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v133 = v220;
    if (v127((char *)v132, 1, v220) == 1)
    {
      sub_1BA502AD0(v128, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v134 = v220;
      sub_1BA502AD0(v199, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      if (v127(v217, 1, v134) == 1)
      {
        v135 = v127;
        sub_1BA502AD0((uint64_t)v219, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        goto LABEL_54;
      }
LABEL_49:
      sub_1BA4A2E80((uint64_t)v219, (uint64_t (*)(_QWORD))sub_1BA91ACC0);
      return 0;
    }
    v141 = v198;
    sub_1BA57B488(v132, v198, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v142 = (uint64_t)v217;
    v218 = v131;
    if (v131(v217, 1, v133) != 1)
    {
      v144 = v142;
      v145 = v215;
      sub_1BA5193C4(v144, v215, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      if ((MEMORY[0x1BCCDCEFC](v141, v145) & 1) == 0)
      {
        sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA502AD0(v128, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA502AD0(v199, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA4A2E80(v141, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
        v143 = (uint64_t)v219;
        goto LABEL_82;
      }
      v146 = *(int *)(v133 + 20);
      v217 = *(char **)(v141 + v146);
      v147 = *(char **)(v145 + v146);
      sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0(v128, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0(v199, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA4A2E80(v141, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BA502AD0((uint64_t)v219, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v135 = v218;
      v148 = v217 == v147;
      v134 = v220;
      if (!v148)
        return 0;
LABEL_54:
      v149 = v203;
      v150 = v208;
      sub_1BA57B488((uint64_t)a1 + v203[11], v208, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v151 = a2 + v149[11];
      v152 = v197;
      sub_1BA57B488(v151, v197, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v153 = *(int *)(v15 + 48);
      v218 = v135;
      v154 = v216;
      v155 = v216 + v153;
      sub_1BA57B488(v150, v216, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v219 = (char *)v155;
      v156 = v155;
      v157 = v218;
      sub_1BA57B488(v152, v156, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      v158 = v134;
      if (v157((char *)v154, 1, v134) == 1)
      {
        sub_1BA502AD0(v152, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        v154 = v216;
        sub_1BA502AD0(v208, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        if (v157(v219, 1, v134) == 1)
        {
          sub_1BA502AD0(v154, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          goto LABEL_57;
        }
      }
      else
      {
        v170 = v195;
        sub_1BA57B488(v154, v195, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        v171 = (uint64_t)v219;
        if (v157(v219, 1, v158) != 1)
        {
          v172 = v214;
          sub_1BA5193C4(v171, v214, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
          if ((MEMORY[0x1BCCDCEFC](v170, v172) & 1) == 0)
          {
            sub_1BA4A2E80(v172, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA502AD0(v197, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            v179 = v208;
            goto LABEL_81;
          }
          v173 = *(int *)(v220 + 20);
          v174 = *(_QWORD *)(v170 + v173);
          v204 = (char *)v15;
          v175 = v30;
          v176 = a2;
          v177 = *(_QWORD *)(v172 + v173);
          sub_1BA4A2E80(v172, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BA502AD0(v197, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BA502AD0(v208, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BA502AD0(v154, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v148 = v174 == v177;
          a2 = v176;
          v30 = v175;
          v15 = (uint64_t)v204;
          if (!v148)
            return 0;
LABEL_57:
          v159 = v203;
          v160 = v196;
          sub_1BA57B488((uint64_t)a1 + v203[12], v196, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v161 = (uint64_t)v211;
          sub_1BA57B488(a2 + v159[12], (uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v154 = (uint64_t)v207;
          v162 = (uint64_t)&v207[*(int *)(v15 + 48)];
          sub_1BA57B488(v160, (uint64_t)v207, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v219 = (char *)v162;
          sub_1BA57B488(v161, v162, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v163 = v220;
          v164 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v218;
          if (v218((char *)v154, 1, v220) == 1)
          {
            sub_1BA502AD0(v161, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA502AD0(v196, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            if (v164((uint64_t)v219, 1, v163) == 1)
            {
              v165 = v164;
              sub_1BA502AD0((uint64_t)v207, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
LABEL_60:
              v166 = v203;
              sub_1BA57B488((uint64_t)a1 + v203[13], (uint64_t)v33, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BA57B488(a2 + v166[13], (uint64_t)v30, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              v167 = v213;
              v168 = v213 + *(int *)(v15 + 48);
              sub_1BA57B488((uint64_t)v33, v213, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BA57B488((uint64_t)v30, v168, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              v169 = v220;
              if (v165(v167, 1, v220) == 1)
              {
                sub_1BA502AD0((uint64_t)v30, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA502AD0((uint64_t)v33, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                if (v165(v168, 1, v169) == 1)
                {
                  sub_1BA502AD0(v167, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  return 1;
                }
                goto LABEL_79;
              }
              v186 = v194;
              sub_1BA57B488(v167, v194, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              if (v165(v168, 1, v169) == 1)
              {
                sub_1BA502AD0((uint64_t)v30, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA502AD0((uint64_t)v33, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA4A2E80(v186, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_79:
                sub_1BA4A2E80(v167, (uint64_t (*)(_QWORD))sub_1BA91ACC0);
                return 0;
              }
              v187 = (uint64_t)v30;
              v188 = v168;
              v189 = v212;
              sub_1BA5193C4(v188, v212, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
              if ((MEMORY[0x1BCCDCEFC](v186, v189) & 1) != 0)
              {
                v190 = *(int *)(v220 + 20);
                v191 = v194;
                v192 = *(_QWORD *)(v194 + v190);
                v193 = *(_QWORD *)(v212 + v190);
                sub_1BA4A2E80(v212, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA502AD0(v187, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA502AD0((uint64_t)v33, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA4A2E80(v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BA502AD0(v213, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                return v192 == v193;
              }
              sub_1BA4A2E80(v212, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BA502AD0((uint64_t)v30, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BA502AD0((uint64_t)v33, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BA4A2E80(v194, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
              v143 = v213;
LABEL_82:
              sub_1BA502AD0(v143, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              return 0;
            }
LABEL_72:
            sub_1BA4A2E80((uint64_t)v207, (uint64_t (*)(_QWORD))sub_1BA91ACC0);
            return 0;
          }
          v170 = (uint64_t)v205;
          sub_1BA57B488(v154, (uint64_t)v205, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v178 = (uint64_t)v219;
          if (v164((uint64_t)v219, 1, v163) == 1)
          {
            sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA502AD0(v196, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
            goto LABEL_72;
          }
          v204 = (char *)v15;
          v180 = v30;
          v181 = a2;
          v182 = (uint64_t)v206;
          sub_1BA5193C4(v178, (uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
          if ((MEMORY[0x1BCCDCEFC](v170, v182) & 1) != 0)
          {
            v183 = *(int *)(v220 + 20);
            v184 = *(_QWORD *)(v170 + v183);
            v185 = *(_QWORD *)(v182 + v183);
            sub_1BA4A2E80(v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA502AD0(v196, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BA502AD0(v154, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            v148 = v184 == v185;
            a2 = v181;
            v30 = v180;
            v15 = (uint64_t)v204;
            v165 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v218;
            if (!v148)
              return 0;
            goto LABEL_60;
          }
          sub_1BA4A2E80(v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BA502AD0((uint64_t)v211, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          v179 = v196;
LABEL_81:
          sub_1BA502AD0(v179, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
          v143 = v154;
          goto LABEL_82;
        }
        sub_1BA502AD0(v197, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA502AD0(v208, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
      }
      sub_1BA4A2E80(v154, (uint64_t (*)(_QWORD))sub_1BA91ACC0);
      return 0;
    }
    sub_1BA502AD0(v128, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    sub_1BA502AD0(v199, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v136 = v141;
LABEL_48:
    sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
    goto LABEL_49;
  }
  return result;
}

unint64_t sub_1BA918B88()
{
  unint64_t result;

  result = qword_1ED3A2B38;
  if (!qword_1ED3A2B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8849BC, &type metadata for FormatArticleThumbnail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B38);
  }
  return result;
}

void sub_1BA918BCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA918B88();
    v7 = a3(a1, &type metadata for FormatArticleThumbnail.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA918C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA918C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatArticleThumbnail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA918CC0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(qword_1ED3C9C98, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnail, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnail);
  a1[2] = sub_1BA4A2870(&qword_1ED3A6DA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnail, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnail);
  result = sub_1BA4A2870(&qword_1EF2AA7E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnail, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnail);
  a1[3] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatArticleThumbnail(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[9];
    v10 = a3[9];
    __dst = (char *)(a1 + v10);
    v11 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    v12 = type metadata accessor for FormatArticleThumbnailImage();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(__dst, v11, v17);
      *(_QWORD *)&__dst[*(int *)(v12 + 20)] = *(_QWORD *)&v11[*(int *)(v12 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = v13;
    v19 = a3[10];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (v14((char *)a2 + v19, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      *(_QWORD *)&v20[*(int *)(v12 + 20)] = *(_QWORD *)&v21[*(int *)(v12 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
    }
    v24 = a3[11];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    if (v14((char *)a2 + v24, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
      *(_QWORD *)&v25[*(int *)(v12 + 20)] = *(_QWORD *)&v26[*(int *)(v12 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
    }
    v29 = a3[12];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    if (v14((char *)a2 + v29, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      *(_QWORD *)&v30[*(int *)(v12 + 20)] = *(_QWORD *)&v31[*(int *)(v12 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v30, 0, 1, v12);
    }
    v34 = a3[13];
    v35 = (char *)v4 + v34;
    v36 = (char *)a2 + v34;
    if (v14(v36, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
      *(_QWORD *)&v35[*(int *)(v12 + 20)] = *(_QWORD *)&v36[*(int *)(v12 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v35, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for FormatArticleThumbnail(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[9];
  v5 = type metadata accessor for FormatArticleThumbnailImage();
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  }
  v8 = a1 + a2[10];
  if (!v6(v8, 1, v5))
  {
    v9 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[11];
  if (!v6(v10, 1, v5))
  {
    v11 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[12];
  if (!v6(v12, 1, v5))
  {
    v13 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + a2[13];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v14, 1, v5);
  if (!(_DWORD)result)
  {
    v16 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  return result;
}

uint64_t initializeWithCopy for FormatArticleThumbnail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = a3[9];
  __dst = (char *)(a1 + v9);
  v10 = (char *)(a2 + v9);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v11 = type metadata accessor for FormatArticleThumbnailImage();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(__dst, v10, v15);
    *(_QWORD *)&__dst[*(int *)(v11 + 20)] = *(_QWORD *)&v10[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v16 = v12;
  v17 = a3[10];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  if (v13((char *)(a2 + v17), 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    *(_QWORD *)&v18[*(int *)(v11 + 20)] = *(_QWORD *)&v19[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  }
  v22 = a3[11];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  if (v13((char *)(a2 + v22), 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
    *(_QWORD *)&v23[*(int *)(v11 + 20)] = *(_QWORD *)&v24[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
  }
  v27 = a3[12];
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  if (v13((char *)(a2 + v27), 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
    *(_QWORD *)&v28[*(int *)(v11 + 20)] = *(_QWORD *)&v29[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  v32 = a3[13];
  v33 = (char *)(a1 + v32);
  v34 = (char *)(a2 + v32);
  if (v13(v34, 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v36 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
    *(_QWORD *)&v33[*(int *)(v11 + 20)] = *(_QWORD *)&v34[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for FormatArticleThumbnail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[9];
  v8 = (char *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatArticleThumbnailImage();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (v14)
      goto LABEL_6;
    v16 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, v9, v16);
    *(_QWORD *)&v8[*(int *)(v10 + 20)] = *(_QWORD *)&v9[*(int *)(v10 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  else
  {
    if (v14)
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_6:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      goto LABEL_9;
    }
    v17 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v8, v9, v17);
    *(_QWORD *)&v8[*(int *)(v10 + 20)] = *(_QWORD *)&v9[*(int *)(v10 + 20)];
  }
LABEL_9:
  v18 = a3[10];
  v19 = (char *)(a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = v12((char *)(a1 + v18), 1, v10);
  v22 = v12(v20, 1, v10);
  if (v21)
  {
    if (v22)
      goto LABEL_14;
    v24 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    *(_QWORD *)&v19[*(int *)(v10 + 20)] = *(_QWORD *)&v20[*(int *)(v10 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  else
  {
    if (v22)
    {
      sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_14:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      goto LABEL_17;
    }
    v25 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v19, v20, v25);
    *(_QWORD *)&v19[*(int *)(v10 + 20)] = *(_QWORD *)&v20[*(int *)(v10 + 20)];
  }
LABEL_17:
  v26 = a3[11];
  v27 = (char *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = v12((char *)(a1 + v26), 1, v10);
  v30 = v12(v28, 1, v10);
  if (v29)
  {
    if (v30)
      goto LABEL_22;
    v32 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v27, v28, v32);
    *(_QWORD *)&v27[*(int *)(v10 + 20)] = *(_QWORD *)&v28[*(int *)(v10 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
  }
  else
  {
    if (v30)
    {
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_22:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      goto LABEL_25;
    }
    v33 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v27, v28, v33);
    *(_QWORD *)&v27[*(int *)(v10 + 20)] = *(_QWORD *)&v28[*(int *)(v10 + 20)];
  }
LABEL_25:
  v34 = a3[12];
  v35 = (char *)(a1 + v34);
  v36 = (char *)a2 + v34;
  v37 = v12((char *)(a1 + v34), 1, v10);
  v38 = v12(v36, 1, v10);
  if (v37)
  {
    if (v38)
      goto LABEL_30;
    v40 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v35, v36, v40);
    *(_QWORD *)&v35[*(int *)(v10 + 20)] = *(_QWORD *)&v36[*(int *)(v10 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  }
  else
  {
    if (v38)
    {
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_30:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      goto LABEL_33;
    }
    v41 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v35, v36, v41);
    *(_QWORD *)&v35[*(int *)(v10 + 20)] = *(_QWORD *)&v36[*(int *)(v10 + 20)];
  }
LABEL_33:
  v42 = a3[13];
  v43 = (char *)(a1 + v42);
  v44 = (char *)a2 + v42;
  v45 = v12((char *)(a1 + v42), 1, v10);
  v46 = v12(v44, 1, v10);
  if (v45)
  {
    if (!v46)
    {
      v48 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v43, v44, v48);
      *(_QWORD *)&v43[*(int *)(v10 + 20)] = *(_QWORD *)&v44[*(int *)(v10 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v43, 0, 1, v10);
      return a1;
    }
  }
  else
  {
    if (!v46)
    {
      v49 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v43, v44, v49);
      *(_QWORD *)&v43[*(int *)(v10 + 20)] = *(_QWORD *)&v44[*(int *)(v10 + 20)];
      return a1;
    }
    sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
  }
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  return a1;
}

uint64_t initializeWithTake for FormatArticleThumbnail(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v8 = a3[9];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v11 = type metadata accessor for FormatArticleThumbnailImage();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
    *(_QWORD *)&v9[*(int *)(v11 + 20)] = *(_QWORD *)&v10[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[10];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  if (v13((char *)(a2 + v16), 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    *(_QWORD *)&v17[*(int *)(v11 + 20)] = *(_QWORD *)&v18[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  v21 = a3[11];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  if (v13((char *)(a2 + v21), 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
    *(_QWORD *)&v22[*(int *)(v11 + 20)] = *(_QWORD *)&v23[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v26 = a3[12];
  v27 = (char *)(a1 + v26);
  v28 = (char *)(a2 + v26);
  if (v13((char *)(a2 + v26), 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
    *(_QWORD *)&v27[*(int *)(v11 + 20)] = *(_QWORD *)&v28[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
  }
  v31 = a3[13];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  if (v13(v33, 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
    *(_QWORD *)&v32[*(int *)(v11 + 20)] = *(_QWORD *)&v33[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for FormatArticleThumbnail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[9];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for FormatArticleThumbnailImage();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (v17)
      goto LABEL_6;
    v19 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v11, v12, v19);
    *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  else
  {
    if (v17)
    {
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_6:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      goto LABEL_9;
    }
    v20 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v11, v12, v20);
    *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
  }
LABEL_9:
  v21 = a3[10];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = v15((char *)(a1 + v21), 1, v13);
  v25 = v15(v23, 1, v13);
  if (v24)
  {
    if (v25)
      goto LABEL_14;
    v27 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v22, v23, v27);
    *(_QWORD *)&v22[*(int *)(v13 + 20)] = *(_QWORD *)&v23[*(int *)(v13 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
  }
  else
  {
    if (v25)
    {
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_14:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      goto LABEL_17;
    }
    v28 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v22, v23, v28);
    *(_QWORD *)&v22[*(int *)(v13 + 20)] = *(_QWORD *)&v23[*(int *)(v13 + 20)];
  }
LABEL_17:
  v29 = a3[11];
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  v32 = v15((char *)(a1 + v29), 1, v13);
  v33 = v15(v31, 1, v13);
  if (v32)
  {
    if (v33)
      goto LABEL_22;
    v35 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v30, v31, v35);
    *(_QWORD *)&v30[*(int *)(v13 + 20)] = *(_QWORD *)&v31[*(int *)(v13 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  }
  else
  {
    if (v33)
    {
      sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_22:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      goto LABEL_25;
    }
    v36 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v30, v31, v36);
    *(_QWORD *)&v30[*(int *)(v13 + 20)] = *(_QWORD *)&v31[*(int *)(v13 + 20)];
  }
LABEL_25:
  v37 = a3[12];
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  v40 = v15((char *)(a1 + v37), 1, v13);
  v41 = v15(v39, 1, v13);
  if (v40)
  {
    if (v41)
      goto LABEL_30;
    v43 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v38, v39, v43);
    *(_QWORD *)&v38[*(int *)(v13 + 20)] = *(_QWORD *)&v39[*(int *)(v13 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
  }
  else
  {
    if (v41)
    {
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_30:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_33;
    }
    v44 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v38, v39, v44);
    *(_QWORD *)&v38[*(int *)(v13 + 20)] = *(_QWORD *)&v39[*(int *)(v13 + 20)];
  }
LABEL_33:
  v45 = a3[13];
  v46 = (char *)(a1 + v45);
  v47 = (char *)(a2 + v45);
  v48 = v15((char *)(a1 + v45), 1, v13);
  v49 = v15(v47, 1, v13);
  if (v48)
  {
    if (!v49)
    {
      v51 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v46, v47, v51);
      *(_QWORD *)&v46[*(int *)(v13 + 20)] = *(_QWORD *)&v47[*(int *)(v13 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v46, 0, 1, v13);
      return a1;
    }
  }
  else
  {
    if (!v49)
    {
      v52 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v46, v47, v52);
      *(_QWORD *)&v46[*(int *)(v13 + 20)] = *(_QWORD *)&v47[*(int *)(v13 + 20)];
      return a1;
    }
    sub_1BA4A2E80((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
  }
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  return a1;
}

uint64_t sub_1BA91A578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t sub_1BA91A610(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatArticleThumbnail.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BA91A6E0 + 4 * byte_1BB8847CF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BA91A714 + 4 * byte_1BB8847CA[v4]))();
}

uint64_t sub_1BA91A714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA91A71C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA91A724);
  return result;
}

uint64_t sub_1BA91A730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA91A738);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BA91A73C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA91A744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatArticleThumbnail.CodingKeys()
{
  return &type metadata for FormatArticleThumbnail.CodingKeys;
}

unint64_t sub_1BA91A764()
{
  unint64_t result;

  result = qword_1EF2AA7F0;
  if (!qword_1EF2AA7F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884994, &type metadata for FormatArticleThumbnail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA7F0);
  }
  return result;
}

unint64_t sub_1BA91A7AC()
{
  unint64_t result;

  result = qword_1ED3A2B48;
  if (!qword_1ED3A2B48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884904, &type metadata for FormatArticleThumbnail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B48);
  }
  return result;
}

unint64_t sub_1BA91A7F4()
{
  unint64_t result;

  result = qword_1ED3A2B40;
  if (!qword_1ED3A2B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88492C, &type metadata for FormatArticleThumbnail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B40);
  }
  return result;
}

uint64_t sub_1BA91A838(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6172466C61636F66 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x437972616D697270 && a2 == 0xEC000000726F6C6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C617551776F6CLL && a2 == 0xEF6567616D497974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB963030 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB963050 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB963070 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB963090)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

void sub_1BA91ACC0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AA7F8)
  {
    sub_1BA4A3FB4(255, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AA7F8);
  }
}

unint64_t sub_1BA91AD30()
{
  unint64_t result;

  result = qword_1ED3A2FF8;
  if (!qword_1ED3A2FF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3A2FF8);
  }
  return result;
}

uint64_t static FormatServiceCachePolicy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

uint64_t sub_1BA91ADC0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

ValueMetadata *type metadata accessor for FormatServiceCachePolicy()
{
  return &type metadata for FormatServiceCachePolicy;
}

uint64_t SVImageLayer.loadImage(from:with:queue:completion:)(_QWORD *a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = a2[3];
  v11 = a2[4];
  v12 = __swift_project_boxed_opaque_existential_1(a2, v10);
  return sub_1BA91B208(a1, (uint64_t)v12, a3, a4, a5, v5, v10, v11);
}

uint64_t sub_1BA91AE94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  _QWORD v23[3];
  _QWORD aBlock[6];
  __int128 v25[2];

  v23[1] = a3;
  v12 = sub_1BB872610();
  v23[0] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB872664();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C010C(a5, (uint64_t)v25);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  sub_1BA4CECCC(v25, (uint64_t)(v19 + 3));
  v19[8] = a6;
  v19[9] = a7;
  v19[10] = a1;
  aBlock[4] = sub_1BA91B3BC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_3;
  v20 = _Block_copy(aBlock);
  v21 = a1;
  swift_retain();
  swift_retain();
  sub_1BB872634();
  v23[2] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v18, v14, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v23[0] + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return swift_release();
}

void sub_1BA91B0BC(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v8 = a1 + 16;
  swift_beginAccess();
  v9 = (void *)MEMORY[0x1BCCE5D40](v8);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_identifier);
    if (v11)
    {
      v12 = v11;
      v13 = sub_1BB8729A0();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v16 = sub_1BB870B40();
    if (!v15)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v13 == v16 && v15 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
LABEL_12:

        return;
      }
    }
    a3(a5);
    goto LABEL_12;
  }
}

uint64_t sub_1BA91B208(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_0;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  __int128 v21[2];
  uint64_t v22[5];

  v22[3] = a7;
  v22[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_0, a2, a7);
  sub_1BB870B40();
  v16 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_setIdentifier_, v16);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA4C010C((uint64_t)v22, (uint64_t)v21);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = v17;
  sub_1BA4CECCC(v21, (uint64_t)(v18 + 4));
  v18[9] = a4;
  v18[10] = a5;
  v19 = a3;
  swift_retain();
  swift_retain();
  sub_1BB86F8EC();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_1BA91B380()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

void sub_1BA91B3BC()
{
  uint64_t v0;

  sub_1BA91B0BC(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1BA91B3D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA91B3F4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA91B430(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BA91AE94(a1, a2, v2[2], v2[3], (uint64_t)(v2 + 4), v2[9], v2[10]);
}

unint64_t FeedPoolCachePolicy.cachePolicy.getter()
{
  _BYTE *v0;
  unint64_t result;
  id v2;

  result = *v0;
  if (*v0)
  {
    if ((_DWORD)result == 1)
      v2 = objc_msgSend((id)objc_opt_self(), sel_cachedOnlyCachePolicy);
    else
      v2 = objc_msgSend((id)objc_opt_self(), sel_cachePolicyWithSoftMaxAge_, 604800.0);
    return (unint64_t)v2;
  }
  return result;
}

uint64_t FeedPoolCachePolicy.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E4F646568636163;
  if (*v0 != 1)
    v1 = 0x6143726566657270;
  if (*v0)
    return v1;
  else
    return 0x746C7561666564;
}

uint64_t sub_1BA91B50C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB805DF0(*a1, *a2);
}

void sub_1BA91B518(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEA0000000000796CLL;
  v5 = 0x6E4F646568636163;
  if (v2 != 1)
  {
    v5 = 0x6143726566657270;
    v4 = 0xEC00000064656863;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746C7561666564;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA91B584()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA91B630()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA91B6B8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA91B760()
{
  sub_1BA83AF8C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA91B7AC()
{
  return sub_1BA91B7E8();
}

uint64_t FeedPoolServiceType.fetchPool(with:cachePolicy:)()
{
  return sub_1BA91B7E8();
}

uint64_t sub_1BA91B7D0()
{
  return sub_1BA91B8D8();
}

uint64_t FeedPoolServiceType.expandPool(cursor:)()
{
  return sub_1BA91B8D8();
}

uint64_t sub_1BA91B7E8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1BB86EAAC();
  v3 = type metadata accessor for FeedServiceError(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v3);
  swift_allocError();
  *(_QWORD *)v4 = 7;
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 6;
  return sub_1BB86E9BC();
}

uint64_t sub_1BA91B8D8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1BB86EAAC();
  v3 = type metadata accessor for FeedServiceError(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v3);
  swift_allocError();
  *(_QWORD *)v4 = 7;
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 6;
  return sub_1BB86E9BC();
}

unint64_t sub_1BA91B9C8()
{
  unint64_t result;

  result = qword_1EF2AA800;
  if (!qword_1EF2AA800)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPoolCachePolicy, &type metadata for FeedPoolCachePolicy);
    atomic_store(result, (unint64_t *)&qword_1EF2AA800);
  }
  return result;
}

uint64_t dispatch thunk of FeedPoolServiceType.logChannel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedPoolServiceType.fetchPool(with:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FeedPoolServiceType.fetchPool(with:feedContext:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FeedPoolServiceType.expandPool(cursor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

ValueMetadata *type metadata accessor for A18_V8()
{
  return &type metadata for A18_V8;
}

uint64_t sub_1BA91BA3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AA940, (uint64_t (*)(void))sub_1BA91ECC4, (uint64_t)&type metadata for A18_V8.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA91ECC4();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA91BBF0()
{
  sub_1BA91ECC4();
  return sub_1BB874710();
}

uint64_t sub_1BA91BC18()
{
  sub_1BA91ECC4();
  return sub_1BB87471C();
}

double sub_1BA91BC40@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA91E848(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA91BC84(_QWORD *a1)
{
  return sub_1BA91BA3C(a1);
}

uint64_t sub_1BA91BC98()
{
  sub_1BA91E694();
  return sub_1BB86D96C();
}

uint64_t sub_1BA91BD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A18_V8;
  v20 = sub_1BA8EE1A4();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A18_V8;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E724F448, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E724F470, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A18_V8.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2AA818, (uint64_t (*)(uint64_t))type metadata accessor for A18_V8.Bound, (uint64_t)&unk_1BB884C90);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BA91C334@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char *v41;
  _BYTE *v42;
  _QWORD v43[6];
  char v44[105];
  __int128 v45[9];
  __int128 v46[2];
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v42 = a1;
  v3 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v6 = type metadata accessor for A18_V8.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(v7 + *(int *)(v8 + 40));
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(int *)(v8 + 32);
  *(_QWORD *)&v40 = v7;
  v12 = *(double *)(v7 + v11);
  sub_1BA4C010C(v10 + 16, (uint64_t)&v47);
  sub_1BA4C010C(v10 + 56, (uint64_t)v46);
  v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v47, v14 + 16);
  sub_1BA4CECCC(v46, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v45[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v45, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v9 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v46);
  sub_1BA4C010C(v15 + 56, (uint64_t)v45);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v46, v17 + 16);
  sub_1BA4CECCC(v45, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v44[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v44, (uint64_t *)&v47);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v47, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(_QWORD *)&v47 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v47;
  v43[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v21 + 16) < 4uLL)
  {
    __break(1u);
LABEL_9:
    swift_bridgeObjectRelease();
    v37 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    sub_1BA85CDD8(v21, v21 + ((v37 + 32) & ~v37), 1, 9uLL);
    goto LABEL_7;
  }
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  v23 = *(_QWORD *)(v22 + 16);
  swift_release();
  if (v23 != 3)
    goto LABEL_9;
  if (!swift_dynamicCastClass())
    swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  v24 = *MEMORY[0x1E0DB5D88];
  v25 = sub_1BB86D678();
  v26 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v41, v24, v25);
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v38 + 104))(v26, *MEMORY[0x1E0DB6200], v39);
  MEMORY[0x1E0C80A78](v27);
  sub_1BA91E738(0, &qword_1EF2AA8C0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v28 = sub_1BB86DB34();
  swift_release();
  v41 = (char *)v28;
  v29 = sub_1BB86DB40();
  v40 = v47;
  v30 = v48;
  v31 = v49;
  *(_QWORD *)&v47 = v21;
  *(_QWORD *)&v46[0] = v50;
  MEMORY[0x1E0C80A78](v29);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v32 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v47 = v32;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v33 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v42;
  *v42 = 0;
  result = *(double *)&v40;
  *(_OWORD *)(v34 + 8) = v40;
  *((_QWORD *)v34 + 3) = v30;
  *((_QWORD *)v34 + 4) = v31;
  v36 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v34 + 5) = v33;
  *((_QWORD *)v34 + 6) = v36;
  return result;
}

uint64_t sub_1BA91C8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2AA8D8, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 18;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BA91E738(0, &qword_1EF2AA8E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA91E6F8(&qword_1EF2AA8E8, &qword_1EF2AA8E0, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BA91CA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v13)(uint64_t, _QWORD *);
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a2;
  v22 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2AA8D8, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v21 - v7);
  v25 = a1;
  v9 = sub_1BB86D438();
  v10 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x1E0DB5A38], v9);
  *v8 = v10;
  v12 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v12(v8, *MEMORY[0x1E0DB6318], v5);
  v13 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA91E738(0, &qword_1EF2AA8F0, MEMORY[0x1E0DB5A10]);
  sub_1BA91E6F8(&qword_1EF2AA8F8, &qword_1EF2AA8F0, v13, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v14 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v25 = a1;
  v12(v8, *MEMORY[0x1E0DB63C0], v5);
  sub_1BA91E7B4();
  sub_1BA4CDF6C(0, &qword_1EF2AA908, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E0DB5C80], v16);
  v23 = v21;
  v24 = v22;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v8, v5);
}

uint64_t sub_1BA91CCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, _QWORD *);
  void (*v24)(uint64_t *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  uint64_t v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a1;
  v35 = a3;
  v32 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AA8D8, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v32 - v7);
  v39 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v33 = *(void (**)(uint64_t *))(v6 + 104);
  v11 = v10;
  v33(v8);
  sub_1BA91E7B4();
  sub_1BA4CDF6C(0, &qword_1EF2AA908, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
  v17 = v16 + v15;
  sub_1BA7FDE2C();
  v19 = (_QWORD *)(v17 + *(int *)(v18 + 48));
  v20 = *MEMORY[0x1E0DB6000];
  v21 = sub_1BB86D8B8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v17, v20, v21);
  *v19 = 0x6469737468676972;
  v19[1] = 0xE900000000000065;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0DB5BF8], v13);
  v22 = v32;
  v38 = v32;
  v23 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA91E738(0, &qword_1EF2AA8F0, MEMORY[0x1E0DB5A10]);
  sub_1BA91E6F8(&qword_1EF2AA8F8, &qword_1EF2AA8F0, v23, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v24 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v24(v8, v5);
  v25 = v34;
  v39 = v34;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 6;
  *v8 = v26;
  v27 = v11;
  v28 = v11;
  v29 = v33;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v33)(v8, v28, v5);
  v37 = v35;
  sub_1BB86D4BC();
  v24(v8, v5);
  v39 = v25;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = 6;
  *v8 = v30;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v29)(v8, v27, v5);
  v36 = v22;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v24)(v8, v5);
}

uint64_t sub_1BA91D020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  void *v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t (*v36)(uint64_t, _QWORD *);
  char *v37;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v50 = a2;
  v3 = sub_1BB86DA38();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA8D8, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - v17;
  v51 = a1;
  KeyPath = swift_getKeyPath();
  v19 = *MEMORY[0x1E0DB63C0];
  v48 = v18;
  v49 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v18, v19, v15);
  sub_1BA91E7B4();
  sub_1BA4CDF6C(0, &qword_1EF2AA908, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x1E0DB5C80], v21);
  if (!*(_QWORD *)(v50 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v40 = v15;
  sub_1BA4C2DD8(v50 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
  v25 = (char *)v9 + v7[5];
  v26 = *MEMORY[0x1E0DB61C8];
  v27 = sub_1BB86DA20();
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  v29 = (void **)MEMORY[0x1E0DC4918];
  *v9 = 1;
  *(_QWORD *)((char *)v9 + v7[6]) = 0;
  v30 = *v29;
  *(_QWORD *)((char *)v9 + v7[7]) = v30;
  v31 = qword_1ED3BC390;
  v32 = v30;
  if (v31 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  v33 = v44;
  sub_1BB86D2B8();
  v34 = swift_release();
  v35 = MEMORY[0x1E0C80A78](v34);
  *(&v40 - 4) = (uint64_t)v13;
  *(&v40 - 3) = (uint64_t)v9;
  v39 = (unint64_t)v33;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v41 + 104))(v45, *MEMORY[0x1E0DB6208], v42, v35);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
  v36 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA91E738(0, &qword_1EF2AA8F0, MEMORY[0x1E0DB5A10]);
  sub_1BA91E6F8(&qword_1EF2AA8F8, &qword_1EF2AA8F0, v36, MEMORY[0x1E0DB5A18]);
  v39 = sub_1BA595D14();
  v37 = v48;
  sub_1BB86D4C8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v37, v40);
}

void sub_1BA91D4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t (*v40)(uint64_t, _QWORD *);
  uint64_t v41;
  void (*v42)(uint64_t *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  _QWORD v66[2];
  char *v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  void *v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;

  v88 = a1;
  v3 = type metadata accessor for HeadlineViewLayout.Context(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v68 = (uint64_t)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA91EA5C();
  v81 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B57C0, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v66 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v66 - v16;
  v80 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v80);
  v79 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA8D8, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v87 = v19;
  v78 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v86 = (_QWORD *)((char *)v66 - v20);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v82 = v17;
    v83 = v14;
    v90 = v8;
    v76 = v4;
    v77 = v3;
    v22 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v75 = *(_QWORD *)(v4 + 72);
    v74 = v22 + v75 * (v21 - 1);
    v73 = *MEMORY[0x1E0DB6330];
    v72 = *MEMORY[0x1E0DB61C8];
    v71 = (void *)*MEMORY[0x1E0DC4918];
    v23 = *MEMORY[0x1E0DC49E8];
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v26 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v70 = *MEMORY[0x1E0DB5A38];
    v69 = *MEMORY[0x1E0DB6318];
    v66[1] = a2;
    swift_bridgeObjectRetain();
    v67 = v11;
    while (1)
    {
      v89 = v21;
      v91 = v88;
      swift_getKeyPath();
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = 0x4060E00000000000;
      v30 = v86;
      v31 = v87;
      *v86 = v29;
      v32 = v78;
      v85 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v78 + 104);
      v85(v30, v73, v31);
      v34 = v79;
      v33 = v80;
      v35 = &v79[*(int *)(v80 + 20)];
      v36 = sub_1BB86DA20();
      v37 = *(_QWORD *)(v36 - 8);
      (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v35, v72, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v36);
      *v34 = 0;
      *(_QWORD *)((char *)v34 + *(int *)(v33 + 24)) = 0;
      v38 = v71;
      *(_QWORD *)((char *)v34 + *(int *)(v33 + 28)) = v71;
      v39 = v38;
      _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v22, (uint64_t)v34, v23, v24, v25, v26);
      sub_1BA4A2E80((uint64_t)v34, type metadata accessor for HeadlineViewLayout.Options);
      v40 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA91E738(0, &qword_1EF2AA8F0, MEMORY[0x1E0DB5A10]);
      v41 = sub_1BA91E6F8(&qword_1EF2AA8F8, &qword_1EF2AA8F0, v40, MEMORY[0x1E0DB5A18]);
      sub_1BA595D14();
      v84 = v41;
      sub_1BB86D4C8();
      swift_release();
      swift_release();
      v42 = *(void (**)(uint64_t *, uint64_t))(v32 + 8);
      v42(v30, v31);
      v43 = v22;
      v44 = (uint64_t)v82;
      sub_1BA4C2DD8(v43, (uint64_t)v82, type metadata accessor for HeadlineViewLayout.Context);
      v45 = v76;
      v46 = v77;
      v47 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56);
      v47(v44, 0, 1, v77);
      v48 = (uint64_t)v83;
      sub_1BA4C2DD8(v74, (uint64_t)v83, type metadata accessor for HeadlineViewLayout.Context);
      v47(v48, 0, 1, v46);
      v49 = (uint64_t)v90;
      v50 = (uint64_t)&v90[*(int *)(v81 + 48)];
      sub_1BA91EAD4(v44, (uint64_t)v90);
      sub_1BA91EAD4(v48, v50);
      v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
      if (v51(v49, 1, v46) == 1)
      {
        sub_1BA91EB30(v48);
        sub_1BA91EB30(v44);
        if (v51(v50, 1, v46) != 1)
          goto LABEL_11;
      }
      else
      {
        v52 = v49;
        v53 = (uint64_t)v67;
        sub_1BA91EAD4(v52, (uint64_t)v67);
        if (v51(v50, 1, v46) == 1)
        {
          sub_1BA91EB30((uint64_t)v83);
          sub_1BA91EB30((uint64_t)v82);
          sub_1BA4A2E80(v53, type metadata accessor for HeadlineViewLayout.Context);
LABEL_11:
          sub_1BA4A2E80((uint64_t)v90, (uint64_t (*)(_QWORD))sub_1BA91EA5C);
          v27 = v89;
          v28 = v43;
LABEL_12:
          v91 = v88;
          v54 = sub_1BB86D438();
          v55 = swift_allocBox();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v56, v70, v54);
          v57 = v86;
          *v86 = v55;
          v58 = v87;
          v85(v57, v69, v87);
          sub_1BB86D4EC();
          v42(v57, v58);
          goto LABEL_5;
        }
        v59 = v50;
        v60 = v68;
        sub_1BA5193C4(v59, v68, type metadata accessor for HeadlineViewLayout.Context);
        v61 = *(int *)(v46 + 20);
        v62 = *(_QWORD *)(v53 + v61);
        v63 = *(_QWORD *)(v53 + v61 + 8);
        v64 = (_QWORD *)(v60 + v61);
        if (v62 != *v64 || v63 != v64[1])
        {
          v65 = sub_1BB874398();
          sub_1BA4A2E80(v68, type metadata accessor for HeadlineViewLayout.Context);
          sub_1BA91EB30((uint64_t)v83);
          sub_1BA91EB30((uint64_t)v82);
          sub_1BA4A2E80(v53, type metadata accessor for HeadlineViewLayout.Context);
          sub_1BA91EB30((uint64_t)v90);
          v27 = v89;
          v28 = v43;
          if ((v65 & 1) != 0)
            goto LABEL_5;
          goto LABEL_12;
        }
        sub_1BA4A2E80(v68, type metadata accessor for HeadlineViewLayout.Context);
        sub_1BA91EB30((uint64_t)v83);
        sub_1BA91EB30((uint64_t)v82);
        sub_1BA4A2E80(v53, type metadata accessor for HeadlineViewLayout.Context);
      }
      sub_1BA91EB30((uint64_t)v90);
      v27 = v89;
      v28 = v43;
LABEL_5:
      v22 = v28 + v75;
      v21 = v27 - 1;
      if (!v21)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1BA91DBD8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t (*v31)(uint64_t, _QWORD *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t (*v41)(uint64_t *, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  void (*v48)(uint64_t *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t *, _QWORD, uint64_t);
  uint64_t v53;
  uint64_t v54;
  int *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  _BYTE v60[12];
  unsigned int v61;
  void (*v62)(uint64_t, _QWORD, uint64_t);
  unsigned int v63;
  id v64;
  void (*v65)(uint64_t *, uint64_t);
  unint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t);
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  unsigned int v77;
  void (*v78)(_QWORD);
  uint64_t v79;
  uint64_t v80;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4CDF6C(0, &qword_1EF2AA8D8, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)&v60[-v10];
  v79 = a1;
  v80 = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  v13 = *(void (**)(_QWORD))(v9 + 104);
  v77 = *MEMORY[0x1E0DB6330];
  v78 = v13;
  result = ((uint64_t (*)(uint64_t *))v13)(v11);
  v76 = *(_QWORD *)(a2 + 16);
  if (v76 < 5)
  {
    __break(1u);
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  v16 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v75 = v16;
  v73 = v17;
  v18 = v16 + 4 * v17;
  v19 = v4[5];
  v70 = v9;
  v20 = (char *)v6 + v19;
  v21 = *MEMORY[0x1E0DB61C8];
  v22 = sub_1BB86DA20();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(char *, _QWORD, uint64_t))(v23 + 104);
  v74 = v21;
  v71 = v24;
  v24(v20, v21, v22);
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v69 = v22;
  v72 = v25;
  v25(v20, 0, 1, v22);
  v26 = (void *)*MEMORY[0x1E0DC4918];
  *v6 = 0;
  *(_QWORD *)((char *)v6 + v4[6]) = 0;
  v67 = v4;
  *(_QWORD *)((char *)v6 + v4[7]) = v26;
  v27 = *MEMORY[0x1E0DC49E8];
  v28 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
  v29 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
  v30 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  v64 = v26;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v18, (uint64_t)v6, v27, v28, v29, v30);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  v31 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA91E738(0, &qword_1EF2AA8F0, MEMORY[0x1E0DB5A10]);
  v33 = v32;
  v34 = sub_1BA91E6F8(&qword_1EF2AA8F8, &qword_1EF2AA8F0, v31, MEMORY[0x1E0DB5A18]);
  v66 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  v35 = *(void (**)(uint64_t *, uint64_t))(v70 + 8);
  v35(v11, v8);
  v36 = v79;
  v80 = v79;
  v37 = sub_1BB86D438();
  v38 = swift_allocBox();
  v39 = *(void (**)(_QWORD))(*(_QWORD *)(v37 - 8) + 104);
  v63 = *MEMORY[0x1E0DB5A38];
  v62 = (void (*)(uint64_t, _QWORD, uint64_t))v39;
  v39(v40);
  *v11 = v38;
  v61 = *MEMORY[0x1E0DB6318];
  v41 = (uint64_t (*)(uint64_t *, _QWORD, uint64_t))v78;
  v78(v11);
  v70 = v33;
  v68 = v34;
  sub_1BB86D4EC();
  v65 = v35;
  v35(v11, v8);
  v80 = v36;
  swift_getKeyPath();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = 0x4060E00000000000;
  *v11 = v42;
  result = v41(v11, v77, v8);
  if (v76 == 5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v43 = v75 + 5 * v73;
  v44 = v67;
  v45 = (char *)v6 + v67[5];
  v46 = v69;
  v71(v45, v74, v69);
  v72(v45, 0, 1, v46);
  *v6 = 0;
  *(_QWORD *)((char *)v6 + v44[6]) = 0;
  v47 = v64;
  *(_QWORD *)((char *)v6 + v44[7]) = v64;
  v64 = v47;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v43, (uint64_t)v6, v27, v28, v29, v30);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  v48 = v65;
  v65(v11, v8);
  v49 = v79;
  v80 = v79;
  v50 = swift_allocBox();
  v62(v51, v63, v37);
  *v11 = v50;
  v52 = (uint64_t (*)(uint64_t *, _QWORD, uint64_t))v78;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v78)(v11, v61, v8);
  sub_1BB86D4EC();
  v48(v11, v8);
  v80 = v49;
  swift_getKeyPath();
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = 0x4060E00000000000;
  *v11 = v53;
  result = v52(v11, v77, v8);
  if (v76 >= 7)
  {
    v54 = v75 + 6 * v73;
    v55 = v67;
    v56 = (char *)v6 + v67[5];
    v57 = v69;
    v71(v56, v74, v69);
    v72(v56, 0, 1, v57);
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v55[6]) = 0;
    v58 = v64;
    *(_QWORD *)((char *)v6 + v55[7]) = v64;
    v59 = v58;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v54, (uint64_t)v6, v27, v28, v29, v30);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return ((uint64_t (*)(uint64_t *, uint64_t))v65)(v11, v8);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA91E284@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V8.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BA91E364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA91BD00(a1, a2, a3);
}

uint64_t sub_1BA91E378()
{
  return sub_1BB690AE8();
}

unint64_t sub_1BA91E388(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA91E3B4();
  result = sub_1BA91E3F8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA91E3B4()
{
  unint64_t result;

  result = qword_1EF2AA808;
  if (!qword_1EF2AA808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884BDC, &type metadata for A18_V8);
    atomic_store(result, (unint64_t *)&qword_1EF2AA808);
  }
  return result;
}

unint64_t sub_1BA91E3F8()
{
  unint64_t result;

  result = qword_1EF2AA810;
  if (!qword_1EF2AA810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884C04, &type metadata for A18_V8);
    atomic_store(result, (unint64_t *)&qword_1EF2AA810);
  }
  return result;
}

uint64_t type metadata accessor for A18_V8.Bound()
{
  uint64_t result;

  result = qword_1EF2AA878;
  if (!qword_1EF2AA878)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA91E478()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA91E484(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BA91E500()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BA91E50C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA91E580()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA91E60C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AA8B8, (uint64_t (*)(uint64_t))type metadata accessor for A18_V8.Bound, (uint64_t)&unk_1BB884C68);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA91E648(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA91C8F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BA91E650()
{
  unint64_t result;

  result = qword_1EF2AA8C8;
  if (!qword_1EF2AA8C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884DC0, &type metadata for A18_V8.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2AA8C8);
  }
  return result;
}

unint64_t sub_1BA91E694()
{
  unint64_t result;

  result = qword_1EF2AA8D0;
  if (!qword_1EF2AA8D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884D90, &type metadata for A18_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA8D0);
  }
  return result;
}

uint64_t sub_1BA91E6D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BA91E284(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BA91E6E0()
{
  return swift_deallocObject();
}

uint64_t sub_1BA91E6F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA91CA50(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA91E6F8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA91E738(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA91E738(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V8.Layout;
    v8[1] = &type metadata for A18_V8.Layout.Attributes;
    v8[2] = sub_1BA91E650();
    v8[3] = sub_1BA91E694();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA91E7B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA900)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AA908, (uint64_t (*)(void))sub_1BA91E650, (uint64_t)&type metadata for A18_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA900);
  }
}

uint64_t sub_1BA91E828(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA91CCAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA91E830(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA91D020(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BA91E838(uint64_t a1)
{
  uint64_t v1;

  sub_1BA91D4BC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA91E840(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA91DBD8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA91E848@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AA930, (uint64_t (*)(void))sub_1BA91ECC4, (uint64_t)&type metadata for A18_V8.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA91ECC4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

void sub_1BA91EA5C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B57C8)
  {
    sub_1BA4B07F0(255, &qword_1ED3B57C0, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B57C8);
  }
}

uint64_t sub_1BA91EAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B57C0, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA91EB30(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3B57C0, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for A18_V8.Layout.Attributes()
{
  return &type metadata for A18_V8.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V8.Layout()
{
  return &type metadata for A18_V8.Layout;
}

unint64_t sub_1BA91EBA8()
{
  unint64_t result;

  result = qword_1EF2AA910;
  if (!qword_1EF2AA910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884D30, &type metadata for A18_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA910);
  }
  return result;
}

unint64_t sub_1BA91EBF0()
{
  unint64_t result;

  result = qword_1EF2AA918;
  if (!qword_1EF2AA918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884D08, &type metadata for A18_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA918);
  }
  return result;
}

unint64_t sub_1BA91EC38()
{
  unint64_t result;

  result = qword_1EF2AA920;
  if (!qword_1EF2AA920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884CE0, &type metadata for A18_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA920);
  }
  return result;
}

unint64_t sub_1BA91EC80()
{
  unint64_t result;

  result = qword_1EF2AA928;
  if (!qword_1EF2AA928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884D58, &type metadata for A18_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA928);
  }
  return result;
}

unint64_t sub_1BA91ECC4()
{
  unint64_t result;

  result = qword_1EF2AA938;
  if (!qword_1EF2AA938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884EB4, &type metadata for A18_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA938);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V8.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA91ED54 + 4 * byte_1BB884BCD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA91ED88 + 4 * asc_1BB884BC8[v4]))();
}

uint64_t sub_1BA91ED88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA91ED90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA91ED98);
  return result;
}

uint64_t sub_1BA91EDA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA91EDACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA91EDB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA91EDB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V8.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V8.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BA91EDD8()
{
  unint64_t result;

  result = qword_1EF2AA948;
  if (!qword_1EF2AA948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884E8C, &type metadata for A18_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA948);
  }
  return result;
}

unint64_t sub_1BA91EE20()
{
  unint64_t result;

  result = qword_1EF2AA950;
  if (!qword_1EF2AA950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884DFC, &type metadata for A18_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA950);
  }
  return result;
}

unint64_t sub_1BA91EE68()
{
  unint64_t result;

  result = qword_1EF2AA958;
  if (!qword_1EF2AA958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884E24, &type metadata for A18_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA958);
  }
  return result;
}

uint64_t static UIActivityType.report.getter()
{
  return sub_1BB872970();
}

BOOL static PageKind.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t PageKind.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PageKind.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

id sub_1BA91EF40()
{
  objc_class *v0;
  _BYTE *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for BridgedPageKind();
  v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___NAPageKind_kind] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EF2AA960 = (uint64_t)result;
  return result;
}

id static BridgedPageKind.anf.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A6C38, (id *)&qword_1EF2AA960);
}

id sub_1BA91EFCC()
{
  objc_class *v0;
  _BYTE *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for BridgedPageKind();
  v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___NAPageKind_kind] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EF2AA968 = (uint64_t)result;
  return result;
}

id static BridgedPageKind.pdf.getter()
{
  return sub_1BA4B72EC(qword_1EF2A6C40, (id *)&qword_1EF2AA968);
}

id sub_1BA91F05C(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t BridgedPageKind.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___NAPageKind_kind);
}

id BridgedPageKind.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedPageKind.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedPageKind.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BA91F158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3BBFC0, (uint64_t)&type metadata for PageKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3BC038, (uint64_t)&type metadata for PageKind, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC238 = result;
  return result;
}

uint64_t static Commands.Articles.next.getter()
{
  return sub_1BA499934(qword_1ED3BBAF0);
}

uint64_t sub_1BA91F250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3BBFC0, (uint64_t)&type metadata for PageKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3BC038, (uint64_t)&type metadata for PageKind, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC240 = result;
  return result;
}

uint64_t static Commands.Articles.previous.getter()
{
  return sub_1BA499934(&qword_1ED3BC248);
}

uint64_t sub_1BA91F348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4AD288(0, &qword_1ED3BBFE0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4AD288(0, &qword_1ED3BC058, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1EF2AA978 = result;
  return result;
}

uint64_t static Commands.Articles.close.getter()
{
  return sub_1BA499934(&qword_1EF2A6C50);
}

uint64_t FeedReadStoryCommandContext.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedReadStoryCommandContext.feedItemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedReadStoryCommandContext.init(headline:feedItemIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t ReportConcernCompleteContext.headline.getter()
{
  return swift_unknownObjectRetain();
}

void ReportConcernCompleteContext.concernType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t ReportConcernCompleteContext.subconcern.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReportConcernCompleteContext.init(headline:concernType:subconcern:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a2;
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = v5;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t static ContextMenuItem.readStory(headline:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v6 = qword_1ED3BC258;
  swift_unknownObjectRetain();
  if (v6 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  swift_retain();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A0 != -1)
    swift_once();
  v10 = (void *)qword_1EF2C4770;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v14[1] = a1;
  swift_allocObject();
  v11 = v10;
  v12 = sub_1BB86FB20();
  swift_unknownObjectRelease();
  return v12;
}

uint64_t static SwipeAction.removeFromHistory(headline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a3;
  v5 = sub_1BB86F628();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86F634();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BC228 != -1)
    swift_once();
  v23 = a1;
  v24 = a2;
  v12 = (void *)objc_opt_self();
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(v12, sel_systemRedColor);
  if (qword_1ED3AFB28 != -1)
    swift_once();
  v14 = (void *)qword_1ED3AF880;
  v15 = objc_msgSend(v12, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v14, v15);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6BB0], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v7, *MEMORY[0x1E0DB6BA0], v21);
  return sub_1BB86F640();
}

uint64_t static SharingActivity.report(headline:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  id v6;
  uint64_t v7;

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  if (!a1)
    return 0;
  v3 = qword_1ED3BB548;
  swift_unknownObjectRetain();
  if (v3 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED39ECB8 != -1)
    swift_once();
  v6 = (id)qword_1ED39ECB0;
  sub_1BB8703D8();
  swift_allocObject();
  v7 = sub_1BB86FC94();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE6report8headlineACSgSo19FCHeadlineProviding_pSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v23[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v23 - v12;
  if (!a1)
    return 0;
  v14 = objc_msgSend((id)swift_unknownObjectRetain(), sel_routeURL);
  if (v14)
  {
    v15 = v14;
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1)
    {
      swift_unknownObjectRelease();
      sub_1BA7F0A80((uint64_t)v13);
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
  }
  sub_1BA7F0A80((uint64_t)v13);
  if (qword_1ED3BB548 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  swift_retain();
  v19 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED39ECB8 != -1)
    swift_once();
  v20 = (void *)qword_1ED39ECB0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v23[1] = a1;
  sub_1BB86FB38();
  swift_allocObject();
  v21 = v20;
  v16 = sub_1BB86FB20();
  swift_unknownObjectRelease();
  return v16;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE17removeFromHistory8headlineACSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BC228 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB28 != -1)
    swift_once();
  v11 = (void *)qword_1ED3AF880;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8520], v4);
  v14[0] = a1;
  v14[1] = a2;
  sub_1BB86FB38();
  swift_allocObject();
  v12 = v11;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE04readG5Story7contextACSgAD0g4Readi7CommandC0V_tFZ_0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[4];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  if (qword_1ED3A4170 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A0 != -1)
    swift_once();
  v12 = (void *)qword_1EF2C4770;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  sub_1BB86FB38();
  swift_allocObject();
  v13 = v12;
  return sub_1BB86FB20();
}

unint64_t sub_1BA9202BC()
{
  unint64_t result;

  result = qword_1EF2AA990;
  if (!qword_1EF2AA990)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PageKind, &type metadata for PageKind);
    atomic_store(result, (unint64_t *)&qword_1EF2AA990);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PageKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA92034C + 4 * byte_1BB884F15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA920380 + 4 * byte_1BB884F10[v4]))();
}

uint64_t sub_1BA920380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA920388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA920390);
  return result;
}

uint64_t sub_1BA92039C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA9203A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA9203A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9203B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageKind()
{
  return &type metadata for PageKind;
}

uint64_t type metadata accessor for BridgedPageKind()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgedPageKind()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for Commands.Articles()
{
  return &type metadata for Commands.Articles;
}

_QWORD *assignWithCopy for FeedReadStoryCommandContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FeedReadStoryCommandContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for ReportConcernCompleteContext()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportConcernCompleteContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportConcernCompleteContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReportConcernCompleteContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA9205D4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1BA920BB0(0, &qword_1EF2AA9C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = v1[2];
  v17 = v1[3];
  v18 = v8;
  v9 = v1[4];
  v15 = v1[5];
  v16 = v9;
  v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA920AD4();
  sub_1BB8746C8();
  v24 = 0;
  v10 = v19;
  sub_1BB87417C();
  if (!v10)
  {
    v11 = v14;
    v23 = 1;
    sub_1BB87417C();
    v22 = 2;
    sub_1BB87411C();
    v20 = v11;
    v21 = 3;
    sub_1BA920B18();
    sub_1BA920C0C(&qword_1EF2AA9C8, (uint64_t (*)(void))sub_1BA920C70, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BA9207AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  sub_1BA920BB0(0, &qword_1ED3AB5D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA920AD4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v23 = v10;
  v28 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v24 = v14;
  v21 = v13;
  v27 = 2;
  swift_bridgeObjectRetain();
  v22 = 0;
  v20 = sub_1BB87402C();
  v16 = v15;
  sub_1BA920B18();
  v26 = 3;
  sub_1BA920C0C((unint64_t *)&unk_1ED3AB0A0, (uint64_t (*)(void))sub_1BA920B6C, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v25;
  swift_bridgeObjectRetain();
  v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v18;
  *(_BYTE *)(a2 + 56) = 6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA920AD4()
{
  unint64_t result;

  result = qword_1ED3AAAE0;
  if (!qword_1ED3AAAE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB885178, &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAE0);
  }
  return result;
}

void sub_1BA920B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB098)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB098);
  }
}

unint64_t sub_1BA920B6C()
{
  unint64_t result;

  result = qword_1ED3AAA20;
  if (!qword_1ED3AAA20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94C358, &type metadata for SportsDataVisualizationResponseURLDataSource);
    atomic_store(result, (unint64_t *)&qword_1ED3AAA20);
  }
  return result;
}

void sub_1BA920BB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA920AD4();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA920C0C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA920B18();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA920C70()
{
  unint64_t result;

  result = qword_1EF2AA9D0;
  if (!qword_1EF2AA9D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94C330, &type metadata for SportsDataVisualizationResponseURLDataSource);
    atomic_store(result, (unint64_t *)&qword_1EF2AA9D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseInjuryReportItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA920D00 + 4 * byte_1BB885025[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA920D34 + 4 * asc_1BB885020[v4]))();
}

uint64_t sub_1BA920D34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA920D3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA920D44);
  return result;
}

uint64_t sub_1BA920D50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA920D58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA920D5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA920D64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseInjuryReportItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys;
}

uint64_t initializeWithCopy for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseInjuryReportItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseInjuryReportItem()
{
  return &type metadata for SportsDataVisualizationResponseInjuryReportItem;
}

uint64_t sub_1BA920FAC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA920FE8 + 4 * byte_1BB88502A[*v0]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BA920FE8()
{
  return 0x6449746E657665;
}

uint64_t sub_1BA921000()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BA921020()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BA921044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA9211B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA921068()
{
  sub_1BA920AD4();
  return sub_1BB874710();
}

uint64_t sub_1BA921090()
{
  sub_1BA920AD4();
  return sub_1BB87471C();
}

uint64_t sub_1BA9210B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA9207AC(a1, a2);
}

uint64_t sub_1BA9210CC(_QWORD *a1)
{
  return sub_1BA9205D4(a1);
}

unint64_t sub_1BA9210E4()
{
  unint64_t result;

  result = qword_1EF2AA9D8;
  if (!qword_1EF2AA9D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB885150, &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA9D8);
  }
  return result;
}

unint64_t sub_1BA92112C()
{
  unint64_t result;

  result = qword_1ED3AAAF0;
  if (!qword_1ED3AAAF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8850C0, &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAF0);
  }
  return result;
}

unint64_t sub_1BA921174()
{
  unint64_t result;

  result = qword_1ED3AAAE8;
  if (!qword_1ED3AAAE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8850E8, &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAE8);
  }
  return result;
}

uint64_t sub_1BA9211B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void FormatParagraphStyle.alignment.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatParagraphStyle.firstLineHeadIndent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FormatParagraphStyle.headIndent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FormatParagraphStyle.tailIndent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void FormatParagraphStyle.lineBreakMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

void FormatParagraphStyle.lineBreakStrategy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 50);
}

uint64_t FormatParagraphStyle.maximumLineHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t FormatParagraphStyle.minimumLineHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t FormatParagraphStyle.lineSpacing.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t FormatParagraphStyle.paragraphSpacing.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t FormatParagraphStyle.paragraphSpacingBefore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t FormatParagraphStyle.lineHeightMultiple.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t FormatParagraphStyle.minimumLineHeightMultiple.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t FormatParagraphStyle.defaultTabInterval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

uint64_t FormatParagraphStyle.hyphenationFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t FormatParagraphStyle.allowsDefaultTighteningForTruncation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 193);
}

uint64_t FormatParagraphStyle.init(alignment:firstLineHeadIndent:headIndent:tailIndent:lineBreakMode:lineBreakStrategy:maximumLineHeight:minimumLineHeight:lineSpacing:paragraphSpacing:paragraphSpacingBefore:lineHeightMultiple:minimumLineHeightMultiple:defaultTabInterval:hyphenationFactor:allowsDefaultTighteningForTruncation:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,char a29)
{
  char v29;
  char v30;
  uint64_t result;

  v29 = *a8;
  v30 = *a10;
  *(_BYTE *)a9 = *a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3 & 1;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5 & 1;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7 & 1;
  *(_BYTE *)(a9 + 49) = v29;
  *(_BYTE *)(a9 + 50) = v30;
  *(_QWORD *)(a9 + 56) = a11;
  result = a12 & 1;
  *(_BYTE *)(a9 + 64) = a12 & 1;
  *(_QWORD *)(a9 + 72) = a13;
  *(_BYTE *)(a9 + 80) = a14 & 1;
  *(_QWORD *)(a9 + 88) = a15;
  *(_BYTE *)(a9 + 96) = a16 & 1;
  *(_QWORD *)(a9 + 104) = a17;
  *(_BYTE *)(a9 + 112) = a18 & 1;
  *(_QWORD *)(a9 + 120) = a19;
  *(_BYTE *)(a9 + 128) = a20 & 1;
  *(_QWORD *)(a9 + 136) = a21;
  *(_BYTE *)(a9 + 144) = a22 & 1;
  *(_QWORD *)(a9 + 152) = a23;
  *(_BYTE *)(a9 + 160) = a24 & 1;
  *(_QWORD *)(a9 + 168) = a25;
  *(_BYTE *)(a9 + 176) = a26 & 1;
  *(_QWORD *)(a9 + 184) = a27;
  *(_BYTE *)(a9 + 192) = a28 & 1;
  *(_BYTE *)(a9 + 193) = a29;
  return result;
}

uint64_t _s8NewsFeed20FormatParagraphStyleV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  int v4;
  double v5;
  double v6;
  double v7;
  unsigned __int8 v8;
  int v9;
  int v10;
  double v11;
  unsigned __int8 v12;
  double v13;
  unsigned __int8 v14;
  double v15;
  unsigned __int8 v16;
  double v17;
  unsigned __int8 v18;
  double v19;
  unsigned __int8 v20;
  double v21;
  unsigned __int8 v22;
  double v23;
  unsigned __int8 v24;
  double v25;
  unsigned __int8 v26;
  double v27;
  unsigned __int8 v28;
  int v29;
  int v30;
  double v31;
  int v32;
  double v33;
  double v34;
  int v35;
  int v36;
  double v37;
  int v38;
  double v39;
  int v40;
  double v41;
  int v42;
  double v43;
  int v44;
  double v45;
  int v46;
  double v47;
  int v48;
  double v49;
  int v50;
  double v51;
  int v52;
  double v53;
  int v54;
  int v55;
  unsigned __int8 v56;
  int v57;
  double v58;
  double v59;
  unsigned __int8 v60;
  int v61;
  int v62;
  unsigned __int8 v63;
  unsigned __int8 v64;
  int v65;
  double v66;
  char v67;
  char v68;
  char v69;
  char v70;
  int v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  int v81;
  int v82;
  unsigned __int8 v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  double v90;
  unsigned __int8 v91;
  double v92;
  unsigned __int8 v93;
  double v94;
  double v95;
  unsigned __int8 v96;
  double v97;
  int v98;
  uint64_t result;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  double v109;
  double v110;
  double v111;
  double v112;
  unsigned __int8 v113;
  double v114;
  int v115;
  double v116;
  unsigned __int8 v117;
  unsigned __int8 v118;
  int v119;
  int v120;
  int v121;
  unsigned __int8 v122;
  unsigned __int8 v123;
  double v124;
  double v125;
  double v126;
  int v127;
  int v128;
  int v129;
  double v130;
  double v131;
  double v132;
  int v133;
  int v134;
  int v135;
  double v136;
  double v137;
  double v138;
  int v139;
  int v140;
  int v141;
  unsigned __int8 v142;
  unsigned __int8 v143;
  unsigned __int8 v144;
  double v145;
  double v146;
  double v147;
  int v148;
  int v149;
  int v150;
  double v151;
  double v152;
  double v153;
  unsigned __int8 v154;
  unsigned __int8 v155;
  unsigned __int8 v156;
  double v157;
  double v158;
  double v159;
  int v160;
  int v161;
  int v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  int v169;
  int v170;
  int v171;
  double v172;
  double v173;
  double v174;
  unsigned __int8 v175;
  unsigned __int8 v176;
  unsigned __int8 v177;
  double v178;
  double v179;
  double v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  unsigned __int8 v186;
  unsigned __int8 v187;
  char v188;

  v4 = *(unsigned __int8 *)a1;
  v5 = a1[1];
  v6 = a1[3];
  v186 = *((_BYTE *)a1 + 32);
  v187 = *((_BYTE *)a1 + 16);
  v7 = a1[5];
  v8 = *((_BYTE *)a1 + 48);
  v9 = *((unsigned __int8 *)a1 + 49);
  v10 = *((unsigned __int8 *)a1 + 50);
  v11 = a1[7];
  v12 = *((_BYTE *)a1 + 64);
  v13 = a1[9];
  v14 = *((_BYTE *)a1 + 80);
  v15 = a1[11];
  v16 = *((_BYTE *)a1 + 96);
  v17 = a1[13];
  v18 = *((_BYTE *)a1 + 112);
  v19 = a1[15];
  v20 = *((_BYTE *)a1 + 128);
  v21 = a1[17];
  v22 = *((_BYTE *)a1 + 144);
  v23 = a1[19];
  v24 = *((_BYTE *)a1 + 160);
  v25 = a1[21];
  v26 = *((_BYTE *)a1 + 176);
  v27 = a1[23];
  v28 = *((_BYTE *)a1 + 192);
  v29 = *((unsigned __int8 *)a1 + 193);
  v30 = *(unsigned __int8 *)a2;
  v31 = a2[1];
  v32 = *((unsigned __int8 *)a2 + 16);
  v33 = a2[3];
  v185 = *((unsigned __int8 *)a2 + 32);
  v34 = a2[5];
  v184 = *((unsigned __int8 *)a2 + 48);
  v35 = *((unsigned __int8 *)a2 + 49);
  v36 = *((unsigned __int8 *)a2 + 50);
  v37 = a2[7];
  v38 = *((unsigned __int8 *)a2 + 64);
  v39 = a2[9];
  v40 = *((unsigned __int8 *)a2 + 80);
  v41 = a2[11];
  v42 = *((unsigned __int8 *)a2 + 96);
  v43 = a2[13];
  v44 = *((unsigned __int8 *)a2 + 112);
  v45 = a2[15];
  v46 = *((unsigned __int8 *)a2 + 128);
  v47 = a2[17];
  v48 = *((unsigned __int8 *)a2 + 144);
  v49 = a2[19];
  v50 = *((unsigned __int8 *)a2 + 160);
  v51 = a2[21];
  v52 = *((unsigned __int8 *)a2 + 176);
  v53 = a2[23];
  v54 = *((unsigned __int8 *)a2 + 192);
  v55 = *((unsigned __int8 *)a2 + 193);
  if (v4 == 5)
  {
    if (v30 != 5)
      return 0;
  }
  else
  {
    if (v30 == 5)
      return 0;
    v115 = *((unsigned __int8 *)a2 + 193);
    v56 = v28;
    v57 = v29;
    v110 = a2[23];
    v111 = v21;
    v114 = v19;
    v112 = a2[21];
    v116 = v17;
    v178 = a2[19];
    v172 = v15;
    v163 = v13;
    v166 = a2[17];
    v157 = a2[15];
    v151 = v11;
    v145 = a2[13];
    v136 = a2[11];
    v130 = a2[9];
    v124 = a2[7];
    v109 = v23;
    v58 = v25;
    v59 = v27;
    v120 = *((unsigned __int8 *)a2 + 50);
    v122 = v22;
    v60 = v20;
    v181 = *((unsigned __int8 *)a2 + 160);
    v175 = v18;
    v127 = *((unsigned __int8 *)a2 + 64);
    v169 = *((unsigned __int8 *)a2 + 144);
    v117 = v16;
    v160 = *((unsigned __int8 *)a2 + 128);
    v154 = v14;
    v148 = *((unsigned __int8 *)a2 + 112);
    v139 = *((unsigned __int8 *)a2 + 96);
    v142 = v12;
    v133 = *((unsigned __int8 *)a2 + 80);
    v61 = *((unsigned __int8 *)a2 + 192);
    v113 = v8;
    v62 = v10;
    v63 = v24;
    v64 = v26;
    v65 = v9;
    v66 = a2[5];
    sub_1BB7FC4B8(v4);
    v34 = v66;
    v9 = v65;
    v26 = v64;
    v24 = v63;
    v10 = v62;
    v8 = v113;
    v54 = v61;
    v40 = v133;
    v42 = v139;
    v12 = v142;
    v44 = v148;
    v14 = v154;
    v46 = v160;
    v16 = v117;
    v48 = v169;
    v38 = v127;
    v18 = v175;
    v50 = v181;
    v20 = v60;
    v36 = v120;
    v22 = v122;
    v27 = v59;
    v25 = v58;
    v23 = v109;
    v53 = v110;
    v37 = v124;
    v39 = v130;
    v41 = v136;
    v43 = v145;
    v11 = v151;
    v45 = v157;
    v13 = v163;
    v47 = v166;
    v15 = v172;
    v49 = v178;
    v17 = v116;
    v21 = v111;
    v51 = v112;
    v19 = v114;
    v29 = v57;
    v28 = v56;
    v55 = v115;
    if ((v67 & 1) == 0)
      return 0;
  }
  if ((v187 & 1) != 0)
  {
    if (!v32)
      return 0;
  }
  else
  {
    if (v5 == v31)
      v68 = v32;
    else
      v68 = 1;
    if ((v68 & 1) != 0)
      return 0;
  }
  if ((v186 & 1) != 0)
  {
    if (!v185)
      return 0;
  }
  else
  {
    v69 = v185;
    if (v6 != v33)
      v69 = 1;
    if ((v69 & 1) != 0)
      return 0;
  }
  if ((v8 & 1) != 0)
  {
    if (!v184)
      return 0;
  }
  else
  {
    v70 = v184;
    if (v7 != v34)
      v70 = 1;
    if ((v70 & 1) != 0)
      return 0;
  }
  if (v9 == 6)
  {
    if (v35 != 6)
      return 0;
  }
  else
  {
    if (v35 == 6)
      return 0;
    v71 = v29;
    v72 = v21;
    v73 = v53;
    v74 = v51;
    v75 = v17;
    v179 = v49;
    v173 = v15;
    v164 = v13;
    v167 = v47;
    v158 = v45;
    v152 = v11;
    v146 = v43;
    v137 = v41;
    v131 = v39;
    v125 = v37;
    v76 = v23;
    v77 = v25;
    v78 = v27;
    v121 = v36;
    v123 = v22;
    v79 = v20;
    v182 = v50;
    v128 = v38;
    v176 = v18;
    v170 = v48;
    v80 = v16;
    v161 = v46;
    v155 = v14;
    v149 = v44;
    v140 = v42;
    v143 = v12;
    v134 = v40;
    v81 = v54;
    v82 = v10;
    v83 = v26;
    sub_1BB7FC2B0(v9);
    v26 = v83;
    v10 = v82;
    v54 = v81;
    v40 = v134;
    v42 = v140;
    v12 = v143;
    v44 = v149;
    v14 = v155;
    v46 = v161;
    v16 = v80;
    v48 = v170;
    v18 = v176;
    v38 = v128;
    v50 = v182;
    v20 = v79;
    v36 = v121;
    v22 = v123;
    v27 = v78;
    v25 = v77;
    v23 = v76;
    v37 = v125;
    v39 = v131;
    v41 = v137;
    v43 = v146;
    v11 = v152;
    v45 = v158;
    v13 = v164;
    v47 = v167;
    v15 = v173;
    v49 = v179;
    v17 = v75;
    v51 = v74;
    v53 = v73;
    v21 = v72;
    v29 = v71;
    if ((v84 & 1) == 0)
      return 0;
  }
  if (v10 == 3)
  {
    if (v36 != 3)
      return 0;
LABEL_48:
    if ((v12 & 1) != 0)
    {
      if (!v38)
        return 0;
    }
    else
    {
      if (v11 == v37)
        v100 = v38;
      else
        v100 = 1;
      if ((v100 & 1) != 0)
        return 0;
    }
    if ((v14 & 1) != 0)
    {
      if (!v40)
        return 0;
    }
    else
    {
      if (v13 == v39)
        v101 = v40;
      else
        v101 = 1;
      if ((v101 & 1) != 0)
        return 0;
    }
    if ((v16 & 1) != 0)
    {
      if (!v42)
        return 0;
    }
    else
    {
      if (v15 == v41)
        v102 = v42;
      else
        v102 = 1;
      if ((v102 & 1) != 0)
        return 0;
    }
    if ((v18 & 1) != 0)
    {
      if (!v44)
        return 0;
    }
    else
    {
      if (v17 == v43)
        v103 = v44;
      else
        v103 = 1;
      if ((v103 & 1) != 0)
        return 0;
    }
    if ((v20 & 1) != 0)
    {
      if (!v46)
        return 0;
    }
    else
    {
      if (v19 == v45)
        v104 = v46;
      else
        v104 = 1;
      if ((v104 & 1) != 0)
        return 0;
    }
    if ((v22 & 1) != 0)
    {
      if (!v48)
        return 0;
    }
    else
    {
      if (v21 == v47)
        v105 = v48;
      else
        v105 = 1;
      if ((v105 & 1) != 0)
        return 0;
    }
    if ((v24 & 1) != 0)
    {
      if (!v50)
        return 0;
    }
    else
    {
      if (v23 == v49)
        v106 = v50;
      else
        v106 = 1;
      if ((v106 & 1) != 0)
        return 0;
    }
    if ((v26 & 1) != 0)
    {
      if (!v52)
        return 0;
    }
    else
    {
      if (v25 == v51)
        v107 = v52;
      else
        v107 = 1;
      if ((v107 & 1) != 0)
        return 0;
    }
    if ((v28 & 1) != 0)
    {
      if (!v54)
        return 0;
    }
    else
    {
      if (v27 == v53)
        v108 = v54;
      else
        v108 = 1;
      if ((v108 & 1) != 0)
        return 0;
    }
    if (v29 == 2)
    {
      if (v55 != 2)
        return 0;
    }
    else if (v55 == 2 || ((((v29 & 1) == 0) ^ v55) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (v36 != 3)
  {
    v119 = v52;
    v85 = 0x80000001BB95DBC0;
    v86 = 0xD000000000000012;
    v87 = v54;
    if (v10)
    {
      if (v10 == 1)
      {
        v88 = 0xE700000000000000;
        v89 = 0x74754F68737570;
      }
      else
      {
        v88 = 0xE800000000000000;
        v89 = 0x647261646E617473;
      }
    }
    else
    {
      v89 = 0xD000000000000012;
      v88 = 0x80000001BB95DBC0;
    }
    v183 = v50;
    v180 = v49;
    v177 = v18;
    v174 = v15;
    v171 = v48;
    v165 = v13;
    v168 = v47;
    v118 = v16;
    v162 = v46;
    v159 = v45;
    v156 = v14;
    v153 = v11;
    v150 = v44;
    v147 = v43;
    v141 = v42;
    v144 = v12;
    v138 = v41;
    v135 = v40;
    v132 = v39;
    v129 = v38;
    v126 = v37;
    v90 = v17;
    v91 = v20;
    v92 = v51;
    if (v36)
    {
      if (v36 == 1)
      {
        v93 = v22;
        v94 = v53;
        v95 = v21;
        v85 = 0xE700000000000000;
        v86 = 0x74754F68737570;
      }
      else
      {
        v93 = v22;
        v94 = v53;
        v95 = v21;
        v85 = 0xE800000000000000;
        v86 = 0x647261646E617473;
      }
    }
    else
    {
      v93 = v22;
      v94 = v53;
      v95 = v21;
    }
    v96 = v26;
    v97 = v27;
    v98 = v29;
    if (v89 == v86 && v88 == v85)
    {
      swift_bridgeObjectRelease_n();
      v29 = v98;
      v27 = v97;
      v26 = v96;
      v21 = v95;
      v54 = v87;
      v53 = v94;
      v22 = v93;
      v16 = v118;
      v52 = v119;
      v51 = v92;
      v20 = v91;
      v17 = v90;
      v50 = v183;
      v49 = v180;
      v18 = v177;
      v15 = v174;
      v48 = v171;
      v13 = v165;
      v47 = v168;
      v46 = v162;
      v45 = v159;
      v14 = v156;
      v11 = v153;
      v44 = v150;
      v43 = v147;
      v42 = v141;
      v12 = v144;
      v41 = v138;
      v40 = v135;
      v39 = v132;
      v38 = v129;
      v37 = v126;
    }
    else
    {
      v188 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      v29 = v98;
      v27 = v97;
      v26 = v96;
      v21 = v95;
      v54 = v87;
      v53 = v94;
      v22 = v93;
      v16 = v118;
      v52 = v119;
      v51 = v92;
      v20 = v91;
      v17 = v90;
      v50 = v183;
      v49 = v180;
      v18 = v177;
      v15 = v174;
      v48 = v171;
      v13 = v165;
      v47 = v168;
      v46 = v162;
      v45 = v159;
      v14 = v156;
      v11 = v153;
      v44 = v150;
      v43 = v147;
      v42 = v141;
      v12 = v144;
      v41 = v138;
      v40 = v135;
      v39 = v132;
      v38 = v129;
      v37 = v126;
      if ((v188 & 1) == 0)
        return result;
    }
    goto LABEL_48;
  }
  return 0;
}

unint64_t sub_1BA921DE8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA921E0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA921E0C()
{
  unint64_t result;

  result = qword_1EF2AA9E0;
  if (!qword_1EF2AA9E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatParagraphStyle, &type metadata for FormatParagraphStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2AA9E0);
  }
  return result;
}

unint64_t sub_1BA921E50(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA69C1F8();
  a1[2] = sub_1BA686694();
  result = sub_1BA921E84();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA921E84()
{
  unint64_t result;

  result = qword_1EF2AA9E8;
  if (!qword_1EF2AA9E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatParagraphStyle, &type metadata for FormatParagraphStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2AA9E8);
  }
  return result;
}

__n128 __swift_memcpy194_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatParagraphStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 194))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 193);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for FormatParagraphStyle()
{
  return &type metadata for FormatParagraphStyle;
}

_QWORD *sub_1BA921F7C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned __int8 v9;
  uint64_t v10;
  void (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  _QWORD *v42;
  _BYTE v44[200];
  _BYTE v45[184];
  uint64_t v46;
  char v47;
  _BYTE v48[168];
  uint64_t v49;
  char v50;
  _BYTE v51[152];
  uint64_t v52;
  char v53;
  _BYTE v54[136];
  uint64_t v55;
  char v56;
  _BYTE v57[120];
  uint64_t v58;
  char v59;
  _BYTE v60[104];
  uint64_t v61;
  char v62;
  _BYTE v63[88];
  uint64_t v64;
  char v65;
  _BYTE v66[72];
  uint64_t v67;
  char v68;
  _BYTE v69[56];
  uint64_t v70;
  char v71;
  _BYTE v72[200];
  _BYTE v73[200];
  _BYTE v74[40];
  uint64_t v75;
  char v76;
  _BYTE v77[24];
  uint64_t v78;
  char v79;
  _BYTE v80[8];
  uint64_t v81;
  char v82;
  _OWORD v83[2];
  uint64_t v84;
  _BYTE v85[200];
  _BYTE v86[208];

  sub_1BA9227E4(a1, (uint64_t)v85);
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
  sub_1BA8C88C8(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB885330;
  v8 = (_QWORD *)(v7 + v6);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v86);
  if (sub_1BA92287C((uint64_t)v86) == 1)
    v9 = 5;
  else
    v9 = v86[0];
  sub_1BAAF868C(0x6E656D6E67696C41, 0xE900000000000074, v9, v8);
  v10 = type metadata accessor for FormatInspectionItem(0);
  v11 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v8, 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v80);
  v12 = sub_1BA92287C((uint64_t)v80);
  if (v12 == 1)
    v13 = 0;
  else
    v13 = v81;
  sub_1BAAF3A18(0xD000000000000016, 0x80000001BB963420, v13, (v12 == 1) | v82 & 1, (_QWORD *)((char *)v8 + v5));
  v11((_QWORD *)((char *)v8 + v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v77);
  v14 = sub_1BA92287C((uint64_t)v77);
  if (v14 == 1)
    v15 = 0;
  else
    v15 = v78;
  sub_1BAAF3A18(0x646E492064616548, 0xEB00000000746E65, v15, (v14 == 1) | v79 & 1, (_QWORD *)((char *)v8 + 2 * v5));
  v11((_QWORD *)((char *)v8 + 2 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v74);
  v16 = sub_1BA92287C((uint64_t)v74);
  if (v16 == 1)
    v17 = 0;
  else
    v17 = v75;
  sub_1BAAF3A18(0x646E49206C696154, 0xEB00000000746E65, v17, (v16 == 1) | v76 & 1, (_QWORD *)((char *)v8 + 3 * v5));
  v11((_QWORD *)((char *)v8 + 3 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v73);
  if (sub_1BA92287C((uint64_t)v73) == 1)
    v18 = 6;
  else
    v18 = v73[49];
  sub_1BAAF8928(0x65724220656E694CLL, 0xEF65646F4D206B61, v18, (_QWORD *)((char *)v8 + 4 * v5));
  v11((_QWORD *)((char *)v8 + 4 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v72);
  if (sub_1BA92287C((uint64_t)v72) == 1)
    v19 = 3;
  else
    v19 = v72[50];
  sub_1BAAF8BE8(0xD000000000000013, 0x80000001BB963440, v19, (_QWORD *)((char *)v8 + 5 * v5));
  v11((_QWORD *)((char *)v8 + 5 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v69);
  v20 = sub_1BA92287C((uint64_t)v69);
  if (v20 == 1)
    v21 = 0;
  else
    v21 = v70;
  sub_1BAAF3A18(0xD000000000000013, 0x80000001BB963460, v21, (v20 == 1) | v71 & 1, (_QWORD *)((char *)v8 + 6 * v5));
  v11((_QWORD *)((char *)v8 + 6 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v66);
  v22 = sub_1BA92287C((uint64_t)v66);
  if (v22 == 1)
    v23 = 0;
  else
    v23 = v67;
  v24 = v5;
  sub_1BAAF3A18(0xD000000000000013, 0x80000001BB963480, v23, (v22 == 1) | v68 & 1, (_QWORD *)((char *)v8 + 7 * v5));
  v11((_QWORD *)((char *)v8 + 7 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v63);
  v25 = sub_1BA92287C((uint64_t)v63);
  if (v25 == 1)
    v26 = 0;
  else
    v26 = v64;
  sub_1BAAF3A18(0x61705320656E694CLL, 0xEC000000676E6963, v26, (v25 == 1) | v65 & 1, &v8[v24]);
  v11(&v8[v24], 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v60);
  v27 = sub_1BA92287C((uint64_t)v60);
  if (v27 == 1)
    v28 = 0;
  else
    v28 = v61;
  sub_1BAAF3A18(0xD000000000000011, 0x80000001BB9634A0, v28, (v27 == 1) | v62 & 1, (_QWORD *)((char *)v8 + 9 * v5));
  v11((_QWORD *)((char *)v8 + 9 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v57);
  v29 = sub_1BA92287C((uint64_t)v57);
  if (v29 == 1)
    v30 = 0;
  else
    v30 = v58;
  sub_1BAAF3A18(0xD000000000000018, 0x80000001BB9634C0, v30, (v29 == 1) | v59 & 1, (_QWORD *)((char *)v8 + 10 * v5));
  v11((_QWORD *)((char *)v8 + 10 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v54);
  v31 = sub_1BA92287C((uint64_t)v54);
  if (v31 == 1)
    v32 = 0;
  else
    v32 = v55;
  sub_1BAAF3A18(0xD000000000000014, 0x80000001BB9634E0, v32, (v31 == 1) | v56 & 1, (_QWORD *)((char *)v8 + 11 * v5));
  v11((_QWORD *)((char *)v8 + 11 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v51);
  v33 = sub_1BA92287C((uint64_t)v51);
  if (v33 == 1)
    v34 = 0;
  else
    v34 = v52;
  sub_1BAAF3A18(0xD00000000000001CLL, 0x80000001BB963500, v34, (v33 == 1) | v53 & 1, (_QWORD *)((char *)v8 + 12 * v5));
  v11((_QWORD *)((char *)v8 + 12 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v48);
  v35 = sub_1BA92287C((uint64_t)v48);
  if (v35 == 1)
    v36 = 0;
  else
    v36 = v49;
  sub_1BAAF3A18(0xD000000000000014, 0x80000001BB963520, v36, (v35 == 1) | v50 & 1, (_QWORD *)((char *)v8 + 13 * v5));
  v11((_QWORD *)((char *)v8 + 13 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v45);
  v37 = sub_1BA92287C((uint64_t)v45);
  if (v37 == 1)
    v38 = 0;
  else
    v38 = v46;
  sub_1BAAF3A18(0xD000000000000012, 0x80000001BB963540, v38, (v37 == 1) | v47 & 1, (_QWORD *)((char *)v8 + 14 * v5));
  v11((_QWORD *)((char *)v8 + 14 * v5), 0, 1, v10);
  sub_1BA9227E4((uint64_t)v85, (uint64_t)v44);
  if (sub_1BA92287C((uint64_t)v44) == 1)
    v39 = 2;
  else
    v39 = v44[193];
  sub_1BAAF6B38(0xD000000000000028, 0x80000001BB963560, v39, (_QWORD *)((char *)v8 + 15 * v5));
  v11((_QWORD *)((char *)v8 + 15 * v5), 0, 1, v10);
  sub_1BAF89090(0x7061726761726150, 0xE900000000000068, 0, 0, v7, v83);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v2 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v2 + 64) = &off_1E72D2F60;
  v40 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = v40;
  v41 = v83[1];
  *(_OWORD *)(v40 + 16) = v83[0];
  *(_OWORD *)(v40 + 32) = v41;
  *(_QWORD *)(v40 + 48) = v84;
  v42 = sub_1BB6DF010(v2);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v42;
}

uint64_t sub_1BA9227E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA922828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA922828()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B6270)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B6270);
  }
}

uint64_t sub_1BA92287C(uint64_t a1)
{
  unsigned int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 193);
  if (v1 >= 2)
    v2 = ((v1 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v2 = -2;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1BA9228AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BA9228E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA923258(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1BA9229C0 + 4 * byte_1BB885340[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA9229C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  sub_1BA92329C(v1, (uint64_t)v0);
  v4 = (_QWORD *)((char *)v0 + *(int *)(v2 + 24));
  v5 = v4[4];
  v6 = v4[5];
  __swift_project_boxed_opaque_existential_1(v4 + 1, v5);
  v7 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) + 16);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)((char *)v0 + *(int *)(v2 + 28) + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v9 = *(_QWORD *)(sub_1BB052EE0(v8) + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v7 - v9;
  *(_QWORD *)(v3 - 80) = 0;
  *(_QWORD *)(v3 - 72) = 0xE000000000000000;
  sub_1BB873CB4();
  if (v7 == v9)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 - 80) = 0x74756F206469614CLL;
    *(_QWORD *)(v3 - 72) = 0xE900000000000020;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v11 = *(_QWORD *)(sub_1BB052EE0(v8) + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 - 88) = v11;
    sub_1BB87420C();
    sub_1BB872AFC(v12);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v13);
    v14 = v0[3];
    v15 = v0[4];
    __swift_project_boxed_opaque_existential_1(v0, v14);
    v16 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15) + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 - 88) = v16;
    sub_1BB87420C();
    sub_1BB872AFC(v17);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v18);
  }
  else
  {
    v19 = *(_QWORD **)(v3 - 80);
    v20 = *(_QWORD *)(v3 - 72);
    *(_QWORD *)(v3 - 80) = v19;
    *(_QWORD *)(v3 - 72) = v20;
    sub_1BB872AFC(v19);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v21 = *(_QWORD *)(sub_1BB052EE0(v8) + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 - 88) = v21;
    sub_1BB87420C();
    sub_1BB872AFC(v22);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v23);
    v24 = v0[3];
    v25 = v0[4];
    __swift_project_boxed_opaque_existential_1(v0, v24);
    v26 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25) + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 - 88) = v26;
    sub_1BB87420C();
    sub_1BB872AFC(v27);
    swift_bridgeObjectRelease();
    sub_1BB872AFC("Group layout was not bound");
    *(_QWORD *)(v3 - 88) = v10;
    sub_1BB87420C();
    sub_1BB872AFC(v28);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v29);
    sub_1BB872AFC((_QWORD *)0xE100000000000000);
    swift_bridgeObjectRelease();
  }
  v30 = *(_QWORD *)(v3 - 80);
  sub_1BA4A2E80((uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
  return v30;
}

void sub_1BA922EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA923258(v0, (uint64_t)&v6 - v4);
  v5 = (char *)sub_1BA922F84 + 4 * byte_1BB885344[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA922F84()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;

  sub_1BA923258(v1, v0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)())((char *)sub_1BA922FB8 + 4 * byte_1BB885348[EnumCaseMultiPayload]))();
}

uint64_t sub_1BA922FB8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA79E0D0(v1);
  sub_1BA4A2E80(v0, type metadata accessor for DebugFormatTestCaseResult.Result);
  return 4;
}

void sub_1BA9230D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA923258(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1BA923194 + 4 * byte_1BB88534C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA923194()
{
  uint64_t v0;

  sub_1BA79E0D0(v0);
  return 0;
}

uint64_t type metadata accessor for DebugFormatTestCaseResult.Result(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AAA60);
}

uint64_t sub_1BA923258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA92329C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatTestCaseLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA9232E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[280];

  v2 = v1;
  v4 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (id *)&v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA923258(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() - 2 >= 2)
  {
    sub_1BA92329C((uint64_t)v9, (uint64_t)v6);
    v11 = v6[3];
    v12 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v11);
    sub_1BA7C0D48(v11, v12);
    return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
  }
  else
  {

    memcpy(v14, v9, sizeof(v14));
    *a1 = v14[48];
    return sub_1BA79E0D0((uint64_t)v14);
  }
}

uint64_t sub_1BA923424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BA923488 + 4 * byte_1BB885350[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_1BA923EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v2 = type metadata accessor for DebugFormatTestCaseLayout();
      v3 = a1 + *(int *)(v2 + 20);
      v4 = sub_1BB86D7A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      v5 = type metadata accessor for GroupLayoutContext();
      v6 = v3 + *(int *)(v5 + 20);
      v7 = sub_1BB86D660();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = v3 + *(int *)(v5 + 24);
      if (*(_QWORD *)(v8 + 24) >= 2uLL)
        swift_bridgeObjectRelease();
      v9 = v8 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
      v10 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        v11 = sub_1BB8705C4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
      }
      swift_release();
      swift_release();
      v12 = a1 + *(int *)(v2 + 24);
      __swift_destroy_boxed_opaque_existential_1(v12 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v12 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
      v14 = sub_1BB86D8A0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 160);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a1 + 208);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      break;
    default:
      return;
  }
}

void sub_1BA9241AC()
{
  char *v0;

  v0 = (char *)sub_1BA924208 + 4 * byte_1BB885358[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA924208(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__dst, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  int *v75;

  v31 = *(_OWORD *)(v30 + 24);
  *(_OWORD *)(v29 + 24) = v31;
  (**(void (***)(uint64_t, uint64_t))(v31 - 8))(v29, v30);
  v75 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
  v32 = v75[5];
  v33 = v29 + v32;
  v34 = v30 + v32;
  v35 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  v36 = (int *)type metadata accessor for GroupLayoutContext();
  v37 = v36[5];
  v38 = v33 + v37;
  v39 = v34 + v37;
  v40 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = v36[6];
  v42 = v33 + v41;
  v43 = v34 + v41;
  *(_OWORD *)v42 = *(_OWORD *)(v34 + v41);
  *(_BYTE *)(v42 + 16) = *(_BYTE *)(v34 + v41 + 16);
  *(_WORD *)(v42 + 17) = *(_WORD *)(v34 + v41 + 17);
  *(_BYTE *)(v42 + 19) = *(_BYTE *)(v34 + v41 + 19);
  *(_DWORD *)(v42 + 20) = *(_DWORD *)(v34 + v41 + 20);
  v44 = *(_QWORD *)(v34 + v41 + 24);
  if (v44 >= 2)
    v44 = swift_bridgeObjectRetain();
  *(_QWORD *)(v42 + 24) = v44;
  v45 = type metadata accessor for FeedLayoutSolverOptions(0);
  v46 = *(int *)(v45 + 36);
  v73 = v45;
  v74 = (void *)(v42 + v46);
  v47 = (const void *)(v43 + v46);
  v48 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    sub_1BA914C98();
    memcpy(v74, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v74, v47, v51);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v74, 0, 1, v48);
  }
  *(_QWORD *)(v42 + *(int *)(v73 + 40)) = *(_QWORD *)(v43 + *(int *)(v73 + 40));
  *(_QWORD *)(v33 + v36[7]) = *(_QWORD *)(v34 + v36[7]);
  *(_QWORD *)(v33 + v36[8]) = *(_QWORD *)(v34 + v36[8]);
  *(_BYTE *)(v33 + v36[9]) = *(_BYTE *)(v34 + v36[9]);
  *(_QWORD *)(v33 + v36[10]) = *(_QWORD *)(v34 + v36[10]);
  *(_BYTE *)(v33 + v36[11]) = *(_BYTE *)(v34 + v36[11]);
  *(_QWORD *)(v33 + v36[12]) = *(_QWORD *)(v34 + v36[12]);
  v52 = v75[6];
  v53 = v29 + v52;
  v54 = v30 + v52;
  *(_BYTE *)v53 = *(_BYTE *)(v30 + v52);
  v55 = v29 + v52 + 8;
  v56 = v30 + v52 + 8;
  v57 = *(_OWORD *)(v30 + v52 + 32);
  *(_OWORD *)(v53 + 32) = v57;
  v58 = v57;
  v59 = **(void (***)(uint64_t, uint64_t, uint64_t))(v57 - 8);
  swift_retain();
  swift_retain();
  v59(v55, v56, v58);
  v60 = *(_QWORD *)(v54 + 56);
  *(_QWORD *)(v53 + 48) = *(_QWORD *)(v54 + 48);
  *(_QWORD *)(v53 + 56) = v60;
  v61 = *(_QWORD *)(v54 + 72);
  *(_QWORD *)(v53 + 64) = *(_QWORD *)(v54 + 64);
  *(_QWORD *)(v53 + 72) = v61;
  *(_QWORD *)(v53 + 80) = *(_QWORD *)(v54 + 80);
  *(_BYTE *)(v53 + 88) = *(_BYTE *)(v54 + 88);
  *(_QWORD *)(v53 + 96) = *(_QWORD *)(v54 + 96);
  v62 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v63 = v62[13];
  v71 = v54 + v63;
  v72 = v53 + v63;
  v64 = sub_1BB86D8A0();
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70(v72, v71, v64);
  *(_QWORD *)(v53 + v62[14]) = *(_QWORD *)(v54 + v62[14]);
  *(_QWORD *)(v53 + v62[15]) = *(_QWORD *)(v54 + v62[15]);
  *(_BYTE *)(v53 + v62[16]) = *(_BYTE *)(v54 + v62[16]);
  *(_QWORD *)(v53 + v62[17]) = *(_QWORD *)(v54 + v62[17]);
  *(_QWORD *)(v53 + v62[18]) = *(_QWORD *)(v54 + v62[18]);
  *(_QWORD *)(v53 + v62[19]) = *(_QWORD *)(v54 + v62[19]);
  v65 = v75[7];
  v66 = v29 + v65;
  v67 = v30 + v65;
  *(_BYTE *)v66 = *(_BYTE *)v67;
  *(_OWORD *)(v66 + 8) = *(_OWORD *)(v67 + 8);
  *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 24);
  v68 = *(_QWORD *)(v67 + 48);
  *(_QWORD *)(v66 + 40) = *(_QWORD *)(v67 + 40);
  *(_QWORD *)(v66 + 48) = v68;
  *(_QWORD *)(v29 + v75[8]) = *(_QWORD *)(v30 + v75[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v29;
}

uint64_t sub_1BA924734(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, type metadata accessor for DebugFormatTestCaseResult.Result);
    v2 = (char *)&loc_1BA9247A8 + 4 * byte_1BB88535C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *sub_1BA924D50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v49;
  int *v50;
  char *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v24 = a2[1];
    *a1 = *a2;
    a1[1] = v24;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    v25 = v50[5];
    v9 = (char *)a1 + v25;
    v10 = (char *)a2 + v25;
    v26 = sub_1BB86D7A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v9, v10, v26);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v27 = v12[5];
    v28 = &v9[v27];
    v29 = &v10[v27];
    v30 = sub_1BB86D660();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v31 = v12[6];
    v18 = &v9[v31];
    v19 = &v10[v31];
    *(_OWORD *)v18 = *(_OWORD *)&v10[v31];
    v18[16] = v10[v31 + 16];
    *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v31 + 17];
    v18[19] = v10[v31 + 19];
    *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v31 + 20];
    *((_QWORD *)v18 + 3) = *(_QWORD *)&v10[v31 + 24];
    v49 = type metadata accessor for FeedLayoutSolverOptions(0);
    v32 = *(int *)(v49 + 36);
    __dst = &v18[v32];
    v21 = &v19[v32];
    v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
LABEL_6:
      sub_1BA914C98();
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_9:
      *(_QWORD *)&v18[*(int *)(v49 + 40)] = *(_QWORD *)&v19[*(int *)(v49 + 40)];
      *(_QWORD *)&v9[v12[7]] = *(_QWORD *)&v10[v12[7]];
      *(_QWORD *)&v9[v12[8]] = *(_QWORD *)&v10[v12[8]];
      v9[v12[9]] = v10[v12[9]];
      *(_QWORD *)&v9[v12[10]] = *(_QWORD *)&v10[v12[10]];
      v9[v12[11]] = v10[v12[11]];
      *(_QWORD *)&v9[v12[12]] = *(_QWORD *)&v10[v12[12]];
      v35 = v50[6];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      *v36 = *((_BYTE *)a2 + v35);
      *(_OWORD *)(v36 + 8) = *(_OWORD *)((char *)a2 + v35 + 8);
      *(_OWORD *)(v36 + 24) = *(_OWORD *)((char *)a2 + v35 + 24);
      *((_QWORD *)v36 + 5) = *(_QWORD *)((char *)a2 + v35 + 40);
      v38 = *(_OWORD *)((char *)a2 + v35 + 64);
      *((_OWORD *)v36 + 3) = *(_OWORD *)((char *)a2 + v35 + 48);
      *((_OWORD *)v36 + 4) = v38;
      *((_QWORD *)v36 + 10) = *(_QWORD *)((char *)a2 + v35 + 80);
      v36[88] = *((_BYTE *)a2 + v35 + 88);
      *((_QWORD *)v36 + 12) = *(_QWORD *)((char *)a2 + v35 + 96);
      v39 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v40 = v39[13];
      v41 = &v36[v40];
      v42 = &v37[v40];
      v43 = sub_1BB86D8A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      *(_QWORD *)&v36[v39[14]] = *(_QWORD *)&v37[v39[14]];
      *(_QWORD *)&v36[v39[15]] = *(_QWORD *)&v37[v39[15]];
      v36[v39[16]] = v37[v39[16]];
      *(_QWORD *)&v36[v39[17]] = *(_QWORD *)&v37[v39[17]];
      *(_QWORD *)&v36[v39[18]] = *(_QWORD *)&v37[v39[18]];
      *(_QWORD *)&v36[v39[19]] = *(_QWORD *)&v37[v39[19]];
      v44 = v50[7];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
      *(_QWORD *)((char *)a1 + v50[8]) = *(_QWORD *)((char *)a2 + v50[8]);
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    v34 = sub_1BB8705C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(__dst, v21, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    v8 = v50[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86D7A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_1BB86D660();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    v17 = v12[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_OWORD *)v18 = *(_OWORD *)&v10[v17];
    v18[16] = v10[v17 + 16];
    *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v17 + 17];
    v18[19] = v10[v17 + 19];
    *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v17 + 20];
    *((_QWORD *)v18 + 3) = *(_QWORD *)&v10[v17 + 24];
    v49 = type metadata accessor for FeedLayoutSolverOptions(0);
    v20 = *(int *)(v49 + 36);
    __dst = &v18[v20];
    v21 = &v19[v20];
    v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      goto LABEL_6;
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1BA925358(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v49;
  int *v50;
  char *__dst;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for DebugFormatTestCaseResult.Result);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v25 = v50[5];
      v9 = (char *)a1 + v25;
      v10 = (char *)a2 + v25;
      v26 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v9, v10, v26);
      v12 = (int *)type metadata accessor for GroupLayoutContext();
      v27 = v12[5];
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      v31 = v12[6];
      v18 = &v9[v31];
      v19 = &v10[v31];
      *(_OWORD *)v18 = *(_OWORD *)&v10[v31];
      v18[16] = v10[v31 + 16];
      *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v31 + 17];
      v18[19] = v10[v31 + 19];
      *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v31 + 20];
      *((_QWORD *)v18 + 3) = *(_QWORD *)&v10[v31 + 24];
      v49 = type metadata accessor for FeedLayoutSolverOptions(0);
      v32 = *(int *)(v49 + 36);
      __dst = &v18[v32];
      v21 = &v19[v32];
      v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
LABEL_7:
        sub_1BA914C98();
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_10:
        *(_QWORD *)&v18[*(int *)(v49 + 40)] = *(_QWORD *)&v19[*(int *)(v49 + 40)];
        *(_QWORD *)&v9[v12[7]] = *(_QWORD *)&v10[v12[7]];
        *(_QWORD *)&v9[v12[8]] = *(_QWORD *)&v10[v12[8]];
        v9[v12[9]] = v10[v12[9]];
        *(_QWORD *)&v9[v12[10]] = *(_QWORD *)&v10[v12[10]];
        v9[v12[11]] = v10[v12[11]];
        *(_QWORD *)&v9[v12[12]] = *(_QWORD *)&v10[v12[12]];
        v35 = v50[6];
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        *v36 = *((_BYTE *)a2 + v35);
        *(_OWORD *)(v36 + 8) = *(_OWORD *)((char *)a2 + v35 + 8);
        *(_OWORD *)(v36 + 24) = *(_OWORD *)((char *)a2 + v35 + 24);
        *((_QWORD *)v36 + 5) = *(_QWORD *)((char *)a2 + v35 + 40);
        v38 = *(_OWORD *)((char *)a2 + v35 + 64);
        *((_OWORD *)v36 + 3) = *(_OWORD *)((char *)a2 + v35 + 48);
        *((_OWORD *)v36 + 4) = v38;
        *((_QWORD *)v36 + 10) = *(_QWORD *)((char *)a2 + v35 + 80);
        v36[88] = *((_BYTE *)a2 + v35 + 88);
        *((_QWORD *)v36 + 12) = *(_QWORD *)((char *)a2 + v35 + 96);
        v39 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v40 = v39[13];
        v41 = &v36[v40];
        v42 = &v37[v40];
        v43 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        *(_QWORD *)&v36[v39[14]] = *(_QWORD *)&v37[v39[14]];
        *(_QWORD *)&v36[v39[15]] = *(_QWORD *)&v37[v39[15]];
        v36[v39[16]] = v37[v39[16]];
        *(_QWORD *)&v36[v39[17]] = *(_QWORD *)&v37[v39[17]];
        *(_QWORD *)&v36[v39[18]] = *(_QWORD *)&v37[v39[18]];
        *(_QWORD *)&v36[v39[19]] = *(_QWORD *)&v37[v39[19]];
        v44 = v50[7];
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = *((_OWORD *)v46 + 1);
        *(_OWORD *)v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v47;
        *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
        *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
        *(_QWORD *)((char *)a1 + v50[8]) = *(_QWORD *)((char *)a2 + v50[8]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      v34 = sub_1BB8705C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(__dst, v21, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v8 = v50[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = (int *)type metadata accessor for GroupLayoutContext();
      v13 = v12[5];
      v14 = &v9[v13];
      v15 = &v10[v13];
      v16 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v17 = v12[6];
      v18 = &v9[v17];
      v19 = &v10[v17];
      *(_OWORD *)v18 = *(_OWORD *)&v10[v17];
      v18[16] = v10[v17 + 16];
      *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v17 + 17];
      v18[19] = v10[v17 + 19];
      *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v17 + 20];
      *((_QWORD *)v18 + 3) = *(_QWORD *)&v10[v17 + 24];
      v49 = type metadata accessor for FeedLayoutSolverOptions(0);
      v20 = *(int *)(v49 + 36);
      __dst = &v18[v20];
      v21 = &v19[v20];
      v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        goto LABEL_7;
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FormatURL(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BA925990()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatTestCaseLayout();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA925A00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 56) = a2[7];
    v9 = a2 + 8;
    v10 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 <= 2)
    {
      *(_OWORD *)(a1 + 64) = *v9;
    }
    else
    {
      *(_BYTE *)(a1 + 64) = *(_BYTE *)v9;
      *(_QWORD *)(a1 + 72) = v10;
      swift_bridgeObjectRetain();
    }
    v13 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v13;
    v14 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v14;
    v15 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v15;
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    v16 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v16;
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = (char *)&loc_1BA925BA0 + 4 * byte_1BB885360[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v11 = *a2;
  *(_QWORD *)a1 = *a2;
  v12 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v12;
}

void sub_1BA9262EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for DebugFormatTestCaseResult.Result(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(v4);
      v5 = type metadata accessor for DebugFormatTestCaseLayout();
      v6 = v4 + *(int *)(v5 + 20);
      v7 = sub_1BB86D7A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = type metadata accessor for GroupLayoutContext();
      v9 = v6 + *(int *)(v8 + 20);
      v10 = sub_1BB86D660();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      v11 = v6 + *(int *)(v8 + 24);
      if (*(_QWORD *)(v11 + 24) >= 2uLL)
        swift_bridgeObjectRelease();
      v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
      v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        v14 = sub_1BB8705C4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
      }
      swift_release();
      swift_release();
      v15 = v4 + *(int *)(v5 + 24);
      __swift_destroy_boxed_opaque_existential_1(v15 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v15 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
      v17 = sub_1BB86D8A0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v4 + 160);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v4 + 208);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      break;
    default:
      return;
  }
}

void sub_1BA926630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 <= 2)
  {
    *(_OWORD *)(a1 + 64) = *v7;
  }
  else
  {
    *(_BYTE *)(a1 + 64) = *(_BYTE *)v7;
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = a2;
  v11 = *(_QWORD *)(a2 + 96);
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v12;
  v13 = *(_QWORD *)(v10 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v10 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(v10 + 128);
  v14 = *(_QWORD *)(v10 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(v10 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  type metadata accessor for DebugFormatTestCaseResult.Result(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (char *)sub_1BA92679C + 4 * byte_1BB885368[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA92679C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__dst, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v34 = *(_OWORD *)(v33 + 24);
  *(_OWORD *)(v80 + 24) = v34;
  (**(void (***)(uint64_t, uint64_t))(v34 - 8))(v80, v33);
  v76 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
  v35 = v76[5];
  v36 = v80 + v35;
  v37 = v33 + v35;
  v38 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = (int *)type metadata accessor for GroupLayoutContext();
  v40 = v39[5];
  v41 = v36 + v40;
  v42 = v37 + v40;
  v43 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  v44 = v39[6];
  v45 = v36 + v44;
  v46 = v37 + v44;
  *(_OWORD *)v45 = *(_OWORD *)(v37 + v44);
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v37 + v44 + 16);
  *(_WORD *)(v45 + 17) = *(_WORD *)(v37 + v44 + 17);
  *(_BYTE *)(v45 + 19) = *(_BYTE *)(v37 + v44 + 19);
  *(_DWORD *)(v45 + 20) = *(_DWORD *)(v37 + v44 + 20);
  v47 = *(_QWORD *)(v37 + v44 + 24);
  if (v47 >= 2)
    v47 = swift_bridgeObjectRetain();
  *(_QWORD *)(v45 + 24) = v47;
  v48 = type metadata accessor for FeedLayoutSolverOptions(0);
  v49 = *(int *)(v48 + 36);
  v75 = (void *)(v45 + v49);
  v50 = (const void *)(v46 + v49);
  v51 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_1BA914C98();
    memcpy(v75, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v54 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v75, v50, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v75, 0, 1, v51);
  }
  *(_QWORD *)(v45 + *(int *)(v48 + 40)) = *(_QWORD *)(v46 + *(int *)(v48 + 40));
  *(_QWORD *)(v36 + v39[7]) = *(_QWORD *)(v37 + v39[7]);
  *(_QWORD *)(v36 + v39[8]) = *(_QWORD *)(v37 + v39[8]);
  *(_BYTE *)(v36 + v39[9]) = *(_BYTE *)(v37 + v39[9]);
  *(_QWORD *)(v36 + v39[10]) = *(_QWORD *)(v37 + v39[10]);
  *(_BYTE *)(v36 + v39[11]) = *(_BYTE *)(v37 + v39[11]);
  *(_QWORD *)(v36 + v39[12]) = *(_QWORD *)(v37 + v39[12]);
  v55 = v76[6];
  v56 = v80 + v55;
  v57 = v33 + v55;
  *(_BYTE *)v56 = *(_BYTE *)(v33 + v55);
  v58 = v33 + v55 + 8;
  v59 = *(_OWORD *)(v33 + v55 + 32);
  *(_OWORD *)(v56 + 32) = v59;
  v60 = v59;
  v61 = **(void (***)(uint64_t, uint64_t, uint64_t))(v59 - 8);
  swift_retain();
  swift_retain();
  v61(v56 + 8, v58, v60);
  v62 = *(_QWORD *)(v57 + 56);
  *(_QWORD *)(v56 + 48) = *(_QWORD *)(v57 + 48);
  *(_QWORD *)(v56 + 56) = v62;
  v63 = *(_QWORD *)(v57 + 72);
  *(_QWORD *)(v56 + 64) = *(_QWORD *)(v57 + 64);
  *(_QWORD *)(v56 + 72) = v63;
  *(_QWORD *)(v56 + 80) = *(_QWORD *)(v57 + 80);
  *(_BYTE *)(v56 + 88) = *(_BYTE *)(v57 + 88);
  *(_QWORD *)(v56 + 96) = *(_QWORD *)(v57 + 96);
  v64 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v65 = v64[13];
  v73 = v57 + v65;
  v74 = v56 + v65;
  v66 = sub_1BB86D8A0();
  v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v72(v74, v73, v66);
  *(_QWORD *)(v56 + v64[14]) = *(_QWORD *)(v57 + v64[14]);
  *(_QWORD *)(v56 + v64[15]) = *(_QWORD *)(v57 + v64[15]);
  *(_BYTE *)(v56 + v64[16]) = *(_BYTE *)(v57 + v64[16]);
  *(_QWORD *)(v56 + v64[17]) = *(_QWORD *)(v57 + v64[17]);
  *(_QWORD *)(v56 + v64[18]) = *(_QWORD *)(v57 + v64[18]);
  *(_QWORD *)(v56 + v64[19]) = *(_QWORD *)(v57 + v64[19]);
  v67 = v76[7];
  v68 = v80 + v67;
  v69 = v33 + v67;
  *(_BYTE *)v68 = *(_BYTE *)v69;
  *(_OWORD *)(v68 + 8) = *(_OWORD *)(v69 + 8);
  *(_OWORD *)(v68 + 24) = *(_OWORD *)(v69 + 24);
  v70 = *(_QWORD *)(v69 + 48);
  *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
  *(_QWORD *)(v68 + 48) = v70;
  *(_QWORD *)(v80 + v76[8]) = *(_QWORD *)(v33 + v76[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v77 + *(int *)(v79 + 28)) = *(_QWORD *)(v78 + *(int *)(v79 + 28));
  return v77;
}

uint64_t sub_1BA926D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  char *v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  if (v6 == 2)
  {
    if (v7 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v7 == 2)
  {
    sub_1BA92760C(a1 + 64);
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
  if (v6 < 2)
  {
    if (v7 >= 2)
    {
LABEL_8:
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v7 < 2)
  {
    sub_1BA4A2E80(a1 + 64, (uint64_t (*)(_QWORD))sub_1BA927570);
    goto LABEL_11;
  }
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1BA4A2E80(a1 + *(int *)(a3 + 24), type metadata accessor for DebugFormatTestCaseResult.Result);
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    v8 = (char *)&loc_1BA926F78 + 4 * byte_1BB88536C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void sub_1BA927570(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3C85C8)
  {
    v2 = sub_1BA9275C8();
    v4 = type metadata accessor for FormatSelectorValue(a1, (uint64_t)&type metadata for FormatGroupColumnSystemKind, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3C85C8);
  }
}

unint64_t sub_1BA9275C8()
{
  unint64_t result;

  result = qword_1ED3CC078;
  if (!qword_1ED3CC078)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3CC078);
  }
  return result;
}

uint64_t sub_1BA92760C(uint64_t a1)
{
  destroy for FeedItem.Kind(a1);
  return a1;
}

uint64_t sub_1BA927640(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v58;
  int *v59;
  char *__dst;
  _OWORD *v61;
  _OWORD *v62;
  uint64_t v63;

  v3 = a3;
  v6 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = a2[8];
  v7 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v7;
  v8 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v8;
  v10 = *a2;
  v9 = a2[1];
  *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (__int128 *)((char *)a2 + v11);
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v9;
  v14 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v63 = v3;
    v33 = v13[1];
    *v12 = *v13;
    v12[1] = v33;
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    v59 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    v34 = v59[5];
    v61 = v13;
    v62 = v12;
    v18 = (char *)v12 + v34;
    v19 = (char *)v13 + v34;
    v35 = sub_1BB86D7A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
    v21 = (int *)type metadata accessor for GroupLayoutContext();
    v36 = v21[5];
    v37 = &v18[v36];
    v38 = &v19[v36];
    v39 = sub_1BB86D660();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    v40 = v21[6];
    v27 = &v18[v40];
    v28 = &v19[v40];
    *(_OWORD *)v27 = *(_OWORD *)&v19[v40];
    v27[16] = v19[v40 + 16];
    *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v40 + 17];
    v27[19] = v19[v40 + 19];
    *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v40 + 20];
    *((_QWORD *)v27 + 3) = *(_QWORD *)&v19[v40 + 24];
    v58 = type metadata accessor for FeedLayoutSolverOptions(0);
    v41 = *(int *)(v58 + 36);
    __dst = &v27[v41];
    v30 = &v28[v41];
    v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
LABEL_6:
      sub_1BA914C98();
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_9:
      *(_QWORD *)&v27[*(int *)(v58 + 40)] = *(_QWORD *)&v28[*(int *)(v58 + 40)];
      *(_QWORD *)&v18[v21[7]] = *(_QWORD *)&v19[v21[7]];
      *(_QWORD *)&v18[v21[8]] = *(_QWORD *)&v19[v21[8]];
      v18[v21[9]] = v19[v21[9]];
      *(_QWORD *)&v18[v21[10]] = *(_QWORD *)&v19[v21[10]];
      v18[v21[11]] = v19[v21[11]];
      *(_QWORD *)&v18[v21[12]] = *(_QWORD *)&v19[v21[12]];
      v44 = v59[6];
      v45 = (char *)v62 + v44;
      v46 = (char *)v61 + v44;
      *v45 = *((_BYTE *)v61 + v44);
      *(_OWORD *)(v45 + 8) = *(_OWORD *)((char *)v61 + v44 + 8);
      *(_OWORD *)(v45 + 24) = *(_OWORD *)((char *)v61 + v44 + 24);
      *((_QWORD *)v45 + 5) = *(_QWORD *)((char *)v61 + v44 + 40);
      v47 = *(_OWORD *)((char *)v61 + v44 + 64);
      *((_OWORD *)v45 + 3) = *(_OWORD *)((char *)v61 + v44 + 48);
      *((_OWORD *)v45 + 4) = v47;
      *((_QWORD *)v45 + 10) = *(_QWORD *)((char *)v61 + v44 + 80);
      v45[88] = *((_BYTE *)v61 + v44 + 88);
      *((_QWORD *)v45 + 12) = *(_QWORD *)((char *)v61 + v44 + 96);
      v48 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v49 = v48[13];
      v50 = &v45[v49];
      v51 = &v46[v49];
      v52 = sub_1BB86D8A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      *(_QWORD *)&v45[v48[14]] = *(_QWORD *)&v46[v48[14]];
      *(_QWORD *)&v45[v48[15]] = *(_QWORD *)&v46[v48[15]];
      v45[v48[16]] = v46[v48[16]];
      *(_QWORD *)&v45[v48[17]] = *(_QWORD *)&v46[v48[17]];
      *(_QWORD *)&v45[v48[18]] = *(_QWORD *)&v46[v48[18]];
      *(_QWORD *)&v45[v48[19]] = *(_QWORD *)&v46[v48[19]];
      v53 = v59[7];
      v54 = (char *)v62 + v53;
      v55 = (char *)v61 + v53;
      v56 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v56;
      *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
      *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
      *(_QWORD *)((char *)v62 + v59[8]) = *(_QWORD *)((char *)v61 + v59[8]);
      swift_storeEnumTagMultiPayload();
      v3 = v63;
      goto LABEL_10;
    }
LABEL_8:
    v43 = sub_1BB8705C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(__dst, v30, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    v63 = v3;
    v16 = v13[1];
    *v12 = *v13;
    v12[1] = v16;
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    v59 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    v17 = v59[5];
    v61 = v13;
    v62 = v12;
    v18 = (char *)v12 + v17;
    v19 = (char *)v13 + v17;
    v20 = sub_1BB86D7A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = (int *)type metadata accessor for GroupLayoutContext();
    v22 = v21[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    v25 = sub_1BB86D660();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    v26 = v21[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    *(_OWORD *)v27 = *(_OWORD *)&v19[v26];
    v27[16] = v19[v26 + 16];
    *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v26 + 17];
    v27[19] = v19[v26 + 19];
    *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v26 + 20];
    *((_QWORD *)v27 + 3) = *(_QWORD *)&v19[v26 + 24];
    v58 = type metadata accessor for FeedLayoutSolverOptions(0);
    v29 = *(int *)(v58 + 36);
    __dst = &v27[v29];
    v30 = &v28[v29];
    v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      goto LABEL_6;
    goto LABEL_8;
  }
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_10:
  *(_QWORD *)(a1 + *(int *)(v3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v3 + 28));
  return a1;
}

uint64_t sub_1BA927CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v59;
  int *v60;
  char *__dst;
  _OWORD *v62;
  _OWORD *v63;
  uint64_t v64;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v9 = (_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a2 + 72);
  if (v10 == 2)
    goto LABEL_7;
  if (v11 == 2)
  {
    sub_1BA92760C(a1 + 64);
LABEL_7:
    *(_OWORD *)(a1 + 64) = *v9;
    goto LABEL_8;
  }
  if (v10 < 2)
    goto LABEL_7;
  if (v11 < 2)
  {
    sub_1BA4A2E80(a1 + 64, (uint64_t (*)(_QWORD))sub_1BA927570);
    goto LABEL_7;
  }
  *(_BYTE *)(a1 + 64) = *(_BYTE *)v9;
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (_OWORD *)(a1 + v12);
    v14 = (_OWORD *)(a2 + v12);
    sub_1BA4A2E80(a1 + v12, type metadata accessor for DebugFormatTestCaseResult.Result);
    v15 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v64 = a3;
      v34 = v14[1];
      *v13 = *v14;
      v13[1] = v34;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      v60 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v35 = v60[5];
      v62 = v14;
      v63 = v13;
      v19 = (char *)v13 + v35;
      v20 = (char *)v14 + v35;
      v36 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v19, v20, v36);
      v22 = (int *)type metadata accessor for GroupLayoutContext();
      v37 = v22[5];
      v38 = &v19[v37];
      v39 = &v20[v37];
      v40 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      v41 = v22[6];
      v28 = &v19[v41];
      v29 = &v20[v41];
      *(_OWORD *)v28 = *(_OWORD *)&v20[v41];
      v28[16] = v20[v41 + 16];
      *(_WORD *)(v28 + 17) = *(_WORD *)&v20[v41 + 17];
      v28[19] = v20[v41 + 19];
      *((_DWORD *)v28 + 5) = *(_DWORD *)&v20[v41 + 20];
      *((_QWORD *)v28 + 3) = *(_QWORD *)&v20[v41 + 24];
      v59 = type metadata accessor for FeedLayoutSolverOptions(0);
      v42 = *(int *)(v59 + 36);
      __dst = &v28[v42];
      v31 = &v29[v42];
      v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
LABEL_14:
        sub_1BA914C98();
        memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_17:
        *(_QWORD *)&v28[*(int *)(v59 + 40)] = *(_QWORD *)&v29[*(int *)(v59 + 40)];
        *(_QWORD *)&v19[v22[7]] = *(_QWORD *)&v20[v22[7]];
        *(_QWORD *)&v19[v22[8]] = *(_QWORD *)&v20[v22[8]];
        v19[v22[9]] = v20[v22[9]];
        *(_QWORD *)&v19[v22[10]] = *(_QWORD *)&v20[v22[10]];
        v19[v22[11]] = v20[v22[11]];
        *(_QWORD *)&v19[v22[12]] = *(_QWORD *)&v20[v22[12]];
        v45 = v60[6];
        v46 = (char *)v63 + v45;
        v47 = (char *)v62 + v45;
        *v46 = *((_BYTE *)v62 + v45);
        *(_OWORD *)(v46 + 8) = *(_OWORD *)((char *)v62 + v45 + 8);
        *(_OWORD *)(v46 + 24) = *(_OWORD *)((char *)v62 + v45 + 24);
        *((_QWORD *)v46 + 5) = *(_QWORD *)((char *)v62 + v45 + 40);
        v48 = *(_OWORD *)((char *)v62 + v45 + 64);
        *((_OWORD *)v46 + 3) = *(_OWORD *)((char *)v62 + v45 + 48);
        *((_OWORD *)v46 + 4) = v48;
        *((_QWORD *)v46 + 10) = *(_QWORD *)((char *)v62 + v45 + 80);
        v46[88] = *((_BYTE *)v62 + v45 + 88);
        *((_QWORD *)v46 + 12) = *(_QWORD *)((char *)v62 + v45 + 96);
        v49 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v50 = v49[13];
        v51 = &v46[v50];
        v52 = &v47[v50];
        v53 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        *(_QWORD *)&v46[v49[14]] = *(_QWORD *)&v47[v49[14]];
        *(_QWORD *)&v46[v49[15]] = *(_QWORD *)&v47[v49[15]];
        v46[v49[16]] = v47[v49[16]];
        *(_QWORD *)&v46[v49[17]] = *(_QWORD *)&v47[v49[17]];
        *(_QWORD *)&v46[v49[18]] = *(_QWORD *)&v47[v49[18]];
        *(_QWORD *)&v46[v49[19]] = *(_QWORD *)&v47[v49[19]];
        v54 = v60[7];
        v55 = (char *)v63 + v54;
        v56 = (char *)v62 + v54;
        v57 = *((_OWORD *)v56 + 1);
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v57;
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((_QWORD *)v55 + 6) = *((_QWORD *)v56 + 6);
        *(_QWORD *)((char *)v63 + v60[8]) = *(_QWORD *)((char *)v62 + v60[8]);
        swift_storeEnumTagMultiPayload();
        a3 = v64;
        goto LABEL_18;
      }
LABEL_16:
      v44 = sub_1BB8705C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(__dst, v31, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
      goto LABEL_17;
    }
    if (!EnumCaseMultiPayload)
    {
      v64 = a3;
      v17 = v14[1];
      *v13 = *v14;
      v13[1] = v17;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      v60 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v18 = v60[5];
      v62 = v14;
      v63 = v13;
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v22 = (int *)type metadata accessor for GroupLayoutContext();
      v23 = v22[5];
      v24 = &v19[v23];
      v25 = &v20[v23];
      v26 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      v27 = v22[6];
      v28 = &v19[v27];
      v29 = &v20[v27];
      *(_OWORD *)v28 = *(_OWORD *)&v20[v27];
      v28[16] = v20[v27 + 16];
      *(_WORD *)(v28 + 17) = *(_WORD *)&v20[v27 + 17];
      v28[19] = v20[v27 + 19];
      *((_DWORD *)v28 + 5) = *(_DWORD *)&v20[v27 + 20];
      *((_QWORD *)v28 + 3) = *(_QWORD *)&v20[v27 + 24];
      v59 = type metadata accessor for FeedLayoutSolverOptions(0);
      v30 = *(int *)(v59 + 36);
      __dst = &v28[v30];
      v31 = &v29[v30];
      v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        goto LABEL_14;
      goto LABEL_16;
    }
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
LABEL_18:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BA928458()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA928464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BA9284E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA9284EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatTestCaseResult(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AAAF0);
}

uint64_t sub_1BA928574()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatTestCaseResult.Result(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA928600(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  v1 = *(void **)(a1 + 16);
  v2 = (void *)sub_1BB86C58C();
  v3 = objc_msgSend(v1, sel_assetHandleForURL_lifetimeHint_, v2, 1);

  v4 = objc_msgSend(v3, sel_filePath);
  if (v4)
  {
    v5 = v4;
    sub_1BB8729A0();

    sub_1BA92A198();
    swift_allocObject();
    v6 = sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA92A198();
    swift_allocObject();
    v6 = sub_1BB86EA58();
  }

  return v6;
}

uint64_t sub_1BA92872C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C550();
  v6 = objc_allocWithZone(MEMORY[0x1E0C8B2E8]);
  v7 = (void *)sub_1BB86C58C();
  v8 = objc_msgSend(v6, sel_initWithURL_, v7);

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v8;
  return result;
}

void sub_1BA928804(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  uint64_t v20;

  v3 = *a1;
  v4 = a3 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);
  v5 = *(void **)v4;
  v6 = *(_BYTE *)(v4 + 8);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_BYTE *)(v4 + 24);
  v9 = *(_BYTE *)(v4 + 25);
  v11 = *(void **)(v4 + 32);
  v10 = *(_QWORD *)(v4 + 40);
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v11;
  v20 = v10;
  v12 = v5;
  v13 = v11;
  sub_1BB5BA600(v3, (uint64_t)&v14);

}

void sub_1BA9288B0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;

  if (a1)
  {
    v9 = a2 + 16;
    swift_beginAccess();
    v10 = MEMORY[0x1BCCE5D40](v9);
    if (v10)
    {
      v11 = (void *)v10;
      swift_beginAccess();
      v12 = MEMORY[0x1BCCE5D40](a3 + 16);
      if (v12)
      {
        v13 = (id)v12;
        if ((void *)v12 == a4)
        {
          v14 = a5 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);
          v15 = *(void **)v14;
          v16 = *(void **)(v14 + 32);
          v17 = a1;
          v18 = v15;
          v19 = v16;
          v20 = objc_msgSend(v11, sel_layer);
          objc_opt_self();
          v21 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

          objc_msgSend(v21, sel_setContentsGravity_, v19);
          v22 = objc_msgSend(v11, sel_layer);
          objc_opt_self();
          v13 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

          objc_msgSend(v13, sel_setImage_, v17);
          v11 = v17;
        }

        v11 = v13;
      }

    }
  }
}

uint64_t sub_1BA928A84()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA928AB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  unint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v31;
  uint64_t v32;
  char v33;

  if (a3)
  {
    v9 = *(_QWORD *)(a3 + 80);
    v10 = *(_QWORD *)(a3 + 88);
    v11 = *(_BYTE *)(a3 + 96);
    sub_1BA6E6C54(v9, v10, v11);
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = -2;
  }
  v12 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  v31 = v9;
  v32 = v10;
  v33 = v11;
  sub_1BA6787C4(v12, (uint64_t)&v31, v13, v14, v15, v16);

  sub_1BA6E6CC4(v9, v10, v11);
  if (a3)
  {
    if ((~*(_QWORD *)(a3 + 192) & 0xF000000000000007) != 0)
    {
      v31 = *(_QWORD *)(a3 + 192);
      FormatColor.color.getter();
      v17 = v23;
    }
    else
    {
      v17 = 0;
    }
    sub_1BB873714();

    v24 = *(_QWORD *)(a3 + 64);
    if (!(v24 >> 61) && (v24 & 0xF000000000000007) != 0xF000000000000007)
    {
      v31 = *(_QWORD *)(v24 + 16);
      swift_retain();
      FormatColor.color.getter();
      v26 = v25;
      sub_1BB873738();
      swift_release();

    }
    v21 = *(_QWORD *)(a2 + 144);
    v20 = *(_QWORD *)(a3 + 72);
    v18 = *(_QWORD *)(a3 + 80);
    v19 = *(_QWORD *)(a3 + 88);
    v22 = *(_BYTE *)(a3 + 96);
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v18, v19, v22);
  }
  else
  {
    sub_1BB873714();
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = *(_QWORD *)(a2 + 144);
    v22 = -2;
  }
  v27 = objc_msgSend(a1, sel_layer);
  v31 = v18;
  v32 = v19;
  v33 = v22;
  sub_1BA67832C(v21, v27, a5, v20, &v31);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v18, v19, v22);
  if (a3)
  {
    v28 = *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = 0;
  }
  v31 = v28;
  sub_1BA6786EC(v21, a1, &v31, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA928CF8(char *a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t);
  int v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  unsigned int v48;
  unsigned int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  char v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  _QWORD *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  _QWORD *v92;
  void *v93;
  void *v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  char *v109;
  id v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  id v117;
  id v118;
  id v119;
  _QWORD *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v129;
  unsigned int (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  _QWORD *v144;
  unsigned int (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  char *v147;
  uint64_t v148;
  id v149[3];
  uint64_t v150;
  unint64_t v151;

  v125 = a3;
  v147 = (char *)a2;
  v131 = *v3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C7138, type metadata accessor for FormatVideoData.Assets, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v138 = (uint64_t)&v125 - v7;
  v126 = type metadata accessor for FormatVideoData(0);
  v133 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v134 = v8;
  v135 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v11 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v141 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v129 = (char *)&v125 - v14;
  sub_1BA842538();
  v146 = v15;
  MEMORY[0x1E0C80A78](v15);
  v140 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v125 - v18;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v10, v5);
  MEMORY[0x1E0C80A78](v20);
  v127 = (uint64_t)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v132 = (uint64_t)&v125 - v23;
  MEMORY[0x1E0C80A78](v24);
  v139 = (char *)&v125 - v25;
  MEMORY[0x1E0C80A78](v26);
  v142 = (char *)&v125 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v125 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v125 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v125 - v35;
  v143 = a1;
  v37 = &a1[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_assets];
  swift_beginAccess();
  v38 = type metadata accessor for FormatVideoData.Assets(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t))(v39 + 48);
  v148 = v38;
  v41 = v40(v37, 1);
  v137 = v39;
  v130 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v40;
  if (v41)
  {
    v42 = v37;
    v43 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v43(v36, 1, 1, v9);
    v44 = (void (*)(char *, char *, uint64_t))v11[2];
  }
  else
  {
    v44 = (void (*)(char *, char *, uint64_t))v11[2];
    v42 = v37;
    v44(v36, v37, v9);
    v43 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v43(v36, 0, 1, v9);
  }
  v45 = (uint64_t)v142;
  v44(v33, v147, v9);
  v128 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v43;
  v43(v33, 0, 1, v9);
  v46 = (uint64_t)&v19[*(int *)(v146 + 48)];
  sub_1BA7E8428((uint64_t)v36, (uint64_t)v19);
  sub_1BA7E8428((uint64_t)v33, v46);
  v144 = v11;
  v47 = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6];
  v48 = v47(v19, 1, v9);
  v145 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v47;
  if (v48 != 1)
  {
    sub_1BA7E8428((uint64_t)v19, (uint64_t)v30);
    v51 = (uint64_t)v42;
    if (v47((char *)v46, 1, v9) != 1)
    {
      v53 = v144;
      v54 = v129;
      ((void (*)(char *, uint64_t, uint64_t))v144[4])(v129, v46, v9);
      sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v55 = sub_1BB872958();
      v56 = (void (*)(char *, uint64_t))v53[1];
      v57 = v54;
      v45 = (uint64_t)v142;
      v56(v57, v9);
      sub_1BA7F0A80((uint64_t)v33);
      sub_1BA7F0A80((uint64_t)v36);
      v56(v30, v9);
      v52 = (uint64_t)v147;
      sub_1BA7F0A80((uint64_t)v19);
      v50 = v143;
      v59 = (uint64_t)v139;
      v58 = (uint64_t)v140;
      if ((v55 & 1) != 0)
        goto LABEL_15;
      goto LABEL_11;
    }
    sub_1BA7F0A80((uint64_t)v33);
    sub_1BA7F0A80((uint64_t)v36);
    ((void (*)(char *, uint64_t))v144[1])(v30, v9);
    v50 = v143;
LABEL_9:
    sub_1BA929DD8((uint64_t)v19);
    v52 = (uint64_t)v147;
LABEL_11:
    v60 = objc_msgSend(v50, sel_layer, v125);
    objc_opt_self();
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setPlayer_, 0);

    v61 = &v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
    v62 = *(void **)&v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
    v63 = *(_QWORD *)&v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 8];
    v64 = *(_QWORD *)&v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 16];
    v65 = *(_QWORD *)&v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 24];
    v66 = *(void **)&v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 32];
    *(_OWORD *)v61 = 0u;
    *((_OWORD *)v61 + 1) = 0u;
    *((_OWORD *)v61 + 2) = 0u;
    sub_1BA929E14(v62, v63, v64, v65, v66);
    v67 = *(_QWORD *)&v50[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
    v68 = swift_beginAccess();
    v69 = *(unsigned __int8 *)(v67 + 16);
    *(_BYTE *)(v67 + 16) = 0;
    if (v69 == 1)
      *(_WORD *)(v67 + 56) = 2;
    MEMORY[0x1E0C80A78](v68);
    *(&v125 - 2) = v136;
    *(&v125 - 1) = (void *)v52;
    sub_1BB86EC14();
    sub_1BA49A224(0, (unint64_t *)&unk_1EF2AAB30);
    sub_1BB86E98C();
    swift_release();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v70 = (void *)sub_1BB87345C();
    v71 = v135;
    sub_1BA4C2DD8(v52, v135, type metadata accessor for FormatVideoData);
    v72 = (*(unsigned __int8 *)(v133 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
    v73 = swift_allocObject();
    sub_1BA929F34(v71, v73 + v72);
    type metadata accessor for FormatVideoView();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    swift_release();
    goto LABEL_14;
  }
  sub_1BA7F0A80((uint64_t)v33);
  sub_1BA7F0A80((uint64_t)v36);
  v49 = v47((char *)v46, 1, v9);
  v50 = v143;
  v51 = (uint64_t)v42;
  if (v49 != 1)
    goto LABEL_9;
  sub_1BA7F0A80((uint64_t)v19);
  v52 = (uint64_t)v147;
LABEL_14:
  v59 = (uint64_t)v139;
  v58 = (uint64_t)v140;
LABEL_15:
  v74 = v52 + *(int *)(v148 + 20);
  sub_1BA7E8428(v74, v45);
  if (v145(v45, 1, v9) == 1)
  {
    sub_1BA7F0A80(v45);
    v75 = objc_msgSend(v50, sel_layer);
    objc_opt_self();
    v76 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v76, sel_setImage_, 0);
LABEL_28:
    v88 = v138;
    sub_1BA4C2DD8(v52, v138, type metadata accessor for FormatVideoData.Assets);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v137 + 56))(v88, 0, 1, v148);
    swift_beginAccess();
    v89 = v88;
    v90 = v51;
    goto LABEL_33;
  }
  v77 = v144;
  v78 = (void (*)(char *, uint64_t, uint64_t))v144[4];
  v78(v141, v45, v9);
  if (v130(v51, 1, v148))
    v128(v59, 1, 1, v9);
  else
    sub_1BA7E8428(v51 + *(int *)(v148 + 20), v59);
  v79 = v132;
  sub_1BA7E8428(v74, v132);
  v80 = v58 + *(int *)(v146 + 48);
  sub_1BA7E8428(v59, v58);
  sub_1BA7E8428(v79, v80);
  v81 = v145;
  if (v145(v58, 1, v9) == 1)
  {
    sub_1BA7F0A80(v79);
    sub_1BA7F0A80(v59);
    if (v81(v80, 1, v9) == 1)
    {
      sub_1BA7F0A80(v58);
      ((void (*)(char *, uint64_t))v77[1])(v141, v9);
      goto LABEL_28;
    }
    goto LABEL_25;
  }
  v82 = v127;
  sub_1BA7E8428(v58, v127);
  if (v81(v80, 1, v9) == 1)
  {
    sub_1BA7F0A80(v132);
    sub_1BA7F0A80(v59);
    ((void (*)(uint64_t, uint64_t))v77[1])(v82, v9);
LABEL_25:
    sub_1BA929DD8(v58);
    goto LABEL_29;
  }
  v83 = v59;
  v84 = v82;
  v85 = v129;
  v78(v129, v80, v9);
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v86 = sub_1BB872958();
  v87 = (void (*)(char *, uint64_t))v77[1];
  v87(v85, v9);
  sub_1BA7F0A80(v132);
  sub_1BA7F0A80(v83);
  v87((char *)v84, v9);
  sub_1BA7F0A80(v58);
  if ((v86 & 1) != 0)
  {
    v87(v141, v9);
    goto LABEL_28;
  }
LABEL_29:
  v145 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v9;
  v146 = v51;
  v91 = v141;
  v92 = v136;
  v93 = (void *)v136[2];
  v94 = (void *)sub_1BB86C58C();
  v95 = objc_msgSend(v93, sel_assetHandleForURL_lifetimeHint_, v94, 1);

  v150 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
  v151 = sub_1BA7499C0();
  v149[0] = v95;
  v142 = (char *)v95;
  v96 = v143;
  objc_msgSend(v143, sel_bounds);
  v97 = sub_1BB8704BC();
  swift_allocObject();
  v98 = sub_1BB8704A4();
  v99 = v92 + 3;
  __swift_project_boxed_opaque_existential_1(v92 + 3, v92[6]);
  v150 = v97;
  v151 = MEMORY[0x1E0DB91C0];
  v149[0] = (id)v98;
  swift_retain();
  v100 = (void *)sub_1BB86F904();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  if (v100)
  {
    v101 = v52 + *(int *)(v126 + 20);
    v102 = *(void **)(v101 + 32);
    v140 = (char *)*(id *)v101;
    v103 = v102;
    v104 = objc_msgSend(v96, sel_layer);
    objc_opt_self();
    v105 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v105, sel_setContentsGravity_, v103);
    v106 = objc_msgSend(v96, sel_layer);
    objc_opt_self();
    v107 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v107, sel_setImage_, v100);
    swift_release();

    ((void (*)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v144[1])(v141, v145);
  }
  else
  {
    v108 = objc_msgSend(v96, sel_layer);
    objc_opt_self();
    v109 = v96;
    v110 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v110, sel_setImage_, 0);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    swift_retain();
    v140 = (char *)sub_1BB87345C();
    v111 = swift_allocObject();
    v112 = v125;
    swift_unknownObjectWeakInit();
    v113 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v114 = v135;
    sub_1BA4C2DD8(v52, v135, type metadata accessor for FormatVideoData);
    v115 = (*(unsigned __int8 *)(v133 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
    v116 = (_QWORD *)swift_allocObject();
    v116[2] = v113;
    v116[3] = v111;
    v116[4] = v112;
    sub_1BA929F34(v114, (uint64_t)v116 + v115);
    swift_retain();
    swift_retain();
    v117 = v112;
    v118 = objc_msgSend(v109, sel_layer);
    objc_opt_self();
    v119 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    v120 = v99;
    v121 = v140;
    sub_1BB101AAC(v120, v98, v140, (uint64_t)sub_1BA92A14C, (uint64_t)v116, v119);

    swift_release();
    swift_release();

    ((void (*)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v144[1])(v91, v145);
    swift_release();
    swift_release();
    swift_release();
  }
  v122 = v138;
  sub_1BA4C2DD8((uint64_t)v147, v138, type metadata accessor for FormatVideoData.Assets);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v137 + 56))(v122, 0, 1, v148);
  v123 = v146;
  swift_beginAccess();
  v89 = v122;
  v90 = v123;
LABEL_33:
  sub_1BA929FD8(v89, v90);
  return swift_endAccess();
}

uint64_t sub_1BA929C54(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char **v18;
  void *v21;

  v12 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v13 = &a2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_identifier];
  *(_QWORD *)v13 = v12;
  *((_QWORD *)v13 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB8736F0();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 120));
  v14 = *(_QWORD *)(a1 + 152);
  if (v14)
    v15 = *(_BYTE *)(v14 + 200) & 1;
  else
    v15 = 0;
  objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, v15, a5);
  v16 = *(_QWORD *)(a1 + 128);
  v17 = *(unsigned __int8 *)(a1 + 136);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a2, sel_setAccessibilityElementsHidden_, 0);
  if (v17 <= 0xFD)
  {
    if ((v17 & 0x80) == 0)
    {
      v18 = &selRef_setIsAccessibilityElement_;
LABEL_9:
      objc_msgSend(a2, *v18, 1);
      goto LABEL_10;
    }
    if (v16 | v17 ^ 0x80)
    {
      v18 = &selRef_setAccessibilityElementsHidden_;
      goto LABEL_9;
    }
  }
LABEL_10:
  objc_msgSend(a2, sel_setClipsToBounds_, 1);
  sub_1BA928AB8(a2, a1, v14, a3, a6);
  return sub_1BA928CF8(a2, a4, v21);
}

uint64_t sub_1BA929DD8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA842538();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA929E14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {

  }
}

uint64_t sub_1BA929E40()
{
  uint64_t v0;

  return sub_1BA928600(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA929E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  id *v8;

  v1 = type metadata accessor for FormatVideoData(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v7 = v3 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = (id *)(v3 + *(int *)(v1 + 20));

  return swift_deallocObject();
}

uint64_t sub_1BA929F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVideoData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA929F78(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatVideoData(0) - 8) + 80);
  sub_1BA928804(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1BA929FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C7138, type metadata accessor for FormatVideoData.Assets, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA92A034()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA92A058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  id *v8;

  v1 = type metadata accessor for FormatVideoData(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();

  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v7 = v3 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = (id *)(v3 + *(int *)(v1 + 20));

  return swift_deallocObject();
}

void sub_1BA92A14C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatVideoData(0) - 8) + 80);
  sub_1BA9288B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_1BA92A190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA98E624(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1BA92A198()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C340)
  {
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C340);
  }
}

uint64_t PuzzleProgress.score.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t PuzzleProgress.rankID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleProgress.usedReveal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

void sub_1BA92A230(char *a1)
{
  sub_1BB80214C(*a1);
}

void sub_1BA92A23C()
{
  char *v0;

  sub_1BAB0AEC0(0, *v0);
}

void sub_1BA92A248()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA92A28C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BA92A330(uint64_t a1)
{
  char *v1;

  sub_1BAB0AEC0(a1, *v1);
}

uint64_t sub_1BA92A338@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA92C170();
  *a1 = result;
  return result;
}

uint64_t sub_1BA92A364()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA92A39C + 4 * byte_1BB885447[*v0]))();
}

void sub_1BA92A39C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xED00006C6576654CLL;
}

void sub_1BA92A3B4(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F6373;
  a1[1] = 0xE500000000000000;
}

void sub_1BA92A3CC(_QWORD *a1@<X8>)
{
  *a1 = 0x44496B6E6172;
  a1[1] = 0xE600000000000000;
}

void sub_1BA92A3E4(_QWORD *a1@<X8>)
{
  *a1 = 0x6576655264657375;
  a1[1] = 0xEA00000000006C61;
}

void sub_1BA92A404(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "playDuration");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BA92A428(_QWORD *a1@<X8>)
{
  *a1 = 0x6465766C6F537369;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BA92A444()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA92A47C + 4 * byte_1BB88544E[*v0]))(0x73736572676F7270, 0xEC00000061746144);
}

uint64_t sub_1BA92A490()
{
  return 0x65726F6373;
}

uint64_t sub_1BA92A4A4()
{
  return 0x44496B6E6172;
}

uint64_t sub_1BA92A4B8()
{
  return 0x6576655264657375;
}

uint64_t sub_1BA92A4D4()
{
  return 0x6172754479616C70;
}

uint64_t sub_1BA92A4F4()
{
  return 0x6465766C6F537369;
}

uint64_t sub_1BA92A50C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA92C170();
  *a1 = result;
  return result;
}

void sub_1BA92A530(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1BA92A53C()
{
  sub_1BA92B3F8();
  return sub_1BB874710();
}

uint64_t sub_1BA92A564()
{
  sub_1BA92B3F8();
  return sub_1BB87471C();
}

double sub_1BA92A58C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  double result;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  _QWORD *v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77[5];

  v77[4] = *(id *)MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a1 + 16)
    || (v4 = sub_1BA6E35A8(0x73736572676F7270, 0xED00006C6576654CLL), (v5 & 1) == 0)
    || (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v77), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v12 = sub_1BB86EFEC();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v13 = sub_1BB86EFC8();
    v14 = sub_1BB8732F4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v73 = a2;
      v16 = (void *)swift_slowAlloc();
      v77[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      v17 = sub_1BB872778();
      v19 = v18;
      swift_bridgeObjectRelease();
      sub_1BA5D2E14(v17, v19, (uint64_t *)v77);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA493000, v13, v14, "Failed parsing PuzzleProgress message. Missing progressLevel: %s", v15, 0xCu);
      swift_arrayDestroy();
      v20 = v16;
      a2 = v73;
      MEMORY[0x1BCCE5C38](v20, -1, -1);
      MEMORY[0x1BCCE5C38](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_61;
  }
  v6 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = 0;
    v11 = 1;
    goto LABEL_27;
  }
  v7 = sub_1BA6E35A8(0x65726F6373, 0xE500000000000000);
  if ((v8 & 1) == 0)
  {
    v10 = 0;
    v11 = 1;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_18;
LABEL_27:
    v25 = 0;
    v24 = 0;
LABEL_28:
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)v77);
  v9 = swift_dynamicCast();
  if (v9)
    v10 = v75;
  else
    v10 = 0;
  v11 = v9 ^ 1;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_27;
LABEL_18:
  v21 = sub_1BA6E35A8(0x44496B6E6172, 0xE600000000000000);
  if ((v22 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)v77);
    v23 = swift_dynamicCast();
    if (v23)
      v24 = v75;
    else
      v24 = 0;
    if (v23)
      v25 = v76;
    else
      v25 = 0;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_28;
  }
  else
  {
    v24 = 0;
    v25 = 0;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v41 = sub_1BA6E35A8(0x6576655264657375, 0xEA00000000006C61);
  if ((v42 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v41, (uint64_t)v77);
    if (swift_dynamicCast())
    {
      v26 = v75;
      if (!*(_QWORD *)(v6 + 16))
        goto LABEL_44;
      goto LABEL_30;
    }
  }
LABEL_29:
  v26 = 0;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_44;
LABEL_30:
  v27 = sub_1BA6E35A8(0x6172754479616C70, 0xEC0000006E6F6974);
  if ((v28 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v27, (uint64_t)v77);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(_QWORD *)(v6 + 16)
        && (v29 = sub_1BA6E35A8(0x6465766C6F537369, 0xE800000000000000), (v30 & 1) != 0)
        && (sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v29, (uint64_t)v77), (swift_dynamicCast() & 1) != 0))
      {
        if (*(_QWORD *)(v6 + 16))
        {
          v31 = sub_1BA6E35A8(0x73736572676F7270, 0xEC00000061746144);
          if ((v32 & 1) != 0)
          {
            sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v31, (uint64_t)v77);
            sub_1BA78647C();
            if ((swift_dynamicCast() & 1) != 0)
            {
              v74 = a2;
              swift_bridgeObjectRelease();
              v33 = (void *)objc_opt_self();
              v34 = (void *)sub_1BB872760();
              swift_bridgeObjectRelease();
              v77[0] = 0;
              v35 = objc_msgSend(v33, sel_dataWithJSONObject_options_error_, v34, 0, v77);

              if (v35)
              {
                v36 = v77[0];
                v37 = sub_1BB86C6E8();
                v39 = v38;

                sub_1BA86B484(v37, v39);
                *(_QWORD *)v74 = v75;
                *(_QWORD *)(v74 + 8) = v75;
                *(_BYTE *)(v74 + 16) = v75;
                *(_QWORD *)(v74 + 24) = v37;
                *(_QWORD *)(v74 + 32) = v39;
                *(_QWORD *)(v74 + 40) = v10;
                *(_BYTE *)(v74 + 48) = v11;
                *(_QWORD *)(v74 + 56) = v24;
                *(_QWORD *)(v74 + 64) = v25;
                *(_BYTE *)(v74 + 72) = v26;
                sub_1BA69D490(v37, v39);
                swift_bridgeObjectRelease();
                return result;
              }
              v62 = v77[0];
              swift_bridgeObjectRelease();
              v63 = (void *)sub_1BB86C484();

              swift_willThrow();
              if (qword_1ED3C0B50 != -1)
                swift_once();
              v64 = sub_1BB86EFEC();
              __swift_project_value_buffer(v64, (uint64_t)qword_1ED476918);
              v65 = v63;
              v66 = v63;
              v67 = sub_1BB86EFC8();
              v68 = sub_1BB8732F4();
              if (os_log_type_enabled(v67, v68))
              {
                v69 = (uint8_t *)swift_slowAlloc();
                v70 = (_QWORD *)swift_slowAlloc();
                *(_DWORD *)v69 = 138412290;
                v71 = v63;
                v72 = (void *)_swift_stdlib_bridgeErrorToNSError();
                v77[0] = v72;
                sub_1BB873A8C();
                *v70 = v72;

                _os_log_impl(&dword_1BA493000, v67, v68, "Failed to create InternalData error: %@", v69, 0xCu);
                sub_1BA92CD5C();
                swift_arrayDestroy();
                MEMORY[0x1BCCE5C38](v70, -1, -1);
                MEMORY[0x1BCCE5C38](v69, -1, -1);

              }
              else
              {

              }
              a2 = v74;
              goto LABEL_60;
            }
          }
        }
        swift_bridgeObjectRelease();
        v43 = a2;
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v58 = sub_1BB86EFEC();
        __swift_project_value_buffer(v58, (uint64_t)qword_1ED476918);
        swift_bridgeObjectRetain();
        v45 = sub_1BB86EFC8();
        v53 = sub_1BB8732F4();
        if (os_log_type_enabled(v45, v53))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          v48 = (void *)swift_slowAlloc();
          v77[0] = v48;
          *(_DWORD *)v47 = 136315138;
          swift_bridgeObjectRetain();
          v59 = sub_1BB872778();
          v61 = v60;
          swift_bridgeObjectRelease();
          sub_1BA5D2E14(v59, v61, (uint64_t *)v77);
          sub_1BB873A8C();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v57 = "Failed parsing PuzzleProgress message. Missing progressData: %s";
          goto LABEL_53;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v43 = a2;
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v52 = sub_1BB86EFEC();
        __swift_project_value_buffer(v52, (uint64_t)qword_1ED476918);
        swift_bridgeObjectRetain();
        v45 = sub_1BB86EFC8();
        v53 = sub_1BB8732F4();
        if (os_log_type_enabled(v45, v53))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          v48 = (void *)swift_slowAlloc();
          v77[0] = v48;
          *(_DWORD *)v47 = 136315138;
          swift_bridgeObjectRetain();
          v54 = sub_1BB872778();
          v56 = v55;
          swift_bridgeObjectRelease();
          sub_1BA5D2E14(v54, v56, (uint64_t *)v77);
          sub_1BB873A8C();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v57 = "Failed parsing PuzzleProgress message. Missing isSolved: %s";
LABEL_53:
          _os_log_impl(&dword_1BA493000, v45, v53, v57, v47, 0xCu);
          goto LABEL_48;
        }
      }
LABEL_58:

      swift_bridgeObjectRelease_n();
      goto LABEL_59;
    }
  }
LABEL_44:
  swift_bridgeObjectRelease();
  v43 = a2;
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v44 = sub_1BB86EFEC();
  __swift_project_value_buffer(v44, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain();
  v45 = sub_1BB86EFC8();
  v46 = sub_1BB8732F4();
  if (!os_log_type_enabled(v45, v46))
    goto LABEL_58;
  v47 = (uint8_t *)swift_slowAlloc();
  v48 = (void *)swift_slowAlloc();
  v77[0] = v48;
  *(_DWORD *)v47 = 136315138;
  swift_bridgeObjectRetain();
  v49 = sub_1BB872778();
  v51 = v50;
  swift_bridgeObjectRelease();
  sub_1BA5D2E14(v49, v51, (uint64_t *)v77);
  sub_1BB873A8C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BA493000, v45, v46, "Failed parsing PuzzleProgress message. Missing playDuration: %s", v47, 0xCu);
LABEL_48:
  swift_arrayDestroy();
  MEMORY[0x1BCCE5C38](v48, -1, -1);
  MEMORY[0x1BCCE5C38](v47, -1, -1);

LABEL_59:
  a2 = v43;
LABEL_60:
  swift_bridgeObjectRelease();
LABEL_61:
  result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 64) = 1;
  *(_BYTE *)(a2 + 72) = 0;
  return result;
}

uint64_t PuzzleProgress.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD v14[2];
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;

  sub_1BA92B7F4(0, &qword_1EF2AAB40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v14 - v6;
  v8 = *v1;
  v15 = v1[1];
  v14[1] = *((unsigned __int8 *)v1 + 16);
  v9 = v1[3];
  v10 = v1[4];
  v19 = v1[5];
  v20 = v8;
  v24 = *((unsigned __int8 *)v1 + 48);
  v11 = v1[7];
  v17 = v1[8];
  v18 = v11;
  v16 = *((unsigned __int8 *)v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA92B3F8();
  sub_1BB8746C8();
  v22 = v9;
  v23 = v10;
  v25 = 0;
  sub_1BA92B43C();
  v12 = v21;
  sub_1BB87414C();
  if (!v12)
  {
    LOBYTE(v22) = 1;
    sub_1BB8741A0();
    LOBYTE(v22) = 2;
    sub_1BB874140();
    LOBYTE(v22) = 3;
    sub_1BB87411C();
    LOBYTE(v22) = 4;
    sub_1BB874188();
    LOBYTE(v22) = 5;
    sub_1BB8741A0();
    LOBYTE(v22) = 6;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA92B3F8()
{
  unint64_t result;

  result = qword_1EF2AAB48;
  if (!qword_1EF2AAB48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB885688, &type metadata for PuzzleProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AAB48);
  }
  return result;
}

unint64_t sub_1BA92B43C()
{
  unint64_t result;

  result = qword_1EF2AAB50;
  if (!qword_1EF2AAB50)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF2AAB50);
  }
  return result;
}

uint64_t PuzzleProgress.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;

  sub_1BA92B7F4(0, &qword_1EF2AAB58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA92B3F8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  sub_1BA92B850();
  sub_1BB874068();
  v11 = v25;
  v10 = v26;
  LOBYTE(v25) = 1;
  sub_1BA86B484(v11, v26);
  v23 = sub_1BB8740C8();
  LOBYTE(v25) = 2;
  v12 = sub_1BB874050();
  v27 = v13;
  v22 = v12;
  LOBYTE(v25) = 3;
  v21 = sub_1BB87402C();
  LOBYTE(v25) = 4;
  v24 = v15;
  swift_bridgeObjectRetain();
  v20 = sub_1BB8740A4();
  LOBYTE(v25) = 5;
  v19 = sub_1BB8740C8();
  LOBYTE(v25) = 6;
  v16 = sub_1BB8740A4();
  v20 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BA86B484(v11, v10);
  sub_1BA69D490(v11, v10);
  v17 = v19;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v27 & 1;
  v18 = v24;
  *(_QWORD *)(a2 + 56) = v21;
  *(_QWORD *)(a2 + 64) = v18;
  *(_BYTE *)(a2 + 72) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BA69D490(v11, v10);
  return swift_bridgeObjectRelease();
}

void sub_1BA92B7F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA92B3F8();
    v7 = a3(a1, &type metadata for PuzzleProgress.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA92B850()
{
  unint64_t result;

  result = qword_1EF2AAB60;
  if (!qword_1EF2AAB60)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF2AAB60);
  }
  return result;
}

uint64_t sub_1BA92B894@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleProgress.init(from:)(a1, a2);
}

uint64_t sub_1BA92B8A8(_QWORD *a1)
{
  return PuzzleProgress.encode(to:)(a1);
}

uint64_t PuzzleProgress.debugDescription.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unsigned int v12;

  v12 = *(unsigned __int8 *)(v0 + 16);
  sub_1BB873CB4();
  sub_1BB872AFC(0);
  sub_1BB87420C();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  sub_1BA4CF8F4(0, &qword_1ED3B9740);
  sub_1BB872A00();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BA4CF8F4(0, (unint64_t *)&qword_1ED3B9200);
  swift_bridgeObjectRetain();
  sub_1BB872A00();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  sub_1BB87420C();
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v10);
  sub_1BB872AFC((_QWORD *)v12);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t destroy for PuzzleProgress(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1 >> 60 != 15)
    sub_1BA69D314(*(_QWORD *)(a1 + 24), v1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleProgress(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (uint64_t *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
  }
  else
  {
    v6 = *v4;
    sub_1BA69D44C(*v4, *(_QWORD *)(a2 + 32));
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleProgress(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (uint64_t *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      v8 = *v5;
      sub_1BA69D44C(*v5, *(_QWORD *)(a2 + 32));
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v6;
      sub_1BA69D314(v9, v10);
      goto LABEL_8;
    }
    sub_1BA92BD1C(a1 + 24);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *v4 = *(_OWORD *)v5;
    goto LABEL_8;
  }
  v7 = *v5;
  sub_1BA69D44C(*v5, *(_QWORD *)(a2 + 32));
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
LABEL_8:
  v11 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t sub_1BA92BD1C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t assignWithTake for PuzzleProgress(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v5;
      *(_QWORD *)(a1 + 32) = v7;
      sub_1BA69D314(v8, v6);
      goto LABEL_6;
    }
    sub_1BA92BD1C(a1 + 24);
  }
  *v4 = *(_OWORD *)v5;
LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleProgress(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleProgress()
{
  return &type metadata for PuzzleProgress;
}

uint64_t type metadata accessor for PuzzleProgressMessageHandler()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PuzzleProgress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BA92C018 + 4 * byte_1BB88545A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BA92C04C + 4 * byte_1BB885455[v4]))();
}

uint64_t sub_1BA92C04C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA92C054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA92C05CLL);
  return result;
}

uint64_t sub_1BA92C068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA92C070);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BA92C074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA92C07C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleProgress.CodingKeys()
{
  return &type metadata for PuzzleProgress.CodingKeys;
}

unint64_t sub_1BA92C09C()
{
  unint64_t result;

  result = qword_1EF2AAB78;
  if (!qword_1EF2AAB78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB885650, &type metadata for PuzzleProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AAB78);
  }
  return result;
}

unint64_t sub_1BA92C0E4()
{
  unint64_t result;

  result = qword_1EF2AAB80;
  if (!qword_1EF2AAB80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB885588, &type metadata for PuzzleProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AAB80);
  }
  return result;
}

unint64_t sub_1BA92C12C()
{
  unint64_t result;

  result = qword_1EF2AAB88;
  if (!qword_1EF2AAB88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8855B0, &type metadata for PuzzleProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AAB88);
  }
  return result;
}

uint64_t sub_1BA92C170()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1BA92C1B8(__int128 *a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  __int128 v44;
  __int128 v45;
  uint64_t type;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52[3];

  v4 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (v4)
  {
    swift_unknownObjectRetain();
    if ((sub_1BA9CE04C() & 1) != 0)
    {
      v5 = (_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
      v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 24);
      v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService), v6);
      v8 = objc_msgSend(v4, sel_identifier);
      v9 = sub_1BB8729A0();
      v11 = v10;

      v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 8))(v9, v11, v6);
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v13 = v5[3];
        v14 = v5[4];
        __swift_project_boxed_opaque_existential_1(v5, v13);
        v15 = objc_msgSend(v4, sel_identifier);
        type = sub_1BB8729A0();
        v17 = v16;

        v18 = objc_msgSend(objc_msgSend(v4, sel_puzzleType), sel_identifier);
        swift_unknownObjectRelease();
        v19 = sub_1BB8729A0();
        v21 = v20;

        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 24))(type, v17, v19, v21, v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager + 24);
        v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager + 32);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager), v22);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      }
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v24 = sub_1BB86EFEC();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED476918);
      swift_unknownObjectRetain();
      sub_1BA92CCEC((uint64_t)a1);
      swift_unknownObjectRetain();
      sub_1BA92CCEC((uint64_t)a1);
      v25 = sub_1BB86EFC8();
      v26 = sub_1BB87330C();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v52[0] = v47;
        *(_DWORD *)v27 = 136315394;
        v28 = objc_msgSend(v4, sel_identifier);
        v29 = sub_1BB8729A0();
        v31 = v30;

        *(_QWORD *)&v48 = sub_1BA5D2E14(v29, v31, v52);
        sub_1BB873A8C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        v32 = a1[3];
        v50 = a1[2];
        v51[0] = v32;
        *(_OWORD *)((char *)v51 + 9) = *(__int128 *)((char *)a1 + 57);
        v33 = a1[1];
        v48 = *a1;
        v49 = v33;
        v34 = PuzzleProgress.debugDescription.getter();
        *(_QWORD *)&v48 = sub_1BA5D2E14(v34, v35, v52);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        sub_1BA92CD24((uint64_t)a1);
        sub_1BA92CD24((uint64_t)a1);
        _os_log_impl(&dword_1BA493000, v25, v26, "Submitting puzzle progress for the puzzle=%s progress=[%s]", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v47, -1, -1);
        MEMORY[0x1BCCE5C38](v27, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease_n();
        sub_1BA92CD24((uint64_t)a1);
        sub_1BA92CD24((uint64_t)a1);
      }

      v36 = v5[3];
      v37 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v36);
      v38 = a1[3];
      v50 = a1[2];
      v51[0] = v38;
      *(_OWORD *)((char *)v51 + 9) = *(__int128 *)((char *)a1 + 57);
      v39 = a1[1];
      v48 = *a1;
      v49 = v39;
      (*(void (**)(__int128 *, void *, uint64_t, uint64_t))(v37 + 32))(&v48, v4, v36, v37);
    }
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x1BCCE5D40](a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate);
  if (result)
  {
    v41 = result + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1BCCE5D40](v41))
    {
      v42 = *(_QWORD *)(v41 + 8);
      ObjectType = swift_getObjectType();
      v44 = a1[3];
      v50 = a1[2];
      v51[0] = v44;
      *(_OWORD *)((char *)v51 + 9) = *(__int128 *)((char *)a1 + 57);
      v45 = a1[1];
      v48 = *a1;
      v49 = v45;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v42 + 40))(&v48, ObjectType, v42);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BA92C67C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t type;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *log;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_body);
  v5 = sub_1BB87276C();

  v6 = sub_1BB7E7464(v5);
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_14;
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_1BA6E35A8(0x7461745379616C70, 0xE900000000000065), (v8 & 1) == 0))
  {
    v55 = 0u;
    v56 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v55);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v56 + 1))
  {
LABEL_13:
    sub_1BA6EDA74((uint64_t)&v55);
    goto LABEL_14;
  }
  sub_1BA78647C();
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA92A58C(v45, (uint64_t)&v45);
    v9 = v52;
    if (v52 != 1)
    {
      v10 = v45;
      v11 = v47;
      v12 = v48;
      v55 = v45;
      LOBYTE(v56) = v46 & 1;
      *((_QWORD *)&v56 + 1) = v47;
      v57 = v48;
      v58 = v49;
      v59 = v50 & 1;
      v60 = v51;
      v61 = v52;
      v62 = v53 & 1;
      if ((*((_QWORD *)&v45 + 1) & 0x8000000000000000) == 0)
      {
        v38 = *((_QWORD *)&v45 + 1);
        v39 = v46;
        v43 = v49;
        v44 = v50;
        v40 = v51;
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v13 = sub_1BB86EFEC();
        __swift_project_value_buffer(v13, (uint64_t)qword_1ED476918);
        sub_1BA86B484(v11, v12);
        swift_bridgeObjectRetain();
        sub_1BA86B484(v11, v12);
        swift_bridgeObjectRetain();
        v14 = sub_1BB86EFC8();
        v15 = sub_1BB87330C();
        log = v14;
        v42 = v11;
        if (os_log_type_enabled(v14, v15))
        {
          type = v15;
          v16 = (uint8_t *)swift_slowAlloc();
          v35 = swift_slowAlloc();
          *(_QWORD *)&v45 = v35;
          *(_DWORD *)v16 = 136315138;
          v17 = PuzzleProgress.debugDescription.getter();
          v54 = sub_1BA5D2E14(v17, v18, (uint64_t *)&v45);
          sub_1BB873A8C();
          swift_bridgeObjectRelease();
          v37 = v12;
          v19 = v39;
          v20 = v40;
          sub_1BA92CCAC(v10, v38, v39, v11, v12, v43, v44, v40, v9);
          sub_1BA92CCAC(v10, v38, v39, v11, v12, v43, v44, v40, v9);
          _os_log_impl(&dword_1BA493000, log, type, "PuzzleProgressMessageHandler received progress=%s", v16, 0xCu);
          v21 = v11;
          v22 = v38;
          swift_arrayDestroy();
          v23 = v37;
          MEMORY[0x1BCCE5C38](v35, -1, -1);
          MEMORY[0x1BCCE5C38](v16, -1, -1);
        }
        else
        {
          v22 = v38;
          v19 = v39;
          v33 = v11;
          v23 = v12;
          sub_1BA92CCAC(v10, v38, v39, v33, v12, v43, v44, v40, v9);
          v20 = v40;
          v21 = v42;
          sub_1BA92CCAC(v10, v38, v39, v42, v23, v43, v44, v40, v9);
        }

        v34 = MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed28PuzzleProgressMessageHandler_delegate);
        if (v34)
        {
          sub_1BA92C1B8(&v55, v34);
          swift_unknownObjectRelease();
        }
        sub_1BA92CCAC(v10, v22, v19, v21, v23, v43, v44, v20, v9);
        return;
      }
      sub_1BA92CCAC(v45, *((uint64_t *)&v45 + 1), v46, v47, v48, v49, v50, v51, v52);
    }
  }
LABEL_14:
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v24 = sub_1BB86EFEC();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain_n();
  v25 = sub_1BB86EFC8();
  v26 = sub_1BB8732F4();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    *(_DWORD *)v27 = 136315138;
    *(_QWORD *)&v45 = v28;
    v29 = objc_msgSend(a1, sel_body);
    sub_1BB87276C();

    v30 = sub_1BB872778();
    v32 = v31;
    swift_bridgeObjectRelease();
    v54 = sub_1BA5D2E14(v30, v32, (uint64_t *)&v45);
    sub_1BB873A8C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v25, v26, "PuzzleProgressMessageHandler received invalid message %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v28, -1, -1);
    MEMORY[0x1BCCE5C38](v27, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1BA92CCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  if (a9 != 1)
  {
    sub_1BA69D490(a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA92CCEC(uint64_t a1)
{
  sub_1BA86B484(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA92CD24(uint64_t a1)
{
  sub_1BA69D490(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BA92CD5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1060)
  {
    sub_1BA92CDB0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A1060);
  }
}

unint64_t sub_1BA92CDB0()
{
  unint64_t result;

  result = qword_1ED3B99D0;
  if (!qword_1ED3B99D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B99D0);
  }
  return result;
}

void sub_1BA92CE10()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  objc_super v18;

  v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView];
  objc_msgSend(v2, sel_setDelegate_, v1);
  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setAlwaysBounceVertical_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTintColor_, v3);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTableFooterView_, v4);

  type metadata accessor for DebugFormatTableViewCell();
  sub_1BB873234();
  v5 = objc_msgSend(v1, sel_view);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_addSubview_, v2);

    v7 = objc_msgSend(v1, sel_navigationItem);
    v8 = (void *)sub_1BB872970();
    objc_msgSend(v7, sel_setTitle_, v8);

    v9 = objc_msgSend(v1, sel_navigationItem);
    sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB8856E0;
    v11 = (void *)sub_1BB872970();
    v12 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v11);

    v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v14 = v1;
    v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_doDismiss);

    *(_QWORD *)(v10 + 32) = v15;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    v16 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setRightBarButtonItems_, v16);

    sub_1BA92D168(0);
    v17 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setToolbarItems_, v17);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA92D168(char a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD v20[4];

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
    objc_msgSend(v2, sel_startAnimating);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v2);
    sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BB8856F0;
    *(_QWORD *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(_QWORD *)(v4 + 40) = v3;
    sub_1BB872DCC();
    v5 = v4;

  }
  else
  {
    ObjectType = swift_getObjectType();
    v20[3] = ObjectType;
    v20[0] = v1;
    v7 = v1;
    v8 = (void *)sub_1BB872970();
    if (ObjectType)
    {
      v9 = __swift_project_boxed_opaque_existential_1(v20, ObjectType);
      v10 = *(_QWORD *)(ObjectType - 8);
      v11 = MEMORY[0x1E0C80A78](v9);
      v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v10 + 16))(v13, v11);
      v14 = sub_1BB874380();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      v14 = 0;
    }
    v15 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v16 = objc_msgSend(v15, sel_initWithTitle_style_target_action_, v8, 2, v14, sel_doUploadWithSender_, v20[0]);

    swift_unknownObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v16, sel_setTintColor_, v17);

    sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB8856F0;
    *(_QWORD *)(v18 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(_QWORD *)(v18 + 40) = v16;
    v20[0] = v18;
    sub_1BB872DCC();
    return v20[0];
  }
  return v5;
}

uint64_t type metadata accessor for DebugFormatUploadConfirmViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BA92D67C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_uploadService);
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_entries);
  if (qword_1EF2A6E68 != -1)
    swift_once();
  type metadata accessor for DebugFormatUploadService();
  sub_1BA92F680();
  sub_1BB86D210();
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v3 + 32) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = sub_1BB86EBFC();
  swift_release();
  return v4;
}

uint64_t sub_1BA92D784(uint64_t a1, uint64_t a2)
{
  char v2;
  __int128 v4;
  char v5[8];
  __int128 v6;

  v2 = *(_BYTE *)a1;
  v4 = *(_OWORD *)(a1 + 8);
  if (MEMORY[0x1BCCE5D40](a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate))
  {
    sub_1BAFA8FC0();
    swift_unknownObjectRelease();
  }
  v5[0] = v2;
  v6 = v4;
  return sub_1BA92D800(v5);
}

uint64_t sub_1BA92D800(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[6];

  v2 = v1;
  v3 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v29 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections;
    v30 = v2;
    v33 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC7A430(0, v8, 0);
    v9 = v33;
    v10 = v7 + 48;
    v31 = v3;
    do
    {
      v11 = *(_QWORD *)(v10 - 8);
      v32 = *(_QWORD *)(v10 - 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = swift_bridgeObjectRetain();
      v13 = sub_1BA92EC2C(v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v5;
      swift_bridgeObjectRelease();
      v33 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BAC7A430(v15 > 1, v16 + 1, 1);
        v9 = v33;
      }
      *(_QWORD *)(v9 + 16) = v16 + 1;
      v17 = (_QWORD *)(v9 + 24 * v16);
      v17[4] = v32;
      v17[5] = v11;
      v17[6] = v13;
      v10 += 24;
      --v8;
      v5 = v14;
      v3 = v31;
    }
    while (v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v29;
    v2 = v30;
  }
  *(_QWORD *)(v2 + v6) = v9;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView), sel_reloadData);
  if (*(_QWORD *)(v4 + 16) <= *(_QWORD *)(v5 + 16))
    v18 = *(_QWORD *)(v5 + 16);
  else
    v18 = *(_QWORD *)(v4 + 16);
  LOBYTE(v33) = v3;
  v34[0] = v5;
  v34[1] = v4;
  result = sub_1BB85FDB4();
  v20 = __OFSUB__(v18, result);
  v21 = v18 - result;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    v22 = sub_1BB85FDB4();
    v23 = sub_1BA92E9C4(v22, v21);
    v25 = v24;
    v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v22;
    *(_QWORD *)(v27 + 24) = v26;
    LOBYTE(v33) = 0;
    strcpy((char *)v34, "Update Result");
    HIWORD(v34[1]) = -4864;
    v34[2] = v23;
    v34[3] = v25;
    v34[4] = sub_1BA92F63C;
    v34[5] = v27;
    v28 = (_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor)
                   + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
    swift_beginAccess();
    if (*v28)
    {
      swift_retain();
      sub_1BB263178((__int128 *)&v33);
      swift_release();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA92DAF8()
{
  return sub_1BA92DB18();
}

uint64_t sub_1BA92DB18()
{
  uint64_t v0;
  _QWORD *v1;
  id v3[7];

  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB874548();

  LOBYTE(v3[0]) = 0;
  v3[1] = (id)0x726F727245;
  v3[2] = (id)0xE500000000000000;
  v3[3] = 0;
  v3[4] = (id)0xE000000000000000;
  v3[5] = 0;
  v3[6] = 0;
  v1 = (_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor)
                + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v1)
  {
    swift_retain();
    sub_1BB263178((__int128 *)v3);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void sub_1BA92DC1C(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  sub_1BA92D168(0);
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setToolbarItems_, v2);

  v3 = objc_msgSend(a1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_view);

    if (v5)
    {
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 1);

    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1BA92DDA8()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  char *v62;
  _QWORD v63[3];
  uint64_t v64;
  _BYTE v65[40];
  _QWORD v66[2];
  uint64_t v67;
  char v68;
  _BYTE v69[64];

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_53;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections);
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v3 = *(_QWORD *)(v2 + 24 * result + 48);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_55:
    __break(1u);
    return result;
  }
  sub_1BA92F0AC(v3 + (result << 6) + 32, (uint64_t)v69);
  swift_bridgeObjectRelease();
  sub_1BA92F0AC((uint64_t)v69, (uint64_t)v66);
  if (v68)
  {
    if (v68 == 1)
    {
      type metadata accessor for DebugFormatTableViewCell();
      v4 = (char *)sub_1BB87321C();
      v5 = objc_msgSend(v4, sel_textLabel);
      if (v5)
      {
        v6 = v5;
        v7 = sub_1BA84A7CC();
        objc_msgSend(v6, sel_setAttributedText_, v7);

      }
      v8 = objc_msgSend(v4, sel_textLabel);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, sel_setNumberOfLines_, 0);

      }
      v10 = objc_msgSend(v4, sel_detailTextLabel);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1BA84ABC0();
        objc_msgSend(v11, sel_setAttributedText_, v12);

      }
      v13 = objc_msgSend(v4, sel_detailTextLabel);
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, sel_setNumberOfLines_, 0);

      }
      v15 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
      v16 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
      *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = 0;

      v17 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
      objc_msgSend(v17, sel_setBackgroundColor_, *(_QWORD *)&v4[v15]);
      objc_msgSend(v17, sel_setHidden_, *(_QWORD *)&v4[v15] == 0);
      objc_msgSend(v4, sel_setAccessoryType_, 0);
    }
    else
    {
      v21 = v66[1];
      type metadata accessor for DebugFormatTableViewCell();
      v4 = (char *)sub_1BB87321C();
      v22 = objc_msgSend(v4, sel_textLabel);
      if (v22)
      {
        v23 = v22;
        v24 = sub_1BA84A7CC();
        objc_msgSend(v23, sel_setAttributedText_, v24);

      }
      v25 = objc_msgSend(v4, sel_textLabel);
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v25, sel_setNumberOfLines_, 0);

      }
      v27 = objc_msgSend(v4, sel_detailTextLabel);
      if (v27)
      {
        v28 = v27;
        v29 = sub_1BA84ABC0();
        objc_msgSend(v28, sel_setAttributedText_, v29);

      }
      v30 = objc_msgSend(v4, sel_detailTextLabel);
      if (v30)
      {
        v31 = v30;
        objc_msgSend(v30, sel_setNumberOfLines_, 0);

      }
      v32 = *(_QWORD *)(v21 + 16);
      if (v32)
      {
        v33 = 40;
        v34 = *(_QWORD *)(v21 + 16);
        do
        {
          if ((*(_QWORD *)(v21 + v33) & 0x8000000000000000) != 0)
          {
            swift_bridgeObjectRelease();
            v43 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
            v44 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
            v45 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
            *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = v43;
            v46 = v43;

            v47 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
            objc_msgSend(v47, sel_setBackgroundColor_, *(_QWORD *)&v4[v44]);
            objc_msgSend(v47, sel_setHidden_, *(_QWORD *)&v4[v44] == 0);

            objc_msgSend(v4, sel_setAccessoryType_, 1);
            goto LABEL_50;
          }
          v33 += 16;
          --v34;
        }
        while (v34);
        v35 = 40;
        while ((*(_QWORD *)(v21 + v35) & 0x8000000000000000) != 0)
        {
          v35 += 16;
          if (!--v32)
            goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        v57 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
        v58 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
        v59 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
        *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = v57;
        v60 = v57;

        v61 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
        objc_msgSend(v61, sel_setBackgroundColor_, *(_QWORD *)&v4[v58]);
        objc_msgSend(v61, sel_setHidden_, *(_QWORD *)&v4[v58] == 0);

      }
      else
      {
LABEL_33:
        swift_bridgeObjectRelease();
        v36 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
        v37 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
        *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = 0;

        v38 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
        objc_msgSend(v38, sel_setBackgroundColor_, *(_QWORD *)&v4[v36]);
        objc_msgSend(v38, sel_setHidden_, *(_QWORD *)&v4[v36] == 0);
      }
      v62 = v4;
      objc_msgSend(v62, sel_setAccessoryType_, 0);

    }
LABEL_50:
    swift_release();
  }
  else
  {
    sub_1BA92F1BC((uint64_t)&v67, (uint64_t)v65);
    type metadata accessor for DebugFormatTableViewCell();
    v4 = (char *)sub_1BB87321C();
    v18 = objc_msgSend(v4, sel_textLabel);
    if (v18)
    {
      v19 = v18;
      v20 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setText_, v20);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v39 = objc_msgSend(v4, sel_textLabel);
    if (v39)
    {
      v40 = v39;
      objc_msgSend(v39, sel_setNumberOfLines_, 1);

    }
    v41 = objc_msgSend(v4, sel_detailTextLabel);
    if (v41)
    {
      v42 = v41;
      sub_1BA92F200((uint64_t)v65, (uint64_t)v63);
      if (v64)
      {
        __swift_project_boxed_opaque_existential_1(v63, v64);
        sub_1BB87420C();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      }
      else
      {
        sub_1BA92F11C((uint64_t)v63);
      }
      v48 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v42, sel_setText_, v48);

    }
    v49 = objc_msgSend(v4, sel_detailTextLabel);
    if (v49)
    {
      v50 = v49;
      v51 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      objc_msgSend(v50, sel_setTextColor_, v51);

    }
    v52 = objc_msgSend(v4, sel_detailTextLabel);
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v52, sel_setNumberOfLines_, 0);

    }
    v54 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
    v55 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
    *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = 0;

    v56 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
    objc_msgSend(v56, sel_setBackgroundColor_, *(_QWORD *)&v4[v54]);
    objc_msgSend(v56, sel_setHidden_, *(_QWORD *)&v4[v54] == 0);
    objc_msgSend(v4, sel_setAccessoryType_, 0);
    sub_1BA92F11C((uint64_t)v65);
  }
  sub_1BA92F0E8((uint64_t)v69);
  return (unint64_t)v4;
}

unint64_t sub_1BA92E690(void *a1)
{
  char *v1;
  char *v2;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  _QWORD *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  _QWORD v18[2];
  uint64_t v19;
  char v20;
  _BYTE v21[64];

  v2 = v1;
  sub_1BB8731EC();
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections];
  if (result >= *(_QWORD *)(v5 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = *(_QWORD *)(v5 + 24 * result + 48);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(_QWORD *)(v6 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  sub_1BA92F0AC(v6 + (result << 6) + 32, (uint64_t)v21);
  swift_bridgeObjectRelease();
  sub_1BA92F0AC((uint64_t)v21, (uint64_t)v18);
  if (v20)
  {
    if (v20 == 1)
    {
      sub_1BA92F0E8((uint64_t)v21);
      return swift_release();
    }
    else
    {
      v7 = v18[1];
      swift_release();
      type metadata accessor for DebugFormatInspectorPaneViewController();
      v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor];
      sub_1BA65FBAC(0, (unint64_t *)&unk_1EF2B13D0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      swift_retain();
      v10 = sub_1BB61C860(v7);
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 32) = v10;
      v11 = (void *)sub_1BB2099E8(v8, inited, 0, 0);
      objc_msgSend(v11, sel_setModalPresentationStyle_, 7);
      v12 = objc_msgSend(v11, sel_popoverPresentationController);
      if (v12)
      {
        v13 = v12;
        v14 = (void *)sub_1BB86CB8C();
        v15 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v14);

        objc_msgSend(v13, sel_setSourceView_, v15);
      }
      v16 = objc_msgSend(v11, sel_popoverPresentationController);
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, sel_setPermittedArrowDirections_, 12);

      }
      objc_msgSend(v2, sel_presentViewController_animated_completion_, v11, 1, 0);

      return sub_1BA92F0E8((uint64_t)v21);
    }
  }
  else
  {
    sub_1BA92F0E8((uint64_t)v21);
    swift_bridgeObjectRelease();
    return sub_1BA92F11C((uint64_t)&v19);
  }
}

uint64_t sub_1BA92E9C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  _QWORD v7[2];

  if (a1)
  {
    if (a2)
    {
      v7[0] = 0;
      v7[1] = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC(0);
      sub_1BB87420C();
      sub_1BB872AFC(v2);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("");
    }
    else
    {
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      strcpy((char *)v7, "Upload failed ");
      HIBYTE(v7[1]) = -18;
    }
    sub_1BB87420C();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v7, "Uploaded ");
    WORD1(v7[1]) = 0;
    HIDWORD(v7[1]) = -385875968;
    sub_1BB87420C();
    sub_1BB872AFC(v3);
    swift_bridgeObjectRelease();
    v4 = " files successfully and failed ";
  }
  sub_1BB872AFC(v4);
  return v7[0];
}

void sub_1BA92EBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  if (!a1)
  {
    v2 = a2 + 16;
    swift_beginAccess();
    v3 = (void *)MEMORY[0x1BCCE5D40](v2);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
}

uint64_t sub_1BA92EC2C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  char v18;
  _QWORD v19[2];
  _BYTE v20[56];
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A404(0, v1, 0);
    v2 = v21;
    v4 = a1 + 32;
    do
    {
      sub_1BA92F0AC(v4, (uint64_t)v16);
      if (v18)
      {
        v5 = v16[0];
        if (v18 != 1)
          swift_bridgeObjectRelease();
        v9 = *(_QWORD *)(v5 + 16);
        v10 = *(_QWORD *)(v9 + 16);
        v11 = *(_QWORD *)(v9 + 24);
        swift_bridgeObjectRetain();
        v7 = sub_1BB85FBD8(v10, v11);
        swift_bridgeObjectRelease();
        v19[0] = v5;
        v8 = 2;
      }
      else
      {
        v6 = v16[0];
        v7 = (_QWORD *)v16[1];
        sub_1BA92F1BC((uint64_t)&v17, (uint64_t)v20);
        v8 = 0;
        v19[0] = v6;
      }
      v19[1] = v7;
      v20[40] = v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BAC7A404(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v21;
      }
      v14 = *(_QWORD *)(v2 + 16);
      v13 = *(_QWORD *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC7A404(v13 > 1, v14 + 1, 1);
        v2 = v21;
      }
      *(_QWORD *)(v2 + 16) = v14 + 1;
      sub_1BA92F644((uint64_t)v19, v2 + (v14 << 6) + 32);
      v4 += 64;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1BA92EDD4(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  __int128 v43;
  objc_super v44;
  _QWORD v45[27];

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_uploadService;
  type metadata accessor for DebugFormatUploadService();
  swift_allocObject();
  v7 = v2;
  *(_QWORD *)&v2[v6] = sub_1BAFC2024();
  v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_entries] = a2;
  swift_retain_n();
  swift_bridgeObjectRetain();
  v45[5] = sub_1BB19544C();
  v45[6] = v9;
  v45[7] = v10;
  LOBYTE(v45[0]) = 0;
  v11 = swift_bridgeObjectRetain();
  sub_1BB195614(v11, (uint64_t)v45);
  v45[8] = v12;
  v45[9] = v13;
  v45[10] = v14;
  LOBYTE(v45[0]) = 1;
  v15 = swift_bridgeObjectRetain();
  sub_1BB195614(v15, (uint64_t)v45);
  v45[11] = v16;
  v45[12] = v17;
  v45[13] = v18;
  LOBYTE(v45[0]) = 2;
  v19 = swift_bridgeObjectRetain();
  sub_1BB195614(v19, (uint64_t)v45);
  v45[14] = v20;
  v45[15] = v21;
  v45[16] = v22;
  LOBYTE(v45[0]) = 4;
  v23 = swift_bridgeObjectRetain();
  sub_1BB195614(v23, (uint64_t)v45);
  v45[17] = v24;
  v45[18] = v25;
  v45[19] = v26;
  LOBYTE(v45[0]) = 6;
  v27 = swift_bridgeObjectRetain();
  sub_1BB195614(v27, (uint64_t)v45);
  v45[20] = v28;
  v45[21] = v29;
  v45[22] = v30;
  LOBYTE(v45[0]) = 3;
  sub_1BB195614(a2, (uint64_t)v45);
  v31 = 0;
  v45[23] = v32;
  v45[24] = v33;
  v45[25] = v34;
  v35 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(v45[v31 + 7] + 16))
    {
      v40 = v45[v31 + 5];
      v43 = *(_OWORD *)&v45[v31 + 6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45[0] = v35;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BAC7A430(0, *(_QWORD *)(v35 + 16) + 1, 1);
        v35 = v45[0];
      }
      v37 = *(_QWORD *)(v35 + 16);
      v36 = *(_QWORD *)(v35 + 24);
      v38 = v43;
      if (v37 >= v36 >> 1)
      {
        sub_1BAC7A430(v36 > 1, v37 + 1, 1);
        v38 = v43;
        v35 = v45[0];
      }
      *(_QWORD *)(v35 + 16) = v37 + 1;
      v39 = v35 + 24 * v37;
      *(_QWORD *)(v39 + 32) = v40;
      *(_OWORD *)(v39 + 40) = v38;
    }
    v31 += 3;
  }
  while (v31 != 21);
  swift_arrayDestroy();
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections] = v35;

  v44.receiver = v7;
  v44.super_class = ObjectType;
  return objc_msgSendSuper2(&v44, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BA92F0AC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DebugFormatUploadConfirmItem(a2, a1);
  return a2;
}

uint64_t sub_1BA92F0E8(uint64_t a1)
{
  destroy for DebugFormatUploadConfirmItem(a1);
  return a1;
}

uint64_t sub_1BA92F11C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA92F158();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA92F158()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AABF0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&unk_1EF2C2910);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AABF0);
  }
}

uint64_t sub_1BA92F1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA92F158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA92F200(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA92F158();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA92F244()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_uploadService;
  type metadata accessor for DebugFormatUploadService();
  swift_allocObject();
  *(_QWORD *)&v0[v2] = sub_1BAFC2024();
  v3 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BA92F324()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;

  v1 = v0;
  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v2, sel_startAnimating);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v2);
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v4 + 40) = v3;
  sub_1BB872DCC();

  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v5 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setToolbarItems_, v5);

  v6 = objc_msgSend(v1, sel_navigationController);
  if (!v6)
    goto LABEL_4;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_view);

  if (v8)
  {
    objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);

LABEL_4:
    MEMORY[0x1E0C80A78](v6);
    sub_1BB86EC14();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v9 = (void *)sub_1BB87345C();
    sub_1BB86E98C();
    swift_release();

    v10 = (void *)sub_1BB87345C();
    sub_1BB86E9B0();
    swift_release();

    v11 = (void *)sub_1BB87345C();
    sub_1BB86E9F8();
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

uint64_t sub_1BA92F5DC()
{
  uint64_t v0;

  return sub_1BA92D67C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA92F5F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA92F618()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BA92F63C()
{
  uint64_t v0;

  sub_1BA92EBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA92F644(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

unint64_t sub_1BA92F680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AAC00;
  if (!qword_1EF2AAC00)
  {
    v1 = type metadata accessor for DebugFormatUploadService();
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDA9C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AAC00);
  }
  return result;
}

uint64_t sub_1BA92F6C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA92F6F4()
{
  uint64_t v0;

  return sub_1BAFBEC4C(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t initializeBufferWithCopyOfBuffer for FormatMenuImageData(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA92F754(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BA92F754(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_retain();
  else
    return a1;
}

void destroy for FormatMenuImageData(uint64_t a1)
{
  sub_1BA92F770(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_1BA92F770(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_release();
  else

}

uint64_t assignWithCopy for FormatMenuImageData(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA92F754(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA92F770(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatMenuImageData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA92F770(v5, v6);
  return a1;
}

uint64_t sub_1BA92F808(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuImageData()
{
  return &type metadata for FormatMenuImageData;
}

id FeedHeadlineTrack.audioTrack.getter()
{
  id *v0;

  return *v0;
}

uint64_t FeedHeadlineTrack.init(audioTrack:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t initializeWithCopy for DebugFormatLayoutFeedItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for DebugFormatLayoutFeedItem(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DebugFormatLayoutFeedItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatLayoutFeedItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatLayoutFeedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLayoutFeedItem()
{
  return &type metadata for DebugFormatLayoutFeedItem;
}

BOOL static FeedGroupConfigDataKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedGroupConfigDataKind.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedGroupConfigDataKind.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA92FA18()
{
  unint64_t result;

  result = qword_1EF2AAC70;
  if (!qword_1EF2AAC70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigDataKind, &type metadata for FeedGroupConfigDataKind);
    atomic_store(result, (unint64_t *)&qword_1EF2AAC70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupConfigDataKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA92FAA8 + 4 * byte_1BB8857E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA92FADC + 4 * asc_1BB8857E0[v4]))();
}

uint64_t sub_1BA92FADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA92FAE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA92FAECLL);
  return result;
}

uint64_t sub_1BA92FAF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA92FB00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA92FB04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA92FB0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupConfigDataKind()
{
  return &type metadata for FeedGroupConfigDataKind;
}

uint64_t sub_1BA92FB28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(const void *, uint64_t, uint64_t);
  unsigned int (*v62)(const void *, uint64_t, uint64_t);
  void *__dst;
  void *__dsta;
  int *__dstb;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v8;
      v9 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v9;
      v10 = a2[8];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = v10;
      v11 = a2[10];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = v11;
      v60 = a2[12];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = v60;
      v58 = type metadata accessor for DebugNewsroomThemeData();
      v12 = *(int *)(v58 + 48);
      __dst = (void *)(a1 + v12);
      v55 = (char *)a2 + v12;
      v13 = sub_1BB86EB84();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v15;
      v54 = v14;
      v57 = v13;
      if (v15(v55, 1, v13))
      {
        sub_1BA6BF9E8(0);
        memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v55, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
      sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      __dstb = v28;
      v29 = v28[9];
      v30 = a1 + v29;
      v31 = (uint64_t)a2 + v29;
      v32 = *(_QWORD *)(v31 + 8);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_QWORD *)(v30 + 8) = v32;
      *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
      v33 = *(_QWORD *)(v31 + 32);
      *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
      *(_QWORD *)(v30 + 32) = v33;
      v34 = *(_QWORD *)(v31 + 48);
      *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
      *(_QWORD *)(v30 + 48) = v34;
      v35 = *(_QWORD *)(v31 + 64);
      *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
      *(_QWORD *)(v30 + 64) = v35;
      v36 = *(_QWORD *)(v31 + 80);
      *(_QWORD *)(v30 + 72) = *(_QWORD *)(v31 + 72);
      *(_QWORD *)(v30 + 80) = v36;
      v37 = *(_QWORD *)(v31 + 96);
      *(_QWORD *)(v30 + 88) = *(_QWORD *)(v31 + 88);
      *(_QWORD *)(v30 + 96) = v37;
      v38 = *(int *)(v58 + 48);
      v39 = (void *)(v30 + v38);
      v40 = (const void *)(v31 + v38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v61(v40, 1, v57))
      {
LABEL_13:
        sub_1BA6BF9E8(0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_15:
        *(_QWORD *)(a1 + __dstb[10]) = *(uint64_t *)((char *)a2 + __dstb[10]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      v18 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v18;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v19 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v19;
      v20 = a2[8];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = v20;
      v21 = a2[10];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = v21;
      *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
      v22 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v22;
      v59 = type metadata accessor for DebugNewsroomLayoutData();
      v23 = *(int *)(v59 + 52);
      __dsta = (void *)(a1 + v23);
      v56 = (char *)a2 + v23;
      v24 = sub_1BB86EB84();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62 = v26;
      v54 = v25;
      v57 = v24;
      if (v26(v56, 1, v24))
      {
        sub_1BA6BF9E8(0);
        memcpy(__dsta, v56, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v25 + 16))(__dsta, v56, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
      }
      sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
      __dstb = v41;
      v42 = v41[9];
      v43 = a1 + v42;
      v44 = (uint64_t)a2 + v42;
      v45 = *(_QWORD *)(v44 + 8);
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *(_QWORD *)(v43 + 8) = v45;
      v46 = *(_QWORD *)(v44 + 24);
      *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
      *(_QWORD *)(v43 + 24) = v46;
      *(_BYTE *)(v43 + 32) = *(_BYTE *)(v44 + 32);
      v47 = *(_QWORD *)(v44 + 48);
      *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
      *(_QWORD *)(v43 + 48) = v47;
      v48 = *(_QWORD *)(v44 + 64);
      *(_QWORD *)(v43 + 56) = *(_QWORD *)(v44 + 56);
      *(_QWORD *)(v43 + 64) = v48;
      v49 = *(_QWORD *)(v44 + 80);
      *(_QWORD *)(v43 + 72) = *(_QWORD *)(v44 + 72);
      *(_QWORD *)(v43 + 80) = v49;
      *(_BYTE *)(v43 + 88) = *(_BYTE *)(v44 + 88);
      v50 = *(_QWORD *)(v44 + 104);
      *(_QWORD *)(v43 + 96) = *(_QWORD *)(v44 + 96);
      *(_QWORD *)(v43 + 104) = v50;
      v51 = *(int *)(v59 + 52);
      v39 = (void *)(v43 + v51);
      v40 = (const void *)(v44 + v51);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v62(v40, 1, v57))
        goto LABEL_13;
    }
    (*(void (**)(void *, const void *, uint64_t))(v54 + 16))(v39, v40, v57);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v39, 0, 1, v57);
    goto LABEL_15;
  }
  v17 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void sub_1BA930088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_1BA4A2870(a4, a3, a5);
    v13 = type metadata accessor for DebugNewsroomContainer(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t sub_1BA930108(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for DebugNewsroomThemeData();
    v4 = a1 + *(int *)(v3 + 48);
    v5 = sub_1BB86EB84();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
    v9 = a1 + *(int *)(v8 + 36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = *(int *)(v3 + 48);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = type metadata accessor for DebugNewsroomLayoutData();
    v12 = a1 + *(int *)(v11 + 52);
    v5 = sub_1BB86EB84();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v12, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
    sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
    v9 = a1 + *(int *)(v13 + 36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = *(int *)(v11 + 52);
  }
  v14 = v9 + v10;
  if (!v7(v9 + v10, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA930360(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  const void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  void *__dst;
  void *__dsta;
  int *__dstb;
  int *__dstc;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(const void *, uint64_t, uint64_t);
  unsigned int (*v70)(const void *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  if (EnumCaseMultiPayload == 1)
  {
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v9;
    v68 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v68;
    v10 = type metadata accessor for DebugNewsroomThemeData();
    v11 = *(int *)(v10 + 48);
    __dst = (void *)(a1 + v11);
    v66 = v10;
    v58 = (const void *)(a2 + v11);
    v12 = sub_1BB86EB84();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69 = v14;
    v56 = v13;
    v60 = v12;
    if (v14(v58, 1, v12))
    {
      sub_1BA6BF9E8(0);
      memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v58, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
    __dstb = v27;
    v28 = v27[9];
    v29 = a1 + v28;
    v30 = a2 + v28;
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v31;
    *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
    v32 = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    *(_QWORD *)(v29 + 32) = v32;
    v33 = *(_QWORD *)(v30 + 48);
    *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
    *(_QWORD *)(v29 + 48) = v33;
    v34 = *(_QWORD *)(v30 + 64);
    *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
    *(_QWORD *)(v29 + 64) = v34;
    v35 = *(_QWORD *)(v30 + 80);
    *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
    *(_QWORD *)(v29 + 80) = v35;
    v36 = *(_QWORD *)(v30 + 96);
    *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
    *(_QWORD *)(v29 + 96) = v36;
    v37 = *(int *)(v66 + 48);
    v38 = (void *)(v29 + v37);
    v39 = (const void *)(v30 + v37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69(v39, 1, v60))
    {
      sub_1BA6BF9E8(0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v38, v39, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v38, 0, 1, v60);
    }
    *(_QWORD *)(a1 + __dstb[10]) = *(_QWORD *)(a2 + __dstb[10]);
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v16;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v17 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v17;
    v18 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v18;
    v19 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v19;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    v20 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v20;
    v21 = type metadata accessor for DebugNewsroomLayoutData();
    v22 = *(int *)(v21 + 52);
    __dsta = (void *)(a1 + v22);
    v67 = v21;
    v59 = (const void *)(a2 + v22);
    v23 = sub_1BB86EB84();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70 = v25;
    v57 = v24;
    v61 = v23;
    if (v25(v59, 1, v23))
    {
      sub_1BA6BF9E8(0);
      memcpy(__dsta, v59, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dsta, v59, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dsta, 0, 1, v23);
    }
    sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
    __dstc = v41;
    v42 = v41[9];
    v43 = a1 + v42;
    v44 = a2 + v42;
    v45 = *(_QWORD *)(v44 + 8);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = v45;
    v46 = *(_QWORD *)(v44 + 24);
    *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
    *(_QWORD *)(v43 + 24) = v46;
    *(_BYTE *)(v43 + 32) = *(_BYTE *)(v44 + 32);
    v47 = *(_QWORD *)(v44 + 48);
    *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
    *(_QWORD *)(v43 + 48) = v47;
    v48 = *(_QWORD *)(v44 + 64);
    *(_QWORD *)(v43 + 56) = *(_QWORD *)(v44 + 56);
    *(_QWORD *)(v43 + 64) = v48;
    v49 = *(_QWORD *)(v44 + 80);
    *(_QWORD *)(v43 + 72) = *(_QWORD *)(v44 + 72);
    *(_QWORD *)(v43 + 80) = v49;
    *(_BYTE *)(v43 + 88) = *(_BYTE *)(v44 + 88);
    v50 = *(_QWORD *)(v44 + 104);
    *(_QWORD *)(v43 + 96) = *(_QWORD *)(v44 + 96);
    *(_QWORD *)(v43 + 104) = v50;
    v51 = *(int *)(v67 + 52);
    v52 = (void *)(v43 + v51);
    v53 = (const void *)(v44 + v51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v70(v53, 1, v61))
    {
      sub_1BA6BF9E8(0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v52, v53, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v52, 0, 1, v61);
    }
    *(_QWORD *)(a1 + __dstc[10]) = *(_QWORD *)(a2 + __dstc[10]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BA930884(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  const void *v34;
  const void *v35;
  void *__dst;
  void *__dsta;
  int *__dstb;
  int *__dstc;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(const void *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadRemotePackage);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v5 = type metadata accessor for DebugNewsroomThemeData();
      v6 = *(int *)(v5 + 48);
      __dst = (void *)(a1 + v6);
      v40 = v5;
      v34 = (const void *)(a2 + v6);
      v7 = sub_1BB86EB84();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42 = v9;
      if (v9(v34, 1, v7))
      {
        sub_1BA6BF9E8(0);
        memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v34, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      __dstb = v17;
      v18 = v17[9];
      v19 = a1 + v18;
      v20 = a2 + v18;
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
      *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
      *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
      *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
      *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
      *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
      *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
      *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
      *(_QWORD *)(v19 + 80) = *(_QWORD *)(v20 + 80);
      *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
      *(_QWORD *)(v19 + 96) = *(_QWORD *)(v20 + 96);
      v21 = *(int *)(v40 + 48);
      v22 = (void *)(v19 + v21);
      v23 = (const void *)(v20 + v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42(v23, 1, v7))
      {
        sub_1BA6BF9E8(0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v22, v23, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
      }
      *(_QWORD *)(a1 + __dstb[10]) = *(_QWORD *)(a2 + __dstb[10]);
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v11 = type metadata accessor for DebugNewsroomLayoutData();
      v12 = *(int *)(v11 + 52);
      __dsta = (void *)(a1 + v12);
      v41 = v11;
      v35 = (const void *)(a2 + v12);
      v13 = sub_1BB86EB84();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v35, 1, v13))
      {
        sub_1BA6BF9E8(0);
        memcpy(__dsta, v35, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dsta, v35, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dsta, 0, 1, v13);
      }
      sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
      __dstc = v25;
      v26 = v25[9];
      v27 = a1 + v26;
      v28 = a2 + v26;
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
      *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
      *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
      *(_BYTE *)(v27 + 32) = *(_BYTE *)(v28 + 32);
      *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
      *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
      *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
      *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
      *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
      *(_QWORD *)(v27 + 80) = *(_QWORD *)(v28 + 80);
      *(_BYTE *)(v27 + 88) = *(_BYTE *)(v28 + 88);
      *(_QWORD *)(v27 + 96) = *(_QWORD *)(v28 + 96);
      *(_QWORD *)(v27 + 104) = *(_QWORD *)(v28 + 104);
      v29 = *(int *)(v41 + 52);
      v30 = (void *)(v27 + v29);
      v31 = (const void *)(v28 + v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v31, 1, v13))
      {
        sub_1BA6BF9E8(0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v30, v31, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
      }
      *(_QWORD *)(a1 + __dstc[10]) = *(_QWORD *)(a2 + __dstc[10]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for DebugFormatUploadRemotePackage()
{
  uint64_t result;

  result = qword_1EF2AAD08;
  if (!qword_1EF2AAD08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA930EC0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (EnumCaseMultiPayload != 1)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v13 = type metadata accessor for DebugNewsroomLayoutData();
    v14 = *(int *)(v13 + 52);
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    v9 = sub_1BB86EB84();
    v10 = *(_QWORD *)(v9 - 8);
    v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    if (v17(v16, 1, v9))
    {
      sub_1BA6BF9E8(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v15, v16, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
    v20 = v28;
    v29 = *(int *)(v28 + 36);
    v30 = a1 + v29;
    v31 = a2 + v29;
    v32 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v32;
    *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
    *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    *(_BYTE *)(v30 + 88) = *(_BYTE *)(v31 + 88);
    *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
    v33 = *(int *)(v13 + 52);
    v25 = (void *)(v30 + v33);
    v26 = (const void *)(v31 + v33);
    if (v17((const void *)(v31 + v33), 1, v9))
      goto LABEL_8;
LABEL_11:
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
    goto LABEL_12;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v5 = type metadata accessor for DebugNewsroomThemeData();
  v6 = *(int *)(v5 + 48);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1BA6BF9E8(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
  v20 = v19;
  v21 = *(int *)(v19 + 36);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
  *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
  v24 = *(int *)(v5 + 48);
  v25 = (void *)(v22 + v24);
  v26 = (const void *)(v23 + v24);
  if (!v11((const void *)(v23 + v24), 1, v9))
    goto LABEL_11;
LABEL_8:
  sub_1BA6BF9E8(0);
  memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_12:
  *(_QWORD *)(a1 + *(int *)(v20 + 40)) = *(_QWORD *)(a2 + *(int *)(v20 + 40));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BA931288(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadRemotePackage);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      v5 = type metadata accessor for DebugNewsroomThemeData();
      v6 = *(int *)(v5 + 48);
      v7 = (void *)(a1 + v6);
      v8 = (const void *)(a2 + v6);
      v9 = sub_1BB86EB84();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        sub_1BA6BF9E8(0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      v20 = v19;
      v21 = *(int *)(v19 + 36);
      v22 = a1 + v21;
      v23 = a2 + v21;
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
      *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
      *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
      *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
      v24 = *(int *)(v5 + 48);
      v25 = (void *)(v22 + v24);
      v26 = (const void *)(v23 + v24);
      if (v11((const void *)(v23 + v24), 1, v9))
      {
LABEL_9:
        sub_1BA6BF9E8(0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_13:
        *(_QWORD *)(a1 + *(int *)(v20 + 40)) = *(_QWORD *)(a2 + *(int *)(v20 + 40));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      v13 = type metadata accessor for DebugNewsroomLayoutData();
      v14 = *(int *)(v13 + 52);
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      v9 = sub_1BB86EB84();
      v10 = *(_QWORD *)(v9 - 8);
      v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v17(v16, 1, v9))
      {
        sub_1BA6BF9E8(0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v15, v16, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      }
      sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
      v20 = v28;
      v29 = *(int *)(v28 + 36);
      v30 = a1 + v29;
      v31 = a2 + v29;
      v32 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v32;
      *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
      *(_BYTE *)(v30 + 88) = *(_BYTE *)(v31 + 88);
      *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
      v33 = *(int *)(v13 + 52);
      v25 = (void *)(v30 + v33);
      v26 = (const void *)(v31 + v33);
      if (v17((const void *)(v31 + v33), 1, v9))
        goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
    goto LABEL_13;
  }
  return a1;
}

void sub_1BA931668()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA930088(319, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
  if (v0 <= 0x3F)
  {
    sub_1BA930088(319, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1BA931728(uint64_t a1)
{
  return sub_1BA93173C(a1);
}

uint64_t sub_1BA93173C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(unint64_t, char *, uint64_t);
  char *v31;
  unint64_t v32;

  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v31 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v29 = (char *)&v27 - v9;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v32 = MEMORY[0x1E0DEE9D8];
  v28 = a1 + 64;
  if (!v13)
    goto LABEL_7;
LABEL_4:
  for (v13 &= v13 - 1; ; v13 = (v18 - 1) & v18)
  {
    swift_bridgeObjectRetain();
    sub_1BB86EBA8();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      result = sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v21 = v29;
      v20(v29, v4, v5);
      v30 = (uint64_t (*)(unint64_t, char *, uint64_t))v20;
      v20(v31, v21, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_1BA791970(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
      v23 = *(_QWORD *)(v32 + 16);
      v22 = *(_QWORD *)(v32 + 24);
      v24 = v23 + 1;
      v10 = v28;
      if (v23 >= v22 >> 1)
      {
        v27 = v23 + 1;
        v26 = sub_1BA791970(v22 > 1, v23 + 1, 1, v32);
        v24 = v27;
        v32 = v26;
      }
      v25 = v32;
      *(_QWORD *)(v32 + 16) = v24;
      result = v30(v25+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v23, v31, v5);
      if (v13)
        goto LABEL_4;
    }
LABEL_7:
    v17 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v14)
      goto LABEL_29;
    v18 = *(_QWORD *)(v10 + 8 * v17);
    ++v16;
    if (!v18)
    {
      v16 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_29;
      v18 = *(_QWORD *)(v10 + 8 * v16);
      if (!v18)
      {
        v16 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_29;
        v18 = *(_QWORD *)(v10 + 8 * v16);
        if (!v18)
        {
          v16 = v17 + 3;
          if (v17 + 3 >= v14)
            goto LABEL_29;
          v18 = *(_QWORD *)(v10 + 8 * v16);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    ;
  }
  v19 = v17 + 4;
  if (v19 >= v14)
  {
LABEL_29:
    swift_release();
    return v32;
  }
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v16 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v16 >= v14)
      goto LABEL_29;
    v18 = *(_QWORD *)(v10 + 8 * v16);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_1BA931A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t *v16;
  uint64_t (*v17)();
  unint64_t *v18;
  void *v19;
  uint64_t v20;
  _QWORD *v22[2];

  v1 = v0;
  sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v22 - v3;
  sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v22 - v6;
  v8 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA86B440(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA931F34((uint64_t)v10, (uint64_t)v4, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
    if (*((_QWORD *)v4 + 12))
    {
      v11 = swift_bridgeObjectRetain();
      v12 = (_QWORD *)sub_1BA93173C(v11);
      swift_bridgeObjectRelease();
      v22[0] = v12;
      swift_bridgeObjectRetain();
      sub_1BA931EB4(v22);
      swift_bridgeObjectRelease();
      v13 = v22[0];
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v16 = &qword_1EF2AAC88;
    v17 = type metadata accessor for DebugNewsroomThemeData;
    v18 = &qword_1EF2AAC90;
    v19 = &unk_1BB89B6E8;
    v20 = (uint64_t)v4;
  }
  else
  {
    sub_1BA931F34((uint64_t)v10, (uint64_t)v7, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
    if (*((_QWORD *)v7 + 13))
    {
      v14 = swift_bridgeObjectRetain();
      v15 = (_QWORD *)sub_1BA93173C(v14);
      swift_bridgeObjectRelease();
      v22[0] = v15;
      swift_bridgeObjectRetain();
      sub_1BA931EB4(v22);
      swift_bridgeObjectRelease();
      v13 = v22[0];
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v16 = &qword_1EF2AAC78;
    v17 = type metadata accessor for DebugNewsroomLayoutData;
    v18 = &qword_1EF2AAC80;
    v19 = &unk_1BB8A4630;
    v20 = (uint64_t)v7;
  }
  sub_1BA931F88(v20, v16, (uint64_t (*)(uint64_t))v17, v18, (uint64_t)v19);
  return v13;
}

uint64_t sub_1BA931CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t *v10;
  void *v11;
  char v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t (*v15)();
  uint64_t v17;

  sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - v2;
  sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  v7 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA86B440(v0, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = &qword_1EF2AAC90;
    v11 = &unk_1BB89B6E8;
    sub_1BA931F34((uint64_t)v9, (uint64_t)v3, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
    v12 = v3[16];
    v13 = (uint64_t)v3;
    v14 = &qword_1EF2AAC88;
    v15 = type metadata accessor for DebugNewsroomThemeData;
  }
  else
  {
    v10 = &qword_1EF2AAC80;
    v11 = &unk_1BB8A4630;
    sub_1BA931F34((uint64_t)v9, (uint64_t)v6, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
    v12 = v6[88];
    v13 = (uint64_t)v6;
    v14 = &qword_1EF2AAC78;
    v15 = type metadata accessor for DebugNewsroomLayoutData;
  }
  sub_1BA931F88(v13, v14, (uint64_t (*)(uint64_t))v15, v10, (uint64_t)v11);
  return v12 & 1;
}

void sub_1BA931EB4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5[2];

  v2 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BA792CD8(v3);
  v4 = (char *)v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BA931FC4(v5);
  *a1 = v3;
}

uint64_t sub_1BA931F34(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v8;

  sub_1BA930088(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BA931F88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v6;

  sub_1BA930088(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1BA931FC4(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  uint64_t v140;
  char **v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v3 = sub_1BB86EB84();
  v145 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v131 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v142 = (char *)&v127 - v6;
  MEMORY[0x1E0C80A78](v7);
  v139 = (char *)&v127 - v8;
  MEMORY[0x1E0C80A78](v9);
  v138 = (char *)&v127 - v10;
  v11 = (uint64_t)a1[1];
  v12 = sub_1BB8741F4();
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      sub_1BA932A3C(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v141 = a1;
  v128 = v12;
  v134 = v1;
  if (v11 < 2)
  {
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v127 = MEMORY[0x1E0DEE9D8];
    if (v11 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
      if (v19 >= 2)
      {
        v120 = *v141;
        do
        {
          v121 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v120)
            goto LABEL_148;
          v122 = *(_QWORD *)&v17[16 * v121 + 32];
          v123 = *(_QWORD *)&v17[16 * v19 + 24];
          v124 = v134;
          sub_1BA932CB4((unint64_t)&v120[*(_QWORD *)(v145 + 72) * v122], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * v123], v133);
          v134 = v124;
          if (v124)
            break;
          if (v123 < v122)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_1BACAB464((uint64_t)v17);
          if (v121 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v125 = &v17[16 * v121 + 32];
          *(_QWORD *)v125 = v122;
          *((_QWORD *)v125 + 1) = v123;
          v126 = *((_QWORD *)v17 + 2);
          if (v19 > v126)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v126 - v19));
          *((_QWORD *)v17 + 2) = v126 - 1;
          v19 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1BB872E74();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v145 + 80);
    v127 = v15;
    v133 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v132 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v134;
      goto LABEL_58;
    }
    v22 = *v141;
    v143 = v11;
    v23 = v145;
    v24 = *(_QWORD *)(v145 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 16);
    v26 = v138;
    v25(v138, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v139;
    v25(v139, v27, v3);
    v140 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
    LODWORD(v137) = sub_1BB87291C();
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v132;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v135 = v31;
    v144 = v24;
    if (v20 + 2 >= v143)
    {
      v41 = v134;
      v40 = v143;
      v39 = v24;
      if ((v137 & 1) == 0)
        break;
    }
    else
    {
      v129 = v17;
      v136 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v138;
        v25(v138, &v33[v34], v3);
        v37 = v139;
        v25(v139, &v33[v136], v3);
        v38 = sub_1BB87291C();
        v29(v37, v3);
        v29(v36, v3);
        if (((v137 ^ v38) & 1) != 0)
        {
          v41 = v134;
          v17 = v129;
          v32 = v35;
          v20 = v132;
          v40 = v143;
          v39 = v144;
          if ((v137 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v144;
        v33 += v144;
      }
      while (v143 != v35 + 1);
      v40 = v143;
      v32 = v143;
      v41 = v134;
      v17 = v129;
      v20 = v132;
      if ((v137 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v129 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v141;
    v140 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v135)
          goto LABEL_147;
        v48 = v41;
        v49 = &v135[v46];
        v50 = &v135[v43];
        v137 = *(char **)(v145 + 32);
        ((void (*)(char *, char *, uint64_t))v137)(v131, &v135[v46], v3);
        if (v46 < v43 || v49 >= &v135[v44])
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(char *, char *, uint64_t))v137)(v50, v131, v3);
        v41 = v48;
        v32 = v140;
        v47 = v141;
        v39 = v144;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v129;
    v20 = v132;
    v40 = v143;
    if (v32 < v143)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v134 = v41;
    v140 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_1BACAA368(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v69 = *((_QWORD *)v17 + 2);
    v68 = *((_QWORD *)v17 + 3);
    v19 = v69 + 1;
    if (v69 >= v68 >> 1)
      v17 = sub_1BACAA368((char *)(v68 > 1), v69 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v70 = v17 + 32;
    v71 = &v17[16 * v69 + 32];
    v72 = v140;
    *(_QWORD *)v71 = v20;
    *((_QWORD *)v71 + 1) = v72;
    if (v69)
    {
      while (1)
      {
        v73 = v19 - 1;
        if (v19 >= 4)
        {
          v78 = &v70[16 * v19];
          v79 = *((_QWORD *)v78 - 8);
          v80 = *((_QWORD *)v78 - 7);
          v84 = __OFSUB__(v80, v79);
          v81 = v80 - v79;
          if (v84)
            goto LABEL_124;
          v83 = *((_QWORD *)v78 - 6);
          v82 = *((_QWORD *)v78 - 5);
          v84 = __OFSUB__(v82, v83);
          v76 = v82 - v83;
          v77 = v84;
          if (v84)
            goto LABEL_125;
          v85 = v19 - 2;
          v86 = &v70[16 * v19 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v84 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v84)
            goto LABEL_127;
          v84 = __OFADD__(v76, v89);
          v90 = v76 + v89;
          if (v84)
            goto LABEL_130;
          if (v90 >= v81)
          {
            v108 = &v70[16 * v73];
            v110 = *(_QWORD *)v108;
            v109 = *((_QWORD *)v108 + 1);
            v84 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v84)
              goto LABEL_134;
            v101 = v76 < v111;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v102 = *((_QWORD *)v17 + 4);
            v103 = *((_QWORD *)v17 + 5);
            v84 = __OFSUB__(v103, v102);
            v95 = v103 - v102;
            v96 = v84;
            goto LABEL_89;
          }
          v75 = *((_QWORD *)v17 + 4);
          v74 = *((_QWORD *)v17 + 5);
          v84 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          v77 = v84;
        }
        if ((v77 & 1) != 0)
          goto LABEL_126;
        v85 = v19 - 2;
        v91 = &v70[16 * v19 - 32];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v94 = __OFSUB__(v92, v93);
        v95 = v92 - v93;
        v96 = v94;
        if (v94)
          goto LABEL_129;
        v97 = &v70[16 * v73];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v84 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v84)
          goto LABEL_132;
        if (__OFADD__(v95, v100))
          goto LABEL_133;
        if (v95 + v100 >= v76)
        {
          v101 = v76 < v100;
LABEL_95:
          if (v101)
            v73 = v85;
          goto LABEL_97;
        }
LABEL_89:
        if ((v96 & 1) != 0)
          goto LABEL_128;
        v104 = &v70[16 * v73];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v84 = __OFSUB__(v105, v106);
        v107 = v105 - v106;
        if (v84)
          goto LABEL_131;
        if (v107 < v95)
          goto LABEL_14;
LABEL_97:
        v112 = v73 - 1;
        if (v73 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v141)
          goto LABEL_146;
        v113 = v17;
        v114 = &v70[16 * v112];
        v115 = *(_QWORD *)v114;
        v116 = &v70[16 * v73];
        v117 = *((_QWORD *)v116 + 1);
        v118 = v134;
        sub_1BA932CB4((unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v114], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v116], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * v117], v133);
        v134 = v118;
        if (v118)
          goto LABEL_118;
        if (v117 < v115)
          goto LABEL_121;
        if (v73 > *((_QWORD *)v113 + 2))
          goto LABEL_122;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v70[16 * v112 + 8] = v117;
        v119 = *((_QWORD *)v113 + 2);
        if (v73 >= v119)
          goto LABEL_123;
        v17 = v113;
        v19 = v119 - 1;
        memmove(&v70[16 * v73], v116 + 16, 16 * (v119 - 1 - v73));
        *((_QWORD *)v113 + 2) = v119 - 1;
        if (v119 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (uint64_t)v141[1];
    v18 = v140;
    if (v140 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v141;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v128)
    goto LABEL_58;
  if (__OFADD__(v20, v128))
    goto LABEL_143;
  if (v20 + v128 >= v40)
    v51 = v40;
  else
    v51 = v20 + v128;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v129 = v17;
      v130 = v51;
      v52 = *(_QWORD *)(v145 + 72);
      v53 = *(char **)(v145 + 16);
      v134 = v41;
      v135 = v53;
      v54 = v52 * (v32 - 1);
      v136 = v52;
      v144 = v32 * v52;
      do
      {
        v56 = 0;
        v140 = v32;
        v137 = (char *)v54;
        while (1)
        {
          v143 = v20;
          v57 = *v47;
          v58 = v138;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v135;
          ((void (*)(char *, char *, uint64_t))v135)(v138, &(*v47)[v144 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v139;
          v60(v139, v61, v3);
          sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
          LOBYTE(v57) = sub_1BB87291C();
          v63 = *(void (**)(_QWORD, _QWORD))(v145 + 8);
          v63(v62, v3);
          v63(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v64 = *v59;
          if (!*v59)
            goto LABEL_145;
          v54 = (uint64_t)v137;
          v65 = &v137[(_QWORD)v64 + v56];
          v66 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 32);
          v66(v142, &v64[v144 + v56], v3);
          swift_arrayInitWithTakeFrontToBack();
          v66(v65, v142, v3);
          v56 -= v136;
          v20 = v143 + 1;
          v55 = v140;
          v47 = v141;
          if (v140 == v143 + 1)
            goto LABEL_51;
        }
        v55 = v140;
        v47 = v59;
        v54 = (uint64_t)v137;
LABEL_51:
        v32 = v55 + 1;
        v54 += v136;
        v144 += v136;
        v20 = v132;
      }
      while (v32 != v130);
      v32 = v130;
      v41 = v134;
      v17 = v129;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BA932A3C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_1BB86EB84();
  v36 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v26 - v10;
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
LABEL_5:
    v15 = 0;
    v16 = v28;
    while (1)
    {
      v17 = *a4;
      v18 = v31;
      v19 = v29;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v31, v37 + v15 + *a4, v7, v12);
      v20 = v32;
      v19(v32, v38 + v15 + v17, v7);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
      LOBYTE(v17) = sub_1BB87291C();
      v21 = (void (*)(char *, uint64_t))v36[1];
      v22 = v20;
      a4 = v30;
      v21(v22, v7);
      v21(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v38 += v33;
        v37 += v33;
        if (++v34 == v27)
          return;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = (char *)(v23 + v38 + v15);
      v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
      v25(v35, v23 + v37 + v15, v7);
      swift_arrayInitWithTakeFrontToBack();
      v25(v24, (uint64_t)v35, v7);
      v15 -= v33;
      if (v34 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BA932CB4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v8 = sub_1BB86EB84();
  v9 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v47 = (char *)&v42 - v12;
  v49 = v9[9];
  if (!v49)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v49 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v49 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v49;
  v52 = a1;
  v51 = a4;
  v15 = v13 / v49;
  if (v14 >= v13 / v49)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v49;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v17;
      v50 = a4 + v17;
      v52 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v30 = -v49;
        v43 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v44 = v9;
        v45 = a4;
        v46 = a1;
        do
        {
          v49 = a3 + v30;
          v31 = v47;
          v32 = v43;
          v43(v47, v28 + v30, v8);
          v33 = a2 + v30;
          v34 = v30;
          v35 = v48;
          v32(v48, v33, v8);
          sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
          LOBYTE(v32) = sub_1BB87291C();
          v36 = (void (*)(char *, uint64_t))v9[1];
          v36(v35, v8);
          v36(v31, v8);
          if ((v32 & 1) != 0)
          {
            v30 = v34;
            v37 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v52 += v30;
          }
          else
          {
            v40 = v50;
            v50 += v34;
            v30 = v34;
            v37 = v49;
            if (a3 < v40 || v49 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack();
              v33 = a2;
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != v40)
                swift_arrayInitWithTakeBackToFront();
              v33 = a2;
            }
          }
          v28 = v50;
          if (v50 <= v38)
            break;
          a2 = v33;
          a3 = v37;
        }
        while (v33 > v39);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v49;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v46 = a4 + v16;
    v50 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v47;
        v19(v47, a2, v8);
        v22 = v48;
        v19(v48, a4, v8);
        sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
        v23 = sub_1BB87291C();
        v24 = (void (*)(char *, uint64_t))v9[1];
        v24(v22, v8);
        v24(v21, v8);
        v25 = v52;
        if ((v23 & 1) != 0)
        {
          v26 = a2 + v49;
          if (v52 < a2 || v52 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 == a2)
              v25 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v27 = v51 + v49;
          if (v52 < v51 || v52 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 != v51)
              swift_arrayInitWithTakeBackToFront();
          }
          v51 = v27;
          v26 = a2;
        }
        v52 = v25 + v49;
        a4 = v51;
        if (v51 >= v46)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_60:
    sub_1BACAAB64(&v52, &v51, (uint64_t *)&v50);
    return 1;
  }
LABEL_64:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t FeedGroupKnobsRuleValue.__allocating_init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 80) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112), a1);
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = a2;
  return v4;
}

uint64_t static FeedGroupKnobsRuleValue.== infix(_:_:)()
{
  if ((sub_1BB872958() & 1) != 0)
    type metadata accessor for FeedGroupKnobsRuleValue.Selector();
  return 0;
}

void FeedGroupKnobsRuleValue.value(for:)()
{
  type metadata accessor for FeedGroupKnobsRuleValue.Selector();
}

uint64_t sub_1BA9333A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v5);
  v6 = sub_1BB873168();
  if ((v6 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v3, v2 + *(_QWORD *)(*(_QWORD *)v2 + 112), v0);
  *(_QWORD *)(v4 - 136) = &v8;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 144) = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  MEMORY[0x1E0C80A78](v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
  sub_1BB872C4C();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA9334C8()
{
  swift_allocObject();
  sub_1BA935198();
}

void sub_1BA933510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[15];
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;

  v46 = *(_QWORD **)v0;
  v48 = v46[10];
  v1 = v48;
  v2 = sub_1BB873A2C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v41[13] = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41[11] = (char *)v41 - v6;
  MEMORY[0x1E0C80A78](v7);
  v41[8] = (char *)v41 - v8;
  MEMORY[0x1E0C80A78](v9);
  v41[6] = (char *)v41 - v10;
  MEMORY[0x1E0C80A78](v11);
  v42 = (char *)v41 - v12;
  v13 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v14);
  v41[3] = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v41[2] = (char *)v41 - v17;
  MEMORY[0x1E0C80A78](v18);
  v41[1] = (char *)v41 - v19;
  MEMORY[0x1E0C80A78](v20);
  v41[14] = (char *)v41 - v21;
  MEMORY[0x1E0C80A78](v22);
  v41[0] = (char *)v41 - v23;
  MEMORY[0x1E0C80A78](v24);
  v43 = (char *)v41 - v25;
  sub_1BB874218();
  v26 = *(_QWORD *)(v3 + 72);
  swift_allocObject();
  v27 = sub_1BB872E2C();
  v29 = v28;
  v30 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  v45 = v3;
  v31 = *(void (**)(uint64_t))(v3 + 16);
  v41[5] = v30;
  v31(v29);
  v41[4] = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v31(v29 + v26);
  v41[7] = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  v31(v29 + 2 * v26);
  v41[9] = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  v31(v29 + 3 * v26);
  v53 = sub_1BA69C794(v27);
  v32 = v46[11];
  v33 = (char *)v46[12];
  v34 = v48;
  v49 = v48;
  v50 = v32;
  v35 = (_QWORD *)v46[13];
  v51 = v33;
  v52 = v35;
  v46 = v35;
  v47 = v32;
  v36 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v36);
  v37 = v44;
  v38 = sub_1BB872BF8();
  v41[12] = v37;
  swift_bridgeObjectRelease();
  v53 = v38;
  v39 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v39);
  v40 = v42;
  sub_1BB873144();
  swift_bridgeObjectRelease();
  v44 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v40, 1, v34) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v2);
    v53 = v34;
    v54 = v47;
    v55 = v33;
    v56 = v46;
    type metadata accessor for LegacyFeedGroupKnobsRuleValue.Errors();
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v40, v34);
  v53 = v34;
  v54 = v47;
  v42 = v33;
  v55 = v33;
  v56 = v46;
  type metadata accessor for FeedGroupKnobsRuleValue.Selector();
}

void sub_1BA93393C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  *(_QWORD *)(v5 - 72) = sub_1BB872748();
  v6 = *(_QWORD *)(v5 - 304);
  v2(v6, *(_QWORD *)(v5 - 320), v0);
  v7 = v3(v6, 1, v1);
  v8 = v0;
  *(_QWORD *)(v5 - 272) = v4;
  if (v7 == 1)
  {
    v9 = *(_QWORD *)(v5 - 208);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    v10 = *(_QWORD *)(v5 - 240);
  }
  else
  {
    v11 = *(_QWORD *)(v5 - 352);
    v4(v11, v6, v1);
    v12 = *(_QWORD *)(v5 - 216);
    v10 = *(_QWORD *)(v5 - 240);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v11, v1);
    v13 = (char *)swift_allocObject();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v13 + 80) - 8) + 32))(&v13[*(_QWORD *)(*(_QWORD *)v13 + 120)], v10);
    *((_QWORD *)v13 + 2) = 0xD00000000000001ELL;
    *((_QWORD *)v13 + 3) = 0x80000001BB9638A0;
    *(_QWORD *)(v5 - 120) = v13;
    sub_1BB872EE0();
    sub_1BB872EB0();
    v1 = *(_QWORD *)(v5 - 184);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v1);
    v9 = *(_QWORD *)(v5 - 208);
  }
  v14 = *(_QWORD *)(v5 - 288);
  v2(v14, *(_QWORD *)(v5 - 312), v8);
  if (v3(v14, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v5 - 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 272))(v15, v14, v1);
    v16 = *(_QWORD *)(v5 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v15, v1);
    v17 = (char *)swift_allocObject();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v17 + 80) - 8) + 32))(&v17[*(_QWORD *)(*(_QWORD *)v17 + 120)], v10);
    *((_QWORD *)v17 + 2) = 0xD000000000000022;
    *((_QWORD *)v17 + 3) = 0x80000001BB963870;
    *(_QWORD *)(v5 - 120) = v17;
    sub_1BB872EE0();
    sub_1BB872EB0();
    v1 = *(_QWORD *)(v5 - 184);
    v9 = *(_QWORD *)(v5 - 208);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v1);
  }
  v18 = *(_QWORD *)(v5 - 264);
  v19 = *(_QWORD *)(v5 - 296);
  *(_QWORD *)(v5 - 240) = v2;
  v2(v18, v19, v8);
  if (v3(v18, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, v8);
  }
  else
  {
    v20 = *(_QWORD *)(v5 - 336);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 272))(v20, v18, v1);
    v21 = *(_QWORD *)(v5 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v10, v20, v1);
    v22 = (char *)swift_allocObject();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v22 + 80) - 8) + 32))(&v22[*(_QWORD *)(*(_QWORD *)v22 + 120)], v10);
    *((_QWORD *)v22 + 2) = 0xD00000000000001BLL;
    *((_QWORD *)v22 + 3) = 0x80000001BB963850;
    *(_QWORD *)(v5 - 120) = v22;
    sub_1BB872EE0();
    sub_1BB872EB0();
    v1 = *(_QWORD *)(v5 - 184);
    v9 = *(_QWORD *)(v5 - 208);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v1);
  }
  v23 = *(_QWORD *)(v5 - 248);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 240))(v23, *(_QWORD *)(v5 - 280), v8);
  if (v3(v23, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v8);
  }
  else
  {
    v25 = *(_QWORD *)(v5 - 328);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 272))(v25, v23, v1);
    v26 = *(_QWORD *)(v5 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v10, v25, v1);
    v27 = (char *)swift_allocObject();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v27 + 80) - 8) + 32))(&v27[*(_QWORD *)(*(_QWORD *)v27 + 120)], v10);
    *((_QWORD *)v27 + 2) = 0xD000000000000019;
    *((_QWORD *)v27 + 3) = 0x80000001BB963830;
    *(_QWORD *)(v5 - 120) = v27;
    sub_1BB872EE0();
    sub_1BB872EB0();
    v1 = *(_QWORD *)(v5 - 184);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v1);
  }
  v24 = *(_QWORD *)(v5 - 200);
  v28 = *(_QWORD *)(v5 - 192);
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v28;
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 96) = v24;
  type metadata accessor for FeedGroupKnobsRuleValue();
}

void sub_1BA933DA8()
{
  void (*v0)(uint64_t, _QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0(v2, *(_QWORD *)(v3 - 224), v1);
  v4 = *(_QWORD *)(v3 - 72);
  v5 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 80) - 8) + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112), v2);
  *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120)) = v4;
  JUMPOUT(0x1BA933E04);
}

void FeedGroupKnobsRuleValue.encode(to:)()
{
  type metadata accessor for FeedGroupKnobsRuleValue.CodingKeys();
}

void sub_1BA933E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v15 - 184) = MEMORY[0x1BCCE5B24](&unk_1BB885D68, a1);
  v16 = sub_1BB8741D0();
  *(_QWORD *)(v15 - 168) = v16;
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v15 - 176) = (char *)&a9 - v17;
  v18 = *(_QWORD *)(v13 + 120);
  *(_QWORD *)(v15 - 160) = v9;
  *(_QWORD *)(v15 - 152) = v10;
  *(_QWORD *)(v15 - 72) = *(_QWORD *)(v9 + v18);
  *(_QWORD *)(v15 - 144) = v14;
  *(_QWORD *)(v15 - 128) = v14;
  *(_QWORD *)(v15 - 120) = v11;
  *(_QWORD *)(v15 - 112) = v10;
  *(_QWORD *)(v15 - 104) = v12;
  type metadata accessor for FeedGroupKnobsRuleValue.Selector();
}

uint64_t sub_1BA933EF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v6);
  if ((sub_1BB873168() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1(v4 - 128, *(_QWORD *)(v4 - 104));
    sub_1BB874404();
    return __swift_destroy_boxed_opaque_existential_1(v4 - 128);
  }
  else
  {
    *(_QWORD *)(v4 - 208) = a1;
    *(_QWORD *)(v4 - 200) = v2;
    *(_QWORD *)(v4 - 192) = v1;
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    v8 = *(_QWORD *)(v4 - 176);
    sub_1BB8746C8();
    v9 = *(_QWORD *)(v4 - 168);
    *(_BYTE *)(v4 - 128) = 0;
    v10 = *(_QWORD *)(v4 - 136);
    sub_1BB8741AC();
    if (!v10)
    {
      v11 = *(_QWORD *)(v4 - 208);
      *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 200);
      *(_BYTE *)(v4 - 72) = 1;
      *(_QWORD *)(v4 - 88) = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>.Selector, v11);
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v6, v4 - 88);
      sub_1BB8741AC();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 192) + 8))(v8, v9);
  }
}

uint64_t FeedGroupKnobsRuleValue.init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112), a1);
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = a2;
  return v2;
}

uint64_t sub_1BA9340E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a4;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v14 - v11;
  sub_1BA934258(a2, (uint64_t)&v14 - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, a3) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v8, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v12, a3);
  }
}

uint64_t sub_1BA93422C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA9340E4(a1, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), a2);
}

void type metadata accessor for LegacyFeedGroupKnobsRuleValue()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA934258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v19[2];

  v3 = v2;
  v17 = *(_QWORD *)v2;
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v5 = *((_QWORD *)v2 + 3);
  v19[0] = *((_QWORD *)v2 + 2);
  v19[1] = v5;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E583C(v19);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v6 + 64);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BA71D208(a1, v9);
      v12 = sub_1BA6EB330(v11, v9);
      swift_release();
      if ((v12 & 1) != 0)
      {
        v13 = sub_1BA6EBD20(a1, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v14 = *(_QWORD *)(v17 + 80);
          v15 = *(_QWORD *)(v14 - 8);
          (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a2, &v3[*(_QWORD *)(*(_QWORD *)v3 + 120)], v14);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v8 += 5;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v17 + 80) - 8) + 56))(a2, 1, 1, *(_QWORD *)(v17 + 80));
}

char *FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (char *)swift_allocObject();
  v6 = *a2;
  v5 = a2[1];
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 80) - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 120)], a1);
  *((_QWORD *)v4 + 2) = v6;
  *((_QWORD *)v4 + 3) = v5;
  return v4;
}

char *FeedGroupKnobsRuleValue.Selector.init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)], a1);
  *((_QWORD *)v2 + 2) = v3;
  *((_QWORD *)v2 + 3) = v4;
  return v2;
}

uint64_t static FeedGroupKnobsRuleValue.Selector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v2 || (sub_1BB874398() & 1) != 0)
    return sub_1BB872958() & 1;
  else
    return 0;
}

uint64_t FeedGroupKnobsRuleValue.Selector.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  sub_1BB872AFC(0);
  swift_getMetatypeMetadata();
  sub_1BB872A00();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB874344();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BA934678(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL sub_1BA934760(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA86B630(*a1, *a2);
}

uint64_t sub_1BA934778()
{
  return sub_1BA86B734();
}

uint64_t sub_1BA93478C()
{
  return sub_1BA86B640();
}

uint64_t sub_1BA9347A0()
{
  sub_1BB8745CC();
  sub_1BA86B640();
  return sub_1BB874608();
}

uint64_t sub_1BA9347E8(_QWORD *a1, uint64_t a2)
{
  return sub_1BA934F5C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA80E778);
}

uint64_t sub_1BA9347F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1BA9363F0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA934678, a4);
}

uint64_t sub_1BA934800@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1BA936430(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BA86D32C, a2);
}

uint64_t sub_1BA93480C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885D18, a1);
  return sub_1BB874710();
}

uint64_t sub_1BA934840(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885D18, a1);
  return sub_1BB87471C();
}

uint64_t *FeedGroupKnobsRuleValue.Selector.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  return v0;
}

uint64_t FeedGroupKnobsRuleValue.Selector.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  return swift_deallocClassInstance();
}

void FeedGroupKnobsRuleValue.Selector.encode(to:)()
{
  type metadata accessor for FeedGroupKnobsRuleValue.Selector.CodingKeys();
}

uint64_t sub_1BA934950(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  MEMORY[0x1BCCE5B24](&unk_1BB885D18, a1);
  v5 = sub_1BB8741D0();
  *(_QWORD *)(v4 - 120) = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1BB8746C8();
  v8 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v4 - 104) = v8;
  *(_BYTE *)(v4 - 65) = 0;
  sub_1BA68660C();
  sub_1BB8741AC();
  if (v3)
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v7, v5);
  v10 = *(_QWORD *)(v4 - 120);
  *(_BYTE *)(v4 - 112) = 1;
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v5);
}

uint64_t FeedGroupKnobsRuleValue.Selector.__allocating_init(from:)(uint64_t a1)
{
  return sub_1BA60EF0C(a1, (void (*)(uint64_t))FeedGroupKnobsRuleValue.Selector.init(from:));
}

void FeedGroupKnobsRuleValue.Selector.init(from:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  __int128 v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v6[1] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v2 + 104);
  v9 = v3;
  v7 = *(_OWORD *)(v2 + 88);
  v10 = v7;
  v11 = v5;
  type metadata accessor for FeedGroupKnobsRuleValue.Selector.CodingKeys();
}

char *sub_1BA934B38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  MEMORY[0x1BCCE5B24](&unk_1BB885D18, a1);
  v4 = sub_1BB874104();
  *(_QWORD *)(v3 - 136) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 144) = v7;
  v8 = *(char **)(v3 - 128);
  v9 = *(_QWORD *)(v3 - 120);
  sub_1BB87468C();
  if (v9)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = *(_QWORD *)(v3 - 152);
    *(_BYTE *)(v3 - 65) = 0;
    sub_1BA69C13C();
    v11 = *(_QWORD *)(v3 - 144);
    sub_1BB8740D4();
    v12 = *(_QWORD *)(v3 - 104);
    *((_QWORD *)v8 + 2) = *(_QWORD *)(v3 - 112);
    *((_QWORD *)v8 + 3) = v12;
    *(_BYTE *)(v3 - 112) = 1;
    sub_1BB8740D4();
    (*(void (**)(uint64_t, _QWORD))(v5 + 8))(v11, *(_QWORD *)(v3 - 136));
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 32))(&v8[*(_QWORD *)(*(_QWORD *)v8 + 120)], v10, v2);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  return v8;
}

uint64_t sub_1BA934CEC()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1BA934D3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = FeedGroupKnobsRuleValue.Selector.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1BA934D64()
{
  FeedGroupKnobsRuleValue.Selector.encode(to:)();
}

uint64_t sub_1BA934D84(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRuleValue.Selector.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BA934D90()
{
  return FeedGroupKnobsRuleValue.Selector.description.getter();
}

uint64_t sub_1BA934DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885B48, a3);
  return sub_1BB874440();
}

uint64_t sub_1BA934E04(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885B48, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BA934E50()
{
  MEMORY[0x1BCCE5B24](&unk_1BB885B48);
  return sub_1BB872D54();
}

uint64_t sub_1BA934EA0()
{
  MEMORY[0x1BCCE5B24](&unk_1BB885B48);
  return sub_1BB872D48();
}

uint64_t sub_1BA934EF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA934CEC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA934F28@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA810390(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA934F5C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1BA934F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1BA9363F0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA934CEC, a4);
}

uint64_t sub_1BA934F80(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885D68, a1);
  return sub_1BB874710();
}

uint64_t sub_1BA934FB4(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885D68, a1);
  return sub_1BB87471C();
}

void FeedGroupKnobsRuleValue.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_1BB873CB4();
  sub_1BB872AFC("mViewController.swift");
  swift_getMetatypeMetadata();
  sub_1BB872A00();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB874344();
  sub_1BB872AFC(v2);
  type metadata accessor for FeedGroupKnobsRuleValue.Selector();
}

uint64_t sub_1BA9350FC()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF68], v0);
  sub_1BB874350();
  return v2;
}

void sub_1BA93514C()
{
  FeedGroupKnobsRuleValue.encode(to:)();
}

uint64_t sub_1BA93516C()
{
  return static FeedGroupKnobsRuleValue.== infix(_:_:)();
}

void sub_1BA935178()
{
  FeedGroupKnobsRuleValue.description.getter();
}

void sub_1BA935198()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[28];

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = sub_1BB873A2C();
  v22[12] = *(_QWORD *)(v3 - 8);
  v22[13] = v3;
  MEMORY[0x1E0C80A78](v3);
  v22[4] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v22[5] = (char *)v22 - v6;
  MEMORY[0x1E0C80A78](v7);
  v22[6] = (char *)v22 - v8;
  MEMORY[0x1E0C80A78](v9);
  v22[7] = (char *)v22 - v10;
  MEMORY[0x1E0C80A78](v11);
  v22[8] = (char *)v22 - v12;
  MEMORY[0x1E0C80A78](v13);
  v22[9] = (char *)v22 - v14;
  MEMORY[0x1E0C80A78](v15);
  v22[10] = (char *)v22 - v16;
  MEMORY[0x1E0C80A78](v17);
  v22[15] = (char *)v22 - v18;
  v20 = v1[11];
  v19 = v1[12];
  v21 = v1[13];
  v22[22] = v2;
  v22[23] = v20;
  v22[3] = v19;
  v22[24] = v19;
  v22[25] = v21;
  v22[2] = v21;
  type metadata accessor for LegacyFeedGroupKnobsRuleValue.CodingKeys();
}

uint64_t sub_1BA93531C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _BYTE *, uint64_t);
  void (*v19)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[96];

  *(_QWORD *)(v5 - 160) = MEMORY[0x1BCCE5B24](&unk_1BB885F40, a1);
  v6 = sub_1BB874104();
  *(_QWORD *)(v5 - 176) = v6;
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 152) = &v51[-v7];
  *(_QWORD *)(v5 - 216) = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v4[3];
  *(_QWORD *)(v5 - 72) = v4;
  __swift_project_boxed_opaque_existential_1(v4, v11);
  v12 = *(_QWORD *)(v5 - 144);
  sub_1BB874674();
  *(_QWORD *)(v5 - 168) = v1;
  if (v12)
  {
    *(_QWORD *)(v5 - 144) = v3;
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v5 - 72), *(_QWORD *)(*(_QWORD *)(v5 - 72) + 24));
    sub_1BB87468C();
    *(_QWORD *)(v5 - 160) = v12;
    *(_BYTE *)(v5 - 128) = 0;
    v13 = *(_QWORD *)(v5 - 184);
    v14 = v2;
    sub_1BB874068();
    v23 = *(_QWORD *)(v5 - 136);
    v24 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 112);
    v25 = *(_QWORD *)(v5 - 200);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 32);
    *(_QWORD *)(v5 - 184) = v26;
    v26(v24, v13, v25);
    *(_BYTE *)(v5 - 128) = 1;
    v27 = *(_QWORD *)(v5 - 224);
    sub_1BB874068();
    *(_QWORD *)(v5 - 296) = v24;
    v28 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 120);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 - 184))(v28, v27, *(_QWORD *)(v5 - 200));
    *(_BYTE *)(v5 - 128) = 2;
    v29 = *(_QWORD *)(v5 - 232);
    sub_1BB874068();
    *(_QWORD *)(v5 - 224) = v28;
    v30 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 128);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 - 184))(v30, v29, *(_QWORD *)(v5 - 200));
    *(_BYTE *)(v5 - 128) = 3;
    v31 = *(_QWORD *)(v5 - 240);
    sub_1BB874068();
    v32 = *(_QWORD *)(v5 - 296);
    *(_QWORD *)(v5 - 232) = v30;
    v34 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 136);
    v35 = *(_QWORD *)(v5 - 200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 184))(v34, v31, v35);
    v36 = *(_QWORD *)(v5 - 208);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v38 = v32;
    v39 = *(_QWORD *)(v5 - 248);
    v37(v39, v38, v35);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 216) + 48);
    v41 = v40(v39, 1, v14);
    *(_QWORD *)(v5 - 144) = v14;
    v42 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v42(v39, v35);
    if (v41 == 1)
    {
      v43 = *(_QWORD *)(v5 - 256);
      v37(v43, *(_QWORD *)(v5 - 224), v35);
      v44 = v40(v43, 1, *(_QWORD *)(v5 - 144));
      v42(v43, v35);
      if (v44 == 1)
      {
        v45 = *(_QWORD *)(v5 - 264);
        v37(v45, *(_QWORD *)(v5 - 232), v35);
        v46 = v40(v45, 1, *(_QWORD *)(v5 - 144));
        v42(v45, v35);
        if (v46 == 1)
        {
          v47 = *(_QWORD *)(v5 - 272);
          v37(v47, v34, v35);
          v48 = v40(v47, 1, *(_QWORD *)(v5 - 144));
          v42(v47, v35);
          if (v48 == 1)
          {
            v49 = *(_QWORD *)(v5 - 168);
            *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 144);
            *(_QWORD *)(v5 - 120) = v49;
            v50 = *(_QWORD *)(v5 - 288);
            *(_QWORD *)(v5 - 112) = *(_QWORD *)(v5 - 280);
            *(_QWORD *)(v5 - 104) = v50;
            type metadata accessor for LegacyFeedGroupKnobsRuleValue.Errors();
          }
        }
      }
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 192) + 8))(*(_QWORD *)(v5 - 152), *(_QWORD *)(v5 - 176));

    v15 = *(_QWORD *)(v5 - 136);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), *(_QWORD *)(v5 - 104));
    sub_1BB8743D4();
    v15 = *(_QWORD *)(v5 - 136);
    v16 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 112);
    v17 = *(_QWORD *)(v5 - 216);
    v18 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 16);
    v18(v16, v10, v2);
    v19 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56);
    v19(v16, 0, 1, v2);
    v20 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 120);
    v18(v20, v10, v2);
    v19(v20, 0, 1, v2);
    v21 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 128);
    v18(v21, v10, v2);
    v19(v21, 0, 1, v2);
    v22 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 136);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(v22, v10, v2);
    v19(v22, 0, 1, v2);
    __swift_destroy_boxed_opaque_existential_1(v5 - 128);
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v5 - 72));
  return v15;
}

uint64_t sub_1BA9359E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, double);
  unsigned int (*v35)(_QWORD, _QWORD, _QWORD);
  void (*v36)(char *, uint64_t);
  char *v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  unsigned int (*v48)(_QWORD, _QWORD, _QWORD);
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  char v55;
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  unsigned int (*v66)(_QWORD, _QWORD, _QWORD);
  unsigned int v67;
  char *v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  char v80;
  char *v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  unsigned int (*v92)(_QWORD, _QWORD, _QWORD);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v93 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v87 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v88 = (char *)&v85 - v12;
  MEMORY[0x1E0C80A78](v13);
  v89 = (char *)&v85 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v85 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v96 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v86 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v85 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v85 - v23;
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v85 - v27;
  v29 = *(_QWORD *)(*(_QWORD *)a1 + 112);
  v94 = a2;
  v95 = a1;
  v30 = a1 + v29;
  v31 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 112);
  v97 = v32;
  v33 = (char *)&v85 + *(int *)(v32 + 48) - v27;
  v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v34((char *)&v85 - v27, v30, v8, v26);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v33, v31, v8);
  v35 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v6 + 48);
  if (v35(v28, 1, v5) == 1)
  {
    v90 = (void (*)(char *, char *, uint64_t))v34;
    if (v35(v33, 1, v5) == 1)
    {
      v92 = v35;
      v36 = *(void (**)(char *, uint64_t))(v9 + 8);
      v36(v28, v8);
      goto LABEL_8;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t))(v96 + 8))(v28, v97);
    goto LABEL_29;
  }
  ((void (*)(char *, char *, uint64_t))v34)(v17, v28, v8);
  if (v35(v33, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
    goto LABEL_6;
  }
  v92 = v35;
  v90 = (void (*)(char *, char *, uint64_t))v34;
  v37 = v93;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v93, v33, v5);
  v38 = sub_1BB872958();
  v39 = v6;
  v40 = *(void (**)(char *, uint64_t))(v6 + 8);
  v40(v37, v5);
  v40(v17, v5);
  v6 = v39;
  v36 = *(void (**)(char *, uint64_t))(v9 + 8);
  v36(v28, v8);
  if ((v38 & 1) == 0)
    goto LABEL_29;
LABEL_8:
  v41 = v94;
  v42 = (char *)(v41 + *(_QWORD *)(*(_QWORD *)v41 + 120));
  v43 = v97;
  v44 = &v24[*(int *)(v97 + 48)];
  v45 = v90;
  v90(v24, (char *)(v95 + *(_QWORD *)(*(_QWORD *)v95 + 120)), v8);
  v46 = v42;
  v47 = v45;
  v45(v44, v46, v8);
  v48 = v92;
  if (v92(v24, 1, v5) == 1)
  {
    if (v48(v44, 1, v5) == 1)
    {
      v92 = v48;
      v36(v24, v8);
      goto LABEL_15;
    }
LABEL_13:
    v50 = *(void (**)(char *, uint64_t))(v96 + 8);
    v51 = v24;
LABEL_28:
    v50(v51, v43);
    goto LABEL_29;
  }
  v49 = v89;
  v47(v89, v24, v8);
  if (v48(v44, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v49, v5);
    goto LABEL_13;
  }
  v92 = v48;
  v52 = v36;
  v53 = v49;
  v54 = v93;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v93, v44, v5);
  v55 = sub_1BB872958();
  v56 = v47;
  v57 = *(void (**)(char *, uint64_t))(v6 + 8);
  v58 = v54;
  v41 = v94;
  v57(v58, v5);
  v59 = v53;
  v36 = v52;
  v43 = v97;
  v57(v59, v5);
  v47 = v56;
  v36(v24, v8);
  if ((v55 & 1) == 0)
    goto LABEL_29;
LABEL_15:
  v60 = (char *)(v41 + *(_QWORD *)(*(_QWORD *)v41 + 128));
  v61 = v91;
  v62 = &v91[*(int *)(v43 + 48)];
  v47(v91, (char *)(v95 + *(_QWORD *)(*(_QWORD *)v95 + 128)), v8);
  v63 = v60;
  v64 = v61;
  v47(v62, v63, v8);
  v65 = v61;
  v66 = v92;
  v67 = v92(v65, 1, v5);
  v92 = v66;
  if (v67 == 1)
  {
    if (v66(v62, 1, v5) == 1)
    {
      v36(v64, v8);
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  v68 = v64;
  v69 = v88;
  v47(v88, v68, v8);
  if (v66(v62, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v69, v5);
    v64 = v91;
LABEL_20:
    v50 = *(void (**)(char *, uint64_t))(v96 + 8);
    v51 = v64;
    goto LABEL_28;
  }
  v70 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v90 = v47;
  v71 = v93;
  v70(v93, v62, v5);
  v72 = sub_1BB872958();
  v73 = v69;
  v74 = *(void (**)(char *, uint64_t))(v6 + 8);
  v75 = v71;
  v47 = v90;
  v74(v75, v5);
  v74(v73, v5);
  v36(v91, v8);
  if ((v72 & 1) == 0)
  {
LABEL_29:
    v80 = 0;
    return v80 & 1;
  }
LABEL_22:
  v76 = (char *)(v41 + *(_QWORD *)(*(_QWORD *)v41 + 136));
  v77 = v86;
  v78 = &v86[*(int *)(v43 + 48)];
  v47(v86, (char *)(v95 + *(_QWORD *)(*(_QWORD *)v95 + 136)), v8);
  v47(v78, v76, v8);
  v79 = (unsigned int (*)(char *, uint64_t, uint64_t))v92;
  if (v92(v77, 1, v5) != 1)
  {
    v47(v87, v77, v8);
    if (v79(v78, 1, v5) != 1)
    {
      v82 = v93;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v93, v78, v5);
      v83 = v87;
      v80 = sub_1BB872958();
      v84 = *(void (**)(char *, uint64_t))(v6 + 8);
      v84(v82, v5);
      v84(v83, v5);
      v36(v77, v8);
      return v80 & 1;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v87, v5);
    goto LABEL_27;
  }
  if (v79(v78, 1, v5) != 1)
  {
LABEL_27:
    v50 = *(void (**)(char *, uint64_t))(v96 + 8);
    v51 = v77;
    goto LABEL_28;
  }
  v36(v77, v8);
  v80 = 1;
  return v80 & 1;
}

uint64_t sub_1BA9360EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6269726373627573 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6373627553746F6ELL && a2 == 0xED00006465626972 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657269707865 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61697274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BA9362CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA936304 + 4 * byte_1BB8858A0[a1]))(0x6269726373627573, 0xEA00000000006465);
}

uint64_t sub_1BA936304()
{
  return 0x6373627553746F6ELL;
}

uint64_t sub_1BA936328()
{
  return 0x64657269707865;
}

uint64_t sub_1BA936340()
{
  return 0x6C61697274;
}

BOOL sub_1BA936354(char *a1, char *a2)
{
  return sub_1BA86BD80(*a1, *a2);
}

uint64_t sub_1BA93636C()
{
  return _s8NewsFeed0B12RefreshStateO9hashValueSivg_0();
}

uint64_t sub_1BA93637C()
{
  return sub_1BA86BD90();
}

uint64_t sub_1BA93638C()
{
  sub_1BB8745CC();
  sub_1BA86BD90();
  return sub_1BB874608();
}

uint64_t sub_1BA9363D4()
{
  unsigned __int8 *v0;

  return sub_1BA9362CC(*v0);
}

uint64_t sub_1BA9363E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1BA9363F0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA9360EC, a4);
}

uint64_t sub_1BA9363F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_1BA936424@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1BA936430(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BA936B78, a2);
}

uint64_t sub_1BA936430@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_1BA936464(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885F40, a1);
  return sub_1BB874710();
}

uint64_t sub_1BA936498(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB885F40, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BA9364CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = sub_1BB873A2C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120), v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128), v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136), v2);
  return v0;
}

uint64_t sub_1BA93655C()
{
  sub_1BA9364CC();
  return swift_deallocClassInstance();
}

void sub_1BA93657C()
{
  type metadata accessor for LegacyFeedGroupKnobsRuleValue.CodingKeys();
}

uint64_t sub_1BA9365C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1BCCE5B24](&unk_1BB885F40, a1);
  v3 = sub_1BB8741D0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1BB8746C8();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_1BB87414C();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_1BB87414C();
    *(_BYTE *)(v2 - 112) = 2;
    sub_1BB87414C();
    *(_BYTE *)(v2 - 112) = 3;
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1BA936764()
{
  sub_1BA9334C8();
}

uint64_t sub_1BA936778(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void sub_1BA93678C()
{
  sub_1BA93657C();
}

uint64_t sub_1BA9367AC(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA9359E8(*a1, *a2);
}

uint64_t method lookup function for FeedGroupKnobsRuleValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.__allocating_init(value:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedGroupKnobsRuleValue.Selector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.Selector.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1BA936810()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB873A2C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA936888(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA9368D4 + 4 * byte_1BB8858A9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA936908 + 4 * byte_1BB8858A4[v4]))();
}

uint64_t sub_1BA936908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA936910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA936918);
  return result;
}

uint64_t sub_1BA936924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA93692CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA936930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA936938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BA936944()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA936954()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA936964()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA936974()
{
  JUMPOUT(0x1BCCE5B24);
}

void type metadata accessor for LegacyFeedGroupKnobsRuleValue.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA936990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BB873A2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void type metadata accessor for LegacyFeedGroupKnobsRuleValue.Errors()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA9369F0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA936A30 + 4 * byte_1BB8858AE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA936A50 + 4 * byte_1BB8858B3[v4]))();
}

_BYTE *sub_1BA936A30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA936A50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA936A58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA936A60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA936A68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA936A70(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1BA936A7C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA936AC8 + 4 * byte_1BB8858BD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA936AFC + 4 * byte_1BB8858B8[v4]))();
}

uint64_t sub_1BA936AFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA936B04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA936B0CLL);
  return result;
}

uint64_t sub_1BA936B18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA936B20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA936B24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA936B2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BA936B38()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA936B48()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA936B58()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA936B68()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BA936B78()
{
  return 4;
}

uint64_t sub_1BA936B80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t i;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;

  v2 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v2);
  v75 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v81 = (uint64_t)&v70 - v5;
  v6 = type metadata accessor for WebEmbedDataVisualization();
  v84 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v72 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v71 = (uint64_t)&v70 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v70 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v70 - v14;
  MEMORY[0x1E0C80A78](v16);
  v78 = (uint64_t)&v70 - v17;
  MEMORY[0x1E0C80A78](v18);
  v77 = (uint64_t)&v70 - v19;
  MEMORY[0x1E0C80A78](v20);
  v83 = (uint64_t *)((char *)&v70 - v21);
  MEMORY[0x1E0C80A78](v22);
  v82 = (uint64_t)&v70 - v23;
  MEMORY[0x1E0C80A78](v24);
  v86 = (uint64_t)&v70 - v25;
  v26 = *(_QWORD *)(a1 + 16);
  v89 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v26, 0);
  v27 = *(_QWORD *)(a1 + 56);
  v79 = a1 + 56;
  v28 = -1;
  v29 = -1 << *(_BYTE *)(a1 + 32);
  if (-v29 < 64)
    v28 = ~(-1 << -(char)v29);
  v30 = v28 & v27;
  v76 = a1;
  v85 = v6;
  v74 = v26;
  if (v26)
  {
    v80 = (unint64_t)(63 - v29) >> 6;
    swift_bridgeObjectRetain();
    v31 = 0;
    v32 = 0;
    v73 = v12;
    while (1)
    {
      if (v30)
      {
        v33 = __clz(__rbit64(v30));
        v30 &= v30 - 1;
        v34 = v33 | (v32 << 6);
      }
      else
      {
        v35 = v32 + 1;
        if (__OFADD__(v32, 1))
          goto LABEL_68;
        if (v35 >= v80)
          goto LABEL_69;
        v36 = *(_QWORD *)(v79 + 8 * v35);
        ++v32;
        if (!v36)
        {
          v32 = v35 + 1;
          if (v35 + 1 >= v80)
            goto LABEL_72;
          v36 = *(_QWORD *)(v79 + 8 * v32);
          if (!v36)
          {
            v32 = v35 + 2;
            if (v35 + 2 >= v80)
              goto LABEL_74;
            v36 = *(_QWORD *)(v79 + 8 * v32);
            if (!v36)
            {
              v37 = v35 + 3;
              if (v37 >= v80)
                goto LABEL_75;
              v36 = *(_QWORD *)(v79 + 8 * v37);
              if (!v36)
              {
                while (1)
                {
                  v32 = v37 + 1;
                  if (__OFADD__(v37, 1))
                    goto LABEL_70;
                  if (v32 >= v80)
                    goto LABEL_71;
                  v36 = *(_QWORD *)(v79 + 8 * v32);
                  ++v37;
                  if (v36)
                    goto LABEL_20;
                }
              }
              v32 = v37;
            }
          }
        }
LABEL_20:
        v30 = (v36 - 1) & v36;
        v34 = __clz(__rbit64(v36)) + (v32 << 6);
      }
      sub_1BA4C2DD8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v84 + 72) * v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v43 = *v12;
        v44 = v71;
        sub_1BA4C2DD8((uint64_t)v15, v71, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v87 = 0x636972656E6567;
          v88 = 0xE700000000000000;
          sub_1BB872AFC((_QWORD *)0xE700000000000000);
          __asm { BR              X9 }
        }
        __asm { BR              X10 }
      }
      sub_1BA5193C4((uint64_t)v12, v75, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      v38 = v72;
      sub_1BA4C2DD8((uint64_t)v15, v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() != 1)
        __asm { BR              X10 }
      sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v87 = 0x636972656E6567;
      v88 = 0xE700000000000000;
      sub_1BB872AFC((_QWORD *)0xE700000000000000);
      v39 = v75;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v40);
      swift_bridgeObjectRelease();
      v41 = v87;
      v42 = v88;
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v45 = v89;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v45 + 16) + 1, 1);
        v45 = v89;
      }
      v48 = *(_QWORD *)(v45 + 16);
      v47 = *(_QWORD *)(v45 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_1BA7447E8(v47 > 1, v48 + 1, 1);
        v45 = v89;
      }
      ++v31;
      *(_QWORD *)(v45 + 16) = v48 + 1;
      v49 = v45 + 16 * v48;
      *(_QWORD *)(v49 + 32) = v41;
      *(_QWORD *)(v49 + 40) = v42;
      v12 = v73;
      a1 = v76;
      if (v31 == v74)
        goto LABEL_35;
    }
  }
  v45 = v89;
  v80 = (unint64_t)(63 - v29) >> 6;
  swift_bridgeObjectRetain();
  v32 = 0;
LABEL_35:
  v50 = v86;
  if (!v30)
    goto LABEL_37;
LABEL_36:
  v51 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  for (i = v51 | (v32 << 6); ; i = __clz(__rbit64(v54)) + (v32 << 6))
  {
    v56 = v82;
    sub_1BA4C2DD8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v84 + 72) * i, v82, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA5193C4(v56, v50, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v57 = v83;
    sub_1BA4C2DD8(v50, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v63 = *v57;
      v64 = v77;
      sub_1BA4C2DD8(v50, v77, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v87 = 0x636972656E6567;
        v88 = 0xE700000000000000;
        sub_1BB872AFC((_QWORD *)0xE700000000000000);
        __asm { BR              X9 }
      }
      __asm { BR              X10 }
    }
    sub_1BA5193C4((uint64_t)v57, v81, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v58 = v78;
    sub_1BA4C2DD8(v50, v78, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
      __asm { BR              X10 }
    sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v87 = 0x636972656E6567;
    v88 = 0xE700000000000000;
    sub_1BB872AFC((_QWORD *)0xE700000000000000);
    v59 = v81;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v60);
    swift_bridgeObjectRelease();
    v61 = v87;
    v62 = v88;
    sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    sub_1BA4A2E80(v86, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v45 = v89;
    v65 = swift_isUniquelyReferenced_nonNull_native();
    if ((v65 & 1) == 0)
    {
      sub_1BA7447E8(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v89;
    }
    v67 = *(_QWORD *)(v45 + 16);
    v66 = *(_QWORD *)(v45 + 24);
    if (v67 >= v66 >> 1)
    {
      sub_1BA7447E8(v66 > 1, v67 + 1, 1);
      v45 = v89;
    }
    *(_QWORD *)(v45 + 16) = v67 + 1;
    v68 = v45 + 16 * v67;
    *(_QWORD *)(v68 + 32) = v61;
    *(_QWORD *)(v68 + 40) = v62;
    v50 = v86;
    if (v30)
      goto LABEL_36;
LABEL_37:
    v53 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (v53 >= v80)
      goto LABEL_66;
    v54 = *(_QWORD *)(v79 + 8 * v53);
    ++v32;
    if (!v54)
    {
      v32 = v53 + 1;
      if (v53 + 1 >= v80)
        goto LABEL_66;
      v54 = *(_QWORD *)(v79 + 8 * v32);
      if (!v54)
      {
        v32 = v53 + 2;
        if (v53 + 2 >= v80)
          goto LABEL_66;
        v54 = *(_QWORD *)(v79 + 8 * v32);
        if (!v54)
        {
          v32 = v53 + 3;
          if (v53 + 3 >= v80)
            goto LABEL_66;
          v54 = *(_QWORD *)(v79 + 8 * v32);
          if (!v54)
            break;
        }
      }
    }
LABEL_52:
    v30 = (v54 - 1) & v54;
  }
  v55 = v53 + 4;
  if (v55 < v80)
  {
    v54 = *(_QWORD *)(v79 + 8 * v55);
    if (!v54)
    {
      while (1)
      {
        v32 = v55 + 1;
        if (__OFADD__(v55, 1))
          break;
        if (v32 >= v80)
          goto LABEL_66;
        v54 = *(_QWORD *)(v79 + 8 * v32);
        ++v55;
        if (v54)
          goto LABEL_52;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      JUMPOUT(0x1BA937AFCLL);
    }
    v32 = v55;
    goto LABEL_52;
  }
LABEL_66:
  swift_release();
  return v45;
}

uint64_t sub_1BA937BA4(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 *v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v25 = a3;
  v26 = a4;
  v23 = a1;
  v24 = a2;
  v6 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v6);
  v22 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB873450();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB87342C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v13);
  v21 = OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkQueue;
  v20 = sub_1BA657D64();
  sub_1BB872640();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v12, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, v12, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D0], v19);
  *(_QWORD *)(v4 + v21) = sub_1BB87348C();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses) = MEMORY[0x1E0DEE9E0];
  v14 = OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lock;
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v4 + v14) = sub_1BB86DD50();
  sub_1BA4CECCC(v23, v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager);
  sub_1BA4CECCC(v24, v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager);
  v15 = v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkProxy;
  v16 = sub_1BB86DEF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, v25, v16);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_defaultMaxAge) = v26;
  return v5;
}

uint64_t sub_1BA937E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  sub_1BB86DD20();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BB4AB2C8(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    v7 = 0;
  }
  swift_endAccess();
  sub_1BB86DD2C();
  return v7;
}

uint64_t sub_1BA937F24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD v5[4];

  if (*(_BYTE *)(a2 + 16))
    v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager;
  else
    v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager;
  sub_1BA4C010C(a1 + *v2, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v3 = sub_1BB86E524();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1BA937FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  unint64_t *v31;
  unint64_t *v32;
  char *v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void (*v49)(_BYTE *, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _BYTE v65[40];
  void (*v66)(char *, uint64_t);

  v58 = a2;
  v60 = a1;
  v59 = sub_1BB86BC8C();
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v55 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v48 - v7;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v48 - v12;
  v13 = sub_1BB86BF20();
  v62 = *(_QWORD *)(v13 - 8);
  v63 = v13;
  MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v5);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - v16;
  v18 = sub_1BB86BFF8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v48 - v23;
  v25 = *(int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) + 24);
  v57 = a3;
  v26 = a3 + v25;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v27 = v26;
    v28 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
    sub_1BA4A2870(&qword_1EF2AADC0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError, (uint64_t)&unk_1BB90B890);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v29, v27, v8);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    v50 = v26;
    v51 = v9;
    v52 = v8;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v18);
    sub_1BB86BF5C();
    sub_1BB86BF68();
    v30 = (void (*)(_BYTE *, _QWORD))sub_1BB86BF50();
    if (*v31)
    {
      v32 = v31;
      v49 = v30;
      sub_1BB86ECD4();
      v33 = v61;
      sub_1BB86BEFC();
      swift_bridgeObjectRelease();
      v34 = *v32;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v32 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v34 = sub_1BA785BF0(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        *v32 = v34;
      }
      v37 = *(_QWORD *)(v34 + 16);
      v36 = *(_QWORD *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        v34 = sub_1BA785BF0(v36 > 1, v37 + 1, 1, v34);
        *v32 = v34;
      }
      *(_QWORD *)(v34 + 16) = v37 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v34+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v37, v33, v63);
      v49(v65, 0);
    }
    else
    {
      v30(v65, 0);
    }
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v24, v18);
    v38 = (uint64_t)v64;
    sub_1BB86BF80();
    v39 = *(void (**)(char *, uint64_t))(v19 + 8);
    v39(v21, v18);
    v41 = v51;
    v40 = v52;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v38, 1, v52) == 1)
    {
      sub_1BA5C699C(v38, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v28 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
      sub_1BA4A2870(&qword_1EF2AADC0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError, (uint64_t)&unk_1BB90B890);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v42, v50, v40);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v39(v24, v18);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
      v66 = v39;
      v44 = v54;
      v43(v54, v38, v40);
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v53, v44, v40);
      v45 = (uint64_t)v55;
      sub_1BB86BC5C();
      v46 = v57;
      sub_1BB86BC80();
      v28 = sub_1BA93A414(v46, v45);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v45, v59);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v40);
      v66(v24, v18);
    }
  }
  return v28;
}

uint64_t sub_1BA9385B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v2 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v2);
  v37 = (uint64_t)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WebEmbedDataVisualization();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v34 = (uint64_t)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v33 = (uint64_t)v32 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v32 - v10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v32 - v13;
  v41 = 91;
  v42 = 0xE100000000000000;
  v15 = *(_QWORD *)(a1 + 16);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v15, 0);
  v32[1] = a1;
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v35 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v36 = v4;
    do
    {
      sub_1BA4C2DD8(v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v22 = *v11;
        v23 = v33;
        sub_1BA4C2DD8((uint64_t)v14, v33, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v38 = 0x636972656E6567;
          v39 = 0xE700000000000000;
          sub_1BB872AFC((_QWORD *)0xE700000000000000);
          __asm { BR              X9 }
        }
        __asm { BR              X10 }
      }
      sub_1BA5193C4((uint64_t)v11, v37, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      v17 = v34;
      sub_1BA4C2DD8((uint64_t)v14, v34, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() != 1)
        __asm { BR              X10 }
      sub_1BA4A2E80(v17, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v38 = 0x636972656E6567;
      v39 = 0xE700000000000000;
      sub_1BB872AFC((_QWORD *)0xE700000000000000);
      v18 = v37;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v19);
      swift_bridgeObjectRelease();
      v20 = v38;
      v21 = v39;
      sub_1BA4A2E80(v18, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v24 = v40;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v40;
      }
      v27 = *(_QWORD *)(v24 + 16);
      v26 = *(_QWORD *)(v24 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BA7447E8(v26 > 1, v27 + 1, 1);
        v24 = v40;
      }
      *(_QWORD *)(v24 + 16) = v27 + 1;
      v28 = v24 + 16 * v27;
      *(_QWORD *)(v28 + 32) = v20;
      *(_QWORD *)(v28 + 40) = v21;
      v16 += v35;
      --v15;
    }
    while (v15);
  }
  else
  {
    v24 = v40;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v38 = v24;
  swift_retain();
  sub_1BA5BBDDC(&v38);
  swift_release();
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_release();
  sub_1BB872AFC(v29);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v30);
  return v41;
}

uint64_t sub_1BA938D8C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = 91;
  v6 = 0xE100000000000000;
  v4 = sub_1BA936B80(a1);
  swift_bridgeObjectRetain();
  sub_1BA5BBDDC(&v4);
  swift_bridgeObjectRelease();
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_release();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  return v5;
}

uint64_t sub_1BA938E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Class v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = sub_1BB86DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86BC8C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86E050();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkProxy, v4);
  sub_1BA93AF98();
  v13 = objc_allocWithZone(v12);
  v14 = (void *)sub_1BB86E6A4();
  v15 = sub_1BB86E02C();

  return v15;
}

uint64_t sub_1BA938FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v42 = a4;
  v46 = a3;
  v41 = a2;
  v44 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3A3260, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - v7;
  v9 = sub_1BB86BC8C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v40 = (char *)&v39 - v14;
  v50 = sub_1BB86C67C();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v45 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v16, v5);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - v21;
  sub_1BA6A0B5C(0, &qword_1ED3A39D8, MEMORY[0x1E0DB44E8]);
  v23 = sub_1BB86E614();
  if (v23)
  {
    v24 = (void *)v23;
    objc_opt_self();
    v25 = (char *)swift_dynamicCastObjCClass();
    if (v25)
    {
      v43 = v25;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v46 + *(int *)(v44 + 24), v50);
      sub_1BB86E608();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v42, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        v26 = (uint64_t)v40;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v40, v12, v9);
        sub_1BA5C699C((uint64_t)v8, &qword_1ED3A3260, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        v26 = (uint64_t)v40;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v40, v8, v9);
      }
      sub_1BB86E5FC();
      v36 = v45;
      v27 = sub_1BA93947C(v45, v26, v43, v48, v49);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v9);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v36, v50);
      return v27;
    }

  }
  v27 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  sub_1BA4A2870(&qword_1EF2AADC0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError, (uint64_t)&unk_1BB90B890);
  swift_allocError();
  v29 = v28;
  v30 = (void *)sub_1BB86E614();
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, sel_URL);

    if (v32)
    {
      sub_1BB86C5EC();

      v33 = 0;
    }
    else
    {
      v33 = 1;
    }
    v35 = v50;
    v34 = v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v19, v33, 1, v50);
    sub_1BA7F0AD4((uint64_t)v19, (uint64_t)v22);
  }
  else
  {
    v34 = v47;
    v35 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v22, 1, 1, v50);
  }
  v37 = v43;
  sub_1BA4C2DD8(v46, (uint64_t)v43, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v35) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v29, &v37[*(int *)(v44 + 24)], v35);
    sub_1BA4A2E80((uint64_t)v37, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    sub_1BA5C699C((uint64_t)v22, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v29, v22, v35);
    sub_1BA4A2E80((uint64_t)v37, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return v27;
}

uint64_t sub_1BA93947C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a2;
  v26 = a4;
  v9 = (int *)type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_1BB86E458();
  v12 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86DD20();
  swift_beginAccess();
  sub_1BAA491E4(a1);
  swift_endAccess();
  swift_release();
  sub_1BB86DD2C();
  v15 = a3;
  sub_1BB86E44C();
  sub_1BB86E440();
  if ((v16 & 1) != 0)
    v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_defaultMaxAge);
  else
    v17 = sub_1BB8746E0();
  v18 = (char *)v11 + v9[6];
  v19 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a1, v19);
  v20 = (char *)v11 + v9[7];
  v21 = sub_1BB86BC8C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v25, v21);
  *v11 = v26;
  v11[1] = a5;
  v11[2] = v17;
  *(_QWORD *)((char *)v11 + v9[8]) = v15;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3A18, type metadata accessor for WebEmbedDataVisualizationDataResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v22 = v15;
  swift_bridgeObjectRetain();
  v23 = sub_1BB86E9E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  return v23;
}

uint64_t sub_1BA93968C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  id v31;
  unint64_t v32;
  int v33;
  char *v34;
  char *v35;
  id v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  char *v54;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v71;
  void (*v72)(void **, char *, uint64_t);
  void **v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  _QWORD *v80;
  id v81;
  void (*v82)(void **, uint64_t);
  uint64_t *v83;
  uint64_t *v84;
  void **v85;
  uint64_t v86;
  id v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void **v93;
  char *v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void *v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;

  v105 = a5;
  v99 = a4;
  v111 = a3;
  v115 = a2;
  v96 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v90 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v91 = v6;
  v92 = (uint64_t)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2AADC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v108 = (char *)&v89 - v8;
  v9 = sub_1BB86BC8C();
  v106 = *(_QWORD *)(v9 - 8);
  v107 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C8B0();
  v103 = *(_QWORD *)(v12 - 8);
  v104 = v12;
  MEMORY[0x1E0C80A78](v12);
  v102 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v98 = (char *)&v89 - v15;
  v16 = sub_1BB86C67C();
  v113 = *(_QWORD *)(v16 - 8);
  v114 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB86E458();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BB86E6E0();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v93 = (void **)((char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v26);
  v94 = (char *)&v89 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (id *)((char *)&v89 - v29);
  v116 = a1;
  v100 = a1;
  v31 = a1;
  v32 = sub_1BA8EBDF8();
  v33 = swift_dynamicCast();
  v109 = v23;
  v112 = v24;
  v101 = v32;
  if (!v33)
  {
    v34 = v11;
LABEL_7:
    v110 = 0;
    v95 = 1;
    v40 = v111;
    goto LABEL_10;
  }
  v34 = v11;
  if ((*(unsigned int (**)(id *, uint64_t))(v24 + 88))(v30, v23) != *MEMORY[0x1E0DB4750])
  {
    (*(void (**)(id *, uint64_t))(v24 + 8))(v30, v23);
    goto LABEL_7;
  }
  v35 = v18;
  (*(void (**)(id *, uint64_t))(v24 + 96))(v30, v23);
  v36 = *v30;
  sub_1BB86E44C();
  sub_1BB86E440();
  v38 = v37;
  if ((v37 & 1) != 0)
  {

    v39 = 0;
  }
  else
  {
    v39 = sub_1BB8746E0();

  }
  v110 = v39;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v40 = v111;
  v95 = v38;
  v18 = v35;
LABEL_10:
  v41 = v99;
  v42 = v96;
  v97 = v18;

  v99 = *(_QWORD *)(v115 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lock);
  sub_1BB86DD20();
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v18, v40 + *(int *)(v42 + 24), v114);
  v44 = v103;
  v43 = v104;
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 16);
  v46 = v98;
  v45(v98, v41, v104);
  v47 = v106;
  v48 = v34;
  v49 = v34;
  v50 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v49, v105, v107);
  type metadata accessor for WebEmbedDataVisualizationDataServiceFailure();
  v51 = swift_allocObject();
  v52 = v100;
  *(_QWORD *)(v51 + 16) = v100;
  v45((char *)(v51 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate), (uint64_t)v46, v43);
  v53 = v52;
  v54 = v102;
  sub_1BB86C8A4();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  v55 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 32);
  v56 = v115;
  v55(v51 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_createdDate, v54, v43);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v51 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_request, v48, v50);
  v57 = v51 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_maxAge;
  *(_QWORD *)v57 = v110;
  v58 = v95;
  *(_BYTE *)(v57 + 8) = v95 & 1;
  v59 = (uint64_t *)(v56 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v117 = *v59;
  *v59 = 0x8000000000000000;
  v61 = (uint64_t)v97;
  sub_1BB4BE584(v51, (uint64_t)v97, isUniquelyReferenced_nonNull_native);
  *v59 = v117;
  swift_bridgeObjectRelease();
  v62 = v61;
  v63 = v114;
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v62, v114);
  swift_endAccess();
  sub_1BB86DD2C();
  v64 = v52;
  v116 = v52;
  v65 = v52;
  v66 = (uint64_t)v108;
  v67 = v109;
  v68 = swift_dynamicCast();
  v69 = v112;
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
  if ((v68 & 1) != 0)
  {
    v70(v66, 0, 1, v67);
    v71 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v94, v66, v67);
    v72 = *(void (**)(void **, char *, uint64_t))(v69 + 16);
    v73 = v93;
    v72(v93, v71, v67);
    if ((*(unsigned int (**)(void **, uint64_t))(v69 + 88))(v73, v67) == *MEMORY[0x1E0DB4750])
    {
      (*(void (**)(void **, uint64_t))(v69 + 96))(v73, v67);
      v74 = *v73;
      if (objc_msgSend(v74, sel_statusCode) == (id)403)
      {
        MEMORY[0x1E0C80A78](403);
        v75 = v111;
        *(&v89 - 2) = v56;
        *(&v89 - 1) = v75;
        sub_1BB86EC14();
        v76 = v92;
        sub_1BA4C2DD8(v75, v92, type metadata accessor for WebEmbedDataVisualizationDataRequest);
        v77 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        v78 = swift_allocObject();
        sub_1BA5193C4(v76, v78 + v77, type metadata accessor for WebEmbedDataVisualizationDataRequest);
        v79 = (void *)sub_1BB86E854();
        type metadata accessor for WebEmbedDataVisualizationDataResult(0);
        type metadata accessor for WebEmbedDataVisualizationDataService(0);
        v63 = sub_1BB86E980();

        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v112 + 8))(v71, v67);
      }
      else
      {
        type metadata accessor for WebEmbedDataVisualizationDataServiceError();
        sub_1BA4A2870(&qword_1EF2AADC0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError, (uint64_t)&unk_1BB90B890);
        swift_allocError();
        v63 = v86;
        v87 = objc_msgSend(v74, sel_statusCode);
        *(_QWORD *)v63 = v110;
        *(_BYTE *)(v63 + 8) = v58 & 1;
        *(_QWORD *)(v63 + 16) = v87;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v67);
      }
    }
    else
    {
      v82 = *(void (**)(void **, uint64_t))(v69 + 8);
      v82(v73, v67);
      type metadata accessor for WebEmbedDataVisualizationDataServiceError();
      sub_1BA4A2870(&qword_1EF2AADC0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError, (uint64_t)&unk_1BB90B890);
      swift_allocError();
      v84 = v83;
      sub_1BA4A2870(&qword_1EF2AADD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4758], MEMORY[0x1E0DB4760]);
      v63 = swift_allocError();
      v72(v85, v71, v67);
      *v84 = v63;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v82((void **)v71, v67);
    }
  }
  else
  {
    v70(v66, 1, 1, v67);
    sub_1BA5C699C(v66, &qword_1EF2AADC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4758]);
    type metadata accessor for WebEmbedDataVisualizationDataServiceError();
    sub_1BA4A2870(&qword_1EF2AADC0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError, (uint64_t)&unk_1BB90B890);
    swift_allocError();
    *v80 = v64;
    swift_storeEnumTagMultiPayload();
    v81 = v64;
    swift_willThrow();
  }
  return v63;
}

uint64_t sub_1BA939FD4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD v5[4];

  if (*(_BYTE *)(a2 + 16))
    v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager;
  else
    v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager;
  sub_1BA4C010C(a1 + *v2, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v3 = sub_1BB86E518();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1BA93A080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;

  v5 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v14 = a2;
  v15 = a3;
  sub_1BB86ECE0();
  sub_1BB86EC14();
  sub_1BA4C2DD8(a3, (uint64_t)&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WebEmbedDataVisualizationDataRequest);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v9 + v8, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  *(_BYTE *)(v9 + v8 + v7) = 0;
  v10 = (void *)sub_1BB86E854();
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  type metadata accessor for WebEmbedDataVisualizationDataService(0);
  v11 = sub_1BB86E980();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1BA93A1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkProxy;
  v2 = sub_1BB86DEF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA93A270()
{
  return type metadata accessor for WebEmbedDataVisualizationDataService(0);
}

uint64_t sub_1BA93A278(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v12 = *v1;
  v13 = a1;
  sub_1BB86ECE0();
  sub_1BB86EC14();
  sub_1BA4C2DD8(a1, (uint64_t)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WebEmbedDataVisualizationDataRequest);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v7 + v6, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  *(_BYTE *)(v7 + v6 + v5) = 1;
  v8 = (void *)sub_1BB86E854();
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  v9 = sub_1BB86E980();
  swift_release();
  swift_release();

  return v9;
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A4458);
}

uint64_t sub_1BA93A3D0()
{
  uint64_t v0;

  return sub_1BA937F24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA93A3EC(uint64_t a1, uint64_t a2)
{
  return sub_1BA93AF34(a1, a2);
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataResult(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A43B8);
}

uint64_t sub_1BA93A414(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];
  char *v60;
  uint64_t v61;
  os_log_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80[2];

  v73 = a2;
  v77 = a1;
  v75 = *v2;
  v70 = sub_1BB86BC8C();
  v65 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v74 = v3;
  v69 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C8B0();
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  MEMORY[0x1E0C80A78](v4);
  v67 = v5;
  v68 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v78 = (char *)v59 - v7;
  v8 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v9 = *(_QWORD **)(v8 - 8);
  v10 = v9[8];
  MEMORY[0x1E0C80A78](v8);
  v66 = (uint64_t)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v59 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v59 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (_QWORD *)((char *)v59 - v18);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v20 = sub_1BB86EFEC();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED3A3BB8);
  v21 = v77;
  sub_1BA4C2DD8(v77, (uint64_t)v19, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  sub_1BA4C2DD8(v21, (uint64_t)v16, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  sub_1BA4C2DD8(v21, (uint64_t)v13, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  v22 = sub_1BB86EFC8();
  v23 = sub_1BB8732DC();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v62 = v22;
    v26 = v25;
    v63 = swift_slowAlloc();
    v80[0] = v63;
    *(_DWORD *)v26 = 136446722;
    LODWORD(v61) = v24;
    v64 = v9;
    v28 = *v19;
    v27 = v19[1];
    swift_bridgeObjectRetain();
    v79 = sub_1BA5D2E14(v28, v27, v80);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    *(_WORD *)(v26 + 12) = 2082;
    v29 = swift_bridgeObjectRetain();
    v30 = sub_1BA938D8C(v29);
    v31 = (uint64_t)v13;
    v33 = v32;
    swift_bridgeObjectRelease();
    v79 = sub_1BA5D2E14(v30, v33, v80);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    *(_WORD *)(v26 + 22) = 2082;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&qword_1ED3A0CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v34 = sub_1BB87420C();
    v79 = sub_1BA5D2E14(v34, v35, v80);
    v9 = v64;
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v31, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    v36 = v62;
    _os_log_impl(&dword_1BA493000, v62, (os_log_type_t)v61, "WebEmbedDataVisualizationDataService executing fetch with identifier=%{public}s; visualizations=%{public}s, url=%{public}s",
      (uint8_t *)v26,
      0x20u);
    v37 = v63;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v37, -1, -1);
    MEMORY[0x1BCCE5C38](v26, -1, -1);

  }
  else
  {
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for WebEmbedDataVisualizationDataRequest);

  }
  v38 = sub_1BB86C8A4();
  MEMORY[0x1E0C80A78](v38);
  v39 = v73;
  v40 = v76;
  v59[-2] = v73;
  v59[-1] = v40;
  sub_1BA6A0B5C(0, &qword_1ED3A39D8, MEMORY[0x1E0DB44E8]);
  v59[0] = sub_1BB86EC14();
  v63 = *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkQueue);
  v41 = v66;
  sub_1BA4C2DD8(v77, v66, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  v42 = v65;
  v64 = *(_QWORD **)(v65 + 16);
  v43 = v69;
  v44 = v39;
  v45 = v70;
  ((void (*)(char *, uint64_t, uint64_t))v64)(v69, v44, v70);
  v46 = *((unsigned __int8 *)v9 + 80);
  v47 = ((v46 + 16) & ~v46);
  v60 = (char *)v47 + v10;
  v62 = v47;
  v48 = *(unsigned __int8 *)(v42 + 80);
  v49 = ((unint64_t)v47 + v10 + v48) & ~v48;
  v59[1] = v46 | v48 | 7;
  v50 = swift_allocObject();
  sub_1BA5193C4(v41, (uint64_t)v47 + v50, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  v65 = *(_QWORD *)(v42 + 32);
  ((void (*)(unint64_t, char *, uint64_t))v65)(v50 + v49, v43, v45);
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  v61 = sub_1BB86E980();
  swift_release();
  swift_release();
  sub_1BA4C2DD8(v77, v41, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  v52 = v71;
  v51 = v72;
  v53 = v68;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v78, v72);
  ((void (*)(char *, uint64_t, uint64_t))v64)(v43, v73, v45);
  v54 = (unint64_t)&v60[*(unsigned __int8 *)(v52 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v55 = (v67 + v48 + v54) & ~v48;
  v56 = swift_allocObject();
  sub_1BA5193C4(v41, (uint64_t)v62 + v56, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v56 + v54, v53, v51);
  ((void (*)(unint64_t, char *, uint64_t))v65)(v56 + v55, v43, v45);
  v57 = sub_1BB86EA28();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v78, v51);
  return v57;
}

uint64_t sub_1BA93AAE0()
{
  uint64_t v0;

  return sub_1BA938E74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA93AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BB86BC8C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 24);
  v9 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1BA93ABD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86BC8C() - 8) + 80);
  return sub_1BA938FA0(a1, a2, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_1BA93AC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v14 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v14 - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_1BB86BC8C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_bridgeObjectRelease();
  v11 = v0 + v3 + *(int *)(v1 + 24);
  v12 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v14);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v8);
  return swift_deallocObject();
}

uint64_t sub_1BA93AD80(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1BB86C8B0() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86BC8C() - 8) + 80);
  return sub_1BA93968C(a1, a2, v2 + v6, v2 + v9, v2 + ((v9 + v10 + v11) & ~v11));
}

uint64_t sub_1BA93AE28()
{
  uint64_t v0;

  return sub_1BA939FD4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA93AE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA93AED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8) + 80);
  return sub_1BA93A080(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1BA93AF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8) + 80);
  return sub_1BA937FD0(a1, a2, v2 + ((v5 + 16) & ~v5));
}

void sub_1BA93AF98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A10D0)
  {
    sub_1BB86E4E8();
    v0 = sub_1BB86E6B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A10D0);
  }
}

uint64_t *sub_1BA93AFF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1BB86BC8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + v17) = (uint64_t)v18;
    v19 = v18;
  }
  return v4;
}

void sub_1BA93B0E4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

_QWORD *sub_1BA93B164(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1BB86BC8C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[8];
  v17 = *(void **)((char *)a2 + v16);
  *(_QWORD *)((char *)a1 + v16) = v17;
  v18 = v17;
  return a1;
}

_QWORD *sub_1BA93B228(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86BC8C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = *(void **)((char *)a2 + v14);
  v16 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v17 = v15;

  return a1;
}

uint64_t sub_1BA93B2F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

_QWORD *sub_1BA93B3A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1BB86BC8C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[8];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  return a1;
}

uint64_t sub_1BA93B460()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA93B46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_1BB86BC8C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BA93B50C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA93B518(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1BB86BC8C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1BA93B5B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86BC8C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1BA93B65C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BA93B720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA93B77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86C67C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA93B814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA93B8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BA93B93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA93B9CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA93B9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BA93BA54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA93BA60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA93BAD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA93BB5C()
{
  return sub_1BA93A3D0();
}

BOOL static FormatSupplementaryNodeRubberbandTrait.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

BOOL static FormatSupplementaryNodeRubberbandTraitTransform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BA93BBBC@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatSupplementaryNodeRubberbandTrait.init(from:)(a1, a2);
}

uint64_t sub_1BA93BBD0(_QWORD *a1)
{
  return FormatSupplementaryNodeRubberbandTrait.encode(to:)(a1);
}

BOOL sub_1BA93BBE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.description.getter()
{
  return 0x6C61635320706F54;
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA93BCB8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93BCDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93BCDC()
{
  unint64_t result;

  result = qword_1EF2AADD8;
  if (!qword_1EF2AADD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTrait, &type metadata for FormatSupplementaryNodeRubberbandTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2AADD8);
  }
  return result;
}

uint64_t sub_1BA93BD20(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA4FAC94, (uint64_t (*)(void))sub_1BA93BD3C, (uint64_t (*)(void))sub_1BA93BD80);
}

unint64_t sub_1BA93BD3C()
{
  unint64_t result;

  result = qword_1ED3AA648;
  if (!qword_1ED3AA648)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTrait, &type metadata for FormatSupplementaryNodeRubberbandTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3AA648);
  }
  return result;
}

unint64_t sub_1BA93BD80()
{
  unint64_t result;

  result = qword_1EF2AADE0;
  if (!qword_1EF2AADE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTrait, &type metadata for FormatSupplementaryNodeRubberbandTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2AADE0);
  }
  return result;
}

unint64_t sub_1BA93BDC8()
{
  unint64_t result;

  result = qword_1EF2AADE8;
  if (!qword_1EF2AADE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTraitTransform, &type metadata for FormatSupplementaryNodeRubberbandTraitTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2AADE8);
  }
  return result;
}

unint64_t sub_1BA93BE0C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93BE30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93BE30()
{
  unint64_t result;

  result = qword_1EF2AADF0;
  if (!qword_1EF2AADF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTraitTransform, &type metadata for FormatSupplementaryNodeRubberbandTraitTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2AADF0);
  }
  return result;
}

uint64_t sub_1BA93BE74(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA93BE90, (uint64_t (*)(void))sub_1BA93BED4, (uint64_t (*)(void))sub_1BA93BDC8);
}

unint64_t sub_1BA93BE90()
{
  unint64_t result;

  result = qword_1ED3AAAD8;
  if (!qword_1ED3AAAD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTraitTransform, &type metadata for FormatSupplementaryNodeRubberbandTraitTransform);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAD8);
  }
  return result;
}

unint64_t sub_1BA93BED4()
{
  unint64_t result;

  result = qword_1EF2AADF8;
  if (!qword_1EF2AADF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTraitTransform, &type metadata for FormatSupplementaryNodeRubberbandTraitTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2AADF8);
  }
  return result;
}

uint64_t sub_1BA93BF18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatSupplementaryNodeRubberbandTraitTransform.init(from:)(a1, a2);
}

uint64_t sub_1BA93BF2C(_QWORD *a1)
{
  return FormatSupplementaryNodeRubberbandTraitTransform.encode(to:)(a1);
}

uint64_t sub_1BA93BF40()
{
  return 0x6C61635320706F54;
}

uint64_t getEnumTagSinglePayload for FormatSupplementaryNodeRubberbandTrait(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BA93BFC4 + 4 * byte_1BB8860A0[v4]))();
  }
}

uint64_t sub_1BA93C018(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_1BA93C02C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodeRubberbandTrait()
{
  return &type metadata for FormatSupplementaryNodeRubberbandTrait;
}

uint64_t storeEnumTagSinglePayload for FormatSupplementaryNodeRubberbandTraitTransform(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA93C098 + 4 * byte_1BB8860B4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA93C0CC + 4 * byte_1BB8860AF[v4]))();
}

uint64_t sub_1BA93C0CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA93C0D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA93C0DCLL);
  return result;
}

uint64_t sub_1BA93C0E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA93C0F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA93C0F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA93C0FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodeRubberbandTraitTransform()
{
  return &type metadata for FormatSupplementaryNodeRubberbandTraitTransform;
}

_QWORD *sub_1BA93C118(unsigned __int8 *a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _QWORD *v27;
  _OWORD v29[2];
  uint64_t v30;

  v1 = *a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  if (v1 == 2)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
    sub_1BA8C88C8(0);
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
    v14 = (v13 + 32) & ~v13;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
    v8 = (_QWORD *)(v7 + v14);
    v9 = v8;
    v10 = 0x45206F54206E6950;
    v11 = 0xEB00000000656764;
    goto LABEL_5;
  }
  if (v1 == 3)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
    sub_1BA8C88C8(0);
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
    v6 = (v5 + 32) & ~v5;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
    v8 = (_QWORD *)(v7 + v6);
    v9 = v8;
    v10 = 1701736270;
    v11 = 0xE400000000000000;
LABEL_5:
    sub_1BAAF7494(1701869908, 0xE400000000000000, v10, v11, v9);
    v15 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    sub_1BAF89090(0x6162726562627552, 0xEA0000000000646ELL, 0, 0, v7, v29);
    swift_setDeallocating();
    goto LABEL_10;
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87A390;
  v21 = (_QWORD *)(v20 + v19);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0xD000000000000011, 0x80000001BB9639C0, v21);
  v22 = type metadata accessor for FormatInspectionItem(0);
  v23 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v21, 0, 1, v22);
  if ((v1 & 1) != 0)
    v24 = 0xEB00000000592065;
  else
    v24 = 0xE900000000000065;
  sub_1BAAF7494(0x726F66736E617254, 0xE90000000000006DLL, 0x6C61635320706F54, v24, (_QWORD *)((char *)v21 + v18));
  v23((_QWORD *)((char *)v21 + v18), 0, 1, v22);
  sub_1BAF89090(0x6162726562627552, 0xEA0000000000646ELL, 0, 0, v20, v29);
  swift_setDeallocating();
LABEL_10:
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v25;
  *(_QWORD *)(v25 + 48) = v30;
  v26 = v29[1];
  *(_OWORD *)(v25 + 16) = v29[0];
  *(_OWORD *)(v25 + 32) = v26;
  v27 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v27;
}

uint64_t sub_1BA93C550()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatSharedItemData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_1BB86C8B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for SharedItem();
    *((_BYTE *)a1 + v7[5]) = *((_BYTE *)a2 + v7[5]);
    v8 = v7[6];
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = v7[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1BB86C67C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v9;
    v14(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatSharedItemData(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for SharedItem();

  v4 = a1 + *(int *)(v3 + 28);
  v5 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for SharedItem();
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = *(void **)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  v8 = v5[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BB86C67C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatSharedItemData);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = (int *)type metadata accessor for SharedItem();
    *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
    v6 = v5[6];
    v7 = *(void **)(a2 + v6);
    *(_QWORD *)(a1 + v6) = v7;
    v8 = v5[7];
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v7;
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for FormatSharedItemData()
{
  uint64_t result;

  result = qword_1ED3A0090;
  if (!qword_1ED3A0090)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithTake for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for SharedItem();
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  v6 = v5[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatSharedItemData);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = (int *)type metadata accessor for SharedItem();
    *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
    *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
    v6 = v5[7];
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BA93CAB0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SharedItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA93CB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  _QWORD v10[4];
  _BYTE v11[24];
  uint64_t v12;

  v1 = type metadata accessor for SharedItem();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatSharedItemData();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BBC78 != -1)
    swift_once();
  sub_1BA93CCD0(v0, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1BA5193C4((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  if (EnumCaseMultiPayload == 1)
    SharedItemManager.hideContextMenuItem(for:)((uint64_t)v10);
  else
    SharedItemManager.replyContextMenuItem(for:)((uint64_t)v3, (uint64_t)v10);
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA93CD14);
  if (v12)
  {
    sub_1BA4C010C((uint64_t)v11, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v8 = sub_1BB870384();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    v8 = 0;
  }
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA93CD14);
  return v8;
}

uint64_t sub_1BA93CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSharedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA93CD14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AFAA0)
  {
    sub_1BA93CD68();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AFAA0);
  }
}

unint64_t sub_1BA93CD68()
{
  unint64_t result;

  result = qword_1ED3AFA90;
  if (!qword_1ED3AFA90)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3AFA90);
  }
  return result;
}

uint64_t _s8NewsFeed27FormatImageAdjustmentFilterO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;

  v2 = *(double *)a1;
  if (*(_BYTE *)(a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1BA93CDF4 + 4 * byte_1BB886330[*(_QWORD *)&v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(double *)a2;
}

uint64_t sub_1BA93CE2C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CE40@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CE54@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CE68@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CE7C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CE90@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CEA4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CEB8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CECC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CEE0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CEF4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 12)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CF08@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 13)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CF1C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 14)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CF30@<X0>(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xE)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

uint64_t sub_1BA93CF44@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x1BA93CE0CLL);
  return 1;
}

unint64_t sub_1BA93CF58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93CF7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93CF7C()
{
  unint64_t result;

  result = qword_1EF2AAE00;
  if (!qword_1EF2AAE00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentFilter, &type metadata for FormatImageAdjustmentFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE00);
  }
  return result;
}

unint64_t sub_1BA93CFC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA560FA8();
  a1[2] = sub_1BA53BA94();
  result = sub_1BA93CFF4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA93CFF4()
{
  unint64_t result;

  result = qword_1EF2AAE08;
  if (!qword_1EF2AAE08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentFilter, &type metadata for FormatImageAdjustmentFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE08);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentFilter()
{
  return &type metadata for FormatImageAdjustmentFilter;
}

BOOL static FormatSlotItemOrdering.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatSlotItemOrdering.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatSlotItemOrdering.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA93D0D0()
{
  unint64_t result;

  result = qword_1EF2AAE10;
  if (!qword_1EF2AAE10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemOrdering, &type metadata for FormatSlotItemOrdering);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE10);
  }
  return result;
}

unint64_t sub_1BA93D114(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93D138();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93D138()
{
  unint64_t result;

  result = qword_1EF2AAE18;
  if (!qword_1EF2AAE18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemOrdering, &type metadata for FormatSlotItemOrdering);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE18);
  }
  return result;
}

unint64_t sub_1BA93D17C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA93D1B0();
  a1[2] = sub_1BA93D1F4();
  result = sub_1BA93D0D0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA93D1B0()
{
  unint64_t result;

  result = qword_1ED3AD780;
  if (!qword_1ED3AD780)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemOrdering, &type metadata for FormatSlotItemOrdering);
    atomic_store(result, (unint64_t *)&qword_1ED3AD780);
  }
  return result;
}

unint64_t sub_1BA93D1F4()
{
  unint64_t result;

  result = qword_1ED3AD778;
  if (!qword_1ED3AD778)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemOrdering, &type metadata for FormatSlotItemOrdering);
    atomic_store(result, (unint64_t *)&qword_1ED3AD778);
  }
  return result;
}

uint64_t sub_1BA93D238@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatSlotItemOrdering.init(from:)(a1, a2);
}

uint64_t sub_1BA93D24C(_QWORD *a1)
{
  return FormatSlotItemOrdering.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatSlotItemOrdering(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA93D2AC + 4 * byte_1BB886455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA93D2E0 + 4 * byte_1BB886450[v4]))();
}

uint64_t sub_1BA93D2E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA93D2E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA93D2F0);
  return result;
}

uint64_t sub_1BA93D2FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA93D304);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA93D308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA93D310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemOrdering()
{
  return &type metadata for FormatSlotItemOrdering;
}

uint64_t static FormatLayeredMediaNodeBinding.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if ((*a1 & 1) != 0)
  {
    if ((*a2 & 1) == 0)
      return 0;
  }
  else if ((*a2 & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BA93D350(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93D374();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93D374()
{
  unint64_t result;

  result = qword_1EF2AAE20;
  if (!qword_1EF2AAE20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeBinding, &type metadata for FormatLayeredMediaNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE20);
  }
  return result;
}

unint64_t sub_1BA93D3B8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4DDB40();
  a1[2] = sub_1BA93D3EC();
  result = sub_1BA93D430();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA93D3EC()
{
  unint64_t result;

  result = qword_1ED39BC10;
  if (!qword_1ED39BC10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeBinding, &type metadata for FormatLayeredMediaNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39BC10);
  }
  return result;
}

unint64_t sub_1BA93D430()
{
  unint64_t result;

  result = qword_1EF2AAE28;
  if (!qword_1EF2AAE28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeBinding, &type metadata for FormatLayeredMediaNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE28);
  }
  return result;
}

uint64_t sub_1BA93D474(_QWORD *a1)
{
  return FormatLayeredMediaNodeBinding.encode(to:)(a1);
}

uint64_t sub_1BA93D488(_BYTE *a1, _BYTE *a2)
{
  if ((*a1 & 1) != 0)
  {
    if (*a2)
      return 1;
  }
  else if ((*a2 & 1) == 0)
  {
    return 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for FormatLayeredMediaNodeBinding(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  if (v6 <= 1)
    v7 = -1;
  else
    v7 = v6 ^ 0xFF;
  return (v7 + 1);
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeBinding()
{
  return &type metadata for FormatLayeredMediaNodeBinding;
}

_QWORD *sub_1BA93D550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  unint64_t v56;

  v4 = *(_QWORD *)v1;
  v56 = *(_QWORD *)(v1 + 16);
  v39 = *(_QWORD *)(v1 + 40);
  v40 = *(_QWORD *)(v1 + 24);
  v37 = *(_QWORD *)(v1 + 56);
  v38 = *(_QWORD *)(v1 + 32);
  v35 = *(_QWORD *)(v1 + 72);
  v36 = *(_QWORD *)(v1 + 48);
  v33 = *(_QWORD *)(v1 + 88);
  v34 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 104);
  v31 = *(_QWORD *)(v1 + 96);
  v32 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 112);
  v7 = *(_QWORD *)(v1 + 120);
  v8 = *(_BYTE *)(v1 + 128);
  v9 = *(_BYTE *)(v1 + 8);
  v41 = v4;
  LOBYTE(v42) = v9;
  sub_1BA93DAE4(v4, v9);
  v10 = &v41;
  sub_1BB148C04(a1);
  v12 = v11;
  sub_1BA93DB08(v4, v9);
  if (!v2)
  {
    v13 = v37;
    v14 = v35;
    v15 = v33;
    v17 = v39;
    v16 = v40;
    v18 = v56;
    if ((v56 & 0xFF00) == 0x800)
    {
      v16 = 0;
      v17 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v5 = 0;
      v7 = 0;
      v19 = 1;
      LOBYTE(v20) = 7;
      v18 = 9;
      v21 = 1;
      v22 = 1;
      v23 = 1;
      v24 = 1;
      v25 = 1;
      v26 = 1;
    }
    else
    {
      v20 = v56 >> 8;
      v19 = v38 & 1;
      v21 = v36 & 1;
      v22 = v34 & 1;
      v23 = v32 & 1;
      v24 = v31 & 1;
      v25 = v6 & 1;
      v26 = v8 & 1;
    }
    LOBYTE(v41) = v18;
    BYTE1(v41) = v20;
    v42 = v16;
    v43 = v19;
    v44 = v17;
    v45 = v21;
    v46 = v13;
    v47 = v22;
    v48 = v14;
    v49 = v23;
    v50 = v15;
    v51 = v24;
    v52 = v5;
    v53 = v25;
    v54 = v7;
    v55 = v26;
    sub_1BAB1D46C();
    v28 = v27;
    v29 = objc_msgSend(v27, sel_stringFromNumber_, v12);

    if (v29)
    {
      v10 = (_QWORD *)sub_1BB8729A0();

    }
    else
    {

      return 0;
    }
  }
  return v10;
}

uint64_t sub_1BA93D75C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeNumber.init(from:)(a1, a2);
}

uint64_t sub_1BA93D770(_QWORD *a1)
{
  return FormatTextNodeNumber.encode(to:)(a1);
}

BOOL _s8NewsFeed20FormatTextNodeNumberV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v2 = *((_BYTE *)a1 + 8);
  v34 = a1[3];
  v35 = a1[2];
  v32 = a1[5];
  v33 = a1[4];
  v30 = a1[7];
  v31 = a1[6];
  v28 = a1[9];
  v29 = a1[8];
  v26 = a1[11];
  v27 = a1[10];
  v24 = a1[13];
  v25 = a1[12];
  v22 = a1[15];
  v23 = a1[14];
  v21 = *((_BYTE *)a1 + 128);
  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v19 = a2[3];
  v20 = a2[2];
  v16 = a2[5];
  v5 = a2[7];
  v17 = a2[6];
  v18 = a2[4];
  v6 = a2[8];
  v7 = a2[9];
  v9 = a2[10];
  v8 = a2[11];
  v51 = *a1;
  LOBYTE(v52) = v2;
  v11 = a2[12];
  v10 = a2[13];
  v36 = v3;
  LOBYTE(v37) = v4;
  v13 = a2[14];
  v12 = a2[15];
  v14 = *((_BYTE *)a2 + 128);
  if ((_s8NewsFeed12FormatNumberO2eeoiySbAC_ACtFZ_0((uint64_t)&v51, (uint64_t)&v36) & 1) == 0)
    return 0;
  if ((v35 & 0xFF00) != 0x800)
  {
    v51 = v35;
    v52 = v34;
    v53 = v33;
    v54 = v32;
    v55 = v31;
    v56 = v30;
    v57 = v29;
    v58 = v28;
    v59 = v27;
    v60 = v26;
    v61 = v25;
    v62 = v24;
    v63 = v23;
    v64 = v22;
    v65 = v21;
    if ((v20 & 0xFF00) == 0x800)
      return 0;
    LOWORD(v36) = v20;
    v37 = v19;
    v38 = v18 & 1;
    v39 = v16;
    v40 = v17 & 1;
    v41 = v5;
    v42 = v6 & 1;
    v43 = v7;
    v44 = v9 & 1;
    v45 = v8;
    v46 = v11 & 1;
    v47 = v10;
    v48 = v13 & 1;
    v49 = v12;
    v50 = v14 & 1;
    return _s8NewsFeed012FormatNumberC0V2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v51, (unsigned __int8 *)&v36);
  }
  return (v20 & 0xFF00) == 0x800;
}

unint64_t sub_1BA93D97C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93D9A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93D9A0()
{
  unint64_t result;

  result = qword_1EF2AAE30;
  if (!qword_1EF2AAE30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeNumber, &type metadata for FormatTextNodeNumber);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE30);
  }
  return result;
}

unint64_t sub_1BA93D9E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA93DA18();
  a1[2] = sub_1BA93DA5C();
  result = sub_1BA93DAA0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA93DA18()
{
  unint64_t result;

  result = qword_1ED39D018;
  if (!qword_1ED39D018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeNumber, &type metadata for FormatTextNodeNumber);
    atomic_store(result, (unint64_t *)&qword_1ED39D018);
  }
  return result;
}

unint64_t sub_1BA93DA5C()
{
  unint64_t result;

  result = qword_1ED39B668;
  if (!qword_1ED39B668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeNumber, &type metadata for FormatTextNodeNumber);
    atomic_store(result, (unint64_t *)&qword_1ED39B668);
  }
  return result;
}

unint64_t sub_1BA93DAA0()
{
  unint64_t result;

  result = qword_1EF2AAE38;
  if (!qword_1EF2AAE38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeNumber, &type metadata for FormatTextNodeNumber);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE38);
  }
  return result;
}

uint64_t sub_1BA93DAE4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for FormatNumber(uint64_t a1)
{
  return sub_1BA93DB08(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1BA93DB08(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for FormatTextNodeNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1BA93DAE4(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for FormatTextNodeNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1BA93DAE4(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  v7 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v5;
  sub_1BA93DB08(v6, v7);
  v8 = *(_OWORD *)(a2 + 16);
  v9 = *(_OWORD *)(a2 + 32);
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  v11 = *(_OWORD *)(a2 + 80);
  v12 = *(_OWORD *)(a2 + 96);
  v13 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v12;
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 80) = v11;
  return a1;
}

uint64_t assignWithTake for FormatTextNodeNumber(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA93DB08(v5, v6);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeNumber(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 129))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeNumber(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeNumber()
{
  return &type metadata for FormatTextNodeNumber;
}

void static FormatCodingSizeToFitStrategy.defaultValue.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xB000000000000008;
}

BOOL static FormatCodingSizeToFitStrategy.shouldEncode(wrappedValue:)(_QWORD *a1)
{
  return *a1 != 0xB000000000000008 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

unint64_t sub_1BA93DD68(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA93DD8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA93DD8C()
{
  unint64_t result;

  result = qword_1EF2AAE40;
  if (!qword_1EF2AAE40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingSizeToFitStrategy, &type metadata for FormatCodingSizeToFitStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AAE40);
  }
  return result;
}

void sub_1BA93DDD8(_QWORD *a1@<X8>)
{
  *a1 = 0xB000000000000008;
}

BOOL sub_1BA93DDE8(_QWORD *a1)
{
  return *a1 != 0xB000000000000008 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

ValueMetadata *type metadata accessor for FormatCodingSizeToFitStrategy()
{
  return &type metadata for FormatCodingSizeToFitStrategy;
}

void sub_1BA93DE20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  char *v34;
  _QWORD v35[18];
  uint64_t v36;

  v35[17] = a1;
  v36 = a2;
  sub_1BA93EB04(0);
  MEMORY[0x1E0C80A78](v2);
  v35[14] = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v35[16] = (char *)v35 - v5;
  v6 = type metadata accessor for FeedPuzzleStatistic();
  v35[11] = *(_QWORD *)(v6 - 8);
  v35[12] = v6;
  MEMORY[0x1E0C80A78](v6);
  v35[2] = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v35[15] = (char *)v35 - v9;
  sub_1BA93EB20(0);
  MEMORY[0x1E0C80A78](v10);
  v35[9] = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v35[13] = (char *)v35 - v13;
  v14 = type metadata accessor for FeedWebEmbed();
  v35[7] = *(_QWORD *)(v14 - 8);
  v35[8] = v14;
  MEMORY[0x1E0C80A78](v14);
  v35[1] = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v35[10] = (char *)v35 - v17;
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v18);
  v35[4] = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v35[6] = (char *)v35 - v21;
  v22 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v22);
  v35[0] = (char *)v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v35[5] = (char *)v35 - v25;
  sub_1BA93EB3C(0);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  v35[3] = (char *)v35 - v28;
  v29 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  v31 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v31);
  sub_1BA4C2DD8(v36, (uint64_t)v35 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v33);
  v34 = (char *)sub_1BA93E180 + 4 * word_1BB8867A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BA93E180()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = v1[1];
  swift_unknownObjectRetain();
  v4 = sub_1BB1F5C20(*(_QWORD *)(v0 + 136), v2);

  swift_unknownObjectRelease_n();
  return v4;
}

_QWORD *sub_1BA93E8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v15;

  sub_1BA93EAAC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatInspectionFeedGroupItem();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA93EAAC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA93EAAC);
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA93DE20(a1, (uint64_t)v10);
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 64) = &off_1E7335C38;
    *(_QWORD *)(inited + 32) = v13;
    v11 = sub_1BB6DF010(inited);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
  }
  return v11;
}

void sub_1BA93EAAC(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2BDFD0, (uint64_t (*)(uint64_t))type metadata accessor for FormatInspectionFeedGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t type metadata accessor for FormatInspectionFeedGroupItem()
{
  uint64_t result;

  result = qword_1EF2AAF00;
  if (!qword_1EF2AAF00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA93EB04(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3D24D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA93EB20(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AFE68, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA93EB3C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A5280, type metadata accessor for FeedWeather, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA93EB58(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedPuzzle(a2, a1);
  return a2;
}

void sub_1BA93EB94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1320)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A1320);
  }
}

uint64_t sub_1BA93EBE8(uint64_t a1)
{
  destroy for FeedPuzzle(a1);
  return a1;
}

uint64_t sub_1BA93EC1C(uint64_t a1)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v4, v3);
  return a1;
}

uint64_t sub_1BA93ECEC(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for FeedGroupItem() - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BA93ED54 + 4 * word_1BB8867BA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

unint64_t sub_1BA9405B0()
{
  unint64_t result;

  result = qword_1ED3C0430;
  if (!qword_1ED3C0430)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3C0430);
  }
  return result;
}

void sub_1BA9405EC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;

  type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();
      v2 = *(id *)(a1 + 8);
      goto LABEL_38;
    case 1u:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 128) < 0x11uLL)
        return;
      goto LABEL_70;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_70;
    case 3u:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for FeedWeather(0);
      v4 = a1 + *(int *)(v3 + 28);
      v5 = sub_1BB87270C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      v6 = a1 + *(int *)(v3 + 36);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
      v8 = v7;
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v9(v6, v7);
      v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v9(v6 + v10[5], v8);
      v9(v6 + v10[6], v8);
      v9(v6 + v10[7], v8);
      goto LABEL_70;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 240) < 0x11uLL)
        return;
      goto LABEL_70;
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v11 = (int *)type metadata accessor for FeedHeadline(0);
      v12 = a1 + v11[10];
      v13 = v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v15 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

        v16 = v13 + *(int *)(v14 + 28);
        v17 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      v18 = a1 + v11[11];
      v19 = sub_1BB871B24();
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      if (*(_QWORD *)(a1 + v11[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v11[13]) >= 3uLL)
        swift_unknownObjectRelease();
      v2 = *(id *)(a1 + v11[14]);
      goto LABEL_38;
    case 6u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = (int *)type metadata accessor for FeedWebEmbed();
      v22 = a1 + v21[8];
      v23 = sub_1BB86C67C();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v25(v22, v23);
      v26 = a1 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v23))
        v25(v26, v23);
      swift_release();
      swift_release();
      v27 = a1 + v21[12];
      v28 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v28 - 1) + 48))(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v29 = v28[10];
        v30 = v27 + v29 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v31 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
        {
          v32 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);

          v25(v30 + *(int *)(v31 + 28), v23);
        }
        v33 = v27 + v28[11];
        v34 = sub_1BB871B24();
        v35 = *(_QWORD *)(v34 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
        if (*(_QWORD *)(v27 + v28[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v27 + v28[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v36 = a1 + v21[13];
      v37 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v36, 1, v37))
        return;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v38 = type metadata accessor for GenericDataVisualization();
        v25(v36 + *(int *)(v38 + 20), v23);
LABEL_70:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return;
    case 7u:
      v2 = *(id *)a1;
LABEL_38:

      return;
    case 8u:
      goto LABEL_47;
    case 9u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      if (*(_QWORD *)(a1 + 152))
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      return;
    case 0xAu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_47:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 0xBu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_63;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v43 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v40, 1, v43))
            {
              v44 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v40, v44);
            }
          }
          v45 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v46 = v40 + *(int *)(v45 + 20);
          v47 = swift_getEnumCaseMultiPayload();
          if (v47 == 5 || v47 == 4)
          {
            v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v46, 1, v48))
            {
              v49 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v46, v49);
            }
          }
          v40 += *(int *)(v45 + 24);
LABEL_63:
          v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
          {
            v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v40, 1, v51))goto LABEL_76;
          }
          return;
        case 2u:
          v52 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v40, 1, v52))
            return;
          v53 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v40, v53);
          v54 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v55 = v40 + *(int *)(v54 + 24);
          swift_bridgeObjectRelease();
          v56 = *(_QWORD *)(v55 + 24);
          if (v56 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v55 + 16), v56);
          goto LABEL_70;
        case 3u:
          v57 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v58 = v40 + *(int *)(v57 + 24);
          v59 = type metadata accessor for PuzzleStreak();
          v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48);
          if (!v60(v58, 1, v59))
          {
            v61 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v58, v61);
          }
          v40 += *(int *)(v57 + 28);
          if (v60(v40, 1, v59))
            return;
LABEL_76:
          v41 = sub_1BB86BEC0();
          goto LABEL_53;
        default:
          return;
      }
    case 0xCu:
      swift_bridgeObjectRelease();
      v40 = a1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v41 = sub_1BB871E24();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
      break;
    default:
      return;
  }
}

void sub_1BA940F68()
{
  char *v0;

  type metadata accessor for FeedGroupItem();
  v0 = (char *)sub_1BA940FC4 + 4 * word_1BB8867FA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA940FC4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__dst, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;

  v34 = *(void **)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  swift_unknownObjectRetain();
  v35 = v34;
  swift_storeEnumTagMultiPayload();
  return v32;
}

uint64_t sub_1BA942804(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    type metadata accessor for FeedGroupItem();
    v2 = (char *)&loc_1BA942878 + 4 * word_1BB88681C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *sub_1BA944240(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  int *v18;
  uint64_t v19;
  _BYTE *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  int *v69;
  uint64_t v70;
  char *v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *result;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  char *__dst;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  char *v97;

  v4 = type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v6 = (int *)type metadata accessor for FeedWeather(0);
      v7 = v6[7];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB87270C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      v11 = v6[9];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
      v15 = v14;
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v16(v12, v13, v14);
      v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v16(&v12[v17[5]], &v13[v17[5]], v15);
      v16(&v12[v17[6]], &v13[v17[6]], v15);
      v16(&v12[v17[7]], &v13[v17[7]], v15);
      *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
      goto LABEL_36;
    case 5u:
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
      v18 = (int *)type metadata accessor for FeedHeadline(0);
      v19 = v18[10];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *v20 = *((_BYTE *)a2 + v19);
      v20[1] = *((_BYTE *)a2 + v19 + 1);
      v22 = (int *)type metadata accessor for FeedHeadline.State(0);
      v23 = v22[6];
      v24 = &v20[v23];
      v25 = &v21[v23];
      v26 = (int *)type metadata accessor for SharedItem();
      v27 = *((_QWORD *)v26 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        v28 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v48 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v24, v25, v48);
        v24[v26[5]] = v25[v26[5]];
        *(_QWORD *)&v24[v26[6]] = *(_QWORD *)&v25[v26[6]];
        v49 = v26[7];
        v97 = &v24[v49];
        v50 = &v25[v49];
        v51 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v97, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
      }
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      v20[v22[9]] = v21[v22[9]];
      v20[v22[10]] = v21[v22[10]];
      v52 = v18[11];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = sub_1BB871B24();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
      v64 = v18[13];
      v65 = *(_QWORD *)((char *)a2 + v64);
      if (v65 == 2)
        v65 = 2;
      *(_QWORD *)((char *)a1 + v64) = v65;
      *(_QWORD *)((char *)a1 + v18[14]) = *(_QWORD *)((char *)a2 + v18[14]);
      goto LABEL_36;
    case 6u:
      v29 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v29;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v30 = (int *)type metadata accessor for FeedWebEmbed();
      v31 = v30[8];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_1BB86C67C();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v36(v32, v33, v34);
      v37 = v30[9];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v95 = v36;
      v96 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))((char *)a2 + v37, 1, v34))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v36(v38, v39, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
      }
      *(_QWORD *)((char *)a1 + v30[10]) = *(_QWORD *)((char *)a2 + v30[10]);
      *(_QWORD *)((char *)a1 + v30[11]) = *(_QWORD *)((char *)a2 + v30[11]);
      v58 = v30[12];
      v59 = (_OWORD *)((char *)a1 + v58);
      v60 = (_OWORD *)((char *)a2 + v58);
      v61 = (int *)type metadata accessor for FeedHeadline(0);
      v62 = *((_QWORD *)v61 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v62 + 48))(v60, 1, v61))
      {
        sub_1BA7C2AA0(0);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v92 = v62;
        v93 = v30;
        *v59 = *v60;
        *((_QWORD *)v59 + 2) = *((_QWORD *)v60 + 2);
        *((_BYTE *)v59 + 24) = *((_BYTE *)v60 + 24);
        *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
        *(_OWORD *)((char *)v59 + 40) = *(_OWORD *)((char *)v60 + 40);
        *((_BYTE *)v59 + 56) = *((_BYTE *)v60 + 56);
        v66 = v61[10];
        v67 = (char *)v59 + v66;
        v68 = (char *)v60 + v66;
        *v67 = *((_BYTE *)v60 + v66);
        v67[1] = *((_BYTE *)v60 + v66 + 1);
        v69 = (int *)type metadata accessor for FeedHeadline.State(0);
        v70 = v69[6];
        __dst = &v67[v70];
        v71 = &v68[v70];
        v72 = (int *)type metadata accessor for SharedItem();
        v91 = *((_QWORD *)v72 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v91 + 48))(v71, 1, v72))
        {
          v73 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          v74 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(__dst, v71, v74);
          __dst[v72[5]] = v71[v72[5]];
          *(_QWORD *)&__dst[v72[6]] = *(_QWORD *)&v71[v72[6]];
          v95(&__dst[v72[7]], &v71[v72[7]], v96);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56))(__dst, 0, 1, v72);
        }
        v67[v69[7]] = v68[v69[7]];
        v67[v69[8]] = v68[v69[8]];
        v67[v69[9]] = v68[v69[9]];
        v67[v69[10]] = v68[v69[10]];
        v75 = v61[11];
        v76 = (char *)v59 + v75;
        v77 = (char *)v60 + v75;
        v78 = sub_1BB871B24();
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        v30 = v93;
        *(_OWORD *)((char *)v59 + v61[12]) = *(_OWORD *)((char *)v60 + v61[12]);
        v81 = v61[13];
        v82 = *(_QWORD *)((char *)v60 + v81);
        if (v82 == 2)
          v82 = 2;
        *(_QWORD *)((char *)v59 + v81) = v82;
        *(_QWORD *)((char *)v59 + v61[14]) = *(_QWORD *)((char *)v60 + v61[14]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v92 + 56))(v59, 0, 1, v61);
      }
      v83 = v30[13];
      v84 = (_OWORD *)((char *)a1 + v83);
      v85 = (_OWORD *)((char *)a2 + v83);
      v86 = type metadata accessor for WebEmbedDataVisualization();
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v84 = *v85;
          v89 = type metadata accessor for GenericDataVisualization();
          v95((char *)v84 + *(int *)(v89 + 20), (char *)v85 + *(int *)(v89 + 20), v96);
          *(_QWORD *)((char *)v84 + *(int *)(v89 + 24)) = *(_QWORD *)((char *)v85 + *(int *)(v89 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v84, v85, *(_QWORD *)(v87 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      *((_BYTE *)a1 + v30[14]) = *((_BYTE *)a2 + v30[14]);
      goto LABEL_36;
    case 0xBu:
      v41 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v41;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v42 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)a2 + v42);
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v43 = (char *)&loc_1BA9445BC + 4 * word_1BB886848[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xCu:
      *a1 = *a2;
      v44 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = sub_1BB871E24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1BA9454C4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  int *v18;
  uint64_t v19;
  _BYTE *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  int *v69;
  uint64_t v70;
  char *v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *result;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  char *__dst;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  char *v97;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v4 = type metadata accessor for FeedGroupItem();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        v6 = (int *)type metadata accessor for FeedWeather(0);
        v7 = v6[7];
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_1BB87270C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
        v11 = v6[9];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
        v15 = v14;
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
        v16(v12, v13, v14);
        v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v16(&v12[v17[5]], &v13[v17[5]], v15);
        v16(&v12[v17[6]], &v13[v17[6]], v15);
        v16(&v12[v17[7]], &v13[v17[7]], v15);
        *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
        goto LABEL_37;
      case 5u:
        *a1 = *a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
        v18 = (int *)type metadata accessor for FeedHeadline(0);
        v19 = v18[10];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        *v20 = *((_BYTE *)a2 + v19);
        v20[1] = *((_BYTE *)a2 + v19 + 1);
        v22 = (int *)type metadata accessor for FeedHeadline.State(0);
        v23 = v22[6];
        v24 = &v20[v23];
        v25 = &v21[v23];
        v26 = (int *)type metadata accessor for SharedItem();
        v27 = *((_QWORD *)v26 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
        {
          v28 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v48 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v24, v25, v48);
          v24[v26[5]] = v25[v26[5]];
          *(_QWORD *)&v24[v26[6]] = *(_QWORD *)&v25[v26[6]];
          v49 = v26[7];
          v97 = &v24[v49];
          v50 = &v25[v49];
          v51 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v97, v50, v51);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
        }
        v20[v22[7]] = v21[v22[7]];
        v20[v22[8]] = v21[v22[8]];
        v20[v22[9]] = v21[v22[9]];
        v20[v22[10]] = v21[v22[10]];
        v52 = v18[11];
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_1BB871B24();
        v56 = *(_QWORD *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
        v64 = v18[13];
        v65 = *(_QWORD *)((char *)a2 + v64);
        if (v65 == 2)
          v65 = 2;
        *(_QWORD *)((char *)a1 + v64) = v65;
        *(_QWORD *)((char *)a1 + v18[14]) = *(_QWORD *)((char *)a2 + v18[14]);
        goto LABEL_37;
      case 6u:
        v29 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v29;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v30 = (int *)type metadata accessor for FeedWebEmbed();
        v31 = v30[8];
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = sub_1BB86C67C();
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v36(v32, v33, v34);
        v37 = v30[9];
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v95 = v36;
        v96 = v34;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))((char *)a2 + v37, 1, v34))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v36(v38, v39, v34);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
        }
        *(_QWORD *)((char *)a1 + v30[10]) = *(_QWORD *)((char *)a2 + v30[10]);
        *(_QWORD *)((char *)a1 + v30[11]) = *(_QWORD *)((char *)a2 + v30[11]);
        v58 = v30[12];
        v59 = (_OWORD *)((char *)a1 + v58);
        v60 = (_OWORD *)((char *)a2 + v58);
        v61 = (int *)type metadata accessor for FeedHeadline(0);
        v62 = *((_QWORD *)v61 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v62 + 48))(v60, 1, v61))
        {
          sub_1BA7C2AA0(0);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          v92 = v62;
          v93 = v30;
          *v59 = *v60;
          *((_QWORD *)v59 + 2) = *((_QWORD *)v60 + 2);
          *((_BYTE *)v59 + 24) = *((_BYTE *)v60 + 24);
          *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
          *(_OWORD *)((char *)v59 + 40) = *(_OWORD *)((char *)v60 + 40);
          *((_BYTE *)v59 + 56) = *((_BYTE *)v60 + 56);
          v66 = v61[10];
          v67 = (char *)v59 + v66;
          v68 = (char *)v60 + v66;
          *v67 = *((_BYTE *)v60 + v66);
          v67[1] = *((_BYTE *)v60 + v66 + 1);
          v69 = (int *)type metadata accessor for FeedHeadline.State(0);
          v70 = v69[6];
          __dst = &v67[v70];
          v71 = &v68[v70];
          v72 = (int *)type metadata accessor for SharedItem();
          v91 = *((_QWORD *)v72 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v91 + 48))(v71, 1, v72))
          {
            v73 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            v74 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(__dst, v71, v74);
            __dst[v72[5]] = v71[v72[5]];
            *(_QWORD *)&__dst[v72[6]] = *(_QWORD *)&v71[v72[6]];
            v95(&__dst[v72[7]], &v71[v72[7]], v96);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56))(__dst, 0, 1, v72);
          }
          v67[v69[7]] = v68[v69[7]];
          v67[v69[8]] = v68[v69[8]];
          v67[v69[9]] = v68[v69[9]];
          v67[v69[10]] = v68[v69[10]];
          v75 = v61[11];
          v76 = (char *)v59 + v75;
          v77 = (char *)v60 + v75;
          v78 = sub_1BB871B24();
          v79 = *(_QWORD *)(v78 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
          }
          v30 = v93;
          *(_OWORD *)((char *)v59 + v61[12]) = *(_OWORD *)((char *)v60 + v61[12]);
          v81 = v61[13];
          v82 = *(_QWORD *)((char *)v60 + v81);
          if (v82 == 2)
            v82 = 2;
          *(_QWORD *)((char *)v59 + v81) = v82;
          *(_QWORD *)((char *)v59 + v61[14]) = *(_QWORD *)((char *)v60 + v61[14]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v92 + 56))(v59, 0, 1, v61);
        }
        v83 = v30[13];
        v84 = (_OWORD *)((char *)a1 + v83);
        v85 = (_OWORD *)((char *)a2 + v83);
        v86 = type metadata accessor for WebEmbedDataVisualization();
        v87 = *(_QWORD *)(v86 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v84 = *v85;
            v89 = type metadata accessor for GenericDataVisualization();
            v95((char *)v84 + *(int *)(v89 + 20), (char *)v85 + *(int *)(v89 + 20), v96);
            *(_QWORD *)((char *)v84 + *(int *)(v89 + 24)) = *(_QWORD *)((char *)v85 + *(int *)(v89 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v84, v85, *(_QWORD *)(v87 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
        }
        *((_BYTE *)a1 + v30[14]) = *((_BYTE *)a2 + v30[14]);
        goto LABEL_37;
      case 0xBu:
        v41 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v41;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v42 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)a2 + v42);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v43 = (char *)&loc_1BA945858 + 4 * word_1BB88685A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xCu:
        *a1 = *a2;
        v44 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = sub_1BB871E24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BA946768()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA946774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BA9467B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA9467BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BA9467FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedGroupItem();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static FormatCodingNotEmptyImageExpressionLogicStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

BOOL static FormatCodingNotEmptyImageExpressionLogicStrategy.shouldEncode(wrappedValue:)(_BYTE *a1)
{
  return (*a1 & 1) == 0;
}

double static FormatCodingNotEmptyTextExpressionLogicStrategy.defaultValue.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 50) = -64;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

BOOL static FormatCodingNotEmptyTextExpressionLogicStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  int8x16_t v1;
  uint64_t v2;

  v1 = vorrq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 24));
  v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(_QWORD *)(a1 + 40);
  return *(_QWORD *)a1 != 1
      || v2 != 0
      || (*(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16)) != 12582912;
}

double sub_1BA9468F0@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 50) = -64;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

BOOL sub_1BA946918(uint64_t a1)
{
  int8x16_t v1;
  uint64_t v2;

  v1 = vorrq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 24));
  v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(_QWORD *)(a1 + 40);
  return *(_QWORD *)a1 != 1
      || v2 != 0
      || (*(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16)) != 12582912;
}

void static FormatCodingNotEmptyURLExpressionLogicStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

BOOL static FormatCodingNotEmptyURLExpressionLogicStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 1;
}

BOOL sub_1BA94697C(unsigned __int8 *a1)
{
  return *a1 != 1;
}

double sub_1BA94698C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 13;
  *a1 = xmmword_1BB8868A0;
  return result;
}

double static FormatCodingNotEmptyFloatExpressionLogicStrategy.defaultValue.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 13;
  *a1 = xmmword_1BB8868A0;
  return result;
}

BOOL static FormatCodingNotEmptyFloatExpressionLogicStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 13;
}

unint64_t sub_1BA9469BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA9469E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA9469E0()
{
  unint64_t result;

  result = qword_1EF2AAF38;
  if (!qword_1EF2AAF38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyImageExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyImageExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AAF38);
  }
  return result;
}

unint64_t sub_1BA946A2C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA946A50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA946A50()
{
  unint64_t result;

  result = qword_1EF2AAFA0;
  if (!qword_1EF2AAFA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyTextExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyTextExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AAFA0);
  }
  return result;
}

unint64_t sub_1BA946A9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA946AC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA946AC0()
{
  unint64_t result;

  result = qword_1EF2AB008;
  if (!qword_1EF2AB008)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyLayeredMediaExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyLayeredMediaExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB008);
  }
  return result;
}

unint64_t sub_1BA946B08()
{
  unint64_t result;

  result = qword_1ED3B02E0;
  if (!qword_1ED3B02E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingLayeredMediaExpressionLogic, &type metadata for FormatBindingLayeredMediaExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3B02E0);
  }
  return result;
}

unint64_t sub_1BA946B50()
{
  unint64_t result;

  result = qword_1ED39BD70;
  if (!qword_1ED39BD70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingLayeredMediaExpressionLogic, &type metadata for FormatBindingLayeredMediaExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED39BD70);
  }
  return result;
}

unint64_t sub_1BA946B94(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA946BB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA946BB8()
{
  unint64_t result;

  result = qword_1EF2AB070;
  if (!qword_1EF2AB070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyShareAttributionExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyShareAttributionExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB070);
  }
  return result;
}

unint64_t sub_1BA946C00()
{
  unint64_t result;

  result = qword_1ED3C0210[0];
  if (!qword_1ED3C0210[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingShareAttributionExpressionLogic, &type metadata for FormatBindingShareAttributionExpressionLogic);
    atomic_store(result, qword_1ED3C0210);
  }
  return result;
}

unint64_t sub_1BA946C48()
{
  unint64_t result;

  result = qword_1ED3A0740;
  if (!qword_1ED3A0740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingShareAttributionExpressionLogic, &type metadata for FormatBindingShareAttributionExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3A0740);
  }
  return result;
}

unint64_t sub_1BA946C8C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA946CB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA946CB0()
{
  unint64_t result;

  result = qword_1EF2AB0D8;
  if (!qword_1EF2AB0D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyURLExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyURLExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB0D8);
  }
  return result;
}

unint64_t sub_1BA946CFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA946D20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA946D20()
{
  unint64_t result;

  result = qword_1EF2AB140;
  if (!qword_1EF2AB140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyDateTimeExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyDateTimeExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB140);
  }
  return result;
}

unint64_t sub_1BA946D6C()
{
  unint64_t result;

  result = qword_1ED3AA2A0;
  if (!qword_1ED3AA2A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogic, &type metadata for FormatBindingDateTimeExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3AA2A0);
  }
  return result;
}

unint64_t sub_1BA946DB0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA946DD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA946DD4()
{
  unint64_t result;

  result = qword_1EF2AB1A8;
  if (!qword_1EF2AB1A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptyFloatExpressionLogicStrategy, &type metadata for FormatCodingNotEmptyFloatExpressionLogicStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB1A8);
  }
  return result;
}

unint64_t sub_1BA946E1C()
{
  unint64_t result;

  result = qword_1ED3ACA68;
  if (!qword_1ED3ACA68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogic, &type metadata for FormatBindingFloatExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA68);
  }
  return result;
}

unint64_t sub_1BA946E64()
{
  unint64_t result;

  result = qword_1ED3AE368;
  if (!qword_1ED3AE368)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogic, &type metadata for FormatBindingFloatExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3AE368);
  }
  return result;
}

BOOL sub_1BA946EA8(unsigned __int8 *a1)
{
  return *a1 != 13;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyImageExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyImageExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyTextExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyTextExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyLayeredMediaExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyLayeredMediaExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyShareAttributionExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyShareAttributionExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyURLExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyURLExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyDateTimeExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyDateTimeExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyFloatExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyFloatExpressionLogicStrategy;
}

uint64_t FeedReplaceLocation.group.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t FeedReplaceLocation.cursorContainer.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t FeedReplaceLocation.init(group:cursorContainer:findConfigBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a7, a1, AssociatedTypeWitness);
  result = type metadata accessor for FeedReplaceLocation(0, a5, a6, v15);
  *(_QWORD *)(a7 + *(int *)(result + 36)) = a2;
  v17 = (_QWORD *)(a7 + *(int *)(result + 40));
  *v17 = a3;
  v17[1] = a4;
  return result;
}

uint64_t type metadata accessor for FeedReplaceLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedReplaceLocation);
}

uint64_t sub_1BA94711C()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1BA94720C(_QWORD *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = v9;
    a1 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = v12[1];
    v14 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v12;
    v14[1] = v13;
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_1BA947350(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  swift_release();
  return swift_release();
}

uint64_t sub_1BA94741C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (uint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = v10;
  v12[1] = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA947510(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v7 += 15;
  v9 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  *v9 = v8;
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8);
  *v10 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  v10[1] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BA94761C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA947700(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BA9477F8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1BA9479B4(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1BA947B20()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA947BA8);
}

void sub_1BA947B28()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BA947B30);
  JUMPOUT(0x1BA947BA8);
}

void sub_1BA947B80()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA947BA8);
}

void sub_1BA947B88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA947BA8);
}

uint64_t sub_1BA947B90@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1BA947BA8);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1BA947BA4);
    JUMPOUT(0x1BA947B9CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t FormatAnimationNodeDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatAnimationNodeDataLayoutAttributes.animationData.getter()
{
  return swift_retain();
}

uint64_t FormatAnimationNodeDataLayoutAttributes.sourceItemData.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_1BA8E9488(v4, v5);
}

uint64_t FormatAnimationNodeDataLayoutAttributes<A>.auxViewRequirements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 8))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_1BA947C10(uint64_t a1, uint64_t a2)
{
  return FormatAnimationNodeDataLayoutAttributes<A>.auxViewRequirements.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t *sub_1BA947C18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v11 = *v10;
    v12 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)(v13 + 8);
    swift_retain();
    if (v14 < 0xFFFFFFFF)
    {
      v15 = *(_OWORD *)v13;
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_OWORD *)v12 = v15;
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

unint64_t sub_1BA947D24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  result = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA947D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = v6 + a1;
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *v8;
  v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 8);
  swift_retain();
  if (v11 < 0xFFFFFFFF)
  {
    v12 = *(_OWORD *)v10;
    *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
    *(_OWORD *)v9 = v12;
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
    *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BA947E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  __int128 v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  if (v10[1] < 0xFFFFFFFFuLL)
  {
    if (v12 >= 0xFFFFFFFF)
    {
      *v10 = *v11;
      v10[1] = v11[1];
      v10[2] = v11[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v13 = *(_OWORD *)v11;
    v10[2] = v11[2];
    *(_OWORD *)v10 = v13;
    return a1;
  }
  if (v12 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[2] = v11[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA947F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = v11;
  return a1;
}

uint64_t sub_1BA947FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v9 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)(v10 + 8) < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v11 = *(_OWORD *)v10;
    *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
    *(_OWORD *)v9 = v11;
    return a1;
  }
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA9480A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BA948128 + 4 * byte_1BB886C40[v10]))();
  }
}

void sub_1BA9481B4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFE8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BA9482B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA948334);
}

void sub_1BA9482B8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA9482C0);
  JUMPOUT(0x1BA948334);
}

void sub_1BA948308()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA948334);
}

void sub_1BA948310()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA948334);
}

uint64_t sub_1BA948318(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x1BA948324);
    *(_QWORD *)((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = a2;
LABEL_6:
    JUMPOUT(0x1BA948334);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_1BA94834C(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_1BB873DD4();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCE4630](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, sel_contentManifest);

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedContentPrefetchContext.init(formatService:assetHandleFactory:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BA4CECCC(a1, a3);
  return sub_1BA4CECCC(a2, a3 + 40);
}

uint64_t FeedContentPrefetchTask.Result.serviceConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

id FeedContentPrefetchTask.Result.manifest.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_1BA948514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
  result = type metadata accessor for FeedContentPrefetchTask.Result(0, a3, a4, v11);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t FeedContentPrefetchTask.__allocating_init(configFetcher:context:purpose:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  FeedContentPrefetchTask.init(configFetcher:context:purpose:log:)(a1, a2, a3, a4);
  return v8;
}

char *FeedContentPrefetchTask.init(configFetcher:context:purpose:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();

  v8 = *(_QWORD *)v4;
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 104)], a1, v9);
  v10 = *(_QWORD *)(v8 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v14 + v13, a2, AssociatedTypeWitness);
  v15 = (uint64_t (**)())&v4[*(_QWORD *)(*(_QWORD *)v4 + 112)];
  *v15 = sub_1BA94882C;
  v15[1] = (uint64_t (*)())v14;
  *(_QWORD *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 120)] = a3;
  *((_QWORD *)v4 + 2) = a4;
  return v4;
}

uint64_t sub_1BA948700(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v5 = (char *)&v7 - v4;
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, AssociatedTypeWitness);
  return sub_1BB86E9D4();
}

uint64_t sub_1BA9487B8()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BA94882C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1BA948700(v0 + ((v1 + 32) & ~v1));
}

char *FeedContentPrefetchTask.__allocating_init(configFetcher:purpose:log:contextBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v10;
  char *v11;

  v10 = (char *)swift_allocObject();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v10 + 80) - 8) + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 104)], a1);
  v11 = &v10[*(_QWORD *)(*(_QWORD *)v10 + 112)];
  *(_QWORD *)v11 = a4;
  *((_QWORD *)v11 + 1) = a5;
  *(_QWORD *)&v10[*(_QWORD *)(*(_QWORD *)v10 + 120)] = a2;
  *((_QWORD *)v10 + 2) = a3;
  return v10;
}

char *FeedContentPrefetchTask.init(configFetcher:purpose:log:contextBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v10;

  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 80) - 8) + 32))(&v5[*(_QWORD *)(*(_QWORD *)v5 + 104)], a1);
  v10 = &v5[*(_QWORD *)(*(_QWORD *)v5 + 112)];
  *(_QWORD *)v10 = a4;
  *((_QWORD *)v10 + 1) = a5;
  *(_QWORD *)&v5[*(_QWORD *)(*(_QWORD *)v5 + 120)] = a2;
  *((_QWORD *)v5 + 2) = a3;
  return v5;
}

uint64_t FeedContentPrefetchTask.prefetch(with:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v3 = *v1;
  v4 = v1[2];
  v5 = sub_1BB87330C();
  sub_1BB86EF44("FeedContentPrefetchTask: will prefetch config", 45, 2, &dword_1BA493000, v4, v5, MEMORY[0x1E0DEE9D8]);
  v7 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v3 + 88);
  swift_getAssociatedTypeWitness();
  sub_1BB86EC14();
  v8 = (void *)sub_1BB86E854();
  swift_getAssociatedTypeWitness();
  sub_1BB86E980();
  swift_release();

  sub_1BA948E50(a1, (uint64_t)&v22);
  v9 = (_OWORD *)swift_allocObject();
  v10 = v25;
  v9[3] = v24;
  v9[4] = v10;
  v9[5] = v26;
  v11 = v23;
  v9[1] = v22;
  v9[2] = v11;
  v12 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  sub_1BA948E50(a1, (uint64_t)&v22);
  v13 = (_OWORD *)swift_allocObject();
  v14 = v25;
  v13[3] = v24;
  v13[4] = v14;
  v13[5] = v26;
  v15 = v23;
  v13[1] = v22;
  v13[2] = v15;
  v16 = (void *)sub_1BB86E854();
  sub_1BA94945C();
  swift_getTupleTypeMetadata2();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v17 = (void *)sub_1BB86E854();
  type metadata accessor for FeedContentPrefetchTask.Result(0, v7, v6, v18);
  sub_1BB86E98C();
  swift_release();

  v19 = (void *)sub_1BB86E854();
  v20 = sub_1BB86E9B0();
  swift_release();

  return v20;
}

uint64_t sub_1BA948C60()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)))();
}

uint64_t sub_1BA948C8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)a2 + 88) + 48))(a1, *(_QWORD *)(*(_QWORD *)a2 + 80));
}

uint64_t sub_1BA948CC4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*a2 + 80);
  v20 = *(_QWORD *)(*a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v19 - v9;
  v11 = a2[2];
  v12 = sub_1BB87330C();
  sub_1BB86EF44("FeedContentPrefetchTask: will prefetch content", 46, 2, &dword_1BA493000, v11, v12, MEMORY[0x1E0DEE9D8]);
  sub_1BA948ED0(a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, AssociatedTypeWitness);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (char *)swift_allocObject();
  v15 = v20;
  *((_QWORD *)v14 + 2) = v6;
  *((_QWORD *)v14 + 3) = v15;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[v13], v10, AssociatedTypeWitness);
  swift_retain();
  v16 = (void *)sub_1BB86E854();
  v17 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1BA948E50(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a2 + 40, a1 + 40);
  return a2;
}

uint64_t sub_1BA948EB8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1BA948CC4(a1, a2, v2 + 16);
}

uint64_t sub_1BA948ED0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[2];
  _BYTE v23[16];

  v4 = *v2;
  v5 = (int *)type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)((char *)v2 + *(_QWORD *)(v4 + 120));
  v9 = (void *)v2[2];
  v10 = qword_1ED3BE7C0;
  v11 = v8;
  v12 = v9;
  if (v10 != -1)
    swift_once();
  v13 = type metadata accessor for FormatTransformData();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED4768B8);
  sub_1BA4C2DD8(v14, (uint64_t)&v7[v5[10]], (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
  *((_QWORD *)v7 + 5) = 0x4122750000000000;
  v7[48] = 0;
  *(_QWORD *)&v7[v5[12]] = v11;
  *(_QWORD *)&v7[v5[13]] = v12;
  *(_OWORD *)(v7 + 56) = xmmword_1BB886D10;
  *((_QWORD *)v7 + 9) = 0x40F5180000000000;
  *((_QWORD *)v7 + 10) = 30;
  *(_QWORD *)&v7[v5[11]] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v7[v5[15]] = 0;
  *((_QWORD *)v7 + 4) = 0;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v7[v5[14]] = 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = sub_1BA949B14(AssociatedTypeWitness, AssociatedConformanceWitness);
  MEMORY[0x1E0C80A78](v17);
  v22[-2] = a2;
  v22[-1] = v7;
  v18 = sub_1BA8A2124((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA94B21C, (uint64_t)&v22[-4], v17, (uint64_t)v23);
  swift_bridgeObjectRelease();
  sub_1BA94B238(0);
  v22[1] = v18;
  v19 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3AAD98, (uint64_t (*)(uint64_t))sub_1BA94B238, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA94B254(&qword_1ED3AADA0, &qword_1ED3AAD98, (uint64_t (*)(uint64_t))sub_1BA94B238);
  v20 = sub_1BB86E920();

  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BA949168@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  v5 = *(_QWORD *)(a1 + 16);
  sub_1BA7AA598();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = sub_1BB87420C();
  v9 = v8;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  v10 = sub_1BB87330C();
  sub_1BB86EF44("FeedContentPrefetchTask: successfully prefetched content for %{public}@ groups", 78, 2, &dword_1BA493000, v5, v10, v6);
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a3, a2, AssociatedTypeWitness);
}

uint64_t sub_1BA949288(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a3;
  v6 = *(_QWORD *)(*a2 + 80);
  v5 = *(_QWORD *)(*a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v18 - v9;
  v11 = a2[2];
  v12 = sub_1BB87330C();
  sub_1BB86EF44("FeedContentPrefetchTask: will prefetch assets", 45, 2, &dword_1BA493000, v11, v12, MEMORY[0x1E0DEE9D8]);
  v19 = sub_1BA94ADA4(a1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, AssociatedTypeWitness);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v6;
  *((_QWORD *)v14 + 3) = v5;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[v13], v10, AssociatedTypeWitness);
  swift_retain();
  v15 = (void *)sub_1BB86E854();
  sub_1BA94945C();
  swift_getTupleTypeMetadata2();
  v16 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1BA949444(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1BA949288(a1, a2, v2 + 16);
}

void sub_1BA94945C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9620)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B97A0);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9620);
  }
}

uint64_t sub_1BA9494C0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  v6 = *a1;
  v7 = *(_QWORD *)(a2 + 16);
  sub_1BA7AA598();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  v9 = sub_1BB87420C();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  v12 = sub_1BB87330C();
  sub_1BB86EF44("FeedContentPrefetchTask: successfully prefetched %{public}@ assets", 66, 2, &dword_1BA493000, v7, v12, v8);
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1BA94945C();
  v14 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a4, a3, AssociatedTypeWitness);
  *(_QWORD *)(a4 + v14) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA94964C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void (*v27)(char *, uint64_t, uint64_t, double);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  v30 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v31 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1BA94945C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v10);
  v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - v14;
  v17 = *(int *)(v16 + 48);
  v27 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v27(v8, a1, AssociatedTypeWitness, v13);
  v18 = *(_QWORD *)(a1 + v17);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v8, AssociatedTypeWitness);
  swift_bridgeObjectRetain();
  v19 = sub_1BA9498B4((uint64_t)v15);
  v20 = v29;
  sub_1BA94834C(v18);
  v29 = v20;
  swift_bridgeObjectRelease();
  v21 = objc_allocWithZone(MEMORY[0x1E0D58A78]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3A2FE0);
  v22 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithManifests_, v22);

  v24 = (uint64_t)v28;
  ((void (*)(char *, char *, uint64_t))v27)(v28, v15, AssociatedTypeWitness);
  v25 = objc_msgSend((id)objc_opt_self(), sel_manifestByMergingManifest_withManifest_, v19, v23);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, AssociatedTypeWitness);
  return sub_1BA948514(v24, (uint64_t)v25, v30, v31, v32);
}

uint64_t sub_1BA949894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BA94964C(a1, a2, a3);
}

uint64_t type metadata accessor for FeedContentPrefetchTask.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedContentPrefetchTask.Result);
}

id sub_1BA9498B4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v11 - v5, a1, AssociatedTypeWitness, v3);
  sub_1BA4D9CE8(0, &qword_1ED3A0EC0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = *((_QWORD *)&v12 + 1);
    v7 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    if (v8)
    {
      v9 = objc_msgSend(v8, sel_contentManifest);

      return v9;
    }
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1BA4A2E80((uint64_t)&v11, (uint64_t (*)(_QWORD))sub_1BA94AB50);
  }
  return objc_msgSend((id)objc_opt_self(), sel_empty);
}

uint64_t sub_1BA949A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = sub_1BB8732F4();
  sub_1BA7AA598();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0xE000000000000000;
  sub_1BB86EF44("FeedContentPrefetchTask: failed to prefetch content with error %{public}@", 73, 2, &dword_1BA493000, v2, v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA949B14(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v19[-v7];
  v9 = swift_checkMetadataState();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v19[-v12];
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 64))(a1, a2, v11);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v9, AssociatedConformanceWitness);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  v14 = swift_getAssociatedConformanceWitness();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(AssociatedTypeWitness, v14);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  v22 = v15;
  v20 = a1;
  v21 = a2;
  swift_getAssociatedTypeWitness();
  v16 = sub_1BB872EE0();
  type metadata accessor for FormatContent(0);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v16);
  v17 = sub_1BB872BF8();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1BA949D34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[5];

  v8 = type metadata accessor for FormatServiceOptions();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v18 = a2;
  v19 = a1;
  v20 = a3;
  type metadata accessor for FormatContent.Resolved();
  sub_1BB86EC14();
  sub_1BA948E50(a2, (uint64_t)v21);
  sub_1BA4C2DD8(a3, (uint64_t)&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (_OWORD *)swift_allocObject();
  v13 = v21[3];
  v12[3] = v21[2];
  v12[4] = v13;
  v12[5] = v21[4];
  v14 = v21[1];
  v12[1] = v21[0];
  v12[2] = v14;
  sub_1BA94B4AC((uint64_t)&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v12 + v11);
  v15 = (void *)sub_1BB86E854();
  v16 = sub_1BB86E968();
  swift_release();
  swift_release();

  *a4 = v16;
}

uint64_t sub_1BA949E94(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  const char **v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const char *v13;
  const char *v14;
  const char *v15;
  const char *v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a2;
  v24 = a3;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for FormatContentPool();
  MEMORY[0x1E0C80A78](v7);
  v9 = (const char **)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = a1[3];
  v22 = a1[4];
  v21 = __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB871E24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = (const char *)sub_1BA8F28DC(MEMORY[0x1E0DEE9D8]);
  v14 = (const char *)sub_1BA8F28DC((uint64_t)v12);
  v15 = (const char *)sub_1BA8F2AF8((uint64_t)v12);
  v16 = (const char *)sub_1BA8F2C60((uint64_t)v12);
  v17 = (const char *)sub_1BA8F2C74((uint64_t)v12);
  v18 = sub_1BA8F2AEC((uint64_t)v12);
  FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)((unint64_t)v12, v13, (unint64_t)v12, (uint64_t)v12, v14, v15, v12, v12, v9, (unint64_t)v12, v12, v12, v16, v17, (unint64_t)v12, v18, (uint64_t)v6);
  v19 = FormatServiceType.resolve(content:pool:options:)(v23, (uint64_t)v9, v24, v10, v22);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  return v19;
}

uint64_t sub_1BA94A05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12[2];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v5 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2, v5);
  sub_1BA4D9CE8(0, &qword_1ED3AD2D0);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v12, (uint64_t)v14);
    v8 = v15;
    v9 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(a1 + 40, v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA94B09C);
    return MEMORY[0x1E0DEE9D8];
  }
  return v10;
}

id *FeedContentPrefetchTask.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 13));
  swift_release();

  return v0;
}

uint64_t FeedContentPrefetchTask.__deallocating_deinit()
{
  FeedContentPrefetchTask.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of FeedGroupPrefetchable.prefetchableContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedConfigPrefetchable.prefetchableAssets(factory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for FeedContentPrefetchTaskError()
{
  return &type metadata for FeedContentPrefetchTaskError;
}

uint64_t destroy for FeedContentPrefetchContext(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for FeedContentPrefetchContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for FeedContentPrefetchContext(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for FeedContentPrefetchContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedContentPrefetchContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedContentPrefetchContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedContentPrefetchContext()
{
  return &type metadata for FeedContentPrefetchContext;
}

uint64_t sub_1BA94A3D0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FeedContentPrefetchTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedContentPrefetchTask);
}

uint64_t method lookup function for FeedContentPrefetchTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedContentPrefetchTask.__allocating_init(configFetcher:context:purpose:log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedContentPrefetchTask.__allocating_init(configFetcher:purpose:log:contextBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1BA94A490()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BA94A518(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  void *v10;
  id v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = v10;
    v11 = v10;
  }
  return a1;
}

void sub_1BA94A5E8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);

}

uint64_t sub_1BA94A64C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  *v7 = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_1BA94A6D0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  void *v9;
  id v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v7;
  *v7 = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_1BA94A75C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA94A7DC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1BA94A864(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1BA94A9AC(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1BA94AAC0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA94AB38);
}

void sub_1BA94AAC8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BA94AAD0);
  JUMPOUT(0x1BA94AB38);
}

void sub_1BA94AB14()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA94AB38);
}

void sub_1BA94AB1C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA94AB38);
}

uint64_t sub_1BA94AB24@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1BA94AB38);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1BA94AB34);
    JUMPOUT(0x1BA94AB30);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

void sub_1BA94AB50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AD5F8)
  {
    sub_1BA4D9CE8(255, &qword_1ED3A0EC0);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AD5F8);
  }
}

uint64_t sub_1BA94ABB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12[2];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)v12 - v7, a1, AssociatedTypeWitness, v5);
  sub_1BA4D9CE8(0, &qword_1ED3A4EF8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v12, (uint64_t)v14);
    v8 = v15;
    v9 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA94B584);
    v11 = type metadata accessor for FormatContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1BA94ADA4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_1BA94A05C(a2, AssociatedTypeWitness);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1BA94B038();
    v11 = (void *)sub_1BB86E854();
    sub_1BA4B07F0(0, &qword_1ED3AE440, (uint64_t (*)(uint64_t))sub_1BA94B038, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA94B254(&qword_1ED3AE448, &qword_1ED3AE440, (uint64_t (*)(uint64_t))sub_1BA94B038);
    v12 = sub_1BB86E920();
    swift_bridgeObjectRelease();

    return v12;
  }
  v5 = sub_1BB873F30();
  if (!v5)
    goto LABEL_14;
LABEL_3:
  result = sub_1BB873DD4();
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCE4630](v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_filePath, v13);
      if (v10)
      {

        v13 = v9;
        sub_1BA94B038();
        swift_allocObject();
        sub_1BB86E9E0();
      }
      else
      {
        MEMORY[0x1E0C80A78](0);
        sub_1BA94B038();
        swift_allocObject();
        sub_1BB86EA58();

      }
      ++v7;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    while (v5 != v7);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA94B014(uint64_t a1)
{
  return sub_1BA94B1A8(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BA9494C0);
}

uint64_t sub_1BA94B030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA98E8CC(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1BA94B038()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AD1E0)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B97A0);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AD1E0);
  }
}

void sub_1BA94B09C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AD2D8[0])
  {
    sub_1BA4D9CE8(255, &qword_1ED3AD2D0);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1ED3AD2D8);
  }
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BA94B18C(uint64_t a1)
{
  return sub_1BA94B1A8(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BA949168);
}

uint64_t sub_1BA94B1A8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

void sub_1BA94B21C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1BA949D34(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1BA94B238(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A3A30, (uint64_t (*)(uint64_t))type metadata accessor for FormatContent.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

uint64_t sub_1BA94B254(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA94B29C()
{
  uint64_t v0;

  return sub_1BA949E94(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BA94B2B8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = (int *)type metadata accessor for FormatServiceOptions();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 96) & ~v2;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v4 = v0 + v3;
  if (*(_QWORD *)(v0 + v3 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  v5 = v4 + v1[10];
  if (*(_QWORD *)v5)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v5 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v5 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v7 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = v6 + *(int *)(v7 + 24);
    v9 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      v12 = v8 + *(int *)(v9 + 24);
      v10 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v12, v10);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v6 + *(int *)(v7 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA94B4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatServiceOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA94B4F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  v4 = (char *)v1 + ((v3 + 96) & ~v3);
  v5 = v1[5];
  v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v6 + 16))(a1, v4, v5, v6);
}

uint64_t sub_1BA94B56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA94ABB4(a1, a2);
}

void sub_1BA94B584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AD2C8)
  {
    sub_1BA4D9CE8(255, &qword_1ED3A4EF8);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AD2C8);
  }
}

void sub_1BA94B5F0(uint64_t a1@<X8>)
{
  FormatPluginDataProviding.pluginPlaceholderContent.getter(a1);
}

void FormatPluginDataProviding.pluginPlaceholderContent.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 4;
}

void sub_1BA94B614(_BYTE *a1@<X8>)
{
  FormatPluginDataProviding.autoscrollBehavior.getter(a1);
}

void FormatPluginDataProviding.autoscrollBehavior.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t dispatch thunk of FormatPluginDataProviding.pluginPlaceholderContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatPluginDataProviding.autoscrollBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void static FormatSlotItemTagFilterCondition.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA94B67C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v8;
  _QWORD v9[7];

  if (v0 >> 62)
  {
    sub_1BA739250(v0);
    sub_1BA739250(v1);
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 16);
  v9[0] = v2;
  sub_1BA739250(v0);
  sub_1BA739250(v1);
  if ((((uint64_t (*)(_QWORD *, uint64_t *))static FormatSlotItemTagFilterCondition.== infix(_:_:))(v9, &v8) & 1) == 0)
  {
LABEL_6:
    sub_1BA6F5D74(v1);
    sub_1BA6F5D74(v0);
    goto LABEL_7;
  }
  v8 = v4;
  v9[0] = v3;
  v5 = ((uint64_t (*)(_QWORD *, uint64_t *))static FormatSlotItemTagFilterCondition.== infix(_:_:))(v9, &v8);
  sub_1BA6F5D74(v1);
  sub_1BA6F5D74(v0);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    v6 = 0;
    return v6 & 1;
  }
  v6 = 1;
  return v6 & 1;
}

unint64_t sub_1BA94B838(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA94B85C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA94B85C()
{
  unint64_t result;

  result = qword_1EF2AB218;
  if (!qword_1EF2AB218)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterCondition, &type metadata for FormatSlotItemTagFilterCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AB218);
  }
  return result;
}

unint64_t sub_1BA94B8A0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA94B8D4();
  a1[2] = sub_1BA94B918();
  result = sub_1BA94B95C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA94B8D4()
{
  unint64_t result;

  result = qword_1EF2AB220;
  if (!qword_1EF2AB220)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterCondition, &type metadata for FormatSlotItemTagFilterCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AB220);
  }
  return result;
}

unint64_t sub_1BA94B918()
{
  unint64_t result;

  result = qword_1EF2AB228;
  if (!qword_1EF2AB228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterCondition, &type metadata for FormatSlotItemTagFilterCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AB228);
  }
  return result;
}

unint64_t sub_1BA94B95C()
{
  unint64_t result;

  result = qword_1EF2AB230;
  if (!qword_1EF2AB230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterCondition, &type metadata for FormatSlotItemTagFilterCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AB230);
  }
  return result;
}

uint64_t sub_1BA94B9A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotItemTagFilterCondition.init(from:)(a1, a2);
}

void sub_1BA94B9B4(_QWORD *a1)
{
  FormatSlotItemTagFilterCondition.encode(to:)(a1);
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatSymbolImageColor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA739250(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatSymbolImageColor(unint64_t *a1)
{
  return sub_1BA6F5D74(*a1);
}

unint64_t *assignWithCopy for FormatSymbolImageColor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA739250(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA6F5D74(v4);
  return a1;
}

unint64_t *assignWithTake for FormatSymbolImageColor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA6F5D74(v3);
  return a1;
}

uint64_t sub_1BA94BA6C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if ((_DWORD)v1 == 3)
    return (*a1 >> 3) + 3;
  else
    return v1;
}

unint64_t *sub_1BA94BA88(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 3)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 3);
    v3 = 0xC000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterCondition()
{
  return &type metadata for FormatSlotItemTagFilterCondition;
}

void sub_1BA94BAC4()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

uint64_t sub_1BA94BB5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v3 - 72) = v5;
  sub_1BA739250(v5);
  sub_1BA739250(v4);
  sub_1BA739250(v5);
  sub_1BA94BAC4();
  v7 = v6;
  sub_1BA6F5D74(v5);
  sub_1BA94C050(v1, v2);
  if ((v7 & 1) != 0)
  {
    *(_QWORD *)(v3 - 72) = v4;
    sub_1BA739250(v4);
    sub_1BA94BAC4();
    v9 = v8;
    sub_1BA6F5D74(v4);
    sub_1BA94C094(v2);
    sub_1BA6F5D74(v5);
    sub_1BA6F5D74(v4);
  }
  else
  {
    sub_1BA94C094(v2);
    sub_1BA6F5D74(v5);
    sub_1BA6F5D74(v4);
    v9 = 0;
  }
  return v9 & 1;
}

void sub_1BA94BEB4()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA94BEE8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = sub_1BA94BEB4();
  v1 = sub_1BB872AFC(v0);
  ((void (*)(_QWORD *))sub_1BA94BEB4)(v1);
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1BA94C01C()
{
  JUMPOUT(0x1BA94C008);
}

void sub_1BA94C034()
{
  JUMPOUT(0x1BA94C008);
}

uint64_t sub_1BA94C050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatServiceOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA94C094(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatServiceOptions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA94C0DC()
{
  return 0x737265746C6966;
}

uint64_t sub_1BA94C0F8()
{
  sub_1BA94C174();
  return sub_1BB874710();
}

uint64_t sub_1BA94C120()
{
  sub_1BA94C174();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterAnd.encode(to:)(_QWORD *a1)
{
  return sub_1BA94C3E8(a1, &qword_1EF2AB238, (uint64_t (*)(void))sub_1BA94C174, (uint64_t)&type metadata for FormatContentSubgroupFilterAnd.CodingKeys);
}

unint64_t sub_1BA94C174()
{
  unint64_t result;

  result = qword_1EF2AB240;
  if (!qword_1EF2AB240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887564, &type metadata for FormatContentSubgroupFilterAnd.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB240);
  }
  return result;
}

void sub_1BA94C1B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF7D0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF7D0);
  }
}

uint64_t FormatContentSubgroupFilterAnd.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA94C584(a1, &qword_1EF2AB248, (uint64_t (*)(void))sub_1BA94C174, (uint64_t)&type metadata for FormatContentSubgroupFilterAnd.CodingKeys, a2);
}

uint64_t sub_1BA94C238(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA94C1B8();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA94C29C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatContentSubgroupFilterAnd.init(from:)(a1, a2);
}

uint64_t sub_1BA94C2B0(_QWORD *a1)
{
  return FormatContentSubgroupFilterAnd.encode(to:)(a1);
}

uint64_t FormatContentSubgroupFilterOr.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatContentSubgroupFilterOr.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA88206C(*a1, *a2);
}

uint64_t sub_1BA94C2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA94C36C()
{
  sub_1BA94C514();
  return sub_1BB874710();
}

uint64_t sub_1BA94C394()
{
  sub_1BA94C514();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterOr.encode(to:)(_QWORD *a1)
{
  return sub_1BA94C3E8(a1, &qword_1ED3A31C8, (uint64_t (*)(void))sub_1BA94C514, (uint64_t)&type metadata for FormatContentSubgroupFilterOr.CodingKeys);
}

uint64_t sub_1BA94C3E8(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[4];

  sub_1BA4CDF6C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v13[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - v9;
  v11 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1BB8746C8();
  v13[3] = v11;
  sub_1BA94C1B8();
  sub_1BA94C238((unint64_t *)&qword_1ED3AAF88, (uint64_t (*)(void))sub_1BA824048, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v13[0] + 8))(v10, v8);
}

unint64_t sub_1BA94C514()
{
  unint64_t result;

  result = qword_1ED3A2C88;
  if (!qword_1ED3A2C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887514, &type metadata for FormatContentSubgroupFilterOr.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C88);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterOr.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA94C584(a1, &qword_1ED3A3110, (uint64_t (*)(void))sub_1BA94C514, (uint64_t)&type metadata for FormatContentSubgroupFilterOr.CodingKeys, a2);
}

uint64_t sub_1BA94C584@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a5;
  sub_1BA4CDF6C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v16 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1BB87468C();
  if (!v5)
  {
    v12 = v15;
    sub_1BA94C1B8();
    sub_1BA94C238((unint64_t *)&qword_1ED3CF7E0, (uint64_t (*)(void))sub_1BA824004, MEMORY[0x1E0DEAF40]);
    v13 = v16;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v13);
    *v12 = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA94C6E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatContentSubgroupFilterOr.init(from:)(a1, a2);
}

uint64_t sub_1BA94C6FC(_QWORD *a1)
{
  return FormatContentSubgroupFilterOr.encode(to:)(a1);
}

uint64_t sub_1BA94C710(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA88206C(*a1, *a2);
}

uint64_t FormatContentSubgroupFilterNot.filter.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t static FormatContentSubgroupFilterNot.== infix(_:_:)(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatContentSubgroupFilter.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

uint64_t sub_1BA94C760()
{
  return 0x7265746C6966;
}

uint64_t sub_1BA94C774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA94C800()
{
  sub_1BA94C968();
  return sub_1BB874710();
}

uint64_t sub_1BA94C828()
{
  sub_1BA94C968();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterNot.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BA4CDF6C(0, &qword_1ED3A31E8, (uint64_t (*)(void))sub_1BA94C968, (uint64_t)&type metadata for FormatContentSubgroupFilterNot.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA94C968();
  sub_1BB8746C8();
  v10[3] = v8;
  sub_1BA824048();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA94C968()
{
  unint64_t result;

  result = qword_1ED3A2D08;
  if (!qword_1ED3A2D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8874C4, &type metadata for FormatContentSubgroupFilterNot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D08);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterNot.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3A3118, (uint64_t (*)(void))sub_1BA94C968, (uint64_t)&type metadata for FormatContentSubgroupFilterNot.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA94C968();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v12;
    sub_1BA824004();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA94CB00(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA94CB1C, (uint64_t (*)(void))sub_1BA94CB60, (uint64_t (*)(void))sub_1BA94CBA4);
}

unint64_t sub_1BA94CB1C()
{
  unint64_t result;

  result = qword_1EF2AB250;
  if (!qword_1EF2AB250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterAnd, &type metadata for FormatContentSubgroupFilterAnd);
    atomic_store(result, (unint64_t *)&qword_1EF2AB250);
  }
  return result;
}

unint64_t sub_1BA94CB60()
{
  unint64_t result;

  result = qword_1EF2AB258;
  if (!qword_1EF2AB258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterAnd, &type metadata for FormatContentSubgroupFilterAnd);
    atomic_store(result, (unint64_t *)&qword_1EF2AB258);
  }
  return result;
}

unint64_t sub_1BA94CBA4()
{
  unint64_t result;

  result = qword_1EF2AB260;
  if (!qword_1EF2AB260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterAnd, &type metadata for FormatContentSubgroupFilterAnd);
    atomic_store(result, (unint64_t *)&qword_1EF2AB260);
  }
  return result;
}

uint64_t sub_1BA94CBE8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA94CC04, (uint64_t (*)(void))sub_1BA94CC48, (uint64_t (*)(void))sub_1BA94CC8C);
}

unint64_t sub_1BA94CC04()
{
  unint64_t result;

  result = qword_1ED3A0FD0;
  if (!qword_1ED3A0FD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterOr, &type metadata for FormatContentSubgroupFilterOr);
    atomic_store(result, (unint64_t *)&qword_1ED3A0FD0);
  }
  return result;
}

unint64_t sub_1BA94CC48()
{
  unint64_t result;

  result = qword_1ED3A2CA0;
  if (!qword_1ED3A2CA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterOr, &type metadata for FormatContentSubgroupFilterOr);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CA0);
  }
  return result;
}

unint64_t sub_1BA94CC8C()
{
  unint64_t result;

  result = qword_1EF2AB268;
  if (!qword_1EF2AB268)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterOr, &type metadata for FormatContentSubgroupFilterOr);
    atomic_store(result, (unint64_t *)&qword_1EF2AB268);
  }
  return result;
}

uint64_t sub_1BA94CCD0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA94CCEC, (uint64_t (*)(void))sub_1BA94CD30, (uint64_t (*)(void))sub_1BA94CD74);
}

unint64_t sub_1BA94CCEC()
{
  unint64_t result;

  result = qword_1ED3A2D28;
  if (!qword_1ED3A2D28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterNot, &type metadata for FormatContentSubgroupFilterNot);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D28);
  }
  return result;
}

unint64_t sub_1BA94CD30()
{
  unint64_t result;

  result = qword_1ED3A2D20;
  if (!qword_1ED3A2D20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterNot, &type metadata for FormatContentSubgroupFilterNot);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D20);
  }
  return result;
}

unint64_t sub_1BA94CD74()
{
  unint64_t result;

  result = qword_1EF2AB270;
  if (!qword_1EF2AB270)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterNot, &type metadata for FormatContentSubgroupFilterNot);
    atomic_store(result, (unint64_t *)&qword_1EF2AB270);
  }
  return result;
}

uint64_t sub_1BA94CDB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatContentSubgroupFilterNot.init(from:)(a1, a2);
}

uint64_t sub_1BA94CDCC(_QWORD *a1)
{
  return FormatContentSubgroupFilterNot.encode(to:)(a1);
}

uint64_t sub_1BA94CDE0(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatContentSubgroupFilter.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterAnd()
{
  return &type metadata for FormatContentSubgroupFilterAnd;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOr()
{
  return &type metadata for FormatContentSubgroupFilterOr;
}

_QWORD *assignWithCopy for SportsDataVisualizationEventStatus(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for SportsDataVisualizationEventStatus(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterNot()
{
  return &type metadata for FormatContentSubgroupFilterNot;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterNot.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterNot.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOr.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterOr.CodingKeys;
}

uint64_t _s8NewsFeed30FormatContentSubgroupFilterNotV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA94CF1C + 4 * byte_1BB887020[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA94CF3C + 4 * byte_1BB887025[v4]))();
}

_BYTE *sub_1BA94CF1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA94CF3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA94CF44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA94CF4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA94CF54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA94CF5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterAnd.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterAnd.CodingKeys;
}

unint64_t sub_1BA94CF7C()
{
  unint64_t result;

  result = qword_1EF2AB278;
  if (!qword_1EF2AB278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88732C, &type metadata for FormatContentSubgroupFilterAnd.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB278);
  }
  return result;
}

unint64_t sub_1BA94CFC4()
{
  unint64_t result;

  result = qword_1EF2AB280;
  if (!qword_1EF2AB280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8873E4, &type metadata for FormatContentSubgroupFilterOr.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB280);
  }
  return result;
}

unint64_t sub_1BA94D00C()
{
  unint64_t result;

  result = qword_1EF2AB288;
  if (!qword_1EF2AB288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88749C, &type metadata for FormatContentSubgroupFilterNot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB288);
  }
  return result;
}

unint64_t sub_1BA94D054()
{
  unint64_t result;

  result = qword_1ED3A2D18;
  if (!qword_1ED3A2D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88740C, &type metadata for FormatContentSubgroupFilterNot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D18);
  }
  return result;
}

unint64_t sub_1BA94D09C()
{
  unint64_t result;

  result = qword_1ED3A2D10;
  if (!qword_1ED3A2D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887434, &type metadata for FormatContentSubgroupFilterNot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D10);
  }
  return result;
}

unint64_t sub_1BA94D0E4()
{
  unint64_t result;

  result = qword_1ED3A2C98;
  if (!qword_1ED3A2C98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887354, &type metadata for FormatContentSubgroupFilterOr.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C98);
  }
  return result;
}

unint64_t sub_1BA94D12C()
{
  unint64_t result;

  result = qword_1ED3A2C90;
  if (!qword_1ED3A2C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88737C, &type metadata for FormatContentSubgroupFilterOr.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C90);
  }
  return result;
}

unint64_t sub_1BA94D174()
{
  unint64_t result;

  result = qword_1EF2AB290;
  if (!qword_1EF2AB290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88729C, &type metadata for FormatContentSubgroupFilterAnd.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB290);
  }
  return result;
}

unint64_t sub_1BA94D1BC()
{
  unint64_t result;

  result = qword_1EF2AB298;
  if (!qword_1EF2AB298)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8872C4, &type metadata for FormatContentSubgroupFilterAnd.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB298);
  }
  return result;
}

uint64_t sub_1BA94D210(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA94D240 + 4 * byte_1BB8875C0[a1]))(0x776F6C6C61, 0xE500000000000000);
}

unint64_t sub_1BA94D240()
{
  return 0xD000000000000010;
}

unint64_t sub_1BA94D25C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BA94D298()
{
  unsigned __int8 *v0;

  return sub_1BA94D210(*v0);
}

uint64_t storeEnumTagSinglePayload for FeedCursorDedupResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA94D2EC + 4 * byte_1BB8875C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA94D320 + 4 * byte_1BB8875C4[v4]))();
}

uint64_t sub_1BA94D320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA94D328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA94D330);
  return result;
}

uint64_t sub_1BA94D33C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA94D344);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA94D348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA94D350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedCursorDedupResult()
{
  return &type metadata for FeedCursorDedupResult;
}

unint64_t sub_1BA94D370()
{
  unint64_t result;

  result = qword_1EF2AB2A0;
  if (!qword_1EF2AB2A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8876B8, &type metadata for FeedCursorDedupResult);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2A0);
  }
  return result;
}

id sub_1BA94D3B4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  id result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return (id)v2;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A530(0, v1, 0);
  v2 = v29;
  result = (id)sub_1BA6AFD6C(a1);
  v6 = (uint64_t)result;
  v7 = 0;
  v8 = a1 + 64;
  v25 = v1;
  v26 = v5;
  v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v13 = v12[1];
    v28 = *v12;
    v14 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    result = objc_msgSend(v14, sel_doubleValue);
    v16 = v15;
    v18 = *(_QWORD *)(v29 + 16);
    v17 = *(_QWORD *)(v29 + 24);
    if (v18 >= v17 >> 1)
      result = (id)sub_1BAC7A530(v17 > 1, v18 + 1, 1);
    *(_QWORD *)(v29 + 16) = v18 + 1;
    v19 = (_QWORD *)(v29 + 24 * v18);
    v19[4] = v28;
    v19[5] = v13;
    v19[6] = v16;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v20 = *(_QWORD *)(v27 + 8 * v11);
    if ((v20 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26)
      goto LABEL_27;
    v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v22 = v11 + 1;
      v23 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v23)
      {
        v24 = *(_QWORD *)(v27 + 8 * v22);
        if (v24)
        {
LABEL_20:
          v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            v24 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v24)
            {
              v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return (id)v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA94D5E4(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v19 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_46;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A4F8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    if (!v2)
      break;
    if (v19)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BB873F30();
    }
    else
    {
      v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v6 = 0;
    v5 = a1 & 0xC000000000000001;
    while ((v2 & ~(v2 >> 63)) != v6)
    {
      if (v18 == v6)
        goto LABEL_44;
      if (v5)
      {
        v7 = MEMORY[0x1BCCE4630](v6, a1);
      }
      else
      {
        if (v6 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v8)
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      swift_unknownObjectRelease();
      v10 = *(_QWORD *)(v20 + 16);
      v9 = *(_QWORD *)(v20 + 24);
      if (v10 >= v9 >> 1)
        sub_1BAC7A4F8(v9 > 1, v10 + 1, 1);
      ++v6;
      *(_QWORD *)(v20 + 16) = v10 + 1;
      v11 = v20 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v8;
      if (v2 == v6)
      {
        v4 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_22;
      }
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  v5 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_22:
  if (v19)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v2 == v12)
        break;
LABEL_26:
      if (v5)
      {
        v13 = MEMORY[0x1BCCE4630](v2, a1);
        if (__OFADD__(v2, 1))
          goto LABEL_42;
      }
      else
      {
        if (v2 < 0)
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        if ((unint64_t)v2 >= *(_QWORD *)(v4 + 16))
          goto LABEL_41;
        v13 = *(_QWORD *)(a1 + 8 * v2 + 32);
        swift_unknownObjectRetain();
        if (__OFADD__(v2, 1))
          goto LABEL_42;
      }
      v14 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v14)
        v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      swift_unknownObjectRelease();
      v16 = *(_QWORD *)(v20 + 16);
      v15 = *(_QWORD *)(v20 + 24);
      if (v16 >= v15 >> 1)
        sub_1BAC7A4F8(v15 > 1, v16 + 1, 1);
      *(_QWORD *)(v20 + 16) = v16 + 1;
      v17 = v20 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v14;
      ++v2;
      if (!v19)
        goto LABEL_23;
    }
  }
  else
  {
LABEL_23:
    if (v2 != *(_QWORD *)(v4 + 16))
      goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  return v20;
}

double FeedPersonalizationServiceType.score<A>(group:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  double v11;
  uint64_t v12;

  v10 = FeedGroupable.personalizingScoredItems.getter(a4, a6);
  if (v10)
  {
    v11 = (*(double (**)(uint64_t, uint64_t, uint64_t))(a5 + 40))(v10, a3, a5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a6 + 32))(a4, a6);
    v12 = (*(uint64_t (**)(void))(a5 + 8))();
    v11 = (*(double (**)(uint64_t, uint64_t, uint64_t))(a5 + 40))(v12, a3, a5);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v11 * (*(double (**)(uint64_t, uint64_t))(a6 + 48))(a4, a6);
}

double FeedPersonalizationServiceType.groupScore(items:context:)(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4)
{
  double v5;
  __int16 v7;

  v7 = *a2;
  (*(void (**)(uint64_t, __int16 *))(a4 + 8))(a1, &v7);
  v5 = (*(double (**)(void))(a4 + 40))();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t FeedPersonalizationServiceType.scoreSort<A>(groups:context:)(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int16 v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[12];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;

  v10 = *a2;
  v32 = a1;
  v26 = a3;
  v27 = a4;
  v28 = a5;
  v29 = a6;
  v30 = v10;
  v11 = sub_1BB872EE0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = MEMORY[0x1E0DEAF50];
  v14 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v11);
  v15 = MEMORY[0x1E0DEDCE8];
  v16 = MEMORY[0x1E0DEDD18];
  v31 = sub_1BAA52384((void (*)(char *, char *))sub_1BA94DD14, (uint64_t)v25, v11, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v17);
  v24[8] = a3;
  v24[9] = a4;
  v24[10] = a5;
  v24[11] = a6;
  v18 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v18);
  v19 = sub_1BB872C58();
  swift_bridgeObjectRelease();
  v31 = v19;
  v24[2] = a3;
  v24[3] = a4;
  v24[4] = a5;
  v24[5] = a6;
  v20 = MEMORY[0x1BCCE5B24](v13, v18);
  v22 = sub_1BAA52384((void (*)(char *, char *))sub_1BA94DE54, (uint64_t)v24, v18, a4, v15, v20, v16, v21);
  swift_bridgeObjectRelease();
  return v22;
}

void sub_1BA94DC50(uint64_t a1@<X0>, __int16 a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14;
  __int16 v15;

  v14 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a7, a1, a4);
  v15 = a2;
  *(double *)(a7 + v14) = FeedPersonalizationServiceType.score<A>(group:context:)(a1, (uint64_t)&v15, a3, a4, a5, a6);
}

void sub_1BA94DD14(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BA94DC50(a1, *(_WORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

BOOL sub_1BA94DD3C(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return *(double *)(a2 + *(int *)(TupleTypeMetadata2 + 48)) < *(double *)(a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1BA94DDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata2;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (char *)&v12 - v8;
  v10 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v12 - v8, a1, a2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v9, a2);
}

uint64_t sub_1BA94DE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA94DDA0(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t FeedPersonalizationServiceType.score(content:context:)@<X0>(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  unsigned __int16 *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;

  v101 = a3;
  v130 = a2;
  sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v96 - v12;
  v14 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v96 - v18;
  v20 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v96 - v26;
  v28 = *v130;
  if ((v28 >> 14) - 1 >= 2)
  {
    v128 = v19;
    v129 = v10;
    v130 = (unsigned __int16 *)v16;
    v131 = v14;
    v125 = v25;
    v98 = a4;
    v100 = a1;
    v99 = a5;
    v132 = v24;
    if (v28 >> 14)
    {
      v60 = *(_QWORD *)(v100 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
      v135 = MEMORY[0x1E0DEE9D8];
      v103 = *(_QWORD *)(v60 + 16);
      if (v103)
      {
        v102 = v60 + 32;
        v97 = v60;
        swift_bridgeObjectRetain_n();
        v61 = 0;
        v62 = 0;
        do
        {
          v115 = v62;
          v116 = v61;
          v63 = (uint64_t *)(v102 + 80 * v61);
          v64 = *v63;
          v65 = v63[1];
          v66 = v63[2];
          v67 = v63[3];
          v68 = v63[4];
          v117 = v63[5];
          v69 = v63[7];
          v106 = v63[6];
          v105 = v69;
          v71 = v63[8];
          v70 = v63[9];
          v110 = v68 & 0x7FFFFFFFFFFFFFFFLL;
          v112 = v70;
          v111 = v71;
          v113 = v65;
          v109 = v66;
          v107 = v67;
          sub_1BA6D78DC();
          v114 = v64;
          v72 = v105;
          sub_1BA6D78DC();
          sub_1BA6D78DC();
          v108 = v68;
          sub_1BA6D78DC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v73 = v111;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v74 = v115;
          v75 = sub_1BB4A4184(v73);
          v115 = v74;
          swift_bridgeObjectRelease();
          v134 = v72;
          swift_bridgeObjectRetain();
          sub_1BA6D74C4(v75);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v76 = v134;
          v77 = MEMORY[0x1E0DEE9D8];
          v134 = MEMORY[0x1E0DEE9D8];
          v119 = *(_QWORD *)(v76 + 16);
          v104 = v76;
          if (v119)
          {
            v118 = v76 + 32;
            swift_bridgeObjectRetain();
            v78 = 0;
            do
            {
              v127 = v78;
              v79 = (_QWORD *)(v118 + (v78 << 6));
              v80 = v79[1];
              v81 = v79[2];
              v83 = v79[3];
              v82 = v79[4];
              v85 = v79[5];
              v84 = v79[6];
              v86 = v79[7];
              v133 = v77;
              v87 = *(_QWORD *)(v82 + 16);
              v128 = (char *)v82;
              if (v87)
              {
                v126 = v86;
                v88 = *(unsigned __int8 *)(v125 + 80);
                v120 = v84;
                v89 = v82 + ((v88 + 32) & ~v88);
                v124 = v80;
                swift_bridgeObjectRetain_n();
                v123 = v81;
                swift_bridgeObjectRetain_n();
                v122 = v83;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                v121 = v85;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                sub_1BA4C2DD8(v89, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
                v90 = (char *)&loc_1BA94EE3C + 4 * byte_1BB8876E0[swift_getEnumCaseMultiPayload()];
                __asm { BR              X9 }
              }
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              v91 = MEMORY[0x1E0DEE9D8];
              v92 = MEMORY[0x1E0DEE9D8];
              v93 = v127;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              v78 = v93 + 1;
              sub_1BA66293C(v91);
              v77 = v92;
            }
            while (v78 != v119);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v128 = (char *)v134;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v128 = (char *)MEMORY[0x1E0DEE9D8];
          }
          ++v116;
          sub_1BA7F4208();
          sub_1BA7F4208();
          sub_1BA7F4208();
          v61 = v116;
          sub_1BA66293C((unint64_t)v128);
          v62 = v115;
        }
        while (v61 != v103);
        swift_bridgeObjectRelease_n();
        v94 = v135;
      }
      else
      {
        v94 = MEMORY[0x1E0DEE9D8];
      }
      LOBYTE(v135) = 0;
      (*(void (**)(unint64_t, unint64_t *, uint64_t))(v98 + 16))(v94, &v135, v101);
      swift_bridgeObjectRelease();
    }
    else
    {
      LODWORD(v97) = v28;
      v29 = *(_QWORD *)(v100 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
      v30 = MEMORY[0x1E0DEE9D8];
      v135 = MEMORY[0x1E0DEE9D8];
      v103 = *(_QWORD *)(v29 + 16);
      if (v103)
      {
        v102 = v29 + 32;
        v96 = v29;
        swift_bridgeObjectRetain_n();
        v31 = 0;
        v107 = 0;
        v130 = (unsigned __int16 *)v13;
        do
        {
          v116 = v31;
          v32 = (uint64_t *)(v102 + 80 * v31);
          v34 = *v32;
          v33 = v32[1];
          v35 = v32[2];
          v117 = v32[3];
          v36 = v32[4];
          v37 = v32[5];
          v38 = v32[7];
          v113 = v32[6];
          v40 = v32[8];
          v39 = v32[9];
          v112 = v36 & 0x7FFFFFFFFFFFFFFFLL;
          v114 = v40;
          v108 = v33;
          v115 = v37;
          sub_1BA6D78DC();
          sub_1BA6D78DC();
          v109 = v39;
          sub_1BA6D78DC();
          v106 = v34;
          v111 = v35;
          v110 = v36;
          v41 = v114;
          sub_1BA6D78DC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v42 = v107;
          v43 = sub_1BB4A4184(v41);
          v107 = v42;
          swift_bridgeObjectRelease();
          v134 = v38;
          swift_bridgeObjectRetain();
          sub_1BA6D74C4(v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v44 = v134;
          v134 = v30;
          v119 = *(_QWORD *)(v44 + 16);
          if (v119)
          {
            v105 = v38;
            v118 = v44 + 32;
            v104 = v44;
            swift_bridgeObjectRetain();
            v45 = 0;
            do
            {
              v127 = v45;
              v46 = (_QWORD *)(v118 + (v45 << 6));
              v47 = v46[1];
              v48 = v46[2];
              v50 = v46[3];
              v49 = v46[4];
              v52 = v46[5];
              v51 = v46[6];
              v53 = v46[7];
              v133 = v30;
              v54 = *(_QWORD *)(v49 + 16);
              v129 = (char *)v47;
              if (v54)
              {
                v126 = v53;
                v55 = v50;
                v56 = v48;
                v57 = v49
                    + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
                swift_bridgeObjectRetain_n();
                v123 = v56;
                swift_bridgeObjectRetain_n();
                v122 = v55;
                swift_bridgeObjectRetain_n();
                v124 = v49;
                swift_bridgeObjectRetain_n();
                v121 = v52;
                swift_bridgeObjectRetain_n();
                v120 = v51;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                sub_1BA4C2DD8(v57, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
                v58 = (char *)&loc_1BA94E600 + 4 * byte_1BB8876E9[swift_getEnumCaseMultiPayload()];
                __asm { BR              X9 }
              }
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              v59 = v127;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              v45 = v59 + 1;
              sub_1BA66293C(v30);
            }
            while (v45 != v119);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v129 = (char *)v134;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v129 = (char *)v30;
          }
          ++v116;
          sub_1BA7F4208();
          sub_1BA7F4208();
          sub_1BA7F4208();
          v31 = v116;
          sub_1BA66293C((unint64_t)v129);
        }
        while (v31 != v103);
        swift_bridgeObjectRelease_n();
        v30 = v135;
      }
      LOBYTE(v135) = v97;
      (*(void (**)(unint64_t, unint64_t *, uint64_t))(v98 + 16))(v30, &v135, v101);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    a5 = v99;
    a1 = v100;
  }
  return sub_1BA4C2DD8(a1, a5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
}

Swift::OpaquePointer_optional __swiftcall FeedPersonalizationServiceType.bestOfGroup(from:context:allowClusteringFallback:)(Swift::OpaquePointer from, NewsFeed::FeedHeadlineScoringContext context, Swift::Bool allowClusteringFallback)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v8;
  int64_t v9;
  uint64_t v10;
  __int128 *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Bool v20;
  uint64_t v21;
  void **v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  Swift::OpaquePointer_optional result;

  v5 = v4;
  v6 = v3;
  v8 = *(unsigned __int8 *)context;
  v9 = *((_QWORD *)from._rawValue + 2);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A4C0(0, v9, 0);
    v10 = v34;
    v12 = (__int128 *)((char *)from._rawValue + 32);
    do
    {
      v33 = *v12;
      v34 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      swift_unknownObjectRetain();
      v15 = *((id *)&v33 + 1);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC7A4C0(v13 > 1, v14 + 1, 1);
        v10 = v34;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      v16 = v10 + 24 * v14;
      *(_OWORD *)(v16 + 32) = v33;
      *(_QWORD *)(v16 + 48) = 0;
      ++v12;
      --v9;
    }
    while (v9);
    v6 = v32;
  }
  LOWORD(v34) = v8;
  if (qword_1EF2A7340 != -1)
    swift_once();
  v17 = type metadata accessor for FeedPersonalizationClusteringRules();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EF2C7818);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t *, Swift::Bool, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, &v34, allowClusteringFallback, v18, v6, v5);
  swift_bridgeObjectRelease();
  if (v19)
  {
    v21 = *(_QWORD *)(v19 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      v22 = (void **)(v19 + 40);
      v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v25 = *v22;
        v26 = swift_dynamicCastObjCProtocolConditional();
        if (v26)
        {
          v27 = v26;
          swift_unknownObjectRetain();
          v28 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v23 = sub_1BB38F890(0, v23[2] + 1, 1, v23);
          v30 = v23[2];
          v29 = v23[3];
          if (v30 >= v29 >> 1)
            v23 = sub_1BB38F890((_QWORD *)(v29 > 1), v30 + 1, 1, v23);
          v23[2] = v30 + 1;
          v24 = &v23[2 * v30];
          v24[4] = v27;
          v24[5] = v28;
        }
        v22 += 3;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v23 = 0;
  }
  v31 = v23;
  result.value._rawValue = v31;
  result.is_nil = v20;
  return result;
}

uint64_t FeedPersonalizationService.__allocating_init(feedPersonalizingEngine:groupingPersonalizer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FeedPersonalizationService.score(items:context:)(unint64_t a1, unsigned __int16 *a2)
{
  int v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v3 = *a2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_3:
      sub_1BA4EFE00(0, &qword_1ED3C0458);
      sub_1BB872D9C();
      __asm { BR              X10 }
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
  v6 = sub_1BA950FC4(a1, v5);

  return v6;
}

uint64_t FeedPersonalizationService.score(headlines:context:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  if (!(a1 >> 62))
  {
    v4 = a1 & 0xFFFFFFFFFFFFFF8;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(void **)(v2 + 16);
      swift_bridgeObjectRetain();
      sub_1BB874428();
      sub_1BA4EFE00(0, &qword_1ED3C0458);
      if (!swift_dynamicCastMetatype())
      {
        v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14)
        {
          v15 = v4 + 32;
          do
          {
            if (!swift_dynamicCastObjCProtocolConditional())
              break;
            v15 += 8;
            --v14;
          }
          while (v14);
        }
      }
      goto LABEL_4;
    }
    return sub_1BA94D5E4(a1);
  }
  swift_bridgeObjectRetain();
  v16 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v16)
    return sub_1BA94D5E4(a1);
  v5 = *(void **)(v1 + 16);
  sub_1BA4EFE00(0, &qword_1ED3C0458);
  swift_bridgeObjectRetain();
  sub_1BB873EB8();
  swift_bridgeObjectRelease();
LABEL_4:
  sub_1BA4EFE00(0, &qword_1ED3C0458);
  v6 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_sortItems_options_configurationSet_, v6, 0, FeedHeadlineScoringContext.configurationSet.getter());

  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
  v8 = (void *)sub_1BB872D9C();
  v9 = objc_msgSend(v7, sel_scoreProfiles);
  FCAssignPersonalizationScoresFromProfiles();

  v10 = objc_msgSend(v7, sel_sortedItems);
  v11 = sub_1BB872DB4();

  v12 = v7;
  v13 = sub_1BA9506D0(v11, v12);
  swift_bridgeObjectRelease();

  return (uint64_t)v13;
}

uint64_t FeedPersonalizationService.score(issues:context:)(unint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v4 = *a2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v12)
    {
      v5 = *(void **)(v2 + 16);
      sub_1BA4EFE00(0, &qword_1ED3C0458);
      swift_bridgeObjectRetain();
      sub_1BB873EB8();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_7:
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
    v11 = sub_1BA950CDC(a1, v13);

    return v11;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_7;
  v5 = *(void **)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_1BB874428();
  sub_1BA4EFE00(0, &qword_1ED3C0458);
LABEL_4:
  sub_1BA4EFE00(0, &qword_1ED3C0458);
  v6 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_sortItems_options_configurationSet_, v6, 0, qword_1BB8877C8[v4]);

  v8 = objc_msgSend(v7, sel_sortedItems);
  v9 = sub_1BB872DB4();

  v10 = v7;
  v11 = (uint64_t)sub_1BA9508F0(v9, v10);
  swift_bridgeObjectRelease();

  return v11;
}

void FeedPersonalizationService.score(tags:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1BB872D9C();
  v3 = objc_msgSend(v1, sel_scoresForTagIDs_, v2);

  if (v3)
  {
    sub_1BA78DE28();
    v4 = sub_1BB87276C();

    sub_1BA94D3B4(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t FeedPersonalizationService.bestOfGroup(from:context:allowClusteringFallback:clusteringRules:)(uint64_t a1, unsigned __int16 *a2)
{
  return sub_1BA9513CC(a1, a2);
}

double FeedPersonalizationService.baselineScore.getter()
{
  return 0.0;
}

Swift::OpaquePointer_optional __swiftcall FeedPersonalizationService.bestOfGroup(from:context:)(Swift::OpaquePointer from, NewsFeed::FeedHeadlineScoringContext context)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  Swift::OpaquePointer *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  Swift::Bool v39;
  void *v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  void *rawValue;
  unint64_t v45;
  _QWORD *v46;
  Swift::OpaquePointer_optional result;

  v3 = sub_1BA8F2DD8(MEMORY[0x1E0DEE9D8]);
  v42 = (unint64_t)from._rawValue >> 62;
  if ((unint64_t)from._rawValue >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      rawValue = from._rawValue;
      v45 = (unint64_t)from._rawValue & 0xC000000000000001;
      v5 = 4;
      do
      {
        v7 = v5 - 4;
        if (v45)
        {
          v8 = (void *)MEMORY[0x1BCCE4630](v5 - 4, from._rawValue);
          v9 = v5 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_22;
        }
        else
        {
          v8 = (void *)swift_unknownObjectRetain();
          v9 = v5 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v10 = v8;
        v11 = objc_msgSend(v8, sel_identifier);
        v12 = sub_1BB8729A0();
        from._rawValue = v13;

        v14 = v3;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v46 = (_QWORD *)v3;
        v17 = sub_1BA6E35A8(v12, (uint64_t)from._rawValue);
        v18 = *(_QWORD *)(v3 + 16);
        v19 = (v16 & 1) == 0;
        v20 = v18 + v19;
        if (__OFADD__(v18, v19))
          goto LABEL_23;
        v3 = v16;
        if (*(_QWORD *)(v14 + 24) >= v20)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v23 = v46;
            if ((v16 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_1BB4C1F60();
            v23 = v46;
            if ((v3 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_1BB4AE394(v20, isUniquelyReferenced_nonNull_native);
          v21 = sub_1BA6E35A8(v12, (uint64_t)from._rawValue);
          if ((v3 & 1) != (v22 & 1))
          {
            v40 = (void *)sub_1BB874560();
            __break(1u);
            goto LABEL_33;
          }
          v17 = v21;
          v23 = v46;
          if ((v3 & 1) != 0)
          {
LABEL_4:
            v3 = (unint64_t)v23;
            v6 = v23[7];
            swift_unknownObjectRelease();
            *(_QWORD *)(v6 + 8 * v17) = v10;
            goto LABEL_5;
          }
        }
        v23[(v17 >> 6) + 8] |= 1 << v17;
        v24 = (Swift::OpaquePointer *)(v23[6] + 16 * v17);
        v24->_rawValue = (void *)v12;
        v24[1]._rawValue = from._rawValue;
        *(_QWORD *)(v23[7] + 8 * v17) = v10;
        v25 = v23[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_24;
        v3 = (unint64_t)v23;
        v23[2] = v27;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v5;
        from._rawValue = rawValue;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1ED3BA7F8 != -1)
    swift_once();
  v28 = (void *)qword_1ED476860;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
  if (v42)
  {
    swift_bridgeObjectRetain();
    v32 = v28;
    v30 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    v31 = v28;
  }
  v33 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v29 + 64) = v33;
  *(_QWORD *)(v29 + 32) = v30;
  sub_1BB87330C();
  sub_1BB86EF44("Creating Best Of group from FeedPersonalizationService with %d headlines.", v41);

  swift_bridgeObjectRelease();
  v34 = *(void **)(v43 + 24);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
  v35 = (void *)sub_1BB872D9C();
  v36 = objc_msgSend(v34, sel_bestOfGroupFromHeadlines_configurationSet_, v35, FeedHeadlineScoringContext.configurationSet.getter());

  v37 = sub_1BB872DB4();
  swift_bridgeObjectRetain();
  v38 = sub_1BA950AF4(v37, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v40 = (void *)v38;
LABEL_33:
  result.value._rawValue = v40;
  result.is_nil = v39;
  return result;
}

uint64_t FeedPersonalizationService.prepareForUse()()
{
  sub_1BA84125C();
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BA94FFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(void **)(a5 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BA4D7948;
  *(_QWORD *)(v10 + 24) = v8;
  v12[4] = sub_1BA4D7950;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BA4F1DD8;
  v12[3] = &block_descriptor_4;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_prepareForUseWithCompletionHandler_, v11);
  _Block_release(v11);
}

uint64_t FeedPersonalizationService.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t FeedPersonalizationService.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA9500E0(unint64_t a1, unsigned __int16 *a2)
{
  return FeedPersonalizationService.score(items:context:)(a1, a2);
}

uint64_t sub_1BA950100(unint64_t a1)
{
  return FeedPersonalizationService.score(headlines:context:)(a1);
}

uint64_t sub_1BA950120(unint64_t a1, char *a2)
{
  return FeedPersonalizationService.score(issues:context:)(a1, a2);
}

void sub_1BA950140()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1BB872D9C();
  v3 = objc_msgSend(v1, sel_scoresForTagIDs_, v2);

  if (v3)
  {
    sub_1BA78DE28();
    v4 = sub_1BB87276C();

    sub_1BA94D3B4(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA950200(uint64_t a1, unsigned __int16 *a2)
{
  return sub_1BA9513CC(a1, a2);
}

double sub_1BA950224()
{
  return 0.0;
}

uint64_t sub_1BA95022C()
{
  sub_1BA84125C();
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BA950270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatWebEmbed.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA9502B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA950310(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA950364(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      return v4;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A4C0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v6 = 0;
    v4 = v14;
    while (v3 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1BCCE4630](v6, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRetain();
      v8 = objc_msgSend(a2, sel_scoreProfiles);
      v9 = objc_msgSend(v8, sel_objectForKey_, v7);

      if (!v9)
        v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      swift_unknownObjectRelease();
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1BAC7A4C0(v10 > 1, v11 + 1, 1);
      ++v6;
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = (_QWORD *)(v14 + 24 * v11);
      v12[4] = v7;
      v12[5] = v9;
      v12[6] = 0;
      if (v3 == v6)
        return v4;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA950528(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      return v4;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A4C0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v6 = 0;
    v4 = v13;
    while (v3 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1BCCE4630](v6, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRetain();
      v8 = objc_msgSend(a2, sel_objectForKey_, v7);
      if (!v8)
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      swift_unknownObjectRelease();
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_1BAC7A4C0(v9 > 1, v10 + 1, 1);
      ++v6;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = (_QWORD *)(v13 + 24 * v10);
      v11[4] = v7;
      v11[5] = v8;
      v11[6] = 0;
      if (v3 == v6)
        return v4;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BA9506D0(unint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      for (i = 4; ; ++i)
      {
        v6 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1BCCE4630](i - 4, a1);
          v8 = i - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_20;
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 8 * i);
          swift_unknownObjectRetain();
          v8 = i - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v9 = swift_dynamicCastObjCProtocolConditional();
        if (v9)
        {
          v10 = v9;
          swift_unknownObjectRetain();
          v11 = objc_msgSend(a2, sel_scoreProfiles);
          v12 = objc_msgSend(v11, sel_objectForKey_, v7);

          if (!v12)
            v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
          swift_unknownObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_1BB38F890(0, v4[2] + 1, 1, v4);
          v14 = v4[2];
          v13 = v4[3];
          if (v14 >= v13 >> 1)
            v4 = sub_1BB38F890((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
          v4[2] = v14 + 1;
          v15 = &v4[2 * v14];
          v15[4] = v10;
          v15[5] = v12;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        if (v8 == v3)
        {
          swift_bridgeObjectRelease();
          return v4;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1BA9508F0(unint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      while (1)
      {
        v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, a1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (v9)
        {
          v10 = v9;
          swift_unknownObjectRetain();
          v11 = objc_msgSend(a2, sel_scoreProfiles);
          v12 = objc_msgSend(v11, sel_objectForKey_, v7);

          if (!v12)
            v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
          swift_unknownObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_1BB38F9B0(0, v4[2] + 1, 1, v4);
          v14 = v4[2];
          v13 = v4[3];
          if (v14 >= v13 >> 1)
            v4 = sub_1BB38F9B0((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
          v4[2] = v14 + 1;
          v15 = &v4[2 * v14];
          v15[4] = v10;
          v15[5] = v12;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v5;
        if (v8 == v3)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BA950AF4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  i = v2;
  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v17 = i;
      for (i = 4; ; ++i)
      {
        v7 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v8 = (void *)MEMORY[0x1BCCE4630](i - 4, a1);
          v9 = i - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_17;
        }
        else
        {
          v8 = *(void **)(a1 + 8 * i);
          swift_unknownObjectRetain();
          v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v10 = objc_msgSend(v8, sel_itemID, v17);
        v11 = sub_1BB8729A0();
        v13 = v12;

        if (*(_QWORD *)(a2 + 16) && (sub_1BA6E35A8(v11, v13), (v14 & 1) != 0))
        {
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          v15 = swift_bridgeObjectRelease();
          MEMORY[0x1BCCE36AC](v15);
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v9 == v6)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA950CDC(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;

  v21 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_41;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A514(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    if (!v3)
      break;
    if (v21)
    {
      swift_bridgeObjectRetain();
      v20 = sub_1BB873F30();
    }
    else
    {
      v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v6 = 0;
    v23 = a1 & 0xC000000000000001;
    while ((v3 & ~(v3 >> 63)) != v6)
    {
      if (v20 == v6)
        goto LABEL_39;
      if (v23)
      {
        v7 = (id)MEMORY[0x1BCCE4630](v6, a1);
      }
      else
      {
        if (v6 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_40;
        v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      v8 = v7;
      v10 = *(_QWORD *)(v24 + 16);
      v9 = *(_QWORD *)(v24 + 24);
      v11 = a2;
      if (v10 >= v9 >> 1)
        sub_1BAC7A514(v9 > 1, v10 + 1, 1);
      ++v6;
      *(_QWORD *)(v24 + 16) = v10 + 1;
      v12 = v24 + 16 * v10;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v11;
      if (v3 == v6)
      {
        v5 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_20;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  v5 = a1 & 0xFFFFFFFFFFFFFF8;
  v23 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_20:
  if (v21)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v3 == v13)
        break;
LABEL_24:
      if (v23)
      {
        v14 = (id)MEMORY[0x1BCCE4630](v3, a1);
      }
      else
      {
        if (v3 < 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        if ((unint64_t)v3 >= *(_QWORD *)(v5 + 16))
          goto LABEL_36;
        v14 = *(id *)(a1 + 8 * v3 + 32);
      }
      v15 = v14;
      if (__OFADD__(v3, 1))
        goto LABEL_37;
      v17 = *(_QWORD *)(v24 + 16);
      v16 = *(_QWORD *)(v24 + 24);
      v18 = a2;
      if (v17 >= v16 >> 1)
        sub_1BAC7A514(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v24 + 16) = v17 + 1;
      v19 = v24 + 16 * v17;
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = v18;
      ++v3;
      if (!v21)
        goto LABEL_21;
    }
  }
  else
  {
LABEL_21:
    if (v3 != *(_QWORD *)(v5 + 16))
      goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1BA950FC4(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  uint64_t v22;

  v19 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_42;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A4C0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    if (!v3)
      break;
    if (v19)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BB873F30();
    }
    else
    {
      v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v6 = 0;
    v21 = a1 & 0xC000000000000001;
    while ((v3 & ~(v3 >> 63)) != v6)
    {
      if (v18 == v6)
        goto LABEL_40;
      if (v21)
      {
        v7 = MEMORY[0x1BCCE4630](v6, a1);
      }
      else
      {
        if (v6 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_41;
        v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      v9 = *(_QWORD *)(v22 + 16);
      v8 = *(_QWORD *)(v22 + 24);
      v10 = a2;
      if (v9 >= v8 >> 1)
        sub_1BAC7A4C0(v8 > 1, v9 + 1, 1);
      ++v6;
      *(_QWORD *)(v22 + 16) = v9 + 1;
      v11 = (_QWORD *)(v22 + 24 * v9);
      v11[4] = v7;
      v11[5] = v10;
      v11[6] = 0;
      if (v3 == v6)
      {
        v5 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_20;
      }
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  v5 = a1 & 0xFFFFFFFFFFFFFF8;
  v21 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_20:
  if (v19)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v3 == v12)
        break;
LABEL_24:
      if (v21)
      {
        v13 = MEMORY[0x1BCCE4630](v3, a1);
        if (__OFADD__(v3, 1))
          goto LABEL_38;
      }
      else
      {
        if (v3 < 0)
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        if ((unint64_t)v3 >= *(_QWORD *)(v5 + 16))
          goto LABEL_37;
        v13 = *(_QWORD *)(a1 + 8 * v3 + 32);
        swift_unknownObjectRetain();
        if (__OFADD__(v3, 1))
          goto LABEL_38;
      }
      v15 = *(_QWORD *)(v22 + 16);
      v14 = *(_QWORD *)(v22 + 24);
      v16 = a2;
      if (v15 >= v14 >> 1)
        sub_1BAC7A4C0(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v22 + 16) = v15 + 1;
      v17 = (_QWORD *)(v22 + 24 * v15);
      v17[4] = v13;
      v17[5] = v16;
      v17[6] = 0;
      ++v3;
      if (!v19)
        goto LABEL_21;
    }
  }
  else
  {
LABEL_21:
    if (v3 != *(_QWORD *)(v5 + 16))
      goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  return v22;
}

double _s8NewsFeed0B22PersonalizationServiceC10groupScore5itemsSdSayAA0B10ScoredItemVG_tF_0(uint64_t a1)
{
  int64_t v1;
  double v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double v10;
  double v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A4DC(0, v1, 0);
    v3 = v11;
    v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_sortingScore);
      v6 = v5;
      v10 = v3;
      v8 = *(_QWORD *)(*(_QWORD *)&v3 + 16);
      v7 = *(_QWORD *)(*(_QWORD *)&v3 + 24);
      if (v8 >= v7 >> 1)
        sub_1BAC7A4DC(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(*(_QWORD *)&v3 + 16) = v8 + 1;
      *(_QWORD *)(*(_QWORD *)&v3 + 8 * v8 + 32) = v6;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  sub_1BA951768();
  sub_1BB872E20();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BA9513CC(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2;
  int v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = *a2;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58C88]), sel_init);
    v6 = a1 + 32;
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)(a1 + 40);
    v8 = v2;
    do
    {
      objc_msgSend(v5, sel_setObject_forKey_, *v7, *(v7 - 1));
      v7 += 3;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    sub_1BB873DD4();
    do
    {
      v6 += 24;
      swift_unknownObjectRetain();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      --v2;
    }
    while (v2);
    sub_1BA4EFE00(0, &qword_1ED3C0458);
    sub_1BB872D9C();
    swift_release();
    __asm { BR              X10 }
  }
  return 0;
}

double _s8NewsFeed0B22PersonalizationServiceC10groupScore9headlinesSdSayAA0B14ScoredHeadlineVG_tF_0(uint64_t a1)
{
  int64_t v1;
  double v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double v10;
  double v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A4DC(0, v1, 0);
    v3 = v11;
    v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_sortingScore);
      v6 = v5;
      v10 = v3;
      v8 = *(_QWORD *)(*(_QWORD *)&v3 + 16);
      v7 = *(_QWORD *)(*(_QWORD *)&v3 + 24);
      if (v8 >= v7 >> 1)
        sub_1BAC7A4DC(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(*(_QWORD *)&v3 + 16) = v8 + 1;
      *(_QWORD *)(*(_QWORD *)&v3 + 8 * v8 + 32) = v6;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  sub_1BA951768();
  sub_1BB872E20();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1BA9516E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BA94FFA8(a1, a2, a3, a4, v4);
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(items:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(headlines:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(issues:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(tags:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.groupScore(items:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.groupScore(headlines:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.bestOfGroup(from:context:allowClusteringFallback:clusteringRules:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.baselineScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.prepareForUse()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t method lookup function for FeedPersonalizationService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedPersonalizationService.__allocating_init(feedPersonalizingEngine:groupingPersonalizer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BA951744()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BA951768()
{
  unint64_t result;

  result = qword_1ED39DF48;
  if (!qword_1ED39DF48)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB088], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&qword_1ED39DF48);
  }
  return result;
}

Swift::Void __swiftcall TaskScheduler.scheduleIfMainElseStart(_:)(NSOperation a1)
{
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    sub_1BB86E038();
  else
    -[objc_class start](a1.super.isa, sel_start);
}

uint64_t FormatAdMetricsNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAdMetricsNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAdMetricsNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.privacyMarkerFrameIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FormatAdMetricsNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatAdMetricsNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatAdMetricsNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAdMetricsNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAdMetricsNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 72);
}

uint64_t FormatAdMetricsNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatAdMetricsNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatAdMetricsNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 80);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

unint64_t sub_1BA951AC0(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatAdMetricsNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatAdMetricsNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t FormatAdMetricsNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatAdMetricsNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.__allocating_init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v17;
  uint64_t v18;

  v17 = swift_allocObject();
  FormatAdMetricsNode.init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)(a1, a2, v18, a4, a5, a6, a7, a8, a9, a10, a11);
  return v17;
}

uint64_t FormatAdMetricsNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t FormatAdMetricsNode.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance();
}

uint64_t sub_1BA951D78(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA951E50(&qword_1EF2AB2A8, (uint64_t)&protocol conformance descriptor for FormatAdMetricsNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA951DAC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA951E50(&qword_1ED3BE440, (uint64_t)&protocol conformance descriptor for FormatAdMetricsNode);
  a1[2] = sub_1BA951E50(&qword_1ED39FE58, (uint64_t)&protocol conformance descriptor for FormatAdMetricsNode);
  result = sub_1BA951E50(&qword_1EF2AB2B0, (uint64_t)&protocol conformance descriptor for FormatAdMetricsNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA951E10(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatAdMetricsNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BA951E1C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA951E50(&qword_1EF2AB2B8, (uint64_t)&protocol conformance descriptor for FormatAdMetricsNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA951E50(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatAdMetricsNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA951E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v15 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_unownedRetainStrong();
  swift_beginAccess();
  v16 = *(_QWORD *)(a4 + 16);
  v17 = *(_QWORD *)(a4 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v15 + 40))
  {
    v37 = *(_QWORD *)(v15 + 32);
    v38 = *(_QWORD *)(v15 + 40);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v18);
    sub_1BB872AFC(v19);
    swift_bridgeObjectRelease();
    v16 = v37;
    v17 = v38;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v30 = *(_QWORD *)(a4 + 16);
  v31 = *(_QWORD *)(a4 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  swift_unownedRetainStrong();
  v20 = *(_QWORD *)(a4 + 56);
  swift_retain();
  swift_release();
  v32 = v16;
  if (v20)
  {
    v29 = *(_QWORD *)(v20 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    v29 = 0;
  }
  v21 = swift_allocObject();
  swift_unownedRetainStrong();
  swift_beginAccess();
  v22 = *(_QWORD *)(a4 + 72);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  v23 = *(_QWORD *)(a4 + 80);
  sub_1BA67D3F4(v23);
  swift_release();
  sub_1BA67C978(a3, &v39);
  sub_1BA6EEDB4(v23);
  v24 = v39;
  swift_unownedRetainStrong();
  swift_beginAccess();
  v25 = *(_BYTE *)(a4 + 88);
  swift_release();
  sub_1BB86DD80();
  swift_unownedRetainStrong();
  v26 = *(_QWORD *)(a4 + 32);
  v27 = *(_QWORD *)(a4 + 40);
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  *(_QWORD *)(v21 + 32) = v32;
  *(_QWORD *)(v21 + 40) = v17;
  *(_QWORD *)(v21 + 48) = v30;
  *(_QWORD *)(v21 + 56) = v31;
  *(double *)(v21 + 64) = a6;
  *(double *)(v21 + 72) = a7;
  *(double *)(v21 + 80) = a8;
  *(double *)(v21 + 88) = a9;
  *(_QWORD *)(v21 + 96) = v29;
  *(_QWORD *)(v21 + 104) = v22;
  *(_QWORD *)(v21 + 112) = v24;
  *(_BYTE *)(v21 + 120) = v25;
  *(_QWORD *)(v21 + 128) = v36;
  *(_QWORD *)(v21 + 136) = v26;
  *(_QWORD *)(v21 + 144) = v27;
  *a5 = v21 | 0x5000000000000004;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA952138@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA952184@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA9521D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return result;
}

uint64_t sub_1BA952214(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 72) = v2;
  return result;
}

unint64_t sub_1BA952254@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BA9522A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 88);
  return result;
}

uint64_t sub_1BA9522E4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 88) = v2;
  return result;
}

uint64_t method lookup function for FormatAdMetricsNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatAdMetricsNode.__allocating_init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1BA952348()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA95239C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1BA4CDF6C(0, &qword_1EF2AB330, (uint64_t (*)(void))sub_1BA957A54, (uint64_t)&type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA957A54();
  sub_1BB8746C8();
  v13 = 0;
  sub_1BB87417C();
  if (!v1)
  {
    v12 = 1;
    sub_1BB874194();
    v11 = 2;
    sub_1BB874194();
    v10 = 3;
    sub_1BB874194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BA95251C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA952558 + 4 * byte_1BB887970[a1]))(0x6353726576726573, 0xEB0000000065726FLL);
}

uint64_t sub_1BA952558()
{
  return 0x6353746E65696C63;
}

unint64_t sub_1BA95256C()
{
  return 0xD000000000000014;
}

unint64_t sub_1BA9525BC()
{
  return 0xD000000000000015;
}

uint64_t sub_1BA952600(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1BA4CDF6C(0, &qword_1EF2AB338, (uint64_t (*)(void))sub_1BA957A98, (uint64_t)&type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA957A98();
  sub_1BB8746C8();
  v17 = 0;
  sub_1BB874194();
  if (!v1)
  {
    v16 = 1;
    sub_1BB874194();
    v15 = 2;
    sub_1BB874194();
    v14 = 3;
    sub_1BB874194();
    v13 = 4;
    sub_1BB874194();
    v12 = 5;
    sub_1BB874194();
    v11 = 6;
    sub_1BB874194();
    v10 = 7;
    sub_1BB874194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BA952824()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA952858 + 4 * byte_1BB887978[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA952858()
{
  return 0x736B63696C63;
}

uint64_t sub_1BA95286C()
{
  return 0x6B63696C43776172;
}

uint64_t sub_1BA952888()
{
  return 0x6973736572706D69;
}

uint64_t sub_1BA9528A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA954118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA9528CC()
{
  sub_1BA957A54();
  return sub_1BB874710();
}

uint64_t sub_1BA9528F4()
{
  sub_1BA957A54();
  return sub_1BB87471C();
}

double sub_1BA95291C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA9542F8(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA952960(_QWORD *a1)
{
  return sub_1BA95239C(a1);
}

uint64_t sub_1BA952974()
{
  unsigned __int8 *v0;

  return sub_1BA95251C(*v0);
}

uint64_t sub_1BA95297C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA954518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA9529A0()
{
  sub_1BA957A98();
  return sub_1BB874710();
}

uint64_t sub_1BA9529C8()
{
  sub_1BA957A98();
  return sub_1BB87471C();
}

double sub_1BA9529F0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1BA954860(a1, v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1BA952A30(_QWORD *a1)
{
  return sub_1BA952600(a1);
}

uint64_t sub_1BA952A44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA952A80 + 4 * word_1BB88797C[a1]))(0x4365727574616566, 0xEA00000000007274);
}

unint64_t sub_1BA952A80()
{
  return 0xD000000000000014;
}

unint64_t sub_1BA952BE8()
{
  return 0xD000000000000018;
}

unint64_t sub_1BA952C00()
{
  return 0xD000000000000013;
}

unint64_t sub_1BA952C18()
{
  return 0xD000000000000012;
}

unint64_t sub_1BA952C30()
{
  return 0xD000000000000016;
}

unint64_t sub_1BA952C48()
{
  return 0xD000000000000010;
}

unint64_t sub_1BA952C60()
{
  return 0xD000000000000015;
}

unint64_t sub_1BA952C78()
{
  return 0xD000000000000016;
}

unint64_t sub_1BA952C90()
{
  return 0xD000000000000012;
}

unint64_t sub_1BA952CA8()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA952CC0()
{
  return 0x616E65506E656573;
}

uint64_t sub_1BA952CEC()
{
  return 0x64656E657473696CLL;
}

unint64_t sub_1BA952D10()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA952D28()
{
  return 0xD000000000000010;
}

unint64_t sub_1BA952D40()
{
  return 0xD000000000000013;
}

unint64_t sub_1BA952D58()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA952D70()
{
  return 0xD000000000000015;
}

uint64_t sub_1BA952D88()
{
  return 0x53676E6974726F73;
}

uint64_t sub_1BA952DA8()
{
  return 0x6154776F64616873;
}

unint64_t sub_1BA952DCC()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1BA952DE8()
{
  return 0x6F436C61626F6C67;
}

uint64_t sub_1BA952E08()
{
  return 0x6963696666656F63;
}

uint64_t sub_1BA952E28()
{
  return 0x56676E69726F6373;
}

unint64_t sub_1BA952E4C()
{
  return 0xD000000000000017;
}

uint64_t sub_1BA952E64()
{
  return 0x696C7069746C756DLL;
}

void sub_1BA952E80()
{
  JUMPOUT(0x1BA952E94);
}

uint64_t sub_1BA952EA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AB2E0, (uint64_t (*)(void))sub_1BA957560, (uint64_t)&type metadata for DebugInspectionScoreProfile.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA957560();
  sub_1BB8746C8();
  LOBYTE(v14) = 0;
  sub_1BB874194();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1BB874194();
    LOBYTE(v14) = 2;
    sub_1BB874194();
    LOBYTE(v14) = 3;
    sub_1BB874194();
    LOBYTE(v14) = 4;
    sub_1BB874194();
    LOBYTE(v14) = 5;
    sub_1BB874194();
    LOBYTE(v14) = 6;
    sub_1BB874194();
    LOBYTE(v14) = 7;
    sub_1BB874194();
    LOBYTE(v14) = 8;
    sub_1BB874194();
    LOBYTE(v14) = 9;
    sub_1BB874194();
    LOBYTE(v14) = 10;
    sub_1BB874194();
    LOBYTE(v14) = 11;
    sub_1BB874194();
    LOBYTE(v14) = 12;
    sub_1BB874194();
    LOBYTE(v14) = 13;
    sub_1BB874194();
    LOBYTE(v14) = 14;
    sub_1BB874194();
    LOBYTE(v14) = 15;
    sub_1BB874194();
    LOBYTE(v14) = 16;
    sub_1BB874194();
    LOBYTE(v14) = 17;
    sub_1BB874194();
    LOBYTE(v14) = 18;
    sub_1BB874194();
    LOBYTE(v14) = 19;
    sub_1BB874194();
    LOBYTE(v14) = 20;
    sub_1BB874194();
    LOBYTE(v14) = 21;
    sub_1BB874194();
    LOBYTE(v14) = 22;
    sub_1BB874194();
    LOBYTE(v14) = 23;
    sub_1BB874194();
    LOBYTE(v14) = 24;
    sub_1BB874194();
    LOBYTE(v14) = 25;
    sub_1BB874194();
    LOBYTE(v14) = 26;
    sub_1BB874194();
    LOBYTE(v14) = 27;
    sub_1BB874194();
    LOBYTE(v14) = 28;
    sub_1BB874194();
    LOBYTE(v14) = 29;
    sub_1BB874194();
    LOBYTE(v14) = 30;
    sub_1BB874194();
    LOBYTE(v14) = 31;
    sub_1BB874194();
    LOBYTE(v14) = 32;
    sub_1BB874194();
    LOBYTE(v14) = 33;
    sub_1BB874194();
    LOBYTE(v14) = 34;
    sub_1BB874194();
    LOBYTE(v14) = 35;
    sub_1BB874194();
    LOBYTE(v14) = 36;
    sub_1BB874194();
    v10 = *(_OWORD *)(v3 + 312);
    v14 = *(_OWORD *)(v3 + 296);
    v15 = v10;
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 328);
    v18 = 37;
    sub_1BA957694();
    sub_1BB8741AC();
    v11 = *(_OWORD *)(v3 + 352);
    v14 = *(_OWORD *)(v3 + 336);
    v15 = v11;
    v12 = *(_OWORD *)(v3 + 384);
    v16 = *(_OWORD *)(v3 + 368);
    v17 = v12;
    v18 = 38;
    sub_1BA9576D8();
    sub_1BB8741AC();
    LOBYTE(v14) = 39;
    sub_1BB8741C4();
    LOBYTE(v14) = 40;
    sub_1BB87411C();
    LOBYTE(v14) = 41;
    sub_1BB874194();
    LOBYTE(v14) = 42;
    sub_1BB874194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA953680()
{
  unsigned __int8 *v0;

  return sub_1BA952A44(*v0);
}

uint64_t sub_1BA953688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA9558D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA9536AC(_BYTE *a1@<X8>)
{
  *a1 = 43;
}

uint64_t sub_1BA9536B8()
{
  sub_1BA957560();
  return sub_1BB874710();
}

uint64_t sub_1BA9536E0()
{
  sub_1BA957560();
  return sub_1BB87471C();
}

void *sub_1BA953708@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE __src[440];

  result = sub_1BA956928(a1, __src);
  if (!v2)
    return memcpy(a2, __src, 0x1B8uLL);
  return result;
}

uint64_t sub_1BA953758(_QWORD *a1)
{
  return sub_1BA952EA0(a1);
}

uint64_t sub_1BA95376C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v3 = v1[52];
  if (v3)
  {
    v4 = v1[51];
    sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 32) = 0xD000000000000012;
    *(_QWORD *)(v5 + 40) = 0x80000001BB964210;
    v6 = MEMORY[0x1E0DEA968];
    v7 = MEMORY[0x1E0DEA9D8];
    *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v5 + 72) = v6;
    *(_QWORD *)(v5 + 80) = v7;
    *(_QWORD *)(v5 + 48) = v4;
    *(_QWORD *)(v5 + 56) = v3;
    *(_BYTE *)(v5 + 88) = 0;
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB885330;
  v9 = v1[1];
  *(_QWORD *)(v8 + 48) = *v1;
  *(_QWORD *)(v8 + 112) = v9;
  v10 = v1[3];
  *(_QWORD *)(v8 + 176) = v1[2];
  *(_QWORD *)(v8 + 240) = v10;
  *(_QWORD *)(v8 + 304) = v1[4];
  v11 = v1[7];
  *(_QWORD *)(v8 + 368) = v1[6];
  v12 = v1[9];
  *(_QWORD *)(v8 + 432) = v1[8];
  *(_QWORD *)(v8 + 496) = v12;
  *(_QWORD *)(v8 + 560) = v11;
  v13 = v1[11];
  *(_QWORD *)(v8 + 624) = v1[10];
  *(_QWORD *)(v8 + 688) = v13;
  *(_QWORD *)(v8 + 752) = v1[12];
  v14 = v1[34];
  *(_QWORD *)(v8 + 816) = v1[33];
  *(_QWORD *)(v8 + 880) = v14;
  v15 = v1[36];
  *(_QWORD *)(v8 + 944) = v1[35];
  *(_QWORD *)(v8 + 32) = 0x2065727574616546;
  *(_QWORD *)(v8 + 40) = 0xEB00000000525443;
  v16 = MEMORY[0x1E0DEB070];
  v17 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)(v8 + 72) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v8 + 80) = v17;
  *(_BYTE *)(v8 + 88) = 0;
  *(_QWORD *)(v8 + 96) = 0xD000000000000016;
  *(_QWORD *)(v8 + 104) = 0x80000001BB964080;
  *(_QWORD *)(v8 + 136) = v16;
  *(_QWORD *)(v8 + 144) = v17;
  *(_BYTE *)(v8 + 152) = 0;
  *(_QWORD *)(v8 + 160) = 0xD000000000000015;
  *(_QWORD *)(v8 + 168) = 0x80000001BB9640A0;
  *(_QWORD *)(v8 + 200) = v16;
  *(_QWORD *)(v8 + 208) = v17;
  *(_BYTE *)(v8 + 216) = 0;
  *(_QWORD *)(v8 + 224) = 0xD000000000000012;
  *(_QWORD *)(v8 + 232) = 0x80000001BB9640C0;
  *(_QWORD *)(v8 + 264) = v16;
  *(_QWORD *)(v8 + 272) = v17;
  *(_BYTE *)(v8 + 280) = 0;
  *(_QWORD *)(v8 + 288) = 0x6E69646465626D45;
  *(_QWORD *)(v8 + 296) = 0xEF65726F63532067;
  *(_QWORD *)(v8 + 328) = v16;
  *(_QWORD *)(v8 + 336) = v17;
  *(_BYTE *)(v8 + 344) = 0;
  *(_QWORD *)(v8 + 352) = 0xD000000000000013;
  *(_QWORD *)(v8 + 360) = 0x80000001BB9640E0;
  *(_QWORD *)(v8 + 392) = v16;
  *(_QWORD *)(v8 + 400) = v17;
  *(_BYTE *)(v8 + 408) = 0;
  *(_QWORD *)(v8 + 416) = 0xD000000000000017;
  *(_QWORD *)(v8 + 424) = 0x80000001BB964100;
  *(_QWORD *)(v8 + 456) = v16;
  *(_QWORD *)(v8 + 464) = v17;
  *(_BYTE *)(v8 + 472) = 0;
  *(_QWORD *)(v8 + 480) = 0xD000000000000015;
  *(_QWORD *)(v8 + 488) = 0x80000001BB964120;
  *(_QWORD *)(v8 + 520) = v16;
  *(_QWORD *)(v8 + 528) = v17;
  *(_BYTE *)(v8 + 536) = 0;
  *(_QWORD *)(v8 + 544) = 0x6F63532069626154;
  *(_QWORD *)(v8 + 552) = 0xEA00000000006572;
  *(_QWORD *)(v8 + 584) = v16;
  *(_QWORD *)(v8 + 592) = v17;
  *(_BYTE *)(v8 + 600) = 0;
  *(_QWORD *)(v8 + 608) = 0xD000000000000019;
  *(_QWORD *)(v8 + 616) = 0x80000001BB964140;
  *(_QWORD *)(v8 + 648) = v16;
  *(_QWORD *)(v8 + 656) = v17;
  *(_BYTE *)(v8 + 664) = 0;
  *(_QWORD *)(v8 + 672) = 0xD000000000000015;
  *(_QWORD *)(v8 + 680) = 0x80000001BB964160;
  *(_QWORD *)(v8 + 712) = v16;
  *(_QWORD *)(v8 + 720) = v17;
  *(_BYTE *)(v8 + 728) = 0;
  *(_QWORD *)(v8 + 736) = 0xD00000000000001ALL;
  *(_QWORD *)(v8 + 744) = 0x80000001BB964180;
  *(_QWORD *)(v8 + 776) = v16;
  *(_QWORD *)(v8 + 784) = v17;
  *(_BYTE *)(v8 + 792) = 0;
  *(_QWORD *)(v8 + 800) = 0xD000000000000016;
  *(_QWORD *)(v8 + 808) = 0x80000001BB9641A0;
  *(_QWORD *)(v8 + 840) = v16;
  *(_QWORD *)(v8 + 848) = v17;
  *(_BYTE *)(v8 + 856) = 0;
  strcpy((char *)(v8 + 864), "Sorting Score");
  *(_WORD *)(v8 + 878) = -4864;
  *(_QWORD *)(v8 + 904) = v16;
  *(_QWORD *)(v8 + 912) = v17;
  *(_BYTE *)(v8 + 920) = 0;
  *(_QWORD *)(v8 + 928) = 0xD000000000000011;
  *(_QWORD *)(v8 + 936) = 0x80000001BB9641C0;
  *(_QWORD *)(v8 + 968) = v16;
  *(_QWORD *)(v8 + 976) = v17;
  *(_BYTE *)(v8 + 984) = 0;
  *(_QWORD *)(v8 + 992) = 0xD000000000000021;
  *(_QWORD *)(v8 + 1000) = 0x80000001BB9641E0;
  *(_QWORD *)(v8 + 1032) = v16;
  *(_QWORD *)(v8 + 1040) = v17;
  *(_QWORD *)(v8 + 1008) = v15;
  *(_BYTE *)(v8 + 1048) = 0;
  swift_bridgeObjectRetain();
  result = sub_1BB384788(v8);
  *(_QWORD *)(a1 + 24) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(a1 + 32) = &off_1E728C9C8;
  strcpy((char *)a1, "Score Profile");
  *(_WORD *)(a1 + 14) = -4864;
  *(_QWORD *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_1BA953BBC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(result + 32) = 0xD000000000000021;
  *(_QWORD *)(result + 40) = 0x80000001BB964010;
  v4 = v1[5];
  v5 = MEMORY[0x1E0DEB070];
  v6 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)(result + 72) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(result + 80) = v6;
  *(_QWORD *)(result + 48) = v4;
  *(_BYTE *)(result + 88) = 0;
  *(_QWORD *)(result + 96) = 0xD000000000000015;
  *(_QWORD *)(result + 104) = 0x80000001BB964040;
  v7 = v1[31];
  *(_QWORD *)(result + 136) = v5;
  *(_QWORD *)(result + 144) = v6;
  *(_QWORD *)(result + 112) = v7;
  *(_BYTE *)(result + 152) = 0;
  *(_QWORD *)(result + 160) = 0xD000000000000016;
  *(_QWORD *)(result + 168) = 0x80000001BB964060;
  v8 = v1[49];
  *(_QWORD *)(result + 200) = v5;
  *(_QWORD *)(result + 208) = v6;
  *(_QWORD *)(result + 176) = v8;
  *(_BYTE *)(result + 216) = 0;
  *(_QWORD *)(a1 + 24) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(a1 + 32) = &off_1E728C9C8;
  strcpy((char *)a1, "Coefficients");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_1BA953CD4@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB887E40;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v1 + 424);
  v4 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v3 + 112) = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v3 + 176) = v4;
  v5 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v3 + 240) = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v3 + 304) = v5;
  v6 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v3 + 368) = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v3 + 432) = v6;
  v7 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v3 + 496) = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v3 + 560) = v7;
  result = *(double *)(v1 + 168);
  v9 = *(_QWORD *)(v1 + 176);
  *(double *)(v3 + 624) = result;
  *(_QWORD *)(v3 + 32) = 0x696C7069746C754DLL;
  *(_QWORD *)(v3 + 40) = 0xEA00000000007265;
  v10 = MEMORY[0x1E0DEB070];
  v11 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)(v3 + 72) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v3 + 80) = v11;
  *(_BYTE *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 96) = 0xD000000000000010;
  *(_QWORD *)(v3 + 104) = 0x80000001BB963ED0;
  *(_QWORD *)(v3 + 136) = v10;
  *(_QWORD *)(v3 + 144) = v11;
  *(_BYTE *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 160) = 0xD000000000000016;
  *(_QWORD *)(v3 + 168) = 0x80000001BB963EF0;
  *(_QWORD *)(v3 + 200) = v10;
  *(_QWORD *)(v3 + 208) = v11;
  *(_BYTE *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 224) = 0xD000000000000016;
  *(_QWORD *)(v3 + 232) = 0x80000001BB963F10;
  *(_QWORD *)(v3 + 264) = v10;
  *(_QWORD *)(v3 + 272) = v11;
  *(_BYTE *)(v3 + 280) = 0;
  *(_QWORD *)(v3 + 288) = 0xD000000000000015;
  *(_QWORD *)(v3 + 296) = 0x80000001BB963F30;
  *(_QWORD *)(v3 + 328) = v10;
  *(_QWORD *)(v3 + 336) = v11;
  *(_BYTE *)(v3 + 344) = 0;
  *(_QWORD *)(v3 + 352) = 0xD00000000000001ALL;
  *(_QWORD *)(v3 + 360) = 0x80000001BB963F50;
  *(_QWORD *)(v3 + 392) = v10;
  *(_QWORD *)(v3 + 400) = v11;
  *(_BYTE *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 416) = 0xD000000000000014;
  *(_QWORD *)(v3 + 424) = 0x80000001BB963F70;
  *(_QWORD *)(v3 + 456) = v10;
  *(_QWORD *)(v3 + 464) = v11;
  *(_BYTE *)(v3 + 472) = 0;
  *(_QWORD *)(v3 + 480) = 0xD000000000000013;
  *(_QWORD *)(v3 + 488) = 0x80000001BB963F90;
  *(_QWORD *)(v3 + 520) = v10;
  *(_QWORD *)(v3 + 528) = v11;
  *(_BYTE *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 544) = 0xD000000000000018;
  *(_QWORD *)(v3 + 552) = 0x80000001BB963FB0;
  *(_QWORD *)(v3 + 584) = v10;
  *(_QWORD *)(v3 + 592) = v11;
  *(_BYTE *)(v3 + 600) = 0;
  *(_QWORD *)(v3 + 608) = 0xD000000000000011;
  *(_QWORD *)(v3 + 616) = 0x80000001BB963FD0;
  *(_QWORD *)(v3 + 648) = v10;
  *(_QWORD *)(v3 + 656) = v11;
  *(_BYTE *)(v3 + 664) = 0;
  *(_QWORD *)(v3 + 672) = 0xD000000000000016;
  *(_QWORD *)(v3 + 680) = 0x80000001BB963FF0;
  *(_QWORD *)(v3 + 712) = v10;
  *(_QWORD *)(v3 + 720) = v11;
  *(_QWORD *)(v3 + 688) = v9;
  *(_BYTE *)(v3 + 728) = 0;
  a1[3] = &type metadata for DebugInspectionDataSection;
  a1[4] = &off_1E728C9C8;
  *a1 = 0x696C7069746C754DLL;
  a1[1] = 0xEB00000000737265;
  a1[2] = v3;
  return result;
}

double sub_1BA953F20@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB887E50;
  v4 = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v1 + 208);
  v5 = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v3 + 112) = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v3 + 176) = v5;
  v6 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v3 + 240) = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v3 + 304) = v6;
  v7 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v3 + 368) = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v3 + 432) = v7;
  strcpy((char *)(v3 + 32), "Seen Penalty");
  *(_BYTE *)(v3 + 45) = 0;
  *(_WORD *)(v3 + 46) = -5120;
  v8 = MEMORY[0x1E0DEB070];
  v9 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)(v3 + 72) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v3 + 80) = v9;
  *(_BYTE *)(v3 + 88) = 0;
  strcpy((char *)(v3 + 96), "Read Penalty");
  *(_BYTE *)(v3 + 109) = 0;
  *(_WORD *)(v3 + 110) = -5120;
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = v9;
  *(_BYTE *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 160) = 0xD000000000000010;
  *(_QWORD *)(v3 + 168) = 0x80000001BB963DF0;
  *(_QWORD *)(v3 + 200) = v8;
  *(_QWORD *)(v3 + 208) = v9;
  *(_BYTE *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 224) = 0xD000000000000013;
  *(_QWORD *)(v3 + 232) = 0x80000001BB963E10;
  *(_QWORD *)(v3 + 264) = v8;
  *(_QWORD *)(v3 + 272) = v9;
  *(_BYTE *)(v3 + 280) = 0;
  *(_QWORD *)(v3 + 288) = 0xD000000000000012;
  *(_QWORD *)(v3 + 296) = 0x80000001BB963E30;
  *(_QWORD *)(v3 + 328) = v8;
  *(_QWORD *)(v3 + 336) = v9;
  *(_BYTE *)(v3 + 344) = 0;
  *(_QWORD *)(v3 + 352) = 0xD000000000000018;
  *(_QWORD *)(v3 + 360) = 0x80000001BB963E50;
  *(_QWORD *)(v3 + 392) = v8;
  *(_QWORD *)(v3 + 400) = v9;
  *(_BYTE *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 416) = 0xD000000000000013;
  *(_QWORD *)(v3 + 424) = 0x80000001BB963E70;
  *(_QWORD *)(v3 + 456) = v8;
  *(_QWORD *)(v3 + 464) = v9;
  *(_BYTE *)(v3 + 472) = 0;
  *(_QWORD *)(v3 + 480) = 0xD000000000000013;
  *(_QWORD *)(v3 + 488) = 0x80000001BB963E90;
  *(_QWORD *)(v3 + 520) = v8;
  *(_QWORD *)(v3 + 528) = v9;
  *(_QWORD *)(v3 + 496) = v4;
  *(_BYTE *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 544) = 0xD000000000000012;
  *(_QWORD *)(v3 + 552) = 0x80000001BB963EB0;
  result = *(double *)(v1 + 256);
  *(_QWORD *)(v3 + 584) = v8;
  *(_QWORD *)(v3 + 592) = v9;
  *(double *)(v3 + 560) = result;
  *(_BYTE *)(v3 + 600) = 0;
  a1[3] = &type metadata for DebugInspectionDataSection;
  a1[4] = &off_1E728C9C8;
  *a1 = 0x6569746C616E6550;
  a1[1] = 0xE900000000000073;
  a1[2] = v3;
  return result;
}

uint64_t sub_1BA954118(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B63696C43776172 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BA9542F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AB310, (uint64_t (*)(void))sub_1BA957A54, (uint64_t)&type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA957A54();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v21;
  v25 = 0;
  v11 = sub_1BB874098();
  v13 = v12;
  v24 = 1;
  swift_bridgeObjectRetain();
  sub_1BB8740B0();
  v15 = v14;
  v23 = 2;
  sub_1BB8740B0();
  v17 = v16;
  v22 = 3;
  sub_1BB8740B0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  result = swift_bridgeObjectRelease();
  *v10 = v11;
  v10[1] = v13;
  v10[2] = v15;
  v10[3] = v17;
  v10[4] = v19;
  return result;
}

uint64_t sub_1BA954518(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6353726576726573 && a2 == 0xEB0000000065726FLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6353746E65696C63 && a2 == 0xEB0000000065726FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB964600 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB964620 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB964640 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB964660 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB964680)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BA954860@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AB320, (uint64_t (*)(void))sub_1BA957A98, (uint64_t)&type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v29 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA957A98();
  v8 = v7;
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v28;
  v10 = v29;
  v37 = 0;
  sub_1BB8740B0();
  v12 = v11;
  v36 = 1;
  sub_1BB8740B0();
  v14 = v13;
  v35 = 2;
  sub_1BB8740B0();
  v16 = v15;
  v34 = 3;
  sub_1BB8740B0();
  v18 = v17;
  v33 = 4;
  sub_1BB8740B0();
  v20 = v19;
  v32 = 5;
  sub_1BB8740B0();
  v22 = v21;
  v31 = 6;
  sub_1BB8740B0();
  v24 = v23;
  v30 = 7;
  sub_1BB8740B0();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v10);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v12;
  v9[1] = v14;
  v9[2] = v16;
  v9[3] = v18;
  v9[4] = v20;
  v9[5] = v22;
  v9[6] = v24;
  v9[7] = v26;
  return result;
}

uint64_t sub_1BA954AD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  float v25;
  float v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[55];
  _BYTE v140[440];

  if (a1)
  {
    v3 = a1;
    objc_msgSend(v3, sel_featureCtr);
    v138 = v4;
    objc_msgSend(v3, sel_subscribedChannelCtr);
    v137 = v5;
    objc_msgSend(v3, sel_paidNonpaidSubscriptionCtr);
    v136 = v6;
    objc_msgSend(v3, sel_autoSubscribeCtr);
    v135 = v7;
    objc_msgSend(v3, sel_embeddingScore);
    v134 = v8;
    objc_msgSend(v3, sel_computedGlobalScoreCoefficient);
    v133 = v9;
    objc_msgSend(v3, sel_userFeedbackScore);
    v132 = v10;
    objc_msgSend(v3, sel_tabiScore);
    v131 = v11;
    objc_msgSend(v3, sel_rawUserFeedbackScore);
    v130 = v12;
    objc_msgSend(v3, sel_rawPersonalizationScore);
    v129 = v13;
    objc_msgSend(v3, sel_personalizationScore);
    v128 = v14;
    objc_msgSend(v3, sel_agedPersonalizationScore);
    v127 = v15;
    objc_msgSend(v3, sel_conversionMultiplier);
    v126 = v16;
    objc_msgSend(v3, sel_dampenedStaticMultiplier);
    v125 = v17;
    objc_msgSend(v3, sel_staticMultiplier);
    v124 = v18;
    objc_msgSend(v3, sel_qualitativeMultiplier);
    v122 = v19;
    objc_msgSend(v3, sel_publisherDampener);
    v123 = v20;
    objc_msgSend(v3, sel_publisherFavorability);
    v121 = v21;
    objc_msgSend(v3, sel_sortingScore);
    v120 = v22;
    objc_msgSend(v3, sel_shadowTabiScore);
    v24 = v23;
    objc_msgSend(v3, sel_shadowAgedPersonalizationScore);
    v26 = v25;
    v27 = objc_msgSend(v3, sel_globalCohort);
    objc_msgSend(v27, sel_clicks);
    v119 = v28;

    v29 = objc_msgSend(v3, sel_globalCohort);
    objc_msgSend(v29, sel_rawClicks);
    v118 = v30;

    v31 = objc_msgSend(v3, sel_globalCohort);
    objc_msgSend(v31, sel_impressions);
    v117 = v32;

    v33 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v33, sel_serverScoreCoefficient);
    v116 = v34;

    v35 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v35, sel_clientScoreCoefficient);
    v115 = v36;

    v37 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v37, sel_subscribedTopicScoreCoefficient);
    v114 = v38;

    v39 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v39, sel_subscribedChannelScoreCoefficent);
    v113 = v40;

    v41 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v41, sel_autofavoritedScoreCoefficient);
    v112 = v42;

    v43 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v43, sel_articleEmbeddingScoreCoefficient);
    v111 = v44;

    v45 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v45, sel_tabiScoreCoefficient);
    v110 = v46;

    v47 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v47, sel_conversionCoefficient);
    v109 = v48;

    v49 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v49, sel_userConversionScore);
    v108 = v50;

    v51 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v51, sel_audioMultiplier);
    v107 = v52;

    v53 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v53, sel_bundleFreeMultiplier);
    v106 = v54;

    v55 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v55, sel_bundlePaidMultiplier);
    v105 = v56;

    v57 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v57, sel_evergreenMultiplier);
    v104 = v58;

    v59 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v59, sel_featuredMultiplier);
    v103 = v60;

    objc_msgSend(v3, sel_nicheContentMultiplier);
    v102 = v61;
    objc_msgSend(v3, sel_contentTriggerDampener);
    v101 = v62;
    v63 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v63, sel_multiplierDampener);
    v100 = v64;

    v65 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v65, sel_mutedVoteDampener);
    v99 = v66;

    v67 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v67, sel_seenPenalty);
    v98 = v68;

    v69 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v69, sel_readPenalty);
    v96 = v70;

    v71 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v71, sel_listenedPenalty);
    v73 = v72;

    v74 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v74, sel_sparseTagsPenalty);
    v76 = v75;

    v77 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v77, sel_timeDecayPenalty);
    v79 = v78;

    v80 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v80, sel_halfLifeCoefficient);
    v82 = v81;

    v83 = objc_msgSend(v3, sel_scoringVersion);
    v84 = objc_msgSend(v3, sel_debugFields);
    v85 = objc_msgSend(v84, sel_scoringAssetsIdentifier);

    if (v85)
    {
      v86 = sub_1BB8729A0();
      v88 = v87;

    }
    else
    {
      v86 = 0;
      v88 = 0;
    }
    v89 = v24;
    v90 = v26;
    objc_msgSend(v3, sel_multiplier, v96);
    v92 = v91;
    objc_msgSend(v3, sel_serverScoreDemocratizationFactor);
    v94 = v93;

    v139[0] = v138;
    v139[1] = v137;
    v139[2] = v136;
    v139[3] = v135;
    v139[4] = v134;
    v139[5] = v133;
    v139[6] = v132;
    v139[7] = v131;
    v139[8] = v130;
    v139[9] = v108;
    v139[10] = v129;
    v139[11] = v128;
    v139[12] = v127;
    v139[13] = v107;
    v139[14] = v106;
    v139[15] = v105;
    v139[16] = v126;
    v139[17] = v125;
    v139[18] = v104;
    v139[19] = v103;
    v139[20] = v102;
    v139[21] = v124;
    v139[22] = v122;
    v139[23] = v101;
    v139[24] = v100;
    v139[25] = v99;
    v139[26] = v98;
    v139[27] = v97;
    v139[28] = v73;
    v139[29] = v76;
    v139[30] = v79;
    v139[31] = v82;
    v139[32] = v123;
    v139[33] = v121;
    v139[34] = v120;
    *(double *)&v139[35] = v89;
    *(double *)&v139[36] = v90;
    v139[37] = 42;
    v139[38] = 0xE100000000000000;
    v139[39] = v119;
    v139[40] = v118;
    v139[41] = v117;
    v139[42] = v116;
    v139[43] = v115;
    v139[44] = v114;
    v139[45] = v113;
    v139[46] = v112;
    v139[47] = v111;
    v139[48] = v110;
    v139[49] = v109;
    v139[50] = v83;
    v139[51] = v86;
    v139[52] = v88;
    v139[53] = v92;
    v139[54] = v94;
    nullsub_1();
  }
  else
  {
    sub_1BA95538C((uint64_t)v139);
  }
  sub_1BA9553D0((uint64_t)v139, (uint64_t)v140);
  return sub_1BA9553D0((uint64_t)v140, a2);
}

double sub_1BA95538C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 432) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1BA9553D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DebugInspectionScoreProfile()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugInspectionScoreProfile(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  v10 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v10;
  v11 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v11;
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  v12 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v12;
  v13 = *(_OWORD *)(a2 + 320);
  v14 = *(_OWORD *)(a2 + 336);
  v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  *(_OWORD *)(a1 + 320) = v13;
  *(_OWORD *)(a1 + 336) = v14;
  v16 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v16;
  v17 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v17;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugInspectionScoreProfile(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  a1[25] = a2[25];
  a1[26] = a2[26];
  a1[27] = a2[27];
  a1[28] = a2[28];
  a1[29] = a2[29];
  a1[30] = a2[30];
  a1[31] = a2[31];
  a1[32] = a2[32];
  a1[33] = a2[33];
  a1[34] = a2[34];
  a1[35] = a2[35];
  a1[36] = a2[36];
  a1[37] = a2[37];
  a1[38] = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[39] = a2[39];
  a1[40] = a2[40];
  a1[41] = a2[41];
  a1[42] = a2[42];
  a1[43] = a2[43];
  a1[44] = a2[44];
  a1[45] = a2[45];
  a1[46] = a2[46];
  a1[47] = a2[47];
  a1[48] = a2[48];
  a1[49] = a2[49];
  a1[50] = a2[50];
  a1[51] = a2[51];
  a1[52] = a2[52];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[53] = a2[53];
  a1[54] = a2[54];
  return a1;
}

void *__swift_memcpy440_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B8uLL);
}

uint64_t assignWithTake for DebugInspectionScoreProfile(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  v13 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  v16 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v16;
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v17;
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionScoreProfile(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 440))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 304);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionScoreProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 440) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 304) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 440) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile()
{
  return &type metadata for DebugInspectionScoreProfile;
}

uint64_t sub_1BA9558D0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x4365727574616566 && a2 == 0xEA00000000007274 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB964230 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB964250 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB964270 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEE0065726F635367 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001BB964290 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB9642B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB9642D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB9642F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB964310 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB964330 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB964350 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C754D6F69647561 && a2 == 0xEF7265696C706974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB964370 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB964390 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB9643B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB9643D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB9643F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB964410 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB964430 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB964450 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB964470 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB964490 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB9644B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB9644D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x616E65506E656573 && a2 == 0xEB0000000079746CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x64656E657473696CLL && a2 == 0xEF79746C616E6550 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB9644F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB964510 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB964530 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB964550 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB964570 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0x53676E6974726F73 && a2 == 0xEC00000065726F63 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x6154776F64616873 && a2 == 0xEF65726F63536962 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001BB964590 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0x6F436C61626F6C67 && a2 == 0xEC00000074726F68 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x6963696666656F63 && a2 == 0xEC00000073746E65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x56676E69726F6373 && a2 == 0xEE006E6F69737265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB9645B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001BB9645D0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 42;
    else
      return 43;
  }
}

void *sub_1BA956928@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD v112[55];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;

  sub_1BA4CDF6C(0, &qword_1EF2AB2C0, (uint64_t (*)(void))sub_1BA957560, (uint64_t)&type metadata for DebugInspectionScoreProfile.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v110 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v65 - v7;
  v9 = a1[3];
  v111 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BA957560();
  sub_1BB87468C();
  if (v2)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  v10 = a2;
  LOBYTE(v113) = 0;
  sub_1BB8740B0();
  v12 = v11;
  LOBYTE(v113) = 1;
  sub_1BB8740B0();
  v14 = v13;
  LOBYTE(v113) = 2;
  sub_1BB8740B0();
  v16 = v15;
  LOBYTE(v113) = 3;
  sub_1BB8740B0();
  v18 = v17;
  LOBYTE(v113) = 4;
  sub_1BB8740B0();
  v20 = v19;
  LOBYTE(v113) = 5;
  sub_1BB8740B0();
  v22 = v21;
  LOBYTE(v113) = 6;
  sub_1BB8740B0();
  v24 = v23;
  LOBYTE(v113) = 7;
  sub_1BB8740B0();
  v109 = v25;
  LOBYTE(v113) = 8;
  sub_1BB8740B0();
  v27 = v26;
  LOBYTE(v113) = 9;
  sub_1BB8740B0();
  v108 = v28;
  LOBYTE(v113) = 10;
  sub_1BB8740B0();
  v107 = v29;
  LOBYTE(v113) = 11;
  sub_1BB8740B0();
  v106 = v30;
  LOBYTE(v113) = 12;
  sub_1BB8740B0();
  v105 = v31;
  LOBYTE(v113) = 13;
  sub_1BB8740B0();
  v104 = v32;
  LOBYTE(v113) = 14;
  sub_1BB8740B0();
  v103 = v33;
  LOBYTE(v113) = 15;
  sub_1BB8740B0();
  v102 = v34;
  LOBYTE(v113) = 16;
  sub_1BB8740B0();
  v101 = v35;
  LOBYTE(v113) = 17;
  sub_1BB8740B0();
  v100 = v36;
  LOBYTE(v113) = 18;
  sub_1BB8740B0();
  v99 = v37;
  LOBYTE(v113) = 19;
  sub_1BB8740B0();
  v98 = v38;
  LOBYTE(v113) = 20;
  sub_1BB8740B0();
  v97 = v39;
  LOBYTE(v113) = 21;
  sub_1BB8740B0();
  v96 = v40;
  LOBYTE(v113) = 22;
  sub_1BB8740B0();
  v95 = v41;
  LOBYTE(v113) = 23;
  sub_1BB8740B0();
  v94 = v42;
  LOBYTE(v113) = 24;
  sub_1BB8740B0();
  v93 = v43;
  LOBYTE(v113) = 25;
  sub_1BB8740B0();
  v92 = v44;
  LOBYTE(v113) = 26;
  sub_1BB8740B0();
  v91 = v45;
  LOBYTE(v113) = 27;
  sub_1BB8740B0();
  v90 = v46;
  LOBYTE(v113) = 28;
  sub_1BB8740B0();
  v89 = v47;
  LOBYTE(v113) = 29;
  sub_1BB8740B0();
  v88 = v48;
  LOBYTE(v113) = 30;
  sub_1BB8740B0();
  v87 = v49;
  LOBYTE(v113) = 31;
  sub_1BB8740B0();
  v86 = v50;
  LOBYTE(v113) = 32;
  sub_1BB8740B0();
  v85 = v51;
  LOBYTE(v113) = 33;
  sub_1BB8740B0();
  v84 = v52;
  LOBYTE(v113) = 34;
  sub_1BB8740B0();
  v83 = v53;
  LOBYTE(v113) = 35;
  sub_1BB8740B0();
  v82 = v54;
  LOBYTE(v113) = 36;
  sub_1BB8740B0();
  v81 = v55;
  LOBYTE(v112[0]) = 37;
  sub_1BA9575A4();
  sub_1BB8740D4();
  v56 = v113;
  v57 = v114;
  v79 = v116;
  v80 = v115;
  v78 = v117;
  LOBYTE(v112[0]) = 38;
  sub_1BA9575E8();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v76 = v114;
  v77 = v113;
  v74 = v116;
  v75 = v115;
  v72 = v118;
  v73 = v117;
  v70 = v120;
  v71 = v119;
  LOBYTE(v113) = 39;
  v69 = sub_1BB8740E0();
  LOBYTE(v113) = 40;
  v68 = sub_1BB87402C();
  v59 = v58;
  LOBYTE(v113) = 41;
  swift_bridgeObjectRetain();
  sub_1BB8740B0();
  v67 = v60;
  v168 = 42;
  sub_1BB8740B0();
  v66 = v61;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v110);
  v112[0] = v12;
  v112[1] = v14;
  v112[2] = v16;
  v112[3] = v18;
  v112[4] = v20;
  v112[5] = v22;
  v112[6] = v24;
  v112[7] = v109;
  v112[8] = v27;
  v112[9] = v108;
  v112[10] = v107;
  v112[11] = v106;
  v112[12] = v105;
  v112[13] = v104;
  v112[14] = v103;
  v112[15] = v102;
  v112[16] = v101;
  v112[17] = v100;
  v112[18] = v99;
  v112[19] = v98;
  v112[20] = v97;
  v112[21] = v96;
  v112[22] = v95;
  v112[23] = v94;
  v112[24] = v93;
  v112[25] = v92;
  v112[26] = v91;
  v112[27] = v90;
  v112[28] = v89;
  v112[29] = v88;
  v112[30] = v87;
  v112[31] = v86;
  v112[32] = v85;
  v112[33] = v84;
  v112[34] = v83;
  v112[35] = v82;
  v112[36] = v81;
  v112[37] = v56;
  v112[38] = v57;
  v112[39] = v80;
  v112[40] = v79;
  v112[41] = v78;
  v112[42] = v77;
  v112[43] = v76;
  v112[44] = v75;
  v112[45] = v74;
  v112[46] = v73;
  v112[47] = v72;
  v112[48] = v71;
  v112[49] = v70;
  v63 = v68;
  v62 = v69;
  v112[50] = v69;
  v112[51] = v68;
  v112[52] = v59;
  v112[53] = v67;
  v112[54] = v66;
  sub_1BA95762C((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  v113 = v12;
  v114 = v14;
  v115 = v16;
  v116 = v18;
  v117 = v20;
  v118 = v22;
  v119 = v24;
  v120 = v109;
  v121 = v27;
  v122 = v108;
  v123 = v107;
  v124 = v106;
  v125 = v105;
  v126 = v104;
  v127 = v103;
  v128 = v102;
  v129 = v101;
  v130 = v100;
  v131 = v99;
  v132 = v98;
  v133 = v97;
  v134 = v96;
  v135 = v95;
  v136 = v94;
  v137 = v93;
  v138 = v92;
  v139 = v91;
  v140 = v90;
  v141 = v89;
  v142 = v88;
  v143 = v87;
  v144 = v86;
  v145 = v85;
  v146 = v84;
  v147 = v83;
  v148 = v82;
  v149 = v81;
  v150 = v56;
  v151 = v57;
  v152 = v80;
  v153 = v79;
  v154 = v78;
  v155 = v77;
  v156 = v76;
  v157 = v75;
  v158 = v74;
  v159 = v73;
  v160 = v72;
  v161 = v71;
  v162 = v70;
  v163 = v62;
  v164 = v63;
  v165 = v59;
  v166 = v67;
  v167 = v66;
  sub_1BA957660((uint64_t)&v113);
  return memcpy(v10, v112, 0x1B8uLL);
}

unint64_t sub_1BA957560()
{
  unint64_t result;

  result = qword_1EF2AB2C8;
  if (!qword_1EF2AB2C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887BD4, &type metadata for DebugInspectionScoreProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2C8);
  }
  return result;
}

unint64_t sub_1BA9575A4()
{
  unint64_t result;

  result = qword_1EF2AB2D0;
  if (!qword_1EF2AB2D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887BAC, &type metadata for DebugInspectionScoreProfile.Cohort);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2D0);
  }
  return result;
}

unint64_t sub_1BA9575E8()
{
  unint64_t result;

  result = qword_1EF2AB2D8;
  if (!qword_1EF2AB2D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887B84, &type metadata for DebugInspectionScoreProfile.Coefficients);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2D8);
  }
  return result;
}

uint64_t sub_1BA95762C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA957660(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BA957694()
{
  unint64_t result;

  result = qword_1EF2AB2E8;
  if (!qword_1EF2AB2E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887B5C, &type metadata for DebugInspectionScoreProfile.Cohort);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2E8);
  }
  return result;
}

unint64_t sub_1BA9576D8()
{
  unint64_t result;

  result = qword_1EF2AB2F0;
  if (!qword_1EF2AB2F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887B34, &type metadata for DebugInspectionScoreProfile.Coefficients);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DebugInspectionScoreProfile.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD6)
    goto LABEL_17;
  if (a2 + 42 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 42) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 42;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 42;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 42;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2B;
  v8 = v6 - 43;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionScoreProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 42 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 42) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD5)
    return ((uint64_t (*)(void))((char *)&loc_1BA9577F8 + 4 * byte_1BB8879D7[v4]))();
  *a1 = a2 + 42;
  return ((uint64_t (*)(void))((char *)sub_1BA95782C + 4 * byte_1BB8879D2[v4]))();
}

uint64_t sub_1BA95782C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA957834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA95783CLL);
  return result;
}

uint64_t sub_1BA957848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA957850);
  *(_BYTE *)result = a2 + 42;
  return result;
}

uint64_t sub_1BA957854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA95785C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.CodingKeys()
{
  return &type metadata for DebugInspectionScoreProfile.CodingKeys;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Coefficients()
{
  return &type metadata for DebugInspectionScoreProfile.Coefficients;
}

uint64_t initializeWithCopy for DebugInspectionScoreProfile.Cohort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugInspectionScoreProfile.Cohort(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for DebugInspectionScoreProfile.Cohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Cohort()
{
  return &type metadata for DebugInspectionScoreProfile.Cohort;
}

unint64_t sub_1BA957980()
{
  unint64_t result;

  result = qword_1EF2AB2F8;
  if (!qword_1EF2AB2F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887B0C, &type metadata for DebugInspectionScoreProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB2F8);
  }
  return result;
}

unint64_t sub_1BA9579C8()
{
  unint64_t result;

  result = qword_1EF2AB300;
  if (!qword_1EF2AB300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887A7C, &type metadata for DebugInspectionScoreProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB300);
  }
  return result;
}

unint64_t sub_1BA957A10()
{
  unint64_t result;

  result = qword_1EF2AB308;
  if (!qword_1EF2AB308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887AA4, &type metadata for DebugInspectionScoreProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB308);
  }
  return result;
}

unint64_t sub_1BA957A54()
{
  unint64_t result;

  result = qword_1EF2AB318;
  if (!qword_1EF2AB318)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887DE4, &type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB318);
  }
  return result;
}

unint64_t sub_1BA957A98()
{
  unint64_t result;

  result = qword_1EF2AB328;
  if (!qword_1EF2AB328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887D94, &type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB328);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionScoreProfile.Coefficients.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA957B28 + 4 * byte_1BB8879E1[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA957B5C + 4 * byte_1BB8879DC[v4]))();
}

uint64_t sub_1BA957B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA957B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA957B6CLL);
  return result;
}

uint64_t sub_1BA957B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA957B80);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA957B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA957B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Coefficients.CodingKeys()
{
  return &type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionScoreProfile.Cohort.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA957BF4 + 4 * byte_1BB8879EB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA957C28 + 4 * byte_1BB8879E6[v4]))();
}

uint64_t sub_1BA957C28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA957C30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA957C38);
  return result;
}

uint64_t sub_1BA957C44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA957C4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA957C50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA957C58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Cohort.CodingKeys()
{
  return &type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys;
}

unint64_t sub_1BA957C78()
{
  unint64_t result;

  result = qword_1EF2AB340;
  if (!qword_1EF2AB340)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887CB4, &type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB340);
  }
  return result;
}

unint64_t sub_1BA957CC0()
{
  unint64_t result;

  result = qword_1EF2AB348;
  if (!qword_1EF2AB348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887D6C, &type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB348);
  }
  return result;
}

unint64_t sub_1BA957D08()
{
  unint64_t result;

  result = qword_1EF2AB350;
  if (!qword_1EF2AB350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887CDC, &type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB350);
  }
  return result;
}

unint64_t sub_1BA957D50()
{
  unint64_t result;

  result = qword_1EF2AB358;
  if (!qword_1EF2AB358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887D04, &type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB358);
  }
  return result;
}

unint64_t sub_1BA957D98()
{
  unint64_t result;

  result = qword_1EF2AB360;
  if (!qword_1EF2AB360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887C24, &type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB360);
  }
  return result;
}

unint64_t sub_1BA957DE0()
{
  unint64_t result;

  result = qword_1EF2AB368;
  if (!qword_1EF2AB368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887C4C, &type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB368);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterLastPrecededBy.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatContentSubgroupFilterLastPrecededBy.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BA957E84()
{
  return 1701869940;
}

uint64_t sub_1BA957E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA957F18()
{
  sub_1BA95805C();
  return sub_1BB874710();
}

uint64_t sub_1BA957F40()
{
  sub_1BA95805C();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterLastPrecededBy.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA9581C4(0, &qword_1EF2AB370, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA95805C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BA95805C()
{
  unint64_t result;

  result = qword_1EF2AB378;
  if (!qword_1EF2AB378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888010, &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB378);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterLastPrecededBy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BA9581C4(0, &qword_1EF2AB380, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA95805C();
  sub_1BB87468C();
  if (!v2)
  {
    v10 = sub_1BB874098();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA9581C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA95805C();
    v7 = a3(a1, &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA958220(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA958254();
  a1[2] = sub_1BA958298();
  result = sub_1BA9582DC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA958254()
{
  unint64_t result;

  result = qword_1EF2AB388;
  if (!qword_1EF2AB388)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterLastPrecededBy, &type metadata for FormatContentSubgroupFilterLastPrecededBy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB388);
  }
  return result;
}

unint64_t sub_1BA958298()
{
  unint64_t result;

  result = qword_1EF2AB390;
  if (!qword_1EF2AB390)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterLastPrecededBy, &type metadata for FormatContentSubgroupFilterLastPrecededBy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB390);
  }
  return result;
}

unint64_t sub_1BA9582DC()
{
  unint64_t result;

  result = qword_1EF2AB398;
  if (!qword_1EF2AB398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterLastPrecededBy, &type metadata for FormatContentSubgroupFilterLastPrecededBy);
    atomic_store(result, (unint64_t *)&qword_1EF2AB398);
  }
  return result;
}

uint64_t sub_1BA958320@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterLastPrecededBy.init(from:)(a1, a2);
}

uint64_t sub_1BA958334(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA9581C4(0, &qword_1EF2AB370, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA95805C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterLastPrecededBy()
{
  return &type metadata for FormatContentSubgroupFilterLastPrecededBy;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterLastPrecededBy.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA958478 + 4 * byte_1BB887E60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA958498 + 4 * byte_1BB887E65[v4]))();
}

_BYTE *sub_1BA958478(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA958498(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA9584A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA9584A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA9584B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA9584B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterLastPrecededBy.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys;
}

unint64_t sub_1BA9584D8()
{
  unint64_t result;

  result = qword_1EF2AB3A0;
  if (!qword_1EF2AB3A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887FE8, &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB3A0);
  }
  return result;
}

unint64_t sub_1BA958520()
{
  unint64_t result;

  result = qword_1EF2AB3A8;
  if (!qword_1EF2AB3A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887F58, &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB3A8);
  }
  return result;
}

unint64_t sub_1BA958568()
{
  unint64_t result;

  result = qword_1EF2AB3B0;
  if (!qword_1EF2AB3B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB887F80, &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB3B0);
  }
  return result;
}

uint64_t FormatVideoPlayerOverlayData.logoImage.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

double FormatVideoPlayerOverlayData.logoHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t FormatVideoPlayerOverlayData.logoStyle.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerOverlayData.logoResizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_retain();
}

uint64_t FormatVideoPlayerOverlayData.showDuration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FormatVideoPlayerOverlayData.duration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for FormatVideoPlayerOverlayData()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatVideoPlayerOverlayData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerOverlayData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerOverlayData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoPlayerOverlayData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerOverlayData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerOverlayData()
{
  return &type metadata for FormatVideoPlayerOverlayData;
}

uint64_t sub_1BA95889C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  sub_1BA95964C(0, &qword_1EF2AB3E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA95922C();
  sub_1BB8746C8();
  LOBYTE(v12) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v12 = *(_OWORD *)(v3 + 16);
    v11[15] = 1;
    sub_1BA92B43C();
    sub_1BB8741AC();
    LOBYTE(v12) = 2;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA9589F8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1635017060;
  if (*v0 != 1)
    v1 = 0x54746E65746E6F63;
  if (*v0)
    return v1;
  else
    return 0x656D616E656C6966;
}

uint64_t sub_1BA958A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA959270(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA958A78(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BA958A84()
{
  sub_1BA95922C();
  return sub_1BB874710();
}

uint64_t sub_1BA958AAC()
{
  sub_1BA95922C();
  return sub_1BB87471C();
}

double sub_1BA958AD4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BA9593CC(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BA958B14(_QWORD *a1)
{
  return sub_1BA95889C(a1);
}

uint64_t sub_1BA958B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v51 = a2;
  v38 = a3;
  v40 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1E0C80A78](v40);
  v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - v6;
  v8 = sub_1BB86EB84();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86BD10();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1BB86BCE0();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  MEMORY[0x1E0C80A78](v13);
  v49 = 0;
  v50 = 0xE000000000000000;
  sub_1BB873CB4();
  v44 = a1;
  FormatFile.identifier.getter();
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  v49 = v16;
  v50 = v18;
  sub_1BB872AFC(v19);
  v20 = v50;
  v37 = v49;
  sub_1BB86BD4C();
  swift_allocObject();
  v42 = v20;
  swift_bridgeObjectRetain();
  sub_1BB86BD40();
  sub_1BA4B07F0(0, &qword_1EF2AB3B8, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  sub_1BB86BCBC();
  v49 = v21;
  sub_1BA4A2870(&qword_1EF2AB3C0, v14, MEMORY[0x1E0CAE0F8]);
  sub_1BA4B07F0(0, &qword_1EF2AB3C8, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA959058();
  v22 = v45;
  v23 = v46;
  v24 = v51;
  sub_1BB873BC4();
  sub_1BB86BCEC();
  *v12 = 0x7974696E69666E69;
  v12[1] = 0xE800000000000000;
  v12[2] = 0x74696E69666E692DLL;
  v12[3] = 0xE900000000000079;
  v12[4] = 7233902;
  v12[5] = 0xE300000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v47 + 104))(v12, *MEMORY[0x1E0CAE180], v48);
  sub_1BB86BD1C();
  sub_1BA6BF98C(v24, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v7, 1, v23) == 1)
  {
    sub_1BA6BF694((uint64_t)v7);
  }
  else
  {
    v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v39, v7, v23);
    v26 = (uint64_t)v41;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v41, v25, v23);
    swift_storeEnumTagMultiPayload();
    v27 = (void (*)(uint64_t *, _QWORD))sub_1BB86BD34();
    Dictionary<>.seedFormatCodingVersion(mode:)(v26);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersioningMode);
    v27(&v49, 0);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v23);
  }
  v28 = v43;
  v29 = v44;
  v30 = v42;
  type metadata accessor for FormatFile();
  sub_1BA4A2870(&qword_1EF2AB3D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
  v31 = sub_1BB86BD28();
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA6BF694(v24);
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v34 = v31;
    v35 = v32;
    swift_release();
    sub_1BA6BF694(v24);
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    swift_bridgeObjectRetain();
    sub_1BA69D44C(v34, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    sub_1BA69D314(v34, v35);
    result = swift_bridgeObjectRelease();
    v36 = v38;
    *v38 = v37;
    v36[1] = v30;
    v36[2] = v34;
    v36[3] = v35;
    v36[4] = 0xD000000000000010;
    v36[5] = 0x80000001BB9646A0;
  }
  return result;
}

unint64_t sub_1BA959058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB3D0;
  if (!qword_1EF2AB3D0)
  {
    sub_1BA4B07F0(255, &qword_1EF2AB3C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB3D0);
  }
  return result;
}

uint64_t destroy for DebugFormatUploadFile(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BA69D314(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DebugFormatUploadFile(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_1BA69D44C(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugFormatUploadFile(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  sub_1BA69D44C(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1BA69D314(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DebugFormatUploadFile(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1BA69D314(v5, v6);
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatUploadFile()
{
  return &type metadata for DebugFormatUploadFile;
}

unint64_t sub_1BA95922C()
{
  unint64_t result;

  result = qword_1EF2AB3E8;
  if (!qword_1EF2AB3E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8881DC, &type metadata for DebugFormatUploadFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB3E8);
  }
  return result;
}

uint64_t sub_1BA959270(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BA9593CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;

  sub_1BA95964C(0, &qword_1EF2AB3F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA95922C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v25) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v24 = v10;
  v27 = 1;
  sub_1BA92B850();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v13 = v25;
  LOBYTE(v25) = 2;
  v22 = v26;
  v23 = v13;
  sub_1BA69D44C(v13, v26);
  v14 = sub_1BB874098();
  v16 = v15;
  v17 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  v19 = v22;
  v18 = v23;
  sub_1BA69D44C(v23, v22);
  swift_bridgeObjectRetain();
  sub_1BA69D314(v18, v19);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_1BA69D314(v18, v19);
  result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v12;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v17;
  a2[5] = v16;
  return result;
}

void sub_1BA95964C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA95922C();
    v7 = a3(a1, &type metadata for DebugFormatUploadFile.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadFile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA9596F4 + 4 * byte_1BB8880A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA959728 + 4 * asc_1BB8880A0[v4]))();
}

uint64_t sub_1BA959728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA959730(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA959738);
  return result;
}

uint64_t sub_1BA959744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA95974CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA959750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA959758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadFile.CodingKeys()
{
  return &type metadata for DebugFormatUploadFile.CodingKeys;
}

unint64_t sub_1BA959778()
{
  unint64_t result;

  result = qword_1EF2AB3F8;
  if (!qword_1EF2AB3F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8881B4, &type metadata for DebugFormatUploadFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB3F8);
  }
  return result;
}

unint64_t sub_1BA9597C0()
{
  unint64_t result;

  result = qword_1EF2AB400;
  if (!qword_1EF2AB400)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888124, &type metadata for DebugFormatUploadFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB400);
  }
  return result;
}

unint64_t sub_1BA959808()
{
  unint64_t result;

  result = qword_1EF2AB408;
  if (!qword_1EF2AB408)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88814C, &type metadata for DebugFormatUploadFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB408);
  }
  return result;
}

uint64_t sub_1BA95984C()
{
  uint64_t v0;

  sub_1BA95992C(v0 + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA95987C()
{
  return type metadata accessor for FormatDataManager();
}

uint64_t type metadata accessor for FormatDataManager()
{
  uint64_t result;

  result = qword_1ED3A5B80;
  if (!qword_1ED3A5B80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA9598C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatPluginData();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA95992C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id HeadlineFontBook.titleFont.getter()
{
  id *v0;

  return *v0;
}

id HeadlineFontBook.excerptFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id HeadlineFontBook.accessoryFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id HeadlineFontBook.publisherFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id HeadlineFontBook.adBadgeFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void __swiftcall HeadlineFontBook.init(titleFont:excerptFont:accessoryFont:publisherFont:adBadgeFont:)(NewsFeed::HeadlineFontBook *__return_ptr retstr, UIFont titleFont, UIFont excerptFont, UIFont accessoryFont, UIFont publisherFont, UIFont adBadgeFont)
{
  retstr->titleFont = titleFont;
  retstr->excerptFont = excerptFont;
  retstr->accessoryFont = accessoryFont;
  retstr->publisherFont = publisherFont;
  retstr->adBadgeFont = adBadgeFont;
}

void destroy for HeadlineFontBook(id *a1)
{

}

_QWORD *initializeWithCopy for HeadlineFontBook(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  a1[4] = v7;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return a1;
}

uint64_t assignWithCopy for HeadlineFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  return a1;
}

uint64_t assignWithTake for HeadlineFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for HeadlineFontBook()
{
  return &type metadata for HeadlineFontBook;
}

id sub_1BA959B40(_QWORD *a1)
{
  char *v1;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing] = *a1;
  swift_release();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t sub_1BA959B74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  sub_1BA65E330();
  v1 = swift_allocObject();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer);
  *(_OWORD *)(v1 + 16) = xmmword_1BB8882C0;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer);
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer);
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer);
  *(_QWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 72) = v7;
  v15 = v1;
  sub_1BB872DCC();
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  return v15;
}

unint64_t sub_1BA959C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  unint64_t result;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  objc_super v51;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing] = 0;
  v8 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer;
  v9 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v10 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v9, sel_init);
  v11 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v12 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v13 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer;
  *(_QWORD *)&v10[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v14 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer;
  *(_QWORD *)&v10[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v15 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer;
  *(_QWORD *)&v10[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v16 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer;
  *(_QWORD *)&v10[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);

  if (a3)
  {
    v17 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v51.receiver = v10;
  v51.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v51, sel_initWithStyle_reuseIdentifier_, a1, v17);

  v19 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer;
  v20 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer];
  v21 = v18;
  objc_msgSend(v20, sel_setLineWidth_, 1.0);
  sub_1BA65E330();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB8856E0;
  sub_1BA78DE28();
  v23 = v20;
  *(_QWORD *)(v22 + 32) = sub_1BB8738A0();
  sub_1BB872DCC();
  v24 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setLineDashPattern_, v24);

  v25 = *(void **)&v18[v19];
  v26 = (void *)objc_opt_self();
  v27 = v25;
  v28 = objc_msgSend(v26, sel_lightGrayColor);
  v29 = objc_msgSend(v28, sel_CGColor);

  objc_msgSend(v27, sel_setStrokeColor_, v29);
  v30 = *(id *)&v18[v19];
  v31 = objc_msgSend(v26, sel_clearColor);
  v32 = objc_msgSend(v31, sel_CGColor);

  objc_msgSend(v30, sel_setFillColor_, v32);
  v33 = objc_msgSend(v21, sel_contentView);
  v34 = objc_msgSend(v33, sel_layer);

  objc_msgSend(v34, sel_addSublayer_, *(_QWORD *)&v18[v19]);
  v50 = v21;
  result = sub_1BA959B74();
  v36 = result;
  if (!(result >> 62))
  {
    v37 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v37)
      goto LABEL_6;
LABEL_13:

    swift_bridgeObjectRelease();
    return (unint64_t)v50;
  }
  result = sub_1BB873F30();
  v37 = result;
  if (!result)
    goto LABEL_13;
LABEL_6:
  if (v37 >= 1)
  {
    v38 = 0;
    v39 = *MEMORY[0x1E0CD3030];
    v40 = *MEMORY[0x1E0CD3010];
    do
    {
      if ((v36 & 0xC000000000000001) != 0)
        v41 = (id)MEMORY[0x1BCCE4630](v38, v36);
      else
        v41 = *(id *)(v36 + 8 * v38 + 32);
      v42 = v41;
      ++v38;
      objc_msgSend(v41, sel_setLineWidth_, 2.0);
      v43 = objc_msgSend(v26, sel_clearColor);
      v44 = objc_msgSend(v43, sel_CGColor);

      objc_msgSend(v42, sel_setFillColor_, v44);
      objc_msgSend(v42, sel_setLineJoin_, v39);
      objc_msgSend(v42, sel_setLineCap_, v40);
      v45 = objc_msgSend(v26, sel_systemBlueColor);
      v46 = objc_msgSend(v45, sel_colorWithAlphaComponent_, 0.15);

      v47 = objc_msgSend(v46, sel_CGColor);
      objc_msgSend(v42, sel_setStrokeColor_, v47);

      v48 = objc_msgSend(v50, sel_contentView);
      v49 = objc_msgSend(v48, sel_layer);

      objc_msgSend(v49, sel_addSublayer_, v42);
    }
    while (v37 != v38);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1BA95A220()
{
  char *v0;
  CGFloat v1;
  void *v2;
  CGFloat v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  CGFloat MinY;
  id v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  CGFloat Height;
  id v45;
  id v46;
  CGFloat v47;
  void *v48;
  double v49;
  double v50;
  double v51;
  CGFloat v52;
  id v53;
  id v54;
  void *v55;
  double v56;
  double v57;
  double v58;
  CGFloat v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  objc_super v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;

  v76.receiver = v0;
  v76.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v76, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  v1 = CGRectGetWidth(v77) * 0.5;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer];
  objc_msgSend(v0, sel_bounds);
  v3 = CGRectGetWidth(v78) * 0.5 - v1 * 0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_, v3, CGRectGetHeight(v79) * 0.5 + -40.0, v1, 80.0);
  objc_msgSend(v2, sel_bounds);
  v8 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v4, v5, v6, v7);
  v9 = objc_msgSend(v8, sel_CGPath);

  objc_msgSend(v2, sel_setPath_, v9);
  v10 = sub_1BA959B74();
  if (v10 >> 62)
  {
    v11 = sub_1BB873F30();
    if (!v11)
      goto LABEL_10;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      goto LABEL_10;
  }
  v12 = objc_opt_self();
  if (v11 < 1)
  {
    __break(1u);
    JUMPOUT(0x1BA95B5C8);
  }
  v13 = (void *)v12;
  v14 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x1BCCE4630](v14, v10);
    else
      v15 = *(id *)(v10 + 8 * v14 + 32);
    v16 = v15;
    ++v14;
    v17 = objc_msgSend(v13, sel_systemBlueColor);
    v18 = objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.15);

    v19 = objc_msgSend(v18, sel_CGColor);
    objc_msgSend(v16, sel_setStrokeColor_, v19);

  }
  while (v11 != v14);
LABEL_10:
  swift_bridgeObjectRelease();
  v20 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer];
  objc_msgSend(v0, sel_bounds);
  v21 = CGRectGetWidth(v80) * 0.5;
  objc_msgSend(v2, sel_frame);
  v22 = CGRectGetMinY(v81) + 8.0;
  objc_msgSend(v0, sel_bounds);
  v23 = CGRectGetWidth(v82) * 0.5;
  objc_msgSend(v2, sel_frame);
  v24 = CGRectGetMaxY(v83) + -8.0;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v25, sel_moveToPoint_, v21, v22);
  objc_msgSend(v25, sel_addLineToPoint_, v23, v24);
  sub_1BAA50618(v25, v21, v22, v23, v24);
  sub_1BAA50618(v25, v23, v24, v21, v22);
  v26 = objc_msgSend(v25, sel_CGPath);

  objc_msgSend(v20, sel_setPath_, v26);
  v27 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer];
  objc_msgSend(v2, sel_frame);
  v28 = CGRectGetMinX(v84) + 8.0;
  objc_msgSend(v0, sel_bounds);
  v29 = CGRectGetHeight(v85) * 0.5;
  objc_msgSend(v2, sel_frame);
  v30 = CGRectGetMaxX(v86) + -8.0;
  objc_msgSend(v0, sel_bounds);
  v31 = CGRectGetHeight(v87) * 0.5;
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v32, sel_moveToPoint_, v28, v29);
  objc_msgSend(v32, sel_addLineToPoint_, v30, v31);
  sub_1BAA50618(v32, v28, v29, v30, v31);
  sub_1BAA50618(v32, v30, v31, v28, v29);
  v33 = objc_msgSend(v32, sel_CGPath);

  objc_msgSend(v27, sel_setPath_, v33);
  v34 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer];
  objc_msgSend(v0, sel_bounds);
  v35 = CGRectGetWidth(v88) * 0.5;
  objc_msgSend(v0, sel_bounds);
  v36 = CGRectGetWidth(v89) * 0.5;
  objc_msgSend(v2, sel_frame);
  MinY = CGRectGetMinY(v90);
  v38 = sub_1BAA50720(v35, 8.0, v36, MinY + -8.0);
  v39 = objc_msgSend(v38, sel_CGPath);

  objc_msgSend(v34, (SEL)&selRef_halfLifeCoefficient, v39);
  v40 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer];
  objc_msgSend(v0, sel_bounds);
  v41 = CGRectGetWidth(v91) * 0.5;
  objc_msgSend(v2, sel_frame);
  v42 = CGRectGetMaxY(v92) + 8.0;
  objc_msgSend(v0, sel_bounds);
  v43 = CGRectGetWidth(v93) * 0.5;
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v94);
  v45 = sub_1BAA50720(v41, v42, v43, Height + -8.0);
  v46 = objc_msgSend(v45, (SEL)&selRef_ne_color + 5);

  objc_msgSend(v40, (SEL)&selRef_halfLifeCoefficient, v46);
  objc_msgSend(v2, sel_frame);
  v47 = CGRectGetMinY(v95) + -16.0;
  v48 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer];
  objc_msgSend(v2, sel_frame);
  v49 = CGRectGetMinX(v96) + -8.0;
  objc_msgSend(v0, sel_bounds);
  v50 = CGRectGetHeight(v97) * 0.5;
  objc_msgSend(v2, sel_frame);
  v51 = CGRectGetMinX(v98) + -8.0 - v47;
  objc_msgSend(v0, sel_bounds);
  v52 = CGRectGetHeight(v99);
  v53 = sub_1BAA50720(v49, v50, v51, v52 * 0.5);
  v54 = objc_msgSend(v53, (SEL)&selRef_ne_color + 5);

  objc_msgSend(v48, (SEL)&selRef_halfLifeCoefficient, v54);
  v55 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer];
  objc_msgSend(v2, sel_frame);
  v56 = CGRectGetMaxX(v100) + 8.0;
  objc_msgSend(v0, sel_bounds);
  v57 = CGRectGetHeight(v101) * 0.5;
  objc_msgSend(v2, sel_frame);
  v58 = v47 + CGRectGetMaxX(v102) + 8.0;
  objc_msgSend(v0, sel_bounds);
  v59 = CGRectGetHeight(v103);
  v60 = sub_1BAA50720(v56, v57, v58, v59 * 0.5);
  v61 = objc_msgSend(v60, (SEL)&selRef_ne_color + 5);

  objc_msgSend(v55, (SEL)&selRef_halfLifeCoefficient, v61);
  v62 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing];
  if (v62)
  {
    v63 = (uint64_t *)(v62 + 16);
    swift_beginAccess();
    v64 = *(_QWORD *)(v62 + 16);
    if (*(_QWORD *)(v64 + 16))
    {
      sub_1BB8745CC();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v65 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v64 + 32));
      if (((*(_QWORD *)(v64 + 56 + ((v65 >> 3) & 0xFFFFFFFFFFFFF8)) >> v65) & 1) != 0)
        __asm { BR              X9 }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v66 = *v63;
    if (*(_QWORD *)(*v63 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v67 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v66 + 32));
      if (((*(_QWORD *)(v66 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) != 0)
        __asm { BR              X9 }
      swift_bridgeObjectRelease();
    }
    v68 = *v63;
    if (*(_QWORD *)(*v63 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v69 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v68 + 32));
      if (((*(_QWORD *)(v68 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0)
        __asm { BR              X9 }
      swift_bridgeObjectRelease();
    }
    v70 = *v63;
    if (*(_QWORD *)(*v63 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v71 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v70 + 32));
      if (((*(_QWORD *)(v70 + 56 + ((v71 >> 3) & 0xFFFFFFFFFFFFF8)) >> v71) & 1) != 0)
        __asm { BR              X9 }
      swift_bridgeObjectRelease();
    }
    v72 = *v63;
    if (*(_QWORD *)(*v63 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v73 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v72 + 32));
      if (((*(_QWORD *)(v72 + 56 + ((v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) != 0)
        __asm { BR              X9 }
      swift_bridgeObjectRelease();
    }
    v74 = *v63;
    if (*(_QWORD *)(*v63 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v75 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v74 + 32));
      if (((*(_QWORD *)(v74 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFF8)) >> v75) & 1) != 0)
        __asm { BR              X9 }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t type metadata accessor for DebugFormatInspectorResizingCell()
{
  return objc_opt_self();
}

void sub_1BA95B744()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing] = 0;
  v1 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v2 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v3 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v4 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v5 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v6 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v7 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BA95B880(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Image);
}

uint64_t sub_1BA95B88C(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Float);
}

uint64_t sub_1BA95B898(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Text);
}

uint64_t sub_1BA95B8A4(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  __int128 *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_1BB874644();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v51[0] + 1) = a2;
  LOBYTE(v50) = a1;
  sub_1BB874614();
  sub_1BB87462C();
  v14 = sub_1BB874620();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v31 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v47);
  swift_release();
  if (!v49)
  {
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v30 = &v47;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v30, v29);
    goto LABEL_11;
  }
  v16 = v47;
  v50 = v47;
  sub_1BA76EAE0(&v48, v51);
  v47 = v16;
  sub_1BA747A10((uint64_t)v51, (uint64_t)&v48);
  if (!*((_QWORD *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v30 = &v50;
    goto LABEL_10;
  }
  v40 = v51;
  swift_bridgeObjectRetain_n();
  v17 = sub_1BA689E44(v16, *((unint64_t *)&v16 + 1));
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v43 = v17;
    v44 = v19;
    sub_1BA7114A0();
    v39 = sub_1BB873ABC();
    v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v21 = sub_1BA9C0430(1uLL, v16, *((unint64_t *)&v16 + 1));
    v23 = v22;
    v37 = v24;
    v26 = v25;
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1BCCE334C](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    v43 = v39;
    v44 = v38;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v43;
    v28 = v44;
  }
  else
  {
    v28 = v16 >> 64;
    v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  v47 = v16;
  sub_1BA747A10((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v41, (uint64_t)&v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v27;
    *(_QWORD *)(v33 + 40) = v28;
    v34 = v45;
    v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(_QWORD *)&v47 = v33;
    sub_1BA6E9BD8(v36);
    v31 = v47;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1BA967CE4((uint64_t)v41);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v31 + 32) = v27;
    *(_QWORD *)(v31 + 40) = v28;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v31;
}

uint64_t sub_1BA95BD70(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Bool);
}

uint64_t sub_1BA95BD7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  __int128 *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  _OWORD v56[2];
  uint64_t v57;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = sub_1BB874644();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v56[0] + 1) = &type metadata for FormatLiveActivityBinding.Command;
  v18 = swift_allocObject();
  *(_QWORD *)&v55 = v18;
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_BYTE *)(v18 + 40) = a4 & 1;
  sub_1BA60DF54(a1, a2, a3, a4 & 1);
  sub_1BB874614();
  sub_1BB87462C();
  v19 = sub_1BB874620();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v36 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v52);
  swift_release();
  if (!v54)
  {
    v34 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v35 = &v52;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v35, v34);
    goto LABEL_11;
  }
  v21 = v52;
  v55 = v52;
  sub_1BA76EAE0(&v53, v56);
  v52 = v21;
  sub_1BA747A10((uint64_t)v56, (uint64_t)&v53);
  if (!*((_QWORD *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    v34 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v35 = &v55;
    goto LABEL_10;
  }
  v45 = v56;
  swift_bridgeObjectRetain_n();
  v22 = sub_1BA689E44(v21, *((unint64_t *)&v21 + 1));
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    v48 = v22;
    v49 = v24;
    sub_1BA7114A0();
    v44 = sub_1BB873ABC();
    v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v26 = sub_1BA9C0430(1uLL, v21, *((unint64_t *)&v21 + 1));
    v28 = v27;
    v42 = v29;
    v31 = v30;
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x1BCCE334C](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    v48 = v44;
    v49 = v43;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v48;
    v33 = v49;
  }
  else
  {
    v33 = v21 >> 64;
    v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  v52 = v21;
  sub_1BA747A10((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v46, (uint64_t)&v48);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v38 + 32) = v32;
    *(_QWORD *)(v38 + 40) = v33;
    v39 = v50;
    v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(_QWORD *)&v52 = v38;
    sub_1BA6E9BD8(v41);
    v36 = v52;
    sub_1BA4A2E80((uint64_t)&v55, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1BA967CE4((uint64_t)v46);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v36 + 32) = v32;
    *(_QWORD *)(v36 + 40) = v33;
    sub_1BA4A2E80((uint64_t)&v55, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v36;
}

uint64_t sub_1BA95C28C()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatSportsEventBinding.DateTime);
}

uint64_t sub_1BA95C298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA95E7D4(a1, a2, a3, a4, (uint64_t)&type metadata for FormatSportsEventBinding.Command, (uint64_t)&unk_1E727E018, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char)))sub_1BA856F00);
}

uint64_t sub_1BA95C2B4()
{
  return sub_1BA95ED44((uint64_t)&type metadata for FormatSportsEventBinding.Image, (uint64_t)&unk_1E727DFA0, (void (*)(uint64_t, _QWORD))sub_1BA967F98, (void (*)(uint64_t))sub_1BA967FD4);
}

uint64_t sub_1BA95C2D8(uint64_t a1, char a2)
{
  return sub_1BA95C2F0(a1, a2, (uint64_t)&type metadata for FormatSportsEventBinding.Color);
}

uint64_t sub_1BA95C2E4(uint64_t a1, char a2)
{
  return sub_1BA95C2F0(a1, a2, (uint64_t)&type metadata for FormatSportsEventBinding.Text);
}

uint64_t sub_1BA95C2F0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  __int128 *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  _OWORD v53[2];
  uint64_t v54;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_1BB874644();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v53[0] + 1) = a3;
  *(_QWORD *)&v52 = a1;
  BYTE8(v52) = a2;
  sub_1BB874614();
  sub_1BB87462C();
  v16 = sub_1BB874620();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v8, v16) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v33 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v49);
  swift_release();
  if (!v51)
  {
    v31 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v32 = &v49;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v32, v31);
    goto LABEL_11;
  }
  v18 = v49;
  v52 = v49;
  sub_1BA76EAE0(&v50, v53);
  v49 = v18;
  sub_1BA747A10((uint64_t)v53, (uint64_t)&v50);
  if (!*((_QWORD *)&v18 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    v31 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v32 = &v52;
    goto LABEL_10;
  }
  v42 = v53;
  swift_bridgeObjectRetain_n();
  v19 = sub_1BA689E44(v18, *((unint64_t *)&v18 + 1));
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v45 = v19;
    v46 = v21;
    sub_1BA7114A0();
    v41 = sub_1BB873ABC();
    v40 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v23 = sub_1BA9C0430(1uLL, v18, *((unint64_t *)&v18 + 1));
    v25 = v24;
    v39 = v26;
    v28 = v27;
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1BCCE334C](v23, v25, v39, v28);
    swift_bridgeObjectRelease();
    v45 = v41;
    v46 = v40;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v45;
    v30 = v46;
  }
  else
  {
    v30 = v18 >> 64;
    v29 = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  v49 = v18;
  sub_1BA747A10((uint64_t)v42, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v43, (uint64_t)&v45);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v35 + 32) = v29;
    *(_QWORD *)(v35 + 40) = v30;
    v36 = v47;
    v37 = v48;
    __swift_project_boxed_opaque_existential_1(&v45, v47);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    *(_QWORD *)&v49 = v35;
    sub_1BA6E9BD8(v38);
    v33 = v49;
    sub_1BA4A2E80((uint64_t)&v52, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  else
  {
    v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1BA967CE4((uint64_t)v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v29;
    *(_QWORD *)(v33 + 40) = v30;
    sub_1BA4A2E80((uint64_t)&v52, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v33;
}

uint64_t sub_1BA95C7C4(uint64_t a1, char a2)
{
  return sub_1BA95C2F0(a1, a2, (uint64_t)&type metadata for FormatSportsEventBinding.Bool);
}

uint64_t sub_1BA95C7D0()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatPuzzleTypeBinding.Image);
}

uint64_t sub_1BA95C7DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  __int128 *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  v8 = sub_1BB874644();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v49[0] + 1) = a1;
  sub_1BB874614();
  sub_1BB87462C();
  v12 = sub_1BB874620();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v4, v12) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v29 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v45);
  swift_release();
  if (!v47)
  {
    v27 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v28 = &v45;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v28, v27);
    goto LABEL_11;
  }
  v14 = v45;
  v48 = v45;
  sub_1BA76EAE0(&v46, v49);
  v45 = v14;
  sub_1BA747A10((uint64_t)v49, (uint64_t)&v46);
  if (!*((_QWORD *)&v14 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    v27 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v28 = &v48;
    goto LABEL_10;
  }
  v38 = v49;
  swift_bridgeObjectRetain_n();
  v15 = sub_1BA689E44(v14, *((unint64_t *)&v14 + 1));
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v41 = v15;
    v42 = v17;
    sub_1BA7114A0();
    v37 = sub_1BB873ABC();
    v36 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v19 = sub_1BA9C0430(1uLL, v14, *((unint64_t *)&v14 + 1));
    v21 = v20;
    v35 = v22;
    v24 = v23;
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1BCCE334C](v19, v21, v35, v24);
    swift_bridgeObjectRelease();
    v41 = v37;
    v42 = v36;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v41;
    v26 = v42;
  }
  else
  {
    v26 = v14 >> 64;
    v25 = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  v45 = v14;
  sub_1BA747A10((uint64_t)v38, (uint64_t)&v46);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v39, (uint64_t)&v41);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v31 + 32) = v25;
    *(_QWORD *)(v31 + 40) = v26;
    v32 = v43;
    v33 = v44;
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    *(_QWORD *)&v45 = v31;
    sub_1BA6E9BD8(v34);
    v29 = v45;
    sub_1BA4A2E80((uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  }
  else
  {
    v40 = 0;
    memset(v39, 0, sizeof(v39));
    sub_1BA967CE4((uint64_t)v39);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v29 + 32) = v25;
    *(_QWORD *)(v29 + 40) = v26;
    sub_1BA4A2E80((uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v29;
}

uint64_t sub_1BA95CCA0(uint64_t a1, char a2)
{
  return sub_1BA95C2F0(a1, a2, (uint64_t)&type metadata for FormatPuzzleTypeBinding.Color);
}

uint64_t sub_1BA95CCAC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  __int128 *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_1BB874644();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v51[0] + 1) = &type metadata for FormatPuzzleTypeBinding.Text;
  *(_QWORD *)&v50 = a1;
  BYTE8(v50) = a2 & 1;
  sub_1BB874614();
  sub_1BB87462C();
  v14 = sub_1BB874620();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v31 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v47);
  swift_release();
  if (!v49)
  {
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v30 = &v47;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v30, v29);
    goto LABEL_11;
  }
  v16 = v47;
  v50 = v47;
  sub_1BA76EAE0(&v48, v51);
  v47 = v16;
  sub_1BA747A10((uint64_t)v51, (uint64_t)&v48);
  if (!*((_QWORD *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v30 = &v50;
    goto LABEL_10;
  }
  v40 = v51;
  swift_bridgeObjectRetain_n();
  v17 = sub_1BA689E44(v16, *((unint64_t *)&v16 + 1));
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v43 = v17;
    v44 = v19;
    sub_1BA7114A0();
    v39 = sub_1BB873ABC();
    v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v21 = sub_1BA9C0430(1uLL, v16, *((unint64_t *)&v16 + 1));
    v23 = v22;
    v37 = v24;
    v26 = v25;
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1BCCE334C](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    v43 = v39;
    v44 = v38;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v43;
    v28 = v44;
  }
  else
  {
    v28 = v16 >> 64;
    v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  v47 = v16;
  sub_1BA747A10((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v41, (uint64_t)&v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v27;
    *(_QWORD *)(v33 + 40) = v28;
    v34 = v45;
    v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(_QWORD *)&v47 = v33;
    sub_1BA6E9BD8(v36);
    v31 = v47;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1BA967CE4((uint64_t)v41);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v31 + 32) = v27;
    *(_QWORD *)(v31 + 40) = v28;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v31;
}

uint64_t sub_1BA95D188(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatCustomItemBinding.Text);
}

uint64_t sub_1BA95D194(char a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  __int128 *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;

  v3 = a1 & 1;
  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_1BB874644();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v51[0] + 1) = a2;
  LOBYTE(v50) = v3;
  sub_1BB874614();
  sub_1BB87462C();
  v14 = sub_1BB874620();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v31 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v47);
  swift_release();
  if (!v49)
  {
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v30 = &v47;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v30, v29);
    goto LABEL_11;
  }
  v16 = v47;
  v50 = v47;
  sub_1BA76EAE0(&v48, v51);
  v47 = v16;
  sub_1BA747A10((uint64_t)v51, (uint64_t)&v48);
  if (!*((_QWORD *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v30 = &v50;
    goto LABEL_10;
  }
  v40 = v51;
  swift_bridgeObjectRetain_n();
  v17 = sub_1BA689E44(v16, *((unint64_t *)&v16 + 1));
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v43 = v17;
    v44 = v19;
    sub_1BA7114A0();
    v39 = sub_1BB873ABC();
    v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v21 = sub_1BA9C0430(1uLL, v16, *((unint64_t *)&v16 + 1));
    v23 = v22;
    v37 = v24;
    v26 = v25;
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1BCCE334C](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    v43 = v39;
    v44 = v38;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v43;
    v28 = v44;
  }
  else
  {
    v28 = v16 >> 64;
    v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  v47 = v16;
  sub_1BA747A10((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v41, (uint64_t)&v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v27;
    *(_QWORD *)(v33 + 40) = v28;
    v34 = v45;
    v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(_QWORD *)&v47 = v33;
    sub_1BA6E9BD8(v36);
    v31 = v47;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1BA967CE4((uint64_t)v41);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v31 + 32) = v27;
    *(_QWORD *)(v31 + 40) = v28;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v31;
}

uint64_t sub_1BA95D660()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatCustomItemBinding.URL);
}

uint64_t sub_1BA95D66C(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatAudioTrackBinding.Command);
}

uint64_t sub_1BA95D678(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatAudioTrackBinding.Text);
}

uint64_t sub_1BA95D684()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatWebEmbedBinding.Action);
}

uint64_t sub_1BA95D690(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatWebEmbedBinding.Text);
}

uint64_t sub_1BA95D69C(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatWebEmbedBinding.Bool);
}

uint64_t sub_1BA95D6A8(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatWebEmbedBinding.URL);
}

uint64_t sub_1BA95D6B4(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Command);
}

uint64_t sub_1BA95D6C0(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Action);
}

uint64_t sub_1BA95D6CC(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Image);
}

uint64_t sub_1BA95D6D8(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Float);
}

uint64_t sub_1BA95D6E4(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Color);
}

uint64_t sub_1BA95D6F0()
{
  return sub_1BA95DD40((uint64_t)&type metadata for FormatHeadlineBinding.Text, (uint64_t)&unk_1E727DFF0, (void (*)(uint64_t, _QWORD))sub_1BA968048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7143C8);
}

uint64_t sub_1BA95D714(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return sub_1BA9615D0(a1, a2, a3, (uint64_t)&type metadata for FormatHeadlineBinding.Font);
}

uint64_t sub_1BA95D720(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Bool);
}

uint64_t sub_1BA95D72C(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatHeadlineBinding.URL);
}

uint64_t sub_1BA95D738()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatHeadlineBinding.ActivityItemsConfiguration);
}

uint64_t sub_1BA95D744(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatHeadlineBinding.SharedMenuItem);
}

uint64_t sub_1BA95D750()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatHeadlineBinding.LayeredMedia);
}

uint64_t sub_1BA95D75C()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatHeadlineBinding.SharedItem);
}

uint64_t sub_1BA95D768()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatWeatherBinding.Command);
}

uint64_t sub_1BA95D774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA95D79C(a1, a2, a3, (uint64_t)&type metadata for FormatWeatherBinding.Image, (uint64_t)sub_1BA740408);
}

uint64_t sub_1BA95D788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA95D79C(a1, a2, a3, (uint64_t)&type metadata for FormatWeatherBinding.Text, (uint64_t)sub_1BA968180);
}

uint64_t sub_1BA95D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v42)(_QWORD);
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  __int128 v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  _OWORD v62[2];

  v51 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))a5;
  v9 = BYTE1(a3);
  v10 = a3 >> 8;
  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - v15;
  v17 = sub_1BB874644();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  *((_QWORD *)&v62[0] + 1) = a4;
  *(_QWORD *)&v61 = a1;
  *((_QWORD *)&v61 + 1) = a2;
  LOBYTE(v62[0]) = a3;
  BYTE1(v62[0]) = v10;
  v21 = v9;
  v22 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51(a1, a2, a3, v21, v19);
  sub_1BB874614();
  sub_1BB87462C();
  v23 = sub_1BB874620();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v16, 1, v23) == 1)
    goto LABEL_8;
  sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v13, v23) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
LABEL_9:
    v40 = MEMORY[0x1E0DEE9D8];
    goto LABEL_10;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v58);
  swift_release();
  if (!v60)
  {
    v42 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v43 = &v58;
LABEL_13:
    sub_1BA4A2E80((uint64_t)v43, v42);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    goto LABEL_9;
  }
  v25 = v58;
  v61 = v58;
  sub_1BA76EAE0(&v59, v62);
  v58 = v25;
  sub_1BA747A10((uint64_t)v62, (uint64_t)&v59);
  if (!*((_QWORD *)&v25 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
    v42 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v43 = &v61;
    goto LABEL_13;
  }
  v51 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))v62;
  swift_bridgeObjectRetain_n();
  v26 = sub_1BA689E44(v25, *((unint64_t *)&v25 + 1));
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v28)
  {
    v54 = v26;
    v55 = v28;
    sub_1BA7114A0();
    v49 = sub_1BB873ABC();
    v48 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v30 = sub_1BA9C0430(1uLL, v25, *((unint64_t *)&v25 + 1));
    v32 = v31;
    v50 = v22;
    v34 = v33;
    v36 = v35;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v30, v32, v34, v36);
    swift_bridgeObjectRelease();
    v54 = v49;
    v55 = v48;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v50;
    swift_bridgeObjectRelease();
    v38 = v54;
    v39 = v55;
  }
  else
  {
    v39 = v25 >> 64;
    v38 = v25;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
  v58 = v25;
  sub_1BA747A10((uint64_t)v51, (uint64_t)&v59);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v52, (uint64_t)&v54);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v44 + 32) = v38;
    *(_QWORD *)(v44 + 40) = v39;
    v45 = v56;
    v46 = v57;
    __swift_project_boxed_opaque_existential_1(&v54, v56);
    v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    *(_QWORD *)&v58 = v44;
    sub_1BA6E9BD8(v47);
    v40 = v58;
    sub_1BA4A2E80((uint64_t)&v61, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
  }
  else
  {
    v53 = 0;
    memset(v52, 0, sizeof(v52));
    sub_1BA967CE4((uint64_t)v52);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v40 + 32) = v38;
    *(_QWORD *)(v40 + 40) = v39;
    sub_1BA4A2E80((uint64_t)&v61, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
  }
LABEL_10:
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v40;
}

uint64_t sub_1BA95DCB4(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatWeatherBinding.Bool);
}

uint64_t sub_1BA95DCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA960134(a1, a2, a3, (uint64_t)&type metadata for FormatWeatherBinding.Temperature, (void (*)(uint64_t, uint64_t, uint64_t, double))sub_1BA9680B8);
}

uint64_t sub_1BA95DCD4(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPaywallBinding.Text);
}

uint64_t sub_1BA95DCE0(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPaywallBinding.Bool);
}

uint64_t sub_1BA95DCEC()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatPuzzleBinding.DateTime);
}

uint64_t sub_1BA95DCF8(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPuzzleBinding.Command);
}

uint64_t sub_1BA95DD04()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatPuzzleBinding.Action);
}

uint64_t sub_1BA95DD10(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatPuzzleBinding.Image);
}

uint64_t sub_1BA95DD1C()
{
  return sub_1BA95DD40((uint64_t)&type metadata for FormatPuzzleBinding.Text, (uint64_t)&unk_1E727E068, (void (*)(uint64_t, _QWORD))sub_1BA968134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA968170);
}

uint64_t sub_1BA95DD40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _QWORD), void (*a4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  __int128 *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  _OWORD v55[2];
  uint64_t v56;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - v12;
  v14 = sub_1BB874644();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v55[0] + 1) = a1;
  *(_QWORD *)&v54 = swift_allocObject();
  a3(v4, v54 + 16);
  sub_1BA6F7850(v4, a4);
  sub_1BB874614();
  sub_1BB87462C();
  v18 = sub_1BB874620();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v10, v18) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v35 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v51);
  swift_release();
  if (!v53)
  {
    v33 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v34 = &v51;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v34, v33);
    goto LABEL_11;
  }
  v20 = v51;
  v54 = v51;
  sub_1BA76EAE0(&v52, v55);
  v51 = v20;
  sub_1BA747A10((uint64_t)v55, (uint64_t)&v52);
  if (!*((_QWORD *)&v20 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
    v33 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v34 = &v54;
    goto LABEL_10;
  }
  v44 = v55;
  swift_bridgeObjectRetain_n();
  v21 = sub_1BA689E44(v20, *((unint64_t *)&v20 + 1));
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    v47 = v21;
    v48 = v23;
    sub_1BA7114A0();
    v43 = sub_1BB873ABC();
    v42 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v25 = sub_1BA9C0430(1uLL, v20, *((unint64_t *)&v20 + 1));
    v27 = v26;
    v41 = v28;
    v30 = v29;
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1BCCE334C](v25, v27, v41, v30);
    swift_bridgeObjectRelease();
    v47 = v43;
    v48 = v42;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v47;
    v32 = v48;
  }
  else
  {
    v32 = v20 >> 64;
    v31 = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  v51 = v20;
  sub_1BA747A10((uint64_t)v44, (uint64_t)&v52);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v45, (uint64_t)&v47);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v37 + 32) = v31;
    *(_QWORD *)(v37 + 40) = v32;
    v38 = v49;
    v39 = v50;
    __swift_project_boxed_opaque_existential_1(&v47, v49);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
    *(_QWORD *)&v51 = v37;
    sub_1BA6E9BD8(v40);
    v35 = v51;
    sub_1BA4A2E80((uint64_t)&v54, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  else
  {
    v46 = 0;
    memset(v45, 0, sizeof(v45));
    sub_1BA967CE4((uint64_t)v45);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v35 + 32) = v31;
    *(_QWORD *)(v35 + 40) = v32;
    sub_1BA4A2E80((uint64_t)&v54, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v35;
}

uint64_t sub_1BA95E23C()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatPuzzleBinding.Bool);
}

uint64_t sub_1BA95E248(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatIssueBinding.DateTime);
}

uint64_t sub_1BA95E254(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatIssueBinding.Command);
}

uint64_t sub_1BA95E260()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatIssueBinding.Action);
}

uint64_t sub_1BA95E26C(char a1)
{
  return sub_1BA95D194(a1, (uint64_t)&type metadata for FormatIssueBinding.Image);
}

uint64_t sub_1BA95E278(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatIssueBinding.Color);
}

uint64_t sub_1BA95E284(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatIssueBinding.Text);
}

uint64_t sub_1BA95E290(uint64_t a1, __int16 a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  __int128 *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  _OWORD v53[2];
  uint64_t v54;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_1BB874644();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v53[0] + 1) = &type metadata for FormatIssueBinding.Font;
  *(double *)&v52 = a3;
  *((_QWORD *)&v52 + 1) = a1;
  LOWORD(v53[0]) = a2;
  sub_1BB874614();
  sub_1BB87462C();
  v16 = sub_1BB874620();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v8, v16) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v33 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v49);
  swift_release();
  if (!v51)
  {
    v31 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v32 = &v49;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v32, v31);
    goto LABEL_11;
  }
  v18 = v49;
  v52 = v49;
  sub_1BA76EAE0(&v50, v53);
  v49 = v18;
  sub_1BA747A10((uint64_t)v53, (uint64_t)&v50);
  if (!*((_QWORD *)&v18 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    v31 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v32 = &v52;
    goto LABEL_10;
  }
  v42 = v53;
  swift_bridgeObjectRetain_n();
  v19 = sub_1BA689E44(v18, *((unint64_t *)&v18 + 1));
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v45 = v19;
    v46 = v21;
    sub_1BA7114A0();
    v41 = sub_1BB873ABC();
    v40 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v23 = sub_1BA9C0430(1uLL, v18, *((unint64_t *)&v18 + 1));
    v25 = v24;
    v39 = v26;
    v28 = v27;
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1BCCE334C](v23, v25, v39, v28);
    swift_bridgeObjectRelease();
    v45 = v41;
    v46 = v40;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v45;
    v30 = v46;
  }
  else
  {
    v30 = v18 >> 64;
    v29 = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  v49 = v18;
  sub_1BA747A10((uint64_t)v42, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v43, (uint64_t)&v45);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v35 + 32) = v29;
    *(_QWORD *)(v35 + 40) = v30;
    v36 = v47;
    v37 = v48;
    __swift_project_boxed_opaque_existential_1(&v45, v47);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    *(_QWORD *)&v49 = v35;
    sub_1BA6E9BD8(v38);
    v33 = v49;
    sub_1BA4A2E80((uint64_t)&v52, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  else
  {
    v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1BA967CE4((uint64_t)v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v29;
    *(_QWORD *)(v33 + 40) = v30;
    sub_1BA4A2E80((uint64_t)&v52, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v33;
}

uint64_t sub_1BA95E77C(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatIssueBinding.Bool);
}

uint64_t sub_1BA95E788()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatIssueBinding.ActivityItemsConfiguration);
}

uint64_t sub_1BA95E794()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatIssueBinding.LayeredMedia);
}

uint64_t sub_1BA95E7A0()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatIssueBinding.IssueCover);
}

uint64_t sub_1BA95E7AC(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatGroupBinding.DateTime);
}

uint64_t sub_1BA95E7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA95E7D4(a1, a2, a3, a4, (uint64_t)&type metadata for FormatGroupBinding.Command, (uint64_t)&unk_1E727E090, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char)))sub_1BA856ECC);
}

uint64_t sub_1BA95E7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t result, uint64_t a2, char a3)))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v43)(_QWORD);
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char));
  __int128 v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  _OWORD v63[2];

  v52 = a7;
  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v12);
  v51 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  v17 = sub_1BB874644();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v63[0] + 1) = a5;
  v21 = swift_allocObject();
  *(_QWORD *)&v62 = v21;
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  *(_QWORD *)(v21 + 32) = a3;
  *(_BYTE *)(v21 + 40) = a4;
  v52(a1, a2, a3, a4, sub_1BA856DD0);
  sub_1BB874614();
  sub_1BB87462C();
  v22 = sub_1BB874620();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v16, 1, v22) == 1)
    goto LABEL_8;
  v52 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char)))v17;
  v24 = (uint64_t)v51;
  sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v51, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v23 + 88))(v24, v22) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    v17 = (uint64_t)v52;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
LABEL_9:
    v41 = MEMORY[0x1E0DEE9D8];
    goto LABEL_10;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v59);
  swift_release();
  if (!v61)
  {
    v43 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v44 = &v59;
LABEL_13:
    sub_1BA4A2E80((uint64_t)v44, v43);
    (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char))))(v18 + 8))(v20, v52);
    goto LABEL_9;
  }
  v25 = v59;
  v62 = v59;
  sub_1BA76EAE0(&v60, v63);
  v59 = v25;
  sub_1BA747A10((uint64_t)v63, (uint64_t)&v60);
  if (!*((_QWORD *)&v25 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
    v43 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v44 = &v62;
    goto LABEL_13;
  }
  v50 = v20;
  v51 = v16;
  swift_bridgeObjectRetain_n();
  v26 = sub_1BA689E44(v25, *((unint64_t *)&v25 + 1));
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v28)
  {
    v55 = v26;
    v56 = v28;
    sub_1BA7114A0();
    v49 = sub_1BB873ABC();
    v30 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v31 = sub_1BA9C0430(1uLL, v25, *((unint64_t *)&v25 + 1));
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v31, v33, v35, v37);
    swift_bridgeObjectRelease();
    v55 = v49;
    v56 = v30;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v55;
    v40 = v56;
  }
  else
  {
    v40 = v25 >> 64;
    v39 = v25;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
  v59 = v25;
  sub_1BA747A10((uint64_t)v63, (uint64_t)&v60);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v53, (uint64_t)&v55);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v45 + 32) = v39;
    *(_QWORD *)(v45 + 40) = v40;
    v46 = v57;
    v47 = v58;
    __swift_project_boxed_opaque_existential_1(&v55, v57);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
    *(_QWORD *)&v59 = v45;
    sub_1BA6E9BD8(v48);
    v41 = v59;
    sub_1BA4A2E80((uint64_t)&v62, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char))))(v18 + 8))(v50, v52);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
  }
  else
  {
    v54 = 0;
    memset(v53, 0, sizeof(v53));
    sub_1BA967CE4((uint64_t)v53);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v41 + 32) = v39;
    *(_QWORD *)(v41 + 40) = v40;
    sub_1BA4A2E80((uint64_t)&v62, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, char))))(v18 + 8))(v50, v52);
  }
  v16 = v51;
LABEL_10:
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v41;
}

uint64_t sub_1BA95ED20()
{
  return sub_1BA95ED44((uint64_t)&type metadata for FormatGroupBinding.Image, (uint64_t)&unk_1E727DF78, (void (*)(uint64_t, _QWORD))sub_1BA967DF0, (void (*)(uint64_t))sub_1BA967E2C);
}

uint64_t sub_1BA95ED44(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _QWORD), void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  __int128 *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  _OWORD v55[2];
  uint64_t v56;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - v12;
  v14 = sub_1BB874644();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v55[0] + 1) = a1;
  *(_QWORD *)&v54 = swift_allocObject();
  a3(v4, v54 + 16);
  a4(v4);
  sub_1BB874614();
  sub_1BB87462C();
  v18 = sub_1BB874620();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v10, v18) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v35 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v51);
  swift_release();
  if (!v53)
  {
    v33 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v34 = &v51;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v34, v33);
    goto LABEL_11;
  }
  v20 = v51;
  v54 = v51;
  sub_1BA76EAE0(&v52, v55);
  v51 = v20;
  sub_1BA747A10((uint64_t)v55, (uint64_t)&v52);
  if (!*((_QWORD *)&v20 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
    v33 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v34 = &v54;
    goto LABEL_10;
  }
  v44 = v55;
  swift_bridgeObjectRetain_n();
  v21 = sub_1BA689E44(v20, *((unint64_t *)&v20 + 1));
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    v47 = v21;
    v48 = v23;
    sub_1BA7114A0();
    v43 = sub_1BB873ABC();
    v42 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v25 = sub_1BA9C0430(1uLL, v20, *((unint64_t *)&v20 + 1));
    v27 = v26;
    v41 = v28;
    v30 = v29;
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1BCCE334C](v25, v27, v41, v30);
    swift_bridgeObjectRelease();
    v47 = v43;
    v48 = v42;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v47;
    v32 = v48;
  }
  else
  {
    v32 = v20 >> 64;
    v31 = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  v51 = v20;
  sub_1BA747A10((uint64_t)v44, (uint64_t)&v52);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v45, (uint64_t)&v47);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v37 + 32) = v31;
    *(_QWORD *)(v37 + 40) = v32;
    v38 = v49;
    v39 = v50;
    __swift_project_boxed_opaque_existential_1(&v47, v49);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
    *(_QWORD *)&v51 = v37;
    sub_1BA6E9BD8(v40);
    v35 = v51;
    sub_1BA4A2E80((uint64_t)&v54, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  else
  {
    v46 = 0;
    memset(v45, 0, sizeof(v45));
    sub_1BA967CE4((uint64_t)v45);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v35 + 32) = v31;
    *(_QWORD *)(v35 + 40) = v32;
    sub_1BA4A2E80((uint64_t)&v54, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v35;
}

uint64_t sub_1BA95F23C(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatGroupBinding.Float);
}

uint64_t sub_1BA95F248(uint64_t a1, unsigned int a2)
{
  return sub_1BA95FC38(a1, a2, (uint64_t)&type metadata for FormatGroupBinding.Color);
}

uint64_t sub_1BA95F254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  __int128 *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  _OWORD v48[2];
  uint64_t v49;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - v5;
  v7 = sub_1BB874644();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v48[0] + 1) = &type metadata for FormatGroupBinding.Text;
  *(_QWORD *)&v47 = swift_allocObject();
  sub_1BA968270(v0, v47 + 16);
  sub_1BA9682AC(v0);
  sub_1BB874614();
  sub_1BB87462C();
  v11 = sub_1BB874620();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v3, v11) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v28 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v44);
  swift_release();
  if (!v46)
  {
    v26 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v27 = &v44;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v27, v26);
    goto LABEL_11;
  }
  v13 = v44;
  v47 = v44;
  sub_1BA76EAE0(&v45, v48);
  v44 = v13;
  sub_1BA747A10((uint64_t)v48, (uint64_t)&v45);
  if (!*((_QWORD *)&v13 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    v26 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v27 = &v47;
    goto LABEL_10;
  }
  v37 = v48;
  swift_bridgeObjectRetain_n();
  v14 = sub_1BA689E44(v13, *((unint64_t *)&v13 + 1));
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    v40 = v14;
    v41 = v16;
    sub_1BA7114A0();
    v36 = sub_1BB873ABC();
    v35 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v18 = sub_1BA9C0430(1uLL, v13, *((unint64_t *)&v13 + 1));
    v20 = v19;
    v34 = v21;
    v23 = v22;
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x1BCCE334C](v18, v20, v34, v23);
    swift_bridgeObjectRelease();
    v40 = v36;
    v41 = v35;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v40;
    v25 = v41;
  }
  else
  {
    v25 = v13 >> 64;
    v24 = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  v44 = v13;
  sub_1BA747A10((uint64_t)v37, (uint64_t)&v45);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v38, (uint64_t)&v40);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v30 + 32) = v24;
    *(_QWORD *)(v30 + 40) = v25;
    v31 = v42;
    v32 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    *(_QWORD *)&v44 = v30;
    sub_1BA6E9BD8(v33);
    v28 = v44;
    sub_1BA4A2E80((uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  }
  else
  {
    v39 = 0;
    memset(v38, 0, sizeof(v38));
    sub_1BA967CE4((uint64_t)v38);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v28 + 32) = v24;
    *(_QWORD *)(v28 + 40) = v25;
    sub_1BA4A2E80((uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v28;
}

uint64_t sub_1BA95F748(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  __int128 *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  _OWORD v53[2];
  uint64_t v54;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_1BB874644();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v53[0] + 1) = &type metadata for FormatGroupBinding.Font;
  *(_QWORD *)&v52 = a1;
  *((_QWORD *)&v52 + 1) = a2;
  BYTE2(v53[0]) = BYTE2(a3);
  LOWORD(v53[0]) = a3;
  sub_1BB874614();
  sub_1BB87462C();
  v16 = sub_1BB874620();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v8, v16) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v33 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v49);
  swift_release();
  if (!v51)
  {
    v31 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v32 = &v49;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v32, v31);
    goto LABEL_11;
  }
  v18 = v49;
  v52 = v49;
  sub_1BA76EAE0(&v50, v53);
  v49 = v18;
  sub_1BA747A10((uint64_t)v53, (uint64_t)&v50);
  if (!*((_QWORD *)&v18 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    v31 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v32 = &v52;
    goto LABEL_10;
  }
  v42 = v53;
  swift_bridgeObjectRetain_n();
  v19 = sub_1BA689E44(v18, *((unint64_t *)&v18 + 1));
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v45 = v19;
    v46 = v21;
    sub_1BA7114A0();
    v41 = sub_1BB873ABC();
    v40 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v23 = sub_1BA9C0430(1uLL, v18, *((unint64_t *)&v18 + 1));
    v25 = v24;
    v39 = v26;
    v28 = v27;
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1BCCE334C](v23, v25, v39, v28);
    swift_bridgeObjectRelease();
    v45 = v41;
    v46 = v40;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v45;
    v30 = v46;
  }
  else
  {
    v30 = v18 >> 64;
    v29 = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  v49 = v18;
  sub_1BA747A10((uint64_t)v42, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v43, (uint64_t)&v45);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v35 + 32) = v29;
    *(_QWORD *)(v35 + 40) = v30;
    v36 = v47;
    v37 = v48;
    __swift_project_boxed_opaque_existential_1(&v45, v47);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    *(_QWORD *)&v49 = v35;
    sub_1BA6E9BD8(v38);
    v33 = v49;
    sub_1BA4A2E80((uint64_t)&v52, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  else
  {
    v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1BA967CE4((uint64_t)v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v29;
    *(_QWORD *)(v33 + 40) = v30;
    sub_1BA4A2E80((uint64_t)&v52, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v33;
}

uint64_t sub_1BA95FC2C(uint64_t a1, unsigned int a2)
{
  return sub_1BA95FC38(a1, a2, (uint64_t)&type metadata for FormatGroupBinding.Bool);
}

uint64_t sub_1BA95FC38(uint64_t a1, unsigned int a2, uint64_t a3)
{
  char v4;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  __int128 *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  _OWORD v54[2];
  uint64_t v55;

  v4 = a2;
  v6 = a2 >> 8;
  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v13 = sub_1BB874644();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v54[0] + 1) = a3;
  *(_QWORD *)&v53 = a1;
  BYTE8(v53) = v4;
  BYTE9(v53) = v6;
  sub_1BB874614();
  sub_1BB87462C();
  v17 = sub_1BB874620();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v9, v17) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v34 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v50);
  swift_release();
  if (!v52)
  {
    v32 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v33 = &v50;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v33, v32);
    goto LABEL_11;
  }
  v19 = v50;
  v53 = v50;
  sub_1BA76EAE0(&v51, v54);
  v50 = v19;
  sub_1BA747A10((uint64_t)v54, (uint64_t)&v51);
  if (!*((_QWORD *)&v19 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    v32 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v33 = &v53;
    goto LABEL_10;
  }
  v43 = v54;
  swift_bridgeObjectRetain_n();
  v20 = sub_1BA689E44(v19, *((unint64_t *)&v19 + 1));
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    v46 = v20;
    v47 = v22;
    sub_1BA7114A0();
    v42 = sub_1BB873ABC();
    v41 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v24 = sub_1BA9C0430(1uLL, v19, *((unint64_t *)&v19 + 1));
    v26 = v25;
    v40 = v27;
    v29 = v28;
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x1BCCE334C](v24, v26, v40, v29);
    swift_bridgeObjectRelease();
    v46 = v42;
    v47 = v41;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v46;
    v31 = v47;
  }
  else
  {
    v31 = v19 >> 64;
    v30 = v19;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  v50 = v19;
  sub_1BA747A10((uint64_t)v43, (uint64_t)&v51);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v44, (uint64_t)&v46);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v36 + 32) = v30;
    *(_QWORD *)(v36 + 40) = v31;
    v37 = v48;
    v38 = v49;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    *(_QWORD *)&v50 = v36;
    sub_1BA6E9BD8(v39);
    v34 = v50;
    sub_1BA4A2E80((uint64_t)&v53, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  }
  else
  {
    v45 = 0;
    memset(v44, 0, sizeof(v44));
    sub_1BA967CE4((uint64_t)v44);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v34 + 32) = v30;
    *(_QWORD *)(v34 + 40) = v31;
    sub_1BA4A2E80((uint64_t)&v53, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v34;
}

uint64_t sub_1BA960114(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatGroupBinding.URL);
}

uint64_t sub_1BA960120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA960134(a1, a2, a3, (uint64_t)&type metadata for FormatGroupBinding.Temperature, (void (*)(uint64_t, uint64_t, uint64_t, double))sub_1BA9680B8);
}

uint64_t sub_1BA960134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, double))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  __int128 *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  _OWORD v58[2];
  uint64_t v59;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v44 - v14;
  v16 = sub_1BB874644();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v58[0] + 1) = a4;
  *(_QWORD *)&v57 = a1;
  *((_QWORD *)&v57 + 1) = a2;
  LOBYTE(v58[0]) = a3;
  a5(a1, a2, a3, v18);
  sub_1BB874614();
  sub_1BB87462C();
  v21 = sub_1BB874620();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v12, v21) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v38 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v54);
  swift_release();
  if (!v56)
  {
    v36 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v37 = &v54;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v37, v36);
    goto LABEL_11;
  }
  v23 = v54;
  v57 = v54;
  sub_1BA76EAE0(&v55, v58);
  v54 = v23;
  sub_1BA747A10((uint64_t)v58, (uint64_t)&v55);
  if (!*((_QWORD *)&v23 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
    v36 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v37 = &v57;
    goto LABEL_10;
  }
  v47 = v58;
  swift_bridgeObjectRetain_n();
  v24 = sub_1BA689E44(v23, *((unint64_t *)&v23 + 1));
  v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    v50 = v24;
    v51 = v26;
    sub_1BA7114A0();
    v46 = sub_1BB873ABC();
    v45 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v28 = sub_1BA9C0430(1uLL, v23, *((unint64_t *)&v23 + 1));
    v30 = v29;
    v44 = v31;
    v33 = v32;
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x1BCCE334C](v28, v30, v44, v33);
    swift_bridgeObjectRelease();
    v50 = v46;
    v51 = v45;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v50;
    v35 = v51;
  }
  else
  {
    v35 = v23 >> 64;
    v34 = v23;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
  v54 = v23;
  sub_1BA747A10((uint64_t)v47, (uint64_t)&v55);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v48, (uint64_t)&v50);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v40 + 32) = v34;
    *(_QWORD *)(v40 + 40) = v35;
    v41 = v52;
    v42 = v53;
    __swift_project_boxed_opaque_existential_1(&v50, v52);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    *(_QWORD *)&v54 = v40;
    sub_1BA6E9BD8(v43);
    v38 = v54;
    sub_1BA4A2E80((uint64_t)&v57, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  }
  else
  {
    v49 = 0;
    memset(v48, 0, sizeof(v48));
    sub_1BA967CE4((uint64_t)v48);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v38 + 32) = v34;
    *(_QWORD *)(v38 + 40) = v35;
    sub_1BA4A2E80((uint64_t)&v57, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v38;
}

uint64_t sub_1BA960620()
{
  return sub_1BA95C7DC((uint64_t)&type metadata for FormatGroupBinding.IssueCover);
}

uint64_t sub_1BA96062C(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatFloatBinding);
}

uint64_t sub_1BA960638(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA96064C(a1, a2, a3, a4, (uint64_t)&type metadata for FormatColorBinding);
}

uint64_t sub_1BA96064C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v41)(_QWORD);
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  _OWORD v61[2];

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - v14;
  v16 = sub_1BB874644();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *((_QWORD *)&v61[0] + 1) = a5;
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject();
  *(_QWORD *)&v60 = v20;
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_BYTE *)(v20 + 40) = a4;
  sub_1BA745F88(a1, a2, a3, a4);
  sub_1BB874614();
  sub_1BB87462C();
  v21 = sub_1BB874620();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) == 1)
    goto LABEL_8;
  v49 = v17;
  v50 = v16;
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v12, v21) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    v16 = v50;
    v17 = v49;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_9:
    v39 = MEMORY[0x1E0DEE9D8];
    goto LABEL_10;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v57);
  swift_release();
  if (!v59)
  {
    v41 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v42 = &v57;
LABEL_13:
    sub_1BA4A2E80((uint64_t)v42, v41);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
    goto LABEL_9;
  }
  v23 = v57;
  v60 = v57;
  sub_1BA76EAE0(&v58, v61);
  v57 = v23;
  sub_1BA747A10((uint64_t)v61, (uint64_t)&v58);
  if (!*((_QWORD *)&v23 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    v41 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v42 = &v60;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  v24 = sub_1BA689E44(v23, *((unint64_t *)&v23 + 1));
  v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    v53 = v24;
    v54 = v26;
    sub_1BA7114A0();
    v47 = sub_1BB873ABC();
    v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v29 = sub_1BA9C0430(1uLL, v23, *((unint64_t *)&v23 + 1));
    v31 = v30;
    v48 = v15;
    v33 = v32;
    v35 = v34;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v29, v31, v33, v35);
    swift_bridgeObjectRelease();
    v53 = v47;
    v54 = v28;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v48;
    swift_bridgeObjectRelease();
    v37 = v53;
    v38 = v54;
  }
  else
  {
    v38 = v23 >> 64;
    v37 = v23;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  v57 = v23;
  sub_1BA747A10((uint64_t)v61, (uint64_t)&v58);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v51, (uint64_t)&v53);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v43 + 32) = v37;
    *(_QWORD *)(v43 + 40) = v38;
    v44 = v55;
    v45 = v56;
    __swift_project_boxed_opaque_existential_1(&v53, v55);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
    *(_QWORD *)&v57 = v43;
    sub_1BA6E9BD8(v46);
    v39 = v57;
    sub_1BA4A2E80((uint64_t)&v60, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  }
  else
  {
    v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_1BA967CE4((uint64_t)v51);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v39 + 32) = v37;
    *(_QWORD *)(v39 + 40) = v38;
    sub_1BA4A2E80((uint64_t)&v60, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
  }
LABEL_10:
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v39;
}

uint64_t sub_1BA960B94(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  __int128 *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_1BB874644();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v51[0] + 1) = &type metadata for FormatBoolBinding;
  *(_QWORD *)&v50 = a1;
  WORD4(v50) = a2;
  sub_1BB874614();
  sub_1BB87462C();
  v14 = sub_1BB874620();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v31 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v47);
  swift_release();
  if (!v49)
  {
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v30 = &v47;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v30, v29);
    goto LABEL_11;
  }
  v16 = v47;
  v50 = v47;
  sub_1BA76EAE0(&v48, v51);
  v47 = v16;
  sub_1BA747A10((uint64_t)v51, (uint64_t)&v48);
  if (!*((_QWORD *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    v29 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v30 = &v50;
    goto LABEL_10;
  }
  v40 = v51;
  swift_bridgeObjectRetain_n();
  v17 = sub_1BA689E44(v16, *((unint64_t *)&v16 + 1));
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v43 = v17;
    v44 = v19;
    sub_1BA7114A0();
    v39 = sub_1BB873ABC();
    v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v21 = sub_1BA9C0430(1uLL, v16, *((unint64_t *)&v16 + 1));
    v23 = v22;
    v37 = v24;
    v26 = v25;
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1BCCE334C](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    v43 = v39;
    v44 = v38;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v43;
    v28 = v44;
  }
  else
  {
    v28 = v16 >> 64;
    v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  v47 = v16;
  sub_1BA747A10((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v41, (uint64_t)&v43);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v33 + 32) = v27;
    *(_QWORD *)(v33 + 40) = v28;
    v34 = v45;
    v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(_QWORD *)&v47 = v33;
    sub_1BA6E9BD8(v36);
    v31 = v47;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1BA967CE4((uint64_t)v41);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v31 + 32) = v27;
    *(_QWORD *)(v31 + 40) = v28;
    sub_1BA4A2E80((uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v31;
}

uint64_t sub_1BA96106C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA96064C(a1, a2, a3, a4, (uint64_t)&type metadata for FormatBindingFont);
}

uint64_t sub_1BA961080(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatTagBinding.DateTime);
}

uint64_t sub_1BA96108C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA960134(a1, a2, a3, (uint64_t)&type metadata for FormatTagBinding.Command, (void (*)(uint64_t, uint64_t, uint64_t, double))sub_1BA856DD0);
}

uint64_t sub_1BA9610A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  __int128 *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  _OWORD v56[2];
  uint64_t v57;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = sub_1BB874644();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v56[0] + 1) = &type metadata for FormatTagBinding.Image;
  v18 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v55 = v18;
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  sub_1BA967EC0(a1, a2);
  sub_1BB874614();
  sub_1BB87462C();
  v19 = sub_1BB874620();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v36 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v52);
  swift_release();
  if (!v54)
  {
    v34 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v35 = &v52;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v35, v34);
    goto LABEL_11;
  }
  v21 = v52;
  v55 = v52;
  sub_1BA76EAE0(&v53, v56);
  v52 = v21;
  sub_1BA747A10((uint64_t)v56, (uint64_t)&v53);
  if (!*((_QWORD *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    v34 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v35 = &v55;
    goto LABEL_10;
  }
  v45 = v56;
  swift_bridgeObjectRetain_n();
  v22 = sub_1BA689E44(v21, *((unint64_t *)&v21 + 1));
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    v48 = v22;
    v49 = v24;
    sub_1BA7114A0();
    v44 = sub_1BB873ABC();
    v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v26 = sub_1BA9C0430(1uLL, v21, *((unint64_t *)&v21 + 1));
    v28 = v27;
    v42 = v29;
    v31 = v30;
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x1BCCE334C](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    v48 = v44;
    v49 = v43;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v48;
    v33 = v49;
  }
  else
  {
    v33 = v21 >> 64;
    v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  v52 = v21;
  sub_1BA747A10((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v46, (uint64_t)&v48);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v38 + 32) = v32;
    *(_QWORD *)(v38 + 40) = v33;
    v39 = v50;
    v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(_QWORD *)&v52 = v38;
    sub_1BA6E9BD8(v41);
    v36 = v52;
    sub_1BA4A2E80((uint64_t)&v55, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1BA967CE4((uint64_t)v46);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v36 + 32) = v32;
    *(_QWORD *)(v36 + 40) = v33;
    sub_1BA4A2E80((uint64_t)&v55, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v36;
}

uint64_t sub_1BA9615AC(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatTagBinding.Color);
}

uint64_t sub_1BA9615B8(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatTagBinding.Text);
}

uint64_t sub_1BA9615C4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return sub_1BA9615D0(a1, a2, a3, (uint64_t)&type metadata for FormatTagBinding.Font);
}

uint64_t sub_1BA9615D0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  __int16 v5;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  __int128 *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  _OWORD v56[2];
  uint64_t v57;

  v5 = a3;
  v8 = HIWORD(a3);
  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - v13;
  v15 = sub_1BB874644();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v56[0] + 1) = a4;
  *(_QWORD *)&v55 = a1;
  *((_QWORD *)&v55 + 1) = a2;
  LOWORD(v56[0]) = v5;
  BYTE2(v56[0]) = v8;
  sub_1BB874614();
  sub_1BB87462C();
  v19 = sub_1BB874620();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v14, 1, v19) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v11, v19) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v36 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v52);
  swift_release();
  if (!v54)
  {
    v34 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v35 = &v52;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v35, v34);
    goto LABEL_11;
  }
  v21 = v52;
  v55 = v52;
  sub_1BA76EAE0(&v53, v56);
  v52 = v21;
  sub_1BA747A10((uint64_t)v56, (uint64_t)&v53);
  if (!*((_QWORD *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    v34 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v35 = &v55;
    goto LABEL_10;
  }
  v45 = v56;
  swift_bridgeObjectRetain_n();
  v22 = sub_1BA689E44(v21, *((unint64_t *)&v21 + 1));
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    v48 = v22;
    v49 = v24;
    sub_1BA7114A0();
    v44 = sub_1BB873ABC();
    v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v26 = sub_1BA9C0430(1uLL, v21, *((unint64_t *)&v21 + 1));
    v28 = v27;
    v42 = v29;
    v31 = v30;
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x1BCCE334C](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    v48 = v44;
    v49 = v43;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v48;
    v33 = v49;
  }
  else
  {
    v33 = v21 >> 64;
    v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  v52 = v21;
  sub_1BA747A10((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v46, (uint64_t)&v48);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v38 + 32) = v32;
    *(_QWORD *)(v38 + 40) = v33;
    v39 = v50;
    v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(_QWORD *)&v52 = v38;
    sub_1BA6E9BD8(v41);
    v36 = v52;
    sub_1BA4A2E80((uint64_t)&v55, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1BA967CE4((uint64_t)v46);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v36 + 32) = v32;
    *(_QWORD *)(v36 + 40) = v33;
    sub_1BA4A2E80((uint64_t)&v55, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v36;
}

uint64_t sub_1BA961AB0(char a1)
{
  return sub_1BA95B8A4(a1, (uint64_t)&type metadata for FormatTagBinding.Bool);
}

uint64_t sub_1BA961ABC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  __int128 *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;

  sub_1BA967C24(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  v8 = sub_1BB874644();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v49[0] + 1) = &type metadata for FormatHeadlineBinding.DateTime;
  LOBYTE(v48) = a1;
  sub_1BB874614();
  sub_1BB87462C();
  v12 = sub_1BB874620();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
    goto LABEL_11;
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA967C24);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v4, v12) != *MEMORY[0x1E0DEDFA8])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v29 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  sub_1BB874638();
  sub_1BA9BE904(&v45);
  swift_release();
  if (!v47)
  {
    v27 = (uint64_t (*)(_QWORD))sub_1BA967C44;
    v28 = &v45;
LABEL_10:
    sub_1BA4A2E80((uint64_t)v28, v27);
    goto LABEL_11;
  }
  v14 = v45;
  v48 = v45;
  sub_1BA76EAE0(&v46, v49);
  v45 = v14;
  sub_1BA747A10((uint64_t)v49, (uint64_t)&v46);
  if (!*((_QWORD *)&v14 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    v27 = (uint64_t (*)(_QWORD))sub_1BA967C60;
    v28 = &v48;
    goto LABEL_10;
  }
  v38 = v49;
  swift_bridgeObjectRetain_n();
  v15 = sub_1BA689E44(v14, *((unint64_t *)&v14 + 1));
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v41 = v15;
    v42 = v17;
    sub_1BA7114A0();
    v37 = sub_1BB873ABC();
    v36 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v19 = sub_1BA9C0430(1uLL, v14, *((unint64_t *)&v14 + 1));
    v21 = v20;
    v35 = v22;
    v24 = v23;
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1BCCE334C](v19, v21, v35, v24);
    swift_bridgeObjectRelease();
    v41 = v37;
    v42 = v36;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v41;
    v26 = v42;
  }
  else
  {
    v26 = v14 >> 64;
    v25 = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  v45 = v14;
  sub_1BA747A10((uint64_t)v38, (uint64_t)&v46);
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, &qword_1EF2AB498);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v39, (uint64_t)&v41);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v31 + 32) = v25;
    *(_QWORD *)(v31 + 40) = v26;
    v32 = v43;
    v33 = v44;
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    *(_QWORD *)&v45 = v31;
    sub_1BA6E9BD8(v34);
    v29 = v45;
    sub_1BA4A2E80((uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  }
  else
  {
    v40 = 0;
    memset(v39, 0, sizeof(v39));
    sub_1BA967CE4((uint64_t)v39);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v29 + 32) = v25;
    *(_QWORD *)(v29 + 40) = v26;
    sub_1BA4A2E80((uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BA967C60);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
LABEL_12:
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA967C24);
  return v29;
}

void static FormatFont.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BA962030()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  __int16 v13;
  __int128 v14;
  __int128 v15;
  char v16;

  if (v0 >> 61)
  {
    v16 = 0;
  }
  else
  {
    v3 = *(_WORD *)(v1 + 80);
    v4 = *(_QWORD *)(v1 + 40);
    v5 = *(_BYTE *)(v1 + 34);
    v6 = *(_WORD *)(v1 + 32);
    v7 = *(_QWORD *)(v1 + 24);
    v8 = *(_QWORD *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = *(_WORD *)(v0 + 32);
    v11 = *(_BYTE *)(v0 + 34);
    v12 = *(_QWORD *)(v0 + 40);
    v13 = *(_WORD *)(v0 + 80);
    *(_QWORD *)(v2 - 176) = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v2 - 168) = v7;
    *(_WORD *)(v2 - 160) = v6;
    *(_BYTE *)(v2 - 158) = v5;
    *(_QWORD *)(v2 - 152) = v4;
    v14 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v2 - 144) = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v2 - 128) = v14;
    *(_WORD *)(v2 - 112) = v3;
    *(_QWORD *)(v2 - 256) = v8;
    *(_QWORD *)(v2 - 248) = v9;
    *(_WORD *)(v2 - 240) = v10;
    *(_BYTE *)(v2 - 238) = v11;
    *(_QWORD *)(v2 - 232) = v12;
    v15 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v2 - 224) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v2 - 208) = v15;
    *(_WORD *)(v2 - 192) = v13;
    swift_retain();
    swift_retain();
    v16 = _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0(v2 - 176, v2 - 256);
    swift_release();
    swift_release();
  }
  return v16 & 1;
}

void sub_1BA962510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1BA9628B4(a1, a2, a3, a4, a5);
}

void sub_1BA962550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

uint64_t sub_1BA962648()
{
  _QWORD *v0;

  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v0 = 0xD00000000000006ELL;
  v0[1] = 0x80000001BB9648B0;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BA962874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1BA9628B4(a1, a2, a3, a4, a5);
}

void sub_1BA9628B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

uint64_t sub_1BA9629F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v0 + 72);
  result = sub_1BA70DDB0(*(_QWORD *)(v1 + **(_QWORD **)(v0 + 64)), v2);
  if (!v4)
  {
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v3 - 72);
    *(_QWORD *)(v3 - 240) = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v3 - 232) = v7;
    *(_WORD *)(v3 - 224) = v6;
    *(_BYTE *)(v3 - 222) = BYTE2(v6);
    sub_1BB738A3C(v2, *(uint64_t **)(v0 + 48));
    return sub_1BA4A2E80(v2, type metadata accessor for FeedHeadline);
  }
  return result;
}

void sub_1BA962C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;

  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  __asm { BR              X10 }
}

uint64_t sub_1BA962D2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = sub_1BA75D250();
  if (!v4)
  {
    *(_QWORD *)(v6 - 240) = v2;
    *(_QWORD *)(v6 - 232) = v1;
    *(_WORD *)(v6 - 224) = v3;
    *(_BYTE *)(v6 - 222) = BYTE2(v3);
    sub_1BB738A3C(v5, v0);
    return sub_1BA4A2E80(v5, type metadata accessor for FeedHeadline);
  }
  return result;
}

void sub_1BA962E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

uint64_t sub_1BA962F80()
{
  _QWORD *v0;

  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v0 = 0xD000000000000066;
  v0[1] = 0x80000001BB964840;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BA9631C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

uint64_t sub_1BA9632C0()
{
  _QWORD *v0;

  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v0 = 0xD000000000000048;
  v0[1] = 0x80000001BB9647E0;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

_QWORD *sub_1BA9634B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _QWORD *v13;
  _OWORD v15[2];
  uint64_t v16;

  v3 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v3);
  if ((~*a2 & 0xF000000000000007) != 0)
    __asm { BR              X11 }
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v9 = (_QWORD *)(v8 + v7);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v9);
  v10 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  sub_1BAF89090(1953394502, 0xE400000000000000, 0, 0, v8, v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 48) = v16;
  v12 = v15[1];
  *(_OWORD *)(v11 + 16) = v15[0];
  *(_OWORD *)(v11 + 32) = v12;
  v13 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  return v13;
}

void sub_1BA96371C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  unsigned __int8 v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  int v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int16 *)(a1 + 32);
  *(_DWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 128) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 136) = v5;
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(v1 + 88) = v7;
  *(_QWORD *)(v1 + 96) = v8;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 72);
  *(_DWORD *)(v1 + 80) = *(unsigned __int16 *)(a1 + 80);
  v9 = *(unsigned __int8 *)(a1 + 34);
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  *(_QWORD *)(v1 + 72) = inited;
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_QWORD *)(v1 + 40) = v11;
  sub_1BA8C88C8(0);
  *(_QWORD *)(v1 + 112) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  *(_QWORD *)(v1 + 24) = v16;
  *(_QWORD *)(v1 + 32) = v15 | 7;
  v17 = swift_allocObject();
  *(_QWORD *)(v1 + 8) = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1BB8832C0;
  v18 = (_QWORD *)(v17 + v16);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6D6574737953, 0xE600000000000000, v18);
  v19 = type metadata accessor for FormatInspectionItem(0);
  v20 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 0, 1, v19);
  *(_QWORD *)(v1 + 352) = v4;
  *(_QWORD *)(v1 + 360) = *(_QWORD *)(v1 + 136);
  *(_WORD *)(v1 + 368) = v6;
  *(_DWORD *)(v1 + 48) = v9;
  *(_BYTE *)(v1 + 370) = v9;
  v21 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 376) = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 384) = v21;
  v22 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 392) = v7;
  *(_QWORD *)(v1 + 400) = v22;
  *(_QWORD *)(v1 + 408) = *(_QWORD *)(v1 + 144);
  *(_WORD *)(v1 + 416) = *(_DWORD *)(v1 + 80);
  v23 = *(void **)(v2 + 56);
  *(_QWORD *)(v1 + 56) = v23;
  v24 = sub_1BB376CA8(v23);
  v25 = objc_msgSend(v24, sel_fontName);

  v26 = sub_1BB8729A0();
  v28 = v27;

  sub_1BAAF7494(1701667150, 0xE400000000000000, v26, v28, (_QWORD *)((char *)v18 + v14));
  v20((_QWORD *)((char *)v18 + v14), 0, 1, v19);
  *(_QWORD *)v1 = 2 * v14;
  sub_1BAAF3A18(1702521171, 0xE400000000000000, v4, 0, (_QWORD *)((char *)v18 + 2 * v14));
  v20((_QWORD *)((char *)v18 + 2 * v14), 0, 1, v19);
  *(_QWORD *)(v1 + 16) = 3 * v14;
  sub_1BAAF94A4(0x746867696557, 0xE600000000000000, v9, (_QWORD *)((char *)v18 + 3 * v14));
  v20((_QWORD *)((char *)v18 + 3 * v14), 0, 1, v19);
  v29 = *(_QWORD *)(v1 + 128);
  swift_bridgeObjectRetain();
  sub_1BAAF9768(0x737469617254, 0xE600000000000000, v29, (_QWORD *)((char *)v18 + 4 * v14));
  v20((_QWORD *)((char *)v18 + 4 * v14), 0, 1, v19);
  v30 = *(_DWORD *)(v1 + 64);
  v31 = (v30 & 0xFF00) == 3072;
  v32 = v30;
  if ((v30 & 0xFF00) == 0xC00)
    v33 = 0;
  else
    v33 = *(_QWORD *)(v1 + 136);
  if ((v30 & 0xFF00) == 0xC00)
    v34 = 12;
  else
    v34 = BYTE1(v30);
  sub_1BAAF9280(0x656C797453, 0xE500000000000000, v34, (_QWORD *)((char *)v18 + 5 * v14));
  v20((_QWORD *)((char *)v18 + 5 * v14), 0, 1, v19);
  sub_1BAAF3A18(0x657A69532078614DLL, 0xE800000000000000, v33, (v31 | v32) & 1, (_QWORD *)((char *)v18 + 6 * v14));
  v20((_QWORD *)((char *)v18 + 6 * v14), 0, 1, v19);
  sub_1BAF89090(1953394502, 0xE400000000000000, 0, 0, *(_QWORD *)(v1 + 8), (_QWORD *)(v3 - 184));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v35 = *(_QWORD **)(v1 + 72);
  v35[7] = &type metadata for FormatInspectionGroup;
  v35[8] = &off_1E72D2F60;
  v36 = swift_allocObject();
  v35[4] = v36;
  *(_QWORD *)(v1 + 8) = v35 + 4;
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(v3 - 152);
  v37 = *(_OWORD *)(v3 - 168);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)(v3 - 184);
  *(_OWORD *)(v36 + 32) = v37;
  v38 = *(_QWORD *)(v1 + 24);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BB87D7A0;
  v40 = (_QWORD *)(v39 + v38);
  v41 = *(_DWORD *)(v1 + 80);
  if ((v41 & 0xFF00) == 0x500)
    v42 = 0;
  else
    v42 = *(_QWORD *)(v1 + 88);
  if ((v41 & 0xFF00) == 0x500)
    v43 = 0;
  else
    v43 = *(_QWORD *)(v1 + 144);
  if ((v41 & 0xFF00) == 0x500)
    v44 = 4;
  else
    v44 = BYTE1(*(_DWORD *)(v1 + 80));
  if ((v41 & 0xFF00) == 0x500)
    v45 = 10;
  else
    v45 = *(_QWORD *)(v1 + 120);
  *(_DWORD *)(v1 + 40) = v45;
  sub_1BAAF978C(0x6E6769736544, 0xE600000000000000, v44, v40);
  v20(v40, 0, 1, v19);
  v46 = (_QWORD *)((char *)v40 + v14);
  sub_1BAAF9798(0x6564617247, 0xE500000000000000, v43, ((v41 & 0xFF00) == 1280) | v41 & 1, v46);
  v20(v46, 0, 1, v19);
  v47 = *(_QWORD *)(v1 + 96);
  v48 = (_QWORD *)((char *)v40 + *(_QWORD *)v1);
  sub_1BAAF3A18(0x746E616C53, 0xE500000000000000, v42, ((v41 & 0xFF00) == 1280) | v47 & 1, v48);
  v20(v48, 0, 1, v19);
  v49 = (_QWORD *)((char *)v40 + *(_QWORD *)(v1 + 16));
  sub_1BAAF97AC(0x6874646957, 0xE500000000000000, *(_DWORD *)(v1 + 40), v49);
  v20(v49, 0, 1, v19);
  sub_1BAF89090(0x74744120746E6F46, 0xEF73657475626972, 0, 0, v39, (_QWORD *)(v3 - 144));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v50 = *(_QWORD **)(v1 + 72);
  v50[12] = &type metadata for FormatInspectionGroup;
  v50[13] = &off_1E72D2F60;
  v51 = swift_allocObject();
  v50[9] = v51;
  *(_QWORD *)(v51 + 48) = *(_QWORD *)(v3 - 112);
  v52 = *(_OWORD *)(v1 + 848);
  *(_OWORD *)(v51 + 16) = *(_OWORD *)(v1 + 832);
  *(_OWORD *)(v51 + 32) = v52;
  *(_QWORD *)(v1 + 352) = v4;
  *(_QWORD *)(v1 + 360) = *(_QWORD *)(v1 + 136);
  *(_WORD *)(v1 + 368) = *(_DWORD *)(v1 + 64);
  *(_BYTE *)(v1 + 370) = *(_DWORD *)(v1 + 48);
  v53 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 376) = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 384) = v53;
  *(_QWORD *)(v1 + 392) = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 400) = v47;
  *(_QWORD *)(v1 + 408) = *(_QWORD *)(v1 + 144);
  *(_WORD *)(v1 + 416) = v41;
  v54 = sub_1BB376CA8(*(void **)(v1 + 56));
  v55 = sub_1BA9670D4(v54);

  v50[17] = &type metadata for FormatInspection;
  v50[18] = &off_1E7335C38;
  v50[14] = v55;
  sub_1BB6DF010((uint64_t)v50);
  swift_setDeallocating();
  sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  JUMPOUT(0x1BA9636D0);
}

void sub_1BA963D90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  _QWORD *v24;

  v3 = swift_projectBox();
  sub_1BA4C2DD8(v3, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v0 + 112) = inited;
  *(_QWORD *)(v0 + 144) = inited + 32;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_QWORD *)(v0 + 136) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB8827B0;
  *(_QWORD *)(v0 + 128) = v9;
  v10 = v9 + v8;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x65746F6D6552, 0xE600000000000000, (_QWORD *)(v9 + v8));
  v11 = type metadata accessor for FormatInspectionItem(0);
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 0, 1, v11);
  v13 = *v1;
  v14 = v1[1];
  swift_bridgeObjectRetain();
  sub_1BAAF7494(1701667150, 0xE400000000000000, v13, v14, (_QWORD *)(v10 + v7));
  v12(v10 + v7, 0, 1, v11);
  *(_QWORD *)(v0 + 120) = v7;
  sub_1BAAF3A18(1702521171, 0xE400000000000000, *(uint64_t *)((char *)v1 + *(int *)(v2 + 24)), 0, (_QWORD *)(v10 + 2 * v7));
  v12(v10 + 2 * v7, 0, 1, v11);
  v15 = (char *)v1 + *(int *)(v2 + 28);
  v16 = *((unsigned __int16 *)v15 + 4);
  if ((v16 & 0xFF00) == 0xC00)
  {
    v17 = 0;
    LOBYTE(v18) = 12;
  }
  else
  {
    v17 = *(_QWORD *)v15;
    v18 = v16 >> 8;
  }
  v19 = *(_QWORD *)(v0 + 120);
  sub_1BAAF9280(0x656C797453, 0xE500000000000000, v18, (_QWORD *)(v10 + 3 * v19));
  v12(v10 + 3 * v19, 0, 1, v11);
  sub_1BAAF3A18(0x657A69532078614DLL, 0xE800000000000000, v17, ((v16 & 0xFF00) == 3072) | v16 & 1, (_QWORD *)(v10 + 4 * v19));
  v12(v10 + 4 * v19, 0, 1, v11);
  sub_1BAF89090(1953394502, 0xE400000000000000, 0, 0, *(_QWORD *)(v0 + 128), (_QWORD *)(v0 + 352));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v20 = *(_QWORD **)(v0 + 112);
  v20[7] = &type metadata for FormatInspectionGroup;
  v20[8] = &off_1E72D2F60;
  v21 = swift_allocObject();
  v20[4] = v21;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v0 + 384);
  v22 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v21 + 32) = v22;
  v23 = (void *)sub_1BA9CA088();
  v24 = sub_1BA9670D4(v23);

  v20[12] = &type metadata for FormatInspection;
  v20[13] = &off_1E7335C38;
  v20[9] = v24;
  sub_1BB6DF010((uint64_t)v20);
  swift_setDeallocating();
  sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  sub_1BA4A2E80((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  JUMPOUT(0x1BA9636D8);
}

void sub_1BA964B9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA964BC4()
{
  _QWORD *v0;

  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v0 = 0xD00000000000007ALL;
  v0[1] = 0x80000001BB964920;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BA964C48(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;

  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1BA964CD8()
{
  int v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  result = sub_1BA4A9E78(*(_QWORD *)(v6 + *v7 + 8), v5);
  if (!v2)
  {
    *(_QWORD *)(v8 - 240) = v4;
    *(_QWORD *)(v8 - 232) = v3;
    *(_WORD *)(v8 - 224) = v0;
    *(_BYTE *)(v8 - 222) = BYTE2(v0);
    sub_1BB738A3C(v5, v1);
    return sub_1BA4A2E80(v5, type metadata accessor for FeedHeadline);
  }
  return result;
}

void sub_1BA964E98(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;

  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1BA964F30()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  result = v3();
  if (!v1)
  {
    v7 = v0[1];
    *(_QWORD *)(v5 - 240) = *v0;
    *(_QWORD *)(v5 - 232) = v7;
    *(_WORD *)(v5 - 224) = v2;
    *(_BYTE *)(v5 - 222) = BYTE2(v2);
    sub_1BB738A3C(v4, *(uint64_t **)(v5 - 72));
    return sub_1BA4A2E80(v4, type metadata accessor for FeedHeadline);
  }
  return result;
}

void sub_1BA9650E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA965108()
{
  _QWORD *v0;

  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v0 = 0xD000000000000048;
  v0[1] = 0x80000001BB9647E0;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA96518C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA93EB20(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1BA6E35A8(0x4562655764656546, 0xEC0000006465626DLL), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v6 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    v9 = type metadata accessor for FeedWebEmbed();
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v5, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v5, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    }
    else
    {
      v11(v5, 1, 1, v9);
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA93EB20);
      sub_1BA968308();
      swift_allocError();
      v18 = v17;
      strcpy((char *)v17, "FeedWebEmbed");
      *(_BYTE *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BA4C010C((uint64_t)v20, v17 + 16);
      *(_BYTE *)(v18 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedWebEmbed");
    *(_BYTE *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1BA9653CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1BA6E35A8(0x6461654864656546, 0xEC000000656E696CLL), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v6 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    v9 = type metadata accessor for FeedHeadline(0);
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v5, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v5, a1, type metadata accessor for FeedHeadline);
    }
    else
    {
      v11(v5, 1, 1, v9);
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
      sub_1BA968308();
      swift_allocError();
      v18 = v17;
      strcpy((char *)v17, "FeedHeadline");
      *(_BYTE *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BA4C010C((uint64_t)v20, v17 + 16);
      *(_BYTE *)(v18 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedHeadline");
    *(_BYTE *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1BA96560C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14[2];
  _BYTE v15[40];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BA6E35A8(0x6373654464656546, 0xEE00726F74706972), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BA4CECCC(v14, (uint64_t)v15);
    sub_1BA4C010C((uint64_t)v15, (uint64_t)v14);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      *a1 = v13;
    }
    else
    {
      sub_1BA968308();
      swift_allocError();
      v12 = v11;
      strcpy(v11, "FeedDescriptor");
      v11[15] = -18;
      sub_1BA4C010C((uint64_t)v15, (uint64_t)(v11 + 16));
      v12[56] = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedDescriptor");
    *(_BYTE *)(v8 + 15) = -18;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA9657C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _BYTE v13[144];
  __int128 v14[9];
  _BYTE v15[40];
  _BYTE v16[40];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BA6E35A8(0x7573734964656546, 0xE900000000000065), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BA4CECCC(v14, (uint64_t)v16);
    sub_1BA4C010C((uint64_t)v16, (uint64_t)v15);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    if (swift_dynamicCast())
    {
      nullsub_1(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1BA8EDBB0((uint64_t)v14, (uint64_t)v13);
      return sub_1BA8EDBB0((uint64_t)v13, a1);
    }
    else
    {
      sub_1BA968308();
      swift_allocError();
      v12 = v11;
      *v11 = 0x7573734964656546;
      v11[1] = 0xE900000000000065;
      sub_1BA4C010C((uint64_t)v16, (uint64_t)(v11 + 2));
      *((_BYTE *)v12 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)v8 = 0x7573734964656546;
    *(_QWORD *)(v8 + 8) = 0xE900000000000065;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1BA965984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16[2];
  _BYTE v17[40];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BA6E35A8(0x756F724764656546, 0xEC00000067615470), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)v16);
    sub_1BA4CECCC(v16, (uint64_t)v17);
    sub_1BA4C010C((uint64_t)v17, (uint64_t)v16);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v14;
      *(_BYTE *)(a1 + 16) = v15;
    }
    else
    {
      sub_1BA968308();
      swift_allocError();
      v12 = v11;
      strcpy((char *)v11, "FeedGroupTag");
      *(_BYTE *)(v11 + 13) = 0;
      *(_WORD *)(v11 + 14) = -5120;
      sub_1BA4C010C((uint64_t)v17, v11 + 16);
      *(_BYTE *)(v12 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedGroupTag");
    *(_BYTE *)(v8 + 13) = 0;
    *(_WORD *)(v8 + 14) = -5120;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA965B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _BYTE v20[40];
  _BYTE v21[40];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BA6E35A8(0x7A7A755064656546, 0xEE0065707954656CLL), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)&v15);
    sub_1BA4CECCC(&v15, (uint64_t)v21);
    sub_1BA4C010C((uint64_t)v21, (uint64_t)v20);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      v7 = v16;
      v8 = v18;
      *(_OWORD *)a1 = v15;
      *(_BYTE *)(a1 + 16) = v7 & 1;
      *(_OWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 40) = v8;
      *(_OWORD *)(a1 + 48) = v19;
    }
    else
    {
      sub_1BA968308();
      swift_allocError();
      v14 = v13;
      strcpy(v13, "FeedPuzzleType");
      v13[15] = -18;
      sub_1BA4C010C((uint64_t)v21, (uint64_t)(v13 + 16));
      v14[56] = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v10 = v9;
    v11 = swift_bridgeObjectRetain();
    v12 = sub_1BA85C6FC(v11);
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "FeedPuzzleType");
    *(_BYTE *)(v10 + 15) = -18;
    *(_QWORD *)(v10 + 16) = v12;
    *(_BYTE *)(v10 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA965D10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17[2];
  _BYTE v18[40];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BA6E35A8(0x726F705364656546, 0xEF746E6576457374), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)v17);
    sub_1BA4CECCC(v17, (uint64_t)v18);
    sub_1BA4C010C((uint64_t)v18, (uint64_t)v17);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      *(_QWORD *)a1 = v13;
      *(_OWORD *)(a1 + 8) = v14;
      *(_QWORD *)(a1 + 24) = v15;
      *(_BYTE *)(a1 + 32) = v16 & 1;
    }
    else
    {
      sub_1BA968308();
      swift_allocError();
      v12 = v11;
      *v11 = 0x726F705364656546;
      v11[1] = 0xEF746E6576457374;
      sub_1BA4C010C((uint64_t)v18, (uint64_t)(v11 + 2));
      *((_BYTE *)v12 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
  }
  else
  {
    sub_1BA968308();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)v8 = 0x726F705364656546;
    *(_QWORD *)(v8 + 8) = 0xEF746E6576457374;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA965EE0(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1BACAB85C(v2);
  v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  result = sub_1BA965F48(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BA965F48(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  int v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)();
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)();
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *__dst;
  int v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE v128[32];
  uint64_t v129;
  _BYTE v130[32];
  uint64_t v131;
  _BYTE v132[32];
  uint64_t v133;
  _BYTE v134[40];
  _BYTE *v135;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_149;
    if (v3)
      return sub_1BA96691C(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_157;
  v119 = result;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_114:
      v118 = v8;
      if (v12 >= 2)
      {
        v111 = *v2;
        do
        {
          v112 = v12 - 2;
          if (v12 < 2)
            goto LABEL_144;
          if (!v111)
            goto LABEL_156;
          v113 = *(_QWORD *)&v11[16 * v112 + 32];
          v114 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1BA966B34((char *)(v111 + 40 * v113), (char *)(v111 + 40 * *(_QWORD *)&v11[16 * v12 + 16]), v111 + 40 * v114, __dst);
          if (v1)
            break;
          if (v114 < v113)
            goto LABEL_145;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1BACAB464((uint64_t)v11);
          if (v112 >= *((_QWORD *)v11 + 2))
            goto LABEL_146;
          v115 = &v11[16 * v112 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v11 + 2);
          if (v12 > v116)
            goto LABEL_147;
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v116 - v12));
          *((_QWORD *)v11 + 2) = v116 - 1;
          v12 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v118 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v118 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    sub_1BA865180();
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v118 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = v128;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v135 = v128;
  while (1)
  {
    v13 = v9;
    v14 = v9 + 1;
    v121 = v9;
    if (v9 + 1 < v3)
    {
      v15 = *v2;
      sub_1BA4C2DD8(*v2 + 40 * v14, (uint64_t)&v133, (uint64_t (*)(_QWORD))sub_1BA865180);
      v122 = v15;
      sub_1BA4C2DD8(v15 + 40 * v13, (uint64_t)&v131, (uint64_t (*)(_QWORD))sub_1BA865180);
      v129 = v133;
      sub_1BA747A10((uint64_t)v134, (uint64_t)v130);
      v16 = sub_1BB8729A0();
      v18 = v17;
      sub_1BA747A10((uint64_t)v132, (uint64_t)v10);
      if (v16 == sub_1BB8729A0() && v18 == v19)
        v125 = 0;
      else
        v125 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
      sub_1BA4A2E80((uint64_t)&v131, (uint64_t (*)(_QWORD))sub_1BA865180);
      sub_1BA4A2E80((uint64_t)&v133, (uint64_t (*)(_QWORD))sub_1BA865180);
      v14 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v20 = v122 + 40 * v13 + 40;
        while (1)
        {
          sub_1BA4C2DD8(v20 + 40, (uint64_t)&v133, (uint64_t (*)(_QWORD))sub_1BA865180);
          sub_1BA4C2DD8(v20, (uint64_t)&v131, (uint64_t (*)(_QWORD))sub_1BA865180);
          v129 = v133;
          sub_1BA747A10((uint64_t)v134, (uint64_t)v130);
          v21 = sub_1BB8729A0();
          v23 = v22;
          sub_1BA747A10((uint64_t)v132, (uint64_t)v10);
          v25 = v21 == sub_1BB8729A0() && v23 == v24;
          v26 = v25 ? 0 : sub_1BB874398();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
          sub_1BA4A2E80((uint64_t)&v131, (uint64_t (*)(_QWORD))sub_1BA865180);
          sub_1BA4A2E80((uint64_t)&v133, (uint64_t (*)(_QWORD))sub_1BA865180);
          if (((v125 ^ v26) & 1) != 0)
            break;
          ++v14;
          v20 += 40;
          if (v3 == v14)
          {
            v14 = v3;
            break;
          }
        }
        v13 = v121;
      }
      if ((v125 & 1) != 0)
      {
        if (v14 < v13)
          goto LABEL_150;
        if (v13 < v14)
        {
          v27 = v122 + 40 * v14 - 40;
          v28 = (__int128 *)(v122 + 40 * v13);
          v29 = v14;
          v30 = v13;
          do
          {
            if (v30 != --v29)
            {
              if (!v122)
                goto LABEL_155;
              v31 = *v28;
              v32 = v28[1];
              v33 = *((_QWORD *)v28 + 4);
              v34 = *(_QWORD *)(v27 + 32);
              v35 = *(_OWORD *)(v27 + 16);
              *v28 = *(_OWORD *)v27;
              v28[1] = v35;
              *((_QWORD *)v28 + 4) = v34;
              *(_QWORD *)(v27 + 32) = v33;
              *(_OWORD *)v27 = v31;
              *(_OWORD *)(v27 + 16) = v32;
            }
            ++v30;
            v27 -= 40;
            v28 = (__int128 *)((char *)v28 + 40);
          }
          while (v30 < v29);
        }
      }
    }
    if (v14 >= v3)
      goto LABEL_65;
    if (__OFSUB__(v14, v13))
      goto LABEL_148;
    if (v14 - v13 >= v119)
      goto LABEL_65;
    if (__OFADD__(v13, v119))
      goto LABEL_151;
    v36 = v13 + v119 >= v3 ? v3 : v13 + v119;
    if (v36 < v13)
      break;
    if (v14 != v36)
    {
      v117 = v11;
      v37 = 40 * v14;
      v38 = sub_1BA865180;
      v120 = v36;
      do
      {
        v126 = v14;
        v39 = v13;
        v123 = v37;
        v40 = v37;
        while (1)
        {
          v41 = v2;
          v42 = *v2 + v40;
          sub_1BA4C2DD8(v42, (uint64_t)&v133, (uint64_t (*)(_QWORD))v38);
          sub_1BA4C2DD8(v42 - 40, (uint64_t)&v131, (uint64_t (*)(_QWORD))v38);
          v129 = v133;
          sub_1BA747A10((uint64_t)v134, (uint64_t)v130);
          v43 = sub_1BB8729A0();
          v45 = v44;
          v46 = v38;
          v47 = (uint64_t)v135;
          sub_1BA747A10((uint64_t)v132, (uint64_t)v135);
          if (v43 == sub_1BB8729A0() && v45 == v48)
            break;
          v50 = sub_1BB874398();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(v47);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
          sub_1BA4A2E80((uint64_t)&v131, (uint64_t (*)(_QWORD))v46);
          sub_1BA4A2E80((uint64_t)&v133, (uint64_t (*)(_QWORD))v46);
          v38 = v46;
          if ((v50 & 1) == 0)
            goto LABEL_53;
          if (!*v41)
            goto LABEL_153;
          v2 = v41;
          v51 = *v41 + v40;
          v52 = *(_QWORD *)(v51 + 32);
          v54 = *(_OWORD *)v51;
          v53 = *(_OWORD *)(v51 + 16);
          v55 = *(_OWORD *)(v51 - 24);
          *(_OWORD *)v51 = *(_OWORD *)(v51 - 40);
          *(_OWORD *)(v51 + 16) = v55;
          *(_QWORD *)(v51 + 32) = *(_QWORD *)(v51 - 8);
          *(_OWORD *)(v51 - 40) = v54;
          *(_OWORD *)(v51 - 24) = v53;
          *(_QWORD *)(v51 - 8) = v52;
          v40 -= 40;
          if (v14 == ++v39)
            goto LABEL_54;
        }
        swift_bridgeObjectRelease_n();
        __swift_destroy_boxed_opaque_existential_1(v47);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
        sub_1BA4A2E80((uint64_t)&v131, (uint64_t (*)(_QWORD))v46);
        sub_1BA4A2E80((uint64_t)&v133, (uint64_t (*)(_QWORD))v46);
        v38 = v46;
LABEL_53:
        v2 = v41;
LABEL_54:
        ++v14;
        v13 = v121;
        v37 = v123 + 40;
      }
      while (v126 + 1 != v120);
      v14 = v120;
      v10 = v135;
      v11 = v117;
    }
LABEL_65:
    if (v14 < v13)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v57 = *((_QWORD *)v11 + 2);
    v56 = *((_QWORD *)v11 + 3);
    v12 = v57 + 1;
    if (v57 >= v56 >> 1)
      v11 = sub_1BACAA368((char *)(v56 > 1), v57 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v58 = v11 + 32;
    v59 = &v11[16 * v57 + 32];
    *(_QWORD *)v59 = v13;
    *((_QWORD *)v59 + 1) = v14;
    v127 = v14;
    if (v57)
    {
      while (1)
      {
        v60 = v12 - 1;
        if (v12 >= 4)
        {
          v65 = &v58[16 * v12];
          v66 = *((_QWORD *)v65 - 8);
          v67 = *((_QWORD *)v65 - 7);
          v71 = __OFSUB__(v67, v66);
          v68 = v67 - v66;
          if (v71)
            goto LABEL_132;
          v70 = *((_QWORD *)v65 - 6);
          v69 = *((_QWORD *)v65 - 5);
          v71 = __OFSUB__(v69, v70);
          v63 = v69 - v70;
          v64 = v71;
          if (v71)
            goto LABEL_133;
          v72 = v12 - 2;
          v73 = &v58[16 * v12 - 32];
          v75 = *(_QWORD *)v73;
          v74 = *((_QWORD *)v73 + 1);
          v71 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          if (v71)
            goto LABEL_135;
          v71 = __OFADD__(v63, v76);
          v77 = v63 + v76;
          if (v71)
            goto LABEL_138;
          if (v77 >= v68)
          {
            v95 = &v58[16 * v60];
            v97 = *(_QWORD *)v95;
            v96 = *((_QWORD *)v95 + 1);
            v71 = __OFSUB__(v96, v97);
            v98 = v96 - v97;
            if (v71)
              goto LABEL_142;
            v88 = v63 < v98;
            goto LABEL_102;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v89 = *((_QWORD *)v11 + 4);
            v90 = *((_QWORD *)v11 + 5);
            v71 = __OFSUB__(v90, v89);
            v82 = v90 - v89;
            v83 = v71;
            goto LABEL_96;
          }
          v62 = *((_QWORD *)v11 + 4);
          v61 = *((_QWORD *)v11 + 5);
          v71 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          v64 = v71;
        }
        if ((v64 & 1) != 0)
          goto LABEL_134;
        v72 = v12 - 2;
        v78 = &v58[16 * v12 - 32];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v81 = __OFSUB__(v79, v80);
        v82 = v79 - v80;
        v83 = v81;
        if (v81)
          goto LABEL_137;
        v84 = &v58[16 * v60];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v71 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v71)
          goto LABEL_140;
        if (__OFADD__(v82, v87))
          goto LABEL_141;
        if (v82 + v87 >= v63)
        {
          v88 = v63 < v87;
LABEL_102:
          if (v88)
            v60 = v72;
          goto LABEL_104;
        }
LABEL_96:
        if ((v83 & 1) != 0)
          goto LABEL_136;
        v91 = &v58[16 * v60];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v71 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v71)
          goto LABEL_139;
        if (v94 < v82)
          goto LABEL_15;
LABEL_104:
        v99 = v60 - 1;
        if (v60 - 1 >= v12)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        v100 = v2;
        v101 = *v2;
        if (!*v2)
          goto LABEL_154;
        v102 = v11;
        v103 = &v58[16 * v99];
        v104 = v58;
        v105 = *(_QWORD *)v103;
        v106 = v104;
        v107 = v60;
        v108 = &v104[16 * v60];
        v109 = *((_QWORD *)v108 + 1);
        sub_1BA966B34((char *)(v101 + 40 * *(_QWORD *)v103), (char *)(v101 + 40 * *(_QWORD *)v108), v101 + 40 * v109, __dst);
        if (v1)
          goto LABEL_125;
        if (v109 < v105)
          goto LABEL_129;
        if (v107 > *((_QWORD *)v102 + 2))
          goto LABEL_130;
        *(_QWORD *)v103 = v105;
        *(_QWORD *)&v106[16 * v99 + 8] = v109;
        v110 = *((_QWORD *)v102 + 2);
        if (v107 >= v110)
          goto LABEL_131;
        v58 = v106;
        v11 = v102;
        v12 = v110 - 1;
        memmove(v108, v108 + 16, 16 * (v110 - 1 - v107));
        *((_QWORD *)v102 + 2) = v110 - 1;
        v88 = v110 > 2;
        v2 = v100;
        v10 = v135;
        if (!v88)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v2[1];
    v9 = v127;
    if (v127 >= v3)
    {
      v8 = v118;
      goto LABEL_114;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BA96691C(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  _BYTE v23[32];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = result;
  v28 = a3;
  if (a3 != a2)
  {
    v5 = 40 * v28;
LABEL_6:
    v6 = v20;
    v21 = v5;
    while (1)
    {
      v7 = *a4 + v5;
      sub_1BA4C2DD8(v7, (uint64_t)&v26, (uint64_t (*)(_QWORD))sub_1BA865180);
      sub_1BA4C2DD8(v7 - 40, (uint64_t)&v24, (uint64_t (*)(_QWORD))sub_1BA865180);
      v22[4] = v26;
      sub_1BA747A10((uint64_t)&v27, (uint64_t)v23);
      v8 = sub_1BB8729A0();
      v10 = v9;
      sub_1BA747A10((uint64_t)&v25, (uint64_t)v22);
      if (v8 == sub_1BB8729A0() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        sub_1BA4A2E80((uint64_t)&v24, (uint64_t (*)(_QWORD))sub_1BA865180);
        result = sub_1BA4A2E80((uint64_t)&v26, (uint64_t (*)(_QWORD))sub_1BA865180);
LABEL_5:
        v5 = v21 + 40;
        if (++v28 == a2)
          return result;
        goto LABEL_6;
      }
      v13 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      sub_1BA4A2E80((uint64_t)&v24, (uint64_t (*)(_QWORD))sub_1BA865180);
      result = sub_1BA4A2E80((uint64_t)&v26, (uint64_t (*)(_QWORD))sub_1BA865180);
      if ((v13 & 1) == 0)
        goto LABEL_5;
      if (!*a4)
        break;
      v14 = *a4 + v5;
      v15 = *(_QWORD *)(v14 + 32);
      v17 = *(_OWORD *)v14;
      v16 = *(_OWORD *)(v14 + 16);
      v18 = *(_OWORD *)(v14 - 24);
      *(_OWORD *)v14 = *(_OWORD *)(v14 - 40);
      *(_OWORD *)(v14 + 16) = v18;
      *(_QWORD *)(v14 + 32) = *(_QWORD *)(v14 - 8);
      *(_OWORD *)(v14 - 40) = v17;
      *(_OWORD *)(v14 - 24) = v16;
      *(_QWORD *)(v14 - 8) = v15;
      v5 -= 40;
      if (v28 == ++v6)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA966B34(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _OWORD *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  uint64_t result;
  _BYTE v42[32];
  uint64_t v43;
  _BYTE v44[32];
  uint64_t v45;
  _BYTE v46[32];
  uint64_t v47;
  _BYTE v48[32];
  char *v49;
  char *v50;
  char *v51;

  v4 = __dst;
  v5 = a2;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 40;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v51 = __src;
  v50 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -39)
    {
      if (__dst != a2 || &a2[40 * v10] <= __dst)
        memmove(__dst, a2, 40 * v10);
      v25 = &v4[40 * v10];
      v49 = v25;
      v51 = v5;
      if (__src < v5 && v9 >= 40)
      {
        v26 = a3 - 40;
        do
        {
          sub_1BA4C2DD8((uint64_t)(v25 - 40), (uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA865180);
          v27 = v5 - 40;
          sub_1BA4C2DD8((uint64_t)(v5 - 40), (uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1BA865180);
          v43 = v47;
          sub_1BA747A10((uint64_t)v48, (uint64_t)v44);
          v28 = sub_1BB8729A0();
          v30 = v29;
          sub_1BA747A10((uint64_t)v46, (uint64_t)v42);
          if (v28 == sub_1BB8729A0() && v30 == v31)
            v33 = 0;
          else
            v33 = sub_1BB874398();
          v34 = (char *)(v26 + 40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
          sub_1BA4A2E80((uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1BA865180);
          sub_1BA4A2E80((uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA865180);
          if ((v33 & 1) != 0)
          {
            if (v34 != v5 || v26 >= (unint64_t)v5)
            {
              v35 = *(_OWORD *)v27;
              v36 = *(_OWORD *)(v5 - 24);
              *(_QWORD *)(v26 + 32) = *((_QWORD *)v5 - 1);
              *(_OWORD *)v26 = v35;
              *(_OWORD *)(v26 + 16) = v36;
            }
            v51 -= 40;
            v25 = v49;
          }
          else
          {
            v37 = v49;
            v25 = v49 - 40;
            v49 -= 40;
            if (v34 < v37 || v26 >= (unint64_t)v37 || v34 != v37)
            {
              v38 = *(_OWORD *)v25;
              v39 = *(_OWORD *)(v37 - 24);
              *(_QWORD *)(v26 + 32) = *((_QWORD *)v37 - 1);
              *(_OWORD *)v26 = v38;
              *(_OWORD *)(v26 + 16) = v39;
            }
            v27 = v5;
          }
          if (v25 <= v4)
            break;
          v26 -= 40;
          v5 = v27;
        }
        while (v27 > __src);
      }
LABEL_51:
      sub_1BACAA82C((void **)&v51, (const void **)&v50, &v49);
      return 1;
    }
  }
  else if (v7 >= -39)
  {
    if (__dst != __src || &__src[40 * v8] <= __dst)
      memmove(__dst, __src, 40 * v8);
    v11 = (unint64_t)&v4[40 * v8];
    v49 = (char *)v11;
    if ((unint64_t)v5 < a3 && v7 >= 40)
    {
      while (1)
      {
        sub_1BA4C2DD8((uint64_t)v5, (uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA865180);
        sub_1BA4C2DD8((uint64_t)v4, (uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1BA865180);
        v43 = v47;
        sub_1BA747A10((uint64_t)v48, (uint64_t)v44);
        v12 = sub_1BB8729A0();
        v14 = v13;
        sub_1BA747A10((uint64_t)v46, (uint64_t)v42);
        if (v12 == sub_1BB8729A0() && v14 == v15)
          break;
        v17 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
        sub_1BA4A2E80((uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1BA865180);
        sub_1BA4A2E80((uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA865180);
        if ((v17 & 1) == 0)
          goto LABEL_18;
        v18 = v51;
        v19 = (unint64_t)(v5 + 40);
        if (v51 >= v5 && (unint64_t)v51 < v19 && v51 == v5)
        {
          v18 = v5;
        }
        else
        {
          v20 = *(_OWORD *)v5;
          v21 = *((_OWORD *)v5 + 1);
          *((_QWORD *)v51 + 4) = *((_QWORD *)v5 + 4);
          *v18 = v20;
          v18[1] = v21;
        }
LABEL_22:
        v51 = (char *)v18 + 40;
        v4 = v50;
        if ((unint64_t)v50 < v11)
        {
          v5 = (char *)v19;
          if (v19 < a3)
            continue;
        }
        goto LABEL_51;
      }
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      sub_1BA4A2E80((uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1BA865180);
      sub_1BA4A2E80((uint64_t)&v47, (uint64_t (*)(_QWORD))sub_1BA865180);
LABEL_18:
      v18 = v51;
      v22 = v50 + 40;
      if (v51 != v50 || v51 >= v22)
      {
        v23 = *(_OWORD *)v50;
        v24 = *((_OWORD *)v50 + 1);
        *((_QWORD *)v51 + 4) = *((_QWORD *)v50 + 4);
        *v18 = v23;
        v18[1] = v24;
      }
      v50 = v22;
      v19 = (unint64_t)v5;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BA967028(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8378F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA96704C()
{
  unint64_t result;

  result = qword_1ED3D0110;
  if (!qword_1ED3D0110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFont, &type metadata for FormatFont);
    atomic_store(result, (unint64_t *)&qword_1ED3D0110);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFont()
{
  return &type metadata for FormatFont;
}

uint64_t sub_1BA9670A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BA9670D4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  _QWORD *v79;
  uint64_t v81;
  id v82;
  __int128 v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t inited;
  _OWORD v89[11];
  uint64_t v90;
  _QWORD v91[4];
  _OWORD v92[2];
  uint64_t v93;
  _OWORD v94[2];
  uint64_t v95;
  _OWORD v96[2];
  uint64_t v97;

  v2 = type metadata accessor for FormatInspectionItem(0);
  v86 = *(_QWORD *)(v2 - 8);
  v87 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v81 - v7;
  v9 = objc_msgSend(a1, sel_fontDescriptor, v6);
  v10 = objc_msgSend(v9, sel_fontAttributes);

  type metadata accessor for AttributeName(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3C0460, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BB87BDD4);
  sub_1BB87276C();

  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BA85CDEC(v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v96[0] = v12;
  sub_1BA965EE0((_QWORD **)v96);
  v82 = a1;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)&v96[0];
  v14 = *(_QWORD *)(*(_QWORD *)&v96[0] + 16);
  if (v14)
  {
    v93 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A248(0, v14, 0);
    v81 = v13;
    v15 = v13 + 32;
    inited = (uint64_t)v94 + 8;
    v84 = v91;
    v85 = (uint64_t)v96 + 8;
    *(_QWORD *)&v83 = v4 + 2;
    do
    {
      v16 = (uint64_t)v8;
      sub_1BA4C2DD8(v15, (uint64_t)v96, (uint64_t (*)(_QWORD))sub_1BA865180);
      *(_QWORD *)&v94[0] = *(_QWORD *)&v96[0];
      v17 = v85;
      sub_1BA747A10(v85, inited);
      v18 = sub_1BB8729A0();
      v20 = v19;
      v21 = v17;
      v22 = v84;
      sub_1BA747A10(v21, (uint64_t)v84);
      sub_1BA76EAE0(v22, v92);
      sub_1BA967B04((uint64_t)v92, (uint64_t)&v90);
      if (v91[2])
      {
        sub_1BA967BB4((uint64_t)&v90, (uint64_t)v89);
        sub_1BA967B60((uint64_t)v92);
        v23 = v87;
        v24 = (_OWORD *)((char *)v4 + *(int *)(v87 + 24));
        v25 = v89[1];
        *v24 = v89[0];
        v24[1] = v25;
        v26 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v24, 0, 1, v26);
        *v4 = v18;
        v4[1] = v20;
        v27 = v83;
        *(_QWORD *)v83 = 0;
        *(_QWORD *)(v27 + 8) = 0;
        v28 = (char *)v4 + *(int *)(v23 + 28);
        *(_QWORD *)v28 = 0;
        *((_QWORD *)v28 + 1) = 0;
        v28[16] = -1;
        sub_1BA967BF0((uint64_t)&v90);
      }
      else
      {
        sub_1BA967B60((uint64_t)v92);
        v29 = v87;
        v30 = (char *)v4 + *(int *)(v87 + 24);
        v31 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
        *v4 = v18;
        v4[1] = v20;
        v32 = v83;
        *(_QWORD *)v83 = 0;
        *(_QWORD *)(v32 + 8) = 0;
        v33 = (char *)v4 + *(int *)(v29 + 28);
        *(_QWORD *)v33 = 0;
        *((_QWORD *)v33 + 1) = 0;
        v33[16] = -1;
      }
      v8 = (char *)v16;
      sub_1BA5193C4((uint64_t)v4, v16, type metadata accessor for FormatInspectionItem);
      __swift_destroy_boxed_opaque_existential_1(inited);
      sub_1BA4A2E80((uint64_t)v96, (uint64_t (*)(_QWORD))sub_1BA865180);
      v34 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A248(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v93;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1BAC7A248(v35 > 1, v36 + 1, 1);
        v34 = v93;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      sub_1BA5193C4(v16, v34+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v36, type metadata accessor for FormatInspectionItem);
      v15 += 40;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    v34 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  v83 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v85 = v37;
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v81 = *(_QWORD *)(v38 + 72);
  v40 = v81;
  v41 = swift_allocObject();
  v84 = (_QWORD *)v41;
  *(_OWORD *)(v41 + 16) = xmmword_1BB87FAA0;
  v42 = (_QWORD *)(v41 + v39);
  v43 = v82;
  v44 = objc_msgSend(v82, sel_familyName);
  v45 = sub_1BB8729A0();
  v47 = v46;

  sub_1BAAF7494(0x4E20796C696D6146, 0xEB00000000656D61, v45, v47, v42);
  v48 = v87;
  v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56);
  v49(v42, 0, 1, v87);
  v50 = (_QWORD *)((char *)v42 + v40);
  v51 = objc_msgSend(v43, sel_fontName);
  v52 = sub_1BB8729A0();
  v54 = v53;

  sub_1BAAF7494(0x6D614E20746E6F46, 0xE900000000000065, v52, v54, v50);
  v49(v50, 0, 1, v48);
  v55 = v81;
  v56 = 2 * v81;
  objc_msgSend(v43, sel_pointSize);
  sub_1BAAF3A18(0x695320746E696F50, 0xEA0000000000657ALL, v57, 0, (_QWORD *)((char *)v42 + v56));
  v58 = v48;
  v49((_QWORD *)((char *)v42 + v56), 0, 1, v48);
  objc_msgSend(v43, sel_lineHeight);
  sub_1BAAF3A18(0x69654820656E694CLL, 0xEB00000000746867, v59, 0, (_QWORD *)((char *)v42 + v56 + v55));
  v49((_QWORD *)((char *)v42 + v56 + v55), 0, 1, v48);
  v60 = v42;
  objc_msgSend(v43, sel_ascender);
  sub_1BAAF3A18(0x7265646E65637341, 0xE800000000000000, v61, 0, (_QWORD *)((char *)v42 + 4 * v55));
  v49((_QWORD *)((char *)v42 + 4 * v55), 0, 1, v58);
  objc_msgSend(v43, sel_descender);
  sub_1BAAF3A18(0x65646E6563736544, 0xE900000000000072, v62, 0, (_QWORD *)((char *)v42 + 5 * v55));
  v49((_QWORD *)((char *)v42 + 5 * v55), 0, 1, v58);
  objc_msgSend(v43, sel_capHeight);
  sub_1BAAF3A18(0x6769654820706143, 0xEA00000000007468, v63, 0, (_QWORD *)((char *)v42 + 6 * v55));
  v49((_QWORD *)((char *)v42 + 6 * v55), 0, 1, v58);
  v64 = v55;
  v55 *= 8;
  v65 = v64;
  v66 = (_QWORD *)((char *)v60 + v55 - v64);
  objc_msgSend(v43, sel_leading);
  sub_1BAAF3A18(0x676E696461654CLL, 0xE700000000000000, v67, 0, v66);
  v49(v66, 0, 1, v58);
  objc_msgSend(v43, sel_xHeight);
  sub_1BAAF3A18(0x74686769654878, 0xE700000000000000, v68, 0, (_QWORD *)((char *)v60 + v55));
  v49((_QWORD *)((char *)v60 + v55), 0, 1, v58);
  v69 = (_QWORD *)((char *)v60 + v55 + v65);
  sub_1BA5B089C(0, (unint64_t *)&qword_1EF2A9CD0, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v70 = swift_initStackObject();
  *(_OWORD *)(v70 + 16) = v83;
  v71 = sub_1BA97461C(v34);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x7475626972747441, 0xEA00000000007365, 0, 0, v71, v94);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v70 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v70 + 64) = &off_1E72D2F60;
  v72 = swift_allocObject();
  *(_QWORD *)(v70 + 32) = v72;
  *(_QWORD *)(v72 + 48) = v95;
  v73 = v94[1];
  *(_OWORD *)(v72 + 16) = v94[0];
  *(_OWORD *)(v72 + 32) = v73;
  v74 = sub_1BA9747FC(v70);
  swift_setDeallocating();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  v75 = sub_1BB6DF010(v74);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x7475626972747441, 0xEA00000000007365, (uint64_t)v75, 0, 0, v69);
  v49(v69, 0, 1, v58);
  sub_1BAF89090(0x74654D20746E6F46, 0xEC00000073636972, 0, 0, (uint64_t)v84, v96);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v76 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v76 + 64) = &off_1E72D2F60;
  v77 = swift_allocObject();
  *(_QWORD *)(v76 + 32) = v77;
  *(_QWORD *)(v77 + 48) = v97;
  v78 = v96[1];
  *(_OWORD *)(v77 + 16) = v96[0];
  *(_OWORD *)(v77 + 32) = v78;
  v79 = sub_1BB6DF010(v76);
  swift_setDeallocating();
  sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  return v79;
}

uint64_t sub_1BA967B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2AB478, (uint64_t)&type metadata for FormatInspectionBinding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA967B60(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2AB478, (uint64_t)&type metadata for FormatInspectionBinding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA967BB4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FormatModelContext(a2, a1);
  return a2;
}

uint64_t sub_1BA967BF0(uint64_t a1)
{
  destroy for FeedTag.Overrides.Image();
  return a1;
}

void sub_1BA967C24(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AB480, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA967C44(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AB488, (uint64_t (*)(uint64_t))sub_1BA967C60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA967C60()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AB490)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AB490);
  }
}

uint64_t sub_1BA967CE4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1EF2AB4A0, &qword_1EF2AB498, (uint64_t)&protocol descriptor for FormatBindingType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA967D44()
{
  uint64_t v0;

  sub_1BA967E70(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), (uint64_t (*)(void))sub_1BA967D84, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA740434);
  return swift_deallocObject();
}

uint64_t sub_1BA967D84(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (((a2 >> 59) & 2 | (a2 >> 2) & 1) != 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA967DF0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1BA967E2C(uint64_t a1)
{
  sub_1BA967E70(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), (uint64_t (*)(void))sub_1BA967EC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA740408);
  return a1;
}

uint64_t sub_1BA967E70(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      result = a7();
      break;
    case 3:
      result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      result = sub_1BA967F18(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA967EC0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (((a2 >> 59) & 2 | (a2 >> 2) & 1) != 3)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA967F18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v7;
  unsigned int v8;

  if ((a6 & 1) != 0)
    v7 = 2;
  else
    v7 = 0;
  v8 = v7 & 0xFFFFFFFE | (a2 >> 1) & 1;
  switch(v8)
  {
    case 2u:
      return a7(a2, a3, a4, a5);
    case 1u:
      return ((uint64_t (*)(uint64_t, unint64_t))a7)(result, a2 & 0xFFFFFFFFFFFFFFFDLL);
    case 0u:
      return ((uint64_t (*)(void))a7)();
  }
  return result;
}

uint64_t sub_1BA967F60()
{
  uint64_t v0;

  sub_1BA967F18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA967D84);
  return swift_deallocObject();
}

uint64_t sub_1BA967F98(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1BA967FD4(uint64_t a1)
{
  sub_1BA967F18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA967EC0);
  return a1;
}

uint64_t sub_1BA968010()
{
  uint64_t v0;

  sub_1BA60DFC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BA96803C()
{
  return objectdestroy_26Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF818);
}

uint64_t sub_1BA968048(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

uint64_t sub_1BA968084()
{
  return objectdestroy_29Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t (*)(uint64_t, uint64_t, char)))sub_1BA856F00);
}

uint64_t sub_1BA968090()
{
  uint64_t v0;

  sub_1BA967D84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BA9680B8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BA9680D4 + 4 * byte_1BB88832B[(a3 >> 4) & 3]))();
}

uint64_t sub_1BA9680D4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BA9680DC(a1, a2, a3 & 0xCF);
}

uint64_t sub_1BA9680DC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BA69C808(a1, a2, a3 & 1);
}

uint64_t sub_1BA9680E4()
{
  return objectdestroy_26Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA968124);
}

uint64_t objectdestroy_26Tm(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64));
  return swift_deallocObject();
}

uint64_t sub_1BA968124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (!a7)
    return sub_1BA7331A8(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA968134(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

uint64_t sub_1BA968170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (!a7)
    return sub_1BA7336E0(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA968180(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  if (a4 <= 3u)
    return sub_1BA968194(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA968194(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu)
    return sub_1BA9680DC(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA9681A8()
{
  return objectdestroy_29Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t (*)(uint64_t, uint64_t, char)))sub_1BA856ECC);
}

uint64_t objectdestroy_29Tm(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t (*)(uint64_t result, uint64_t a2, char a3)))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), sub_1BA7EDFFC);
  return swift_deallocObject();
}

uint64_t sub_1BA9681EC()
{
  uint64_t v0;

  sub_1BA739218(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64), (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
  return swift_deallocObject();
}

uint64_t sub_1BA968240(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  if (a4 <= 3u)
    return sub_1BA968254(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA968254(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu)
    return sub_1BA968268(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA968268(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BA69C828(a1, a2, a3 & 1);
}

uint64_t sub_1BA968270(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

uint64_t sub_1BA9682AC(uint64_t a1)
{
  sub_1BA739218(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48), (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
  return a1;
}

unint64_t sub_1BA968308()
{
  unint64_t result;

  result = qword_1EF2AB4A8;
  if (!qword_1EF2AB4A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1D18, &type metadata for FormatDecorationContext.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2AB4A8);
  }
  return result;
}

uint64_t sub_1BA96834C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    sub_1BA65E330();
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1BB888440;
    v3 = (void *)objc_opt_self();
    *(_QWORD *)(v1 + 32) = objc_msgSend(v3, sel_systemBlueColor);
    *(_QWORD *)(v1 + 40) = objc_msgSend(v3, sel_systemRedColor);
    *(_QWORD *)(v1 + 48) = objc_msgSend(v3, sel_systemGreenColor);
    *(_QWORD *)(v1 + 56) = objc_msgSend(v3, sel_systemCyanColor);
    *(_QWORD *)(v1 + 64) = objc_msgSend(v3, sel_systemGrayColor);
    *(_QWORD *)(v1 + 72) = objc_msgSend(v3, sel_systemPinkColor);
    *(_QWORD *)(v1 + 80) = objc_msgSend(v3, sel_systemPurpleColor);
    *(_QWORD *)(v1 + 88) = objc_msgSend(v3, sel_systemMintColor);
    *(_QWORD *)(v1 + 96) = objc_msgSend(v3, sel_systemIndigoColor);
    *(_QWORD *)(v1 + 104) = objc_msgSend(v3, sel_systemOrangeColor);
    *(_QWORD *)(v1 + 112) = objc_msgSend(v3, sel_systemBrownColor);
    *(_QWORD *)(v1 + 120) = objc_msgSend(v3, sel_systemTealColor);
    sub_1BB872DCC();
    *(_QWORD *)(v2 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA968538(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = swift_retain();
  v5 = sub_1BB77E184(v4, v3);
  swift_endAccess();
  swift_release();
  if (v5)
    goto LABEL_9;
  v6 = sub_1BA96834C();
  if (v6 >> 62)
  {
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) != 0)
      goto LABEL_16;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  if (!HIDWORD(v7))
  {
    v8 = arc4random_uniform(v7);
    v9 = sub_1BA96834C();
    if ((v9 & 0xC000000000000001) != 0)
    {
      v10 = (id)MEMORY[0x1BCCE4630](v8, v9);
    }
    else
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) <= v8)
      {
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    v5 = v10;
    swift_bridgeObjectRelease();
LABEL_9:
    swift_beginAccess();
    swift_retain();
    sub_1BA968784((uint64_t)v5, a1);
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    v11 = *(_QWORD *)(v1 + 16);
    v12 = swift_retain();
    v13 = sub_1BB77E184(v12, v11);
    swift_endAccess();
    swift_release();
    if (v13)
      return (uint64_t)v13;
    goto LABEL_15;
  }
LABEL_16:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BA968758()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA968784(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_1BB873BF4();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_1BA968A70(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BB4BE720(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA968824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BA968DBC();
    v2 = sub_1BB873F60();
    v18 = v2;
    sub_1BB873E70();
    v3 = sub_1BB873E94();
    if (v3)
    {
      v4 = v3;
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      do
      {
        swift_dynamicCast();
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99A0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BB4B0684(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BB8738AC();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BB873E94();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1BA968A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a2)
  {
    sub_1BA968CEC();
    v2 = sub_1BB873F60();
    v17 = v2;
    sub_1BB873E70();
    if (sub_1BB873E94())
    {
      type metadata accessor for GroupLayoutKey();
      do
      {
        swift_dynamicCast();
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
        swift_dynamicCast();
        v2 = v17;
        v10 = *(_QWORD *)(v17 + 16);
        if (*(_QWORD *)(v17 + 24) <= v10)
        {
          sub_1BB4B0CF0(v10 + 1, 1);
          v2 = v17;
        }
        sub_1BB8745CC();
        sub_1BB872A90();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        swift_bridgeObjectRelease();
        result = sub_1BB874608();
        v4 = v2 + 64;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 64 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v11 = 0;
          v12 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v12 && (v11 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v13 = v7 == v12;
            if (v7 == v12)
              v7 = 0;
            v11 |= v13;
            v14 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v14 == -1);
          v8 = __clz(__rbit64(~v14)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        v9 = 8 * v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v9) = v16;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v9) = v15;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BB873E94());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

void sub_1BA968CEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AB4B0)
  {
    type metadata accessor for GroupLayoutKey();
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9990);
    sub_1BA968D74();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AB4B0);
  }
}

unint64_t sub_1BA968D74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB4B8;
  if (!qword_1EF2AB4B8)
  {
    v1 = type metadata accessor for GroupLayoutKey();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GroupLayoutKey, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB4B8);
  }
  return result;
}

void sub_1BA968DBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EA88)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9990);
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99A0);
    sub_1BA968E54();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EA88);
  }
}

unint64_t sub_1BA968E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EA68;
  if (!qword_1ED39EA68)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9990);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EA68);
  }
  return result;
}

uint64_t sub_1BA968EAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;

  v2 = v1;
  v4 = sub_1BB86CCE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if ((_DWORD)result == *MEMORY[0x1E0CEEB20])
  {
    *a1 = 40;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0CEEA00])
  {
    *a1 = 20;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0CEEA08])
  {
    *a1 = 16;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0CEEB00])
    goto LABEL_8;
  if ((_DWORD)result == *MEMORY[0x1E0CEEAD8])
  {
    *a1 = 30;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB08])
  {
    *a1 = 27;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB18])
  {
    *a1 = 10;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB30])
  {
    *a1 = 14;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAE0])
  {
    *a1 = 21;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA70])
  {
    *a1 = 9;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA30])
  {
    *a1 = 11;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB10])
  {
    *a1 = 26;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAB8])
  {
    *a1 = 18;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAC0])
  {
    *a1 = 22;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB70])
  {
    *a1 = 37;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB78])
  {
    *a1 = 39;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAB0])
  {
    *a1 = 33;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEB80])
  {
    *a1 = 3;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA78])
  {
    *a1 = 34;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA20])
  {
    *a1 = 31;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA38])
  {
    *a1 = 28;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA40])
  {
    *a1 = 29;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAC8])
  {
    *a1 = 13;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA88])
  {
    *a1 = 35;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAE8])
  {
    *a1 = 19;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAF0])
  {
    *a1 = 23;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEAD0])
  {
    *a1 = 17;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA48])
  {
    *a1 = 42;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA28])
  {
    *a1 = 43;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEE9F8])
  {
    *a1 = 44;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA60])
  {
    *a1 = 5;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CEEA68])
  {
    *a1 = 2;
  }
  else
  {
    if ((_DWORD)result == *MEMORY[0x1E0CEEAF8])
    {
LABEL_8:
      *a1 = 25;
      return result;
    }
    if ((_DWORD)result == *MEMORY[0x1E0CEEB90])
    {
      *a1 = 45;
    }
    else
    {
      *a1 = 0;
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  return result;
}

uint64_t sub_1BA969388()
{
  uint64_t v0;

  sub_1BB86DEE8();
  sub_1BA7114A0();
  v0 = sub_1BB873B04();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t dispatch thunk of GroupLayoutFactoryType.groupLayoutRequirements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of GroupLayoutFactoryType.groupLayoutPriority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of GroupLayoutFactoryType.groupLayoutContentSizeCategory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of GroupLayoutFactoryType.bind(from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of BoundGroupLayoutFactoryType.boundItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BoundGroupLayoutFactoryType.creator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BoundGroupLayoutFactoryType.layout()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1BA96946C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  char v5;
  char v6;
  uint64_t *v7;
  uint64_t *v8;
  void *v10;
  unsigned __int8 v11;

  v3 = sub_1BA7C19D0(a2, a3);
  v10 = *(void **)(v3 + 24);
  v11 = *(_BYTE *)(v3 + 32);
  sub_1BA7C26A0(v10, v11);
  v4 = (void *)sub_1BB86D75C();
  sub_1BA7C17DC();
  v6 = v5;

  sub_1BA7C2538(v10, v11);
  if ((v6 & 1) == 0)
  {
    sub_1BA7E415C();
    swift_allocError();
    v8 = v7;
    *v7 = sub_1BB86D75C();
    *((_BYTE *)v8 + 40) = 1;
    swift_willThrow();
  }
  return swift_release();
}

void sub_1BA969550(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = *((_BYTE *)a1 + 8);
  sub_1BA7C19D0(a3, a4);
  LOBYTE(v8) = v5;
  type metadata accessor for GroupLayoutContext();
  v6 = objc_msgSend((id)objc_opt_self(), sel_mainBundle, v4, v8);
  sub_1BB3A0170((uint64_t)&v7);
  swift_release();

}

id sub_1BA969608(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_editor] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadNavigationController] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadDiffNavigationController] = a3;
  v19.receiver = v3;
  v19.super_class = ObjectType;
  swift_retain();
  v8 = a2;
  v9 = a3;
  v10 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  sub_1BA65E330();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v9;
  sub_1BB872DCC();
  sub_1BA969BD0();
  v12 = v10;
  v13 = v8;
  v14 = v9;
  v15 = v12;
  v16 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setViewControllers_, v16);

  v17 = v15;
  objc_msgSend(v17, sel_setDelegate_, v17);

  swift_release();
  return v17;
}

void sub_1BA9697D4(void *a1, _BYTE *a2)
{
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  if ((*a2 & 1) == 0)
  {
    v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v5[4] = sub_1BA969CE0;
    v5[5] = v3;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 1107296256;
    v5[2] = sub_1BA4F1DD8;
    v5[3] = &block_descriptor_5;
    v4 = _Block_copy(v5);
    swift_release();
    objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v4);
    _Block_release(v4);
  }
}

uint64_t sub_1BA9699C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LOBYTE(v6) = 0;
  *((_QWORD *)&v6 + 1) = 0xD000000000000010;
  v7 = 0x80000001BB964B40;
  v8 = 0xD000000000000036;
  v9 = 0x80000001BB964B60;
  v1 = a1 + 16;
  v10 = 0;
  v11 = 0;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_editor);
    swift_retain();

    v5 = (_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
    swift_beginAccess();
    if (*v5)
    {
      swift_retain();
      swift_release();
      sub_1BB263178(&v6);
    }
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatUploadMainViewController()
{
  return objc_opt_self();
}

unint64_t sub_1BA969BD0()
{
  unint64_t result;

  result = qword_1ED3C0420;
  if (!qword_1ED3C0420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3C0420);
  }
  return result;
}

void *sub_1BA969C0C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_presentedViewController);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadNavigationController];
  if (v1)
  {
    v3 = v1;
    sub_1BA969BD0();
    v4 = v2;
    v5 = v3;
    LOBYTE(v3) = sub_1BB8738B8();

    if ((v3 & 1) != 0)
      objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 0, 0);
  }
  return v2;
}

uint64_t sub_1BA969CBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA969CE0()
{
  uint64_t v0;

  return sub_1BA9699C0(v0);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v18 = type metadata accessor for FormatPurchaseLandingPageData();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v23 = a2[1];
          *a1 = *a2;
          a1[1] = v23;
          v24 = *(int *)(v18 + 20);
          __dst = (char *)a1 + v24;
          v25 = (char *)a2 + v24;
          v26 = type metadata accessor for FormatPostPurchaseData();
          v27 = *(_QWORD *)(v26 - 8);
          v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
          swift_bridgeObjectRetain();
          if (v28(v25, 1, v26))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            v30 = sub_1BB86C67C();
            v31 = *(_QWORD *)(v30 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 2, v30))
            {
              v32 = v27;
              memcpy(__dst, v25, *(_QWORD *)(v27 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v25, v30);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 2, v30);
              v32 = v27;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v26);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_25:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = type metadata accessor for FormatPostPurchaseData();
        v14 = *(_QWORD *)(v13 - 8);
        v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        if (v15(v12, 1, v13))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          v21 = sub_1BB86C67C();
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
          {
            memcpy(v11, v12, *(_QWORD *)(v14 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v11, v12, v21);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 2, v21);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for FeedAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    type metadata accessor for FormatPurchaseData(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v4 = type metadata accessor for FormatPurchaseLandingPageData();
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      v3 = *(int *)(v4 + 20);
    }
    else
    {
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    }
    v5 = a1 + v3;
    v6 = type metadata accessor for FormatPostPurchaseData();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
    if (!(_DWORD)result)
    {
      v7 = sub_1BB86C67C();
      v8 = *(_QWORD *)(v7 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 2, v7);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    }
  }
  return result;
}

_QWORD *initializeWithCopy for FeedAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *__dst;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for FormatPurchaseLandingPageData();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        v22 = *(int *)(v16 + 20);
        __dst = (char *)a1 + v22;
        v23 = (char *)a2 + v22;
        v24 = type metadata accessor for FormatPostPurchaseData();
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        if (v26(v23, 1, v24))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v28 = sub_1BB86C67C();
          v29 = *(_QWORD *)(v28 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v23, 2, v28))
          {
            v30 = v25;
            memcpy(__dst, v23, *(_QWORD *)(v25 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v23, v28);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 2, v28);
            v30 = v25;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v24);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v19 = sub_1BB86C67C();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 2, v19))
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v10, v11, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v10, 0, 2, v19);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for FeedAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *__dst;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v15 = type metadata accessor for FormatPurchaseLandingPageData();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          v20 = *(int *)(v15 + 20);
          __dst = (char *)a1 + v20;
          v21 = (char *)a2 + v20;
          v22 = type metadata accessor for FormatPostPurchaseData();
          v23 = *(_QWORD *)(v22 - 8);
          v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
          swift_bridgeObjectRetain();
          if (v24(v21, 1, v22))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            v26 = sub_1BB86C67C();
            v27 = *(_QWORD *)(v26 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 2, v26))
            {
              v28 = v23;
              memcpy(__dst, v21, *(_QWORD *)(v23 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v21, v26);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 2, v26);
              v28 = v23;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v22);
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = type metadata accessor for FormatPostPurchaseData();
        v12 = *(_QWORD *)(v11 - 8);
        v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        if (v13(v10, 1, v11))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v18 = sub_1BB86C67C();
          v19 = *(_QWORD *)(v18 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 2, v18))
          {
            memcpy(v9, v10, *(_QWORD *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v9, v10, v18);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 2, v18);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for FeedAction(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AB5D0);
}

_OWORD *initializeWithTake for FeedAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void (*v28)(void *, _QWORD, uint64_t, uint64_t);
  void *__dst;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for FormatPurchaseLandingPageData();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v19 = *(int *)(v14 + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for FormatPostPurchaseData();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          __dst = v20;
          v25 = sub_1BB86C67C();
          v26 = *(_QWORD *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 2, v25))
          {
            v27 = __dst;
            memcpy(__dst, v21, *(_QWORD *)(v23 + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v26 + 32))(__dst, v21, v25);
            v28 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56);
            v27 = __dst;
            v28(__dst, 0, 2, v25);
          }
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for FormatPostPurchaseData();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v17 = sub_1BB86C67C();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
        {
          memcpy(v9, v10, *(_QWORD *)(v12 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FeedAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void (*v28)(void *, _QWORD, uint64_t, uint64_t);
  void *__dst;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v14 = type metadata accessor for FormatPurchaseLandingPageData();
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v19 = *(int *)(v14 + 20);
          v20 = (char *)a1 + v19;
          v21 = (char *)a2 + v19;
          v22 = type metadata accessor for FormatPostPurchaseData();
          v23 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          }
          else
          {
            __dst = v20;
            v25 = sub_1BB86C67C();
            v26 = *(_QWORD *)(v25 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 2, v25))
            {
              v27 = __dst;
              memcpy(__dst, v21, *(_QWORD *)(v23 + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v26 + 32))(__dst, v21, v25);
              v28 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56);
              v27 = __dst;
              v28(__dst, 0, 2, v25);
            }
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = type metadata accessor for FormatPostPurchaseData();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v17 = sub_1BB86C67C();
          v18 = *(_QWORD *)(v17 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
          {
            memcpy(v9, v10, *(_QWORD *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BA96AF08()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatPurchaseData(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BA96AF78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  if (!swift_getEnumCaseMultiPayload())
  {
    v8 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v9 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for FormatPurchaseLandingPageData();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        v25 = *(int *)(v19 + 20);
        __dst = (char *)a1 + v25;
        v26 = (char *)a2 + v25;
        v27 = type metadata accessor for FormatPostPurchaseData();
        v28 = *(_QWORD *)(v27 - 8);
        v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        v30 = v27;
        swift_bridgeObjectRetain();
        if (v29(v26, 1, v30))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v36 = v30;
          v37 = v28;
          v32 = sub_1BB86C67C();
          v33 = *(_QWORD *)(v32 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v26, 2, v32))
          {
            v34 = v37;
            memcpy(__dst, v26, *(_QWORD *)(v37 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v26, v32);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 2, v32);
            v34 = v37;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v36);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_27:
        swift_storeEnumTagMultiPayload();
        goto LABEL_28;
      }
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for FormatPostPurchaseData();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v22 = sub_1BB86C67C();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 2, v22))
        {
          memcpy(v13, v14, *(_QWORD *)(v16 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v13, v14, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v13, 0, 2, v22);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t sub_1BA96B344(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    type metadata accessor for FeedAction(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      type metadata accessor for FormatPurchaseData(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 1)
      {
        v4 = type metadata accessor for FormatPurchaseLandingPageData();
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
        if ((_DWORD)result)
          return result;
        swift_bridgeObjectRelease();
        v3 = *(int *)(v4 + 20);
      }
      else
      {
        if ((_DWORD)result)
          return result;
        swift_bridgeObjectRelease();
        v3 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      v5 = a1 + v3;
      v6 = type metadata accessor for FormatPostPurchaseData();
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
      if (!(_DWORD)result)
      {
        v7 = sub_1BB86C67C();
        v8 = *(_QWORD *)(v7 - 8);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 2, v7);
        if (!(_DWORD)result)
          return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
      }
    }
  }
  return result;
}

_QWORD *sub_1BA96B464(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *__dst;

  if (!swift_getEnumCaseMultiPayload())
  {
    v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v7 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for FormatPurchaseLandingPageData();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v23 = *(int *)(v17 + 20);
        v37 = v18;
        __dst = (char *)a1 + v23;
        v24 = (char *)a2 + v23;
        v25 = type metadata accessor for FormatPostPurchaseData();
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        v28 = v24;
        if (v27(v24, 1, v25))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          v30 = v37;
        }
        else
        {
          v36 = v26;
          v31 = sub_1BB86C67C();
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v28, 2, v31))
          {
            v33 = v36;
            memcpy(__dst, v28, *(_QWORD *)(v36 + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v32 + 16))(__dst, v28, v31);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 2, v31);
            v33 = v36;
          }
          v34 = v25;
          v30 = v37;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v34);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v17);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for FormatPostPurchaseData();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v20 = sub_1BB86C67C();
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 2, v20))
        {
          memcpy(v11, v12, *(_QWORD *)(v14 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v11, v12, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v11, 0, 2, v20);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1BA96B810(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *__dst;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedActionInternal);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v7 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for FormatPurchaseLandingPageData();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v21 = *(int *)(v16 + 20);
        __dst = (char *)a1 + v21;
        v22 = (char *)a2 + v21;
        v23 = type metadata accessor for FormatPostPurchaseData();
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
        v26 = v23;
        swift_bridgeObjectRetain();
        if (v25(v22, 1, v26))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v32 = v26;
          v33 = v24;
          v28 = sub_1BB86C67C();
          v29 = *(_QWORD *)(v28 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 2, v28))
          {
            v30 = v33;
            memcpy(__dst, v22, *(_QWORD *)(v33 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v22, v28);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 2, v28);
            v30 = v33;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v32);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v19 = sub_1BB86C67C();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 2, v19))
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v10, v11, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v10, 0, 2, v19);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  return a1;
}

uint64_t type metadata accessor for FeedActionInternal(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AB678);
}

_OWORD *sub_1BA96BBF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  void *__dst;

  if (!swift_getEnumCaseMultiPayload())
  {
    v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v7 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for FormatPurchaseLandingPageData();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v20 = *(int *)(v15 + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = type metadata accessor for FormatPostPurchaseData();
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          __dst = v21;
          v26 = sub_1BB86C67C();
          v29 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 2, v26))
          {
            v27 = __dst;
            memcpy(__dst, v22, *(_QWORD *)(v24 + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v29 + 32))(__dst, v22, v26);
            v27 = __dst;
            (*(void (**)(void))(v29 + 56))();
          }
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v18 = sub_1BB86C67C();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v11, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 2, v18);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1BA96BF7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  void *__dst;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedActionInternal);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v7 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for FormatPurchaseLandingPageData();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v20 = *(int *)(v15 + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = type metadata accessor for FormatPostPurchaseData();
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          __dst = v21;
          v26 = sub_1BB86C67C();
          v29 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 2, v26))
          {
            v27 = __dst;
            memcpy(__dst, v22, *(_QWORD *)(v24 + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v29 + 32))(__dst, v22, v26);
            v27 = __dst;
            (*(void (**)(void))(v29 + 56))();
          }
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v18 = sub_1BB86C67C();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v11, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 2, v18);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  return a1;
}

uint64_t sub_1BA96C320()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedAction(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1BA96C38C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *__dst;
  void *__dsta;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for FeedActionInternal(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_29:
      v37 = *(int *)(a3 + 20);
      v38 = *(void **)((char *)a2 + v37);
      *(_QWORD *)((char *)a1 + v37) = v38;
      v39 = v38;
      return a1;
    }
    v9 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      goto LABEL_29;
    }
    v10 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for FormatPurchaseLandingPageData();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v42 = v20;
        v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        v26 = *(int *)(v19 + 20);
        v43 = (char *)a1 + v26;
        v27 = (char *)a2 + v26;
        v28 = type metadata accessor for FormatPostPurchaseData();
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        v31 = v28;
        swift_bridgeObjectRetain();
        __dsta = v27;
        if (v30(v27, 1, v31))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v43, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v41 = v31;
          v33 = sub_1BB86C67C();
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(__dsta, 2, v33))
          {
            v35 = v43;
            memcpy(v43, __dsta, *(_QWORD *)(v29 + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v34 + 16))(v43, __dsta, v33);
            v36 = v33;
            v35 = v43;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v43, 0, 2, v36);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v35, 0, 1, v41);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v19);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_27:
        swift_storeEnumTagMultiPayload();
        goto LABEL_28;
      }
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v13 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v13;
      v14 = (char *)a2 + v13;
      v15 = type metadata accessor for FormatPostPurchaseData();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v22 = sub_1BB86C67C();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 2, v22))
        {
          v24 = v16;
          memcpy(__dst, v14, *(_QWORD *)(v16 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v14, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 2, v22);
          v24 = v16;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  v8 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void sub_1BA96C7BC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for FeedActionInternal(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v6 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
          goto LABEL_11;
        swift_bridgeObjectRelease();
        v5 = *(int *)(v6 + 20);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_11;
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      v7 = a1 + v5;
      v8 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      {
        v9 = sub_1BB86C67C();
        v10 = *(_QWORD *)(v9 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 2, v9))
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
      }
    }
  }
LABEL_11:

}

_QWORD *sub_1BA96C8F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;

  v6 = type metadata accessor for FeedActionInternal(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
    }
    v8 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for FormatPurchaseLandingPageData();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v40 = v18;
        v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        v24 = *(int *)(v17 + 20);
        __dsta = (char *)a1 + v24;
        v25 = (char *)a2 + v24;
        v26 = type metadata accessor for FormatPostPurchaseData();
        v27 = *(_QWORD *)(v26 - 8);
        v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        v28 = v25;
        if (v41(v25, 1, v26))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          v30 = v40;
        }
        else
        {
          v39 = v27;
          v31 = sub_1BB86C67C();
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v28, 2, v31))
          {
            v33 = v39;
            memcpy(__dsta, v28, *(_QWORD *)(v39 + 64));
            v30 = v40;
            v34 = v26;
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v32 + 16))(__dsta, v28, v31);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dsta, 0, 2, v31);
            v30 = v40;
            v34 = v26;
            v33 = v39;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dsta, 0, 1, v34);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v17);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v11;
      v12 = (char *)a2 + v11;
      v13 = type metadata accessor for FormatPostPurchaseData();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v20 = sub_1BB86C67C();
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 2, v20))
        {
          v22 = v14;
          memcpy(__dst, v12, *(_QWORD *)(v14 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v12, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 2, v20);
          v22 = v14;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_27:
  v35 = *(int *)(a3 + 20);
  v36 = *(void **)((char *)a2 + v35);
  *(_QWORD *)((char *)a1 + v35) = v36;
  v37 = v36;
  return a1;
}

_QWORD *sub_1BA96CD00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *__dst;
  void *__dsta;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedActionInternal);
    v6 = type metadata accessor for FeedActionInternal(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_28;
    }
    v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    v8 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for FormatPurchaseLandingPageData();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v40 = v17;
        *a1 = *a2;
        a1[1] = a2[1];
        v22 = *(int *)(v16 + 20);
        v39 = (char *)a1 + v22;
        v23 = (char *)a2 + v22;
        v24 = type metadata accessor for FormatPostPurchaseData();
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        v27 = v24;
        swift_bridgeObjectRetain();
        __dsta = v23;
        if (v26(v23, 1, v27))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v39, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v38 = v27;
          v29 = sub_1BB86C67C();
          v30 = *(_QWORD *)(v29 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(__dsta, 2, v29))
          {
            v31 = v39;
            memcpy(v39, __dsta, *(_QWORD *)(v25 + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v30 + 16))(v39, __dsta, v29);
            v32 = v29;
            v31 = v39;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v39, 0, 2, v32);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v31, 0, 1, v38);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v10;
      v11 = (char *)a2 + v10;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v19 = sub_1BB86C67C();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 2, v19))
        {
          v21 = v13;
          memcpy(__dst, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v11, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 2, v19);
          v21 = v13;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
LABEL_28:
  v33 = *(int *)(a3 + 20);
  v34 = *(void **)((char *)a2 + v33);
  v35 = *(void **)((char *)a1 + v33);
  *(_QWORD *)((char *)a1 + v33) = v34;
  v36 = v34;

  return a1;
}

_OWORD *sub_1BA96D138(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(void *, const void *, uint64_t);
  char *v33;
  void *__dst;
  char *__dsta;

  v6 = type metadata accessor for FeedActionInternal(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_25:
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
    }
    v8 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for FormatPurchaseLandingPageData();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v21 = *(int *)(v16 + 20);
        v31 = v17;
        v33 = (char *)a1 + v21;
        v22 = (char *)a2 + v21;
        v23 = type metadata accessor for FormatPostPurchaseData();
        v24 = *(_QWORD *)(v23 - 8);
        __dsta = v22;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v33, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          v26 = v31;
        }
        else
        {
          v30 = v24;
          v27 = sub_1BB86C67C();
          v28 = *(_QWORD *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(__dsta, 2, v27))
          {
            memcpy(v33, __dsta, *(_QWORD *)(v30 + 64));
          }
          else
          {
            (*(void (**)(void))(v28 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v33, 0, 2, v27);
          }
          v26 = v31;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v23);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_24:
        swift_storeEnumTagMultiPayload();
        goto LABEL_25;
      }
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for FormatPostPurchaseData();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        __dst = v11;
        v19 = sub_1BB86C67C();
        v32 = *(void (***)(void *, const void *, uint64_t))(v19 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v32[6])(v12, 2, v19))
        {
          v20 = __dst;
          memcpy(__dst, v12, *(_QWORD *)(v14 + 64));
        }
        else
        {
          v32[4](__dst, v12, v19);
          v20 = __dst;
          ((void (*)(void))v32[7])();
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_26:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1BA96D504(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *__dst;
  char *__dsta;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedActionInternal);
    v6 = type metadata accessor for FeedActionInternal(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_28;
    }
    v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    v8 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for FormatPurchaseLandingPageData();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v36 = v17;
        *a1 = *a2;
        v21 = *(int *)(v16 + 20);
        __dsta = (char *)a1 + v21;
        v22 = (char *)a2 + v21;
        v23 = type metadata accessor for FormatPostPurchaseData();
        v24 = *(_QWORD *)(v23 - 8);
        v38 = v22;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          v26 = v36;
        }
        else
        {
          v34 = v23;
          v35 = v24;
          v27 = sub_1BB86C67C();
          v28 = *(_QWORD *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v38, 2, v27))
          {
            v29 = v35;
            v30 = __dsta;
            memcpy(__dsta, v38, *(_QWORD *)(v35 + 64));
          }
          else
          {
            v30 = __dsta;
            (*(void (**)(void))(v28 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 2, v27);
            v29 = v35;
          }
          v26 = v36;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v34);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for FormatPostPurchaseData();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        __dst = v11;
        v19 = sub_1BB86C67C();
        v37 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 2, v19))
        {
          v20 = __dst;
          memcpy(__dst, v12, *(_QWORD *)(v14 + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 32))(__dst, v12, v19);
          v20 = __dst;
          (*(void (**)(void))(v37 + 56))();
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
LABEL_28:
  v31 = *(int *)(a3 + 20);
  v32 = *(void **)((char *)a1 + v31);
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);

  return a1;
}

uint64_t sub_1BA96D8F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA96D8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FeedActionInternal(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BA96D978()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA96D984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FeedActionInternal(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FeedActionSenderInternal(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AB708);
}

uint64_t sub_1BA96DA10()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedActionInternal(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double FormatPoint.x.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double FormatPoint.y.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

BOOL static FormatPoint.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_1BA96DAC8(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t FormatPoint.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB872FDC();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 40;
}

unint64_t sub_1BA96DB84(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA96DBA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA96DBA8()
{
  unint64_t result;

  result = qword_1EF2AB740;
  if (!qword_1EF2AB740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPoint, &type metadata for FormatPoint);
    atomic_store(result, (unint64_t *)&qword_1EF2AB740);
  }
  return result;
}

unint64_t sub_1BA96DBEC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5834B4();
  a1[2] = sub_1BA5B987C();
  result = sub_1BA96DC20();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA96DC20()
{
  unint64_t result;

  result = qword_1EF2AB748;
  if (!qword_1EF2AB748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPoint, &type metadata for FormatPoint);
    atomic_store(result, (unint64_t *)&qword_1EF2AB748);
  }
  return result;
}

uint64_t sub_1BA96DC64()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB872FDC();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 40;
}

ValueMetadata *type metadata accessor for FormatPoint()
{
  return &type metadata for FormatPoint;
}

void sub_1BA96DD04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  char *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t j;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  id v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[6];

  v64 = a1;
  v2 = sub_1BB872610();
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  MEMORY[0x1E0C80A78](v2);
  v61 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB872664();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x1E0C80A78](v4);
  v58 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BB87261C();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v54 - v9;
  v11 = *(char **)(v1 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView);
  v12 = objc_msgSend(v11, sel_subviews, v8);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v13 = sub_1BB872DB4();

  v65 = v1;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v14)
      goto LABEL_10;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
      goto LABEL_10;
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_23;
  }
  for (i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v16 = (id)MEMORY[0x1BCCE4630](i, v13);
    else
      v16 = *(id *)(v13 + 8 * i + 32);
    v17 = v16;
    objc_msgSend(v16, sel_removeFromSuperview);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = 0;
  v18 = *(char **)(v65 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView);
  v19 = objc_msgSend(v18, sel_subviews);
  v20 = sub_1BB872DB4();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v21)
    {
LABEL_12:
      if (v21 >= 1)
      {
        for (j = 0; j != v21; ++j)
        {
          if ((v20 & 0xC000000000000001) != 0)
            v23 = (id)MEMORY[0x1BCCE4630](j, v20);
          else
            v23 = *(id *)(v20 + 8 * j + 32);
          v24 = v23;
          objc_msgSend(v23, sel_removeFromSuperview);

        }
        goto LABEL_19;
      }
LABEL_23:
      __break(1u);
      return;
    }
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_12;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = MEMORY[0x1E0DEE9D8];
  v26 = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = 0;
  v27 = v65;
  v28 = *(_QWORD *)(v65 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView);
  v29 = *(void **)(v28 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  v30 = sub_1BB86EB84();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v10, 1, 1, v30);
  v32 = sub_1BB3450B4((uint64_t)v10);
  sub_1BA6BF694((uint64_t)v10);
  objc_msgSend(v29, sel_setAttributedText_, v32);

  v33 = (_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *v33 = v26;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v28 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView), sel_reloadData);
  v34 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView);
  v35 = *(void **)(v34 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  v31(v10, 1, 1, v30);
  v36 = sub_1BB3450B4((uint64_t)v10);
  v37 = (uint64_t)v10;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1BA6BF694(v37);
  objc_msgSend(v35, sel_setAttributedText_, v36);

  v39 = (_QWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *v39 = v38;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v34 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView), sel_reloadData);
  v40 = *(void **)(v27 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel);
  objc_msgSend(v40, (SEL)&DebugJournalTableViewCell, 0);
  v41 = v64;
  if (v64)
  {
    swift_retain();
    sub_1BA869B04(17.0);
    v43 = v42;
    objc_msgSend(v40, (SEL)&DebugJournalTableViewCell, v42);

    objc_msgSend(v40, sel_sizeToFit);
    *(_BYTE *)(v28 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 1;
    objc_msgSend(*(id *)(v28 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_startAnimating);
    *(_BYTE *)(v34 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 1;
    objc_msgSend(*(id *)(v34 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_startAnimating);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v44 = v56;
    v45 = v55;
    v46 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, *MEMORY[0x1E0DEF530], v57);
    v47 = (void *)sub_1BB873498();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    v48 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = v41;
    *(_QWORD *)(v49 + 24) = v48;
    aBlock[4] = sub_1BA970AB8;
    aBlock[5] = v49;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_6;
    v50 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v51 = v58;
    sub_1BB872634();
    v66 = v38;
    sub_1BA571CB8();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA571C58();
    v52 = v61;
    v53 = v63;
    sub_1BB873BC4();
    MEMORY[0x1BCCE3D90](0, v51, v52, v50);
    _Block_release(v50);
    swift_release();

    (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v53);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v60);
    swift_release();
    swift_release();
  }
}

id sub_1BA96E444()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BA96E4E8()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  objc_super v38;

  v38.receiver = v0;
  v38.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  objc_msgSend(v5, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView]);

  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  objc_msgSend(v7, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView]);

  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = v9;
  objc_msgSend(v9, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView]);

  v11 = objc_msgSend(v0, sel_view);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v12 = v11;
  v37 = v3;
  objc_msgSend(v11, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView]);

  v13 = objc_msgSend(v0, sel_navigationItem);
  v36 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_statusView];
  objc_msgSend(v13, sel_setTitleView_);

  v14 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA65E330();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB8856F0;
  v16 = (void *)sub_1BB872970();
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_systemImageNamed_, v16);

  if (!v18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v20 = v0;
  v21 = objc_msgSend(v19, sel_initWithImage_style_target_action_, v18, 0, v20, sel_doToggleSidebar);

  *(_QWORD *)(v15 + 32) = v21;
  *(_QWORD *)(v15 + 40) = sub_1BA96E444();
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v22 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setLeftBarButtonItems_, v22);

  v23 = objc_msgSend(v20, sel_navigationItem);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB8856E0;
  v25 = (void *)sub_1BB872970();
  v26 = objc_msgSend(v17, sel_systemImageNamed_, v25);

  if (v26)
  {
    v27 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v28 = v20;
    v29 = objc_msgSend(v27, sel_initWithImage_style_target_action_, v26, 0, v28, sel_doDismiss);

    *(_QWORD *)(v24 + 32) = v29;
    sub_1BB872DCC();
    v30 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setRightBarButtonItems_, v30);

    v31 = objc_msgSend(v28, sel_navigationItem);
    v32 = objc_msgSend(v37, sel_secondarySystemBackgroundColor);
    sub_1BB80F468(v31, (uint64_t)v32);

    v33 = *(void **)(v36 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffStatusView_onTargetTap);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v34 = v33;

    swift_release();
    v35 = (void *)sub_1BB86F898();
    swift_allocObject();
    swift_unknownObjectWeakInit();

    swift_release();
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_1BA96EA44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BA96EA94();

  }
}

void sub_1BA96EA94()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  _QWORD v52[2];
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5718];
  sub_1BA50CAA8(0, &qword_1EF2AB7C8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5718]);
  v61 = *(_QWORD *)(v1 - 8);
  v62 = v1;
  MEMORY[0x1E0C80A78](v1);
  v63 = (char *)v52 - v2;
  v3 = sub_1BB86D2A0();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x1E0C80A78](v3);
  v60 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BCEB0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], v0);
  v57 = v5;
  v65 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)v52 - v6;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE60, (uint64_t (*)(void))sub_1BA970C64, (uint64_t)&type metadata for DebugFormatBackendEnvironment, v0);
  v53 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v52 - v9;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE70, (uint64_t (*)(void))sub_1BA970CA8, (uint64_t)&type metadata for DebugFormatUploadTarget, v0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v52 - v14;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C3230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB57C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = *(_QWORD *)(sub_1BB86D360() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v56 = *(_QWORD *)(v16 + 72);
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1BB87A390;
  sub_1BA6A7BA0(0, (unint64_t *)&qword_1EF2B16D0, (unint64_t *)&qword_1EF2C3240);
  v55 = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87D7A0;
  sub_1BA4CDF6C(0, &qword_1EF2AB7E0, (uint64_t (*)(void))sub_1BA970CA8, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E0DB5770]);
  v21 = v20;
  if (qword_1EF2A6E68 != -1)
    swift_once();
  v22 = *MEMORY[0x1E0DB5710];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v15, v22, v12);
  sub_1BA89A950();
  swift_retain();
  v23 = sub_1BB86D324();
  *(_QWORD *)(v19 + 56) = v21;
  *(_QWORD *)(v19 + 64) = sub_1BA970CEC((unint64_t *)&qword_1EF2AB7E8, &qword_1EF2AB7E0, (uint64_t (*)(void))sub_1BA970CA8, (uint64_t)&type metadata for DebugFormatUploadTarget);
  *(_QWORD *)(v19 + 32) = v23;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCF30, (uint64_t (*)(void))sub_1BA970C64, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E0DB5770]);
  v25 = v24;
  if (qword_1EF2A6E78 != -1)
    swift_once();
  v52[1] = v66 + v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v10, v22, v53);
  sub_1BA89B15C();
  swift_retain();
  v26 = sub_1BB86D324();
  *(_QWORD *)(v19 + 96) = v25;
  *(_QWORD *)(v19 + 104) = sub_1BA970CEC((unint64_t *)&qword_1EF2BCF40, (unint64_t *)&unk_1EF2BCF30, (uint64_t (*)(void))sub_1BA970C64, (uint64_t)&type metadata for DebugFormatBackendEnvironment);
  *(_QWORD *)(v19 + 72) = v26;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BCEC0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5770]);
  v28 = v27;
  v29 = v54;
  v30 = v57;
  if (qword_1EF2A6E80 != -1)
    swift_once();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 104);
  v31(v29, v22, v30);
  swift_retain();
  v32 = sub_1BB86D30C();
  *(_QWORD *)(v19 + 136) = v28;
  v33 = sub_1BA970D34((unint64_t *)&qword_1EF2AB7F0, (unint64_t *)&unk_1EF2BCEC0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958]);
  *(_QWORD *)(v19 + 144) = v33;
  *(_QWORD *)(v19 + 112) = v32;
  LODWORD(v65) = v22;
  if (qword_1EF2A6E88 != -1)
    swift_once();
  v34 = *MEMORY[0x1E0DB55F8];
  v35 = v59;
  v36 = v60;
  v58 = *(_QWORD *)(v58 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v58)(v60, v34, v59);
  v31(v29, v65, v30);
  swift_retain();
  v37 = sub_1BB86D318();
  *(_QWORD *)(v19 + 176) = v28;
  *(_QWORD *)(v19 + 184) = v33;
  *(_QWORD *)(v19 + 152) = v37;
  sub_1BB86D354();
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
  sub_1BA50CAA8(0, &qword_1EF2AB7F8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5770]);
  v40 = v39;
  if (qword_1EF2A6E70 != -1)
    swift_once();
  ((void (*)(char *, uint64_t, uint64_t))v58)(v36, v34, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v63, v65, v62);
  swift_retain();
  v41 = sub_1BB86D330();
  *(_QWORD *)(v38 + 56) = v40;
  *(_QWORD *)(v38 + 64) = sub_1BA970D34((unint64_t *)&qword_1EF2BCF50, &qword_1EF2AB7F8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980]);
  *(_QWORD *)(v38 + 32) = v41;
  sub_1BB86D354();
  v42 = sub_1BB8703CC();
  swift_allocObject();
  v43 = sub_1BB8703C0();
  v68 = v42;
  v69 = MEMORY[0x1E0DB8E40];
  v67 = v43;
  v44 = objc_allocWithZone((Class)sub_1BB87072C());
  v45 = (void *)sub_1BB870720();
  v46 = objc_msgSend(objc_allocWithZone((Class)sub_1BB870D2C()), sel_initWithRootViewController_, v45);

  objc_msgSend(v46, sel_setModalPresentationStyle_, 7);
  v47 = objc_msgSend(v46, sel_popoverPresentationController);
  v48 = v64;
  if (v47)
  {
    v49 = v47;
    objc_msgSend(v47, sel_setSourceView_, *(_QWORD *)(*(_QWORD *)&v64[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_statusView]+ OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffStatusView_targetButton));

  }
  v50 = objc_msgSend(v46, sel_popoverPresentationController);
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, sel_setPermittedArrowDirections_, 1);

  }
  objc_msgSend(v48, sel_presentViewController_animated_completion_, v46, 1, 0);

}

void sub_1BA96F30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff);
    if (v4)
    {
      v5 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteError);
      if (v5)
      {
        v6 = v5;
        v7 = sub_1BA9075EC(v5);
        v8 = sub_1BA90A31C(v7);
        v10 = v9;
        v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_editor];
        v12 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
        swift_retain();
        v13 = v8;
        swift_bridgeObjectRetain();
        v14 = sub_1BB5E45E0(v11, v8, v10);

        swift_release();
        swift_bridgeObjectRelease();
        v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v14);
        objc_msgSend(v15, sel_setModalPresentationStyle_, 7);
        v16 = objc_msgSend(v15, sel_popoverPresentationController);
        if (v16)
        {
          v17 = v16;
          v18 = sub_1BA96E444();
          objc_msgSend(v17, sel_setBarButtonItem_, v18);

        }
        objc_msgSend(v15, sel_setPreferredContentSize_, 540.0, 620.0);
        objc_msgSend(v3, sel_presentViewController_animated_completion_, v15, 1, 0);

        swift_bridgeObjectRelease();
      }
    }

  }
}

id sub_1BA96F520()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  void *v25;
  double MaxX;
  void *v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  void *v37;
  double v38;
  void *v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  void *v48;
  double v49;
  void *v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  void *v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  objc_super v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;

  v69.receiver = v0;
  v69.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v69, sel_viewWillLayoutSubviews);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = result;
  objc_msgSend(result, sel_safeAreaInsets);
  v4 = v3;

  v5 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView];
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = result;
  objc_msgSend(result, sel_bounds);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v70.origin.x = v8;
  v70.origin.y = v10;
  v70.size.width = v12;
  v70.size.height = v14;
  Width = CGRectGetWidth(v70);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v16 = result;
  objc_msgSend(result, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v71.origin.x = v18;
  v71.origin.y = v20;
  v71.size.width = v22;
  v71.size.height = v24;
  objc_msgSend(v5, sel_setFrame_, 0.0, 0.0, Width * 0.5 + -4.0, CGRectGetHeight(v71));
  v25 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView];
  objc_msgSend(v5, sel_frame);
  MaxX = CGRectGetMaxX(v72);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v27 = result;
  v28 = v4 + 32.0;
  objc_msgSend(result, sel_bounds);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;

  v73.origin.x = v30;
  v73.origin.y = v32;
  v73.size.width = v34;
  v73.size.height = v36;
  objc_msgSend(v25, sel_setFrame_, MaxX, v28, 4.0, CGRectGetHeight(v73) - v28);
  v37 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView];
  objc_msgSend(v25, sel_frame);
  v38 = CGRectGetMaxX(v74);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v39 = result;
  objc_msgSend(result, sel_bounds);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  v75.origin.x = v41;
  v75.origin.y = v43;
  v75.size.width = v45;
  v75.size.height = v47;
  objc_msgSend(v37, sel_setFrame_, v38, v28, 4.0, CGRectGetHeight(v75) - v28);
  v48 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView];
  objc_msgSend(v37, sel_frame);
  v49 = CGRectGetMaxX(v76);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v50 = result;
  objc_msgSend(result, sel_bounds);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;

  v77.origin.x = v52;
  v77.origin.y = v54;
  v77.size.width = v56;
  v77.size.height = v58;
  v59 = CGRectGetWidth(v77);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v60 = result;
    objc_msgSend(result, sel_bounds);
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v68 = v67;

    v78.origin.x = v62;
    v78.origin.y = v64;
    v78.size.width = v66;
    v78.size.height = v68;
    return objc_msgSend(v48, sel_setFrame_, v49, 0.0, v59 * 0.5 + -4.0, CGRectGetHeight(v78));
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1BA96F908()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  BOOL v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1
    || ((v2 = v1,
         v3 = objc_msgSend(v1, sel_traitCollection),
         v2,
         v4 = objc_msgSend(v3, sel_horizontalSizeClass),
         v3,
         v4)
      ? (v5 = v4 == (id)2)
      : (v5 = 1),
        v5))
  {
    v6 = objc_msgSend(v0, sel_splitViewController);
    if (!v6)
      return;
    v13 = v6;
    objc_msgSend(v6, sel_togglePrimaryViewVisibilityAnimated_, 1);
    goto LABEL_9;
  }
  if (v4 == (id)1)
  {
    v7 = objc_msgSend(v0, sel_splitViewController);
    if (v7)
    {
      v13 = v7;
      type metadata accessor for DebugFormatUploadMainViewController();
      v8 = swift_dynamicCastClass();
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v0, sel_splitViewController);
        if (v10)
        {
          v11 = v10;
          v12 = objc_retain(*(id *)(v9
                                  + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadNavigationController));
          objc_msgSend(v11, sel_presentViewController_animated_completion_, v12, 1, 0);

        }
      }
LABEL_9:

    }
  }
}

uint64_t sub_1BA96FAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v4 = sub_1BB872610();
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BB872664();
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BB670 != -1)
    swift_once();
  v10 = (void *)qword_1ED4768A8;
  sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  v12 = v10;
  sub_1BA86B20C();
  v14 = v13;
  v16 = v15;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v11 + 32) = v14;
  *(_QWORD *)(v11 + 40) = v16;
  v17 = sub_1BB87330C();
  sub_1BB86EF44("Async creating change set for diff %@", 37, 2, &dword_1BA493000, v12, v17, v11);

  swift_bridgeObjectRelease();
  type metadata accessor for DebugFormatUploadDiffChangeSet();
  swift_allocObject();
  v18 = swift_retain();
  sub_1BB427BC8(v18);
  v20 = v19;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v21 = (void *)sub_1BB87345C();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a1;
  v22[3] = a2;
  v22[4] = v20;
  aBlock[4] = sub_1BA970AF4;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_9;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA571CB8();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA571C58();
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v9, v6, v23);
  _Block_release(v23);
  swift_release();

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v25);
}

void sub_1BA96FDB8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v5 = a2 + 16;
  if (qword_1ED3BB670 != -1)
    swift_once();
  v6 = (void *)qword_1ED4768A8;
  sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = v6;
  sub_1BA86B20C();
  v10 = v9;
  v12 = v11;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 64) = v14;
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v12;
  v15 = sub_1BB87330C();
  sub_1BB86EF44("Finished creating change set for diff %@", 40, 2, &dword_1BA493000, v8, v15, v7);

  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = MEMORY[0x1BCCE5D40](v5);
  if (!v16)
    return;
  v17 = (char *)v16;
  if (!*(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff))
  {
    sub_1BA86B20C();
    goto LABEL_10;
  }
  swift_retain();
  sub_1BA86B20C();
  v19 = v18;
  v21 = v20;
  swift_release();
  sub_1BA86B20C();
  if (!v21)
  {
LABEL_10:

    swift_bridgeObjectRelease();
    return;
  }
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n();
LABEL_12:
    v25 = *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView];
    *(_BYTE *)(v25 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 0;
    objc_msgSend(*(id *)(v25 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_stopAnimating, 1, 2);
    v26 = *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView];
    *(_BYTE *)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 0;
    objc_msgSend(*(id *)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_stopAnimating);
    sub_1BA970098(a1, a3);
    v27 = (void *)qword_1ED4768A8;
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v33;
    v29 = v27;
    sub_1BA86B20C();
    *(_QWORD *)(v28 + 56) = v13;
    *(_QWORD *)(v28 + 64) = v14;
    *(_QWORD *)(v28 + 32) = v30;
    *(_QWORD *)(v28 + 40) = v31;
    v32 = sub_1BB87330C();
    sub_1BB86EF44("Finished loading change set for diff %@", 39, 2, &dword_1BA493000, v29, v32, v28);

    swift_bridgeObjectRelease();
    return;
  }
  v24 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_12;

}

void sub_1BA970098(uint64_t a1, _QWORD *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;

  v3 = v2;
  v56 = a1;
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v55 - v6;
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView];
  v10 = a2[2];
  v9 = a2[3];
  v11 = v10 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion;
  v12 = sub_1BB86EB84();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  v14 = *(void **)(v8 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  v15 = sub_1BB3450B4((uint64_t)v7);
  objc_msgSend(v14, sel_setAttributedText_, v15);

  v16 = (unint64_t *)(v8 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *v16 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  v18 = *(void **)(v8 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView);
  objc_msgSend(v18, sel_setContentOffset_, 0.0, 0.0);
  objc_msgSend(v18, sel_setScrollEnabled_, 0);
  objc_msgSend(v18, sel_setScrollEnabled_, 1);
  objc_msgSend(v18, sel_reloadData);
  sub_1BA6BF694((uint64_t)v7);
  v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView];
  v20 = a2[4];
  v21 = v10 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion;
  v22 = *(void **)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  v23 = sub_1BB3450B4(v21);
  objc_msgSend(v22, sel_setAttributedText_, v23);

  v24 = (unint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *v24 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  v26 = *(void **)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView);
  objc_msgSend(v26, sel_setContentOffset_, 0.0, 0.0);
  objc_msgSend(v26, sel_setScrollEnabled_, 0);
  objc_msgSend(v26, sel_setScrollEnabled_, 1);
  objc_msgSend(v26, sel_reloadData);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate + 8) = &off_1E727E280;
  swift_unknownObjectWeakAssign();
  v27 = *(char **)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView];
  v28 = v56;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = *(_QWORD *)(v56 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localNumberOfLines);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = *(_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localHunkRanges);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = *(void **)(v8 + v17);
  objc_msgSend(v29, sel_contentSize);
  v30 = &v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentSize];
  *(_QWORD *)v30 = v31;
  *((_QWORD *)v30 + 1) = v32;
  objc_msgSend(v27, sel_setNeedsLayout);
  objc_msgSend(v29, sel_adjustedContentInset);
  v33 = &v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentInsets];
  *(_QWORD *)v33 = v34;
  *((_QWORD *)v33 + 1) = v35;
  *((_QWORD *)v33 + 2) = v36;
  *((_QWORD *)v33 + 3) = v37;
  objc_msgSend(v27, sel_setNeedsLayout);
  v38 = *(char **)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView];
  *(_QWORD *)&v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = *(_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteNumberOfLines);
  *(_QWORD *)&v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = *(_QWORD *)(v28 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteHunkRanges);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = *(void **)(v19 + v25);
  objc_msgSend(v39, sel_contentSize);
  v40 = &v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentSize];
  *(_QWORD *)v40 = v41;
  *((_QWORD *)v40 + 1) = v42;
  objc_msgSend(v38, sel_setNeedsLayout);
  objc_msgSend(v39, sel_adjustedContentInset);
  v43 = &v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentInsets];
  *(_QWORD *)v43 = v44;
  *((_QWORD *)v43 + 1) = v45;
  *((_QWORD *)v43 + 2) = v46;
  *((_QWORD *)v43 + 3) = v47;
  objc_msgSend(v38, sel_setNeedsLayout);
  v48 = objc_msgSend(v3, sel_navigationController);
  if (v48)
  {
    v49 = v48;
    v50 = objc_msgSend(v48, sel_navigationBar);

    objc_msgSend(v50, sel_setNeedsLayout);
  }
  v51 = objc_msgSend(v3, sel_view);
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v51, sel_setNeedsLayout);

    v53 = objc_msgSend(v3, sel_view);
    if (v53)
    {
      v54 = v53;
      objc_msgSend(v53, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatUploadDiffViewController()
{
  return objc_opt_self();
}

void sub_1BA9706E0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;

  v3 = v2;
  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0930, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView] == a1)
  {
    v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff];
    if (v14)
    {
      v15 = *(_QWORD **)(v14 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersions);
      sub_1BA6BF98C(v14 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion, (uint64_t)v13);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion, v6);
      v16 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadDiffVersionsViewController());
      swift_bridgeObjectRetain();
      swift_retain();
      v17 = sub_1BB162540(v15, (uint64_t)v13, (uint64_t)v9);
      v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v17);
      objc_msgSend(v18, sel_setModalPresentationStyle_, 7);
      v19 = objc_msgSend(v18, sel_popoverPresentationController);
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, sel_setSourceItem_, a2);

      }
      objc_msgSend(v3, sel_presentViewController_animated_completion_, v18, 1, 0);
      swift_release();

    }
  }
}

id sub_1BA9708D4(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  objc_super v22;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff] = 0;
  v5 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)&v2[v5] = v6;
  v7 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView;
  v8 = (objc_class *)type metadata accessor for DebugFormatUploadDiffView();
  v9 = objc_allocWithZone(v8);
  v10 = v2;
  *(_QWORD *)&v2[v7] = sub_1BB344484(0);
  v11 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView;
  v12 = (objc_class *)type metadata accessor for DebugFormatUploadDiffGutterView();
  v13 = objc_allocWithZone(v12);
  *(_QWORD *)&v10[v11] = sub_1BB85DA80(0);
  v14 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView;
  v15 = objc_allocWithZone(v8);
  *(_QWORD *)&v10[v14] = sub_1BB344484(1);
  v16 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView;
  v17 = objc_allocWithZone(v12);
  *(_QWORD *)&v10[v16] = sub_1BB85DA80(1);
  v18 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel;
  sub_1BB86F8A4();
  *(_QWORD *)&v10[v18] = sub_1BB86F880();
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_editor] = a1;
  v19 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadDiffStatusView());
  v20 = swift_retain_n();
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_statusView] = sub_1BA84510C(v20);

  v22.receiver = v10;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BA970A68()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA970A8C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA970AB8()
{
  uint64_t v0;

  return sub_1BA96FAA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA970AC0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BA970AF4()
{
  uint64_t v0;

  sub_1BA96FDB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

void sub_1BA970B00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  id v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff] = 0;
  v2 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView;
  v5 = (objc_class *)type metadata accessor for DebugFormatUploadDiffView();
  v6 = objc_allocWithZone(v5);
  *(_QWORD *)&v1[v4] = sub_1BB344484(0);
  v7 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView;
  v8 = (objc_class *)type metadata accessor for DebugFormatUploadDiffGutterView();
  v9 = objc_allocWithZone(v8);
  *(_QWORD *)&v1[v7] = sub_1BB85DA80(0);
  v10 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView;
  v11 = objc_allocWithZone(v5);
  *(_QWORD *)&v1[v10] = sub_1BB344484(1);
  v12 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView;
  v13 = objc_allocWithZone(v8);
  *(_QWORD *)&v1[v12] = sub_1BB85DA80(1);
  v14 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel;
  sub_1BB86F8A4();
  *(_QWORD *)&v1[v14] = sub_1BB86F880();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem] = 0;

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BA970C54()
{
  uint64_t v0;

  sub_1BA96EA44(v0);
}

void sub_1BA970C5C()
{
  uint64_t v0;

  sub_1BA96F30C(v0);
}

unint64_t sub_1BA970C64()
{
  unint64_t result;

  result = qword_1EF2AB7D0;
  if (!qword_1EF2AB7D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatBackendEnvironment, &type metadata for DebugFormatBackendEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EF2AB7D0);
  }
  return result;
}

unint64_t sub_1BA970CA8()
{
  unint64_t result;

  result = qword_1EF2AB7D8;
  if (!qword_1EF2AB7D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatUploadTarget, &type metadata for DebugFormatUploadTarget);
    atomic_store(result, (unint64_t *)&qword_1EF2AB7D8);
  }
  return result;
}

uint64_t sub_1BA970CEC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, a2, a3, a4, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA970D34(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BA50CAA8(255, a2, a3, a4, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA970D84()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BA970DA8()
{
  return sub_1BA970DC8();
}

uint64_t sub_1BA970DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  id v12;

  v1 = sub_1BB86E008();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3AC178, (uint64_t (*)(uint64_t))sub_1BA970FC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4B07F0(0, &qword_1ED39C1A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BB86DEAC();
  v6 = (_OWORD *)swift_allocObject();
  v6[1] = xmmword_1BB87CE70;
  v12 = *(id *)(v0 + 16);
  v7 = qword_1ED3A3910;
  v8 = v12;
  if (v7 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3A38F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v9, v1);
  sub_1BA970FC8();
  sub_1BB86ECF8();

  sub_1BB86DEA0();
  v12 = v6;
  sub_1BA4B07F0(0, &qword_1ED39A590, (uint64_t (*)(uint64_t))sub_1BA81DD70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

unint64_t sub_1BA970FC8()
{
  unint64_t result;

  result = qword_1ED3BA810;
  if (!qword_1ED3BA810)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3BA810);
  }
  return result;
}

NewsFeed::Fonts::Font __swiftcall Fonts.Font.init(name:)(NewsFeed::Fonts::Font name)
{
  NewsFeed::Fonts::Font *v1;

  *v1 = name;
  return name;
}

id Fonts.Font.font(size:)(double a1)
{
  void *v2;
  void *v3;
  id v4;

  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_fontWithName_size_, v2, a1);

  if (v4)
    return v4;
  else
    return objc_msgSend(v3, sel_systemFontOfSize_, a1);
}

id Fonts.Font.scaledFont(size:style:)(uint64_t a1, double a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, a1);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_fontWithName_size_, v4, a2);

  if (!v6)
    v6 = objc_msgSend(v5, sel_systemFontOfSize_, a2);
  v7 = objc_msgSend(v3, sel_scaledFontForFont_, v6);

  return v7;
}

uint64_t static Fonts.DrukText.bold.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BA97122C(aDruktextBold, (uint64_t *)&aDruktextBold[8], a1);
}

uint64_t static Fonts.DrukText.bold.setter(uint64_t *a1)
{
  return sub_1BA971290(a1, aDruktextBold, &aDruktextBold[1]);
}

uint64_t (*static Fonts.DrukText.bold.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static Fonts.SFUIDisplay.black.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BA97122C(qword_1EF2AB810, &qword_1EF2AB810[1], a1);
}

uint64_t sub_1BA97122C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;

  swift_beginAccess();
  v6 = *a2;
  *a3 = *a1;
  a3[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t static Fonts.SFUIDisplay.black.setter(uint64_t *a1)
{
  return sub_1BA971290(a1, qword_1EF2AB810, &qword_1EF2AB810[1]);
}

uint64_t sub_1BA971290(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1;
  v6 = a1[1];
  swift_beginAccess();
  *a2 = v5;
  *a3 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Fonts.SFUIDisplay.black.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for Fonts()
{
  return &type metadata for Fonts;
}

ValueMetadata *type metadata accessor for Fonts.Font()
{
  return &type metadata for Fonts.Font;
}

ValueMetadata *type metadata accessor for Fonts.DrukText()
{
  return &type metadata for Fonts.DrukText;
}

ValueMetadata *type metadata accessor for Fonts.SFUIDisplay()
{
  return &type metadata for Fonts.SFUIDisplay;
}

uint64_t FormatTextNodeAlternative.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeAlternative.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t FormatTextNodeAlternative.logic.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_retain();
}

uint64_t _s8NewsFeed25FormatTextNodeAlternativeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  char v6;
  char v7;
  uint64_t v9;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BB874398(), v6 = 0, (v5 & 1) != 0))
  {
    v9 = v2;
    static FormatTextContent.== infix(_:_:)((uint64_t)&v9);
    if ((v7 & 1) != 0)
    {
      v9 = v3;
      static FormatTextNodeAlternativeLogic.== infix(_:_:)((uint64_t)&v9);
    }
    else
    {
      v6 = 0;
    }
  }
  return v6 & 1;
}

unint64_t sub_1BA971450(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA971474();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA971474()
{
  unint64_t result;

  result = qword_1EF2AB820;
  if (!qword_1EF2AB820)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternative, &type metadata for FormatTextNodeAlternative);
    atomic_store(result, (unint64_t *)&qword_1EF2AB820);
  }
  return result;
}

unint64_t sub_1BA9714B8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA825C2C();
  a1[2] = sub_1BA825C70();
  result = sub_1BA9714EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA9714EC()
{
  unint64_t result;

  result = qword_1EF2AB828;
  if (!qword_1EF2AB828)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternative, &type metadata for FormatTextNodeAlternative);
    atomic_store(result, (unint64_t *)&qword_1EF2AB828);
  }
  return result;
}

_QWORD *assignWithCopy for FormatTextNodeAlternative(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatTextNodeAlternative(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternative()
{
  return &type metadata for FormatTextNodeAlternative;
}

uint64_t sub_1BA971620()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DebugFormatLogger();
  v0 = swift_allocObject();
  result = sub_1BA9716B4();
  qword_1EF3D04D8 = v0;
  return result;
}

uint64_t sub_1BA971658()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatLogger()
{
  return objc_opt_self();
}

uint64_t sub_1BA9716B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1BB873450();
  v15 = *(_QWORD *)(v2 - 8);
  v16 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB87342C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BB86DD44();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v7);
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1BA4B07F0(0, &qword_1EF2AB8E8, (uint64_t (*)(uint64_t))sub_1BA97279C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  v9 = sub_1BB86E47C();
  v10 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 16) = v9;
  *(_QWORD *)(v0 + 24) = v10;
  sub_1BA4B07F0(0, &qword_1ED3CFB28, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  sub_1BB86DD38();
  v17 = v11;
  sub_1BA4A2870((unint64_t *)&qword_1ED3BBE30, v8, MEMORY[0x1E0DB3208]);
  sub_1BA9727B8(0);
  v12 = MEMORY[0x1E0DEAF38];
  sub_1BA4A2870((unint64_t *)&qword_1ED3C02F0, (uint64_t (*)(uint64_t))sub_1BA9727B8, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v1 + 32) = sub_1BB86DD50();
  sub_1BA657D64();
  sub_1BB872634();
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9660, (uint64_t (*)(uint64_t))sub_1BA81D850, v12);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v4, *MEMORY[0x1E0DEF8D0], v16);
  *(_QWORD *)(v1 + 40) = sub_1BB87348C();
  return v1;
}

uint64_t sub_1BA9719E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[6];

  v40 = a1;
  v44 = sub_1BB872610();
  v47 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB872664();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86C8B0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - v18;
  v42 = (char *)&v37 - v18;
  sub_1BB86C8A4();
  v20 = a2;
  v21 = v5;
  v22 = sub_1BA971E84(v20, a3, a4, a5, v5);
  v37 = v23;
  v38 = v13;
  v41 = *(_QWORD *)(v5 + 40);
  v24 = v13;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  v25 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v28 + v25, v16, v24);
  v29 = (uint64_t *)(v28 + v26);
  v30 = v37;
  *v29 = v22;
  v29[1] = v30;
  v31 = v40;
  *(_QWORD *)(v28 + v27) = v40;
  *(_QWORD *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = v21;
  aBlock[4] = sub_1BA9723CC;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_7;
  v32 = _Block_copy(aBlock);
  sub_1BA972428(v31);
  swift_retain();
  v33 = v39;
  sub_1BB872634();
  v48 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  v35 = v43;
  v34 = v44;
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v33, v35, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v34);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v38);
  return swift_release();
}

uint64_t sub_1BA971CF8()
{
  swift_retain();
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t sub_1BA971D40(uint64_t a1, uint64_t a2)
{
  return sub_1BA9719E4((void *)1, 0, 0, a1, a2);
}

uint64_t sub_1BA971D74(uint64_t a1, uint64_t a2)
{
  return sub_1BA9719E4((void *)2, 0, 0, a1, a2);
}

uint64_t sub_1BA971DA8(uint64_t a1, uint64_t a2)
{
  return sub_1BA9719E4((void *)3, 0, 0, a1, a2);
}

uint64_t sub_1BA971DDC(uint64_t a1, uint64_t a2)
{
  return sub_1BA9719E4((void *)4, 0, 0, a1, a2);
}

uint64_t sub_1BA971E10(uint64_t a1, uint64_t a2)
{
  return sub_1BA9719E4(0, 0, 0, a1, a2);
}

uint64_t sub_1BA971E44()
{
  swift_retain();
  sub_1BB86ED4C();
  return swift_release();
}

uint64_t sub_1BA971E7C()
{
  return sub_1BA971CF8();
}

uint64_t sub_1BA971E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  double v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (!a2)
    goto LABEL_8;
  v10 = CACurrentMediaTime();
  sub_1BB86DD20();
  swift_beginAccess();
  v11 = *(_QWORD *)(a5 + 24);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BA6E35A8(a1, a2);
    v14 = 0.0;
    if ((v13 & 1) != 0)
      v14 = *(double *)(*(_QWORD *)(v11 + 56) + 8 * v12);
    v15 = v13 ^ 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 1;
    v14 = 0.0;
  }
  swift_endAccess();
  swift_beginAccess();
  sub_1BAA492BC(a1, a2);
  swift_endAccess();
  sub_1BB86DD2C();
  if ((v15 & 1) == 0)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BB87A390;
    v17 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v16 + 64) = v17;
    *(double *)(v16 + 32) = (v10 - v14) * 1000.0;
    *(_QWORD *)(v16 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 104) = sub_1BA6A2D8C();
    *(_QWORD *)(v16 + 72) = a3;
    *(_QWORD *)(v16 + 80) = a4;
    swift_bridgeObjectRetain();
    return sub_1BB8729D0();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRetain();
  }
  return a3;
}

uint64_t sub_1BA972058(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v8 = sub_1BB872610();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BB872664();
  v11 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86C8B0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v18 + 16))(v17, a1, v15);
  type metadata accessor for DebugFormatLogEntry();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BA972428(a4);
  v19 = sub_1BAB06364((uint64_t)v17, a2, a3, a4);
  sub_1BA972730(a4);
  sub_1BA657D64();
  v20 = (void *)sub_1BB87345C();
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v19;
  aBlock[4] = sub_1BA972794;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_9_0;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v13, v10, v23);
  _Block_release(v23);
  swift_release();

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_1BA972328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;

  v1 = sub_1BB86C8B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  v5 = *(char **)(v0 + v4);
  if ((unint64_t)(v5 - 1) >= 4)

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA9723CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1BB86C8B0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BA972058(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

id sub_1BA972428(id result)
{
  if ((char *)result - 1 >= (char *)4)
    return result;
  return result;
}

uint64_t sub_1BA97243C()
{
  uint64_t result;
  void (*v1)(_BYTE *, _QWORD);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE v5[32];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_retain();
    v1 = (void (*)(_BYTE *, _QWORD))sub_1BB86E488();
    v3 = v2;
    v4 = swift_retain();
    MEMORY[0x1BCCE36AC](v4);
    if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_release();
    v1(v5, 0);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA97252C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  v6 = sub_1BB86C8E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v10 = a2;
  }
  else
  {
    sub_1BB86C8D4();
    a1 = sub_1BB86C8C8();
    v10 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRetain();
  v12 = CACurrentMediaTime();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  swift_retain();
  sub_1BB86DD20();
  swift_release();
  v13 = qword_1EF3D04D8;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v13 + 24) + 16))
  {
    swift_endAccess();
LABEL_11:
    v16 = qword_1EF3D04D8;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *(_QWORD *)(v16 + 24);
    *(_QWORD *)(v16 + 24) = 0x8000000000000000;
    sub_1BB4BE870(a1, v10, isUniquelyReferenced_nonNull_native, v12);
    *(_QWORD *)(v16 + 24) = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  sub_1BA6E35A8(a1, v10);
  v15 = v14;
  swift_endAccess();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0 || (a3 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  swift_retain();
  sub_1BB86DD2C();
  swift_release();
  return a1;
}

void sub_1BA972730(id a1)
{
  if ((char *)a1 - 1 >= (char *)4)

}

uint64_t sub_1BA972744()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA972768()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA972794()
{
  return sub_1BA97243C();
}

void sub_1BA97279C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AB8F0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLogEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BA9727B8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C02E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1BA9727DC(char a1)
{
  unint64_t result;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1)
      return 0xD00000000000001CLL;
    else
      return 0xD000000000000028;
  }
  return result;
}

uint64_t sub_1BA97283C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA972BC0();
  *a1 = result;
  return result;
}

unint64_t sub_1BA972868@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1BA9727DC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA972890()
{
  sub_1BA972FA8();
  return sub_1BB872D60();
}

uint64_t sub_1BA9728EC()
{
  sub_1BA972FA8();
  return sub_1BB872D0C();
}

uint64_t sub_1BA972938(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7EDEB0(*a1, *a2);
}

uint64_t sub_1BA972944()
{
  return sub_1BA8D244C();
}

uint64_t sub_1BA97294C()
{
  return sub_1BA9D0D70();
}

uint64_t sub_1BA972954()
{
  return sub_1BAB06F5C();
}

void sub_1BA97295C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724FFC0;
}

unint64_t sub_1BA97296C(char a1)
{
  unint64_t result;

  result = 0xD000000000000017;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000024;
    else
      return 0xD000000000000028;
  }
  return result;
}

unint64_t sub_1BA9729CC()
{
  char *v0;

  return sub_1BA97296C(*v0);
}

uint64_t sub_1BA9729D4(uint64_t a1)
{
  return sub_1BA972A9C(a1, 0xD000000000000038, 0x80000001BB964FB0, &qword_1EF2AB8F8);
}

void sub_1BA9729F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D5FD0)
  {
    v0 = sub_1BB86D3CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D5FD0);
  }
}

uint64_t sub_1BA972A54(uint64_t a1)
{
  return sub_1BA972A9C(a1, 0xD000000000000045, 0x80000001BB964FF0, &qword_1EF2AB900);
}

uint64_t sub_1BA972A78(uint64_t a1)
{
  return sub_1BA972A9C(a1, 0xD000000000000054, 0x80000001BB965040, &qword_1EF2AB908);
}

uint64_t sub_1BA972A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];

  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1BB86D378();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD, double))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v14[15] = 0;
  sub_1BA9729F8();
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a4 = result;
  return result;
}

uint64_t sub_1BA972BC0()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BA972C08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  char v7;

  sub_1BB86D294();
  v0 = 0;
  v1 = MEMORY[0x1E0DEE9D8];
  do
  {
    v4 = byte_1E724FFE8[v0 + 32];
    sub_1BB86D27C();
    if (v4)
    {
      if (v4 == 1)
      {
        if (qword_1EF2A6C68 == -1)
          goto LABEL_13;
LABEL_9:
        swift_once();
        goto LABEL_13;
      }
      if (qword_1EF2A6C70 != -1)
        goto LABEL_9;
    }
    else if (qword_1EF2A6C60 != -1)
    {
      goto LABEL_9;
    }
LABEL_13:
    swift_retain();
    sub_1BB86D270();
    swift_release();
    swift_release();
    if (v7 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1BAC7A54C(0, *(_QWORD *)(v1 + 16) + 1, 1);
      v3 = *(_QWORD *)(v1 + 16);
      v2 = *(_QWORD *)(v1 + 24);
      if (v3 >= v2 >> 1)
        sub_1BAC7A54C(v2 > 1, v3 + 1, 1);
      *(_QWORD *)(v1 + 16) = v3 + 1;
      *(_BYTE *)(v1 + v3 + 32) = v4;
    }
    ++v0;
  }
  while (v0 != 3);
  v5 = sub_1BAC86AF4(v1);
  swift_release();
  return v5;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataCompilerMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA972E40 + 4 * byte_1BB8888A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA972E74 + 4 * byte_1BB8888A0[v4]))();
}

uint64_t sub_1BA972E74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA972E7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA972E84);
  return result;
}

uint64_t sub_1BA972E90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA972E98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA972E9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA972EA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataCompilerMode()
{
  return &type metadata for FormatDerivedDataCompilerMode;
}

unint64_t sub_1BA972EC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB910;
  if (!qword_1EF2AB910)
  {
    sub_1BA972F0C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB910);
  }
  return result;
}

void sub_1BA972F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AB918)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AB918);
  }
}

unint64_t sub_1BA972F64()
{
  unint64_t result;

  result = qword_1EF2AB920;
  if (!qword_1EF2AB920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888938, &type metadata for FormatDerivedDataCompilerMode);
    atomic_store(result, (unint64_t *)&qword_1EF2AB920);
  }
  return result;
}

unint64_t sub_1BA972FA8()
{
  unint64_t result;

  result = qword_1EF2AB928;
  if (!qword_1EF2AB928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888960, &type metadata for FormatDerivedDataCompilerMode);
    atomic_store(result, (unint64_t *)&qword_1EF2AB928);
  }
  return result;
}

uint64_t dispatch thunk of FormatTypeProviderType.types.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BA972FF4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1BA97305C(a1, a2, a3, &qword_1EF2AB948, (uint64_t (*)(void))sub_1BA97454C, (uint64_t)&type metadata for FormatStandingDataVisualization.CodingKeys, (unint64_t *)&qword_1EF2AB958);
}

uint64_t sub_1BA973028(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1BA97305C(a1, a2, a3, &qword_1EF2AB960, (uint64_t (*)(void))sub_1BA9745D8, (uint64_t)&type metadata for FormatBracketDataVisualization.CodingKeys, (unint64_t *)&qword_1EF2AB970);
}

uint64_t sub_1BA97305C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, unint64_t *a7)
{
  uint64_t v7;

  v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1BA4CDF6C(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA974590(a7, a4, a5, a6);
    return sub_1BB874464();
  }
  return result;
}

uint64_t FormatScoreDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatScoreDataVisualization.umcIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatScoreDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatScoreDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatScoreDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatScoreDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatScoreDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatScoreDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatScoreDataVisualization.query.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA973328(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 64) = v3;
  *(_QWORD *)(v4 + 72) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatScoreDataVisualization.query.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatScoreDataVisualization.query.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatScoreDataVisualization.__allocating_init(tagIdentifier:umcIdentifier:selectors:properties:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  swift_beginAccess();
  v16[6] = a5;
  swift_beginAccess();
  v16[7] = a6;
  swift_beginAccess();
  v16[8] = a7;
  v16[9] = a8;
  return v16;
}

_QWORD *FormatScoreDataVisualization.init(tagIdentifier:umcIdentifier:selectors:properties:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_beginAccess();
  v8[6] = a5;
  swift_beginAccess();
  v8[7] = a6;
  swift_beginAccess();
  v8[8] = a7;
  v8[9] = a8;
  return v8;
}

uint64_t sub_1BA97356C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA9735A8 + 4 * byte_1BB888A50[*v0]))(0x746E656449676174, 0xED00007265696669);
}

uint64_t sub_1BA9735A8()
{
  return 0x746E656449636D75;
}

uint64_t sub_1BA9735BC()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA9735D8()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA9735F4()
{
  return 0x7972657571;
}

uint64_t sub_1BA973608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA9742E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA97362C()
{
  sub_1BA973A54();
  return sub_1BB874710();
}

uint64_t sub_1BA973654()
{
  sub_1BA973A54();
  return sub_1BB87471C();
}

uint64_t FormatScoreDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatScoreDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatScoreDataVisualization.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17[6];
  char v18;
  char v19;

  v3 = v1;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3ABCE0, (uint64_t (*)(void))sub_1BA973A54, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA973A54();
  sub_1BB8746C8();
  v18 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v18 = 1;
    sub_1BB87417C();
    swift_beginAccess();
    v11 = v3[6];
    if (*(_QWORD *)(v11 + 16))
    {
      v19 = 2;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v17[0] = (uint64_t)v12;
      swift_retain();
      sub_1BA5BBDDC(v17);
      swift_release();
      v17[3] = v17[0];
      sub_1BA974590(&qword_1EF2AB930, (unint64_t *)&unk_1ED3ABCE0, (uint64_t (*)(void))sub_1BA973A54, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys);
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = v3[7];
    if (*(_QWORD *)(v13 + 16))
    {
      v19 = 3;
      v17[0] = v13;
      sub_1BA974590(&qword_1EF2AB930, (unint64_t *)&unk_1ED3ABCE0, (uint64_t (*)(void))sub_1BA973A54, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys);
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
    swift_beginAccess();
    v14 = v3[8];
    v15 = v3[9];
    swift_bridgeObjectRetain();
    sub_1BA97305C(v14, v15, 4, (unint64_t *)&unk_1ED3ABCE0, (uint64_t (*)(void))sub_1BA973A54, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys, &qword_1EF2AB930);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BA973A54()
{
  unint64_t result;

  result = qword_1ED3ABB28;
  if (!qword_1ED3ABB28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888C24, &type metadata for FormatScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB28);
  }
  return result;
}

uint64_t FormatScoreDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatScoreDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatScoreDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;

  v34 = *v1;
  sub_1BA89B794();
  v30 = v3;
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v31 = v5;
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3ABCD0, (uint64_t (*)(void))sub_1BA973A54, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA973A54();
  v14 = v32;
  v13 = v33;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v7;
    v16 = v31;
    LOBYTE(v35) = 0;
    v14[2] = sub_1BB874098();
    v14[3] = v17;
    LOBYTE(v35) = 1;
    v14[4] = sub_1BB874098();
    v14[5] = v19;
    LOBYTE(v35) = 2;
    v20 = sub_1BB8740F8();
    if ((v20 & 1) != 0)
    {
      v38 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      sub_1BB8740D4();
      v21 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v16);
    }
    else
    {
      v21 = MEMORY[0x1E0DEE9E8];
    }
    v14[6] = v21;
    LOBYTE(v35) = 3;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v38 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v23 = v29;
      v22 = v30;
      sub_1BB8740D4();
      v24 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v22);
    }
    else
    {
      v24 = MEMORY[0x1E0DEE9D8];
    }
    v14[7] = v24;
    v38 = 4;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v37 = 4;
      sub_1BB8740D4();
      v26 = v35;
      v25 = v36;
    }
    else
    {
      v26 = 0;
      v25 = 0xE000000000000000;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v14[8] = v26;
    v14[9] = v25;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v14;
}

_QWORD *sub_1BA973F14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatScoreDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA973F68(_QWORD *a1)
{
  return FormatScoreDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BA973F88(_QWORD *a1, _QWORD *a2)
{
  return static FormatScoreDataVisualization.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BA973F94(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3ABB48, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatScoreDataVisualization);
  a1[2] = sub_1BA50AD30(&qword_1ED3ABB40, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatScoreDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2AB938, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatScoreDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatScoreDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BA97402C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA974078@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA9740C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 72);
  *a2 = *(_QWORD *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatScoreDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatScoreDataVisualization.__allocating_init(tagIdentifier:umcIdentifier:selectors:properties:query:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FormatScoreDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for FormatScoreDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA974188 + 4 * byte_1BB888A5A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA9741BC + 4 * byte_1BB888A55[v4]))();
}

uint64_t sub_1BA9741BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9741C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA9741CCLL);
  return result;
}

uint64_t sub_1BA9741D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA9741E0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA9741E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9741EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatScoreDataVisualization.CodingKeys()
{
  return &type metadata for FormatScoreDataVisualization.CodingKeys;
}

unint64_t sub_1BA97420C()
{
  unint64_t result;

  result = qword_1EF2AB940;
  if (!qword_1EF2AB940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888BFC, &type metadata for FormatScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB940);
  }
  return result;
}

unint64_t sub_1BA974254()
{
  unint64_t result;

  result = qword_1ED3ABB38;
  if (!qword_1ED3ABB38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888B6C, &type metadata for FormatScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB38);
  }
  return result;
}

unint64_t sub_1BA97429C()
{
  unint64_t result;

  result = qword_1ED3ABB30;
  if (!qword_1ED3ABB30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB888B94, &type metadata for FormatScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB30);
  }
  return result;
}

uint64_t sub_1BA9742E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656449676174 && a2 == 0xED00007265696669;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656449636D75 && a2 == 0xED00007265696669 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1BA97454C()
{
  unint64_t result;

  result = qword_1EF2AB950;
  if (!qword_1EF2AB950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914454, &type metadata for FormatStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB950);
  }
  return result;
}

uint64_t sub_1BA974590(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA9745D8()
{
  unint64_t result;

  result = qword_1EF2AB968;
  if (!qword_1EF2AB968)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89FFB4, &type metadata for FormatBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AB968);
  }
  return result;
}

uint64_t sub_1BA97461C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = type metadata accessor for FormatInspectionItem(0);
  v2 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v17[1] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v10, 0);
    v12 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v13 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1BA4C2DD8(v12, (uint64_t)v4, type metadata accessor for FormatInspectionItem);
      swift_dynamicCast();
      v11 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v19;
      }
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79E1C(v14 > 1, v15 + 1, 1);
        v11 = v19;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1BA760F3C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, (uint64_t)&unk_1EF2A9750, (uint64_t)type metadata accessor for FormatInspectionItem, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
      v12 += v13;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_1BA9747FC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  _BYTE v9[40];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E7C(0, v1, 0);
    v4 = a1 + 32;
    do
    {
      sub_1BA4C010C(v4, (uint64_t)v8);
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
      sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
      swift_dynamicCast();
      v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E7C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BAC79E7C(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BA760F3C((uint64_t)v9, v2 + 40 * v6 + 32, (uint64_t)&qword_1EF2ABC80, (uint64_t)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA65DC00);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA974970(uint64_t a1)
{
  return sub_1BA974A00(a1, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(void))sub_1BA983754);
}

uint64_t sub_1BA974994(uint64_t a1)
{
  return sub_1BA974A00(a1, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(void))sub_1BA9836E4);
}

uint64_t sub_1BA9749B8(uint64_t a1)
{
  return sub_1BA974A00(a1, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(void))sub_1BA983674);
}

uint64_t sub_1BA9749DC(uint64_t a1)
{
  return sub_1BA974A00(a1, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(void))sub_1BA9835C8);
}

uint64_t sub_1BA974A00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  uint64_t (*v22)(void);
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v22 = a5;
  sub_1BA7BCBF0(0, a2, a3, a4);
  v21 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A074(0, v13, 0);
    v14 = v26;
    v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_1BA983578(v15, (uint64_t)v12, a2, a3, a4);
      v26 = v14;
      v18 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BAC7A074(v17 > 1, v18 + 1, 1);
        v14 = v26;
      }
      v24 = v21;
      v25 = v22();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v23);
      sub_1BA983578((uint64_t)v12, (uint64_t)boxed_opaque_existential_0, a2, a3, a4);
      *(_QWORD *)(v14 + 16) = v18 + 1;
      sub_1BA4CECCC(&v23, v14 + 40 * v18 + 32);
      sub_1BA983638((uint64_t)v12, a2, a3, a4);
      v15 += v16;
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_1BA974B88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  sub_1BA709CA4(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A074(0, v7, 0);
    v8 = v18;
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA709CA4);
      v18 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BAC7A074(v11 > 1, v12 + 1, 1);
        v8 = v18;
      }
      v16 = v3;
      v17 = sub_1BA983520();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v15);
      sub_1BA4C2DD8((uint64_t)v6, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))sub_1BA709CA4);
      *(_QWORD *)(v8 + 16) = v12 + 1;
      sub_1BA4CECCC(&v15, v8 + 40 * v12 + 32);
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA709CA4);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1BA974CEC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  ValueMetadata *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BA6EFF20(0, v1, 0);
    v2 = v28;
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[7];
      v26 = v4[6];
      v27[0] = v5;
      *(_OWORD *)((char *)v27 + 9) = *(__int128 *)((char *)v4 + 121);
      v6 = v4[3];
      v22 = v4[2];
      v23 = v6;
      v7 = v4[5];
      v24 = v4[4];
      v25 = v7;
      v8 = v4[1];
      v20 = *v4;
      v21 = v8;
      sub_1BA8D1F08((uint64_t)&v20);
      v28 = v2;
      v10 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BA6EFF20(v9 > 1, v10 + 1, 1);
        v2 = v28;
      }
      v18 = &type metadata for FeedIssue;
      v19 = sub_1BA6B2E68();
      v11 = (_OWORD *)swift_allocObject();
      *(_QWORD *)&v17 = v11;
      v12 = v27[0];
      v11[7] = v26;
      v11[8] = v12;
      *(_OWORD *)((char *)v11 + 137) = *(_OWORD *)((char *)v27 + 9);
      v13 = v23;
      v11[3] = v22;
      v11[4] = v13;
      v14 = v25;
      v11[5] = v24;
      v11[6] = v14;
      v15 = v21;
      v11[1] = v20;
      v11[2] = v15;
      *(_QWORD *)(v2 + 16) = v10 + 1;
      sub_1BA4CECCC(&v17, v2 + 40 * v10 + 32);
      v4 += 9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA974E4C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA6EFF20(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCE4630](v5, a1);
        v16 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BA6EFF20(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        ++v5;
        v14 = sub_1BB86F5D4();
        v15 = sub_1BA50AD30(&qword_1ED3A3D20, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t)&protocol conformance descriptor for PluginModel);
        *(_QWORD *)&v13 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BA4CECCC(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v16 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        swift_retain();
        if (v12 >= v11 >> 1)
        {
          sub_1BA6EFF20(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        v14 = sub_1BB86F5D4();
        v15 = sub_1BA50AD30(&qword_1ED3A3D20, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t)&protocol conformance descriptor for PluginModel);
        *(_QWORD *)&v13 = v10;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BA4CECCC(&v13, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA97505C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;
  _BYTE v11[288];
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BA6EFF20(0, v1, 0);
    v2 = v12;
    v4 = a1 + 32;
    do
    {
      sub_1BA982FE4(v4, (uint64_t)v11);
      v12 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BA6EFF20(v5 > 1, v6 + 1, 1);
        v2 = v12;
      }
      v9 = &type metadata for FeedCatalogItem;
      v10 = sub_1BA983020();
      *(_QWORD *)&v8 = swift_allocObject();
      sub_1BA982FE4((uint64_t)v11, v8 + 16);
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BA4CECCC(&v8, v2 + 40 * v6 + 32);
      sub_1BA9831B8((uint64_t)v11);
      v4 += 288;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA975180(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;
  _QWORD v11[19];
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BA6EFF20(0, v1, 0);
    v2 = v12;
    v4 = a1 + 32;
    do
    {
      sub_1BA982E70(v4, (uint64_t)v11);
      v12 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BA6EFF20(v5 > 1, v6 + 1, 1);
        v2 = v12;
      }
      v9 = &type metadata for FeedCategory;
      v10 = sub_1BA982EAC();
      *(_QWORD *)&v8 = swift_allocObject();
      sub_1BA982E70((uint64_t)v11, v8 + 16);
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BA4CECCC(&v8, v2 + 40 * v6 + 32);
      sub_1BA982F4C(v11);
      v4 += 152;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA9752A4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E7C(0, v1, 0);
    sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
    v4 = a1 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E7C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BAC79E7C(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BA760F3C((uint64_t)v8, v2 + 40 * v6 + 32, (uint64_t)&qword_1EF2ABC80, (uint64_t)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA65DC00);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA975430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for FeedItemSupplementaryAttributes();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AA10(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BA4C2DD8(v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BAC7AA10(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_1BA50AD30((unint64_t *)&unk_1ED39C820, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t)&protocol conformance descriptor for FeedItemSupplementaryAttributes);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
      sub_1BA4C2DD8((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1BA4CECCC(&v14, v7 + 40 * v11 + 32);
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1BA9755AC(uint64_t a1)
{
  return sub_1BA9755E4(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7AADC, (void (*)(_QWORD))sub_1BA9833B4, (void (*)(_QWORD))sub_1BA98341C);
}

uint64_t sub_1BA9755C8(uint64_t a1)
{
  return sub_1BA9755E4(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7AAB0, (void (*)(_QWORD))sub_1BA9832B8, (void (*)(_QWORD))sub_1BA983338);
}

uint64_t sub_1BA9755E4(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), void (*a3)(_QWORD), void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    a2(0, v4, 0);
    a3(0);
    a4(0);
    v10 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v5 = v17;
      }
      v12 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v5 + 24);
      if (v12 >= v11 >> 1)
      {
        a2(v11 > 1, v12 + 1, 1);
        v5 = v17;
      }
      *(_QWORD *)(v5 + 16) = v12 + 1;
      v13 = v5 + 24 * v12;
      *(_QWORD *)(v13 + 32) = v15;
      *(_OWORD *)(v13 + 40) = v16;
      v10 += 24;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1BA97575C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AA94(0, v1, 0);
    sub_1BA9831EC();
    sub_1BA983254();
    v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AA94(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v2 = v16;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BAC7AA94(v5 > 1, v6 + 1, 1);
        v2 = v16;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + (v6 << 6);
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      *(_QWORD *)(v7 + 48) = v11;
      *(_OWORD *)(v7 + 56) = v12;
      *(_QWORD *)(v7 + 72) = v13;
      *(_QWORD *)(v7 + 80) = v14;
      v4 += 64;
      *(_QWORD *)(v7 + 88) = v15;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA9758EC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA57F544(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1BCCE4630](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA57F544(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BA57F544(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1BA76EAE0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA57F544(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BA57F544(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1BA76EAE0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA975B1C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  __int128 v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A388(0, v1, 0);
    v2 = v17;
    v4 = (uint64_t *)(a1 + 64);
    do
    {
      v6 = *(v4 - 4);
      v5 = *(v4 - 3);
      v7 = *(v4 - 1);
      v13 = *(v4 - 2);
      v8 = *v4;
      v17 = v2;
      v10 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
      {
        sub_1BAC7A388(v9 > 1, v10 + 1, 1);
        v2 = v17;
      }
      v15 = &type metadata for FormatInspectionGroup;
      v16 = &off_1E72D2F60;
      v11 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v14 = v11;
      v11[2] = v6;
      v11[3] = v5;
      v11[4] = v13;
      v11[5] = v7;
      v11[6] = v8;
      *(_QWORD *)(v2 + 16) = v10 + 1;
      sub_1BA4CECCC(&v14, v2 + 40 * v10 + 32);
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA975C58(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  __int128 v14;
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC7AEA4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v13 = (void *)MEMORY[0x1BCCE4630](i, a1);
        type metadata accessor for DebugFormatUploadHiddenViewController();
        sub_1BA9834B4();
        v6 = v13;
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v3 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7AEA4(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v3 = v15;
        }
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BAC7AEA4(v7 > 1, v8 + 1, 1);
          v3 = v15;
        }
        *(_QWORD *)(v3 + 16) = v8 + 1;
        *(_OWORD *)(v3 + 16 * v8 + 32) = v14;
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      type metadata accessor for DebugFormatUploadHiddenViewController();
      sub_1BA9834B4();
      do
      {
        v10 = *v9;
        swift_dynamicCast();

        v3 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7AEA4(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v3 = v15;
        }
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1BAC7AEA4(v11 > 1, v12 + 1, 1);
          v3 = v15;
        }
        *(_QWORD *)(v3 + 16) = v12 + 1;
        *(_OWORD *)(v3 + 16 * v12 + 32) = v14;
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA975EB4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[40];
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v14 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC7B188(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = MEMORY[0x1E0DB8CD0];
      do
      {
        MEMORY[0x1BCCE4630](v5, a1);
        sub_1BB86FB38();
        sub_1BA65DC00(0, (unint64_t *)&qword_1ED3AFAA0, (unint64_t *)&qword_1ED3AFA90);
        swift_dynamicCast();
        v3 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7B188(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v14;
        }
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BAC7B188(v7 > 1, v8 + 1, 1);
          v3 = v14;
        }
        ++v5;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BA760F3C((uint64_t)v13, v3 + 40 * v8 + 32, (uint64_t)&qword_1ED3AFAA0, (uint64_t)&qword_1ED3AFA90, v6, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA65DC00);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = a1 + 32;
      sub_1BB86FB38();
      v10 = MEMORY[0x1E0DB8CD0];
      sub_1BA65DC00(0, (unint64_t *)&qword_1ED3AFAA0, (unint64_t *)&qword_1ED3AFA90);
      do
      {
        swift_retain();
        swift_dynamicCast();
        v3 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7B188(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v14;
        }
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1BAC7B188(v11 > 1, v12 + 1, 1);
          v3 = v14;
        }
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BA760F3C((uint64_t)v13, v3 + 40 * v12 + 32, (uint64_t)&qword_1ED3AFAA0, (uint64_t)&qword_1ED3AFA90, v10, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA65DC00);
        v9 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA97616C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA57F544(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1BCCE4630](i, a1);
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA57F544(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BA57F544(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1BA76EAE0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA57F544(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BA57F544(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1BA76EAE0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA9763CC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BYTE v9[40];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B188(0, v1, 0);
    v4 = a1 + 32;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2ABCC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB77B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = MEMORY[0x1E0DB8CD0];
    sub_1BA65DC00(0, (unint64_t *)&qword_1ED3AFAA0, (unint64_t *)&qword_1ED3AFA90);
    do
    {
      v4 += 8;
      swift_retain();
      swift_dynamicCast();
      v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B188(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v7 = *(_QWORD *)(v2 + 16);
      v6 = *(_QWORD *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1BAC7B188(v6 > 1, v7 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v7 + 1;
      sub_1BA760F3C((uint64_t)v9, v2 + 40 * v7 + 32, (uint64_t)&qword_1ED3AFAA0, (uint64_t)&qword_1ED3AFA90, v5, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA65DC00);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA976550(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B4C0(0, v1, 0);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B4C0(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BAC7B4C0(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA97669C(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BA6EA0D0(0, v5[2] + 1, 1, v5);
    v5 = (_QWORD *)result;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
    v5 = (_QWORD *)result;
  }
  v5[2] = v8 + 1;
  v9 = &v5[2 * v8];
  v9[4] = a1;
  v9[5] = a2;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA97673C()
{
  _QWORD *v0;

  MEMORY[0x1BCCE36AC]();
  if (*(_QWORD *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  return sub_1BB872DCC();
}

id PuzzleResourceSource.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - v5;
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PuzzleResourceSource();
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v0, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    return *v13;
  if (EnumCaseMultiPayload == 1)
  {
    v16 = objc_msgSend(*v13, sel_identifier);
    v17 = sub_1BB8729A0();
    swift_unknownObjectRelease();

  }
  else
  {
    sub_1BA976B30();
    v19 = (uint64_t)v13 + *(int *)(v18 + 64);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, (char *)v13 + *(int *)(v18 + 48), v7);
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA760F3C(v19, (uint64_t)v6, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v29 = 0x752D656C7A7A7570;
    v30 = 0xEB000000002D6C72;
    sub_1BB872AFC((_QWORD *)0x752D656C7A7A7570);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v21);
    v28 = sub_1BB86C670();
    sub_1BB87420C();
    sub_1BB872AFC(v22);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v23);
    sub_1BA5E01A4((uint64_t)v6, (uint64_t)v3, (unint64_t *)&qword_1ED3D2E70, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
    {
      sub_1BA5C699C((uint64_t)v3, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v24 = 0;
    }
    else
    {
      v24 = sub_1BB86C670();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
    }
    v28 = v24;
    sub_1BB87420C();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    v17 = v29;
    sub_1BA5C699C((uint64_t)v6, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return (id)v17;
}

uint64_t type metadata accessor for PuzzleResourceSource()
{
  uint64_t result;

  result = qword_1EF2ABC38;
  if (!qword_1EF2ABC38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA976B30()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2ACAD0)
  {
    sub_1BB86C67C();
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2ACAD0);
  }
}

BOOL static PuzzleServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleServiceError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PuzzleServiceError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t PuzzleService.puzzle(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA976C5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v1 = v0[3];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  FCCurrentQoSOrUtilityIfMain();
  v4 = (id)FCDispatchQueueForQualityOfService();
  v0[6] = v4;
  v5 = swift_task_alloc();
  v0[7] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_1BA976D40;
  v6 = (_QWORD *)v0[4];
  *(_QWORD *)(v5 + 1624) = v6;
  *(_QWORD *)(v5 + 1576) = v4;
  *(_BYTE *)(v5 + 1784) = 0;
  *(_QWORD *)(v5 + 1528) = v3;
  *(_QWORD *)(v5 + 1672) = *v6;
  return swift_task_switch();
}

uint64_t sub_1BA976D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

void sub_1BA976DBC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BA98176C();
    swift_allocError();
    *v4 = 0;
    swift_willThrow();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = MEMORY[0x1BCCE4630](0, *(_QWORD *)(v0 + 64));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 32);
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_1BA976ECC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzles(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BA976F20()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  FCCurrentQoSOrUtilityIfMain();
  v1 = (id)FCDispatchQueueForQualityOfService();
  v0[4] = v1;
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_1BA976FAC;
  v4 = v0[2];
  v3 = (_QWORD *)v0[3];
  *(_QWORD *)(v2 + 1624) = v3;
  *(_QWORD *)(v2 + 1576) = v1;
  *(_BYTE *)(v2 + 1784) = 0;
  *(_QWORD *)(v2 + 1528) = v4;
  *(_QWORD *)(v2 + 1672) = *v3;
  return swift_task_switch();
}

uint64_t sub_1BA976FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1BA977034()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id PuzzleService.puzzle(for:puzzleType:puzzleMetadata:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  _QWORD *v44;
  id v45;
  int *v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char v53;
  char *v54;
  char v55;
  char v56;
  char v57;
  void *v58;
  char v59;
  char *v60;
  uint64_t v61;
  char v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  char v69;
  char *v70;
  id v71;
  int *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  void *v88;
  void *v89;
  void *v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  void (*v94)(char *, id);
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  unsigned int (*v99)(char *, uint64_t, id);
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  id v111;
  char *v112;
  id v113;
  char *v114;
  id v115;
  id v116;
  _QWORD *v117;
  id v118;
  int *v119;
  uint64_t v120;
  uint64_t v121[2];

  v5 = v4;
  v8 = (int *)type metadata accessor for PuzzleMetadata();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)sub_1BB86C8B0();
  v117 = (_QWORD *)*(v11 - 1);
  v118 = v11;
  MEMORY[0x1E0C80A78](v11);
  v114 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v112 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v93 - v18;
  v113 = a3;
  v20 = objc_msgSend(a3, sel_identifier, v17);
  v21 = sub_1BB8729A0();
  v23 = v22;

  v119 = v8;
  v24 = (_QWORD *)(a4 + v8[17]);
  if (v21 == *v24 && v23 == v24[1])
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v26 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
LABEL_11:
    v40 = *(_QWORD *)(a4 + v119[19]);
    if (v40
      && *(_QWORD *)(v40 + 16)
      && (v41 = sub_1BA6E35A8(0x7463617265746E69, 0xEF65756C43657669), (v42 & 1) != 0))
    {
      v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
      swift_bridgeObjectRetain();
    }
    else
    {
      v43 = sub_1BA8F2B44(MEMORY[0x1E0DEE9D8]);
    }
    v44 = v117;
    v45 = objc_msgSend(objc_msgSend(*(id *)(v5 + 160), sel_appConfiguration), sel_puzzlesConfig);
    swift_unknownObjectRelease();
    v109 = *(id *)(v5 + 64);
    v110 = sub_1BB872970();
    v46 = v119;
    if (*(_QWORD *)(a4 + v119[21] + 8))
      v108 = sub_1BB872970();
    else
      v108 = 0;
    v47 = v118;
    if (*(_QWORD *)(a4 + v46[18] + 8))
    {
      v107 = sub_1BB872970();
      if (*(_QWORD *)(a4 + 56))
        goto LABEL_21;
    }
    else
    {
      v107 = 0;
      if (*(_QWORD *)(a4 + 56))
      {
LABEL_21:
        v106 = sub_1BB872970();
        if (*(_QWORD *)(a4 + 40))
          goto LABEL_22;
        goto LABEL_26;
      }
    }
    v106 = 0;
    if (*(_QWORD *)(a4 + 40))
    {
LABEL_22:
      v105 = sub_1BB872970();
      if (*(_QWORD *)(a4 + 8))
      {
LABEL_23:
        v104 = sub_1BB872D9C();
        goto LABEL_28;
      }
LABEL_27:
      v104 = 0;
LABEL_28:
      v102 = *(_QWORD *)(a4 + 16);
      sub_1BA5E01A4(a4 + v46[16], (uint64_t)v19, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v99 = (unsigned int (*)(char *, uint64_t, id))v44[6];
      if (v99(v19, 1, v47) == 1)
      {
        v103 = 0;
      }
      else
      {
        v103 = sub_1BB86C808();
        ((void (*)(char *, id))v44[1])(v19, v47);
      }
      v101 = *(unsigned __int8 *)(a4 + 73);
      v48 = *(_QWORD *)(a4 + 64);
      v111 = v45;
      v49 = objc_msgSend(v45, sel_difficultyDescriptions);
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
      sub_1BA9817B0();
      v50 = sub_1BB87276C();

      v100 = v48;
      v51 = sub_1BB8745A8();
      v52 = (void *)v51;
      if (*(_QWORD *)(v50 + 16))
      {
        sub_1BB4AB374(v51);
        if ((v53 & 1) != 0)
          swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      v98 = sub_1BB872970();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a4 + v46[20] + 8))
        v116 = (id)sub_1BB872970();
      else
        v116 = 0;
      v54 = v114;
      sub_1BB86C8A4();
      v115 = (id)sub_1BB86C808();
      v94 = (void (*)(char *, id))v117[1];
      v94(v54, v47);
      if (!*(_QWORD *)(v43 + 16))
      {
        v95 = 0;
        v114 = 0;
        v117 = 0;
        goto LABEL_52;
      }
      sub_1BA6E35A8(1702194275, 0xE400000000000000);
      if ((v55 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        v117 = (_QWORD *)sub_1BB872970();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v43 + 16))
        {
LABEL_40:
          sub_1BA6E35A8(0x726577736E61, 0xE600000000000000);
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRetain();
            v114 = (char *)sub_1BB872970();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v43 + 16))
              goto LABEL_42;
          }
          else
          {
            v114 = 0;
            if (*(_QWORD *)(v43 + 16))
            {
LABEL_42:
              sub_1BA6E35A8(1953393000, 0xE400000000000000);
              if ((v57 & 1) != 0)
              {
                swift_bridgeObjectRetain();
                v58 = (void *)sub_1BB872970();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v43 + 16))
                  goto LABEL_44;
              }
              else
              {
                v58 = 0;
                if (*(_QWORD *)(v43 + 16))
                {
LABEL_44:
                  sub_1BA6E35A8(0x6F69746365726964, 0xE90000000000006ELL);
                  if ((v59 & 1) != 0)
                  {
                    swift_bridgeObjectRetain();
                    v95 = sub_1BB872970();
                    swift_bridgeObjectRelease();
                    if (!*(_QWORD *)(v43 + 16))
                      goto LABEL_53;
                  }
                  else
                  {
                    v95 = 0;
                    if (!*(_QWORD *)(v43 + 16))
                      goto LABEL_53;
                  }
                  sub_1BA6E35A8(0x7265626D756ELL, 0xE600000000000000);
                  if ((v63 & 1) != 0)
                  {
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v60 = (char *)sub_1BB872970();
                    swift_bridgeObjectRelease();
                    if (*(_QWORD *)(a4 + 88))
                      goto LABEL_54;
                    goto LABEL_62;
                  }
LABEL_53:
                  swift_bridgeObjectRelease();
                  v60 = 0;
                  if (*(_QWORD *)(a4 + 88))
                  {
LABEL_54:
                    v61 = sub_1BB872970();
                    goto LABEL_63;
                  }
LABEL_62:
                  v61 = 0;
LABEL_63:
                  v64 = *(_QWORD *)(a4 + 24);
                  if (v64)
                  {
                    sub_1BA57F420(v64);
                    v65 = (void *)sub_1BB872D9C();
                    swift_bridgeObjectRelease();
                    v66 = *(_QWORD *)a4;
                    if (*(_QWORD *)a4)
                    {
LABEL_65:
                      sub_1BA57F420(v66);
                      v67 = (void *)sub_1BB872D9C();
                      swift_bridgeObjectRelease();
LABEL_68:
                      v68 = (void *)sub_1BB872970();
                      v69 = *(_BYTE *)(a4 + 72);
                      v70 = v112;
                      sub_1BA5E01A4(a4 + v119[15], (uint64_t)v112, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
                      v71 = v118;
                      if (v99(v70, 1, v118) == 1)
                      {
                        v72 = 0;
                      }
                      else
                      {
                        v72 = (int *)sub_1BB86C808();
                        v94(v70, v71);
                      }
                      v119 = v72;
                      v92 = v72;
                      BYTE1(v91) = v69;
                      LOBYTE(v91) = 0;
                      v97 = v68;
                      v90 = v68;
                      v96 = v67;
                      v88 = v65;
                      v89 = v67;
                      v118 = v65;
                      v73 = (void *)v61;
                      v86 = v60;
                      v87 = v61;
                      v74 = (void *)v95;
                      v85 = v58;
                      v75 = (void *)v98;
                      LOBYTE(v84) = v101;
                      v76 = (void *)v103;
                      v77 = (void *)v104;
                      v78 = v109;
                      v79 = (void *)v110;
                      v81 = (void *)v107;
                      v80 = (void *)v108;
                      v112 = v60;
                      v82 = (void *)v106;
                      v109 = v58;
                      v83 = (void *)v105;
                      v113 = objc_retainAutoreleasedReturnValue(objc_msgSend(v78, sel_createPuzzleForPuzzleType_identifier_title_subtitle_puzzleDescription_dataResourceID_authors_behaviorFlags_publishDate_isPaid_difficulty_difficultyDescription_thumbnailLargeURL_loadDate_teaserClue_teaserAnswer_teaserInfo_teaserDirection_teaserNumber_language_blockedStorefrontIDs_allowedStorefrontIDs_minimumNewsVersion_isDeprecated_isDraft_lastModifiedDate_, v113, v110, v108, v107, v106, v105, v104, v102, v103, v84, v100, v98, v116, v115, v117, v114,
                                 v85,
                                 v95,
                                 v86,
                                 v87,
                                 v88,
                                 v89,
                                 v90,
                                 v91,
                                 v92));

                      return v113;
                    }
                  }
                  else
                  {
                    v65 = 0;
                    v66 = *(_QWORD *)a4;
                    if (*(_QWORD *)a4)
                      goto LABEL_65;
                  }
                  v67 = 0;
                  goto LABEL_68;
                }
              }
              v95 = 0;
              goto LABEL_53;
            }
          }
          v95 = 0;
LABEL_52:
          v58 = 0;
          goto LABEL_53;
        }
      }
      else
      {
        v117 = 0;
        if (*(_QWORD *)(v43 + 16))
          goto LABEL_40;
      }
      v95 = 0;
      v114 = 0;
      goto LABEL_52;
    }
LABEL_26:
    v105 = 0;
    if (*(_QWORD *)(a4 + 8))
      goto LABEL_23;
    goto LABEL_27;
  }
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v27 = sub_1BB86EFEC();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED476918);
  sub_1BA4C2DD8(a4, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleMetadata);
  v28 = v113;
  swift_unknownObjectRetain_n();
  v29 = sub_1BB86EFC8();
  v30 = sub_1BB8732F4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v121[0] = v32;
    *(_DWORD *)v31 = 136315394;
    v33 = objc_msgSend(v28, sel_identifier);
    v34 = sub_1BB8729A0();
    v36 = v35;

    v120 = sub_1BA5D2E14(v34, v36, v121);
    sub_1BB873A8C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v37 = (uint64_t *)&v10[v119[17]];
    v38 = *v37;
    v39 = v37[1];
    swift_bridgeObjectRetain();
    v120 = sub_1BA5D2E14(v38, v39, v121);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleMetadata);
    _os_log_impl(&dword_1BA493000, v29, v30, "Puzzle Service mismatch between provided puzzleTypeID %s and puzzle metadata type ID: %s!  Puzzle will not be created", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v32, -1, -1);
    MEMORY[0x1BCCE5C38](v31, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleMetadata);
  }

  return 0;
}

uint64_t sub_1BA977BDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1704) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA977C48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1480);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BA977C84()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1680);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA977CC0()
{
  return swift_task_switch();
}

uint64_t sub_1BA977CD4()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BA977D28()
{
  return swift_task_switch();
}

uint64_t sub_1BA977D3C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1728);
  v2 = *(void **)(v0 + 1712);

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA977DA4()
{
  swift_bridgeObjectRelease();
  return swift_asyncLet_finish();
}

uint64_t sub_1BA977DF8()
{
  return swift_task_switch();
}

uint64_t sub_1BA977E0C()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BA977E60()
{
  return swift_task_switch();
}

uint64_t sub_1BA977E74()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1728);
  v2 = *(void **)(v0 + 1712);

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_1BA977EF8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;

  FCCurrentQoSOrUtilityIfMain();
  v1 = (id)FCDispatchQueueForQualityOfService();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_1BA976FAC;
  v3 = *(_BYTE *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD **)(v0 + 24);
  *(_QWORD *)(v2 + 1624) = v4;
  *(_QWORD *)(v2 + 1576) = v1;
  *(_BYTE *)(v2 + 1784) = v3;
  *(_QWORD *)(v2 + 1528) = v5;
  *(_QWORD *)(v2 + 1672) = *v4;
  return swift_task_switch();
}

uint64_t PuzzleService.puzzles(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA977FA4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 24);
  FCCurrentQoSOrUtilityIfMain();
  v2 = (id)FCDispatchQueueForQualityOfService();
  *(_QWORD *)(v0 + 48) = v2;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v2;
  *(_BYTE *)(v3 + 48) = 0;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v4 = v0;
  v4[1] = sub_1BA9780A0;
  return sub_1BB874518();
}

uint64_t sub_1BA9780A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:cachePolicy:callbackQueue:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = v4;
  *(_BYTE *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a3;
  return swift_task_switch();
}

uint64_t sub_1BA97812C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_BYTE *)(v0 + 80);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 40) = v2;
  *(_BYTE *)(v4 + 48) = v3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v6 = v0;
  v6[1] = sub_1BA97820C;
  return sub_1BB874518();
}

uint64_t sub_1BA97820C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA978278()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA978284()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:cachePolicy:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = v3;
  *(_BYTE *)(v4 + 80) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA9782D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 24);
  FCCurrentQoSOrUtilityIfMain();
  v3 = (id)FCDispatchQueueForQualityOfService();
  *(_QWORD *)(v0 + 48) = v3;
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v7;
  *(_QWORD *)(v4 + 40) = v3;
  *(_BYTE *)(v4 + 48) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v5 = v0;
  v5[1] = sub_1BA9783D8;
  return sub_1BB874518();
}

uint64_t sub_1BA9783D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA978444()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA978478()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzles(for:cachePolicy:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1BA9784CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  *(_BYTE *)(v3 + 48) = 0;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v5 = v0;
  v5[1] = sub_1BA9785A0;
  return sub_1BB874518();
}

uint64_t sub_1BA9785A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA97860C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BA978640(uint64_t *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint8_t *buf;
  uint8_t *bufa;
  uint64_t type;
  os_log_type_t typea;
  uint64_t v35;

  if (!a2 || !*(_QWORD *)(a2 + 16))
    goto LABEL_15;
  v9 = *a1;
  v10 = a1[1];
  swift_bridgeObjectRetain();
  v11 = sub_1BA6E35A8(v9, v10);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v13 = 0;
    goto LABEL_16;
  }
  v13 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v11);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v13, sel_isDeprecated) & 1) == 0)
    goto LABEL_26;
  if (qword_1EF2A73A0 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) == 0)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v22 = sub_1BB86EFEC();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED476918);
    swift_unknownObjectRetain_n();
    v23 = sub_1BB86EFC8();
    v24 = sub_1BB87330C();
    if (os_log_type_enabled(v23, v24))
    {
      typea = v24;
      v25 = (uint8_t *)swift_slowAlloc();
      bufa = (uint8_t *)swift_slowAlloc();
      v35 = (uint64_t)bufa;
      *(_DWORD *)v25 = 136315138;
      v30 = v25;
      v26 = objc_msgSend(v13, sel_identifier);
      v27 = sub_1BB8729A0();
      v29 = v28;

      sub_1BA5D2E14(v27, v29, &v35);
      sub_1BB873A8C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA493000, v23, typea, "PuzzleService encountered deprecated puzzle %s during a batched fetch. This puzzle will be excluded from the fetch result.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](bufa, -1, -1);
      MEMORY[0x1BCCE5C38](v30, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v13 = 0;
    *a3 = 1;
  }
  else
  {
LABEL_26:
    if ((a4 & 1) != 0 && objc_msgSend(v13, sel_isDraft))
    {
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v14 = sub_1BB86EFEC();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED476918);
      swift_unknownObjectRetain_n();
      v15 = sub_1BB86EFC8();
      v16 = sub_1BB87330C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        type = swift_slowAlloc();
        v35 = type;
        *(_DWORD *)v17 = 136315138;
        buf = v17;
        v18 = objc_msgSend(v13, sel_identifier);
        v19 = sub_1BB8729A0();
        v21 = v20;

        sub_1BA5D2E14(v19, v21, &v35);
        sub_1BB873A8C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA493000, v15, v16, "PuzzleService encountered draft puzzle %s during a batched fetch. This puzzle will be excluded from the fetch result.", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](type, -1, -1);
        MEMORY[0x1BCCE5C38](buf, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  *a5 = v13;
}

uint64_t PuzzleService.puzzleTypes(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1BA978AB4()
{
  uint64_t v0;
  id v1;
  int8x16_t *v2;
  _QWORD *v3;
  int8x16_t v5;

  v5 = *(int8x16_t *)(v0 + 24);
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  *(_QWORD *)(v0 + 40) = v1;
  v2 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  v2[1] = vextq_s8(v5, v5, 8uLL);
  v2[2].i64[0] = (uint64_t)v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  sub_1BA52E378(0, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  *v3 = v0;
  v3[1] = sub_1BA978BB0;
  return sub_1BB874518();
}

uint64_t sub_1BA978BB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA978C1C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA978C50()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzleTypes(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA978CA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  sub_1BA52E378(0, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  *v5 = v0;
  v5[1] = sub_1BA978D78;
  return sub_1BB874518();
}

uint64_t sub_1BA978D78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA978DE4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzleTypes(for:qos:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA978E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  v0[6] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  v5[2] = v1;
  v5[3] = v3;
  v5[4] = v4;
  v5[5] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[8] = v6;
  sub_1BA52E378(0, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  *v6 = v0;
  v6[1] = sub_1BA9783D8;
  return sub_1BB874518();
}

uint64_t PuzzleService.puzzleTypes(for:cachePolicy:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1BA978F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  sub_1BA52E378(0, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  *v4 = v0;
  v4[1] = sub_1BA97820C;
  return sub_1BB874518();
}

void sub_1BA97902C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v20 = a4;
  sub_1BA6F7A88(0, &qword_1ED3AB140, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - v10;
  v12 = *(void **)(a2 + 72);
  sub_1BA57F420(a3);
  v13 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v14 = FCCurrentQoSOrUtilityIfMain();
  FCCurrentQoSOrUtilityIfMain();
  v15 = (id)FCDispatchQueueForQualityOfService();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v11, v8);
  aBlock[4] = sub_1BA983A84;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA9791E8;
  aBlock[3] = &block_descriptor_186;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v12, sel_fetchPuzzleTypesForPuzzleTypeIDs_cachePolicy_qualityOfService_callbackQueue_completionHandler_, v13, v20, v14, v15, v18);
  _Block_release(v18);

}

uint64_t sub_1BA9791E8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BA511EE0(a1, a2, a3, (unint64_t *)&qword_1ED3CF990);
}

void sub_1BA9791FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v21 = a4;
  sub_1BA6F7A88(0, &qword_1ED3AB140, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  v14 = *(void **)(a2 + 72);
  sub_1BA57F420(a3);
  v15 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v16 = (id)FCDispatchQueueForQualityOfService();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, v13, v10);
  aBlock[4] = sub_1BA983A84;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA9791E8;
  aBlock[3] = &block_descriptor_180;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_fetchPuzzleTypesForPuzzleTypeIDs_cachePolicy_qualityOfService_callbackQueue_completionHandler_, v15, v21, a5, v16, v19);
  _Block_release(v19);

}

uint64_t sub_1BA9793B4(uint64_t a1, id a2)
{
  id v2;
  uint64_t v4;
  _BYTE *v5;

  if (a2)
  {
    v2 = a2;
LABEL_3:
    sub_1BA6F7A88(0, &qword_1ED3AB140, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
    return sub_1BB872F34();
  }
  if (!a1)
  {
    sub_1BA98176C();
    swift_allocError();
    *v5 = 2;
    goto LABEL_3;
  }
  v4 = swift_bridgeObjectRetain();
  sub_1BA574364(v4);
  swift_bridgeObjectRelease();
  sub_1BA6F7A88(0, &qword_1ED3AB140, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  return sub_1BB872F40();
}

uint64_t PuzzleService.puzzleResource(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3[5] = swift_task_alloc();
  v4 = sub_1BB86C67C();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = type metadata accessor for PuzzleResourceSource();
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BA97956C()
{
  uint64_t *v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;

  sub_1BA4C2DD8(v0[3], v0[10], (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v2 = *(_QWORD *)v0[10];
      v0[17] = v2;
      v3 = (_QWORD *)swift_task_alloc();
      v0[18] = (uint64_t)v3;
      *v3 = v0;
      v3[1] = sub_1BA979948;
      return PuzzleService.puzzleResource(puzzle:)(v0[2], v2);
    }
    else
    {
      v10 = (uint64_t *)v0[10];
      v12 = v0[7];
      v11 = v0[8];
      v14 = v0[5];
      v13 = v0[6];
      v15 = *v10;
      v16 = v10[1];
      v0[20] = v16;
      sub_1BA976B30();
      v18 = (char *)v10 + *(int *)(v17 + 48);
      v19 = (uint64_t)v10 + *(int *)(v17 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v18, v13);
      sub_1BA760F3C(v19, v14, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
      v20 = (_QWORD *)swift_task_alloc();
      v0[21] = (uint64_t)v20;
      *v20 = v0;
      v20[1] = sub_1BA979A00;
      return PuzzleService.puzzleResource(puzzleID:indexFileURL:puzzleDataStoreURL:)(v0[2], v15, v16, v0[8], v0[5]);
    }
  }
  else
  {
    v5 = (uint64_t *)v0[10];
    v7 = *v5;
    v6 = v5[1];
    v0[11] = v6;
    v8 = (_QWORD *)swift_task_alloc();
    v0[12] = (uint64_t)v8;
    *v8 = v0;
    v8[1] = sub_1BA979738;
    v9 = v0[4];
    v8[3] = v6;
    v8[4] = v9;
    v8[2] = v7;
    return swift_task_switch();
  }
}

uint64_t sub_1BA979738(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  _QWORD *v6;

  v4 = *v2;
  v4[13] = a1;
  swift_task_dealloc();
  if (v1)
  {
    v4[16] = v1;
    return swift_task_switch();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v4[14] = (uint64_t)v6;
    *v6 = v4;
    v6[1] = sub_1BA9797E4;
    return PuzzleService.puzzleResource(puzzle:)(v4[2], a1);
  }
}

uint64_t sub_1BA9797E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA979848()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA9798A8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 120);
  return swift_task_switch();
}

uint64_t sub_1BA9798EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA979948()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA9799AC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA979A00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BA979A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1BA5C699C(*(_QWORD *)(v0 + 40), (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA979AEC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA979B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1BA5C699C(*(_QWORD *)(v0 + 40), (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzleResource(puzzleID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v7;

  v4[2] = a1;
  v4[3] = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_1BA979C3C;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  return swift_task_switch();
}

uint64_t sub_1BA979C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v6;
  *v6 = v4;
  v6[1] = sub_1BA979CD4;
  return PuzzleService.puzzleResource(puzzle:)(*(_QWORD *)(v4 + 16), a1);
}

uint64_t sub_1BA979CD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA979D38()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA979D6C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzleResource(puzzle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = type metadata accessor for PuzzleResource();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3[13] = swift_task_alloc();
  v4 = sub_1BB86C67C();
  v3[14] = v4;
  v3[15] = *(_QWORD *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for WebArchive();
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BA979EA4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  _QWORD *v26;
  uint64_t v27;

  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = sub_1BB86EFEC();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain_n();
  v2 = sub_1BB86EFC8();
  v3 = sub_1BB87330C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 64);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v27 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = objc_msgSend(v5, sel_identifier);
    v9 = sub_1BB8729A0();
    v11 = v10;

    *(_QWORD *)(v0 + 48) = sub_1BA5D2E14(v9, v11, &v27);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v2, v3, "PuzzleService start fetching puzzle resources for puzzle=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v7, -1, -1);
    MEMORY[0x1BCCE5C38](v6, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  v12 = objc_msgSend(*(id *)(v0 + 64), sel_dataResourceID);
  if (!v12)
  {
    sub_1BA98176C();
    swift_allocError();
    v24 = 2;
    goto LABEL_12;
  }
  v13 = v12;
  v14 = *(void **)(v0 + 64);
  v15 = sub_1BB8729A0();
  v17 = v16;

  v18 = objc_msgSend(objc_msgSend(v14, sel_puzzleType), sel_engineResourceID);
  swift_unknownObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    sub_1BA98176C();
    swift_allocError();
    v24 = 1;
    goto LABEL_12;
  }
  v19 = *(void **)(v0 + 64);
  v20 = sub_1BB8729A0();
  v22 = v21;

  *(_QWORD *)(v0 + 168) = v20;
  *(_QWORD *)(v0 + 176) = v22;
  if ((objc_msgSend(v19, sel_isDeprecated) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA98176C();
    swift_allocError();
    v24 = 5;
LABEL_12:
    *v23 = v24;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 72) + 80), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 104));
  *(_QWORD *)(v0 + 184) = ResourceServiceType.fetchResource(identifier:)(v15, v17);
  swift_bridgeObjectRelease();
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v26;
  *v26 = v0;
  v26[1] = sub_1BA97A28C;
  return sub_1BB86E908();
}

uint64_t sub_1BA97A28C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BA97A308()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v8[4];

  v2 = v0[21];
  v1 = v0[22];
  v3 = (_QWORD *)v0[9];
  v0[26] = v0[2];
  v4 = v3[18];
  v5 = v3[19];
  __swift_project_boxed_opaque_existential_1(v3 + 15, v4);
  v8[0] = v2;
  v8[1] = v1;
  v8[2] = 0;
  v8[3] = 0;
  v0[27] = WebArchiveServiceType.resolve(webArchive:)((uint64_t)v8, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)swift_task_alloc();
  v0[28] = v6;
  *v6 = v0;
  v6[1] = sub_1BA97A3C0;
  return sub_1BB86E908();
}

uint64_t sub_1BA97A3C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BA97A42C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t (*v40)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50[2];

  v1 = objc_msgSend(*(id *)(v0 + 208), sel_fileURL);
  if (!v1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 104), 1, 1, *(_QWORD *)(v0 + 112));
    goto LABEL_6;
  }
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  sub_1BB86C5EC();

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v7(v6, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
LABEL_6:
    v37 = *(void **)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 152);
    sub_1BA5C699C(*(_QWORD *)(v0 + 104), (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA98176C();
    swift_allocError();
    *v39 = 4;
    swift_willThrow();

    sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  v8 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 120);
  v45 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 80);
  v47 = *(_QWORD *)(v0 + 88);
  v15 = *(char **)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  v7(v9, *(_QWORD *)(v0 + 104), v12);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16(&v15[*(int *)(v13 + 20)], v8 + *(int *)(v10 + 28), v12);
  v16(&v15[*(int *)(v13 + 24)], v9, v12);
  *(_QWORD *)v15 = v14;
  sub_1BA4C2DD8((uint64_t)v15, v45, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
  sub_1BA4C2DD8((uint64_t)v15, v47, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
  swift_unknownObjectRetain_n();
  v17 = sub_1BB86EFC8();
  v18 = sub_1BB87330C();
  v19 = os_log_type_enabled(v17, v18);
  v20 = *(_QWORD *)(v0 + 152);
  v21 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(void **)(v0 + 64);
  if (v19)
  {
    v49 = *(void **)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 112);
    v27 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v50[0] = v43;
    *(_DWORD *)v27 = 136315650;
    v48 = v20;
    v28 = objc_msgSend(v26, sel_identifier);
    v44 = v23;
    v29 = sub_1BB8729A0();
    v46 = v21;
    v31 = v30;

    *(_QWORD *)(v0 + 24) = sub_1BA5D2E14(v29, v31, v50);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    sub_1BA50AD30((unint64_t *)&qword_1ED3A0CE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v32 = sub_1BB87420C();
    *(_QWORD *)(v0 + 32) = sub_1BA5D2E14(v32, v33, v50);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
    *(_WORD *)(v27 + 22) = 2080;
    v34 = sub_1BB87420C();
    *(_QWORD *)(v0 + 40) = sub_1BA5D2E14(v34, v35, v50);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
    _os_log_impl(&dword_1BA493000, v17, v18, "PuzzleService finished fetching puzzle resources for puzzle=%s with indexFileURL=%s \n dataFileURL=%s", (uint8_t *)v27, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v43, -1, -1);
    MEMORY[0x1BCCE5C38](v27, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v42);
    v36 = v48;
  }
  else
  {

    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
    sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v36 = v20;
  }
  sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1BA97A960()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97A9D8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.puzzleResource(puzzleID:indexFileURL:puzzleDataStoreURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v6[235] = v5;
  v6[229] = a5;
  v6[223] = a4;
  v6[217] = a1;
  v9 = sub_1BB86C52C();
  v6[241] = v9;
  v6[247] = *(_QWORD *)(v9 - 8);
  v6[253] = swift_task_alloc();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6[259] = swift_task_alloc();
  v6[265] = swift_task_alloc();
  v6[271] = swift_task_alloc();
  v6[277] = swift_task_alloc();
  v6[278] = swift_task_alloc();
  v10 = sub_1BB86C67C();
  v6[279] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[280] = v11;
  v6[281] = *(_QWORD *)(v11 + 64);
  v6[282] = swift_task_alloc();
  v6[283] = swift_task_alloc();
  v6[284] = swift_task_alloc();
  v6[285] = swift_task_alloc();
  v6[286] = swift_task_alloc();
  v6[287] = swift_task_alloc();
  v6[288] = swift_task_alloc();
  v6[289] = swift_task_alloc();
  v6[290] = swift_task_alloc();
  v6[291] = swift_task_alloc();
  v6[292] = swift_task_alloc();
  v6[293] = swift_task_alloc();
  v6[294] = swift_task_alloc();
  sub_1BA98182C();
  v6[295] = v12;
  v6[296] = swift_task_alloc();
  v6[297] = swift_task_alloc();
  v13 = (_QWORD *)swift_task_alloc();
  v6[298] = v13;
  *v13 = v6;
  v13[1] = sub_1BA97AC9C;
  v13[3] = a3;
  v13[4] = v5;
  v13[2] = a2;
  return swift_task_switch();
}

uint64_t sub_1BA97AC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 2392) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1BA97AE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t, uint64_t);
  id v11;

  v1 = *(_QWORD *)(v0 + 2352);
  v2 = *(_QWORD *)(v0 + 2240);
  v3 = *(_QWORD *)(v0 + 2232);
  v4 = *(_QWORD *)(v0 + 1784);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  *(_QWORD *)(v0 + 2400) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 2408) = v6;
  v6(v1, v4, v3);
  v7 = *(_DWORD *)(v2 + 80);
  *(_DWORD *)(v0 + 2624) = v7;
  v8 = (v7 + 24) & ~(unint64_t)v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 2416) = v9;
  *(_QWORD *)(v9 + 16) = v5;
  v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  *(_QWORD *)(v0 + 2424) = v10;
  v10(v9 + v8, v1, v3);
  v11 = v5;
  swift_retain();
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1BA97AFFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 2432) = v0;
  return swift_task_switch();
}

uint64_t sub_1BA97B088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_type_t v36;
  void (*v37)(uint64_t, uint64_t);
  void (*v38)(unint64_t, uint64_t, uint64_t);
  void (*v39)(uint64_t, unint64_t, uint64_t);
  void *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unsigned int v57;
  void *v58;
  unsigned int v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  unsigned int v64;
  void *v65;
  id v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unsigned int v81;
  void *v82;
  unsigned int v83;
  void *v84;
  id v85;
  void *v86;
  unsigned int v87;
  void *v88;
  id v89;
  void *v90;
  unsigned int v91;
  void *v92;
  unsigned int v93;
  void *v94;
  id v95;
  void *v96;
  void *v97;
  unsigned int v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  void *v104;
  unsigned int v105;
  id v106;
  void *v107;
  unsigned int v108;
  void (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  void (*v137)(char *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t);
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  NSObject *v164;
  os_log_type_t v165;
  uint8_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  id v174;
  void (*v175)(uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  id v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185[2];

  v185[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(v0 + 2240);
  v2 = *(_QWORD *)(v0 + 2232);
  v3 = *(_QWORD *)(v0 + 2224);
  v4 = *(_QWORD *)(v0 + 2216);
  v5 = *(_QWORD *)(v0 + 1832);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 2408))(*(_QWORD *)(v0 + 2344), *(_QWORD *)(v0 + 2376), v2);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  *(_QWORD *)(v0 + 2440) = v6;
  v6(v3, 1, 1, v2);
  sub_1BA5E01A4(v5, v4, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  *(_QWORD *)(v0 + 2448) = v7;
  if (v7(v4, 1, v2) != 1)
  {
    v38 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 2424);
    v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 2408);
    v40 = *(void **)(v0 + 2400);
    v41 = *(_QWORD *)(v0 + 2336);
    v42 = *(_QWORD *)(v0 + 2328);
    v43 = *(_QWORD *)(v0 + 2232);
    v44 = (*(unsigned __int8 *)(v0 + 2624) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2624);
    v38(v41, *(_QWORD *)(v0 + 2216), v43);
    v39(v42, v41, v43);
    v45 = swift_allocObject();
    *(_QWORD *)(v0 + 2456) = v45;
    *(_QWORD *)(v45 + 16) = v40;
    v38(v45 + v44, v42, v43);
    v46 = v40;
    swift_retain();
    swift_asyncLet_begin();
    return swift_asyncLet_get_throwing();
  }
  sub_1BA5C699C(*(_QWORD *)(v0 + 2216), (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *(_OWORD *)(v0 + 2472) = 0u;
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_defaultManager);
  *(_QWORD *)(v0 + 2488) = v9;
  sub_1BB86C604();
  v10 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_contentsAtPath_, v10);

  if (v11)
  {
    v12 = sub_1BB86C6E8();
    v14 = v13;

    *(_QWORD *)(v0 + 2496) = v12;
    *(_QWORD *)(v0 + 2504) = v14;
    v183 = v12;
    v184 = v14;
    sub_1BA97FC48((uint64_t)&unk_1E7250010, v12, v14);
    if ((v15 & 1) != 0)
    {
      v174 = v8;
      v181 = v9;
      v16 = *(_QWORD *)(v0 + 2304);
      v17 = *(_QWORD *)(v0 + 2240);
      v18 = *(_QWORD *)(v0 + 2232);
      v19 = *(_QWORD *)(v0 + 2024);
      v20 = *(_QWORD *)(v0 + 1976);
      v21 = *(_QWORD *)(v0 + 1928);
      sub_1BB86C5D4();
      *(_QWORD *)(v0 + 1336) = 0xD000000000000010;
      *(_QWORD *)(v0 + 1344) = 0x80000001BB9651C0;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x1E0CAFD60], v21);
      sub_1BA7114A0();
      sub_1BB86C658();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
      v175 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v175(v16, v18);
      sub_1BB86C5BC();
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2408);
      v23 = *(_QWORD *)(v0 + 2312);
      v24 = *(_QWORD *)(v0 + 2288);
      v25 = *(_QWORD *)(v0 + 2232);
      v26 = sub_1BB86EFEC();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED476918);
      v22(v24, v23, v25);
      v27 = sub_1BB86EFC8();
      v28 = sub_1BB87330C();
      v29 = os_log_type_enabled(v27, v28);
      v30 = *(_QWORD *)(v0 + 2288);
      v31 = *(_QWORD *)(v0 + 2232);
      if (v29)
      {
        v32 = (uint8_t *)swift_slowAlloc();
        v33 = swift_slowAlloc();
        v185[0] = v33;
        *(_DWORD *)v32 = 136315138;
        sub_1BA50AD30((unint64_t *)&qword_1ED3A0CE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v34 = sub_1BB87420C();
        *(_QWORD *)(v0 + 1448) = sub_1BA5D2E14(v34, v35, v185);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        v175(v30, v31);
        v36 = v28;
        v37 = v175;
        _os_log_impl(&dword_1BA493000, v27, v36, "Unarchiving puzzle [%s]", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v33, -1, -1);
        MEMORY[0x1BCCE5C38](v32, -1, -1);
      }
      else
      {
        v37 = v175;
        v175(v30, v31);
      }

      v78 = *(_QWORD *)(v0 + 2304);
      v79 = *(_QWORD *)(v0 + 2232);
      sub_1BB86C598();
      sub_1BB86C5C8();
      v37(v78, v79);
      sub_1BB86C604();
      v80 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v81 = objc_msgSend(v181, sel_fileExistsAtPath_, v80);

      if (v81)
      {
        v82 = (void *)sub_1BB86C58C();
        *(_QWORD *)(v0 + 1352) = 0;
        v83 = objc_msgSend(v181, sel_removeItemAtURL_error_, v82, v0 + 1352);

        v84 = *(void **)(v0 + 1352);
        if (!v83)
        {
          v177 = *(_QWORD *)(v0 + 2344);
          v131 = *(_QWORD *)(v0 + 2312);
          v132 = *(_QWORD *)(v0 + 2296);
          v133 = *(_QWORD *)(v0 + 2280);
          v134 = *(_QWORD *)(v0 + 2232);
          v135 = *(_QWORD *)(v0 + 2224);
          v136 = v84;
          *(_QWORD *)(v0 + 2576) = sub_1BB86C484();

          swift_willThrow();
          sub_1BA69D314(v183, v184);

          v37(v133, v134);
          v37(v132, v134);
          v37(v131, v134);
          sub_1BA5C699C(v135, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v37(v177, v134);
          return swift_asyncLet_finish();
        }
        v85 = v84;
      }
      v86 = (void *)sub_1BB86C58C();
      *(_QWORD *)(v0 + 1688) = 0;
      v87 = objc_msgSend(v181, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v86, 0, 0, v0 + 1688);

      v88 = *(void **)(v0 + 1688);
      if (!v87)
      {
        v176 = *(_QWORD *)(v0 + 2344);
        v120 = *(_QWORD *)(v0 + 2312);
        v121 = *(_QWORD *)(v0 + 2296);
        v122 = *(_QWORD *)(v0 + 2280);
        v123 = *(_QWORD *)(v0 + 2232);
        v124 = *(_QWORD *)(v0 + 2224);
        v125 = v88;
        *(_QWORD *)(v0 + 2584) = sub_1BB86C484();

        swift_willThrow();
        sub_1BA69D314(v183, v184);

        v37(v122, v123);
        v37(v121, v123);
        v37(v120, v123);
        sub_1BA5C699C(v124, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v37(v176, v123);
        return swift_asyncLet_finish();
      }
      v89 = v88;
      sub_1BB86C604();
      v90 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v91 = objc_msgSend(v181, sel_fileExistsAtPath_, v90);

      if (v91)
      {
        v92 = (void *)sub_1BB86C58C();
        *(_QWORD *)(v0 + 1496) = 0;
        v93 = objc_msgSend(v181, sel_removeItemAtURL_error_, v92, v0 + 1496);

        v94 = *(void **)(v0 + 1496);
        if (!v93)
        {
          v180 = *(_QWORD *)(v0 + 2344);
          v153 = *(_QWORD *)(v0 + 2312);
          v154 = *(_QWORD *)(v0 + 2296);
          v155 = *(_QWORD *)(v0 + 2280);
          v156 = *(_QWORD *)(v0 + 2232);
          v157 = *(_QWORD *)(v0 + 2224);
          v158 = v94;
          *(_QWORD *)(v0 + 2592) = sub_1BB86C484();

          swift_willThrow();
          sub_1BA69D314(v183, v184);

          v37(v155, v156);
          v37(v154, v156);
          v37(v153, v156);
          sub_1BA5C699C(v157, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v37(v180, v156);
          return swift_asyncLet_finish();
        }
        v95 = v94;
      }
      v96 = (void *)sub_1BB86C58C();
      v97 = (void *)sub_1BB86C58C();
      *(_QWORD *)(v0 + 1400) = 0;
      v98 = objc_msgSend(v181, sel_moveItemAtURL_toURL_error_, v96, v97, v0 + 1400);

      v99 = *(void **)(v0 + 1400);
      if (!v98)
      {
        v179 = *(_QWORD *)(v0 + 2344);
        v147 = *(_QWORD *)(v0 + 2312);
        v148 = *(_QWORD *)(v0 + 2296);
        v149 = *(_QWORD *)(v0 + 2280);
        v150 = *(_QWORD *)(v0 + 2232);
        v151 = *(_QWORD *)(v0 + 2224);
        v152 = v99;
        *(_QWORD *)(v0 + 2600) = sub_1BB86C484();

        swift_willThrow();
        sub_1BA69D314(v183, v184);

        v37(v149, v150);
        v37(v148, v150);
        v37(v147, v150);
        sub_1BA5C699C(v151, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v37(v179, v150);
        return swift_asyncLet_finish();
      }
      v100 = objc_allocWithZone(MEMORY[0x1E0D60AC8]);
      v101 = v99;
      v102 = objc_msgSend(v100, sel_init);
      v103 = (void *)sub_1BB86C58C();
      v104 = (void *)sub_1BB86C58C();
      v105 = objc_msgSend(v102, sel_unarchive_toLocation_, v103, v104);

      v106 = objc_msgSend(v174, sel_defaultManager);
      sub_1BB86C520();
      v107 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v108 = objc_msgSend(v106, sel_fileExistsAtPath_, v107);

      if (!v105 || !v108)
      {
        v164 = sub_1BB86EFC8();
        v165 = sub_1BB8732F4();
        if (os_log_type_enabled(v164, v165))
        {
          v166 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v166 = 0;
          _os_log_impl(&dword_1BA493000, v164, v165, "Failed to decompress archive file", v166, 2u);
          MEMORY[0x1BCCE5C38](v166, -1, -1);
        }
        v167 = *(_QWORD *)(v0 + 2344);
        v168 = *(_QWORD *)(v0 + 2312);
        v169 = *(_QWORD *)(v0 + 2296);
        v170 = *(_QWORD *)(v0 + 2280);
        v171 = *(_QWORD *)(v0 + 2232);
        v172 = *(_QWORD *)(v0 + 2224);

        sub_1BA98176C();
        *(_QWORD *)(v0 + 2512) = swift_allocError();
        *v173 = 3;
        swift_willThrow();

        sub_1BA69D314(v183, v184);
        v37(v170, v171);
        v37(v169, v171);
        v37(v168, v171);
        sub_1BA5C699C(v172, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v37(v167, v171);
        return swift_asyncLet_finish();
      }
      v109 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2424);
      v110 = *(_QWORD *)(v0 + 2320);
      v111 = *(_QWORD *)(v0 + 2312);
      v112 = *(_QWORD *)(v0 + 2296);
      v113 = *(_QWORD *)(v0 + 2280);
      v114 = *(_QWORD *)(v0 + 2232);

      v37(v113, v114);
      v37(v111, v114);
      v109(v110, v112, v114);
      v9 = v181;
    }
    else
    {
      v53 = *(_QWORD *)(v0 + 2304);
      v54 = *(_QWORD *)(v0 + 2240);
      v55 = *(_QWORD *)(v0 + 2232);
      sub_1BB86C598();
      sub_1BB86C5C8();
      v37 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v37(v53, v55);
      sub_1BB86C604();
      v56 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v57 = objc_msgSend(v9, sel_fileExistsAtPath_, v56);

      if (v57)
      {
        v58 = (void *)sub_1BB86C58C();
        *(_QWORD *)(v0 + 1544) = 0;
        v59 = objc_msgSend(v9, sel_removeItemAtURL_error_, v58, v0 + 1544);

        v60 = *(void **)(v0 + 1544);
        if (!v59)
        {
          v126 = *(_QWORD *)(v0 + 2344);
          v127 = *(_QWORD *)(v0 + 2272);
          v128 = *(_QWORD *)(v0 + 2232);
          v129 = *(_QWORD *)(v0 + 2224);
          v130 = v60;
          *(_QWORD *)(v0 + 2608) = sub_1BB86C484();

          swift_willThrow();
          sub_1BA69D314(v183, v184);

          v37(v127, v128);
          sub_1BA5C699C(v129, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v37(v126, v128);
          return swift_asyncLet_finish();
        }
        v61 = v60;
      }
      v62 = (void *)sub_1BB86C58C();
      v63 = (void *)sub_1BB86C58C();
      *(_QWORD *)(v0 + 1640) = 0;
      v64 = objc_msgSend(v9, sel_moveItemAtURL_toURL_error_, v62, v63, v0 + 1640);

      v65 = *(void **)(v0 + 1640);
      if (!v64)
      {
        v115 = *(_QWORD *)(v0 + 2344);
        v116 = *(_QWORD *)(v0 + 2272);
        v117 = *(_QWORD *)(v0 + 2232);
        v118 = *(_QWORD *)(v0 + 2224);
        v119 = v65;
        *(_QWORD *)(v0 + 2616) = sub_1BB86C484();

        swift_willThrow();
        sub_1BA69D314(v183, v184);

        v37(v116, v117);
        sub_1BA5C699C(v118, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v37(v115, v117);
        return swift_asyncLet_finish();
      }
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 2424))(*(_QWORD *)(v0 + 2320), *(_QWORD *)(v0 + 2272), *(_QWORD *)(v0 + 2232));
      v66 = v65;
    }
    v182 = v9;
    *(_QWORD *)(v0 + 2520) = v37;
    v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2448);
    v68 = *(_QWORD *)(v0 + 2232);
    v69 = *(_QWORD *)(v0 + 2120);
    sub_1BA5E01A4(*(_QWORD *)(v0 + 2224), v69, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v67(v69, 1, v68) == 1)
    {
      v70 = *(void **)(v0 + 2392);
      sub_1BA5C699C(*(_QWORD *)(v0 + 2120), (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v71 = objc_msgSend(v70, sel_dataResourceID);
      if (v71)
      {
        v72 = v71;
        v73 = *(_QWORD *)(v0 + 1880);
        v74 = sub_1BB8729A0();
        v76 = v75;

        __swift_project_boxed_opaque_existential_1((_QWORD *)(v73 + 80), *(_QWORD *)(v73 + 104));
        *(_QWORD *)(v0 + 2528) = ResourceServiceType.fetchResource(identifier:)(v74, v76);
        swift_bridgeObjectRelease();
        v77 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 2536) = v77;
        *v77 = v0;
        v77[1] = sub_1BA97D9FC;
        return sub_1BB86E908();
      }
      v159 = *(_QWORD *)(v0 + 2344);
      v160 = *(_QWORD *)(v0 + 2320);
      v161 = *(_QWORD *)(v0 + 2232);
      v162 = *(_QWORD *)(v0 + 2224);
      sub_1BA98176C();
      *(_QWORD *)(v0 + 2560) = swift_allocError();
      *v163 = 2;
      swift_willThrow();
      sub_1BA69D314(v183, v184);

      v37(v160, v161);
      sub_1BA5C699C(v162, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v37(v159, v161);
    }
    else
    {
      v137 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 2424);
      v138 = *(_QWORD *)(v0 + 2392);
      v139 = *(_QWORD *)(v0 + 2344);
      v178 = *(_QWORD *)(v0 + 2320);
      v140 = *(char **)(v0 + 2264);
      v141 = *(_QWORD *)(v0 + 2232);
      v142 = *(_QWORD *)(v0 + 2224);
      v143 = *(_QWORD *)(v0 + 2120);
      v144 = v37;
      v145 = *(char **)(v0 + 1736);
      sub_1BA69D314(v183, v184);

      sub_1BA5C699C(v142, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v144(v139, v141);
      v137(v140, v143, v141);
      v146 = type metadata accessor for PuzzleResource();
      v137(&v145[*(int *)(v146 + 20)], v178, v141);
      v137(&v145[*(int *)(v146 + 24)], (uint64_t)v140, v141);
      *(_QWORD *)v145 = v138;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    v48 = *(_QWORD *)(v0 + 2344);
    v49 = *(_QWORD *)(v0 + 2240);
    v50 = *(_QWORD *)(v0 + 2232);
    v51 = *(_QWORD *)(v0 + 2224);
    sub_1BA98176C();
    *(_QWORD *)(v0 + 2568) = swift_allocError();
    *v52 = 3;
    swift_willThrow();

    sub_1BA5C699C(v51, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  }
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97C2E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 2464) = v0;
  return swift_task_switch();
}

uint64_t sub_1BA97C36C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[305];
  v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[301];
  v3 = v0[296];
  v4 = v0[279];
  v5 = v0[278];
  v6 = v0[271];
  v7 = MEMORY[0x1E0CAFFF8];
  sub_1BA5C699C(v5, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v2(v6, v3, v4);
  v1(v6, 0, 1, v4);
  sub_1BA760F3C(v6, v5, (uint64_t)&qword_1ED3D2E70, (uint64_t)v7, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97C470()
{
  return swift_task_switch();
}

uint64_t sub_1BA97C4D0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_log_type_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unsigned int v40;
  void *v41;
  unsigned int v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  unsigned int v47;
  void *v48;
  id v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  unsigned int v65;
  void *v66;
  unsigned int v67;
  void *v68;
  id v69;
  void *v70;
  unsigned int v71;
  void *v72;
  id v73;
  void *v74;
  unsigned int v75;
  void *v76;
  unsigned int v77;
  void *v78;
  id v79;
  void *v80;
  void *v81;
  unsigned int v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  unsigned int v89;
  id v90;
  void *v91;
  unsigned int v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  id v158;
  void (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  id v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169[2];

  v169[1] = *MEMORY[0x1E0C80C00];
  (*(void (**)(_QWORD, _QWORD))(v0[280] + 8))(v0[292], v0[279]);
  swift_release();
  v0[310] = v0[307];
  v0[309] = &unk_1EF2ABA78;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultManager);
  v0[311] = v2;
  sub_1BB86C604();
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_contentsAtPath_, v3);

  if (v4)
  {
    v5 = sub_1BB86C6E8();
    v7 = v6;

    v0[312] = v5;
    v0[313] = v7;
    v167 = v5;
    v168 = v7;
    sub_1BA97FC48((uint64_t)&unk_1E7250010, v5, v7);
    if ((v8 & 1) != 0)
    {
      v158 = v1;
      v165 = v2;
      v9 = v0[288];
      v10 = v0[280];
      v11 = v0[279];
      v12 = v0[253];
      v13 = v0[247];
      v14 = v0[241];
      sub_1BB86C5D4();
      v0[167] = 0xD000000000000010;
      v0[168] = 0x80000001BB9651C0;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v12, *MEMORY[0x1E0CAFD60], v14);
      sub_1BA7114A0();
      sub_1BB86C658();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
      v159 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v159(v9, v11);
      sub_1BB86C5BC();
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v15 = (void (*)(uint64_t, uint64_t, uint64_t))v0[301];
      v16 = v0[289];
      v17 = v0[286];
      v18 = v0[279];
      v19 = sub_1BB86EFEC();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED476918);
      v15(v17, v16, v18);
      v20 = sub_1BB86EFC8();
      v21 = sub_1BB87330C();
      v22 = os_log_type_enabled(v20, v21);
      v23 = v0[286];
      v24 = v0[279];
      if (v22)
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v169[0] = v26;
        *(_DWORD *)v25 = 136315138;
        sub_1BA50AD30((unint64_t *)&qword_1ED3A0CE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v27 = sub_1BB87420C();
        v0[181] = sub_1BA5D2E14(v27, v28, v169);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        v159(v23, v24);
        v29 = v21;
        v30 = v159;
        _os_log_impl(&dword_1BA493000, v20, v29, "Unarchiving puzzle [%s]", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v26, -1, -1);
        MEMORY[0x1BCCE5C38](v25, -1, -1);
      }
      else
      {
        v30 = v159;
        v159(v23, v24);
      }

      v62 = v0[288];
      v63 = v0[279];
      sub_1BB86C598();
      sub_1BB86C5C8();
      v30(v62, v63);
      sub_1BB86C604();
      v64 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v65 = objc_msgSend(v165, sel_fileExistsAtPath_, v64);

      if (v65)
      {
        v66 = (void *)sub_1BB86C58C();
        v0[169] = 0;
        v67 = objc_msgSend(v165, sel_removeItemAtURL_error_, v66, v0 + 169);

        v68 = (void *)v0[169];
        if (!v67)
        {
          v161 = v0[293];
          v115 = v0[289];
          v116 = v0[287];
          v117 = v0[285];
          v118 = v0[279];
          v119 = v0[278];
          v120 = v68;
          v0[322] = sub_1BB86C484();

          swift_willThrow();
          sub_1BA69D314(v167, v168);

          v30(v117, v118);
          v30(v116, v118);
          v30(v115, v118);
          sub_1BA5C699C(v119, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v30(v161, v118);
          return swift_asyncLet_finish();
        }
        v69 = v68;
      }
      v70 = (void *)sub_1BB86C58C();
      v0[211] = 0;
      v71 = objc_msgSend(v165, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v70, 0, 0, v0 + 211);

      v72 = (void *)v0[211];
      if (!v71)
      {
        v160 = v0[293];
        v104 = v0[289];
        v105 = v0[287];
        v106 = v0[285];
        v107 = v0[279];
        v108 = v0[278];
        v109 = v72;
        v0[323] = sub_1BB86C484();

        swift_willThrow();
        sub_1BA69D314(v167, v168);

        v30(v106, v107);
        v30(v105, v107);
        v30(v104, v107);
        sub_1BA5C699C(v108, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v30(v160, v107);
        return swift_asyncLet_finish();
      }
      v73 = v72;
      sub_1BB86C604();
      v74 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v75 = objc_msgSend(v165, sel_fileExistsAtPath_, v74);

      if (v75)
      {
        v76 = (void *)sub_1BB86C58C();
        v0[187] = 0;
        v77 = objc_msgSend(v165, sel_removeItemAtURL_error_, v76, v0 + 187);

        v78 = (void *)v0[187];
        if (!v77)
        {
          v164 = v0[293];
          v137 = v0[289];
          v138 = v0[287];
          v139 = v0[285];
          v140 = v0[279];
          v141 = v0[278];
          v142 = v78;
          v0[324] = sub_1BB86C484();

          swift_willThrow();
          sub_1BA69D314(v167, v168);

          v30(v139, v140);
          v30(v138, v140);
          v30(v137, v140);
          sub_1BA5C699C(v141, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v30(v164, v140);
          return swift_asyncLet_finish();
        }
        v79 = v78;
      }
      v80 = (void *)sub_1BB86C58C();
      v81 = (void *)sub_1BB86C58C();
      v0[175] = 0;
      v82 = objc_msgSend(v165, sel_moveItemAtURL_toURL_error_, v80, v81, v0 + 175);

      v83 = (void *)v0[175];
      if (!v82)
      {
        v163 = v0[293];
        v131 = v0[289];
        v132 = v0[287];
        v133 = v0[285];
        v134 = v0[279];
        v135 = v0[278];
        v136 = v83;
        v0[325] = sub_1BB86C484();

        swift_willThrow();
        sub_1BA69D314(v167, v168);

        v30(v133, v134);
        v30(v132, v134);
        v30(v131, v134);
        sub_1BA5C699C(v135, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v30(v163, v134);
        return swift_asyncLet_finish();
      }
      v84 = objc_allocWithZone(MEMORY[0x1E0D60AC8]);
      v85 = v83;
      v86 = objc_msgSend(v84, sel_init);
      v87 = (void *)sub_1BB86C58C();
      v88 = (void *)sub_1BB86C58C();
      v89 = objc_msgSend(v86, sel_unarchive_toLocation_, v87, v88);

      v90 = objc_msgSend(v158, sel_defaultManager);
      sub_1BB86C520();
      v91 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v92 = objc_msgSend(v90, sel_fileExistsAtPath_, v91);

      if (!v89 || !v92)
      {
        v148 = sub_1BB86EFC8();
        v149 = sub_1BB8732F4();
        if (os_log_type_enabled(v148, v149))
        {
          v150 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v150 = 0;
          _os_log_impl(&dword_1BA493000, v148, v149, "Failed to decompress archive file", v150, 2u);
          MEMORY[0x1BCCE5C38](v150, -1, -1);
        }
        v151 = v0[293];
        v152 = v0[289];
        v153 = v0[287];
        v154 = v0[285];
        v155 = v0[279];
        v156 = v0[278];

        sub_1BA98176C();
        v0[314] = swift_allocError();
        *v157 = 3;
        swift_willThrow();

        sub_1BA69D314(v167, v168);
        v30(v154, v155);
        v30(v153, v155);
        v30(v152, v155);
        sub_1BA5C699C(v156, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v30(v151, v155);
        return swift_asyncLet_finish();
      }
      v93 = (void (*)(uint64_t, uint64_t, uint64_t))v0[303];
      v94 = v0[290];
      v95 = v0[289];
      v96 = v0[287];
      v97 = v0[285];
      v98 = v0[279];

      v30(v97, v98);
      v30(v95, v98);
      v93(v94, v96, v98);
      v2 = v165;
    }
    else
    {
      v36 = v0[288];
      v37 = v0[280];
      v38 = v0[279];
      sub_1BB86C598();
      sub_1BB86C5C8();
      v30 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v30(v36, v38);
      sub_1BB86C604();
      v39 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v2, sel_fileExistsAtPath_, v39);

      if (v40)
      {
        v41 = (void *)sub_1BB86C58C();
        v0[193] = 0;
        v42 = objc_msgSend(v2, sel_removeItemAtURL_error_, v41, v0 + 193);

        v43 = (void *)v0[193];
        if (!v42)
        {
          v110 = v0[293];
          v111 = v0[284];
          v112 = v0[279];
          v113 = v0[278];
          v114 = v43;
          v0[326] = sub_1BB86C484();

          swift_willThrow();
          sub_1BA69D314(v167, v168);

          v30(v111, v112);
          sub_1BA5C699C(v113, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v30(v110, v112);
          return swift_asyncLet_finish();
        }
        v44 = v43;
      }
      v45 = (void *)sub_1BB86C58C();
      v46 = (void *)sub_1BB86C58C();
      v0[205] = 0;
      v47 = objc_msgSend(v2, sel_moveItemAtURL_toURL_error_, v45, v46, v0 + 205);

      v48 = (void *)v0[205];
      if (!v47)
      {
        v99 = v0[293];
        v100 = v0[284];
        v101 = v0[279];
        v102 = v0[278];
        v103 = v48;
        v0[327] = sub_1BB86C484();

        swift_willThrow();
        sub_1BA69D314(v167, v168);

        v30(v100, v101);
        sub_1BA5C699C(v102, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v30(v99, v101);
        return swift_asyncLet_finish();
      }
      ((void (*)(_QWORD, _QWORD, _QWORD))v0[303])(v0[290], v0[284], v0[279]);
      v49 = v48;
    }
    v166 = v2;
    v0[315] = v30;
    v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[306];
    v51 = v0[279];
    v52 = v0[265];
    sub_1BA5E01A4(v0[278], v52, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v50(v52, 1, v51) == 1)
    {
      v53 = (void *)v0[299];
      sub_1BA5C699C(v0[265], (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v54 = objc_msgSend(v53, sel_dataResourceID);
      if (v54)
      {
        v55 = v54;
        v56 = v0[235];
        v57 = sub_1BB8729A0();
        v59 = v58;

        __swift_project_boxed_opaque_existential_1((_QWORD *)(v56 + 80), *(_QWORD *)(v56 + 104));
        v0[316] = ResourceServiceType.fetchResource(identifier:)(v57, v59);
        swift_bridgeObjectRelease();
        v60 = (_QWORD *)swift_task_alloc();
        v0[317] = v60;
        *v60 = v0;
        v60[1] = sub_1BA97D9FC;
        return sub_1BB86E908();
      }
      v143 = v0[293];
      v144 = v0[290];
      v145 = v0[279];
      v146 = v0[278];
      sub_1BA98176C();
      v0[320] = swift_allocError();
      *v147 = 2;
      swift_willThrow();
      sub_1BA69D314(v167, v168);

      v30(v144, v145);
      sub_1BA5C699C(v146, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v30(v143, v145);
    }
    else
    {
      v121 = (void (*)(char *, uint64_t, uint64_t))v0[303];
      v122 = v0[299];
      v123 = v0[293];
      v162 = v0[290];
      v124 = (char *)v0[283];
      v125 = v0[279];
      v126 = v0[278];
      v127 = v0[265];
      v128 = v30;
      v129 = (char *)v0[217];
      sub_1BA69D314(v167, v168);

      sub_1BA5C699C(v126, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v128(v123, v125);
      v121(v124, v127, v125);
      v130 = type metadata accessor for PuzzleResource();
      v121(&v129[*(int *)(v130 + 20)], v162, v125);
      v121(&v129[*(int *)(v130 + 24)], (uint64_t)v124, v125);
      *(_QWORD *)v129 = v122;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    v31 = v0[293];
    v32 = v0[280];
    v33 = v0[279];
    v34 = v0[278];
    sub_1BA98176C();
    v0[321] = swift_allocError();
    *v35 = 3;
    swift_willThrow();

    sub_1BA5C699C(v34, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97D5AC()
{
  return swift_task_switch();
}

uint64_t sub_1BA97D60C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97D7D0()
{
  return swift_task_switch();
}

uint64_t sub_1BA97D830()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97D9FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 2544) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BA97DAB4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  void (*v5)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(void **)(v0 + 1592);
  v2 = objc_msgSend(v1, sel_fileURL);
  if (!v2)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 2440))(*(_QWORD *)(v0 + 2072), 1, 1, *(_QWORD *)(v0 + 2232));
    goto LABEL_5;
  }
  v3 = v2;
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2448);
  v5 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 2440);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2424);
  v7 = *(_QWORD *)(v0 + 2304);
  v8 = *(_QWORD *)(v0 + 2232);
  v9 = *(_QWORD *)(v0 + 2072);
  sub_1BB86C5EC();

  v6(v9, v7, v8);
  v5(v9, 0, 1, v8);
  if (v4(v9, 1, v8) == 1)
  {
LABEL_5:
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 2520);
    v20 = *(_QWORD *)(v0 + 2504);
    v21 = *(_QWORD *)(v0 + 2496);
    v22 = *(void **)(v0 + 2488);
    v31 = *(_QWORD *)(v0 + 2344);
    v23 = *(_QWORD *)(v0 + 2320);
    v24 = *(_QWORD *)(v0 + 2232);
    v25 = *(_QWORD *)(v0 + 2224);
    sub_1BA5C699C(*(_QWORD *)(v0 + 2072), (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA98176C();
    *(_QWORD *)(v0 + 2552) = swift_allocError();
    *v26 = 4;
    swift_willThrow();
    sub_1BA69D314(v21, v20);

    v19(v23, v24);
    sub_1BA5C699C(v25, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v19(v31, v24);
    return swift_asyncLet_finish();
  }
  v10 = *(void **)(v0 + 2488);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 2424);
  v30 = *(_QWORD *)(v0 + 2392);
  v12 = *(_QWORD *)(v0 + 2344);
  v28 = *(void (**)(uint64_t, uint64_t))(v0 + 2520);
  v29 = *(_QWORD *)(v0 + 2320);
  v13 = *(char **)(v0 + 2256);
  v14 = *(_QWORD *)(v0 + 2232);
  v15 = *(_QWORD *)(v0 + 2224);
  v16 = *(_QWORD *)(v0 + 2072);
  v17 = *(char **)(v0 + 1736);
  sub_1BA69D314(*(_QWORD *)(v0 + 2496), *(_QWORD *)(v0 + 2504));

  sub_1BA5C699C(v15, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v28(v12, v14);
  v11(v13, v16, v14);
  v18 = type metadata accessor for PuzzleResource();
  v11(&v17[*(int *)(v18 + 20)], v29, v14);
  v11(&v17[*(int *)(v18 + 24)], (uint64_t)v13, v14);
  *(_QWORD *)v17 = v30;
  swift_unknownObjectRetain();
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97DD78()
{
  return swift_task_switch();
}

uint64_t sub_1BA97DDD8()
{
  return swift_task_switch();
}

uint64_t sub_1BA97DE38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97DFFC()
{
  return swift_task_switch();
}

uint64_t sub_1BA97E05C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97E220()
{
  return swift_task_switch();
}

uint64_t sub_1BA97E280()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97E444()
{
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97E4A8()
{
  return swift_task_switch();
}

uint64_t sub_1BA97E508()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97E6B8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97E71C()
{
  return swift_task_switch();
}

uint64_t sub_1BA97E77C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0[293];
  v2 = v0[279];
  v3 = v0[278];
  v4 = *(void (**)(uint64_t, uint64_t))(v0[280] + 8);
  v4(v0[292], v2);
  sub_1BA5C699C(v3, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v4(v1, v2);
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97E840()
{
  return swift_task_switch();
}

uint64_t sub_1BA97E8A0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97EA5C()
{
  return swift_task_switch();
}

uint64_t sub_1BA97EABC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97EC80()
{
  return swift_task_switch();
}

uint64_t sub_1BA97ECE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97EEA4()
{
  return swift_task_switch();
}

uint64_t sub_1BA97EF04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97F0C8()
{
  return swift_task_switch();
}

uint64_t sub_1BA97F128()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97F2EC()
{
  return swift_task_switch();
}

uint64_t sub_1BA97F34C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97F510()
{
  return swift_task_switch();
}

uint64_t sub_1BA97F570()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97F734()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (void (*)(uint64_t, uint64_t))v0[315];
  v2 = (void *)v0[311];
  v3 = v0[293];
  v4 = v0[290];
  v5 = v0[279];
  v6 = v0[278];
  sub_1BA69D314(v0[312], v0[313]);

  v1(v4, v5);
  sub_1BA5C699C(v6, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v1(v3, v5);
  return swift_asyncLet_finish();
}

uint64_t sub_1BA97F808()
{
  return swift_task_switch();
}

uint64_t sub_1BA97F868()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2472);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BA49EBE0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA97FA2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1BA97FAA0;
  return sub_1BB873258();
}

uint64_t sub_1BA97FAA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  sub_1BA98182C();
  *(_DWORD *)(v4 + 40) = *(_DWORD *)(v7 + 48);
  return swift_task_switch();
}

uint64_t sub_1BA97FB2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1BA97FBA0;
  return sub_1BB873258();
}

uint64_t sub_1BA97FBA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  sub_1BA98182C();
  *(_DWORD *)(v4 + 40) = *(_DWORD *)(v7 + 48);
  return swift_task_switch();
}

uint64_t sub_1BA97FC2C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + *(int *)(v0 + 40)) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BA97FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_1BB86C70C();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BA97FCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  sub_1BA69D44C(v4, v3);
  sub_1BA69D44C(v4, v3);
  swift_bridgeObjectRetain();
  sub_1BB86C718();
  sub_1BA69D314(v4, v3);
  sub_1BA50AD30(&qword_1EF2ABCD8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB02C0], MEMORY[0x1E0CB02D0]);
  v7 = 0;
  while (1)
  {
    sub_1BB873A80();
    if ((*(_BYTE *)(v6 - 65) & 1) != 0)
      break;
    v8 = *(_QWORD *)(v0 + 16);
    if (v7 == v8)
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v7 >= v8)
    {
      __break(1u);
      goto LABEL_13;
    }
    v9 = v0 + v7++;
    if (*(unsigned __int8 *)(v6 - 66) != *(unsigned __int8 *)(v9 + 32))
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
  v10 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  if (v10 == v7)
    return 1;
  if (v7 >= v10)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x1BA97FE0CLL);
  }
  return 0;
}

uint64_t PuzzleService.prewarmPuzzleTypeResource(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA97FE38()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v1 = v0[3];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    v16 = v0[4];
    v17 = (_QWORD *)v0[5];
    swift_bridgeObjectRelease();
    v18 = v17 + 10;
    v19 = v17[13];
    v20 = v17[14];
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v0[6] = ResourceServiceType.fetchResources(identifiers:cachePolicy:)((uint64_t)v6, v16, v19, v20);
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)swift_task_alloc();
    v0[7] = v21;
    *v21 = v0;
    v21[1] = sub_1BA98004C;
    return sub_1BB86E908();
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v22 = v0[3] + 32;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v5)
      {
        v7 = (void *)MEMORY[0x1BCCE4630](v4, v0[3]);
      }
      else
      {
        v7 = *(void **)(v22 + 8 * v4);
        swift_unknownObjectRetain();
      }
      v8 = objc_msgSend(v7, sel_engineResourceID, v22);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1BB8729A0();
        v12 = v11;

        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1BA6EA0D0(0, v6[2] + 1, 1, v6);
        v14 = v6[2];
        v13 = v6[3];
        if (v14 >= v13 >> 1)
          v6 = sub_1BA6EA0D0((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
        v6[2] = v14 + 1;
        v15 = &v6[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA98004C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1BA9800C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA9800D0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PuzzleService.thumbnailSmallUrl(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_1BA98011C()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[2], v0[2], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v2;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  *v2 = v0;
  v2[1] = sub_1BA9801E4;
  return sub_1BB874518();
}

uint64_t sub_1BA9801E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA980250()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BA980260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  sub_1BA9838A8();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v6);
  v11 = *(void **)(a2 + 72);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v10);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_1BA9839AC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB0273DC;
  aBlock[3] = &block_descriptor_170;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v11, sel_fetchThumbnailUrlForPuzzle_completionHandler_, a3, v14);
  _Block_release(v14);
}

uint64_t sub_1BA980398(int a1, uint64_t a2, id a3)
{
  id v3;
  _BYTE *v5;

  if (a3)
  {
    v3 = a3;
LABEL_3:
    sub_1BA9838A8();
    return sub_1BB872F34();
  }
  if (!a2)
  {
    sub_1BA98176C();
    swift_allocError();
    *v5 = 2;
    goto LABEL_3;
  }
  sub_1BA9838A8();
  swift_bridgeObjectRetain();
  return sub_1BB872F40();
}

uint64_t PuzzleService.thumbnailSmallJSON(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1BA98045C()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3ACA90);
  *v2 = v0;
  v2[1] = sub_1BA98051C;
  return sub_1BB874518();
}

uint64_t sub_1BA98051C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_1BA980588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  sub_1BA9837C4();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v6);
  v11 = *(void **)(a2 + 72);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v10);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_1BA98385C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA980774;
  aBlock[3] = &block_descriptor_8;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v11, sel_fetchThumbnailJSONForPuzzleType_completionHandler_, a3, v14);
  _Block_release(v14);
}

uint64_t sub_1BA9806C0(uint64_t a1, id a2)
{
  id v2;
  _BYTE *v4;

  if (a2)
  {
    v2 = a2;
LABEL_3:
    sub_1BA9837C4();
    return sub_1BB872F34();
  }
  if (!a1)
  {
    sub_1BA98176C();
    swift_allocError();
    *v4 = 2;
    goto LABEL_3;
  }
  sub_1BB872760();
  sub_1BA9837C4();
  return sub_1BB872F40();
}

uint64_t sub_1BA980774(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1BB87276C();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t PuzzleService.prewarmPuzzleResource(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1BA980820()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v1 = v0[3];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    v16 = (_QWORD *)v0[4];
    swift_bridgeObjectRelease();
    v17 = v16 + 10;
    v18 = v16[13];
    v19 = v16[14];
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v0[5] = ResourceServiceType.fetchResources(identifiers:)((uint64_t)v6, v18, v19);
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)swift_task_alloc();
    v0[6] = v20;
    *v20 = v0;
    v20[1] = sub_1BA980A2C;
    return sub_1BB86E908();
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v21 = v0[3] + 32;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v5)
      {
        v7 = (void *)MEMORY[0x1BCCE4630](v4, v0[3]);
      }
      else
      {
        v7 = *(void **)(v21 + 8 * v4);
        swift_unknownObjectRetain();
      }
      v8 = objc_msgSend(v7, sel_dataResourceID, v21);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1BB8729A0();
        v12 = v11;

        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1BA6EA0D0(0, v6[2] + 1, 1, v6);
        v14 = v6[2];
        v13 = v6[3];
        if (v14 >= v13 >> 1)
          v6 = sub_1BA6EA0D0((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
        v6[2] = v14 + 1;
        v15 = &v6[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA980A2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t PuzzleService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PuzzleService.__deallocating_deinit()
{
  PuzzleService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA980B18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA8195A4;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA980B8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA4B0D38;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1BA980BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA8195A4;
  return PuzzleService.puzzleResource(from:)(a1, a2);
}

uint64_t sub_1BA980C54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA983BCC;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

id sub_1BA980CC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return PuzzleService.puzzle(for:puzzleType:puzzleMetadata:)(a1, a2, a3, a4);
}

uint64_t sub_1BA980CE8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1BA980D04(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 56) = a2;
  v4 = *v2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_1BA980D24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA983BCC;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA980D98(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *v3;
  v9 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_1BA983BCC;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = v8;
  *(_BYTE *)(v9 + 80) = a2;
  *(_QWORD *)(v9 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA980E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a1;
  v4[4] = a2;
  v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_1BA980E34(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD **v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;

  v8 = *v3;
  v9 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_1BA983BCC;
  *(_QWORD *)(v9 + 1624) = v8;
  *(_QWORD *)(v9 + 1576) = a3;
  *(_BYTE *)(v9 + 1784) = a2;
  *(_QWORD *)(v9 + 1528) = a1;
  *(_QWORD *)(v9 + 1672) = *v8;
  return swift_task_switch();
}

uint64_t sub_1BA980EBC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a3;
  v6 = *v4;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = v6;
  return swift_task_switch();
}

uint64_t sub_1BA980EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_BYTE *)(v0 + 80);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 40) = v2;
  *(_BYTE *)(v4 + 48) = v3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v6 = v0;
  v6[1] = sub_1BA9785A0;
  return sub_1BB874518();
}

uint64_t sub_1BA980FC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA983BCC;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1BA981024(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA981098;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA981098(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1BA9810EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a1;
  v3[4] = a2;
  v3[5] = *v2;
  return swift_task_switch();
}

uint64_t sub_1BA98110C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  sub_1BA52E378(0, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  *v5 = v0;
  v5[1] = sub_1BA9811E0;
  return sub_1BB874518();
}

uint64_t sub_1BA9811E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA98124C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a1;
  v4[4] = a2;
  v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_1BA98126C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return swift_task_switch();
}

uint64_t sub_1BA981288()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3ACA90);
  *v2 = v0;
  v2[1] = sub_1BA981348;
  return sub_1BB874518();
}

uint64_t sub_1BA981348()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA9813B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_1BA9813D0()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[2], v0[2], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v2;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  *v2 = v0;
  v2[1] = sub_1BA9801E4;
  return sub_1BB874518();
}

uint64_t sub_1BA981498()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA6EA0D0);
}

uint64_t sub_1BA9814A4()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB38D0C0);
}

uint64_t sub_1BA9814B0()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA6D25A4);
}

uint64_t sub_1BA9814BC()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB38D338);
}

uint64_t sub_1BA9814C8()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB38EBEC);
}

uint64_t sub_1BA9814D4()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB38ED0C);
}

uint64_t sub_1BA9814E0()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA675C1C);
}

uint64_t sub_1BA9814EC()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB391908);
}

uint64_t sub_1BA9814F8()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB391924);
}

uint64_t sub_1BA981504()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA6774A8);
}

uint64_t sub_1BA981510()
{
  return sub_1BA98151C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB39398C);
}

uint64_t sub_1BA98151C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1BA981570(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BA6EA0D0);
}

uint64_t sub_1BA98157C(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB38D0C0);
}

uint64_t sub_1BA981588(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BA6D25A4);
}

uint64_t sub_1BA981594(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB38D338);
}

uint64_t sub_1BA9815A0(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB38EBEC);
}

uint64_t sub_1BA9815AC(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB38ED0C);
}

uint64_t sub_1BA9815B8(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BA675C1C);
}

uint64_t sub_1BA9815C8(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB391908);
}

uint64_t sub_1BA9815D4(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB391924);
}

uint64_t sub_1BA9815E0(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BA6774A8);
}

uint64_t sub_1BA9815EC(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_1BB872E44();
  return result;
}

uint64_t sub_1BA981618(uint64_t a1)
{
  return sub_1BA981624(a1, (uint64_t (*)(BOOL))sub_1BB39398C);
}

uint64_t sub_1BA981624(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1BA981668(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1BA981680(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v5;
  *(_QWORD *)(v6 + 16) = result + 1;
  v7 = (_QWORD *)(v6 + 32 * result);
  v7[4] = a2;
  v7[5] = a3;
  v7[6] = a4;
  v7[7] = a5;
  return result;
}

uint64_t sub_1BA98169C(uint64_t a1, uint64_t a2)
{
  return sub_1BA981704(a1, a2, type metadata accessor for FormatResource);
}

uint64_t sub_1BA9816A8(uint64_t result, int a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_DWORD *)(v3 + 4 * result + 32) = a2;
  return result;
}

uint64_t sub_1BA9816C0(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_QWORD *)(v3 + 8 * result + 32) = a2;
  return result;
}

_OWORD *sub_1BA9816D8(uint64_t a1, _OWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  return sub_1BA76EAE0(a2, (_OWORD *)(v3 + 32 * a1 + 32));
}

uint64_t sub_1BA9816F8(uint64_t a1, uint64_t a2)
{
  return sub_1BA981704(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
}

uint64_t sub_1BA981704(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *v3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  v8 = a3(0);
  return sub_1BA5193C4(a2, v7+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3);
}

unint64_t sub_1BA98176C()
{
  unint64_t result;

  result = qword_1EF2AB998;
  if (!qword_1EF2AB998)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleServiceError, &type metadata for PuzzleServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2AB998);
  }
  return result;
}

unint64_t sub_1BA9817B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB9A8;
  if (!qword_1EF2AB9A8)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99C0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, &qword_1EF2AB9A8);
  }
  return result;
}

void sub_1BA981814(uint64_t a1)
{
  uint64_t *v1;

  sub_1BA97902C(a1, v1[2], v1[3], v1[4]);
}

void sub_1BA981820(uint64_t a1)
{
  uint64_t *v1;

  sub_1BA9791FC(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1BA98182C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABA48)
  {
    sub_1BB86C67C();
    sub_1BA49A224(255, &qword_1EF2ABA50);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABA48);
  }
}

uint64_t sub_1BA9818AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  sub_1BB86C67C();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA8195A4;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1BA97FAA0;
  return sub_1BB873258();
}

uint64_t objectdestroy_57Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BA9819CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  sub_1BB86C67C();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA4B0D38;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1BA97FBA0;
  return sub_1BB873258();
}

void sub_1BA981A74(uint64_t a1)
{
  uint64_t v1;

  sub_1BA980260(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BA981A7C(uint64_t a1)
{
  uint64_t v1;

  sub_1BA980588(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BA981A88()
{
  unint64_t result;

  result = qword_1EF2ABAB0;
  if (!qword_1EF2ABAB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleServiceError, &type metadata for PuzzleServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2ABAB0);
  }
  return result;
}

uint64_t dispatch thunk of PuzzleServiceType.prewarmPuzzleTypeResource(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA8195A4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.prewarmPuzzleResource(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA8195A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleResource(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA8195A4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzle(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA983C44;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzle(for:puzzleType:puzzleMetadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA983C44;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 56) + *(_QWORD *)(a4 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA983C44;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 64) + *(_QWORD *)(a4 + 64));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA983C44;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 72) + *(_QWORD *)(a5 + 72));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA983C44;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:cachePolicy:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 80) + *(_QWORD *)(a5 + 80));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA983C44;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 88) + *(_QWORD *)(a5 + 88));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA983C44;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:cachePolicy:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 96)
                                                                                     + *(_QWORD *)(a6 + 96));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1BA983C44;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 104) + *(_QWORD *)(a3 + 104));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA983C44;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:qos:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 112) + *(_QWORD *)(a4 + 112));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA983C44;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 120) + *(_QWORD *)(a4 + 120));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1BA983C44;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:cachePolicy:qos:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 128)
                                                                            + *(_QWORD *)(a5 + 128));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA9822B8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1BA9822B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of PuzzleServiceType.thumbnailSmallJSON(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 136) + *(_QWORD *)(a3 + 136));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA983C44;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.thumbnailSmallUrl(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 144) + *(_QWORD *)(a3 + 144));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA9823F8;
  return v9(a1, a2, a3);
}

uint64_t sub_1BA9823F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleResourceSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_1BA976B30();
      v10 = v9;
      v11 = *(int *)(v9 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1BB86C67C();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      swift_bridgeObjectRetain();
      v16(v12, v13, v14);
      v17 = *(int *)(v10 + 64);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PuzzleResourceSource(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      sub_1BA976B30();
      v4 = v3;
      v5 = a1 + *(int *)(v3 + 48);
      v6 = sub_1BB86C67C();
      v7 = *(_QWORD *)(v6 - 8);
      v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v9(v5, v6);
      v8 = a1 + *(int *)(v4 + 64);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
      if (!(_DWORD)result)
        return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v6);
      break;
    case 1:
      return swift_unknownObjectRelease();
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for PuzzleResourceSource(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    sub_1BA976B30();
    v7 = v6;
    v8 = *(int *)(v6 + 48);
    v19 = (char *)a1 + v8;
    v9 = (char *)a2 + v8;
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    v12(v19, v9, v10);
    v13 = *(int *)(v7 + 64);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_unknownObjectRetain();
  }
  else
  {
    v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for PuzzleResourceSource(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v17;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1BA976B30();
      v6 = v5;
      v7 = *(int *)(v5 + 48);
      v17 = (char *)a1 + v7;
      v8 = (char *)a2 + v7;
      v9 = sub_1BB86C67C();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      v11(v17, v8, v9);
      v12 = *(int *)(v6 + 64);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v11(v13, v14, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      }
    }
    else
    {
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_unknownObjectRetain();
      }
      else
      {
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PuzzleResourceSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    sub_1BA976B30();
    v7 = v6;
    v8 = *(int *)(v6 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(v9, v10, v11);
    v14 = *(int *)(v7 + 64);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PuzzleResourceSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      sub_1BA976B30();
      v7 = v6;
      v8 = *(int *)(v6 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86C67C();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      v14 = *(int *)(v7 + 64);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BA982CC8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;
  void *v6;
  void *v7;
  char *v8;

  v6 = &unk_1BB888DC8;
  v7 = &unk_1BB888DE0;
  v0 = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      v8 = &v5;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t storeEnumTagSinglePayload for PuzzleServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA982DE4 + 4 * byte_1BB888C85[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA982E18 + 4 * byte_1BB888C80[v4]))();
}

uint64_t sub_1BA982E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA982E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA982E28);
  return result;
}

uint64_t sub_1BA982E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA982E3CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA982E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA982E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleServiceError()
{
  return &type metadata for PuzzleServiceError;
}

uint64_t method lookup function for PuzzleService()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA982E70(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedCategory(a2, a1);
  return a2;
}

unint64_t sub_1BA982EAC()
{
  unint64_t result;

  result = qword_1ED39E548;
  if (!qword_1ED39E548)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCategory, &type metadata for FeedCategory);
    atomic_store(result, (unint64_t *)&qword_1ED39E548);
  }
  return result;
}

uint64_t sub_1BA982EF0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  if (v0[14])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 11));
  if (v0[19])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  return swift_deallocObject();
}

_QWORD *sub_1BA982F4C(_QWORD *a1)
{
  destroy for FeedCategory(a1);
  return a1;
}

uint64_t sub_1BA982F80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA982FE4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedCatalogItem(a2, a1);
  return a2;
}

unint64_t sub_1BA983020()
{
  unint64_t result;

  result = qword_1EF2ABC70;
  if (!qword_1EF2ABC70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCatalogItem, &type metadata for FeedCatalogItem);
    atomic_store(result, (unint64_t *)&qword_1EF2ABC70);
  }
  return result;
}

uint64_t sub_1BA983064()
{
  uint64_t v0;
  int v1;
  void *v2;

  v1 = *(unsigned __int8 *)(v0 + 297);
  if (v1 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 136))
        __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  else
  {
    if (v1 != 1)
    {
      if (*(_BYTE *)(v0 + 297))
        return swift_deallocObject();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 96) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v0 + 144) < 0x11uLL)
        return swift_deallocObject();
LABEL_19:
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    }

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 96) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
      swift_bridgeObjectRelease();
    v2 = *(void **)(v0 + 160);
    if (v2)
    {

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 240) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v0 + 288) >= 0x11uLL)
        goto LABEL_19;
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1BA9831B8(uint64_t a1)
{
  destroy for FeedCatalogItem(a1);
  return a1;
}

void sub_1BA9831EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABC88)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABC88);
  }
}

void sub_1BA983254()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABC90)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABC90);
  }
}

void sub_1BA9832B8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABC98)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABC98);
  }
}

void sub_1BA983338()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABCA8)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABCA8);
  }
}

void sub_1BA9833B4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABCB0)
  {
    sub_1BA6BCC84();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABCB0);
  }
}

void sub_1BA98341C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABCC0)
  {
    sub_1BA6BCC84();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABCC0);
  }
}

uint64_t sub_1BA983480()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BA9834B4()
{
  unint64_t result;

  result = qword_1EF2B1700;
  if (!qword_1EF2B1700)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3C0420);
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B1700);
  }
  return result;
}

unint64_t sub_1BA983520()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1ED3BCCB8;
  if (!qword_1ED3BCCB8)
  {
    sub_1BA709CA4(255);
    v2 = &protocol witness table for FormatSnippet;
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> FormatObject<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3BCCB8);
  }
  return result;
}

uint64_t sub_1BA983578(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA7BCBF0(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

unint64_t sub_1BA9835C8()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1ED3B3750;
  if (!qword_1ED3B3750)
  {
    sub_1BA7BCBF0(255, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    v2 = &protocol witness table for FormatSupplementary;
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> FormatObject<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B3750);
  }
  return result;
}

uint64_t sub_1BA983638(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5;

  sub_1BA7BCBF0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1BA983674()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1ED3B3778;
  if (!qword_1ED3B3778)
  {
    sub_1BA7BCBF0(255, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    v2 = &protocol witness table for FormatItem;
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> FormatObject<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B3778);
  }
  return result;
}

unint64_t sub_1BA9836E4()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1ED3B37A0;
  if (!qword_1ED3B37A0)
  {
    sub_1BA7BCBF0(255, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
    v2 = &protocol witness table for FormatGroup;
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> FormatObject<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B37A0);
  }
  return result;
}

unint64_t sub_1BA983754()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1ED3B37C8;
  if (!qword_1ED3B37C8)
  {
    sub_1BA7BCBF0(255, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
    v2 = &protocol witness table for FormatStyle;
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> FormatObject<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED3B37C8);
  }
  return result;
}

void sub_1BA9837C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE500)
  {
    sub_1BA49A224(255, (unint64_t *)&unk_1ED3ACA90);
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    v0 = sub_1BB872F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE500);
  }
}

uint64_t sub_1BA983850()
{
  return objectdestroy_163Tm((uint64_t (*)(_QWORD))sub_1BA9837C4);
}

uint64_t sub_1BA98385C(uint64_t a1, void *a2)
{
  sub_1BA9837C4();
  return sub_1BA9806C0(a1, a2);
}

void sub_1BA9838A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE4F0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    v0 = sub_1BB872F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE4F0);
  }
}

uint64_t sub_1BA98393C()
{
  return objectdestroy_163Tm((uint64_t (*)(_QWORD))sub_1BA9838A8);
}

uint64_t objectdestroy_163Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1BA9839AC(int a1, uint64_t a2, void *a3)
{
  sub_1BA9838A8();
  return sub_1BA980398(a1, a2, a3);
}

uint64_t objectdestroy_182Tm()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA6F7A88(0, &qword_1ED3AB140, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BA983A88(uint64_t a1, void *a2)
{
  sub_1BA6F7A88(0, &qword_1ED3AB140, &qword_1ED3AB100, (unint64_t *)&qword_1ED3CF990);
  return sub_1BA9793B4(a1, a2);
}

uint64_t sub_1BA983AFC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA6F7A88(0, &qword_1ED3AB138, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BA983B90(uint64_t a1)
{
  uint64_t v1;

  sub_1BA57F260(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_1BA983BD0()
{
  return sub_1BA97D830();
}

uint64_t FeedRefreshEvent.fromState.getter(char a1)
{
  return sub_1BA863104((uint64_t)*(&off_1E727EEF8 + a1));
}

uint64_t FeedRefreshEvent.toState.getter(char a1)
{
  return 0x30202u >> (8 * a1);
}

BOOL static FeedRefreshEvent.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1BA983C8C()
{
  char *v0;

  return FeedRefreshEvent.fromState.getter(*v0);
}

void sub_1BA983C94(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 0x30202u >> (8 * *v1);
}

unint64_t sub_1BA983CB4()
{
  unint64_t result;

  result = qword_1EF2ABCE0;
  if (!qword_1EF2ABCE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshEvent, &type metadata for FeedRefreshEvent);
    atomic_store(result, (unint64_t *)&qword_1EF2ABCE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshState()
{
  return &type metadata for FeedRefreshState;
}

ValueMetadata *type metadata accessor for FeedRefreshEvent()
{
  return &type metadata for FeedRefreshEvent;
}

uint64_t FeedCursorManifest.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED476428;
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedCursorManifest.groupEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorManifest.groupEntriesMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorManifest.consumedGroupIdentifiers(excludingCursorIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FeedCursorManifestGroupEntry(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v5 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
  v6 = sub_1BB872BF8();
  swift_bridgeObjectRelease();
  v7 = sub_1BA6E43EC(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BA983E44@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;

  v8 = *a2;
  v9 = *a1;
  v10 = *(uint64_t *)((char *)a2 + qword_1ED476438);
  v11 = *(_QWORD *)(*a1 + 24);
  v17[0] = *(_QWORD *)(*a1 + 16);
  v17[1] = v11;
  type metadata accessor for FeedCursorManifestGroupEntry(255, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), a4);
  v12 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE3148](&v18, v17, v10, MEMORY[0x1E0DEA968], v12, MEMORY[0x1E0DEA978]);
  result = swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_7;
  v17[0] = v18;
  MEMORY[0x1E0C80A78](result);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v12);
  v14 = sub_1BB872C58();
  swift_bridgeObjectRelease();
  v18 = v14;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v12);
  sub_1BB873144();
  result = swift_bridgeObjectRelease();
  if (!v17[0])
    goto LABEL_7;
  if (*(_QWORD *)(v17[0] + 32) == a3 && *(_QWORD *)(v17[0] + 40) == a4 || (sub_1BB874398() & 1) != 0)
  {
    result = swift_release();
LABEL_7:
    *a5 = 0;
    a5[1] = 0;
    return result;
  }
  swift_retain();
  sub_1BB86F100();
  if (v5)
  {

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    result = swift_release();
    if ((v17[0] & 0xFE) != 2)
      goto LABEL_7;
  }
  v15 = *(_QWORD *)(v9 + 24);
  *a5 = *(_QWORD *)(v9 + 16);
  a5[1] = v15;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA984064@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA983E44(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t FeedCursorManifest.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED476428;
  v2 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursorManifest.__deallocating_deinit()
{
  return sub_1BA5A6838((void (*)(void))FeedCursorManifest.deinit);
}

uint64_t FeedCursorManifestGroupEntry.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorManifestGroupEntry.cursorIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorManifestGroupEntry.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
}

uint64_t FeedCursorManifestGroupEntry.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedCursorManifestGroupEntry.repoolingLoader.getter()
{
  return swift_retain();
}

uint64_t FeedCursorManifestGroupEntry.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return v0;
}

uint64_t FeedCursorManifestGroupEntry.__deallocating_deinit()
{
  return sub_1BA5A6838((void (*)(void))FeedCursorManifestGroupEntry.deinit);
}

uint64_t method lookup function for FeedCursorManifest()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for FeedCursorManifestGroupEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA984404()
{
  return sub_1BB86C814() & 1;
}

uint64_t sub_1BA98444C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      FormatColor.color.getter();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1BA984500@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  __int128 *v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unsigned int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v36[10];
  __int128 v37[8];
  _BYTE v38[136];
  _BYTE v39[136];
  _BYTE v40[136];

  v3 = v2;
  v6 = sub_1BB8701C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA895BCC(v3, (uint64_t)v39);
  sub_1BA895BCC((uint64_t)v39, (uint64_t)v40);
  v10 = sub_1BA895C08((uint64_t)v40);
  if (v10)
  {
    if (v10 == 1)
    {
      v11 = sub_1BA895E68((uint64_t)v40);
      sub_1BA53BAD8(v11, (uint64_t)v37);
      sub_1BA895BCC((uint64_t)v39, (uint64_t)v38);
      v12 = sub_1BA895E68((uint64_t)v38);
      sub_1BA895E78(v12);
      sub_1BB0125E4(a1, (uint64_t)a2);
      sub_1BA895DFC((uint64_t)v39, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      v13 = (unsigned int *)MEMORY[0x1E0DBABC0];
    }
    else
    {
      v22 = sub_1BA895E68((uint64_t)v40);
      v23 = *(_QWORD *)v22;
      if (*(_BYTE *)(v22 + 8) == 1)
        __asm { BR              X10 }
      *a2 = v23;
      v31 = *MEMORY[0x1E0DBA2D8];
      v32 = sub_1BB870AF8();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(a2, v31, v32);
      v13 = (unsigned int *)MEMORY[0x1E0DBABB0];
    }
  }
  else
  {
    v14 = (__int128 *)sub_1BA895E68((uint64_t)v40);
    sub_1BA896178(v14, (uint64_t)v37);
    sub_1BA895FE8(v37, (uint64_t)v38);
    v15 = sub_1BA896024((uint64_t)v38);
    v16 = sub_1BA896030((uint64_t)v38);
    if (v15 == 1)
    {
      v17 = *(_OWORD *)(v16 + 80);
      v36[6] = *(_OWORD *)(v16 + 64);
      v36[7] = v17;
      v18 = *(_OWORD *)(v16 + 112);
      v36[8] = *(_OWORD *)(v16 + 96);
      v36[9] = v18;
      v19 = *(_OWORD *)(v16 + 16);
      v36[2] = *(_OWORD *)v16;
      v36[3] = v19;
      v20 = *(_OWORD *)(v16 + 48);
      v36[4] = *(_OWORD *)(v16 + 32);
      v36[5] = v20;
      sub_1BA895DFC((uint64_t)v39, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BB1E4FCC((uint64_t)a2);
      v21 = (unsigned int *)MEMORY[0x1E0DBC538];
    }
    else
    {
      v36[0] = *(_OWORD *)(v16 + 16);
      v24 = *(_QWORD *)(v16 + 32);
      v25 = *(_QWORD *)(v16 + 40);
      sub_1BA895DFC((uint64_t)v39, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v39, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      v26 = swift_bridgeObjectRetain();
      sub_1BA98444C(v26);
      swift_bridgeObjectRelease();
      *(_OWORD *)v9 = v36[0];
      *((_QWORD *)v9 + 2) = v24;
      *((_QWORD *)v9 + 3) = v25;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB85B8], v6);
      swift_bridgeObjectRetain();
      sub_1BB870198();
      sub_1BA895DFC((uint64_t)v39, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      v21 = (unsigned int *)MEMORY[0x1E0DBC530];
    }
    v27 = *v21;
    v28 = sub_1BB8714DC();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(a2, v27, v28);
    v29 = *MEMORY[0x1E0DBABE0];
    v30 = sub_1BB870C60();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(a2, v29, v30);
    sub_1BA895DFC((uint64_t)v39, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    v13 = (unsigned int *)MEMORY[0x1E0DBABB8];
  }
  v33 = *v13;
  v34 = sub_1BB870C48();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(a2, v33, v34);
}

void sub_1BA98487C()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA984888()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA984894()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848A0()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848AC()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848B8()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848C4()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848D0()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848DC()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848E8()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA9848F4()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA984900()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA98490C()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA984918()
{
  JUMPOUT(0x1BA984808);
}

void sub_1BA984924()
{
  JUMPOUT(0x1BA984808);
}

uint64_t _s8NewsFeed21FormatImageAdjustmentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v19[8];
  __int128 v20[8];
  __int128 v21[8];
  __int128 v22[8];
  _BYTE v23[136];
  _BYTE v24[136];
  _BYTE v25[136];
  _BYTE v26[136];
  uint64_t v27;
  _BYTE v28[136];

  sub_1BA895BCC(a1, (uint64_t)v24);
  sub_1BA895BCC(a2, (uint64_t)v25);
  sub_1BA895BCC((uint64_t)v24, (uint64_t)v26);
  sub_1BA895BCC((uint64_t)v25, (uint64_t)&v27);
  sub_1BA895BCC((uint64_t)v24, (uint64_t)v28);
  v3 = sub_1BA895C08((uint64_t)v28);
  if (!v3)
  {
    v7 = (__int128 *)sub_1BA895E68((uint64_t)v28);
    sub_1BA895BCC((uint64_t)v25, (uint64_t)v23);
    if (!sub_1BA895C08((uint64_t)v23))
    {
      v17 = (__int128 *)sub_1BA895E68((uint64_t)v23);
      sub_1BA896178(v7, (uint64_t)v21);
      sub_1BA896178(v17, (uint64_t)v22);
      sub_1BA895FE8(v21, (uint64_t)v20);
      sub_1BA895FE8(v22, (uint64_t)v19);
      sub_1BA895DFC((uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      v6 = _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0(v20, v19);
      goto LABEL_12;
    }
    sub_1BA895BCC((uint64_t)v24, (uint64_t)v22);
    v8 = (uint64_t *)sub_1BA895E68((uint64_t)v22);
    sub_1BA896120(v8);
    goto LABEL_10;
  }
  if (v3 == 1)
  {
    v4 = sub_1BA895E68((uint64_t)v28);
    sub_1BA895BCC((uint64_t)v25, (uint64_t)v23);
    if (sub_1BA895C08((uint64_t)v23) == 1)
    {
      v5 = sub_1BA895E68((uint64_t)v23);
      sub_1BA53BAD8(v4, (uint64_t)v22);
      sub_1BA53BAD8(v5, (uint64_t)v21);
      sub_1BA895DFC((uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      v6 = _s8NewsFeed26FormatImageAdjustmentBlendO2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v21);
LABEL_12:
      v15 = v6;
      sub_1BA895C80((uint64_t)v26);
      sub_1BA895DFC((uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      sub_1BA895DFC((uint64_t)v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      return v15 & 1;
    }
    sub_1BA895BCC((uint64_t)v24, (uint64_t)v22);
    v16 = sub_1BA895E68((uint64_t)v22);
    sub_1BA895E78(v16);
    goto LABEL_10;
  }
  v9 = sub_1BA895E68((uint64_t)v28);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_1BA895BCC((uint64_t)v25, (uint64_t)v23);
  if (sub_1BA895C08((uint64_t)v23) != 2)
  {
LABEL_10:
    sub_1BA895DFC((uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895C80((uint64_t)v26);
    v15 = 0;
    return v15 & 1;
  }
  v12 = sub_1BA895E68((uint64_t)v23);
  v13 = *(_QWORD *)v12;
  v14 = *(_BYTE *)(v12 + 8);
  sub_1BA895C80((uint64_t)v26);
  *(_QWORD *)&v22[0] = v10;
  BYTE8(v22[0]) = v11;
  *(_QWORD *)&v21[0] = v13;
  BYTE8(v21[0]) = v14;
  v15 = _s8NewsFeed27FormatImageAdjustmentFilterO2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v21);
  return v15 & 1;
}

unint64_t sub_1BA984C28(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA984C4C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA984C4C()
{
  unint64_t result;

  result = qword_1EF2ABCE8;
  if (!qword_1EF2ABCE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustment, &type metadata for FormatImageAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2ABCE8);
  }
  return result;
}

unint64_t sub_1BA984C90(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82AEB8();
  a1[2] = sub_1BA82AEFC();
  result = sub_1BA984CC4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA984CC4()
{
  unint64_t result;

  result = qword_1EF2ABCF0;
  if (!qword_1EF2ABCF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustment, &type metadata for FormatImageAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2ABCF0);
  }
  return result;
}

uint64_t assignWithCopy for FormatImageAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v32 = *(_QWORD *)(a2 + 112);
  v33 = *(_QWORD *)(a2 + 120);
  v34 = *(_BYTE *)(a2 + 128);
  sub_1BA76849C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 120);
  v25 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_QWORD *)(a1 + 112) = v32;
  *(_QWORD *)(a1 + 120) = v33;
  *(_BYTE *)(a1 + 128) = v34;
  sub_1BA76849C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24, v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustment(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v3 = *(_BYTE *)(a2 + 128);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a1 + 120);
  v17 = *(_BYTE *)(a1 + 128);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(_BYTE *)(a1 + 128) = v3;
  sub_1BA76849C(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  return a1;
}

uint64_t sub_1BA984F0C(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 128) & 0x8F | (32 * (a2 & 3));
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustment()
{
  return &type metadata for FormatImageAdjustment;
}

uint64_t sub_1BA984F40()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[9];
  _OWORD v14[12];
  uint64_t v15;

  v1 = *(_OWORD *)(v0 + 128);
  v13[6] = *(_OWORD *)(v0 + 112);
  v13[7] = v1;
  v13[8] = *(_OWORD *)(v0 + 144);
  v2 = *(_OWORD *)(v0 + 64);
  v13[2] = *(_OWORD *)(v0 + 48);
  v13[3] = v2;
  v3 = *(_OWORD *)(v0 + 96);
  v13[4] = *(_OWORD *)(v0 + 80);
  v13[5] = v3;
  v4 = *(_OWORD *)(v0 + 32);
  v13[0] = *(_OWORD *)(v0 + 16);
  v13[1] = v4;
  sub_1BA8C89E4((uint64_t)v13);
  swift_release();
  v5 = *(void **)(v0 + 240);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1BA707144(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_groupLayoutContext);
  v6 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 176);
  v14[10] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 160);
  v14[11] = v6;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 192);
  v7 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 112);
  v14[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 96);
  v14[7] = v7;
  v8 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 144);
  v14[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 128);
  v14[9] = v8;
  v9 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 48);
  v14[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 32);
  v14[3] = v9;
  v10 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 80);
  v14[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 64);
  v14[5] = v10;
  v11 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 16);
  v14[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history);
  v14[1] = v11;
  sub_1BA985138((uint64_t)v14);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA985050()
{
  return type metadata accessor for DebugFormatCanvasLayoutResult();
}

uint64_t type metadata accessor for DebugFormatCanvasLayoutResult()
{
  uint64_t result;

  result = qword_1EF2ABD20;
  if (!qword_1EF2ABD20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA985094()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA985138(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA79DDC8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

id GapFontBook.titleFont.getter()
{
  id *v0;

  return *v0;
}

id GapFontBook.descriptionFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

NewsFeed::GapFontBook __swiftcall GapFontBook.init(titleFont:descriptionFont:)(UIFont titleFont, UIFont descriptionFont)
{
  UIFont *v2;
  NewsFeed::GapFontBook result;

  v2->super.isa = titleFont.super.isa;
  v2[1].super.isa = descriptionFont.super.isa;
  result.descriptionFont = descriptionFont;
  result.titleFont = titleFont;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LoadedFont(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for GapFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for LoadedFont(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for GapFontBook()
{
  return &type metadata for GapFontBook;
}

uint64_t sub_1BA985324()
{
  return swift_initClassMetadata2();
}

char *sub_1BA98537C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  if (a4)
  {
    v4 = sub_1BB8729A0();
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  return sub_1BA98563C(v4, v5);
}

void sub_1BA9853B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BA9857AC();
}

void sub_1BA9853D8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  double v5;
  id v6;
  double v7;
  double v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  v1 = *(void **)&v0[qword_1EF2ABDD0];
  v2 = objc_msgSend(v1, sel_layer);
  v3 = objc_msgSend(*(id *)&v0[qword_1EF2ABDE0], sel_CGColor);
  objc_msgSend(v2, sel_setBorderColor_, v3);

  v4 = objc_msgSend(v1, sel_layer);
  v5 = 0.0;
  if (v0[qword_1EF2ABDD8] == 1)
  {
    v6 = objc_msgSend(v0, sel_traitCollection, 0.0);
    objc_msgSend(v6, sel_displayScale);
    v8 = v7;

    v5 = 1.0 / v8;
  }
  objc_msgSend(v4, sel_setBorderWidth_, v5);

}

void sub_1BA985510(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA9853D8();

}

void sub_1BA985544()
{
  char *v0;
  id v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_prepareForReuse);
  v0[qword_1EF2ABDD8] = 1;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
  v2 = *(void **)&v0[qword_1EF2ABDE8];
  *(_QWORD *)&v0[qword_1EF2ABDE8] = v1;

}

void sub_1BA9855B4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA985544();

}

void sub_1BA9855E8(uint64_t a1)
{

}

uint64_t type metadata accessor for DebugFormatInspectorAccessoryCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatInspectorAccessoryCell);
}

char *sub_1BA98563C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  objc_super v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = qword_1EF2ABDD0;
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 22.0, 22.0);
  v8[qword_1EF2ABDD8] = 1;
  v9 = qword_1EF2ABDE0;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(), sel_lightGrayColor);
  v10 = qword_1EF2ABDE8;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);

  if (a2)
  {
    v11 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v14, sel_initWithStyle_reuseIdentifier_, 3, v11);

  objc_msgSend(v12, sel_setAccessoryView_, *(_QWORD *)&v12[qword_1EF2ABDD0]);
  return v12;
}

void sub_1BA9857AC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = qword_1EF2ABDD0;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 22.0, 22.0);
  v0[qword_1EF2ABDD8] = 1;
  v2 = qword_1EF2ABDE0;
  *(_QWORD *)&v0[v2] = objc_msgSend((id)objc_opt_self(), sel_lightGrayColor);
  v3 = qword_1EF2ABDE8;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FormatIssueCoverNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatIssueCoverNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatIssueCoverNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatIssueCoverNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatIssueCoverNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatIssueCoverNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatIssueCoverNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 80);
}

uint64_t FormatIssueCoverNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatIssueCoverNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatIssueCoverNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

unint64_t sub_1BA985B60(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *(_QWORD *)(v3 + 88) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatIssueCoverNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 88) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatIssueCoverNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatIssueCoverNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatIssueCoverNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatIssueCoverNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatIssueCoverNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA985D2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 120) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatIssueCoverNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatIssueCoverNode.sizeConstraint.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

uint64_t FormatIssueCoverNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13, char *a14)
{
  uint64_t v19;

  v19 = swift_allocObject();
  FormatIssueCoverNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t FormatIssueCoverNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssueCoverNode.__deallocating_deinit()
{
  FormatIssueCoverNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA985F50(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA986028(&qword_1EF2ABE70, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA985F84(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA986028(&qword_1ED39FF88, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNode);
  a1[2] = sub_1BA986028(&qword_1ED39FF80, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNode);
  result = sub_1BA986028(&qword_1EF2ABE78, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA985FE8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed20FormatIssueCoverNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BA985FF4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA986028(&qword_1EF2ABE80, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA986028(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatIssueCoverNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA986064@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v15 = a1[4];
  v16 = a1[5];
  v34 = a1[6];
  v17 = a1[7];
  v18 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v20 = *(_QWORD *)(a5 + 16);
  v19 = *(_QWORD *)(a5 + 24);
  v21 = *(_QWORD *)(v18 + 40);
  if (!v21)
  {
    swift_bridgeObjectRetain();
    v32 = v19;
    v33 = v20;
    v24 = *(_QWORD *)(a5 + 40);
    if (v24)
      goto LABEL_3;
LABEL_5:
    v25 = 0;
    goto LABEL_6;
  }
  v37 = *(_QWORD *)(v18 + 32);
  v38 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v22);
  sub_1BB872AFC(v23);
  swift_bridgeObjectRelease();
  v32 = v21;
  v33 = v37;
  v20 = *(_QWORD *)(a5 + 16);
  v19 = *(_QWORD *)(a5 + 24);
  v24 = *(_QWORD *)(a5 + 40);
  if (!v24)
    goto LABEL_5;
LABEL_3:
  v25 = *(_QWORD *)(v24 + 16);
  swift_retain();
LABEL_6:
  v26 = swift_allocObject();
  v48 = v25;
  swift_beginAccess();
  v27 = *(_QWORD *)(a5 + 80);
  swift_beginAccess();
  v37 = *(_QWORD *)(a5 + 88);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v37);
  sub_1BA67C978(a4, &v47);
  sub_1BA6EEDB4(v37);
  swift_beginAccess();
  v28 = *(_BYTE *)(a5 + 96);
  v29 = *(_BYTE *)(a5 + 112);
  v45 = *(_QWORD *)(a5 + 104);
  v46 = v29;
  sub_1BB86DD80();
  v30 = v37;
  v37 = v11;
  v38 = v12;
  v39 = v13;
  v40 = v14;
  v41 = v15;
  v42 = v16;
  v43 = v34;
  v44 = v17;
  type metadata accessor for FormatIssueCoverNodeLayoutAttributes();
  swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1BA994284(a2, a3, v33, v32, v20, v19, &v48, v27, &v47, v28, &v45, v30, a6, (uint64_t *)&v37);
  *a7 = v26 | 0x7000000000000004;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA9862EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA986338@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA986384@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return result;
}

uint64_t sub_1BA9863C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1BA986408@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BA986454@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 96);
  return result;
}

uint64_t sub_1BA986498(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1BA9864D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatIssueCoverNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatIssueCoverNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1BA986558()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FormatDerivedDataFileKey.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BA986738();
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA986738()
{
  unint64_t result;

  result = qword_1EF2ABE88;
  if (!qword_1EF2ABE88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8896F0, &type metadata for FormatDerivedDataFileKey.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ABE88);
  }
  return result;
}

void FormatDerivedDataFileKey.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  v4 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  __asm { BR              X9 }
}

uint64_t sub_1BA986848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 96) = 0;
  *(_QWORD *)(v4 - 88) = 0;
  sub_1BA986F5C();
  v5 = v2;
  swift_bridgeObjectRetain();
  sub_1BB8741AC();
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v1, v0);
    return sub_1BA986FA0(*(_QWORD *)(v4 - 120), v2, 0);
  }
  else
  {
    v10 = *(_QWORD *)(v4 - 120);
    *(_QWORD *)(v4 - 96) = v10;
    *(_QWORD *)(v4 - 88) = v5;
    *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
    sub_1BA6462A8(0, v6, v7, v8);
    sub_1BA6B8708((unint64_t *)&qword_1ED39C9D0, (uint64_t)&protocol conformance descriptor for FormatValue<A>, v11, v12);
    sub_1BB8741AC();
    sub_1BA986FA0(v10, v5, 0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v1, v0);
  }
}

unint64_t sub_1BA986F5C()
{
  unint64_t result;

  result = qword_1EF2ABE90;
  if (!qword_1EF2ABE90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8896C8, &type metadata for FormatDerivedDataFileKey.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ABE90);
  }
  return result;
}

uint64_t sub_1BA986FA0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 7u)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA986FB8(char *a1)
{
  sub_1BB7F55FC(*a1);
}

void sub_1BA986FC4()
{
  char *v0;

  sub_1BAB08970(0, *v0);
}

void sub_1BA986FD0(uint64_t a1)
{
  char *v1;

  sub_1BA9D220C(a1, *v1);
}

void sub_1BA986FD8(uint64_t a1)
{
  char *v1;

  sub_1BAB08970(a1, *v1);
}

uint64_t sub_1BA986FE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA987824();
  *a1 = result;
  return result;
}

uint64_t sub_1BA98700C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA987038 + 4 * byte_1BB889500[*v0]))();
}

void sub_1BA987038(_QWORD *a1@<X8>)
{
  *a1 = 1835365481;
  a1[1] = 0xE400000000000000;
}

void sub_1BA98704C(_QWORD *a1@<X8>)
{
  *a1 = 0x74657070696E73;
  a1[1] = 0xE700000000000000;
}

void sub_1BA987068(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C797473;
  a1[1] = v1;
}

void sub_1BA98707C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "supplementary");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BA9870A4(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

void sub_1BA9870B8(_QWORD *a1@<X8>)
{
  *a1 = 0x697461726F636564;
  a1[1] = 0xEA00000000006E6FLL;
}

void sub_1BA9870D8(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616B636170;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1BA9870F4()
{
  sub_1BA9877E0();
  return sub_1BB872D60();
}

uint64_t sub_1BA987150()
{
  sub_1BA9877E0();
  return sub_1BB872D0C();
}

uint64_t FormatDerivedDataFileKey.hash(into:)()
{
  sub_1BB8745D8();
  return sub_1BB872A90();
}

uint64_t FormatDerivedDataFileKey.hashValue.getter()
{
  sub_1BB8745CC();
  FormatDerivedDataFileKey.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BA987230(_QWORD *a1)
{
  return FormatDerivedDataFileKey.init(from:)(a1);
}

void sub_1BA987244(_QWORD *a1)
{
  FormatDerivedDataFileKey.encode(to:)(a1);
}

uint64_t sub_1BA987258()
{
  sub_1BB8745CC();
  FormatDerivedDataFileKey.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BA9872AC()
{
  sub_1BB8745CC();
  FormatDerivedDataFileKey.hash(into:)();
  return sub_1BB874608();
}

void _s8NewsFeed24FormatDerivedDataFileKeyO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BA98733C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v7;

  if (v5)
  {
    v7 = 0;
  }
  else if (v0 == v2 && v1 == v3)
  {
    LOBYTE(v5) = 0;
    v4 = 0;
    v7 = 1;
  }
  else
  {
    v7 = sub_1BB874398();
    LOBYTE(v5) = v4;
  }
  sub_1BA987528(v2, v3, v5);
  sub_1BA987528(v0, v1, v4);
  sub_1BA986FA0(v0, v1, v4);
  sub_1BA986FA0(v2, v3, v5);
  return v7 & 1;
}

unint64_t sub_1BA9874E0()
{
  unint64_t result;

  result = qword_1EF2ABE98;
  if (!qword_1EF2ABE98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataFileKey, &type metadata for FormatDerivedDataFileKey);
    atomic_store(result, (unint64_t *)&qword_1EF2ABE98);
  }
  return result;
}

uint64_t sub_1BA987528(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 7u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for FormatDerivedDataFileKey(uint64_t a1)
{
  return sub_1BA986FA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed24FormatDerivedDataFileKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA987528(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataFileKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA987528(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA986FA0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataFileKey(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA986FA0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataFileKey(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataFileKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 249;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataFileKey()
{
  return &type metadata for FormatDerivedDataFileKey;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataFileKey.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA987718 + 4 * byte_1BB889515[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA98774C + 4 * byte_1BB889510[v4]))();
}

uint64_t sub_1BA98774C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA987754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA98775CLL);
  return result;
}

uint64_t sub_1BA987768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA987770);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA987774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA98777C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataFileKey.CodingType()
{
  return &type metadata for FormatDerivedDataFileKey.CodingType;
}

unint64_t sub_1BA98779C()
{
  unint64_t result;

  result = qword_1EF2ABEA0;
  if (!qword_1EF2ABEA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8896A0, &type metadata for FormatDerivedDataFileKey.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEA0);
  }
  return result;
}

unint64_t sub_1BA9877E0()
{
  unint64_t result;

  result = qword_1EF2ABEA8;
  if (!qword_1EF2ABEA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB889628, &type metadata for FormatDerivedDataFileKey.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEA8);
  }
  return result;
}

uint64_t sub_1BA987824()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1BA98786C()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Starting sports data configuration fetch", 40, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BA9881CC();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  type metadata accessor for SportsDataConfiguration();
  sub_1BB86E980();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BA9879D4(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(a1 + 16), sel_appConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_sportsConfigurationResourceId) & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_sportsConfigurationResourceId);
    swift_unknownObjectRelease();
    if (v2)
    {
      sub_1BB8729A0();

      sub_1BA92A198();
      swift_allocObject();
      return sub_1BB86E9E0();
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  sub_1BA988314();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1BA987AC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v14 - v5);
  v8 = *a1;
  v7 = a1[1];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 48));
  *v6 = 0x404E000000000000;
  v9 = *MEMORY[0x1E0DB32C8];
  v10 = sub_1BB86DDB0();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 104))(v6, v9, v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  v12 = ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:)(v8, v7);
  sub_1BA5C699C((uint64_t)v6, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0]);
  return v12;
}

id *sub_1BA987C10(id *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;

  v39 = a2;
  v4 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for SportsDataConfiguration();
  MEMORY[0x1E0C80A78](v5);
  v38 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v36 - v8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v36 - v18;
  v20 = objc_msgSend(*a1, sel_fileURL, v17);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  v21 = v20;
  sub_1BB86C5EC();

  a1 = *(id **)(v13 + 32);
  ((void (*)(char *, char *, uint64_t))a1)(v11, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA988208();
    swift_allocError();
    swift_willThrow();
    return a1;
  }
  ((void (*)(char *, char *, uint64_t))a1)(v19, v11, v12);
  v22 = sub_1BB86C694();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  else
  {
    v25 = v23;
    v26 = v22;
    sub_1BA98824C();
    sub_1BB86DC78();
    sub_1BB8729DC();
    v37 = v26;
    v39 = v25;
    v27 = sub_1BB8729B8();
    v29 = (uint64_t)v40;
    if (v28)
    {
      v30 = v27;
      v31 = v28;
      if (qword_1ED3AAC10 != -1)
        swift_once();
      v32 = (void *)qword_1ED476750;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v33 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v33 + 32) = v30;
      *(_QWORD *)(v33 + 40) = v31;
      v34 = v32;
      v35 = sub_1BB87330C();
      sub_1BB86EF44("Sports data configuration successfully fetched; config=%{public}@",
        65,
        2,
        &dword_1BA493000,
        v34,
        v35,
        v33);

      swift_bridgeObjectRelease();
      v29 = (uint64_t)v40;
    }
    sub_1BA988294(v29, v38);
    sub_1BA4B07F0(0, &qword_1ED3A3A48, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    a1 = (id *)sub_1BB86E9E0();
    sub_1BA69D314(v37, v39);
    sub_1BA9882D8(v29);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  return a1;
}

uint64_t sub_1BA988060()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  swift_getErrorValue();
  v3 = sub_1BB87456C();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  sub_1BB86EF44("Error fetching sports data configuration; error=%{public}@", 58, 2, &dword_1BA493000, v0, v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA988180()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA9881B4()
{
  uint64_t v0;

  return sub_1BA9879D4(v0);
}

unint64_t sub_1BA9881CC()
{
  unint64_t result;

  result = qword_1ED3B9760;
  if (!qword_1ED3B9760)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9760);
  }
  return result;
}

unint64_t sub_1BA988208()
{
  unint64_t result;

  result = qword_1EF2ABEB8;
  if (!qword_1EF2ABEB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB889818, &type metadata for SportsDataConfigurationService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEB8);
  }
  return result;
}

unint64_t sub_1BA98824C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A7320;
  if (!qword_1ED3A7320)
  {
    v1 = type metadata accessor for SportsDataConfiguration();
    result = MEMORY[0x1BCCE5B24](&unk_1BB9110F0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A7320);
  }
  return result;
}

uint64_t sub_1BA988294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA9882D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA988314()
{
  unint64_t result;

  result = qword_1EF2ABEC8;
  if (!qword_1EF2ABEC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9188BC, &type metadata for SportsDataConfigurationServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsDataConfigurationService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA988398 + 4 * byte_1BB889720[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA9883B8 + 4 * byte_1BB889725[v4]))();
}

_BYTE *sub_1BA988398(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA9883B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA9883C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA9883C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA9883D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA9883D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfigurationService.Errors()
{
  return &type metadata for SportsDataConfigurationService.Errors;
}

unint64_t sub_1BA9883F8()
{
  unint64_t result;

  result = qword_1EF2ABED8;
  if (!qword_1EF2ABED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8897F0, &type metadata for SportsDataConfigurationService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2ABED8);
  }
  return result;
}

uint64_t sub_1BA98843C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v1;
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v35 = (uint64_t)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v28 - v9;
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 16);
  v33 = *(_QWORD *)(a1 + 8);
  v34 = v11;
  v13 = *(unsigned __int8 *)(a1 + 24);
  v14 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v15 = v10;
  sub_1BB0A8E44();
  if (!v2)
  {
    v29 = v13;
    v31 = v5;
    v32 = v6;
    v30 = v12;
    v16 = v35;
    v17 = sub_1BA989EE8(0xEB00000000737463, v35);
    v28[1] = v28;
    MEMORY[0x1E0C80A78](v17);
    v28[-8] = v10;
    v28[-7] = v3;
    v20 = v33;
    v19 = v34;
    v28[-6] = v34;
    v28[-5] = v20;
    v21 = v30;
    v28[-4] = v30;
    v22 = v29;
    LOBYTE(v28[-3]) = v29;
    v28[-2] = v16;
    type metadata accessor for SportsDataServiceBatchRequest(0);
    sub_1BB86EC14();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v19;
    *(_QWORD *)(v23 + 24) = v20;
    *(_QWORD *)(v23 + 32) = v21;
    *(_BYTE *)(v23 + 40) = v22;
    sub_1BA98B604(v19, v20, v21, v22);
    v24 = (void *)sub_1BB86E854();
    v14 = sub_1BB86E9A4();
    swift_release();
    swift_release();

    v25 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v26 = v16;
    v27 = v31;
    v25(v26, v31);
    v25((uint64_t)v15, v27);
  }
  return v14;
}

char *sub_1BA988678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29[3];
  char v30;
  uint64_t v31;

  v28 = a7;
  v27 = a6;
  v26 = a5;
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SportsDataServiceBatchRequest(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v25 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v13, a1, v10, v18);
  v29[0] = a3;
  v29[1] = a4;
  v29[2] = v26;
  v30 = v27;
  v21 = v31;
  v22 = sub_1BA98B910(v29, a1, v28);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v23 = v22;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v13, v10);
    *(_QWORD *)&v20[*(int *)(v14 + 20)] = v23;
    sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v16, type metadata accessor for SportsDataServiceBatchRequest);
    sub_1BA4B07F0(0, &qword_1ED3A3A78, type metadata accessor for SportsDataServiceBatchRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v16 = (char *)sub_1BB86E9E0();
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for SportsDataServiceBatchRequest);
  }
  return v16;
}

uint64_t sub_1BA98883C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87A390;
  sub_1BB873E34();
  v3 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v4 = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  swift_getErrorValue();
  v5 = sub_1BB87456C();
  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = v6;
  sub_1BB86EF44("Failed to create data visualization URL for request=%{public}@; error=%{public}@",
    80,
    2,
    &dword_1BA493000,
    v0,
    v1,
    v2);

  return swift_bridgeObjectRelease();
}

void sub_1BA9889B4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[15];
  uint64_t v29;

  v28[13] = a2;
  v29 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1E0C80A78](v29);
  v28[8] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v28[7] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v28[6] = (char *)v28 - v8;
  MEMORY[0x1E0C80A78](v9);
  v28[5] = (char *)v28 - v10;
  MEMORY[0x1E0C80A78](v11);
  v28[4] = (char *)v28 - v12;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1BB86C67C();
  v28[9] = *(_QWORD *)(v16 - 8);
  v28[10] = v16;
  MEMORY[0x1E0C80A78](v16);
  v28[3] = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v28[2] = (char *)v28 - v19;
  MEMORY[0x1E0C80A78](v20);
  v28[1] = (char *)v28 - v21;
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], v4);
  v28[11] = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64);
  MEMORY[0x1E0C80A78](v26);
  v28[14] = (char *)v28 - v27;
  __asm { BR              X10 }
}

uint64_t sub_1BA988C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  sub_1BB86EC14();
  v2 = *(_QWORD *)(v1 - 112);
  sub_1BA98BB14(*(_QWORD *)(v1 - 120), v2);
  v3 = (*(unsigned __int8 *)(v0 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v4 = swift_allocObject();
  sub_1BA98BB70(v2, v4 + v3);
  v5 = (void *)sub_1BB86E854();
  v6 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1BA989A60(uint64_t a1)
{
  return sub_1BA989B1C(a1, (uint64_t (**)(uint64_t, _UNKNOWN **))off_1E7311188);
}

uint64_t sub_1BA989A80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1BA989B74(a1, a2, a3, 120.0);
}

uint64_t sub_1BA989A9C(uint64_t a1)
{
  return sub_1BA989B1C(a1, (uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111C8);
}

uint64_t sub_1BA989ABC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1BA989B74(a1, a2, a3, 600.0);
}

uint64_t sub_1BA989ADC(uint64_t a1)
{
  return sub_1BA989B1C(a1, (uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111D0);
}

uint64_t sub_1BA989AFC(uint64_t a1)
{
  return sub_1BA989B1C(a1, (uint64_t (**)(uint64_t, _UNKNOWN **))&off_1E73111D8);
}

uint64_t sub_1BA989B1C(uint64_t a1, uint64_t (**a2)(uint64_t, _UNKNOWN **))
{
  uint64_t (*v3)(uint64_t, _UNKNOWN **);
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
  v3 = *a2;
  v4 = type metadata accessor for SportsDataServiceResource();
  return v3(v4, &off_1E7311180);
}

uint64_t sub_1BA989B74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (double *)((char *)v20 - v12);
  v15 = *a1;
  v14 = a1[1];
  sub_1BA98BB14(a2, (uint64_t)v10);
  v16 = sub_1BB86DDB0();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16) == 1)
  {
    *v13 = a4;
    (*(void (**)(double *, _QWORD, uint64_t))(v17 + 104))(v13, *MEMORY[0x1E0DB32C8], v16);
    swift_bridgeObjectRetain();
    sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0]);
  }
  else
  {
    (*(void (**)(double *, char *, uint64_t))(v17 + 32))(v13, v10, v16);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  *a3 = v15;
  a3[1] = v14;
  v18 = type metadata accessor for SportsDataServiceResourceRequest(0);
  sub_1BA98BB70((uint64_t)v13, (uint64_t)a3 + *(int *)(v18 + 20));
  type metadata accessor for SportsDataServiceRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BA989D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  void (*v16)(char *, uint64_t);
  _QWORD v17[2];

  v3 = v1;
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - v10;
  v12 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1BB0A8E44();
  if (!v2)
  {
    v13 = sub_1BA989EE8(0x80000001BB965680, (uint64_t)v8);
    MEMORY[0x1E0C80A78](v13);
    v17[-4] = v3;
    v17[-3] = a1;
    v17[-2] = v11;
    v17[-1] = v8;
    type metadata accessor for SportsDataServiceRequest(0);
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BB86E854();
    v12 = sub_1BB86E9A4();
    swift_release();
    swift_release();

    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v8, v5);
    v16(v11, v5);
  }
  return v12;
}

uint64_t sub_1BA989EE8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  void (*v18)(_BYTE *, _QWORD);
  _QWORD *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[32];
  uint64_t v27;

  v27 = a1;
  v25 = a2;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - v4;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_1BB86BFF8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    sub_1BA98B368();
    swift_allocError();
    *v16 = 3;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    v18 = (void (*)(_BYTE *, _QWORD))sub_1BB86BF98();
    sub_1BB872AFC(v19);
    v18(v26, 0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    sub_1BB86BF80();
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v12, v9);
    v21 = sub_1BB86C67C();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v5, 1, v21) == 1)
    {
      sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1BA98B368();
      swift_allocError();
      *v23 = 2;
      swift_willThrow();
      return ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
    }
    else
    {
      v20(v15, v9);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v5, v21);
    }
  }
}

uint64_t sub_1BA98A1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v9 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v18 - v13;
  v15 = a4;
  v16 = a1;
  sub_1BA98A2D4(a2, a3, v15, (uint64_t)v18 - v13);
  if (!v4)
  {
    sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, type metadata accessor for SportsDataServiceRequest);
    sub_1BA4B07F0(0, &qword_1ED3A3A50, type metadata accessor for SportsDataServiceRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v16 = sub_1BB86E9E0();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  }
  return v16;
}

uint64_t sub_1BA98A2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t result;
  void (*v37)(char *, char *, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t inited;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  void (*v47)(uint64_t *, _QWORD);
  unint64_t *v48;
  unint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  _BYTE *v59;
  char *v60;
  void (*v61)(char *, uint64_t, _QWORD *);
  int *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, char *, _QWORD *);
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97[4];
  unint64_t v98;

  v79 = a2;
  v83 = sub_1BB86C8E0();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v81 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v84);
  v85 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v89 = (char *)&v75 - v11;
  v94 = (_QWORD *)sub_1BB86C67C();
  v96 = *(v94 - 1);
  MEMORY[0x1E0C80A78](v94);
  v92 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v91 = (char *)&v75 - v14;
  MEMORY[0x1E0C80A78](v15);
  v90 = (char *)&v75 - v16;
  MEMORY[0x1E0C80A78](v17);
  v93 = (char *)&v75 - v18;
  v87 = sub_1BB86BF20();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v95 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BB86DCE4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v9);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v75 - v25;
  v27 = sub_1BB86BFF8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v88 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v75 - v31;
  v80 = a3;
  v34 = v33;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v34) == 1)
  {
    sub_1BA5C699C((uint64_t)v26, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    sub_1BA98B368();
    swift_allocError();
    *v35 = 3;
    return swift_willThrow();
  }
  else
  {
    v77 = a4;
    v37 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v78 = v34;
    v37(v32, v26, v34);
    sub_1BB86BF5C();
    sub_1BB86BF68();
    sub_1BB86BF38();
    sub_1BB86BF44();
    v97[0] = a1;
    swift_bridgeObjectRetain_n();
    v38 = v98;
    sub_1BA5BBDDC(v97);
    if (v38)
    {
      result = swift_release();
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      v39 = v97[0];
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB9A0, (uint64_t (*)(uint64_t))sub_1BA98B3AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(inited + 32) = 7562345;
      *(_QWORD *)(inited + 40) = 0xE300000000000000;
      *(_QWORD *)(inited + 48) = v39;
      v41 = sub_1BA8F2DF4(inited);
      sub_1BB86BD4C();
      swift_allocObject();
      sub_1BB86BD40();
      v97[0] = v41;
      sub_1BA98B410();
      sub_1BA98B474();
      v42 = sub_1BB86BD28();
      v44 = v43;
      v75 = 0;
      v45 = v42;
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BB86E8A8();
      (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DB3078], v20);
      v76 = v45;
      v98 = v44;
      MEMORY[0x1BCCDF1B8](v45, v44, v23);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      v47 = (void (*)(uint64_t *, _QWORD))sub_1BB86BF2C();
      if (*v46)
      {
        v48 = v46;
        sub_1BB86BEFC();
        swift_bridgeObjectRelease();
        v49 = *v48;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v48 = v49;
        v51 = v96;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v49 = sub_1BA785BF0(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
          *v48 = v49;
        }
        v53 = *(_QWORD *)(v49 + 16);
        v52 = *(_QWORD *)(v49 + 24);
        if (v53 >= v52 >> 1)
        {
          v49 = sub_1BA785BF0(v52 > 1, v53 + 1, 1, v49);
          *v48 = v49;
        }
        *(_QWORD *)(v49 + 16) = v53 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v49+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v53, v95, v87);
        v47(v97, 0);
        v54 = v94;
      }
      else
      {
        swift_bridgeObjectRelease();
        v47(v97, 0);
        v54 = v94;
        v51 = v96;
      }
      v55 = v88;
      v56 = v78;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v88, v32, v78);
      v57 = (uint64_t)v89;
      sub_1BB86BF80();
      v58 = *(void (**)(char *, uint64_t))(v28 + 8);
      v58(v55, v56);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v51 + 48))(v57, 1, v54) == 1)
      {
        sub_1BA5C699C(v57, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        sub_1BA98B368();
        swift_allocError();
        *v59 = 4;
        swift_willThrow();
        sub_1BA69D314(v76, v98);
        return ((uint64_t (*)(char *, uint64_t))v58)(v32, v56);
      }
      else
      {
        v94 = *(_QWORD **)(v51 + 32);
        v60 = v93;
        ((void (*)(char *, uint64_t, _QWORD *))v94)(v93, v57, v54);
        v61 = *(void (**)(char *, uint64_t, _QWORD *))(v51 + 16);
        v61(v90, v79, v54);
        v61(v91, v80, v54);
        v61(v92, (uint64_t)v60, v54);
        v62 = (int *)v84;
        v63 = *(int *)(v84 + 32);
        v64 = (uint64_t)v85;
        v95 = (char *)v58;
        v65 = v54;
        v66 = (uint64_t *)&v85[v63];
        sub_1BA69D44C(v76, v98);
        v67 = v81;
        sub_1BB86C8D4();
        v68 = sub_1BB86C8C8();
        v70 = v69;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v67, v83);
        *v66 = v68;
        v66[1] = v70;
        v71 = (void (*)(uint64_t, char *, _QWORD *))v94;
        ((void (*)(uint64_t, char *, _QWORD *))v94)(v64, v90, v65);
        v71(v64 + v62[5], v91, v65);
        v71(v64 + v62[6], v92, v65);
        v72 = (_QWORD *)(v64 + v62[7]);
        v73 = v76;
        v74 = v98;
        *v72 = v76;
        v72[1] = v74;
        v72[2] = 0xD000000000000010;
        v72[3] = 0x80000001BB9646A0;
        sub_1BA98B4DC(v64, v77);
        sub_1BA69D314(v73, v74);
        (*(void (**)(char *, _QWORD *))(v96 + 8))(v93, v65);
        ((void (*)(char *, uint64_t))v95)(v32, v78);
        type metadata accessor for SportsDataServiceRequest(0);
        return swift_storeEnumTagMultiPayload();
      }
    }
  }
  return result;
}

uint64_t sub_1BA98AB94()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87A390;
  sub_1BB873E34();
  v3 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v4 = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  swift_getErrorValue();
  v5 = sub_1BB87456C();
  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = v6;
  sub_1BB86EF44("Failed to create event status URL for request=%{public}@; error=%{public}@",
    74,
    2,
    &dword_1BA493000,
    v0,
    v1,
    v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA98ACF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, uint64_t a4@<X6>, uint64_t *a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t result;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  _QWORD *v76;
  _QWORD *v77;

  v75 = a5;
  v76 = a1;
  v68 = a6;
  v71 = a4;
  v69 = a3;
  v66 = sub_1BB86C8E0();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v73);
  v67 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v55 - v11;
  v72 = sub_1BB86C67C();
  v74 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v55 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v55 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v55 - v21;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v9);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v55 - v24;
  v26 = sub_1BB86BFF8();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = (_QWORD *)*v76;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_1BA5C699C((uint64_t)v25, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    sub_1BA98B368();
    v30 = swift_allocError();
    *v31 = 3;
    result = swift_willThrow();
LABEL_5:
    *v75 = v30;
    return result;
  }
  v56 = v19;
  v57 = v16;
  v58 = v22;
  v59 = v13;
  v60 = v26;
  v61 = a2;
  v62 = v29;
  v63 = v27;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v25, v26);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BB86BF20();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
  v77 = v76;
  sub_1BA6D249C();
  sub_1BA98BAD4((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
  sub_1BB872904();
  sub_1BB86BEFC();
  swift_bridgeObjectRelease();
  v34 = v72;
  v33 = (int *)v73;
  v35 = v71;
  sub_1BB86BEFC();
  swift_bridgeObjectRelease();
  v36 = v62;
  sub_1BB86BF44();
  v37 = (uint64_t)v70;
  sub_1BB86BF80();
  v38 = v74;
  v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v37, 1, v34);
  v40 = v61;
  v41 = v63;
  if (v39 == 1)
  {
    sub_1BA5C699C(v37, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA98B368();
    v30 = swift_allocError();
    *v42 = 4;
    swift_willThrow();
    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v36, v60);
    goto LABEL_5;
  }
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
  v44 = v58;
  v43(v58, v37, v34);
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v46 = v56;
  v45(v56, v35, v34);
  v45(v57, v40, v34);
  v45(v59, (uint64_t)v44, v34);
  v47 = (uint64_t)v67;
  v48 = (uint64_t *)&v67[v33[8]];
  v49 = v65;
  sub_1BB86C8D4();
  v50 = sub_1BB86C8C8();
  v51 = v33;
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v66);
  *v48 = v50;
  v48[1] = v53;
  v43((char *)v47, (uint64_t)v46, v34);
  v43((char *)(v47 + v51[5]), (uint64_t)v57, v34);
  v43((char *)(v47 + v51[6]), (uint64_t)v59, v34);
  v54 = (_OWORD *)(v47 + v51[7]);
  *v54 = 0u;
  v54[1] = 0u;
  sub_1BA98B4DC(v47, v68);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v58, v34);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v60);
  type metadata accessor for SportsDataServiceRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BA98B2F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA98B320()
{
  uint64_t *v0;

  return sub_1BA98A1B0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1BA98B33C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA98B360()
{
  return sub_1BA98AB94();
}

unint64_t sub_1BA98B368()
{
  unint64_t result;

  result = qword_1EF2ABEE0;
  if (!qword_1EF2ABEE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataServiceError, &type metadata for SportsDataServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEE0);
  }
  return result;
}

void sub_1BA98B3AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AAD40)
  {
    sub_1BA6D249C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AAD40);
  }
}

void sub_1BA98B410()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A07B0)
  {
    sub_1BA6D249C();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A07B0);
  }
}

unint64_t sub_1BA98B474()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_1ED3A07B8;
  if (!qword_1ED3A07B8)
  {
    sub_1BA98B410();
    v2 = v1;
    v3 = sub_1BA5BBCE4();
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED3A07B8);
  }
  return result;
}

uint64_t sub_1BA98B4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataServiceURLRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_1BA98B520()
{
  uint64_t v0;

  return sub_1BA988678(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1BA98B548()
{
  uint64_t v0;

  sub_1BA98B574(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BA98B574(uint64_t result, uint64_t a2, char a3, char a4)
{
  switch(a4)
  {
    case 2:
      return sub_1BA98B5E4(result, a2, a3 & 1);
    case 1:
      return swift_release();
    case 0:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA98B5E4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_unknownObjectRelease();
}

uint64_t sub_1BA98B5F4()
{
  return sub_1BA98883C();
}

uint64_t sub_1BA98B604(uint64_t result, uint64_t a2, char a3, char a4)
{
  switch(a4)
  {
    case 2:
      return sub_1BA98B668(result, a2, a3 & 1);
    case 1:
      return swift_retain();
    case 0:
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA98B668(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BA98B678(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1BB874398() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BB874398() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BACAA47C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA98B910(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[6];
  char v15;
  uint64_t v16;
  uint64_t v17[3];
  char v18;
  uint64_t v19;

  v19 = a2;
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *((_BYTE *)a1 + 24);
  v17[1] = v6;
  v17[2] = v7;
  v18 = v8;
  SportsDataVisualizationRequest.tagIds.getter();
  sub_1BA6D249C();
  sub_1BA98BAD4((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
  v9 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v17[0] = v9;
  swift_bridgeObjectRetain();
  sub_1BA79BAB4(v17);
  if (v3)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BA98BAD4(&qword_1ED3CF870, MEMORY[0x1E0DEAF50]);
    v10 = sub_1BB8730F0();
    v11 = swift_release();
    MEMORY[0x1E0C80A78](v11);
    v14[2] = a3;
    v14[3] = v5;
    v14[4] = v6;
    v14[5] = v7;
    v15 = v8;
    v16 = v19;
    v12 = sub_1BA8A23F4((uint64_t)sub_1BA98BAAC, (uint64_t)v14, v10);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1BA98BAAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BA98ACF8(a1, *(_QWORD *)(v3 + 16), *(unsigned __int8 *)(v3 + 48), *(_QWORD *)(v3 + 56), a2, a3);
}

uint64_t sub_1BA98BAD4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA6D249C();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA98BB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA98BB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA98BBCC()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))&off_1E73111D8);
}

uint64_t sub_1BA98BBF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA98BCE0(a1, a2, 600.0);
}

uint64_t sub_1BA98BC10()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111D0);
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = sub_1BB86DDB0();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BA98BCE0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  return sub_1BA989B74(a1, v3 + ((v8 + 16) & ~v8), a2, a3);
}

uint64_t sub_1BA98BD60()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111C8);
}

uint64_t sub_1BA98BD84()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111C0);
}

uint64_t sub_1BA98BDA8()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111B8);
}

uint64_t sub_1BA98BDCC()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111B0);
}

uint64_t sub_1BA98BDF0()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111A8);
}

uint64_t sub_1BA98BE14()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E73111A0);
}

uint64_t sub_1BA98BE38()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E7311198);
}

uint64_t sub_1BA98BE5C()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E7311190);
}

uint64_t sub_1BA98BE80()
{
  return sub_1BA98BEA0((uint64_t (**)(uint64_t, _UNKNOWN **))off_1E7311188);
}

uint64_t sub_1BA98BEA0(uint64_t (**a1)(uint64_t, _UNKNOWN **))
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _UNKNOWN **);
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
  v3 = *a1;
  v4 = type metadata accessor for SportsDataServiceResource();
  return v3(v4, &off_1E7311180);
}

uint64_t sub_1BA98BEF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA98BCE0(a1, a2, 120.0);
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
  return swift_retain();
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatStateViewNodeStateDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA98BFFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for FormatOptionConverterContext(uint64_t a1)
{
  return sub_1BA98C024(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BA98C024(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8NewsFeed28FormatOptionConverterContextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA98BFFC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatOptionConverterContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA98BFFC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA98C024(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatOptionConverterContext(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA98C024(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatOptionConverterContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatOptionConverterContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA98C1A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1BA98C1C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionConverterContext()
{
  return &type metadata for FormatOptionConverterContext;
}

uint64_t FormatStateMachineInlineInput.initialState.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatStateMachineInlineInput.scope.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *FormatStateMachineInlineInput.scope.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*FormatStateMachineInlineInput.scope.modify())(_QWORD)
{
  return nullsub_1;
}

NewsFeed::FormatStateMachineInlineInput::Scope_optional __swiftcall FormatStateMachineInlineInput.Scope.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatStateMachineInlineInput::Scope_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FormatStateMachineInlineInput.Scope.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F74656C676E6973;
  else
    return 0x65636E6174736E69;
}

uint64_t sub_1BA98C2DC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA98C360()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA98C3C0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatStateMachineInlineInput::Scope_optional sub_1BA98C440(Swift::String *a1)
{
  return FormatStateMachineInlineInput.Scope.init(rawValue:)(*a1);
}

void sub_1BA98C44C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65636E6174736E69;
  if (*v1)
    v2 = 0x6F74656C676E6973;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE90000000000006ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BA98C490(char *a1, char *a2)
{
  return sub_1BB7F0A88(*a1, *a2);
}

uint64_t sub_1BA98C49C()
{
  sub_1BA98C6D0();
  return sub_1BB872D60();
}

uint64_t sub_1BA98C4F8(_QWORD *a1)
{
  return FormatStateMachineInlineInput.Scope.encode(to:)(a1);
}

uint64_t sub_1BA98C510@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatStateMachineInlineInput.init(from:)(a1, a2);
}

uint64_t sub_1BA98C524(_QWORD *a1)
{
  return FormatStateMachineInlineInput.encode(to:)(a1);
}

uint64_t _s8NewsFeed29FormatStateMachineInlineInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    if (v2)
      v6 = 0x6F74656C676E6973;
    else
      v6 = 0x65636E6174736E69;
    if (v2)
      v7 = 0xE90000000000006ELL;
    else
      v7 = 0xE800000000000000;
    if (v3)
      v8 = 0x6F74656C676E6973;
    else
      v8 = 0x65636E6174736E69;
    if (v3)
      v9 = 0xE90000000000006ELL;
    else
      v9 = 0xE800000000000000;
    if (v6 == v8 && v7 == v9)
      v5 = 1;
    else
      v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

unint64_t sub_1BA98C61C()
{
  unint64_t result;

  result = qword_1EF2ABEE8;
  if (!qword_1EF2ABEE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput.Scope, &type metadata for FormatStateMachineInlineInput.Scope);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEE8);
  }
  return result;
}

unint64_t sub_1BA98C660(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA98C68C();
  result = sub_1BA98C6D0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA98C68C()
{
  unint64_t result;

  result = qword_1EF2ABEF0;
  if (!qword_1EF2ABEF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput.Scope, &type metadata for FormatStateMachineInlineInput.Scope);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEF0);
  }
  return result;
}

unint64_t sub_1BA98C6D0()
{
  unint64_t result;

  result = qword_1ED39EB70;
  if (!qword_1ED39EB70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput.Scope, &type metadata for FormatStateMachineInlineInput.Scope);
    atomic_store(result, (unint64_t *)&qword_1ED39EB70);
  }
  return result;
}

unint64_t sub_1BA98C714(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA98C738();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA98C738()
{
  unint64_t result;

  result = qword_1EF2ABEF8;
  if (!qword_1EF2ABEF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput.Scope, &type metadata for FormatStateMachineInlineInput.Scope);
    atomic_store(result, (unint64_t *)&qword_1EF2ABEF8);
  }
  return result;
}

uint64_t sub_1BA98C77C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA98C798, (uint64_t (*)(void))sub_1BA98C7DC, (uint64_t (*)(void))sub_1BA98C61C);
}

unint64_t sub_1BA98C798()
{
  unint64_t result;

  result = qword_1ED39EB78;
  if (!qword_1ED39EB78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput.Scope, &type metadata for FormatStateMachineInlineInput.Scope);
    atomic_store(result, (unint64_t *)&qword_1ED39EB78);
  }
  return result;
}

unint64_t sub_1BA98C7DC()
{
  unint64_t result;

  result = qword_1ED39E838;
  if (!qword_1ED39E838)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput.Scope, &type metadata for FormatStateMachineInlineInput.Scope);
    atomic_store(result, (unint64_t *)&qword_1ED39E838);
  }
  return result;
}

unint64_t sub_1BA98C820(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA98C844();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA98C844()
{
  unint64_t result;

  result = qword_1EF2ABF00;
  if (!qword_1EF2ABF00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput, &type metadata for FormatStateMachineInlineInput);
    atomic_store(result, (unint64_t *)&qword_1EF2ABF00);
  }
  return result;
}

uint64_t sub_1BA98C888(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA98C8A4, (uint64_t (*)(void))sub_1BA98C8E8, (uint64_t (*)(void))sub_1BA98C92C);
}

unint64_t sub_1BA98C8A4()
{
  unint64_t result;

  result = qword_1ED39EB80;
  if (!qword_1ED39EB80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput, &type metadata for FormatStateMachineInlineInput);
    atomic_store(result, (unint64_t *)&qword_1ED39EB80);
  }
  return result;
}

unint64_t sub_1BA98C8E8()
{
  unint64_t result;

  result = qword_1ED39E1E8;
  if (!qword_1ED39E1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput, &type metadata for FormatStateMachineInlineInput);
    atomic_store(result, (unint64_t *)&qword_1ED39E1E8);
  }
  return result;
}

unint64_t sub_1BA98C92C()
{
  unint64_t result;

  result = qword_1EF2ABF08;
  if (!qword_1EF2ABF08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInlineInput, &type metadata for FormatStateMachineInlineInput);
    atomic_store(result, (unint64_t *)&qword_1EF2ABF08);
  }
  return result;
}

uint64_t sub_1BA98C970@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16);
  return result;
}

_BYTE *sub_1BA98C97C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = *result;
  return result;
}

uint64_t assignWithCopy for FormatPlaceholder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineInput()
{
  return &type metadata for FormatStateMachineInlineInput;
}

uint64_t storeEnumTagSinglePayload for FormatStateMachineInlineInput.Scope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA98CA74 + 4 * byte_1BB8899A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA98CAA8 + 4 * byte_1BB8899A0[v4]))();
}

uint64_t sub_1BA98CAA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA98CAB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA98CAB8);
  return result;
}

uint64_t sub_1BA98CAC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA98CACCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA98CAD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA98CAD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineInput.Scope()
{
  return &type metadata for FormatStateMachineInlineInput.Scope;
}

ValueMetadata *type metadata accessor for DebugFormatUploadEntryTarget()
{
  return &type metadata for DebugFormatUploadEntryTarget;
}

BOOL static IssueCoverTraits.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IssueCoverTraits.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t IssueCoverTraits.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA98CB8C()
{
  unint64_t result;

  result = qword_1EF2ABF10;
  if (!qword_1EF2ABF10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverTraits, &type metadata for IssueCoverTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2ABF10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IssueCoverTraits(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA98CC1C + 4 * byte_1BB889C05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA98CC50 + 4 * asc_1BB889C00[v4]))();
}

uint64_t sub_1BA98CC50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA98CC58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA98CC60);
  return result;
}

uint64_t sub_1BA98CC6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA98CC74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA98CC78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA98CC80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverTraits()
{
  return &type metadata for IssueCoverTraits;
}

uint64_t sub_1BA98CC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  type metadata accessor for FormatPuzzleEmbedViewController();
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    v7 = *(char **)(result + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController);
    v8 = &v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier];
    swift_beginAccess();
    *(_QWORD *)v8 = a1;
    *((_QWORD *)v8 + 1) = a2;
    v9 = v7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA98CD68()
{
  return sub_1BA98CDB0(&qword_1EF2ABF18, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedViewController);
}

uint64_t sub_1BA98CD8C()
{
  return sub_1BA98CDB0(&qword_1EF2ABF20, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedViewController);
}

uint64_t sub_1BA98CDB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatPuzzleEmbedViewController();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA98CDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA98CC9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA98CE18(char *a1)
{
  sub_1BB7FB82C(*a1);
}

void sub_1BA98CE24()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BA98CE6C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA98CEE8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA98CF20()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BA98CF88()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BA98CFCC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA98D04C(uint64_t a1)
{
  return sub_1BA4BA56C(a1);
}

uint64_t sub_1BA98D064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[3];

  v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v0, (uint64_t)v4, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    return sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  if (EnumCaseMultiPayload != 1)
  {
    v9 = *v4;
    v8 = v4[1];
    v10 = v4[2];
    v14[0] = v9;
    v14[1] = v8;
    v14[2] = v10;
    HIBYTE(v13) = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BB6B84D4(v14, (char *)&v13 + 7);
    if (!v1)
    {
      v12 = v11;
      swift_bridgeObjectRelease();
      sub_1BB3D7F90(v9, v8, v12, 0);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA98D1AC()
{
  return sub_1BA98D064();
}

uint64_t FormatCommandOpenURL.bind(binder:context:)()
{
  return sub_1BA98D620();
}

uint64_t sub_1BA98D1D8()
{
  return sub_1BA98D620();
}

unint64_t sub_1BA98D1F0()
{
  unint64_t result;

  result = qword_1ED3BA780;
  if (!qword_1ED3BA780)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecodingError, &type metadata for FormatDecodingError);
    atomic_store(result, (unint64_t *)&qword_1ED3BA780);
  }
  return result;
}

uint64_t sub_1BA98D234(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8NewsFeed20FormatCommandOpenURLO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v38;

  v4 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v38 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  sub_1BA98DC64();
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v38 + *(int *)(v18 + 48) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = a1;
  v21 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v20, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  sub_1BA4C2DD8(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      v24 = *v12;
      v23 = v12[1];
      v25 = v12[2];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v26 = v19[2];
        v27 = v24 == *v19 && v23 == v19[1];
        if (v27 || (sub_1BB874398() & 1) != 0)
        {
          v28 = sub_1BA5B35E8(v25, v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0)
            goto LABEL_29;
LABEL_26:
          v35 = 1;
LABEL_30:
          v36 = (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL;
          goto LABEL_31;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    else
    {
      sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      v30 = *v9;
      v29 = v9[1];
      v31 = v9[2];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v32 = v19[2];
        v33 = v30 == *v19 && v29 == v19[1];
        if (v33 || (sub_1BB874398() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v34 = sub_1BA8869D0(v31, v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          if ((v34 & 1) == 0)
            goto LABEL_29;
          goto LABEL_26;
        }
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1BA5193C4((uint64_t)v19, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
      if ((MEMORY[0x1BCCDCEFC](v15, v6) & 1) != 0
        && (sub_1BA5B35E8(*(_QWORD *)&v15[*(int *)(v4 + 20)], *(_QWORD *)&v6[*(int *)(v4 + 20)]) & 1) != 0)
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
        goto LABEL_26;
      }
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
LABEL_29:
      v35 = 0;
      goto LABEL_30;
    }
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
  }
  v35 = 0;
  v36 = (uint64_t (*)(_QWORD))sub_1BA98DC64;
LABEL_31:
  sub_1BA4A2E80((uint64_t)v21, v36);
  return v35;
}

uint64_t sub_1BA98D620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[3];
  char v17;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16[-1] - v3;
  v5 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v0, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  if (EnumCaseMultiPayload == 1)
    goto LABEL_6;
  v12 = *v7;
  v11 = v7[1];
  v13 = v7[2];
  v16[0] = v12;
  v16[1] = v11;
  v16[2] = v13;
  v17 = 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BB6B84D4(v16, &v17);
  if (v1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BB3757A0(v12, v11, v14, 1, (uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BA98DC18((uint64_t)v4);
  }
}

uint64_t sub_1BA98D7CC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B6100, (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL, (uint64_t)&protocol conformance descriptor for FormatCommandOpenURL);
  a1[2] = sub_1BA4A2870(&qword_1ED39B650, (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL, (uint64_t)&protocol conformance descriptor for FormatCommandOpenURL);
  result = sub_1BA4A2870(&qword_1EF2ABF28, (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL, (uint64_t)&protocol conformance descriptor for FormatCommandOpenURL);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCommandOpenURL(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v10 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for FormatCommandOpenURL(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v5 = sub_1BB86C67C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
        v6 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)((char *)a1 + *(int *)(v6 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for FormatURL(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FormatCommandOpenURL(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for FormatCommandOpenURL.CodingType()
{
  return &type metadata for FormatCommandOpenURL.CodingType;
}

unint64_t sub_1BA98DBD4()
{
  unint64_t result;

  result = qword_1EF2ABF30;
  if (!qword_1EF2ABF30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB889F18, &type metadata for FormatCommandOpenURL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ABF30);
  }
  return result;
}

uint64_t sub_1BA98DC18(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA98DC64()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2ABF38)
  {
    type metadata accessor for FormatCommandOpenURL();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2ABF38);
  }
}

id FormatSportsEventMatchupColorProvider.leftColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id FormatSportsEventMatchupColorProvider.rightColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

_QWORD *sub_1BA98DCD4()
{
  _QWORD *result;

  result = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(MEMORY[0x1E0DEE9D8]);
  qword_1EF3D04F0 = (uint64_t)result;
  return result;
}

UIColor sub_1BA98DCFC()
{
  Swift::String v0;
  UIColor result;

  sub_1BA748DB8();
  v0._countAndFlagsBits = 0x333945384538;
  v0._object = (void *)0xE600000000000000;
  result.super.isa = UIColor.init(hex:)(v0).super.isa;
  qword_1ED476768 = (uint64_t)result.super.isa;
  return result;
}

_QWORD *FormatSportsEventMatchupColorProvider.__allocating_init(sportsEvent:)(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  v1 = objc_msgSend(a1, sel_eventCompetitorTags);
  if (v1)
  {
    v2 = v1;
    sub_1BA8EB1C8();
    v3 = (void *)sub_1BB872DB4();

  }
  else
  {
    v3 = (void *)MEMORY[0x1E0DEE9D8];
  }
  v4 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v3);
  swift_unknownObjectRelease();
  return v4;
}

void *FormatSportsEventMatchupColorProvider.subscript.getter(void *a1)
{
  uint64_t v1;

  swift_getObjectType();
  return sub_1BA98E150(a1, v1);
}

_QWORD *sub_1BA98DDE8(id a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;

  v3 = v2;
  if (a1
    && (v6 = objc_msgSend(a1, sel_sportsTheme)) != 0
    && (v7 = objc_msgSend(v6, sel_sportsPrimaryColor),
        swift_unknownObjectRelease(),
        v7))
  {
    v8 = objc_msgSend(v7, sel_ne_color);

    if (!a2)
      goto LABEL_12;
  }
  else
  {
    if (qword_1ED3AF860 != -1)
      swift_once();
    v8 = (id)qword_1ED476768;
    if (!a2)
      goto LABEL_12;
  }
  v9 = objc_msgSend(a2, sel_sportsTheme);
  if (v9)
  {
    v10 = objc_msgSend(v9, sel_sportsPrimaryColor);
    swift_unknownObjectRelease();
    if (v10)
    {
      v11 = objc_msgSend(v10, sel_ne_color);

      goto LABEL_15;
    }
  }
LABEL_12:
  if (qword_1ED3AF860 != -1)
    swift_once();
  v11 = (id)qword_1ED476768;
LABEL_15:
  if (objc_msgSend(v8, sel__isSimilarToColor_withinPercentage_, v11, 0.12))
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v13 = sub_1BB8737D4();

    if (v13)
    {

      v11 = (id)v13;
    }
  }
  v14 = MEMORY[0x1E0DEE9E0];
  if (a1)
  {
    v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v16 = sub_1BB8729A0();
    v18 = v17;

    v19 = v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BB4BD6C8((uint64_t)v19, v16, v18, isUniquelyReferenced_nonNull_native);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v22 = sub_1BB8729A0();
    v24 = v23;

    v25 = v11;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BB4BD6C8((uint64_t)v25, v22, v24, v26);
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  v3[2] = v8;
  v3[3] = v11;
  v3[4] = v14;
  return v3;
}

uint64_t FormatSportsEventMatchupColorProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSportsEventMatchupColorProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1BA98E150(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;

  v2 = *(_QWORD *)(a2 + 32);
  v3 = objc_msgSend(a1, sel_identifier);
  v4 = sub_1BB8729A0();
  v6 = v5;

  if (*(_QWORD *)(v2 + 16) && (v7 = sub_1BA6E35A8(v4, v6), (v8 & 1) != 0))
  {
    v9 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v7);
    v10 = v9;
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

_QWORD *_s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  _QWORD *v9;
  _QWORD v11[2];
  void *v12;
  void *v13;

  sub_1BA98E308();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  sub_1BA98E368();
  sub_1BA865B14();
  sub_1BB86E140();
  v12 = 0;
  sub_1BB86E134();
  v7 = v13;
  v11[1] = 1;
  sub_1BB86E134();
  v8 = v12;
  type metadata accessor for FormatSportsEventMatchupColorProvider();
  swift_allocObject();
  v9 = sub_1BA98DDE8(v7, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t type metadata accessor for FormatSportsEventMatchupColorProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatSportsEventMatchupColorProvider()
{
  return swift_lookUpClassMethod();
}

void sub_1BA98E308()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3938)
  {
    sub_1BA98E368();
    sub_1BA865B14();
    v0 = sub_1BB86E128();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3938);
  }
}

void sub_1BA98E368()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB0D0)
  {
    sub_1BA8EB1C8();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB0D0);
  }
}

uint64_t FCAssetHandle.loadData(cachePolicy:)()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  sub_1BA98F074();
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  v2 = (void *)sub_1BB86E854();
  v3 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v3;
}

uint64_t FCAssetHandle.load()()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, sel_filePath);
  if (v1)
  {
    v2 = v1;
    sub_1BB8729A0();

    sub_1BA92A198();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA92A198();
    swift_allocObject();
    return sub_1BB86EA58();
  }
}

uint64_t FCAssetHandle.loadAsset()()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_filePath);
  if (v1)
  {

    sub_1BA98F240(0, (unint64_t *)&qword_1ED3AD1E0, (void (*)(uint64_t))sub_1BA749984);
    swift_allocObject();
    v2 = v0;
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA98F240(v4, (unint64_t *)&qword_1ED3AD1E0, (void (*)(uint64_t))sub_1BA749984);
    swift_allocObject();
    return sub_1BB86EA58();
  }
}

uint64_t sub_1BA98E624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v16[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1BA98F9D0;
  v11[6] = v10;
  v16[4] = sub_1BA98FA04;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1BA4F1DD8;
  v16[3] = &block_descriptor_24_0;
  v12 = _Block_copy(v16);
  swift_retain();
  v13 = a5;
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v13, sel_downloadIfNeededWithCompletion_, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_1BA98E744(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_filePath, v9);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BB8729A0();
    v16 = v15;

    a4(v14, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BA4A2870(qword_1EF2ABF40, (uint64_t (*)(uint64_t))_s6ErrorsOMa_0, (uint64_t)&unk_1BB88A07C);
    v17 = (void *)swift_allocError();
    v19 = v18;
    v20 = objc_msgSend(a1, sel_remoteURL);
    sub_1BB86C5EC();

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19, v11, v7);
    swift_storeEnumTagMultiPayload();
    a2(v17);

  }
}

uint64_t sub_1BA98E8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v16[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1BA573ED8;
  v11[6] = v10;
  v16[4] = sub_1BA98F9A0;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1BA4F1DD8;
  v16[3] = &block_descriptor_15;
  v12 = _Block_copy(v16);
  swift_retain();
  v13 = a5;
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v13, sel_downloadIfNeededWithCompletion_, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_1BA98E9EC(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void *))
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_dataProvider, v9))
  {
    a4(a1);
    swift_unknownObjectRelease();
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BA4A2870(qword_1EF2ABF40, (uint64_t (*)(uint64_t))_s6ErrorsOMa_0, (uint64_t)&unk_1BB88A07C);
    v12 = (void *)swift_allocError();
    v14 = v13;
    v15 = objc_msgSend(a1, sel_remoteURL);
    sub_1BB86C5EC();

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14, v11, v7);
    swift_storeEnumTagMultiPayload();
    a2(v12);

  }
}

uint64_t FCAssetHandle.loadDataProvider(cachePolicy:)(uint64_t *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  id v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD v16[2];

  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *((_BYTE *)a1 + 8);
  v10 = objc_msgSend(v1, sel_dataProvider, v5);
  if (v10)
  {
    v16[1] = v10;
    sub_1BA98F240(0, &qword_1ED3C4890, (void (*)(uint64_t))sub_1BA98F074);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    if (v8)
      v12 = v9;
    else
      v12 = 0;
    if ((v12 & 1) != 0)
    {
      _s6ErrorsOMa_0();
      sub_1BA4A2870(qword_1EF2ABF40, (uint64_t (*)(uint64_t))_s6ErrorsOMa_0, (uint64_t)&unk_1BB88A07C);
      swift_allocError();
      v14 = v13;
      v15 = objc_msgSend(v1, sel_remoteURL);
      sub_1BB86C5EC();

      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v14, v7, v3);
      swift_storeEnumTagMultiPayload();
      sub_1BA98F240(0, &qword_1ED3C4890, (void (*)(uint64_t))sub_1BA98F074);
      swift_allocObject();
      return sub_1BB86E9C8();
    }
    else
    {
      MEMORY[0x1E0C80A78](0);
      v16[-2] = v1;
      sub_1BA98F240(0, &qword_1ED3C4890, (void (*)(uint64_t))sub_1BA98F074);
      swift_allocObject();
      return sub_1BB86EA58();
    }
  }
}

uint64_t sub_1BA98ED60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v16[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1BA573ED8;
  v11[6] = v10;
  v16[4] = sub_1BA98F990;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1BA4F1DD8;
  v16[3] = &block_descriptor_9;
  v12 = _Block_copy(v16);
  swift_retain();
  v13 = a5;
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v13, sel_downloadIfNeededWithCompletion_, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_1BA98EE80(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_dataProvider, v9))
  {
    a4();
    swift_unknownObjectRelease();
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BA4A2870(qword_1EF2ABF40, (uint64_t (*)(uint64_t))_s6ErrorsOMa_0, (uint64_t)&unk_1BB88A07C);
    v12 = (void *)swift_allocError();
    v14 = v13;
    v15 = objc_msgSend(a1, sel_remoteURL);
    sub_1BB86C5EC();

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14, v11, v7);
    swift_storeEnumTagMultiPayload();
    a2(v12);

  }
}

uint64_t sub_1BA98EFF0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  char v5;

  v4 = a2;
  v5 = a3 & 1;
  return FCAssetHandle.loadDataProvider(cachePolicy:)(&v4);
}

uint64_t sub_1BA98F030()
{
  uint64_t v0;
  char v1;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = v1;
  return FCAssetHandle.loadDataProvider(cachePolicy:)(&v3);
}

unint64_t sub_1BA98F074()
{
  unint64_t result;

  result = qword_1ED3CF960;
  if (!qword_1ED3CF960)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3CF960);
  }
  return result;
}

void sub_1BA98F0C8(id *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(*a1, sel_data, v8);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1BB86C6E8();
    v15 = v14;

    *a3 = v13;
    a3[1] = v15;
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BA4A2870(qword_1EF2ABF40, (uint64_t (*)(uint64_t))_s6ErrorsOMa_0, (uint64_t)&unk_1BB88A07C);
    swift_allocError();
    v17 = v16;
    v18 = objc_msgSend(a2, sel_remoteURL);
    sub_1BB86C5EC();

    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v10, v6);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
}

uint64_t sub_1BA98F214()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BA98F238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA98ED60(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1BA98F240(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BB86EAAC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t _s6ErrorsOMa_0()
{
  uint64_t result;

  result = qword_1EF2ABFB8;
  if (!qword_1EF2ABFB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FCAssetHandle.remoteURLAbsoluteString.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_remoteURL, v3);
  sub_1BB86C5EC();

  v7 = sub_1BB86C538();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t FCAssetHandle.fallbackImage.getter()
{
  return 0;
}

uint64_t FCAssetHandle.download(withGroup:)(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = objc_msgSend(v1, sel_downloadIfNeededWithGroup_, a1);
  return swift_unknownObjectRelease();
}

id FCAssetHandle.assetDataProvider.getter@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  a1[3] = sub_1BA749984();
  a1[4] = sub_1BA4A2870((unint64_t *)&unk_1ED3C2980, (uint64_t (*)(uint64_t))sub_1BA749984, (uint64_t)&protocol conformance descriptor for FCAssetHandle);
  *a1 = v3;
  return v3;
}

uint64_t sub_1BA98F40C(uint64_t a1)
{
  id *v1;
  id v2;

  v2 = objc_msgSend(*v1, sel_downloadIfNeededWithGroup_, a1);
  return swift_unknownObjectRelease();
}

uint64_t FCAssetHandle.data.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, sel_dataProvider);
  v2 = (uint64_t)v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_data);
    swift_unknownObjectRelease();
    if (v3)
    {
      v2 = sub_1BB86C6E8();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

id FCAssetHandle.isRawFileConsumable.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_dataProvider);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, sel_isRawFileConsumable);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1BA98F524()
{
  id *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(*v0, sel_dataProvider);
  v2 = (uint64_t)v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_data);
    swift_unknownObjectRelease();
    if (v3)
    {
      v2 = sub_1BB86C6E8();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t *sub_1BA98F5B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BA98F6BC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    v3 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

uint64_t sub_1BA98F708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BA98F778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1BA98F7F8(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BA98F7F8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s6ErrorsOMa_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA98F834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BA98F8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1BA98F7F8(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BA98F924()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA98F990()
{
  return sub_1BA98FA10((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA98EE80);
}

uint64_t sub_1BA98F9A0()
{
  return sub_1BA98FA10((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA98E9EC);
}

uint64_t sub_1BA98F9AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA98F9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_1BA98FA04()
{
  return sub_1BA98FA10((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA98E744);
}

uint64_t sub_1BA98FA10(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

NewsFeed::FormatPatternDirection_optional __swiftcall FormatPatternDirection.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatPatternDirection_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FormatPatternDirection.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F546D6F74746F62;
  else
    return 0x746F426F54706F74;
}

uint64_t sub_1BA98FAE8(char *a1, char *a2)
{
  return sub_1BB7F77F8(*a1, *a2);
}

unint64_t sub_1BA98FAF8()
{
  unint64_t result;

  result = qword_1EF2ABFF0;
  if (!qword_1EF2ABFF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternDirection, &type metadata for FormatPatternDirection);
    atomic_store(result, (unint64_t *)&qword_1EF2ABFF0);
  }
  return result;
}

uint64_t sub_1BA98FB3C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA98FBCC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA98FC38()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatPatternDirection_optional sub_1BA98FCC4(Swift::String *a1)
{
  return FormatPatternDirection.init(rawValue:)(*a1);
}

void sub_1BA98FCD0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746F426F54706F74;
  if (*v1)
    v2 = 0x6F546D6F74746F62;
  v3 = 0xEB000000006D6F74;
  if (*v1)
    v3 = 0xEB00000000706F54;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BA98FD20(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA98FD4C();
  result = sub_1BA98FD90();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA98FD4C()
{
  unint64_t result;

  result = qword_1EF2ABFF8;
  if (!qword_1EF2ABFF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternDirection, &type metadata for FormatPatternDirection);
    atomic_store(result, (unint64_t *)&qword_1EF2ABFF8);
  }
  return result;
}

unint64_t sub_1BA98FD90()
{
  unint64_t result;

  result = qword_1ED3A0210;
  if (!qword_1ED3A0210)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternDirection, &type metadata for FormatPatternDirection);
    atomic_store(result, (unint64_t *)&qword_1ED3A0210);
  }
  return result;
}

unint64_t sub_1BA98FDD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA98FDF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA98FDF8()
{
  unint64_t result;

  result = qword_1EF2AC000;
  if (!qword_1EF2AC000)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternDirection, &type metadata for FormatPatternDirection);
    atomic_store(result, (unint64_t *)&qword_1EF2AC000);
  }
  return result;
}

unint64_t sub_1BA98FE3C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA98FE70();
  a1[2] = sub_1BA98FEB4();
  result = sub_1BA98FAF8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA98FE70()
{
  unint64_t result;

  result = qword_1ED3A0218;
  if (!qword_1ED3A0218)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternDirection, &type metadata for FormatPatternDirection);
    atomic_store(result, (unint64_t *)&qword_1ED3A0218);
  }
  return result;
}

unint64_t sub_1BA98FEB4()
{
  unint64_t result;

  result = qword_1ED3A0208;
  if (!qword_1ED3A0208)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternDirection, &type metadata for FormatPatternDirection);
    atomic_store(result, (unint64_t *)&qword_1ED3A0208);
  }
  return result;
}

uint64_t sub_1BA98FEF8()
{
  sub_1BA98FD90();
  return sub_1BB872D60();
}

uint64_t sub_1BA98FF54(_QWORD *a1)
{
  return FormatPatternDirection.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatPatternDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA98FFB4 + 4 * byte_1BB88A0D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA98FFE8 + 4 * byte_1BB88A0D0[v4]))();
}

uint64_t sub_1BA98FFE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA98FFF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA98FFF8);
  return result;
}

uint64_t sub_1BA990004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA99000CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA990010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA990018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternDirection()
{
  return &type metadata for FormatPatternDirection;
}

uint64_t dispatch thunk of ResourceBackedType.backingResource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FormatItemCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(v3 + 8);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      sub_1BA7F8204(0);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      sub_1BA7F7B48(v11 + *(_QWORD *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1BA7F8204(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA7F8204(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
}

uint64_t FormatItemCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA7F85E8(0, (unint64_t *)&qword_1ED3B9400, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4E90F4(&qword_1ED39BE40, &qword_1ED39B150, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatItemCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

NewsFeed::FormatItemCollection __swiftcall FormatItemCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  NewsFeed::FormatItemCollection result;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BA5BBE00(MEMORY[0x1E0DEE9D8]);
  *v1 = v2;
  v1[1] = v3;
  result.itemsByIdentifier._rawValue = v4;
  result.items._rawValue = v3;
  return result;
}

BOOL sub_1BA990250()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

unint64_t sub_1BA990264@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA5BBE00(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_1BA990294(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  sub_1BA7F7BD0(a1, (uint64_t)v5, *v2);
}

_QWORD *assignWithCopy for FormatSizeEquation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatSizeEquation(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatItemCollection()
{
  return &type metadata for FormatItemCollection;
}

uint64_t sub_1BA990380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7F8204(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FormatPuzzleStatistic.identifier.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v1);
  return v3;
}

uint64_t FormatPuzzleStatistic.puzzleType.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleStatistic.statistic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleStatistic.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleStatistic.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FormatPuzzleStatistic.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPuzzleStatistic.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleStatistic.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatPuzzleStatistic.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPuzzleStatistic.init(puzzleType:statistic:selectors:properties:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1BA9904DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA990510 + 4 * byte_1BB88A310[*v0]))(0x7954656C7A7A7570, 0xEA00000000006570);
}

uint64_t sub_1BA990510()
{
  return 0x6974736974617473;
}

uint64_t sub_1BA99052C()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA99054C()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA990564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA99146C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA990588()
{
  sub_1BA990E9C();
  return sub_1BB874710();
}

uint64_t sub_1BA9905B0()
{
  sub_1BA990E9C();
  return sub_1BB87471C();
}

uint64_t FormatPuzzleStatistic.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;

  sub_1BA990F38(0, &qword_1ED3AF418, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v10 = *v1;
  v9 = v1[1];
  v19 = v1[2];
  v20 = v9;
  v11 = v1[3];
  v17 = v1[4];
  v18 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA990E9C();
  sub_1BB8746C8();
  v23 = v10;
  LOBYTE(v21) = 0;
  type metadata accessor for FormatPuzzleType(0);
  sub_1BA4A2870(&qword_1ED3AD528, type metadata accessor for FormatPuzzleType, (uint64_t)&protocol conformance descriptor for FormatPuzzleType);
  sub_1BB8741AC();
  if (v2)
  {
    v12 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  }
  else
  {
    v14 = v17;
    v13 = v18;
    LOBYTE(v23) = 1;
    sub_1BB87417C();
    if (*(_QWORD *)(v13 + 16))
    {
      v22 = 2;
      swift_bridgeObjectRetain_n();
      v16 = sub_1BA67F4CC(v13);
      swift_bridgeObjectRelease();
      v21 = v16;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v21);
      swift_release();
      v23 = (uint64_t)v21;
      sub_1BA990EE0();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    if (*(_QWORD *)(v14 + 16))
    {
      LOBYTE(v21) = 3;
      v23 = v14;
      sub_1BA990EE0();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
    v12 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  }
  return v12(v8, v5);
}

uint64_t FormatPuzzleStatistic.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;

  v49 = a2;
  sub_1BA89B794();
  v48 = v3;
  v46 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA990F38(0, &qword_1ED3AE6B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v50 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA990E9C();
  v14 = v51;
  sub_1BB87468C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v9;
  v51 = v7;
  type metadata accessor for FormatPuzzleType(0);
  v57 = 0;
  sub_1BA4A2870(&qword_1ED3AD530, type metadata accessor for FormatPuzzleType, (uint64_t)&protocol conformance descriptor for FormatPuzzleType);
  v16 = v50;
  v17 = v13;
  sub_1BB8740D4();
  v19 = v58;
  v56 = 1;
  swift_retain();
  v20 = sub_1BB874098();
  v22 = v21;
  v43 = v20;
  v45 = v19;
  v55 = 2;
  swift_bridgeObjectRetain();
  v23 = sub_1BB8740F8();
  v44 = 0;
  if ((v23 & 1) != 0)
  {
    v52 = 2;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v24 = v6;
    v25 = v17;
    v42 = v22;
    v26 = v16;
    v27 = v24;
    v28 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v27);
    v29 = v28;
  }
  else
  {
    v25 = v17;
    v42 = v22;
    v26 = v16;
    v29 = MEMORY[0x1E0DEE9E8];
  }
  v54 = 3;
  v51 = v29;
  swift_bridgeObjectRetain();
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v53 = 3;
    sub_1BA4A2870(&qword_1ED39EDD8, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
    v31 = v47;
    v30 = v48;
    sub_1BB8740D4();
    v32 = v26;
    v33 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v30);
  }
  else
  {
    v32 = v26;
    v33 = MEMORY[0x1E0DEE9D8];
  }
  v34 = v49;
  v35 = v11;
  v36 = (uint64_t)a1;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v32);
  v37 = v45;
  swift_retain();
  v38 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  v39 = v43;
  *v34 = v37;
  v34[1] = v39;
  v40 = v51;
  v34[2] = v38;
  v34[3] = v40;
  v34[4] = v33;
  __swift_destroy_boxed_opaque_existential_1(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA990D68@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatPuzzleStatistic.init(from:)(a1, a2);
}

uint64_t sub_1BA990D7C(_QWORD *a1)
{
  return FormatPuzzleStatistic.encode(to:)(a1);
}

uint64_t _s8NewsFeed21FormatPuzzleStatisticV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  char v14;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v8 = *a2;
  v7 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  type metadata accessor for FormatPuzzleType(0);
  if ((static FormatPuzzleType.== infix(_:_:)(v2, v8) & 1) == 0)
    return 0;
  v12 = v3 == v7 && v5 == v10;
  if (!v12 && (sub_1BB874398() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA6EB330(v4, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA8880B0(v6, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

unint64_t sub_1BA990E9C()
{
  unint64_t result;

  result = qword_1ED3AD6E8;
  if (!qword_1ED3AD6E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A49C, &type metadata for FormatPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6E8);
  }
  return result;
}

unint64_t sub_1BA990EE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AC010;
  if (!qword_1EF2AC010)
  {
    sub_1BA990F38(255, &qword_1ED3AF418, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AC010);
  }
  return result;
}

void sub_1BA990F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA990E9C();
    v7 = a3(a1, &type metadata for FormatPuzzleStatistic.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA990F94(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA990FC8();
  a1[2] = sub_1BA99100C();
  result = sub_1BA991050();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA990FC8()
{
  unint64_t result;

  result = qword_1ED3AD710;
  if (!qword_1ED3AD710)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatistic, &type metadata for FormatPuzzleStatistic);
    atomic_store(result, (unint64_t *)&qword_1ED3AD710);
  }
  return result;
}

unint64_t sub_1BA99100C()
{
  unint64_t result;

  result = qword_1ED3AD700;
  if (!qword_1ED3AD700)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatistic, &type metadata for FormatPuzzleStatistic);
    atomic_store(result, (unint64_t *)&qword_1ED3AD700);
  }
  return result;
}

unint64_t sub_1BA991050()
{
  unint64_t result;

  result = qword_1EF2AC018;
  if (!qword_1EF2AC018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatistic, &type metadata for FormatPuzzleStatistic);
    atomic_store(result, (unint64_t *)&qword_1EF2AC018);
  }
  return result;
}

uint64_t sub_1BA991094@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA9910A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BA9910E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA9910EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t destroy for FormatPuzzleStatistic()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatPuzzleStatistic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatPuzzleStatistic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatPuzzleStatistic(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatistic()
{
  return &type metadata for FormatPuzzleStatistic;
}

uint64_t storeEnumTagSinglePayload for FormatPuzzleStatistic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA991314 + 4 * byte_1BB88A319[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA991348 + 4 * byte_1BB88A314[v4]))();
}

uint64_t sub_1BA991348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA991350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA991358);
  return result;
}

uint64_t sub_1BA991364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA99136CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA991370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA991378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatistic.CodingKeys()
{
  return &type metadata for FormatPuzzleStatistic.CodingKeys;
}

unint64_t sub_1BA991398()
{
  unint64_t result;

  result = qword_1EF2AC020;
  if (!qword_1EF2AC020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A474, &type metadata for FormatPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC020);
  }
  return result;
}

unint64_t sub_1BA9913E0()
{
  unint64_t result;

  result = qword_1ED3AD6F8;
  if (!qword_1ED3AD6F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A3E4, &type metadata for FormatPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6F8);
  }
  return result;
}

unint64_t sub_1BA991428()
{
  unint64_t result;

  result = qword_1ED3AD6F0;
  if (!qword_1ED3AD6F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A40C, &type metadata for FormatPuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6F0);
  }
  return result;
}

uint64_t sub_1BA99146C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7954656C7A7A7570 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736974617473 && a2 == 0xE900000000000063 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id SportsLineScoreDataVisualization.leagueTag.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
}

uint64_t SportsLineScoreDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsLineScoreDataVisualization.competitorTags.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t SportsLineScoreDataVisualization.umcCanonicalId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsLineScoreDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsLineScoreDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, a1);
}

uint64_t SportsLineScoreDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsLineScoreDataVisualization.roster.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsLineScoreDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 32);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BA99178C(v2, v3);
}

uint64_t sub_1BA99178C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t SportsLineScoreDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, a1);
}

uint64_t sub_1BA9917F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t SportsLineScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

_QWORD *SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v8 = v7;
  v40 = a5;
  v41 = a1;
  v45 = a4;
  v46 = a3;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  v42 = v13;
  v43 = v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v44 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a6;
  v18 = *a7;
  v19 = a7[1];
  v20 = a7[2];
  v21 = a7[3];
  v22 = a7[4];
  v39 = a7[5];
  v8[4] = a1;
  v8[5] = a2;
  v23 = v45;
  v8[6] = v46;
  (*(void (**)(uint64_t, uint64_t, double))(v24 + 16))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, v23, v15);
  *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources) = v40;
  *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster) = v17;
  v25 = (_QWORD *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  *v25 = v18;
  v25[1] = v19;
  v25[2] = v20;
  v25[3] = v21;
  v26 = v39;
  v25[4] = v22;
  v25[5] = v26;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BA99178C(v18, v19);
  v47 = sub_1BB86C538();
  v48 = v27;
  sub_1BB872AFC(v28);
  sub_1BB872AFC(v29);
  sub_1BB872AFC(v30);
  sub_1BB872AFC(v31);
  swift_bridgeObjectRelease();
  v32 = v48;
  v8[2] = v47;
  v8[3] = v32;
  v47 = v18;
  v48 = v19;
  v49 = v20;
  v50 = v21;
  v51 = v22;
  v52 = v26;
  v34 = v44;
  v33 = v45;
  sub_1BB0FA6B8(v45, &v47, 0xD00000000000001ALL, 0x80000001BB965860, v44);
  swift_unknownObjectRelease();
  v35 = v43;
  v36 = v33;
  v37 = v42;
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v42);
  sub_1BA993900(v18, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, v34, v37);
  return v8;
}

uint64_t SportsLineScoreDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[6];
  uint64_t v25;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = a1[5];
  v13 = v1[4];
  v21 = v1[5];
  v22 = v1[6];
  v23 = v13;
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, v4);
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  v24[5] = v11;
  v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v21;
  swift_bridgeObjectRetain();
  v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsLineScoreDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsLineScoreDataVisualization.init(from:)(a1);
  return v2;
}

uint64_t *SportsLineScoreDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[3];
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;

  v39 = a1;
  v2 = v1;
  v4 = *v2;
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v30 - v7;
  sub_1BA99395C();
  v35 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA993A8C(0, &qword_1EF2AC028, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v36 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA9939C0();
  v37 = v15;
  v16 = v38;
  sub_1BB87468C();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v4;
    v18 = v35;
    v38 = v13;
    v30[2] = v17;
    LOBYTE(v40) = 0;
    v2[4] = sub_1BB874098();
    v2[5] = v19;
    LOBYTE(v40) = 1;
    sub_1BA4A2870(&qword_1ED3A3BA0, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB50A0]);
    sub_1BB8740D4();
    sub_1BB86ED1C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    v2[6] = v40;
    LOBYTE(v40) = 2;
    v20 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v21 = v33;
    v22 = v34;
    sub_1BB8740D4();
    v30[1] = v20;
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    v23(OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, v21, v22);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v43 = 3;
    sub_1BA993B04(&qword_1ED3AB090, &qword_1ED3AA680, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF40]);
    v35 = 0;
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources) = v40;
    v43 = 4;
    sub_1BA993A04();
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster) = v40;
    v43 = 5;
    sub_1BA993A48();
    sub_1BB874068();
    v24 = OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config;
    v25 = v41;
    *(_OWORD *)OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config = v40;
    *(_OWORD *)(v24 + 16) = v25;
    *(_OWORD *)(v24 + 32) = v42;
    LOBYTE(v40) = 6;
    MEMORY[0x10] = sub_1BB874098();
    MEMORY[0x18] = v26;
    LOBYTE(v40) = 7;
    v27 = v31;
    v28 = v34;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v36);
    v23(OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, v27, v28);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v2;
}

uint64_t SportsLineScoreDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;

  v28 = sub_1BB86E008();
  v2 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A3BB0, (uint64_t (*)(uint64_t))sub_1BA99395C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  sub_1BA993A8C(0, &qword_1EF2AC048, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA9939C0();
  v13 = v9;
  v14 = v29;
  sub_1BB8746C8();
  LOBYTE(v32) = 0;
  v31 = v13;
  v15 = v30;
  sub_1BB87417C();
  if (v15)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  v17 = v2;
  v18 = v28;
  v27 = v7;
  v30 = v10;
  *(_QWORD *)&v32 = *(_QWORD *)(v14 + 48);
  v19 = qword_1ED3A3888;
  swift_unknownObjectRetain_n();
  if (v19 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED3A3868);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v4, v20, v18);
  MEMORY[0x1E0C80A78](v21);
  *(&v26 - 2) = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF9B0);
  swift_getKeyPath();
  v22 = (uint64_t)v27;
  sub_1BB86ED10();
  swift_unknownObjectRelease();
  sub_1BA99395C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  LOBYTE(v32) = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3B90, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB5098]);
  sub_1BB87414C();
  sub_1BA5C699C(v22, &qword_1ED3A3BB0, (uint64_t (*)(uint64_t))sub_1BA99395C);
  LOBYTE(v32) = 2;
  sub_1BB86C67C();
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1BB8741AC();
  *(_QWORD *)&v32 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources);
  v35 = 3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA993B04((unint64_t *)&qword_1ED3AB080, (unint64_t *)&unk_1ED3AA670, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  *(_QWORD *)&v32 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  v35 = 4;
  sub_1BA4CF8F4(0, &qword_1EF2AC050);
  sub_1BA993B9C(&qword_1EF2AC058, &qword_1EF2AC050, (uint64_t)&type metadata for SportsEventRoster, (uint64_t (*)(void))sub_1BA993C00);
  sub_1BB8741AC();
  v24 = *(_OWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 16);
  v32 = *(_OWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  v33 = v24;
  v34 = *(_OWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 32);
  v35 = 5;
  sub_1BA4CF8F4(0, (unint64_t *)&qword_1EF2CA0A0);
  sub_1BA993B9C((unint64_t *)&qword_1EF2AC070, (unint64_t *)&qword_1EF2CA0A0, (uint64_t)&type metadata for SportsDataVisualizationConfig, (uint64_t (*)(void))sub_1BA993C44);
  sub_1BB8741AC();
  LOBYTE(v32) = 6;
  sub_1BB87417C();
  v25 = v30;
  LOBYTE(v32) = 7;
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v31);
}

uint64_t sub_1BA992838(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA992878 + 4 * byte_1BB88A4F0[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BA992878()
{
  return 0x746E657665;
}

uint64_t sub_1BA99288C()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BA9928A4()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BA9928C8()
{
  return 0x726574736F72;
}

uint64_t sub_1BA9928DC()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BA9928F0()
{
  return 0x696669746E656469;
}

unint64_t sub_1BA99290C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA992928(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA992968 + 4 * byte_1BB88A4F8[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BA992968()
{
  return 0x746E657665;
}

uint64_t sub_1BA99297C()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BA992994()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BA9929B8()
{
  return 0x726574736F72;
}

uint64_t sub_1BA9929CC()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BA9929E0()
{
  return 0x696669746E656469;
}

unint64_t sub_1BA9929FC()
{
  return 0xD000000000000012;
}

void sub_1BA992A18(char *a1)
{
  sub_1BB7EE288(*a1);
}

void sub_1BA992A24()
{
  char *v0;

  sub_1BAB074B0(0, *v0);
}

void sub_1BA992A30(uint64_t a1)
{
  char *v1;

  sub_1BA9D10BC(a1, *v1);
}

void sub_1BA992A38(uint64_t a1)
{
  char *v1;

  sub_1BAB074B0(a1, *v1);
}

uint64_t sub_1BA992A40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA993F44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA992A6C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA992838(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA992A94()
{
  unsigned __int8 *v0;

  return sub_1BA992928(*v0);
}

uint64_t sub_1BA992A9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA993F44();
  *a1 = result;
  return result;
}

uint64_t sub_1BA992AC0()
{
  sub_1BA9939C0();
  return sub_1BB874710();
}

uint64_t sub_1BA992AE8()
{
  sub_1BA9939C0();
  return sub_1BB87471C();
}

uint64_t SportsLineScoreDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl;
  v2 = sub_1BB86C67C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA993900(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsLineScoreDataVisualization.__deallocating_deinit()
{
  SportsLineScoreDataVisualization.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_1BA992BEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = SportsLineScoreDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA992C40(_QWORD *a1)
{
  return SportsLineScoreDataVisualization.encode(to:)(a1);
}

uint64_t static SportsLineScoreDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BA992C90(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1BB874398();
  }
}

_QWORD *sub_1BA992CBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  _QWORD *result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _UNKNOWN **v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  _QWORD *v107;
  __int128 v108;
  uint64_t v109;
  __int128 *v110;
  _QWORD *v111;
  uint64_t inited;
  _QWORD *v113;
  char *v114;
  __int128 v115;
  __int128 v116;
  unint64_t v117;
  __int128 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  char *v139;
  __int128 v140;
  __int128 v141;
  _UNKNOWN **v142;
  uint64_t v143;
  _QWORD v144[5];
  __int128 v145;
  uint64_t v146;
  _OWORD v147[2];
  uint64_t v148;

  v2 = sub_1BB86C67C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v114 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v113 = (_QWORD *)((char *)&v108 - v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v3, v6);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  if (!a1)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v123 = v14;
  v129 = v13;
  v139 = (char *)&v108 - v12;
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  v108 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = v15;
  sub_1BA8C88C8(0);
  v132 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v20 = *(unsigned __int8 *)(v18 + 80);
  v21 = (v20 + 32) & ~v20;
  v127 = v20 | 7;
  v128 = v16;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB87D7A0;
  v131 = v21;
  v109 = v22;
  v23 = (_QWORD *)(v22 + v21);
  v24 = (__int128 *)a1;
  v25 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 40);
  v136 = v26;
  v27 = type metadata accessor for FormatInspectionItem(0);
  v28 = (char *)v23 + *(int *)(v27 + 24);
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v26;
  v29 = v24;
  v30 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v137 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v138 = v30;
  v137(v28, 0, 1, v30);
  *v23 = 0xD000000000000010;
  v23[1] = 0x80000001BB9658C0;
  v23[2] = 0;
  v23[3] = 0;
  v31 = (char *)v23 + *(int *)(v27 + 28);
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v31[16] = -1;
  v32 = *(char **)(*(_QWORD *)(v27 - 8) + 56);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v32)(v23, 0, 1, v27);
  v111 = v23;
  v133 = v19;
  v33 = (_QWORD *)((char *)v23 + v19);
  v34 = v27;
  v35 = (char *)v24 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl;
  v36 = (uint64_t)v139;
  v126 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v126(v139, v35, v2);
  v130 = v4;
  v37 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v124 = v2;
  v125 = v37;
  v37(v36, 0, 1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF770C(0x5255206465626D45, 0xE90000000000004CLL, v36, v33);
  v139 = v32;
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v32)(v33, 0, 1, v27);
  v38 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources);
  if (v38 >> 62)
    goto LABEL_22;
  v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v110 = v29;
  if (v39)
  {
    while (1)
    {
      v146 = MEMORY[0x1E0DEE9D8];
      result = (_QWORD *)sub_1BAC7A388(0, v39 & ~(v39 >> 63), 0);
      if (v39 < 0)
        break;
      v41 = 0;
      v42 = v146;
      v43 = 2 * v133;
      v119 = v131 + 3 * v133;
      v120 = v38 & 0xC000000000000001;
      v118 = xmmword_1BB87FC80;
      v44 = MEMORY[0x1E0DEA968];
      v116 = xmmword_1BB88A7F0;
      v115 = xmmword_1BB88A800;
      v117 = v38;
      v121 = 2 * v133;
      v122 = v39;
      while (v39 != v41)
      {
        v135 = v42;
        v136 = v41;
        if (v120)
        {
          v45 = (char *)MEMORY[0x1BCCE4630](v41, v38);
        }
        else
        {
          v45 = *(char **)(v38 + 8 * v41 + 32);
          swift_retain();
        }
        v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v118;
        v134 = v46;
        v47 = (_QWORD *)(v46 + v131);
        v48 = *((_QWORD *)v45 + 2);
        v49 = *((_QWORD *)v45 + 3);
        sub_1BA993F8C(v48, v49);
        sub_1BAAF9A70(0x20746E65746E6F43, 0xEC00000065707954, v48, v49, v47);
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v139)(v47, 0, 1, v34);
        v50 = (char *)v47 + v133;
        v51 = *((_QWORD *)v45 + 5);
        *(_QWORD *)&v145 = *((_QWORD *)v45 + 4);
        *((_QWORD *)&v145 + 1) = v51;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        v52 = v34;
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          v53 = &v50[*(int *)(v34 + 24)];
          *(_QWORD *)v53 = v140;
          v54 = v138;
          swift_storeEnumTagMultiPayload();
          v137(v53, 0, 1, v54);
          *(_OWORD *)v50 = v116;
          *((_QWORD *)v50 + 2) = 0;
          *((_QWORD *)v50 + 3) = 0;
          v55 = &v50[*(int *)(v34 + 28)];
          *(_QWORD *)v55 = 0;
          *((_QWORD *)v55 + 1) = 0;
          v55[16] = -1;
        }
        else
        {
          *((_QWORD *)&v141 + 1) = v44;
          v142 = (_UNKNOWN **)MEMORY[0x1E0DEA9D8];
          v140 = v145;
          sub_1BA4CECCC(&v140, (uint64_t)v144);
          v56 = __swift_project_boxed_opaque_existential_1(v144, v144[3]);
          v57 = *v56;
          v58 = v56[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v59 = (uint64_t)v113;
          *v113 = v57;
          *(_QWORD *)(v59 + 8) = v58;
          v60 = v138;
          swift_storeEnumTagMultiPayload();
          v137((char *)v59, 0, 1, v60);
          *(_OWORD *)v50 = v116;
          *((_QWORD *)v50 + 2) = 0;
          *((_QWORD *)v50 + 3) = 0;
          sub_1BA993F9C(v59, (uint64_t)&v50[*(int *)(v52 + 24)]);
          v61 = &v50[*(int *)(v52 + 28)];
          *(_QWORD *)v61 = 0;
          *((_QWORD *)v61 + 1) = 0;
          v61[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
        }
        v62 = v52;
        v64 = v123;
        v63 = v124;
        swift_bridgeObjectRelease();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v139)(v50, 0, 1, v52);
        v65 = (char *)v47 + v43;
        v66 = (void (*)(char *, uint64_t, uint64_t))v126;
        v126((char *)v64, &v45[OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url], v63);
        v125(v64, 0, 1, v63);
        v67 = v129;
        sub_1BA7E8428(v64, v129);
        v68 = v62;
        v69 = v130;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v67, 1, v63) == 1)
        {
          sub_1BA5C699C(v64, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v137(&v65[*(int *)(v68 + 24)], 1, 1, v138);
          *(_OWORD *)v65 = v115;
          *((_QWORD *)v65 + 2) = 0;
          *((_QWORD *)v65 + 3) = 0;
          v70 = &v65[*(int *)(v68 + 28)];
          *(_QWORD *)v70 = 0;
          *((_QWORD *)v70 + 1) = 0;
          v70[16] = -1;
        }
        else
        {
          v71 = v66;
          v72 = v114;
          v71(v114, v67, v63);
          sub_1BA5C699C(v64, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v73 = v67;
          v74 = &v65[*(int *)(v68 + 24)];
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v74, v72, v63);
          v75 = v138;
          swift_storeEnumTagMultiPayload();
          v137(v74, 0, 1, v75);
          *(_OWORD *)v65 = v115;
          *((_QWORD *)v65 + 2) = 0;
          *((_QWORD *)v65 + 3) = 0;
          v76 = &v65[*(int *)(v68 + 28)];
          *(_QWORD *)v76 = 0;
          *((_QWORD *)v76 + 1) = 0;
          v76[16] = -1;
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v73, v63);
        }
        v38 = v117;
        v34 = v68;
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v139)(v65, 0, 1, v68);
        sub_1BAF89090(0, 0xE000000000000000, 0, 0, v134, v147);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((_QWORD *)&v141 + 1) = &type metadata for FormatInspectionGroup;
        v142 = &off_1E72D2F60;
        v77 = swift_allocObject();
        *(_QWORD *)&v140 = v77;
        swift_release();
        *(_QWORD *)(v77 + 48) = v148;
        v78 = v147[1];
        *(_OWORD *)(v77 + 16) = v147[0];
        *(_OWORD *)(v77 + 32) = v78;
        v79 = v136;
        v146 = v135;
        v81 = *(_QWORD *)(v135 + 16);
        v80 = *(_QWORD *)(v135 + 24);
        if (v81 >= v80 >> 1)
          sub_1BAC7A388(v80 > 1, v81 + 1, 1);
        v41 = v79 + 1;
        v82 = *((_QWORD *)&v141 + 1);
        v83 = (uint64_t)v142;
        v84 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v140, *((uint64_t *)&v141 + 1));
        v29 = &v108;
        v85 = MEMORY[0x1E0C80A78](v84);
        v87 = (char *)&v108 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v88 + 16))(v87, v85);
        sub_1BA6AC628(v81, (uint64_t)v87, &v146, v82, v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
        v42 = v146;
        v43 = v121;
        v39 = v122;
        v44 = MEMORY[0x1E0DEA968];
        if (v122 == v41)
        {
          swift_bridgeObjectRelease();
          v29 = v110;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v39 = sub_1BB873F30();
      v110 = v29;
      if (!v39)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v43 = 2 * v133;
    v42 = MEMORY[0x1E0DEE9D8];
LABEL_24:
    v89 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v139;
    v137 = (void (*)(char *, _QWORD, uint64_t, uint64_t))(inited + 32);
    v90 = (_QWORD *)((char *)v111 + v43);
    v91 = sub_1BA9747FC(v42);
    swift_bridgeObjectRelease();
    v92 = sub_1BB6DF010(v91);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x756F532061746144, 0xEC00000073656372, (uint64_t)v92, 0, 0, v90);
    v138 = v34;
    v89(v90, 0, 1, v34);
    v94 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
    v93 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 8);
    v95 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 16);
    v96 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 24);
    v98 = *(_UNKNOWN ***)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 32);
    v97 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 40);
    if (v93)
    {
      swift_bridgeObjectRetain();
      v136 = v94;
    }
    else
    {
      v136 = 0;
    }
    v99 = (_QWORD *)((char *)v111 + 3 * v133);
    sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v100 = swift_initStackObject();
    *(_OWORD *)(v100 + 16) = v108;
    *(_QWORD *)&v140 = v94;
    *((_QWORD *)&v140 + 1) = v93;
    *(_QWORD *)&v141 = v95;
    *((_QWORD *)&v141 + 1) = v96;
    v142 = v98;
    v143 = v97;
    v101 = sub_1BB0FD744((uint64_t *)&v140);
    *(_QWORD *)(v100 + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(v100 + 64) = &off_1E7335C38;
    *(_QWORD *)(v100 + 32) = v101;
    v102 = sub_1BA9747FC(v100);
    swift_setDeallocating();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
    swift_arrayDestroy();
    v103 = sub_1BB6DF010(v102);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x6769666E6F43, 0xE600000000000000, (uint64_t)v103, v136, v93, v99);
    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v139)(v99, 0, 1, v138);
    sub_1BAF89090(0x6F635320656E694CLL, 0xEA00000000006572, 0, 0, v109, &v140);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v104 = inited;
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v104 + 64) = &off_1E72D2F60;
    v105 = swift_allocObject();
    *(_QWORD *)(v104 + 32) = v105;
    *(_QWORD *)(v105 + 48) = v142;
    v106 = v141;
    *(_OWORD *)(v105 + 16) = v140;
    *(_OWORD *)(v105 + 32) = v106;
    v107 = sub_1BB6DF010(v104);
    swift_setDeallocating();
    sub_1BA67D978(0, &qword_1EF2ABC80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    swift_release();
    return v107;
  }
  return result;
}

uint64_t sub_1BA993900(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BA99395C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3BA8)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3CF9B0);
    v0 = sub_1BB86ED40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3BA8);
  }
}

unint64_t sub_1BA9939C0()
{
  unint64_t result;

  result = qword_1EF2AC030;
  if (!qword_1EF2AC030)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A79C, &type metadata for SportsLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC030);
  }
  return result;
}

unint64_t sub_1BA993A04()
{
  unint64_t result;

  result = qword_1EF2AC040;
  if (!qword_1EF2AC040)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEventRoster, &type metadata for SportsEventRoster);
    atomic_store(result, (unint64_t *)&qword_1EF2AC040);
  }
  return result;
}

unint64_t sub_1BA993A48()
{
  unint64_t result;

  result = qword_1ED3A0FE0;
  if (!qword_1ED3A0FE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationConfig, &type metadata for SportsDataVisualizationConfig);
    atomic_store(result, (unint64_t *)&qword_1ED3A0FE0);
  }
  return result;
}

void sub_1BA993A8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA9939C0();
    v7 = a3(a1, &type metadata for SportsLineScoreDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA993AEC()
{
  return 8;
}

_QWORD *sub_1BA993AF8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BA993B04(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA993B9C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4CF8F4(255, a2);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA993C00()
{
  unint64_t result;

  result = qword_1EF2AC060;
  if (!qword_1EF2AC060)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEventRoster, &type metadata for SportsEventRoster);
    atomic_store(result, (unint64_t *)&qword_1EF2AC060);
  }
  return result;
}

unint64_t sub_1BA993C44()
{
  unint64_t result;

  result = qword_1ED3A2D00;
  if (!qword_1ED3A2D00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationConfig, &type metadata for SportsDataVisualizationConfig);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D00);
  }
  return result;
}

uint64_t sub_1BA993C88()
{
  return type metadata accessor for SportsLineScoreDataVisualization();
}

uint64_t type metadata accessor for SportsLineScoreDataVisualization()
{
  uint64_t result;

  result = qword_1ED3A9738;
  if (!qword_1ED3A9738)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA993CCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SportsLineScoreDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsLineScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsLineScoreDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for SportsLineScoreDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA993DEC + 4 * byte_1BB88A505[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA993E20 + 4 * byte_1BB88A500[v4]))();
}

uint64_t sub_1BA993E20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA993E28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA993E30);
  return result;
}

uint64_t sub_1BA993E3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA993E44);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA993E48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA993E50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsLineScoreDataVisualization.CodingKeys()
{
  return &type metadata for SportsLineScoreDataVisualization.CodingKeys;
}

unint64_t sub_1BA993E70()
{
  unint64_t result;

  result = qword_1EF2AC080;
  if (!qword_1EF2AC080)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A774, &type metadata for SportsLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC080);
  }
  return result;
}

unint64_t sub_1BA993EB8()
{
  unint64_t result;

  result = qword_1EF2AC088;
  if (!qword_1EF2AC088)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A6AC, &type metadata for SportsLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC088);
  }
  return result;
}

unint64_t sub_1BA993F00()
{
  unint64_t result;

  result = qword_1EF2AC090;
  if (!qword_1EF2AC090)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88A6D4, &type metadata for SportsLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC090);
  }
  return result;
}

uint64_t sub_1BA993F44()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1BA993F8C(uint64_t a1, unint64_t a2)
{
  if (a2 != 4)
    return sub_1BA6EE1A4(a1, a2);
  return a1;
}

uint64_t sub_1BA993F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA993FF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static FormatLayoutViewRouterError.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatLayoutViewRouterError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatLayoutViewRouterError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA99409C()
{
  unint64_t result;

  result = qword_1EF2AC0A8;
  if (!qword_1EF2AC0A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayoutViewRouterError, &type metadata for FormatLayoutViewRouterError);
    atomic_store(result, (unint64_t *)&qword_1EF2AC0A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatLayoutViewRouterError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA994120 + 4 * byte_1BB88A810[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA994140 + 4 * byte_1BB88A815[v4]))();
}

_BYTE *sub_1BA994120(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA994140(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA994148(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA994150(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA994158(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA994160(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewRouterError()
{
  return &type metadata for FormatLayoutViewRouterError;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatIssueCoverNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatIssueCoverNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

unint64_t FormatIssueCoverNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatIssueCoverNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

void FormatIssueCoverNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

double FormatIssueCoverNodeLayoutAttributes.issueCoverViewLayoutAttributes.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 208);
  result = *(double *)(v1 + 216);
  v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 192);
  *(_QWORD *)(a1 + 48) = v2;
  *(double *)(a1 + 56) = result;
  return result;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA994284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t *a9, char a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v15 = *a7;
  v16 = *a9;
  v17 = *a11;
  v18 = *((_BYTE *)a11 + 8);
  v19 = *a14;
  v20 = a14[1];
  v21 = a14[2];
  v22 = a14[5];
  v23 = a14[6];
  v24 = a14[7];
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = a6;
  *(_QWORD *)(v14 + 64) = v19;
  *(_QWORD *)(v14 + 72) = v20;
  *(_QWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 104) = a8;
  *(_QWORD *)(v14 + 112) = v16;
  *(_BYTE *)(v14 + 120) = a10;
  *(_QWORD *)(v14 + 128) = v17;
  *(_BYTE *)(v14 + 136) = v18;
  *(_QWORD *)(v14 + 144) = a12;
  *(_QWORD *)(v14 + 152) = a13;
  *(_QWORD *)(v14 + 160) = v19;
  *(_QWORD *)(v14 + 168) = v20;
  *(_QWORD *)(v14 + 176) = v21;
  v25 = *(_OWORD *)(a14 + 3);
  *(_QWORD *)(v14 + 80) = v21;
  *(_QWORD *)(v14 + 88) = v25;
  *(_OWORD *)(v14 + 184) = v25;
  *(_QWORD *)(v14 + 200) = v22;
  *(_QWORD *)(v14 + 208) = v23;
  *(_QWORD *)(v14 + 216) = v24;
  *(_QWORD *)(v14 + 224) = MEMORY[0x1E0DEE9E8];
  return v14;
}

uint64_t sub_1BA994314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 152);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 184);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A5A4(0, v3, 0);
    v5 = 0;
    v4 = v10;
    v6 = *(_QWORD *)(v10 + 16);
    do
    {
      v7 = *(_BYTE *)(v2 + v5 + 32);
      v8 = *(_QWORD *)(v10 + 24);
      if (v6 + v5 >= v8 >> 1)
        sub_1BAC7A5A4(v8 > 1, v6 + v5 + 1, 1);
      *(_QWORD *)(v10 + 16) = v6 + v5 + 1;
      *(_BYTE *)(v10 + v6 + v5++ + 32) = v7;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1BA994424(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA99445C + 4 * aJ[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BA99445C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA994478()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BA99449C()
{
  return 0x656D617266;
}

uint64_t sub_1BA9944B0()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BA9944C8()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BA9944DC()
{
  return 0x696C696269736976;
}

unint64_t sub_1BA9944F4()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA994588()
{
  unsigned __int8 *v0;

  return sub_1BA994424(*v0);
}

uint64_t sub_1BA994590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA99570C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA9945B4(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1BA9945C0()
{
  sub_1BA994AFC();
  return sub_1BB874710();
}

uint64_t sub_1BA9945E8()
{
  sub_1BA994AFC();
  return sub_1BB87471C();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.__deallocating_deinit()
{
  FormatIssueCoverNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AC0B0, (uint64_t (*)(void))sub_1BA994AFC, (uint64_t)&type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA994AFC();
  sub_1BB8746C8();
  LOBYTE(v16) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1BB87417C();
    LOBYTE(v16) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v16 = *(_OWORD *)(v3 + 64);
    v17 = v10;
    v21 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 96);
    v21 = 4;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v16) = 5;
    sub_1BB8741A0();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 112);
    v21 = 6;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v16) = 7;
    sub_1BB874188();
    v11 = *(_BYTE *)(v3 + 136);
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 128);
    BYTE8(v16) = v11;
    v21 = 8;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 144);
    v21 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 152);
    v21 = 10;
    type metadata accessor for FormatIssueCoverNodeStyle();
    sub_1BA50AD30(&qword_1ED3A76E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
    sub_1BB87414C();
    v12 = *(_QWORD *)(v3 + 208);
    v13 = *(_QWORD *)(v3 + 216);
    v14 = *(_OWORD *)(v3 + 176);
    v16 = *(_OWORD *)(v3 + 160);
    v17 = v14;
    v18 = *(_OWORD *)(v3 + 192);
    v19 = v12;
    v20 = v13;
    v21 = 11;
    sub_1BA8D944C();
    sub_1BB8741AC();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 224);
    v21 = 12;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BA994AFC()
{
  unint64_t result;

  result = qword_1EF2AC0B8;
  if (!qword_1EF2AC0B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88ABBC, &type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC0B8);
  }
  return result;
}

unint64_t sub_1BA994B40()
{
  unint64_t result;

  result = qword_1EF2AC0C0;
  if (!qword_1EF2AC0C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizing, &type metadata for FormatResizing);
    atomic_store(result, (unint64_t *)&qword_1EF2AC0C0);
  }
  return result;
}

unint64_t sub_1BA994B84()
{
  unint64_t result;

  result = qword_1EF2AC0E0;
  if (!qword_1EF2AC0E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAuxiliaryViewRequirement, &type metadata for FormatAuxiliaryViewRequirement);
    atomic_store(result, (unint64_t *)&qword_1EF2AC0E0);
  }
  return result;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatIssueCoverNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_1BA4CDF6C(0, &qword_1EF2AC0E8, (uint64_t (*)(void))sub_1BA994AFC, (uint64_t)&type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v20 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA994AFC();
  v19 = v6;
  v7 = v21;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v17 = (uint64_t)a1;
  }
  else
  {
    v21 = a1;
    LOBYTE(v22) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v22) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v22) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v27 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v18 = 0;
    sub_1BB8740D4();
    v11 = v23;
    *(_OWORD *)(v1 + 64) = v22;
    *(_OWORD *)(v1 + 80) = v11;
    v27 = 4;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v22;
    LOBYTE(v22) = 5;
    *(_QWORD *)(v1 + 104) = sub_1BB8740C8();
    v27 = 6;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 112) = v22;
    LOBYTE(v22) = 7;
    *(_BYTE *)(v1 + 120) = sub_1BB8740A4() & 1;
    v27 = 8;
    sub_1BA650BA0();
    sub_1BB874068();
    v13 = BYTE8(v22);
    *(_QWORD *)(v1 + 128) = v22;
    *(_BYTE *)(v1 + 136) = v13;
    type metadata accessor for FormatContextLayoutOptions();
    v27 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 144) = v22;
    type metadata accessor for FormatIssueCoverNodeStyle();
    v27 = 10;
    sub_1BA50AD30(qword_1ED3A76E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
    sub_1BB874068();
    *(_QWORD *)(v1 + 152) = v22;
    v27 = 11;
    sub_1BA8D9404();
    sub_1BB8740D4();
    v14 = v25;
    v15 = v26;
    v16 = v23;
    *(_OWORD *)(v1 + 160) = v22;
    *(_OWORD *)(v1 + 176) = v16;
    *(_OWORD *)(v1 + 192) = v24;
    *(_QWORD *)(v1 + 208) = v14;
    *(_QWORD *)(v1 + 216) = v15;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v27 = 12;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v20);
    v17 = (uint64_t)v21;
    *(_QWORD *)(v1 + 224) = v22;
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v1;
}

unint64_t sub_1BA995268()
{
  unint64_t result;

  result = qword_1EF2AC0F0;
  if (!qword_1EF2AC0F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizing, &type metadata for FormatResizing);
    atomic_store(result, (unint64_t *)&qword_1EF2AC0F0);
  }
  return result;
}

uint64_t sub_1BA9952AC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA995330()
{
  unint64_t result;

  result = qword_1EF2AC108;
  if (!qword_1EF2AC108)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAuxiliaryViewRequirement, &type metadata for FormatAuxiliaryViewRequirement);
    atomic_store(result, (unint64_t *)&qword_1EF2AC108);
  }
  return result;
}

uint64_t sub_1BA995374(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AC110, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatIssueCoverNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BA9953C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA9953CC(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AC118, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t sub_1BA9953F8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AC120, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t sub_1BA995424(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AC128, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t sub_1BA995450@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatIssueCoverNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA9954A4(_QWORD *a1)
{
  return FormatIssueCoverNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BA9954C4(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2AC250, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatIssueCoverNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatIssueCoverNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t storeEnumTagSinglePayload for FormatIssueCoverNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BA9955B4 + 4 * byte_1BB88A902[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BA9955E8 + 4 * byte_1BB88A8FD[v4]))();
}

uint64_t sub_1BA9955E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA9955F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA9955F8);
  return result;
}

uint64_t sub_1BA995604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA99560CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BA995610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA995618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueCoverNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BA995638()
{
  unint64_t result;

  result = qword_1EF2AC238;
  if (!qword_1EF2AC238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88AB94, &type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC238);
  }
  return result;
}

unint64_t sub_1BA995680()
{
  unint64_t result;

  result = qword_1EF2AC240;
  if (!qword_1EF2AC240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88AB04, &type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC240);
  }
  return result;
}

unint64_t sub_1BA9956C8()
{
  unint64_t result;

  result = qword_1EF2AC248;
  if (!qword_1EF2AC248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88AB2C, &type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC248);
  }
  return result;
}

uint64_t sub_1BA99570C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001BB965950 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void FormatTextAdjustmentMetric.metric.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatTextAdjustmentMetric.style.getter()
{
  return swift_retain();
}

void FormatTextAdjustmentMetric.adjustment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

BOOL static FormatFontMetric.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BA995C5C(_QWORD *a1)
{
  return FormatTextAdjustmentMetric.encode(to:)(a1);
}

uint64_t FormatFontMetric.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t sub_1BA995CA0(_QWORD *a1)
{
  return FormatFontMetric.encode(to:)(a1);
}

BOOL FormatFontMetricAdjustment.isAdd.getter()
{
  _BYTE *v0;

  return (*v0 & 1) == 0;
}

uint64_t sub_1BA995CC8(_QWORD *a1)
{
  return FormatFontMetricAdjustment.encode(to:)(a1);
}

uint64_t _s8NewsFeed26FormatTextAdjustmentMetricV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3;
  int v4;

  if (*a1 != *a2)
    return 0;
  v3 = a1[16];
  v4 = a2[16];
  if ((_s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1)) & 1) != 0)
    return v3 ^ v4 ^ 1u;
  else
    return 0;
}

unint64_t sub_1BA995D30(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA995D54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA995D54()
{
  unint64_t result;

  result = qword_1EF2AC258;
  if (!qword_1EF2AC258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentMetric, &type metadata for FormatTextAdjustmentMetric);
    atomic_store(result, (unint64_t *)&qword_1EF2AC258);
  }
  return result;
}

uint64_t sub_1BA995D98(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA636740, (uint64_t (*)(void))sub_1BA995DB4, (uint64_t (*)(void))sub_1BA995DF8);
}

unint64_t sub_1BA995DB4()
{
  unint64_t result;

  result = qword_1ED3A04D0;
  if (!qword_1ED3A04D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentMetric, &type metadata for FormatTextAdjustmentMetric);
    atomic_store(result, (unint64_t *)&qword_1ED3A04D0);
  }
  return result;
}

unint64_t sub_1BA995DF8()
{
  unint64_t result;

  result = qword_1EF2AC260;
  if (!qword_1EF2AC260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentMetric, &type metadata for FormatTextAdjustmentMetric);
    atomic_store(result, (unint64_t *)&qword_1EF2AC260);
  }
  return result;
}

unint64_t sub_1BA995E40()
{
  unint64_t result;

  result = qword_1EF2AC268;
  if (!qword_1EF2AC268)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetric, &type metadata for FormatFontMetric);
    atomic_store(result, (unint64_t *)&qword_1EF2AC268);
  }
  return result;
}

unint64_t sub_1BA995E84(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA995EA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA995EA8()
{
  unint64_t result;

  result = qword_1EF2AC270;
  if (!qword_1EF2AC270)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetric, &type metadata for FormatFontMetric);
    atomic_store(result, (unint64_t *)&qword_1EF2AC270);
  }
  return result;
}

uint64_t sub_1BA995EEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA528644, (uint64_t (*)(void))sub_1BA995F08, (uint64_t (*)(void))sub_1BA995E40);
}

unint64_t sub_1BA995F08()
{
  unint64_t result;

  result = qword_1ED39FBB8;
  if (!qword_1ED39FBB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetric, &type metadata for FormatFontMetric);
    atomic_store(result, (unint64_t *)&qword_1ED39FBB8);
  }
  return result;
}

unint64_t sub_1BA995F50()
{
  unint64_t result;

  result = qword_1EF2AC278;
  if (!qword_1EF2AC278)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricAdjustment, &type metadata for FormatFontMetricAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2AC278);
  }
  return result;
}

unint64_t sub_1BA995F94(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA995FB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA995FB8()
{
  unint64_t result;

  result = qword_1EF2AC280;
  if (!qword_1EF2AC280)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricAdjustment, &type metadata for FormatFontMetricAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2AC280);
  }
  return result;
}

uint64_t sub_1BA995FFC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA528600, (uint64_t (*)(void))sub_1BA996018, (uint64_t (*)(void))sub_1BA995F50);
}

unint64_t sub_1BA996018()
{
  unint64_t result;

  result = qword_1ED3A04B0;
  if (!qword_1ED3A04B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricAdjustment, &type metadata for FormatFontMetricAdjustment);
    atomic_store(result, (unint64_t *)&qword_1ED3A04B0);
  }
  return result;
}

uint64_t destroy for FormatTextAdjustmentMetric()
{
  return swift_release();
}

uint64_t _s8NewsFeed26FormatTextAdjustmentMetricVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatTextAdjustmentMetric(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatTextAdjustmentMetric(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextAdjustmentMetric()
{
  return &type metadata for FormatTextAdjustmentMetric;
}

ValueMetadata *type metadata accessor for FormatFontMetric()
{
  return &type metadata for FormatFontMetric;
}

ValueMetadata *type metadata accessor for FormatFontMetricAdjustment()
{
  return &type metadata for FormatFontMetricAdjustment;
}

uint64_t FormatQueryParameter.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatQueryParameter.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t _s8NewsFeed20FormatQueryParameterV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  uint64_t result;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BB874398(), result = 0, (v5 & 1) != 0))
  {
    if (*(_QWORD *)(v2 + 16) == *(_QWORD *)(v3 + 16) && *(_QWORD *)(v2 + 24) == *(_QWORD *)(v3 + 24))
      return 1;
    else
      return sub_1BB874398();
  }
  return result;
}

unint64_t sub_1BA996230(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA996254();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA996254()
{
  unint64_t result;

  result = qword_1EF2AC288;
  if (!qword_1EF2AC288)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatQueryParameter, &type metadata for FormatQueryParameter);
    atomic_store(result, (unint64_t *)&qword_1EF2AC288);
  }
  return result;
}

unint64_t sub_1BA996298(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82CA18();
  a1[2] = sub_1BA82CA5C();
  result = sub_1BA9962CC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA9962CC()
{
  unint64_t result;

  result = qword_1EF2AC290;
  if (!qword_1EF2AC290)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatQueryParameter, &type metadata for FormatQueryParameter);
    atomic_store(result, (unint64_t *)&qword_1EF2AC290);
  }
  return result;
}

_QWORD *assignWithCopy for FormatQueryParameter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatQueryParameter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatQueryParameter()
{
  return &type metadata for FormatQueryParameter;
}

unint64_t FormatEquationOperator.rawValue.getter()
{
  _BYTE *v0;

  return 0x29282F2A2D2BuLL >> (8 * *v0);
}

unint64_t sub_1BA9963E8()
{
  unint64_t result;

  result = qword_1EF2AC298;
  if (!qword_1EF2AC298)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquationOperator, &type metadata for FormatEquationOperator);
    atomic_store(result, (unint64_t *)&qword_1EF2AC298);
  }
  return result;
}

uint64_t sub_1BA99642C()
{
  sub_1BB8745CC();
  sub_1BB8745E4();
  return sub_1BB874608();
}

uint64_t sub_1BA996480()
{
  return sub_1BB8745E4();
}

uint64_t sub_1BA9964BC()
{
  sub_1BB8745CC();
  sub_1BB8745E4();
  return sub_1BB874608();
}

NewsFeed::FormatEquationOperator_optional sub_1BA99650C(Swift::UInt8 *a1)
{
  return FormatEquationOperator.init(rawValue:)(*a1);
}

void sub_1BA996514(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 0x29282F2A2D2BuLL >> (8 * *v1);
}

uint64_t sub_1BA996534()
{
  sub_1BA996628();
  return sub_1BB872D84();
}

uint64_t sub_1BA996590()
{
  sub_1BA996628();
  return sub_1BB872D30();
}

BOOL sub_1BA9965DC(_BYTE *a1, _BYTE *a2)
{
  return (0x29282F2A2D2BuLL >> (8 * *a1)) == (0x29282F2A2D2BuLL >> (8 * *a2));
}

ValueMetadata *type metadata accessor for FormatEquationOperator()
{
  return &type metadata for FormatEquationOperator;
}

unint64_t sub_1BA996628()
{
  unint64_t result;

  result = qword_1EF2AC2A0;
  if (!qword_1EF2AC2A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquationOperator, &type metadata for FormatEquationOperator);
    atomic_store(result, (unint64_t *)&qword_1EF2AC2A0);
  }
  return result;
}

uint64_t static FormatCodingEmptyFileReferenceCollectionStrategy.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  type metadata accessor for FormatFileReference(0, a1, a2, a3);
  v5 = sub_1BB872E68();
  return FormatFileReferenceCollection.init(references:)(v5, a4);
}

BOOL static FormatCodingEmptyFileReferenceCollectionStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for FormatFileReference(255, a2, a3, a4);
  v4 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v4);
  return (sub_1BB873168() & 1) == 0;
}

uint64_t sub_1BA996728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  return static FormatCodingEmptyFileReferenceCollectionStrategy.defaultValue.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
}

BOOL sub_1BA996734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static FormatCodingEmptyFileReferenceCollectionStrategy.shouldEncode(wrappedValue:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_1BA996740(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyFileReferenceCollectionStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BA99676C()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BA99677C()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t type metadata accessor for FormatCodingEmptyFileReferenceCollectionStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCodingEmptyFileReferenceCollectionStrategy);
}

uint64_t static FormatCommandActionValue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v5 + 16) == v7 && *(_QWORD *)(v5 + 24) == v8;
  if (v9 || (v10 = sub_1BB874398(), v11 = 0, (v10 & 1) != 0))
  {
    v12 = type metadata accessor for FormatCommandActionValue.CaseValue(0, *(_QWORD *)(v3 + 80), v7, v8);
    v14 = a3;
    MEMORY[0x1BCCE5B24](&unk_1BB88B354, v12, &v14);
    if ((sub_1BB872EEC() & 1) != 0)
      v11 = sub_1BB872958();
    else
      v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1BA99688C()
{
  return sub_1BB872958() & 1;
}

uint64_t sub_1BA9968B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v15;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 16);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v6 == 1)
    {
      if (v9 == 1)
      {
        sub_1BA73B1B8(*(_QWORD *)a1, v5, 1);
        sub_1BA73B1B8(v7, v8, 1);
        if (((((v4 & 1) == 0) ^ v7) & 1) != 0)
          goto LABEL_19;
        return 0;
      }
    }
    else if (v9 == 2)
    {
      sub_1BA73B1B8(*(_QWORD *)a1, v5, 2);
      sub_1BA73B1B8(v7, v8, 2);
      if (v4 == v7)
        goto LABEL_19;
      return 0;
    }
LABEL_11:
    sub_1BA73B1CC(v7, v8, v9);
    sub_1BA73B1B8(v4, v5, v6);
    sub_1BA73B1B8(v7, v8, v9);
    return 0;
  }
  if (*(_BYTE *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  v13 = *(_QWORD *)a1;
  if (v4 == v7 && v5 == v8)
  {
    sub_1BA73B1CC(v13, v5, 0);
    sub_1BA73B1CC(v4, v5, 0);
    sub_1BA73B1B8(v4, v5, 0);
    sub_1BA73B1B8(v4, v5, 0);
  }
  else
  {
    v15 = sub_1BB874398();
    sub_1BA73B1CC(v4, v5, 0);
    sub_1BA73B1CC(v7, v8, 0);
    sub_1BA73B1B8(v4, v5, 0);
    sub_1BA73B1B8(v7, v8, 0);
    if ((v15 & 1) == 0)
      return 0;
  }
LABEL_19:
  type metadata accessor for FormatCommandActionValue.CaseValue(0, a3, v10, v11);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BA996AA0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static FormatCommandActionValue<A>.== infix(_:_:)(*a1, *a2, *(_QWORD *)(a4 - 8));
}

uint64_t method lookup function for FormatCommandActionValue()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA996ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 17) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) > 0x18)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    v11 = *(_QWORD *)a2;
    v12 = *(_QWORD *)(a2 + 8);
    v13 = *(_BYTE *)(a2 + 16);
    sub_1BA73B1CC(*(_QWORD *)a2, v12, v13);
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v12;
    *(_BYTE *)(a1 + 16) = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((a1 + v7 + 17) & ~v7, (a2 + v7 + 17) & ~v7, v5);
  }
  return a1;
}

uint64_t sub_1BA996BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_1BA73B1CC(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_1BA73B1B8(v9, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(unsigned __int8 *)(v12 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1BA996C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1BA996C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BA73B1B8(v7, v8, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((*(unsigned __int8 *)(v10 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(unsigned __int8 *)(v10 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1BA996CFC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFD)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 17) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFD)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 17) & ~v7);
      v15 = *(unsigned __int8 *)(a1 + 16);
      if (v15 > 2)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA996DD0 + 4 * byte_1BB88B240[(v9 - 1)]))();
}

void sub_1BA996E40(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFDu)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t *sub_1BA997044(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1BA9970B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1BA9970E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1BA997114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1BA997144(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA9971F4 + 4 * byte_1BB88B24E[(v7 - 1)]))();
}

void sub_1BA997244(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BA9973F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA9968B0(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_1BA997400()
{
  return sub_1BA99688C();
}

BOOL PuzzleLaunchAction.isFullScreenModal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8) != 0;
}

uint64_t getEnumTagSinglePayload for PuzzleLaunchAction(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PuzzleLaunchAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1BA9974C4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLaunchAction()
{
  return &type metadata for PuzzleLaunchAction;
}

uint64_t FormatRange.lowerBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatRange.upperBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t static FormatRange.== infix(_:_:)()
{
  if ((sub_1BB872958() & 1) != 0)
    type metadata accessor for FormatRange();
  return 0;
}

void type metadata accessor for FormatRange()
{
  JUMPOUT(0x1BCCE5A70);
}

void sub_1BA9975D0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for FormatRange();
}

uint64_t sub_1BA99762C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3 + *(int *)(a1 + 52), v2, v1);
}

void sub_1BA99765C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatRange.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BA99767C(uint64_t a1, uint64_t a2)
{
  FormatRange.encode(to:)(a1, a2);
}

uint64_t sub_1BA997690()
{
  return static FormatRange.== infix(_:_:)();
}

uint64_t FormatRange.closedRange.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v3 = v2;
  v35 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  v12 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v20((char *)&v32 - v18, v3, v5, v17);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v15, v3 + *(int *)(a1 + 52), v5);
  v21 = *(_QWORD *)(a1 + 32);
  result = sub_1BB872934();
  if ((result & 1) != 0)
  {
    v33 = v12;
    v34 = v21;
    v23 = TupleTypeMetadata2;
    v24 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
    v25 = v12;
    v26 = v35;
    v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v27(v11, v19, v5);
    v27(v24, v15, v5);
    v28 = &v8[*(int *)(v23 + 48)];
    ((void (*)(char *, char *, uint64_t))v20)(v8, v11, v5);
    ((void (*)(char *, char *, uint64_t))v20)(v28, v24, v5);
    v27(v26, v8, v5);
    v29 = *(void (**)(char *, uint64_t))(v33 + 8);
    v29(v28, v5);
    v30 = &v8[*(int *)(v23 + 48)];
    v27(v8, v11, v5);
    v27(v30, v24, v5);
    v31 = sub_1BB87294C();
    v27(&v26[*(int *)(v31 + 36)], v30, v5);
    return ((uint64_t (*)(char *, uint64_t))v29)(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA9978C8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRange<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA9978F4(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRange<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRange<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRange<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA99794C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BA9979B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, *(_QWORD *)(a3 + 16));
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_1BA997A6C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_1BA997AD4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1BA997B40(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1BA997BAC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1BA997C18(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1BA997C84(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA997D44 + 4 * byte_1BB88B3C0[(v7 - 1)]))();
}

void sub_1BA997D94(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

NewsFeed::SavingCommandState_optional __swiftcall SavingCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  NewsFeed::SavingCommandState_optional v2;

  v1 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = NewsFeed_SavingCommandState_notSaved;
  else
    v2.value = NewsFeed_SavingCommandState_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t SavingCommandState.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6465766153746F6ELL;
  else
    return 0x6465766173;
}

uint64_t sub_1BA997FD8(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6465766153746F6ELL;
  else
    v3 = 0x6465766173;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE800000000000000;
  if (*a2)
    v5 = 0x6465766153746F6ELL;
  else
    v5 = 0x6465766173;
  if (*a2)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BA99807C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA9980F8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA998150()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA9981C8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

BOOL SavingCommandState.isEligibleForTipPresentation.getter(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t static Commands.Saving.clear.getter()
{
  return sub_1BA499934(&qword_1ED3C4050);
}

uint64_t SaveCommandContext.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SaveCommandContext.origin.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t SaveCommandContext.origin.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 28)) = result;
  return result;
}

uint64_t (*SaveCommandContext.origin.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SaveCommandContext.init(data:origin:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  v9 = *(int *)(type metadata accessor for SaveCommandContext(0, a3, a3, a4) + 28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1, a3);
  *(_BYTE *)(a5 + v9) = a2;
  return result;
}

uint64_t static UIActivityType.save.getter()
{
  return sub_1BB872970();
}

uint64_t static ContextMenuItem.save(headline:commandOrigin:)()
{
  return sub_1BA9990C4();
}

uint64_t sub_1BA998318(_BYTE *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;

  if ((*a1 & 1) != 0)
  {
    v1 = (void *)objc_opt_self();
    v2 = objc_msgSend(v1, sel_mainBundle);
    v3 = objc_msgSend(v2, sel_bundleIdentifier);

    if (v3)
    {
      v4 = sub_1BB8729A0();
      v6 = v5;

      if (v4 == 0x6C7070612E6D6F63 && v6 == 0xEE007377656E2E65)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BB874398();
        swift_bridgeObjectRelease();
      }
    }
    type metadata accessor for Localized();
    v9 = objc_msgSend(v1, sel_bundleForClass_, swift_getObjCClassFromMetadata());
  }
  else
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  }
  v10 = sub_1BB86C340();

  return v10;
}

id sub_1BA9985C0(_BYTE *a1)
{
  uint64_t *v1;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3BB478 != -1)
      swift_once();
    v1 = &qword_1ED3B02E8;
  }
  else
  {
    if (qword_1EF2A7260 != -1)
      swift_once();
    v1 = &qword_1EF2C4740;
  }
  return (id)*v1;
}

uint64_t static SwipeAction.save(headline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;

  v17 = a2;
  v3 = sub_1BB86F628();
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86F634();
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9992BC();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA9994D8(0, (unint64_t *)&unk_1ED39A740, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA9994D8(0, &qword_1ED39A738, MEMORY[0x1E0DB8310]);
  MEMORY[0x1E0C80A78](v11);
  if (qword_1ED3BA8C8 != -1)
    swift_once();
  v21 = a1;
  v22 = 2;
  v20 = 1;
  sub_1BA67B824();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB870000();
  v19 = 1;
  sub_1BB870018();
  v18 = 1;
  sub_1BB870048();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6BB0], v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v5, *MEMORY[0x1E0DB6BA0], v16);
  return sub_1BB86F64C();
}

id sub_1BA9988DC()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
}

uint64_t sub_1BA998908(_BYTE *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3BB478 != -1)
      swift_once();
    v1 = (void *)qword_1ED3B02E8;
    v2 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  }
  else
  {
    if (qword_1EF2A7260 != -1)
      swift_once();
    v1 = (void *)qword_1EF2C4740;
    v2 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  }
  v3 = v2;
  v4 = _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v1, v3);

  return v4;
}

uint64_t sub_1BA9989EC(_BYTE *a1)
{
  uint64_t *v1;
  id v2;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3BB478 != -1)
      swift_once();
    v1 = &qword_1ED3B02E8;
  }
  else
  {
    if (qword_1EF2A7260 != -1)
      swift_once();
    v1 = &qword_1EF2C4740;
  }
  v2 = (id)*v1;
  return sub_1BB8703D8();
}

uint64_t static KeyCommandItem.save(headline:)()
{
  uint64_t v0;

  sub_1BA9992BC();
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED3BA8C8 != -1)
    swift_once();
  sub_1BA67B824();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB870048();
  return sub_1BB86F964();
}

void sub_1BA998BD0(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((*a1 & 1) != 0)
  {
    v3 = (void *)objc_opt_self();
    v4 = objc_msgSend(v3, sel_mainBundle);
    v5 = objc_msgSend(v4, sel_bundleIdentifier);

    if (v5)
    {
      v6 = sub_1BB8729A0();
      v8 = v7;

      if (v6 == 0x6C7070612E6D6F63 && v8 == 0xEE007377656E2E65)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BB874398();
        swift_bridgeObjectRelease();
      }
    }
    type metadata accessor for Localized();
    v11 = objc_msgSend(v3, sel_bundleForClass_, swift_getObjCClassFromMetadata());
  }
  else
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  }
  v12 = sub_1BB86C340();
  v14 = v13;

  *a2 = v12;
  a2[1] = v14;
}

BOOL static SaveCommandOrigin.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t SaveCommandOrigin.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SaveCommandOrigin.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

NewsFeed::SaveCommandOrigin_optional __swiftcall SaveCommandOrigin.init(shareContext:)(NewsFeed::CommandShareContext shareContext)
{
  return (NewsFeed::SaveCommandOrigin_optional)(0x2000201u >> (8 * *(_BYTE *)shareContext));
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE4save8headlineACSo19FCHeadlineProviding_p_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA999470();
  MEMORY[0x1E0C80A78](v0);
  sub_1BA9992BC();
  MEMORY[0x1E0C80A78](v1);
  if (qword_1ED3BA8C8 != -1)
    swift_once();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB872970();
  sub_1BA67B824();
  sub_1BB870048();
  sub_1BB8703E4();
  sub_1BB870048();
  sub_1BB86FCA0();
  swift_allocObject();
  return sub_1BB86FC88();
}

uint64_t sub_1BA9990C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA9994D8(0, &qword_1EF2AC3A0, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v0);
  sub_1BA9994D8(0, (unint64_t *)&unk_1ED39A740, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA9994D8(0, qword_1EF2AC3A8, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED3BA8C8 != -1)
    swift_once();
  sub_1BA67B824();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB870030();
  sub_1BB870018();
  sub_1BB870348();
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB2C();
}

void sub_1BA9992BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A750)
  {
    sub_1BA67B824();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A750);
  }
}

unint64_t sub_1BA999324()
{
  unint64_t result;

  result = qword_1EF2AC388;
  if (!qword_1EF2AC388)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SaveCommandOrigin, &type metadata for SaveCommandOrigin);
    atomic_store(result, (unint64_t *)&qword_1EF2AC388);
  }
  return result;
}

ValueMetadata *type metadata accessor for SavingCommandState()
{
  return &type metadata for SavingCommandState;
}

ValueMetadata *type metadata accessor for Commands.Saving()
{
  return &type metadata for Commands.Saving;
}

uint64_t sub_1BA999388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_1BA9993D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_1BA999418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

ValueMetadata *type metadata accessor for SaveCommandOrigin()
{
  return &type metadata for SaveCommandOrigin;
}

void sub_1BA999470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AC398)
  {
    sub_1BB8703E4();
    sub_1BA67B824();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AC398);
  }
}

void sub_1BA9994D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA67B824();
    v7 = a3(a1, &type metadata for SavingCommandState, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA999534()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;

  v2 = v0[2];
  v1 = v0[3];
  sub_1BB80CC38(v0[4], v2, v1);
  if ((v1 & 0x1000000000000000) != 0)
    return sub_1BB873CA8();
  if ((v1 & 0x2000000000000000) == 0 && (v2 & 0x1000000000000000) == 0)
    sub_1BB873D80();
  return sub_1BB873D8C();
}

unint64_t sub_1BA9995EC(unint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  _QWORD v15[2];

  if ((result & 0x8000000000000000) != 0)
  {
LABEL_39:
    __break(1u);
    return result;
  }
  v2 = result;
  if (result)
  {
    v3 = v1[2];
    v4 = v1[3];
    if ((v4 & 0x2000000000000000) != 0)
      v5 = HIBYTE(v4) & 0xF;
    else
      v5 = v3 & 0xFFFFFFFFFFFFLL;
    v6 = (v3 >> 59) & 1;
    if ((v4 & 0x1000000000000000) == 0)
      LOBYTE(v6) = 1;
    v7 = 4 << v6;
    while (v2)
    {
      v8 = v1[4];
      if (4 * v5 <= v8 >> 14)
        return result;
      if ((v1[4] & 0xCLL) == v7 || (v1[4] & 1) == 0)
      {
        if ((v1[4] & 0xCLL) == v7)
        {
          result = sub_1BB80CBC0(v1[4], v3, v4);
          v8 = result;
          if (v5 <= result >> 16)
            goto LABEL_38;
        }
        else if (v5 <= v8 >> 16)
        {
          goto LABEL_38;
        }
        if ((v8 & 1) == 0)
          v8 = v8 & 0xC | sub_1BB80CD40(v8, v3, v4) & 0xFFFFFFFFFFFFFFF3 | 1;
      }
      else if (v5 <= v8 >> 16)
      {
        goto LABEL_37;
      }
      if ((v4 & 0x1000000000000000) != 0)
      {
        result = sub_1BB872A54();
      }
      else
      {
        v10 = v8 >> 16;
        if ((v4 & 0x2000000000000000) != 0)
        {
          v15[0] = v3;
          v15[1] = v4 & 0xFFFFFFFFFFFFFFLL;
          v12 = *((unsigned __int8 *)v15 + v10);
        }
        else
        {
          v11 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((v3 & 0x1000000000000000) == 0)
            v11 = sub_1BB873D80();
          v12 = *(unsigned __int8 *)(v11 + v10);
        }
        v13 = (char)v12;
        v14 = __clz(v12 ^ 0xFF) - 24;
        if (v13 >= 0)
          LOBYTE(v14) = 1;
        result = ((v10 + v14) << 16) | 5;
      }
      v1[4] = result;
      if (!--v2)
        return result;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_1BA9997A4(unint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  int v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  v29 = v3;
  if (!v3)
    return 1;
  v5 = v2[2];
  v6 = v2[3];
  v7 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v6) & 0xF;
  v8 = v2[4];
  v28 = a2 & 0xFFFFFFFFFFFFFFLL;
  v33 = v7;
  v31 = 4 * v7;
  v9 = (v5 >> 59) & 1;
  if ((v6 & 0x1000000000000000) == 0)
    LOBYTE(v9) = 1;
  v10 = 4 << v9;
  swift_bridgeObjectRetain();
  v11 = 0;
  v30 = v10;
  while (1)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      v12 = sub_1BB873CA8();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v34 = a1;
        v35 = v28;
      }
      else if ((a1 & 0x1000000000000000) == 0)
      {
        sub_1BB873D80();
      }
      v12 = sub_1BB873D8C();
    }
    v14 = v12;
    v15 = v13;
    if (v31 <= v8 >> 14)
    {
LABEL_57:
      v26 = 0;
LABEL_58:
      swift_bridgeObjectRelease();
      return v26;
    }
    v16 = v8 & 0xC;
    v17 = (v8 & 1) == 0 || v16 == v10;
    v18 = v17;
    if (!v17)
    {
      if (v8 >> 16 >= v33)
        goto LABEL_62;
      goto LABEL_33;
    }
    v19 = v8;
    if (v16 == v10)
      v19 = sub_1BB80CBC0(v8, v5, v6);
    if (v19 >> 16 >= v33)
      break;
    if ((v19 & 1) == 0)
      sub_1BB80CD40(v19, v5, v6);
LABEL_33:
    if ((v6 & 0x1000000000000000) != 0)
    {
      v20 = sub_1BB873CA8();
    }
    else
    {
      if ((v6 & 0x2000000000000000) != 0)
      {
        v34 = v5;
        v35 = v6 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v5 & 0x1000000000000000) == 0)
      {
        sub_1BB873D80();
      }
      v20 = sub_1BB873D8C();
    }
    v10 = v30;
    if (v14 != v20)
      goto LABEL_57;
    if (v18)
    {
      if (v16 == v30)
        v8 = sub_1BB80CBC0(v8, v5, v6);
      if (v33 <= v8 >> 16)
        goto LABEL_63;
      if ((v8 & 1) == 0)
        v8 = v8 & 0xC | sub_1BB80CD40(v8, v5, v6) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    else if (v33 <= v8 >> 16)
    {
      goto LABEL_64;
    }
    if ((v6 & 0x1000000000000000) != 0)
    {
      v8 = sub_1BB872A54();
    }
    else
    {
      v21 = v8 >> 16;
      if ((v6 & 0x2000000000000000) != 0)
      {
        v34 = v5;
        v35 = v6 & 0xFFFFFFFFFFFFFFLL;
        v23 = *((unsigned __int8 *)&v34 + v21);
      }
      else
      {
        v22 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v5 & 0x1000000000000000) == 0)
          v22 = sub_1BB873D80();
        v23 = *(unsigned __int8 *)(v22 + v21);
      }
      v24 = (char)v23;
      v25 = __clz(v23 ^ 0xFF) - 24;
      if (v24 >= 0)
        LOBYTE(v25) = 1;
      v8 = ((v21 + v25) << 16) | 5;
    }
    v11 += v15;
    if (v11 >= v29)
    {
      v26 = 1;
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return 1;
}

uint64_t sub_1BA999AD8(unint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  BOOL v23;
  _BOOL4 v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v3 = v2;
  v4 = a2;
  v5 = a1;
  v7 = v2[2];
  v6 = v2[3];
  v8 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v8 = v7 & 0xFFFFFFFFFFFFLL;
  v52 = v8;
  v9 = v2[4];
  v45 = 4 * v8;
  if (4 * v8 > v9 >> 14)
  {
    v10 = 0;
    if ((a2 & 0x2000000000000000) != 0)
      v11 = HIBYTE(a2) & 0xF;
    else
      v11 = a1 & 0xFFFFFFFFFFFFLL;
    v12 = (v7 >> 59) & 1;
    v42 = a2 & 0xFFFFFFFFFFFFFFLL;
    if ((v6 & 0x1000000000000000) == 0)
      LOBYTE(v12) = 1;
    v48 = 4 << v12;
    v43 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    v44 = v6 & 0xFFFFFFFFFFFFFFLL;
    v13 = 0xE000000000000000;
    v46 = v7;
    v39 = v3;
    v49 = v6;
    while (2)
    {
      if (!v11)
        return 0;
      v40 = v10;
      v41 = v13;
      swift_bridgeObjectRetain();
      v14 = 0;
      while (1)
      {
        if ((v4 & 0x1000000000000000) != 0)
        {
          v16 = sub_1BB873CA8();
        }
        else
        {
          if ((v4 & 0x2000000000000000) != 0)
          {
            v50 = v5;
            v51 = v42;
          }
          else if ((v5 & 0x1000000000000000) == 0)
          {
            sub_1BB873D80();
          }
          v16 = sub_1BB873D8C();
        }
        v18 = v16;
        v19 = v49;
        if (v45 <= v9 >> 14)
        {
          swift_bridgeObjectRelease();
          sub_1BA84A600();
          swift_allocError();
          *(_QWORD *)v37 = v5;
          *(_QWORD *)(v37 + 8) = v4;
          *(_QWORD *)(v37 + 16) = 0;
          *(_BYTE *)(v37 + 24) = 10;
          return swift_willThrow();
        }
        v47 = v17;
        v20 = v4;
        v21 = v5;
        v22 = v9 & 0xC;
        v23 = (v9 & 1) == 0 || v22 == v48;
        v24 = v23;
        if (v23)
        {
          v25 = v9;
          if (v22 == v48)
          {
            v25 = sub_1BB80CBC0(v9, v7, v49);
            v19 = v49;
          }
          if (v25 >> 16 >= v52)
          {
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            return 0;
          }
          if ((v25 & 1) == 0)
          {
            sub_1BB80CD40(v25, v46, v49);
            v19 = v49;
          }
        }
        else if (v9 >> 16 >= v52)
        {
          goto LABEL_66;
        }
        if ((v19 & 0x1000000000000000) != 0)
        {
          v7 = v46;
          v26 = sub_1BB873CA8();
        }
        else if ((v19 & 0x2000000000000000) != 0)
        {
          v50 = v46;
          v51 = v44;
          v7 = v46;
          v26 = sub_1BB873D8C();
        }
        else
        {
          if ((v46 & 0x1000000000000000) == 0)
            sub_1BB873D80();
          v26 = sub_1BB873D8C();
          v7 = v46;
        }
        if (v26 != v18)
          break;
        if (v24)
        {
          v27 = v49;
          if (v22 == v48)
          {
            v34 = sub_1BB80CBC0(v9, v7, v49);
            v27 = v49;
            v9 = v34;
          }
          v5 = v21;
          v4 = v20;
          if (v52 <= v9 >> 16)
            goto LABEL_67;
          if ((v9 & 1) == 0)
          {
            v28 = sub_1BB80CD40(v9, v7, v49);
            v27 = v49;
            v9 = v9 & 0xC | v28 & 0xFFFFFFFFFFFFFFF3 | 1;
          }
        }
        else
        {
          v5 = v21;
          v4 = v20;
          v27 = v49;
          if (v52 <= v9 >> 16)
            goto LABEL_68;
        }
        if ((v27 & 0x1000000000000000) != 0)
        {
          v9 = sub_1BB872A54();
          v15 = v47;
        }
        else
        {
          v29 = v9 >> 16;
          if ((v27 & 0x2000000000000000) != 0)
          {
            v50 = v7;
            v51 = v44;
            v31 = *((unsigned __int8 *)&v50 + v29);
          }
          else
          {
            v30 = v43;
            if ((v7 & 0x1000000000000000) == 0)
              v30 = sub_1BB873D80();
            v31 = *(unsigned __int8 *)(v30 + v29);
          }
          v15 = v47;
          v32 = (char)v31;
          v33 = __clz(v31 ^ 0xFF) - 24;
          if (v32 >= 0)
            LOBYTE(v33) = 1;
          v9 = ((v29 + v33) << 16) | 5;
        }
        v14 += v15;
        if (v14 >= v11)
        {
          swift_bridgeObjectRelease();
          return v40;
        }
      }
      v4 = v20;
      swift_bridgeObjectRelease();
      sub_1BA999534();
      v50 = v40;
      v51 = v41;
      sub_1BB872A6C();
      v10 = v50;
      v35 = v51;
      sub_1BA9995EC(1uLL);
      v9 = v39[4];
      v13 = v35;
      v5 = v21;
      if (v45 > v9 >> 14)
        continue;
      break;
    }
  }
  swift_bridgeObjectRelease();
  sub_1BA84A600();
  swift_allocError();
  *(_QWORD *)v36 = v5;
  *(_QWORD *)(v36 + 8) = v4;
  *(_QWORD *)(v36 + 16) = 0;
  *(_BYTE *)(v36 + 24) = 10;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

unint64_t sub_1BA999F64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1[2];
  v4 = v1[3];
  if ((v4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v4) & 0xF;
  else
    v5 = v3 & 0xFFFFFFFFFFFFLL;
  result = v1[4];
  if (4 * v5 <= result >> 14)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    v11 = sub_1BB872B44();
    sub_1BA84A600();
    swift_allocError();
    *(_QWORD *)v12 = v11;
    *(_QWORD *)(v12 + 8) = a1;
    *(_QWORD *)(v12 + 16) = 0;
    *(_BYTE *)(v12 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v2;
  }
  v2 = 0;
  v7 = (v3 >> 59) & 1;
  if ((v4 & 0x1000000000000000) == 0)
    LOBYTE(v7) = 1;
  v8 = 4 << v7;
  while ((result & 0xC) != v8 && (result & 1) != 0)
  {
    if (result >> 16 >= v5)
      goto LABEL_46;
LABEL_21:
    if ((v4 & 0x1000000000000000) != 0)
    {
      v10 = sub_1BB873CA8();
    }
    else
    {
      if ((v4 & 0x2000000000000000) == 0 && (v3 & 0x1000000000000000) == 0)
        sub_1BB873D80();
      v10 = sub_1BB873D8C();
    }
    if (sub_1BAB0C9B4(v10, a1))
      return v2;
    result = v1[4];
    if ((result & 0xC) != v8 && (result & 1) != 0)
    {
      if (result >> 16 >= v5)
        goto LABEL_47;
LABEL_35:
      if ((v4 & 0x1000000000000000) == 0)
        goto LABEL_36;
      goto LABEL_8;
    }
    if ((result & 0xC) == v8)
      result = sub_1BB80CBC0(result, v3, v4);
    if (result >> 16 >= v5)
      goto LABEL_48;
    if ((result & 1) != 0)
      goto LABEL_35;
    sub_1BB80CD40(result, v3, v4);
    if ((v4 & 0x1000000000000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x2000000000000000) == 0 && (v3 & 0x1000000000000000) == 0)
        sub_1BB873D80();
      sub_1BB873D8C();
      goto LABEL_9;
    }
LABEL_8:
    sub_1BB873CA8();
LABEL_9:
    sub_1BB872A6C();
    sub_1BA9995EC(1uLL);
    result = v1[4];
    if (4 * v5 <= result >> 14)
      goto LABEL_43;
  }
  if ((result & 0xC) == v8)
    result = sub_1BB80CBC0(result, v3, v4);
  if (result >> 16 < v5)
  {
    if ((result & 1) == 0)
      sub_1BB80CD40(result, v3, v4);
    goto LABEL_21;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_1BA99A234()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;

  v1 = v0[2];
  v2 = v0[3];
  if ((v2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(v2) & 0xF;
  else
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  result = v0[4];
  if (4 * v3 <= result >> 14)
    return result;
  v5 = (v1 >> 59) & 1;
  if ((v2 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  v6 = 4 << v5;
  while ((result & 0xC) != v6 && (result & 1) != 0)
  {
    if (result >> 16 >= v3)
      goto LABEL_51;
LABEL_21:
    if ((v2 & 0x1000000000000000) != 0)
    {
      result = sub_1BB873CA8();
      if ((_DWORD)result != 32)
        return result;
    }
    else
    {
      if ((v2 & 0x2000000000000000) != 0)
      {
        v14 = v1;
        v15 = v2 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v1 & 0x1000000000000000) == 0)
      {
        sub_1BB873D80();
      }
      result = sub_1BB873D8C();
      if ((_DWORD)result != 32)
        return result;
    }
    v8 = v0[4];
    if ((v8 & 0xC) != v6 && (v8 & 1) != 0)
    {
      if (v3 <= v8 >> 16)
        goto LABEL_52;
LABEL_34:
      if ((v2 & 0x1000000000000000) == 0)
        goto LABEL_35;
      goto LABEL_8;
    }
    if ((v8 & 0xC) == v6)
    {
      result = sub_1BB80CBC0(v0[4], v1, v2);
      v8 = result;
      if (v3 <= result >> 16)
        goto LABEL_53;
    }
    else if (v3 <= v8 >> 16)
    {
      goto LABEL_53;
    }
    if ((v8 & 1) != 0)
      goto LABEL_34;
    v8 = v8 & 0xC | sub_1BB80CD40(v8, v1, v2) & 0xFFFFFFFFFFFFFFF3 | 1;
    if ((v2 & 0x1000000000000000) == 0)
    {
LABEL_35:
      v9 = v8 >> 16;
      if ((v2 & 0x2000000000000000) != 0)
      {
        v14 = v1;
        v15 = v2 & 0xFFFFFFFFFFFFFFLL;
        v11 = *((unsigned __int8 *)&v14 + v9);
      }
      else
      {
        v10 = (v2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v1 & 0x1000000000000000) == 0)
          v10 = sub_1BB873D80();
        v11 = *(unsigned __int8 *)(v10 + v9);
      }
      v12 = (char)v11;
      v13 = __clz(v11 ^ 0xFF) - 24;
      if (v12 >= 0)
        LOBYTE(v13) = 1;
      result = ((v9 + v13) << 16) | 5;
      goto LABEL_9;
    }
LABEL_8:
    result = sub_1BB872A54();
LABEL_9:
    v0[4] = result;
    if (4 * v3 <= result >> 14)
      return result;
  }
  if ((result & 0xC) == v6)
    result = sub_1BB80CBC0(result, v1, v2);
  if (result >> 16 < v3)
  {
    if ((result & 1) == 0)
      sub_1BB80CD40(result, v1, v2);
    goto LABEL_21;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1BA99A48C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDOMReader()
{
  return objc_opt_self();
}

uint64_t sub_1BA99A4DC()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1BA99A504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1BA99A544(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BA99A5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FeedRefreshStrategyCursorFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedRefreshStrategyCursorFactory);
}

uint64_t sub_1BA99A5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v30 = a6;
  v31 = a8;
  v27 = a7;
  v28 = a4;
  v29 = a5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v16 = (char *)&v26 - v15;
  v17 = *(_QWORD *)(a10 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v21, a1, a10, v19);
  if (a2)
  {
    v23 = *(void (**)(char *, uint64_t))(v17 + 8);
    swift_retain();
  }
  else
  {
    type metadata accessor for FeedCursorTracker(0, a10, a11, v22);
    (*(void (**)(uint64_t, uint64_t))(a11 + 48))(a10, a11);
    a2 = FeedCursorTracker.__allocating_init(context:)((uint64_t)v16);
    v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  }
  v23(v21, a10);
  v24 = v31(a1, v27, a2, a3, v28, v29, v30);
  swift_release();
  return v24;
}

id VideoLiveIcon.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *VideoLiveIcon.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t ObjCClassFromMetadata;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  double v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  objc_super v41;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v41.receiver = v12;
  v41.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v41, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v14, sel_setCornerRadius_, 10.0);

  v15 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v16 = (char *)v13;
  v17 = objc_msgSend(v15, sel_initWithRed_green_blue_alpha_, 1.0, 0.31372549, 0.4, 1.0);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  v18 = OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label;
  v19 = *(void **)&v16[OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label];
  objc_msgSend(v16, sel_addSubview_, v19);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = (void *)objc_opt_self();
  v22 = v19;
  v23 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB872A24();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setText_, v24, 0x80000001BB965AB0);

  v25 = *(void **)&v16[v18];
  v26 = (void *)objc_opt_self();
  v27 = v25;
  v28 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v27, sel_setTextColor_, v28);

  v29 = *(void **)&v16[v18];
  objc_msgSend(v29, sel_setTextAlignment_, 1);
  v30 = (void *)objc_opt_self();
  v31 = *MEMORY[0x1E0DC1448];
  v32 = v29;
  v33 = objc_msgSend(v30, sel_systemFontOfSize_weight_, 12.0, v31);
  v34 = objc_msgSend(v33, sel_fontDescriptor);
  v35 = objc_msgSend(v34, sel_fontDescriptorWithDesign_, *MEMORY[0x1E0DC13A8]);

  if (v35)
  {
    v36 = objc_msgSend(v30, sel_fontWithDescriptor_size_, v35, 12.0);

    v33 = v36;
  }
  objc_msgSend(v32, sel_setFont_, v33);

  v37 = *(id *)&v16[v18];
  v38 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v39 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setAccessibilityLabel_, v39, 0x80000001BB965AF0);

  return v16;
}

Swift::Void __swiftcall VideoLiveIcon.layoutSubviews()()
{
  char *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

id VideoLiveIcon.intrinsicContentSize.getter()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label);
  result = objc_msgSend(v1, sel_font);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_capHeight);

    return objc_msgSend(v1, sel_intrinsicContentSize);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id VideoLiveIcon.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VideoLiveIcon()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageResponse()
{
  return &type metadata for DebugFormatCreatePackageResponse;
}

uint64_t sub_1BA99AFF4(char *a1, char *a2)
{
  return sub_1BB7EEBCC(*a1, *a2);
}

uint64_t sub_1BA99B000()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA99B090()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA99B0FC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA99B188@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BA99B1E4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000010;
  if (*v1)
    v2 = 0x72635F73656C6966;
  v3 = 0x80000001BB95A0A0;
  if (*v1)
    v3 = 0xED00006465746165;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BA99B234()
{
  _BYTE *v0;

  if (*v0)
    return 0x72635F73656C6966;
  else
    return 0xD000000000000010;
}

uint64_t sub_1BA99B280@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA99B2E0()
{
  sub_1BA99B574();
  return sub_1BB874710();
}

uint64_t sub_1BA99B308()
{
  sub_1BA99B574();
  return sub_1BB87471C();
}

uint64_t sub_1BA99B330@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1BA99B35C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1BA99B35C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[32];

  sub_1BA99B51C();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA99B574();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    v8 = sub_1BB874098();
    sub_1BA6D249C();
    v10[15] = 1;
    sub_1BA6113B4();
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

void sub_1BA99B51C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AC438)
  {
    sub_1BA99B574();
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AC438);
  }
}

unint64_t sub_1BA99B574()
{
  unint64_t result;

  result = qword_1EF2AC440;
  if (!qword_1EF2AC440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88B8D8, &type metadata for DebugFormatCreatePackageResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC440);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatCreatePackageResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA99B604 + 4 * byte_1BB88B785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA99B638 + 4 * byte_1BB88B780[v4]))();
}

uint64_t sub_1BA99B638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA99B640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA99B648);
  return result;
}

uint64_t sub_1BA99B654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA99B65CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA99B660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA99B668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageResponse.CodingKeys()
{
  return &type metadata for DebugFormatCreatePackageResponse.CodingKeys;
}

unint64_t sub_1BA99B688()
{
  unint64_t result;

  result = qword_1EF2AC448;
  if (!qword_1EF2AC448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88B8B0, &type metadata for DebugFormatCreatePackageResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC448);
  }
  return result;
}

unint64_t sub_1BA99B6D0()
{
  unint64_t result;

  result = qword_1EF2AC450;
  if (!qword_1EF2AC450)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88B7E8, &type metadata for DebugFormatCreatePackageResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC450);
  }
  return result;
}

unint64_t sub_1BA99B718()
{
  unint64_t result;

  result = qword_1EF2AC458;
  if (!qword_1EF2AC458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88B810, &type metadata for DebugFormatCreatePackageResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC458);
  }
  return result;
}

uint64_t WebEmbedDatastoreFailures.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WebEmbedDatastoreFailures.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WebEmbedDatastoreFailures()
{
  return objc_opt_self();
}

uint64_t method lookup function for WebEmbedDatastoreFailures()
{
  return swift_lookUpClassMethod();
}

uint64_t ThumbnailProcessorRequest.assetHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ThumbnailProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

double ThumbnailProcessorRequest.thumbnailFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

double ThumbnailProcessorRequest.focalFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

double ThumbnailProcessorRequest.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

uint64_t ThumbnailProcessorRequest.roundedCorners.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

double ThumbnailProcessorRequest.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

uint64_t ThumbnailProcessorRequest.border.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA99B840(v1 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border, a1);
}

uint64_t sub_1BA99B840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ThumbnailProcessorRequest.__allocating_init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  double v43;
  double v44;
  _BYTE v45[24];
  uint64_t v46;
  uint64_t v47;

  v43 = a9;
  v44 = a10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v42 - v27;
  sub_1BA4C010C(a1, (uint64_t)v45);
  v29 = sub_1BB86F550();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = swift_allocObject();
  v31 = v46;
  v32 = v47;
  v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
  v34 = MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v42 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v37 + 16))(v36, v34);
  v40 = sub_1BA99BC80((uint64_t)v36, a2, (uint64_t)v28, v30, v31, v32, a3, a4, a5, a6, a7, a8, v43, v44, v38, v39, a17, a18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v40;
}

uint64_t ThumbnailProcessorRequest.__allocating_init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:border:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = *(_QWORD *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 32);
  v30 = __swift_mutable_project_boxed_opaque_existential_1(a1, v28);
  v33 = sub_1BA99C0A0(v30, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v18, v28, v29, v31, v32, a17, a18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v33;
}

uint64_t ThumbnailProcessorRequest.init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:border:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v39;
  double v40;

  v39 = a10;
  v40 = a11;
  v28 = *(_QWORD *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 32);
  v30 = __swift_mutable_project_boxed_opaque_existential_1(a1, v28);
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v39 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v34 + 16))(v33, v31);
  v37 = sub_1BA99BC80((uint64_t)v33, a2, a3, v18, v28, v29, a4, a5, a6, a7, a8, a9, v39, v40, v35, v36, a17, a18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v37;
}

uint64_t ThumbnailProcessorRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  sub_1BA4D5884(v0 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border);
  return v0;
}

uint64_t sub_1BA99BC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *boxed_opaque_existential_0;
  uint64_t inited;
  double v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  double v49;
  double v50;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62[5];

  v55 = a14;
  v54 = a10;
  v53 = a9;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v52 - v31;
  v62[3] = a5;
  v62[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v62);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_0, a1, a5);
  sub_1BA4C010C((uint64_t)v62, a4 + 24);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB8, (uint64_t (*)(uint64_t))sub_1BA81E240, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x69616E626D756874;
  *(_QWORD *)(inited + 40) = 0xE90000000000006CLL;
  sub_1BA4C010C((uint64_t)v62, inited + 48);
  *(_QWORD *)(a4 + 16) = sub_1BA739C1C(inited);
  *(double *)(a4 + 80) = a7;
  *(double *)(a4 + 88) = a8;
  *(double *)(a4 + 96) = a9;
  v35 = v54;
  *(double *)(a4 + 104) = v54;
  *(double *)(a4 + 112) = a11;
  *(double *)(a4 + 120) = a12;
  *(double *)(a4 + 128) = a13;
  *(double *)(a4 + 136) = v55;
  *(_QWORD *)(a4 + 144) = a17;
  *(double *)(a4 + 152) = *(double *)&a2;
  v36 = a4 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border;
  *(_QWORD *)(a4 + 160) = a18;
  sub_1BA99B840(a3, v36);
  v56 = 0.0;
  v57 = -2.68156159e154;
  sub_1BB873CB4();
  v60 = v56;
  v61 = v57;
  sub_1BB86FA84();
  sub_1BB872AFC(v37);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v38);
  v56 = a7;
  v57 = a8;
  v58 = v53;
  v59 = v35;
  type metadata accessor for CGRect(0);
  sub_1BB873E34();
  sub_1BB872AFC(v39);
  v56 = a11;
  v57 = a12;
  v58 = a13;
  v59 = v55;
  sub_1BB873E34();
  sub_1BB872AFC(v40);
  sub_1BB872FDC();
  sub_1BB872AFC(v41);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v42);
  v56 = *(double *)&a2;
  type metadata accessor for UIRectCorner(0);
  sub_1BB873E34();
  sub_1BB872AFC(v43);
  sub_1BB872FDC();
  sub_1BB872AFC(v44);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v45);
  sub_1BA99B840(a3, (uint64_t)v32);
  v46 = sub_1BB86F550();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v32, 1, v46) == 1)
  {
    sub_1BA4D5884((uint64_t)v32);
  }
  else
  {
    sub_1BB86F544();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v46);
  }
  sub_1BB872AFC(v48);
  swift_bridgeObjectRelease();
  v49 = v60;
  v50 = v61;
  sub_1BA4D5884(a3);
  *(double *)(a4 + 64) = v49;
  *(double *)(a4 + 72) = v50;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return a4;
}

uint64_t sub_1BA99C0A0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v36;
  double v37;

  v36 = a10;
  v37 = a11;
  v29 = *(_QWORD *)(a13 - 8);
  MEMORY[0x1E0C80A78](a1);
  v31 = (char *)&v36 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, a1, a13);
  return sub_1BA99BC80((uint64_t)v31, a2, a3, v32, a13, a14, a4, a5, a6, a7, a8, a9, v36, v37, v33, v34, a17, a18);
}

uint64_t sub_1BA99C1C0()
{
  return type metadata accessor for ThumbnailProcessorRequest();
}

uint64_t method lookup function for ThumbnailProcessorRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThumbnailProcessorRequest.__allocating_init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:border:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

id HeadlineView.mediaView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED3B3808);
}

id HeadlineView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id HeadlineView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1BA99C288(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s8NewsFeed12HeadlineViewC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

id HeadlineView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BA99C2E0(uint64_t a1)
{

}

Swift::Void __swiftcall HeadlineView.prepareForReuse()()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)(v0 + qword_1ED3B3818) + OBJC_IVAR____TtC8NewsFeed11DebugButton_onTap);

}

void sub_1BA99C3CC()
{
  HeadlineView.prepareForReuse()();
}

void sub_1BA99C3F0(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineView<A>, a1);
  JUMPOUT(0x1BCCE1E7CLL);
}

void sub_1BA99C424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D4478)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D4478);
  }
}

void _s8NewsFeed12HeadlineViewC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = qword_1ED3B3808;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = qword_1ED3B3810;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = qword_1ED3B3820;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = qword_1ED3B3830;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = qword_1ED3B3800;
  v6 = (objc_class *)sub_1BB87171C();
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(v6), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = qword_1ED3B3828;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = qword_1ED3B3818;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = qword_1ED3B37F8;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone(v6), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FeedModifierStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  FeedModifierStore.init()();
  return v0;
}

uint64_t FeedModifierStore.addPendingModifier(_:for:)()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E7DC();
  return swift_release();
}

uint64_t FeedModifierStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t FeedModifierStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedModifierStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedModifierStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_1BA99C760()
{
  return 0xD000000000000016;
}

uint64_t sub_1BA99C77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA99E2B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BA99C7A4()
{
  sub_1BA99E270();
  return sub_1BB874710();
}

uint64_t sub_1BA99C7CC()
{
  sub_1BA99E270();
  return sub_1BB87471C();
}

uint64_t sub_1BA99C7F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AC518, (uint64_t (*)(void))sub_1BA99E270, (uint64_t)&type metadata for FeedGroupSortOptionPersonalization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA99E270();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1BB874044();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v9 = v10;
  *(_BYTE *)(v9 + 8) = v12 & 1;
  return result;
}

uint64_t sub_1BA99C940(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1EF2AC528, (uint64_t (*)(void))sub_1BA99E270, (uint64_t)&type metadata for FeedGroupSortOptionPersonalization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA99E270();
  sub_1BB8746C8();
  sub_1BB874134();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BA99CA48()
{
  unint64_t result;

  result = qword_1ED3AC1A8;
  if (!qword_1ED3AC1A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BE5C, &type metadata for FeedGroupSortOptionPersonalization);
    atomic_store(result, (unint64_t *)&qword_1ED3AC1A8);
  }
  return result;
}

uint64_t FeedGroupSortOption.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  char v15;
  char v16;

  sub_1BA4CDF6C(0, &qword_1ED3AB5E8, (uint64_t (*)(void))sub_1BA83B328, (uint64_t)&type metadata for FeedGroupSortOption.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v13[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v13 - v5;
  v7 = *v1;
  v8 = *((unsigned __int8 *)v1 + 8);
  v9 = *((unsigned __int8 *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83B328();
  sub_1BB8746C8();
  if (v9 == 1)
  {
    if (v7 | v8)
    {
      if (v7 ^ 1 | v8)
        v10 = 2;
      else
        v10 = 1;
      LOBYTE(v14) = v10;
    }
    else
    {
      LOBYTE(v14) = 0;
    }
    v16 = 0;
    sub_1BA99CC58();
    goto LABEL_12;
  }
  LOBYTE(v14) = 3;
  v16 = 0;
  sub_1BA99CC58();
  v11 = v13[1];
  sub_1BB8741AC();
  if (!v11 && (v8 & 1) == 0)
  {
    v14 = v7;
    v15 = 0;
    v16 = 1;
    sub_1BA99CC9C();
LABEL_12:
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13[0] + 8))(v6, v4);
}

unint64_t sub_1BA99CC58()
{
  unint64_t result;

  result = qword_1ED3A4C18;
  if (!qword_1ED3A4C18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BE34, &type metadata for FeedGroupSortOption.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A4C18);
  }
  return result;
}

unint64_t sub_1BA99CC9C()
{
  unint64_t result;

  result = qword_1EF2AC500;
  if (!qword_1EF2AC500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BE0C, &type metadata for FeedGroupSortOptionPersonalization);
    atomic_store(result, (unint64_t *)&qword_1EF2AC500);
  }
  return result;
}

uint64_t sub_1BA99CCE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F2758(*a1, *a2);
}

uint64_t sub_1BA99CCEC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA99CD50()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA99CD88()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA99CDE8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BA99CE44(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1701869940;
  if (*v1)
    v2 = 1635017060;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BA99CE6C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA99CECC()
{
  sub_1BA83B328();
  return sub_1BB874710();
}

uint64_t sub_1BA99CEF4()
{
  sub_1BA83B328();
  return sub_1BB87471C();
}

void sub_1BA99CF1C(char *a1)
{
  sub_1BB805F20(*a1);
}

void sub_1BA99CF28()
{
  char *v0;

  sub_1BA8D24F4(*v0);
}

void sub_1BA99CF30()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA99CF64()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BA99CFDC(uint64_t a1)
{
  char *v1;

  sub_1BAB0B7DC(a1, *v1);
}

uint64_t sub_1BA99CFE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA99D00C + 4 * byte_1BB88BB68[*v0]))();
}

void sub_1BA99D00C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "chronological");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BA99D034(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001BB95A0E0;
}

void sub_1BA99D054(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E6F73726570;
  a1[1] = 0xEF6E6F6974617A69;
}

uint64_t sub_1BA99D07C()
{
  sub_1BA83B254();
  return sub_1BB872D0C();
}

uint64_t sub_1BA99D0CC(_QWORD *a1)
{
  return FeedGroupSortOption.encode(to:)(a1);
}

uint64_t (*sub_1BA99D0E4(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*result)(uint64_t);
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(double *)v2;
  v6 = *(unsigned __int8 *)(v2 + 8);
  if (*(_BYTE *)(v2 + 9) == 1)
  {
    if (*(_QWORD *)&v5 | v6)
    {
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = a1;
      *(_QWORD *)(v7 + 24) = a2;
      *(double *)(v7 + 32) = v5;
      *(_BYTE *)(v7 + 40) = v6;
      if (*(_QWORD *)&v5 ^ 1 | v6)
        result = sub_1BA99E36C;
      else
        result = sub_1BA99E39C;
      *(_BYTE *)(v7 + 41) = 1;
    }
    else
    {
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a1;
      *(_QWORD *)(v13 + 24) = a2;
      return sub_1BA99E3F8;
    }
  }
  else if ((v6 & 1) != 0)
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    *(_QWORD *)(v12 + 24) = a2;
    *(double *)(v12 + 32) = v5;
    *(_BYTE *)(v12 + 40) = v6;
    result = sub_1BA99E348;
    *(_BYTE *)(v12 + 41) = 0;
  }
  else
  {
    if (v5 >= 1.0 || v5 < 0.0)
      v10 = 0.0;
    else
      v10 = *(double *)v2;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = a2;
    *(double *)(v11 + 32) = v10;
    return (uint64_t (*)(uint64_t))sub_1BA99E438;
  }
  return result;
}

uint64_t sub_1BA99D254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a4;
  *(_QWORD *)(v7 + 24) = a5;
  v8 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v8);
  sub_1BB872C58();
  swift_release();
  return sub_1BB872C88();
}

uint64_t sub_1BA99D310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a4;
  *(_QWORD *)(v7 + 24) = a5;
  v8 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v8);
  v9 = sub_1BB872C58();
  swift_release();
  return v9;
}

uint64_t sub_1BA99D3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v35 = a2;
  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v32 - v10;
  sub_1BA5266EC();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v32 - v20;
  v22 = *(void (**)(uint64_t, uint64_t, double))(a4 + 32);
  v22(a3, a4, v19);
  ((void (*)(uint64_t, uint64_t))v22)(a3, a4);
  v23 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1BA50236C((uint64_t)v21, (uint64_t)v14);
  sub_1BA50236C((uint64_t)v17, v23);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(v21) = v24(v14, 1, v6);
  v25 = v24((char *)v23, 1, v6);
  if ((_DWORD)v21 == 1)
  {
    if (v25 == 1)
    {
      v26 = 0;
    }
    else
    {
      sub_1BA76D750(v23);
      v26 = 1;
    }
  }
  else if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
    v26 = 0;
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v28 = v33;
    v27(v33, v14, v6);
    v29 = v34;
    v27(v34, (char *)v23, v6);
    v26 = sub_1BB86C820();
    v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v29, v6);
    v30(v28, v6);
  }
  return v26 & 1;
}

BOOL sub_1BA99D5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double (*v6)(uint64_t, uint64_t);
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  double v15;

  v6 = *(double (**)(uint64_t, uint64_t))(a4 + 24);
  v7 = v6(a3, a4);
  if (v7 == v6(a3, a4))
  {
    v8 = sub_1BB86DEE8();
    v10 = v9;
    if (v8 == sub_1BB86DEE8() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      v13 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
  }
  else
  {
    v15 = v6(a3, a4);
    return v6(a3, a4) < v15;
  }
}

uint64_t sub_1BA99D714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1BB872EE0();
  sub_1BB87273C();
  sub_1BB872814();
  v1 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v0);
  sub_1BB872C40();
  nullsub_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2 = sub_1BB8727F0();
  swift_getTupleTypeMetadata2();
  v3 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DE9F98], v2);
  MEMORY[0x1BCCE5B24](v1, v3);
  sub_1BB872C64();
  swift_bridgeObjectRelease();
  sub_1BA99E490();
  sub_1BB872C40();
  swift_bridgeObjectRelease();
  v4 = sub_1BB872C58();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BA99D95C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v8)
  {
    v9 = result;
    v10 = v8;
    v11 = *a1;
    v17 = result;
    v18 = v8;
    v12 = sub_1BB872EE0();
    swift_bridgeObjectRetain();
    MEMORY[0x1BCCE3148](&v19, &v17, v11, MEMORY[0x1E0DEA968], v12, MEMORY[0x1E0DEA978]);
    swift_bridgeObjectRelease();
    if (!v19)
      sub_1BB872E68();
    sub_1BA6325A8(a3, a3);
    v13 = *(_QWORD *)(a3 - 8);
    swift_allocObject();
    v14 = sub_1BB872E2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, a2, a3);
    sub_1BA69C794(v14);
    v16 = sub_1BB872E5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v16;
    v17 = v9;
    v18 = v10;
    sub_1BB872814();
    return sub_1BB872838();
  }
  return result;
}

uint64_t sub_1BA99DAFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[6];
  char v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *a1;
  v21 = a2;
  v22 = a3;
  v9 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v9);
  sub_1BB872C58();
  sub_1BB872C04();
  swift_bridgeObjectRelease();
  v23 = v24;
  v18 = a2;
  v19 = a3;
  v20 = a5;
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = sub_1BA99E584;
  v16[5] = &v17;
  v10 = sub_1BB873F0C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECC68], v10);
  v14 = sub_1BB5B50D4((void (*)(char *, char *))sub_1BA99E60C, (uint64_t)v16, v10, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v12, MEMORY[0x1E0DEDD18], v13);
  result = swift_bridgeObjectRelease();
  *a4 = v14;
  return result;
}

void sub_1BA99DC78(uint64_t *a1@<X0>, double (*a2)(uint64_t, uint64_t, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v5 = *a1;
  v6 = (char *)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(double *)(a3 + v7) = a2(a3, v5, v6);
}

uint64_t sub_1BA99DD2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v8 = (char *)&v17 - v7;
  v9 = sub_1BB86DEE8();
  v11 = v10;
  v12 = *(int *)(TupleTypeMetadata2 + 48);
  v13 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, a2, a3);
  v14 = *(double *)(a2 + v12);
  *(double *)&v8[v12] = v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *a1;
  *a1 = 0x8000000000000000;
  sub_1BB4BE870(v9, v11, isUniquelyReferenced_nonNull_native, v14);
  *a1 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, a3);
}

BOOL sub_1BA99DE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v4 = sub_1BB86DEE8();
  v6 = 0.0;
  v7 = 0.0;
  if (*(_QWORD *)(a3 + 16))
  {
    v8 = sub_1BA6E35A8(v4, v5);
    if ((v9 & 1) != 0)
      v7 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v8);
  }
  swift_bridgeObjectRelease();
  v10 = sub_1BB86DEE8();
  if (*(_QWORD *)(a3 + 16))
  {
    v12 = sub_1BA6E35A8(v10, v11);
    if ((v13 & 1) != 0)
      v6 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v12);
  }
  swift_bridgeObjectRelease();
  return v6 < v7;
}

uint64_t Array<A>.sorted(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BA99D0E4(a3, a4);
  v4 = sub_1BB872DFC();
  swift_release();
  return v4;
}

uint64_t _s8NewsFeed0B15GroupSortOptionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  double v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;

  v2 = *(double *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(double *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 9) == 1)
  {
    if (*(_QWORD *)&v2 | v3)
    {
      if (*(_QWORD *)&v2 ^ 1 | *(unsigned __int8 *)(a1 + 8))
      {
        if (*(_BYTE *)(a2 + 9) && __PAIR128__(v5, *(unint64_t *)&v4) >= 2)
          return 1;
      }
      else if (*(_BYTE *)(a2 + 9) && !(*(_QWORD *)&v4 ^ 1 | v5))
      {
        return 1;
      }
    }
    else
    {
      v6 = *(_QWORD *)&v4 | v5;
      if (*(_BYTE *)(a2 + 9))
        v7 = v6 == 0;
      else
        v7 = 0;
      if (v7)
        return 1;
    }
  }
  else if ((*(_BYTE *)(a2 + 9) & 1) == 0)
  {
    if ((v3 & 1) != 0)
    {
      if ((v5 & 1) != 0)
        return 1;
    }
    else if ((v5 & 1) == 0 && v2 == v4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for FeedGroupSortOption(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA99E084(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA99E0A0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterRequirements(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupSortOptionPersonalization()
{
  return &type metadata for FeedGroupSortOptionPersonalization;
}

ValueMetadata *type metadata accessor for FeedGroupSortOption.CodingType()
{
  return &type metadata for FeedGroupSortOption.CodingType;
}

uint64_t storeEnumTagSinglePayload for FeedGroupSortOption.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA99E160 + 4 * byte_1BB88BB7B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA99E194 + 4 * byte_1BB88BB76[v4]))();
}

uint64_t sub_1BA99E194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA99E19C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA99E1A4);
  return result;
}

uint64_t sub_1BA99E1B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA99E1B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA99E1BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA99E1C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupSortOption.CodingKeys()
{
  return &type metadata for FeedGroupSortOption.CodingKeys;
}

unint64_t sub_1BA99E1E4()
{
  unint64_t result;

  result = qword_1EF2AC508;
  if (!qword_1EF2AC508)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BD44, &type metadata for FeedGroupSortOption.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC508);
  }
  return result;
}

unint64_t sub_1BA99E22C()
{
  unint64_t result;

  result = qword_1EF2AC510;
  if (!qword_1EF2AC510)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BDE4, &type metadata for FeedGroupSortOption.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AC510);
  }
  return result;
}

unint64_t sub_1BA99E270()
{
  unint64_t result;

  result = qword_1EF2AC520;
  if (!qword_1EF2AC520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BFB4, &type metadata for FeedGroupSortOptionPersonalization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC520);
  }
  return result;
}

uint64_t sub_1BA99E2B4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001BB965D60)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BA99E338()
{
  return swift_deallocObject();
}

uint64_t sub_1BA99E348(uint64_t a1)
{
  return sub_1BA99E3B0(a1);
}

uint64_t sub_1BA99E35C()
{
  return swift_deallocObject();
}

uint64_t sub_1BA99E36C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA99D254(a1, *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40) | (*(unsigned __int8 *)(v1 + 41) << 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA99E38C()
{
  return swift_deallocObject();
}

uint64_t sub_1BA99E39C(uint64_t a1)
{
  return sub_1BA99E3B0(a1);
}

uint64_t sub_1BA99E3B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA99D310(a1, *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40) | (*(unsigned __int8 *)(v1 + 41) << 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA99E3E8()
{
  return swift_deallocObject();
}

uint64_t sub_1BA99E3F8(uint64_t a1)
{
  nullsub_1(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA99E410()
{
  return swift_deallocObject();
}

uint64_t sub_1BA99E420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA99D3AC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BA99E428()
{
  return swift_deallocObject();
}

uint64_t sub_1BA99E438()
{
  return sub_1BA99D714();
}

uint64_t sub_1BA99E444(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA99D95C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BA99E45C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA99DAFC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2, *(double *)(v2 + 32));
}

uint64_t sub_1BA99E478(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA99DD2C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1BA99E490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39D950)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39D950);
  }
}

BOOL sub_1BA99E4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA99DE70(a1, a2, *(_QWORD *)(v2 + 32));
}

BOOL sub_1BA99E514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double (*v3)(uint64_t, uint64_t);
  double v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(double (**)(uint64_t, uint64_t))(v2 + 24);
  v4 = v3(v1, v2);
  return v3(v1, v2) < v4;
}

double sub_1BA99E584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  double v8;
  double v9;
  double v10;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(double *)(v3 + 32);
  v9 = (*(double (**)(uint64_t))(*(_QWORD *)(v3 + 24) + 24))(v7);
  v10 = pow(1.0 - v8, (double)a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a3, v7);
  return v9 * v10;
}

void sub_1BA99E60C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BA99DC78(a1, *(double (**)(uint64_t, uint64_t, char *))(v2 + 32), a2);
}

uint64_t sub_1BA99E62C()
{
  return swift_deallocObject();
}

BOOL sub_1BA99E63C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA99D5F4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t storeEnumTagSinglePayload for FeedGroupSortOptionPersonalization.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA99E684 + 4 * byte_1BB88BB80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA99E6A4 + 4 * byte_1BB88BB85[v4]))();
}

_BYTE *sub_1BA99E684(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA99E6A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA99E6AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA99E6B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA99E6BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA99E6C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupSortOptionPersonalization.CodingKeys()
{
  return &type metadata for FeedGroupSortOptionPersonalization.CodingKeys;
}

unint64_t sub_1BA99E6E4()
{
  unint64_t result;

  result = qword_1EF2AC530;
  if (!qword_1EF2AC530)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BF8C, &type metadata for FeedGroupSortOptionPersonalization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC530);
  }
  return result;
}

unint64_t sub_1BA99E72C()
{
  unint64_t result;

  result = qword_1EF2AC538;
  if (!qword_1EF2AC538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BEFC, &type metadata for FeedGroupSortOptionPersonalization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC538);
  }
  return result;
}

unint64_t sub_1BA99E774()
{
  unint64_t result;

  result = qword_1EF2AC540;
  if (!qword_1EF2AC540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88BF24, &type metadata for FeedGroupSortOptionPersonalization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AC540);
  }
  return result;
}

uint64_t SetPuzzleStreakEligibleHandler.__allocating_init(historyService:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BA4CECCC(a1, v2 + 16);
  return v2;
}

uint64_t SetPuzzleStreakEligibleHandler.init(historyService:)(__int128 *a1)
{
  uint64_t v1;

  sub_1BA4CECCC(a1, v1 + 16);
  return v1;
}

uint64_t SetPuzzleStreakEligibleHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4[5];
  v7 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a4, v6, v7);
}

uint64_t SetPuzzleStreakEligibleHandler.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t SetPuzzleStreakEligibleHandler.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA99E8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 40);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v4 + 16), v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, v6, v7);
}

id _s8NewsFeed30SetPuzzleStreakEligibleHandlerC9canHandle13commandCenter0J04with6sourceSb5TeaUI07CommandK4Type_p_AI0P0CySo17FCPuzzleProviding_pGSoAM_pAI0P15ExecutionSourceCSgtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  id v5;
  int v6;
  int v7;
  int v8;
  uint64_t v11;

  v0 = sub_1BB870A14();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86D294();
  sub_1BB86D27C();
  sub_1BB86D168();
  sub_1BB86D270();
  swift_release();
  swift_release();
  v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E0DB9F60])
    return 0;
  v6 = v4;
  v7 = *MEMORY[0x1E0DB9F68];
  v8 = *MEMORY[0x1E0DB9F70];
  v5 = objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
  if (v6 != v7 && v6 != v8)
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t method lookup function for SetPuzzleStreakEligibleHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SetPuzzleStreakEligibleHandler.__allocating_init(historyService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BA99EA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  void (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unsigned int v55;
  unint64_t v56;
  size_t v57;
  uint64_t isStackAllocationSafe;
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t result;
  id v67;
  uint64_t v68;
  uint64_t *v69;
  void (*v70)(_QWORD);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v82[2];
  _QWORD v83[4];

  v73 = a5;
  v6 = a4;
  v8 = a1;
  v69 = a6;
  v83[3] = *MEMORY[0x1E0C80C00];
  v72 = *(_QWORD *)(a2 + 16);
  if (v72)
  {
    v71 = a2 + 32;
    a4(a1);
    v68 = a2;
    swift_bridgeObjectRetain();
    v10 = 0;
    v80 = (void *)a3;
    v70 = v6;
LABEL_5:
    v77 = v8;
    v78 = v10;
    v15 = (uint64_t *)(v71 + 24 * v10);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    swift_bridgeObjectRetain();
    v76 = v18;
    v6(v18);
    if (qword_1ED3BE7F8 != -1)
      swift_once();
    v19 = qword_1ED4768D0;
    v20 = *(_QWORD *)(qword_1ED4768D0 + 24);
    swift_bridgeObjectRetain();
    sub_1BB86DD20();
    v21 = (uint64_t *)(v19 + 16);
    swift_beginAccess();
    v22 = *(_QWORD *)(v19 + 16);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      v23 = sub_1BA6E35A8(v16, v17);
      if ((v24 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v23 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        v50 = *(_QWORD *)(v25 + 16);
        if (!v50)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          v11 = v76;
          v12 = v77;
          v8 = v77;
          goto LABEL_4;
        }
        v75 = v17;
        v79 = v25;
        v51 = (uint64_t *)(v25 + 64);
        while (1)
        {
          v52 = *(v51 - 1);
          v53 = *v51;
          v54 = *(_BYTE *)(v52 + 32);
          v55 = v54 & 0x3F;
          v56 = (unint64_t)((1 << v54) + 63) >> 6;
          v57 = 8 * v56;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v55 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v68 - ((v57 + 15) & 0x3FFFFFFFFFFFFFF0), v57);
            v60 = v80;
            v59 = v81;
            v61 = sub_1BA6EB5B4((uint64_t)&v68 - ((v57 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v52, (uint64_t)v80);
            swift_bridgeObjectRelease();
            v81 = v59;
            if (v59)
            {
              v67 = v81;
              swift_willThrow();

              __break(1u);
LABEL_41:
              swift_bridgeObjectRelease();

              MEMORY[0x1BCCE5C38](v60, -1, -1);
              __break(1u);
LABEL_42:
              result = sub_1BB874560();
              __break(1u);
              return result;
            }
          }
          else
          {
            v60 = (void *)swift_slowAlloc();
            bzero(v60, v57);
            v62 = v81;
            v63 = sub_1BA6EB5B4((uint64_t)v60, v56, v52, (uint64_t)v80);
            v81 = v62;
            if (v62)
              goto LABEL_41;
            v61 = v63;
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v60, -1, -1);
            v60 = v80;
          }
          v64 = sub_1BA6EB330(v61, v52);
          swift_release();
          if ((v64 & 1) != 0)
          {
            v65 = sub_1BA6EBD20((uint64_t)v60, v53);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v65 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v11 = v76;
              v12 = v77;
              v8 = v76;
LABEL_4:
              v10 = v78 + 1;
              v6 = v70;
              v70(v8);
              swift_bridgeObjectRelease();
              v13 = v11;
              v14 = v73;
              v73(v13);
              v14(v12);
              if (v10 == v72)
              {
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v51 += 5;
          if (!--v50)
            goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v82[0] = v16;
    v82[1] = v17;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v82, v83);
    v26 = v83[1];
    v75 = v83[0];
    v27 = v83[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79 = v27;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = v17;
    v30 = isUniquelyReferenced_nonNull_native;
    v82[0] = *v21;
    v31 = v82[0];
    *v21 = 0x8000000000000000;
    v32 = v16;
    v33 = v29;
    v35 = sub_1BA6E35A8(v16, v29);
    v36 = *(_QWORD *)(v31 + 16);
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    v39 = v34;
    v40 = *(_QWORD *)(v31 + 24);
    v74 = v20;
    if (v40 >= v38)
    {
      if ((v30 & 1) == 0)
        sub_1BB4C1F6C();
      v17 = v33;
      v43 = (_QWORD *)v82[0];
      if ((v39 & 1) == 0)
      {
LABEL_15:
        v43[(v35 >> 6) + 8] |= 1 << v35;
        v44 = (uint64_t *)(v43[6] + 16 * v35);
        *v44 = v32;
        v44[1] = v17;
        v45 = (uint64_t *)(v43[7] + 24 * v35);
        *v45 = v75;
        v45[1] = v26;
        v25 = v79;
        v45[2] = v79;
        v46 = v43[2];
        v47 = __OFADD__(v46, 1);
        v48 = v46 + 1;
        if (v47)
          goto LABEL_40;
        v43[2] = v48;
        swift_bridgeObjectRetain();
        goto LABEL_21;
      }
    }
    else
    {
      sub_1BA7AAAE4(v38, v30);
      v17 = v33;
      v41 = sub_1BA6E35A8(v32, v33);
      if ((v39 & 1) != (v42 & 1))
        goto LABEL_42;
      v35 = v41;
      v43 = (_QWORD *)v82[0];
      if ((v39 & 1) == 0)
        goto LABEL_15;
    }
    v49 = (uint64_t *)(v43[7] + 24 * v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v49 = v75;
    v49[1] = v26;
    v25 = v79;
    v49[2] = v79;
LABEL_21:
    *v21 = (uint64_t)v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_22;
  }
  a4(a1);
LABEL_38:
  result = swift_bridgeObjectRelease();
  *v69 = v8;
  return result;
}

uint64_t sub_1BA99F048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  unint64_t v46;
  size_t v47;
  uint64_t isStackAllocationSafe;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t result;
  id v57;
  _QWORD v58[2];
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71[2];
  _QWORD v72[4];

  v59 = a4;
  v72[3] = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a2 + 16);
  if (v61)
  {
    v60 = a2 + 32;
    swift_retain();
    v58[1] = a2;
    swift_bridgeObjectRetain();
    v7 = 0;
    v69 = (void *)a3;
LABEL_5:
    v65 = a1;
    v8 = (uint64_t *)(v60 + 24 * v7);
    v9 = v8[1];
    v68 = *v8;
    v10 = v8[2];
    v11 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    v66 = v10 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = qword_1ED4768D0;
    v13 = *(_QWORD *)(qword_1ED4768D0 + 24);
    swift_bridgeObjectRetain();
    sub_1BB86DD20();
    v14 = (uint64_t *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v15 + 16);
    v62 = v10;
    v67 = v7;
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1BA6E35A8(v68, v9);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 24 * v17 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        v40 = *(_QWORD *)(v19 + 16);
        if (!v40)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v65;
          goto LABEL_4;
        }
        v68 = v9;
        v64 = v19;
        v41 = (uint64_t *)(v19 + 64);
        while (1)
        {
          v42 = *(v41 - 1);
          v43 = *v41;
          v44 = *(_BYTE *)(v42 + 32);
          v45 = v44 & 0x3F;
          v46 = (unint64_t)((1 << v44) + 63) >> 6;
          v47 = 8 * v46;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v45 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v47);
            v50 = v69;
            v49 = v70;
            v51 = sub_1BA6EB5B4((uint64_t)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v46, v42, (uint64_t)v69);
            swift_bridgeObjectRelease();
            v70 = v49;
            if (v49)
            {
              v57 = v70;
              swift_willThrow();

              __break(1u);
LABEL_42:
              swift_bridgeObjectRelease();

              MEMORY[0x1BCCE5C38](v50, -1, -1);
              __break(1u);
LABEL_43:
              result = sub_1BB874560();
              __break(1u);
              return result;
            }
          }
          else
          {
            v50 = (void *)swift_slowAlloc();
            bzero(v50, v47);
            v52 = v70;
            v53 = sub_1BA6EB5B4((uint64_t)v50, v46, v42, (uint64_t)v69);
            v70 = v52;
            if (v52)
              goto LABEL_42;
            v51 = v53;
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v50, -1, -1);
            v50 = v69;
          }
          v54 = sub_1BA6EB330(v51, v42);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20((uint64_t)v50, v43);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              a1 = v62;
LABEL_4:
              v7 = v67 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v61)
              {
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v41 += 5;
          if (!--v40)
            goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    v63 = v13;
    swift_endAccess();
    v20 = v68;
    v71[0] = v68;
    v71[1] = v9;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v71, v72);
    v21 = v72[1];
    v64 = v72[0];
    v22 = v72[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v22;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71[0] = *v14;
    v24 = v71[0];
    *v14 = 0x8000000000000000;
    v26 = sub_1BA6E35A8(v20, v9);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_41:
      __break(1u);
    }
    v30 = v25;
    if (*(_QWORD *)(v24 + 24) < v29)
    {
      sub_1BA7AAAE4(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_1BA6E35A8(v68, v9);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_43;
      v26 = v31;
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) == 0)
        goto LABEL_20;
LABEL_18:
      v34 = (_QWORD *)(v33[7] + 24 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v34 = v64;
      v34[1] = v21;
      v34[2] = v19;
LABEL_22:
      *v14 = (uint64_t)v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_23;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v33 = (_QWORD *)v71[0];
      if ((v25 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      sub_1BB4C1F6C();
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) != 0)
        goto LABEL_18;
    }
LABEL_20:
    v33[(v26 >> 6) + 8] |= 1 << v26;
    v35 = (_QWORD *)(v33[6] + 16 * v26);
    *v35 = v68;
    v35[1] = v9;
    v36 = (_QWORD *)(v33[7] + 24 * v26);
    *v36 = v64;
    v36[1] = v21;
    v36[2] = v19;
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_41;
    v33[2] = v39;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  swift_retain();
LABEL_39:
  result = swift_bridgeObjectRelease();
  *v59 = a1;
  return result;
}

uint64_t sub_1BA99F658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  unint64_t v46;
  size_t v47;
  uint64_t isStackAllocationSafe;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t result;
  id v57;
  _QWORD v58[2];
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71[2];
  _QWORD v72[4];

  v59 = a4;
  v72[3] = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a2 + 16);
  if (v61)
  {
    v60 = a2 + 32;
    swift_retain();
    v58[1] = a2;
    swift_bridgeObjectRetain();
    v7 = 0;
    v69 = (void *)a3;
LABEL_5:
    v65 = a1;
    v8 = (uint64_t *)(v60 + 24 * v7);
    v9 = v8[1];
    v68 = *v8;
    v10 = v8[2];
    v11 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    v66 = v10 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = qword_1ED4768D0;
    v13 = *(_QWORD *)(qword_1ED4768D0 + 24);
    swift_bridgeObjectRetain();
    sub_1BB86DD20();
    v14 = (uint64_t *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v15 + 16);
    v62 = v10;
    v67 = v7;
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1BA6E35A8(v68, v9);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 24 * v17 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        v40 = *(_QWORD *)(v19 + 16);
        if (!v40)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v65;
          goto LABEL_4;
        }
        v68 = v9;
        v64 = v19;
        v41 = (uint64_t *)(v19 + 64);
        while (1)
        {
          v42 = *(v41 - 1);
          v43 = *v41;
          v44 = *(_BYTE *)(v42 + 32);
          v45 = v44 & 0x3F;
          v46 = (unint64_t)((1 << v44) + 63) >> 6;
          v47 = 8 * v46;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v45 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v47);
            v50 = v69;
            v49 = v70;
            v51 = sub_1BA6EB5B4((uint64_t)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v46, v42, (uint64_t)v69);
            swift_bridgeObjectRelease();
            v70 = v49;
            if (v49)
            {
              v57 = v70;
              swift_willThrow();

              __break(1u);
LABEL_42:
              swift_bridgeObjectRelease();

              MEMORY[0x1BCCE5C38](v50, -1, -1);
              __break(1u);
LABEL_43:
              result = sub_1BB874560();
              __break(1u);
              return result;
            }
          }
          else
          {
            v50 = (void *)swift_slowAlloc();
            bzero(v50, v47);
            v52 = v70;
            v53 = sub_1BA6EB5B4((uint64_t)v50, v46, v42, (uint64_t)v69);
            v70 = v52;
            if (v52)
              goto LABEL_42;
            v51 = v53;
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v50, -1, -1);
            v50 = v69;
          }
          v54 = sub_1BA6EB330(v51, v42);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20((uint64_t)v50, v43);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              a1 = v62;
LABEL_4:
              v7 = v67 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v61)
              {
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v41 += 5;
          if (!--v40)
            goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    v63 = v13;
    swift_endAccess();
    v20 = v68;
    v71[0] = v68;
    v71[1] = v9;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v71, v72);
    v21 = v72[1];
    v64 = v72[0];
    v22 = v72[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v22;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71[0] = *v14;
    v24 = v71[0];
    *v14 = 0x8000000000000000;
    v26 = sub_1BA6E35A8(v20, v9);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_41:
      __break(1u);
    }
    v30 = v25;
    if (*(_QWORD *)(v24 + 24) < v29)
    {
      sub_1BA7AAAE4(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_1BA6E35A8(v68, v9);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_43;
      v26 = v31;
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) == 0)
        goto LABEL_20;
LABEL_18:
      v34 = (_QWORD *)(v33[7] + 24 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v34 = v64;
      v34[1] = v21;
      v34[2] = v19;
LABEL_22:
      *v14 = (uint64_t)v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_23;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v33 = (_QWORD *)v71[0];
      if ((v25 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      sub_1BB4C1F6C();
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) != 0)
        goto LABEL_18;
    }
LABEL_20:
    v33[(v26 >> 6) + 8] |= 1 << v26;
    v35 = (_QWORD *)(v33[6] + 16 * v26);
    *v35 = v68;
    v35[1] = v9;
    v36 = (_QWORD *)(v33[7] + 24 * v26);
    *v36 = v64;
    v36[1] = v21;
    v36[2] = v19;
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_41;
    v33[2] = v39;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  swift_retain();
LABEL_39:
  result = swift_bridgeObjectRelease();
  *v59 = a1;
  return result;
}

uint64_t sub_1BA99FC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  unint64_t v46;
  size_t v47;
  uint64_t isStackAllocationSafe;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t result;
  id v57;
  _QWORD v58[2];
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71[2];
  _QWORD v72[4];

  v59 = a4;
  v72[3] = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a2 + 16);
  if (v61)
  {
    v60 = a2 + 32;
    swift_retain();
    v58[1] = a2;
    swift_bridgeObjectRetain();
    v7 = 0;
    v69 = (void *)a3;
LABEL_5:
    v65 = a1;
    v8 = (uint64_t *)(v60 + 24 * v7);
    v9 = v8[1];
    v68 = *v8;
    v10 = v8[2];
    v11 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    v66 = v10 & 0x1FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = qword_1ED4768D0;
    v13 = *(_QWORD *)(qword_1ED4768D0 + 24);
    swift_bridgeObjectRetain();
    sub_1BB86DD20();
    v14 = (uint64_t *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v15 + 16);
    v62 = v10;
    v67 = v7;
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1BA6E35A8(v68, v9);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 24 * v17 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        v40 = *(_QWORD *)(v19 + 16);
        if (!v40)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v65;
          goto LABEL_4;
        }
        v68 = v9;
        v64 = v19;
        v41 = (uint64_t *)(v19 + 64);
        while (1)
        {
          v42 = *(v41 - 1);
          v43 = *v41;
          v44 = *(_BYTE *)(v42 + 32);
          v45 = v44 & 0x3F;
          v46 = (unint64_t)((1 << v44) + 63) >> 6;
          v47 = 8 * v46;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v45 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v47);
            v50 = v69;
            v49 = v70;
            v51 = sub_1BA6EB5B4((uint64_t)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v46, v42, (uint64_t)v69);
            swift_bridgeObjectRelease();
            v70 = v49;
            if (v49)
            {
              v57 = v70;
              swift_willThrow();

              __break(1u);
LABEL_42:
              swift_bridgeObjectRelease();

              MEMORY[0x1BCCE5C38](v50, -1, -1);
              __break(1u);
LABEL_43:
              result = sub_1BB874560();
              __break(1u);
              return result;
            }
          }
          else
          {
            v50 = (void *)swift_slowAlloc();
            bzero(v50, v47);
            v52 = v70;
            v53 = sub_1BA6EB5B4((uint64_t)v50, v46, v42, (uint64_t)v69);
            v70 = v52;
            if (v52)
              goto LABEL_42;
            v51 = v53;
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v50, -1, -1);
            v50 = v69;
          }
          v54 = sub_1BA6EB330(v51, v42);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20((uint64_t)v50, v43);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              a1 = v62;
LABEL_4:
              v7 = v67 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v61)
              {
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v41 += 5;
          if (!--v40)
            goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    v63 = v13;
    swift_endAccess();
    v20 = v68;
    v71[0] = v68;
    v71[1] = v9;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v71, v72);
    v21 = v72[1];
    v64 = v72[0];
    v22 = v72[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v22;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71[0] = *v14;
    v24 = v71[0];
    *v14 = 0x8000000000000000;
    v26 = sub_1BA6E35A8(v20, v9);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_41:
      __break(1u);
    }
    v30 = v25;
    if (*(_QWORD *)(v24 + 24) < v29)
    {
      sub_1BA7AAAE4(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_1BA6E35A8(v68, v9);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_43;
      v26 = v31;
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) == 0)
        goto LABEL_20;
LABEL_18:
      v34 = (_QWORD *)(v33[7] + 24 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v34 = v64;
      v34[1] = v21;
      v34[2] = v19;
LABEL_22:
      *v14 = (uint64_t)v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_23;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v33 = (_QWORD *)v71[0];
      if ((v25 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      sub_1BB4C1F6C();
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) != 0)
        goto LABEL_18;
    }
LABEL_20:
    v33[(v26 >> 6) + 8] |= 1 << v26;
    v35 = (_QWORD *)(v33[6] + 16 * v26);
    *v35 = v68;
    v35[1] = v9;
    v36 = (_QWORD *)(v33[7] + 24 * v26);
    *v36 = v64;
    v36[1] = v21;
    v36[2] = v19;
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_41;
    v33[2] = v39;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  swift_retain();
LABEL_39:
  result = swift_bridgeObjectRelease();
  *v59 = a1;
  return result;
}

uint64_t sub_1BA9A0278@<X0>(char *a1@<X8>)
{
  return sub_1BA9A2530(a1);
}

void sub_1BA9A02C4(uint64_t a1, uint64_t a2)
{
  sub_1BA9A2C14(a1, a2);
}

uint64_t sub_1BA9A0310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA786880(a1, a2, a3);
}

uint64_t sub_1BA9A0360(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  size_t v51;
  uint64_t isStackAllocationSafe;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return a2 & 1;
  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v69 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v59 = a2;
  if (v6)
  {
    v68[0] = *(_QWORD *)(v69 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v66 = v68[0];
  }
  else
  {
    v66 = sub_1BA6E3F38();
    swift_release();
  }
  v60 = a3 + 32;
  v58 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
LABEL_8:
  v65 = v9;
  v10 = v60 + 24 * v9;
  v12 = *(_QWORD *)v10;
  v11 = *(_QWORD *)(v10 + 8);
  v62 = *(unsigned __int8 *)(v10 + 16);
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = qword_1ED4768D0;
  v15 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v12, v11);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 24 * v18 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v20 + 16);
      if (!v44)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      v63 = v20;
      v64 = v11;
      v45 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v48 = *(_BYTE *)(v46 + 32);
        v49 = v48 & 0x3F;
        v50 = (unint64_t)((1 << v48) + 63) >> 6;
        v51 = 8 * v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v49 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
          v53 = sub_1BA6EB5B4((uint64_t)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = (void *)swift_slowAlloc();
          bzero(v54, v51);
          v53 = sub_1BA6EB5B4((uint64_t)v54, v50, v46, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v54, -1, -1);
        }
        v55 = sub_1BA6EB330(v53, v46);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v66, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v59 = v62;
LABEL_7:
            v9 = v65 + 1;
            if (v65 + 1 == v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              LOBYTE(a2) = v59;
              return a2 & 1;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 += 5;
        if (!--v44)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v63 = v15;
  swift_endAccess();
  v67[0] = v12;
  v67[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v67, v68);
  v21 = v68[1];
  v64 = v68[0];
  v22 = v68[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v22;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v12;
  v25 = isUniquelyReferenced_nonNull_native;
  v67[0] = *v16;
  v26 = v67[0];
  *v16 = 0x8000000000000000;
  v27 = v24;
  v28 = v11;
  v30 = sub_1BA6E35A8(v24, v11);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v34 = v29;
  if (*(_QWORD *)(v26 + 24) >= v33)
  {
    if ((v25 & 1) != 0)
    {
      v37 = (_QWORD *)v67[0];
      if ((v29 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v37 = (_QWORD *)v67[0];
      if ((v34 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v39 = (uint64_t *)(v37[6] + 16 * v30);
    *v39 = v27;
    v39[1] = v28;
    v40 = (uint64_t *)(v37[7] + 24 * v30);
    *v40 = v64;
    v40[1] = v21;
    v40[2] = v20;
    v41 = v37[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_41;
    v11 = v28;
    v37[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v33, v25);
  v35 = sub_1BA6E35A8(v27, v28);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    v37 = (_QWORD *)v67[0];
    if ((v34 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v38 = (uint64_t *)(v37[7] + 24 * v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v38 = v64;
    v38[1] = v21;
    v38[2] = v20;
    v11 = v28;
LABEL_25:
    *v16 = (uint64_t)v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA9A097C@<X0>(char *a1@<X8>)
{
  return sub_1BA9A1D10((unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&qword_1ED3B5EF0, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D5EC, (uint64_t)&qword_1ED3BA910, a1);
}

void sub_1BA9A09E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  unint64_t v48;
  size_t v49;
  uint64_t isStackAllocationSafe;
  uint64_t v51;
  void *v52;
  char v53;
  char v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v57 = *(_QWORD *)(a2 + 16);
  if (v57)
  {
    sub_1BB86DD80();
    v3 = *(_QWORD *)(*(_QWORD *)(v65 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
    {
      v64[0] = *(_QWORD *)(v65 + 56);
      v4 = swift_bridgeObjectRetain();
      v5 = sub_1BA6E42A0(v4);
      sub_1BA6E3FB8(v5);
      swift_release();
      v62 = v64[0];
    }
    else
    {
      v62 = sub_1BA6E3F38();
      swift_release();
    }
    v55[1] = a2;
    v56 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = (uint64_t *)(v56 + 24 * v6);
      v9 = *v7;
      v8 = v7[1];
      v10 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      if (v10 != -1)
        swift_once();
      v11 = qword_1ED4768D0;
      v12 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v13 = (uint64_t *)(v11 + 16);
      swift_beginAccess();
      v14 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v60 = v6;
      if (!v15)
        goto LABEL_13;
      swift_bridgeObjectRetain();
      v16 = sub_1BA6E35A8(v9, v8);
      if ((v17 & 1) == 0)
        break;
      v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 24 * v16 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v42 = *(_QWORD *)(v18 + 16);
      if (v42)
      {
        v59 = v8;
        v61 = v18;
        v43 = (uint64_t *)(v18 + 64);
        do
        {
          v44 = *(v43 - 1);
          v45 = *v43;
          v46 = *(_BYTE *)(v44 + 32);
          v47 = v46 & 0x3F;
          v48 = (unint64_t)((1 << v46) + 63) >> 6;
          v49 = 8 * v48;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v47 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v55 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v49);
            v51 = sub_1BA6EB5B4((uint64_t)v55 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v48, v44, v62);
            swift_bridgeObjectRelease();
          }
          else
          {
            v52 = (void *)swift_slowAlloc();
            bzero(v52, v49);
            v51 = sub_1BA6EB5B4((uint64_t)v52, v48, v44, v62);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v52, -1, -1);
          }
          v53 = sub_1BA6EB330(v51, v44);
          swift_release();
          if ((v53 & 1) != 0)
          {
            v54 = sub_1BA6EBD20(v62, v45);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v54 & 1) != 0)
              break;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v43 += 5;
          --v42;
        }
        while (v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v60 + 1;
      if (v60 + 1 == v57)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    v58 = v12;
    swift_endAccess();
    v63[0] = v9;
    v63[1] = v8;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v63, v64);
    v19 = v64[1];
    v59 = v64[0];
    v20 = v64[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v20;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v9;
    v23 = isUniquelyReferenced_nonNull_native;
    v63[0] = *v13;
    v24 = v63[0];
    *v13 = 0x8000000000000000;
    v25 = v22;
    v26 = v8;
    v28 = sub_1BA6E35A8(v22, v8);
    v29 = *(_QWORD *)(v24 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    v32 = v27;
    if (*(_QWORD *)(v24 + 24) < v31)
    {
      sub_1BA7AAAE4(v31, v23);
      v33 = sub_1BA6E35A8(v25, v26);
      if ((v32 & 1) != (v34 & 1))
      {
        sub_1BB874560();
        __break(1u);
        return;
      }
      v28 = v33;
      v35 = (_QWORD *)v63[0];
      if ((v32 & 1) == 0)
        goto LABEL_22;
LABEL_20:
      v36 = (uint64_t *)(v35[7] + 24 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v36 = v59;
      v36[1] = v19;
      v18 = v61;
      v36[2] = v61;
      v8 = v26;
LABEL_24:
      *v13 = (uint64_t)v35;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_25;
    }
    if ((v23 & 1) != 0)
    {
      v35 = (_QWORD *)v63[0];
      if ((v27 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      sub_1BB4C1F6C();
      v35 = (_QWORD *)v63[0];
      if ((v32 & 1) != 0)
        goto LABEL_20;
    }
LABEL_22:
    v35[(v28 >> 6) + 8] |= 1 << v28;
    v37 = (uint64_t *)(v35[6] + 16 * v28);
    *v37 = v25;
    v37[1] = v26;
    v38 = (uint64_t *)(v35[7] + 24 * v28);
    *v38 = v59;
    v38[1] = v19;
    v18 = v61;
    v38[2] = v61;
    v39 = v35[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_40;
    v8 = v26;
    v35[2] = v41;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
}

uint64_t sub_1BA9A1004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  size_t v51;
  uint64_t isStackAllocationSafe;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return a2;
  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v69 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v59 = a2;
  if (v6)
  {
    v68[0] = *(_QWORD *)(v69 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v66 = v68[0];
  }
  else
  {
    v66 = sub_1BA6E3F38();
    swift_release();
  }
  v60 = a3 + 32;
  v58 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
LABEL_8:
  v65 = v9;
  v10 = (uint64_t *)(v60 + 24 * v9);
  v12 = *v10;
  v11 = v10[1];
  v62 = v10[2];
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = qword_1ED4768D0;
  v15 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v12, v11);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 24 * v18 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v20 + 16);
      if (!v44)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      v63 = v20;
      v64 = v11;
      v45 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v48 = *(_BYTE *)(v46 + 32);
        v49 = v48 & 0x3F;
        v50 = (unint64_t)((1 << v48) + 63) >> 6;
        v51 = 8 * v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v49 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
          v53 = sub_1BA6EB5B4((uint64_t)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = (void *)swift_slowAlloc();
          bzero(v54, v51);
          v53 = sub_1BA6EB5B4((uint64_t)v54, v50, v46, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v54, -1, -1);
        }
        v55 = sub_1BA6EB330(v53, v46);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v66, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v59 = v62;
LABEL_7:
            v9 = v65 + 1;
            if (v65 + 1 == v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v59;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 += 5;
        if (!--v44)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v63 = v15;
  swift_endAccess();
  v67[0] = v12;
  v67[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v67, v68);
  v21 = v68[1];
  v64 = v68[0];
  v22 = v68[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v22;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v12;
  v25 = isUniquelyReferenced_nonNull_native;
  v67[0] = *v16;
  v26 = v67[0];
  *v16 = 0x8000000000000000;
  v27 = v24;
  v28 = v11;
  v30 = sub_1BA6E35A8(v24, v11);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v34 = v29;
  if (*(_QWORD *)(v26 + 24) >= v33)
  {
    if ((v25 & 1) != 0)
    {
      v37 = (_QWORD *)v67[0];
      if ((v29 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v37 = (_QWORD *)v67[0];
      if ((v34 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v39 = (uint64_t *)(v37[6] + 16 * v30);
    *v39 = v27;
    v39[1] = v28;
    v40 = (uint64_t *)(v37[7] + 24 * v30);
    *v40 = v64;
    v40[1] = v21;
    v40[2] = v20;
    v41 = v37[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_41;
    v11 = v28;
    v37[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v33, v25);
  v35 = sub_1BA6E35A8(v27, v28);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    v37 = (_QWORD *)v67[0];
    if ((v34 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v38 = (uint64_t *)(v37[7] + 24 * v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v38 = v64;
    v38[1] = v21;
    v38[2] = v20;
    v11 = v28;
LABEL_25:
    *v16 = (uint64_t)v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA9A1620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  unint64_t v53;
  size_t v54;
  uint64_t isStackAllocationSafe;
  uint64_t v56;
  void *v57;
  char v58;
  char v59;
  uint64_t result;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v65 = *(_QWORD *)(a4 + 16);
  if (v65)
  {
    sub_1BB86DD80();
    v7 = *(_QWORD *)(*(_QWORD *)(v75 + 40) + 16);
    swift_beginAccess();
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 16) + 16);
    v62 = a2;
    if (v8)
    {
      v74[0] = *(_QWORD *)(v75 + 56);
      v9 = swift_bridgeObjectRetain();
      v10 = sub_1BA6E42A0(v9);
      sub_1BA6E3FB8(v10);
      swift_release();
      v72 = v74[0];
    }
    else
    {
      v72 = sub_1BA6E3F38();
      swift_release();
    }
    v64 = a4 + 32;
    v61[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v11 = 0;
    v61[1] = a3;
    v63 = a3;
    while (1)
    {
      v13 = (uint64_t *)(v64 + 32 * v11);
      v15 = *v13;
      v14 = v13[1];
      v16 = v13[3];
      v66 = v13[2];
      v17 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v69 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1)
        swift_once();
      v18 = qword_1ED4768D0;
      v19 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v21 + 16);
      v70 = v11;
      if (!v22)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v23 = sub_1BA6E35A8(v15, v14);
      if ((v24 & 1) == 0)
        break;
      v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v70;
        goto LABEL_8;
      }
      v68 = v14;
      v71 = v25;
      v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        v49 = *(v48 - 1);
        v50 = *v48;
        v51 = *(_BYTE *)(v49 + 32);
        v52 = v51 & 0x3F;
        v53 = (unint64_t)((1 << v51) + 63) >> 6;
        v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          v56 = sub_1BA6EB5B4((uint64_t)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v72);
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          v56 = sub_1BA6EB5B4((uint64_t)v57, v53, v49, v72);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v57, -1, -1);
        }
        v58 = sub_1BA6EB330(v56, v49);
        swift_release();
        if ((v58 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v48 += 5;
        if (!--v47)
          goto LABEL_7;
      }
      v59 = sub_1BA6EBD20(v72, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v70;
      v62 = v66;
      v63 = v69;
LABEL_8:
      swift_bridgeObjectRelease();
      v11 = v12 + 1;
      if (v11 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v62;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v67 = v19;
    swift_endAccess();
    v73[0] = v15;
    v73[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v73, v74);
    v26 = v74[1];
    v68 = v74[0];
    v27 = v74[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71 = v27;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *v20;
    v29 = v73[0];
    *v20 = 0x8000000000000000;
    v30 = v15;
    v31 = v14;
    v33 = sub_1BA6E35A8(v15, v14);
    v34 = *(_QWORD *)(v29 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v37 = v32;
    if (*(_QWORD *)(v29 + 24) < v36)
    {
      sub_1BA7AAAE4(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_1BA6E35A8(v30, v31);
      if ((v37 & 1) != (v39 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v33 = v38;
      v40 = (_QWORD *)v73[0];
      if ((v37 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v41 = v68;
      v41[1] = v26;
      v25 = v71;
      v41[2] = v71;
      v14 = v31;
LABEL_26:
      *v20 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v40 = (_QWORD *)v73[0];
      if ((v32 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v40 = (_QWORD *)v73[0];
      if ((v37 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v42 = (uint64_t *)(v40[6] + 16 * v33);
    *v42 = v30;
    v42[1] = v31;
    v43 = (uint64_t *)(v40[7] + 24 * v33);
    *v43 = v68;
    v43[1] = v26;
    v25 = v71;
    v43[2] = v71;
    v44 = v40[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_42;
    v14 = v31;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BA9A1CA4@<X0>(char *a1@<X8>)
{
  return sub_1BA9A1D10((unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&qword_1ED3B5EE8, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D4C8, (uint64_t)&qword_1ED3BA908, a1);
}

uint64_t sub_1BA9A1D10@<X0>(unint64_t *a1@<X1>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), double)@<X4>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unsigned int v55;
  unint64_t v56;
  size_t v57;
  uint64_t isStackAllocationSafe;
  uint64_t v59;
  void *v60;
  char v61;
  char v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t *v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[2];
  uint64_t v86;
  uint64_t v87;

  v11 = v6;
  v87 = *MEMORY[0x1E0C80C00];
  v69 = a1;
  sub_1BA4A3FB4(0, a1, a2);
  v14 = MEMORY[0x1E0C80A78](v13);
  v74 = (char *)&v65 - v15;
  v70 = a2;
  v16 = ((uint64_t (*)(_QWORD, double))a2)(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v75 = (char *)&v65 - v21;
  MEMORY[0x1E0C80A78](v22);
  v76 = (char *)&v65 - v23;
  v25 = MEMORY[0x1E0C80A78](v24);
  v67 = (char *)&v65 - v26;
  v66 = *(_QWORD *)(v11 + *(int *)(a4(0, a3, type metadata accessor for FormatSelectorValue, v25) + 36));
  if (!*(_QWORD *)(v66 + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(a6, v11, v16);
  v65 = a6;
  sub_1BB86DD80();
  v27 = v86;
  v28 = *(_QWORD *)(*(_QWORD *)(v86 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v28 + 16) + 16))
  {
    v85[0] = *(_QWORD *)(v27 + 56);
    v29 = swift_bridgeObjectRetain();
    v30 = sub_1BA6E42A0(v29);
    sub_1BA6E3FB8(v30);
    swift_release();
    v84 = v85[0];
  }
  else
  {
    v84 = sub_1BA6E3F38();
    swift_release();
  }
  v32 = v75;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v34 = v67;
  v33(v67, v11, v16);
  v35 = v76;
  v33(v76, (uint64_t)v34, v16);
  v36 = v66;
  v81 = *(_QWORD *)(v66 + 16);
  if (v81)
  {
    v80 = v33;
    v73 = v19;
    v68 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a4)(0, a5, type metadata accessor for FormatSelectorValueSelector);
    v37 = *(_QWORD *)(v68 - 8);
    v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v39 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v39 != -1)
      swift_once();
    v40 = v36 + v38;
    v41 = 0;
    v78 = *(_QWORD *)(v37 + 72);
    v79 = v40;
    v43 = v73;
    v42 = (uint64_t)v74;
    v71 = v17;
    v72 = v16;
    do
    {
      v83 = v41;
      v46 = (uint64_t *)(v79 + v78 * v41);
      v47 = v46[1];
      v85[0] = *v46;
      v85[1] = v47;
      swift_bridgeObjectRetain();
      v48 = sub_1BA6E583C(v85);
      swift_bridgeObjectRelease();
      v49 = v48;
      v50 = *(_QWORD *)(v48 + 16);
      if (v50)
      {
        v77 = v46;
        v82 = v49;
        v51 = (uint64_t *)(v49 + 64);
        do
        {
          v52 = *(v51 - 1);
          v53 = *v51;
          v54 = *(_BYTE *)(v52 + 32);
          v55 = v54 & 0x3F;
          v56 = (unint64_t)((1 << v54) + 63) >> 6;
          v57 = 8 * v56;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v55 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v65 - ((v57 + 15) & 0x3FFFFFFFFFFFFFF0), v57);
            v59 = sub_1BA6EB5B4((uint64_t)&v65 - ((v57 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v52, v84);
            swift_bridgeObjectRelease();
          }
          else
          {
            v60 = (void *)swift_slowAlloc();
            bzero(v60, v57);
            v59 = sub_1BA6EB5B4((uint64_t)v60, v56, v52, v84);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v60, -1, -1);
          }
          v61 = sub_1BA6EB330(v59, v52);
          swift_release();
          if ((v61 & 1) != 0)
          {
            v62 = sub_1BA6EBD20(v84, v53);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v62 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v42 = (uint64_t)v74;
              v16 = v72;
              v63 = (void (*)(char *, char *, uint64_t))v80;
              v80(v74, (uint64_t)v77 + *(int *)(v68 + 36), v72);
              v64 = 0;
              v17 = v71;
              v43 = v73;
              v32 = v75;
              v35 = v76;
              goto LABEL_26;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v51 += 5;
          --v50;
        }
        while (v50);
        swift_bridgeObjectRelease();
        v64 = 1;
        v17 = v71;
        v16 = v72;
        v43 = v73;
        v42 = (uint64_t)v74;
        v32 = v75;
        v35 = v76;
      }
      else
      {
        swift_bridgeObjectRelease();
        v64 = 1;
      }
      v63 = (void (*)(char *, char *, uint64_t))v80;
LABEL_26:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v42, v64, 1, v16);
      v63(v43, v35, v16);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v42, 1, v16) == 1)
      {
        v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v44(v32, v43, v16);
        sub_1BA502AD0(v42, v69, v70);
        v45 = *(void (**)(char *, uint64_t))(v17 + 8);
      }
      else
      {
        v45 = *(void (**)(char *, uint64_t))(v17 + 8);
        v45(v43, v16);
        v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v44(v32, (char *)v42, v16);
      }
      v41 = v83 + 1;
      v45(v35, v16);
      v44(v35, v32, v16);
    }
    while (v41 != v81);
  }
  else
  {
    v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    swift_bridgeObjectRetain();
  }
  v44(v65, v35, v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v67, v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA9A23C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7855E0(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA9A24E4@<X0>(char *a1@<X8>)
{
  return sub_1BA9A2530(a1);
}

uint64_t sub_1BA9A2530@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  unint64_t v49;
  size_t v50;
  uint64_t isStackAllocationSafe;
  uint64_t v52;
  void *v53;
  char v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75[2];
  uint64_t v76;
  uint64_t v77;

  v2 = v1;
  v77 = *MEMORY[0x1E0C80C00];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v57 - v5;
  v7 = sub_1BB86C8B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  if (!*(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v19 + 36)) + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(a1, v1, v7);
  v59 = *(_QWORD *)(v1 + *(int *)(v19 + 36));
  v65 = v15;
  sub_1BB86DD80();
  v20 = v76;
  v21 = *(_QWORD *)(*(_QWORD *)(v76 + 40) + 16);
  swift_beginAccess();
  v22 = *(_QWORD *)(*(_QWORD *)(v21 + 16) + 16);
  v58 = a1;
  if (v22)
  {
    v75[0] = *(_QWORD *)(v20 + 56);
    v23 = swift_bridgeObjectRetain();
    v24 = sub_1BA6E42A0(v23);
    sub_1BA6E3FB8(v24);
    swift_release();
    v74 = v75[0];
  }
  else
  {
    v74 = sub_1BA6E3F38();
    swift_release();
  }
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v26(v18, v2, v7);
  v27 = v65;
  v73 = (void (*)(char *, char *, uint64_t))v26;
  v26(v65, (uint64_t)v18, v7);
  v28 = v59;
  v69 = *(_QWORD *)(v59 + 16);
  v57 = v18;
  if (v69)
  {
    sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3BA910, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v60 = v29;
    v30 = *(_QWORD *)(v29 - 8);
    v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v32 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v32 != -1)
      swift_once();
    v33 = v28 + v31;
    v34 = 0;
    v67 = *(_QWORD *)(v30 + 72);
    v68 = v33;
    v35 = v66;
    v63 = v8;
    v64 = v7;
    v61 = v10;
    v62 = v6;
    do
    {
      v38 = (uint64_t *)(v68 + v67 * v34);
      v39 = *v38;
      v40 = v38[1];
      v70 = v38;
      v75[0] = v39;
      v75[1] = v40;
      swift_bridgeObjectRetain();
      v41 = sub_1BA6E583C(v75);
      swift_bridgeObjectRelease();
      v42 = v41;
      v43 = *(_QWORD *)(v41 + 16);
      if (v43)
      {
        v71 = v42;
        v72 = v34;
        v44 = (uint64_t *)(v42 + 64);
        do
        {
          v45 = *(v44 - 1);
          v46 = *v44;
          v47 = *(_BYTE *)(v45 + 32);
          v48 = v47 & 0x3F;
          v49 = (unint64_t)((1 << v47) + 63) >> 6;
          v50 = 8 * v49;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v48 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
            v52 = sub_1BA6EB5B4((uint64_t)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v74);
            swift_bridgeObjectRelease();
          }
          else
          {
            v53 = (void *)swift_slowAlloc();
            bzero(v53, v50);
            v52 = sub_1BA6EB5B4((uint64_t)v53, v49, v45, v74);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v53, -1, -1);
          }
          v54 = sub_1BA6EB330(v52, v45);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20(v74, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v6 = v62;
              v7 = v64;
              v73(v62, (char *)v70 + *(int *)(v60 + 36), v64);
              v56 = 0;
              v8 = v63;
              goto LABEL_24;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 += 5;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        v56 = 1;
        v8 = v63;
        v7 = v64;
        v6 = v62;
LABEL_24:
        v10 = v61;
        v27 = v65;
        v35 = v66;
        v34 = v72;
      }
      else
      {
        swift_bridgeObjectRelease();
        v56 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v56, 1, v7);
      v73(v10, v27, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v36(v35, v10, v7);
        sub_1BA502AD0((uint64_t)v6, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        v37 = *(void (**)(char *, uint64_t))(v8 + 8);
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t))(v8 + 8);
        v37(v10, v7);
        v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v36(v35, v6, v7);
      }
      ++v34;
      v37(v27, v7);
      v36(v27, v35, v7);
    }
    while (v34 != v69);
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    swift_bridgeObjectRetain();
  }
  v36(v58, v27, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA9A2BC8(uint64_t a1, uint64_t a2)
{
  sub_1BA9A2C14(a1, a2);
}

void sub_1BA9A2C14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  unint64_t v48;
  size_t v49;
  uint64_t isStackAllocationSafe;
  uint64_t v51;
  void *v52;
  char v53;
  char v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v57 = *(_QWORD *)(a2 + 16);
  if (v57)
  {
    sub_1BB86DD80();
    v3 = *(_QWORD *)(*(_QWORD *)(v65 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
    {
      v64[0] = *(_QWORD *)(v65 + 56);
      v4 = swift_bridgeObjectRetain();
      v5 = sub_1BA6E42A0(v4);
      sub_1BA6E3FB8(v5);
      swift_release();
      v62 = v64[0];
    }
    else
    {
      v62 = sub_1BA6E3F38();
      swift_release();
    }
    v55[1] = a2;
    v56 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = (uint64_t *)(v56 + 24 * v6);
      v9 = *v7;
      v8 = v7[1];
      v10 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      if (v10 != -1)
        swift_once();
      v11 = qword_1ED4768D0;
      v12 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v13 = (uint64_t *)(v11 + 16);
      swift_beginAccess();
      v14 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v60 = v6;
      if (!v15)
        goto LABEL_13;
      swift_bridgeObjectRetain();
      v16 = sub_1BA6E35A8(v9, v8);
      if ((v17 & 1) == 0)
        break;
      v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 24 * v16 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v42 = *(_QWORD *)(v18 + 16);
      if (v42)
      {
        v59 = v8;
        v61 = v18;
        v43 = (uint64_t *)(v18 + 64);
        do
        {
          v44 = *(v43 - 1);
          v45 = *v43;
          v46 = *(_BYTE *)(v44 + 32);
          v47 = v46 & 0x3F;
          v48 = (unint64_t)((1 << v46) + 63) >> 6;
          v49 = 8 * v48;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v47 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v55 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v49);
            v51 = sub_1BA6EB5B4((uint64_t)v55 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v48, v44, v62);
            swift_bridgeObjectRelease();
          }
          else
          {
            v52 = (void *)swift_slowAlloc();
            bzero(v52, v49);
            v51 = sub_1BA6EB5B4((uint64_t)v52, v48, v44, v62);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v52, -1, -1);
          }
          v53 = sub_1BA6EB330(v51, v44);
          swift_release();
          if ((v53 & 1) != 0)
          {
            v54 = sub_1BA6EBD20(v62, v45);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v54 & 1) != 0)
              break;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v43 += 5;
          --v42;
        }
        while (v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v60 + 1;
      if (v60 + 1 == v57)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    v58 = v12;
    swift_endAccess();
    v63[0] = v9;
    v63[1] = v8;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v63, v64);
    v19 = v64[1];
    v59 = v64[0];
    v20 = v64[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v20;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v9;
    v23 = isUniquelyReferenced_nonNull_native;
    v63[0] = *v13;
    v24 = v63[0];
    *v13 = 0x8000000000000000;
    v25 = v22;
    v26 = v8;
    v28 = sub_1BA6E35A8(v22, v8);
    v29 = *(_QWORD *)(v24 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    v32 = v27;
    if (*(_QWORD *)(v24 + 24) < v31)
    {
      sub_1BA7AAAE4(v31, v23);
      v33 = sub_1BA6E35A8(v25, v26);
      if ((v32 & 1) != (v34 & 1))
      {
        sub_1BB874560();
        __break(1u);
        return;
      }
      v28 = v33;
      v35 = (_QWORD *)v63[0];
      if ((v32 & 1) == 0)
        goto LABEL_22;
LABEL_20:
      v36 = (uint64_t *)(v35[7] + 24 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v36 = v59;
      v36[1] = v19;
      v18 = v61;
      v36[2] = v61;
      v8 = v26;
LABEL_24:
      *v13 = (uint64_t)v35;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_25;
    }
    if ((v23 & 1) != 0)
    {
      v35 = (_QWORD *)v63[0];
      if ((v27 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      sub_1BB4C1F6C();
      v35 = (_QWORD *)v63[0];
      if ((v32 & 1) != 0)
        goto LABEL_20;
    }
LABEL_22:
    v35[(v28 >> 6) + 8] |= 1 << v28;
    v37 = (uint64_t *)(v35[6] + 16 * v28);
    *v37 = v25;
    v37[1] = v26;
    v38 = (uint64_t *)(v35[7] + 24 * v28);
    *v38 = v59;
    v38[1] = v19;
    v18 = v61;
    v38[2] = v61;
    v39 = v35[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_40;
    v8 = v26;
    v35[2] = v41;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
}

uint64_t sub_1BA9A3234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  unint64_t v49;
  size_t v50;
  uint64_t isStackAllocationSafe;
  uint64_t v52;
  void *v53;
  char v54;
  char v55;
  uint64_t result;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[2];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v60 = *(_QWORD *)(a3 + 16);
  if (v60)
  {
    sub_1BB86DD80();
    v5 = *(_QWORD *)(*(_QWORD *)(v68 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
    {
      v67[0] = *(_QWORD *)(v68 + 56);
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BA6E42A0(v6);
      sub_1BA6E3FB8(v7);
      swift_release();
      v65 = v67[0];
    }
    else
    {
      v65 = sub_1BA6E3F38();
      swift_release();
    }
    v59 = a3 + 32;
    v57[1] = a3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v8 = 0;
    v57[2] = a2;
    v58 = a2;
    while (1)
    {
      v64 = v8;
      v10 = (uint64_t *)(v59 + 24 * v8);
      v12 = *v10;
      v11 = v10[1];
      v13 = v10[2];
      v14 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v63 = v13;
      swift_bridgeObjectRetain();
      if (v14 != -1)
        swift_once();
      v15 = qword_1ED4768D0;
      v16 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v17 = (uint64_t *)(v15 + 16);
      swift_beginAccess();
      v18 = *(_QWORD *)(v15 + 16);
      if (!*(_QWORD *)(v18 + 16))
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v19 = sub_1BA6E35A8(v12, v11);
      if ((v20 & 1) == 0)
        break;
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 24 * v19 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v43 = *(_QWORD *)(v21 + 16);
      if (!v43)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v64;
        goto LABEL_8;
      }
      v61 = v21;
      v62 = v11;
      v44 = (uint64_t *)(v21 + 64);
      while (1)
      {
        v45 = *(v44 - 1);
        v46 = *v44;
        v47 = *(_BYTE *)(v45 + 32);
        v48 = v47 & 0x3F;
        v49 = (unint64_t)((1 << v47) + 63) >> 6;
        v50 = 8 * v49;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v48 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
          v52 = sub_1BA6EB5B4((uint64_t)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v65);
          swift_bridgeObjectRelease();
        }
        else
        {
          v53 = (void *)swift_slowAlloc();
          bzero(v53, v50);
          v52 = sub_1BA6EB5B4((uint64_t)v53, v49, v45, v65);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v53, -1, -1);
        }
        v54 = sub_1BA6EB330(v52, v45);
        swift_release();
        if ((v54 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v44 += 5;
        if (!--v43)
          goto LABEL_7;
      }
      v55 = sub_1BA6EBD20(v65, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v64;
      v58 = v63;
LABEL_8:
      swift_bridgeObjectRelease();
      v8 = v9 + 1;
      if (v8 == v60)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v58;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v61 = v16;
    swift_endAccess();
    v66[0] = v12;
    v66[1] = v11;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v66, v67);
    v22 = v67[1];
    v62 = v67[0];
    v23 = v67[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v23;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v66[0] = *v17;
    v25 = v66[0];
    *v17 = 0x8000000000000000;
    v26 = v12;
    v27 = v11;
    v29 = sub_1BA6E35A8(v12, v11);
    v30 = *(_QWORD *)(v25 + 16);
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v33 = v28;
    if (*(_QWORD *)(v25 + 24) < v32)
    {
      sub_1BA7AAAE4(v32, isUniquelyReferenced_nonNull_native);
      v34 = sub_1BA6E35A8(v26, v27);
      if ((v33 & 1) != (v35 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v29 = v34;
      v36 = (_QWORD *)v66[0];
      if ((v33 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v37 = (uint64_t *)(v36[7] + 24 * v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v37 = v62;
      v37[1] = v22;
      v37[2] = v21;
      v11 = v27;
LABEL_26:
      *v17 = (uint64_t)v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v36 = (_QWORD *)v66[0];
      if ((v28 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v36 = (_QWORD *)v66[0];
      if ((v33 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v36[(v29 >> 6) + 8] |= 1 << v29;
    v38 = (uint64_t *)(v36[6] + 16 * v29);
    *v38 = v26;
    v38[1] = v27;
    v39 = (uint64_t *)(v36[7] + 24 * v29);
    *v39 = v62;
    v39[1] = v22;
    v39[2] = v21;
    v40 = v36[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_42;
    v11 = v27;
    v36[2] = v42;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BA9A3890@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return sub_1BA9A38A4(a1, a2, (void (*)(uint64_t))sub_1BA67D3F4, (void (*)(uint64_t))sub_1BA6EEDB4, a3);
}

uint64_t sub_1BA9A38A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB86DD80();
    v9 = *(_QWORD *)(*(_QWORD *)(v16 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v9 + 16) + 16))
    {
      v15 = *(_QWORD *)(v16 + 56);
      v10 = swift_bridgeObjectRetain();
      v11 = sub_1BA6E42A0(v10);
      sub_1BA6E3FB8(v11);
      swift_release();
      v12 = v15;
    }
    else
    {
      v12 = sub_1BA6E3F38();
      swift_release();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(a1);
    sub_1BA99EA30(a1, a2, v12, a3, a4, a5);
    a4(a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a5 = a1;
    return ((uint64_t (*)(uint64_t))a3)(a1);
  }
}

uint64_t sub_1BA9A39EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA99F048(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA9A3B1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA99F658(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA9A3C48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return sub_1BA7E6AAC(a1, a2, a3);
}

uint64_t sub_1BA9A3C54@<X0>(char *a1@<X8>)
{
  return sub_1BA9A3D2C((unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&qword_1ED3B5EF0, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D5EC, (uint64_t)&qword_1ED3BA910, a1);
}

uint64_t sub_1BA9A3CC0@<X0>(char *a1@<X8>)
{
  return sub_1BA9A3D2C((unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&qword_1ED3B5EE8, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D4C8, (uint64_t)&qword_1ED3BA908, a1);
}

uint64_t sub_1BA9A3D2C@<X0>(unint64_t *a1@<X1>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), double)@<X4>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  unint64_t v58;
  size_t v59;
  uint64_t isStackAllocationSafe;
  uint64_t v61;
  void *v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unint64_t *v70;
  void (*v71)(uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[7];

  v11 = v6;
  v67 = a6;
  v86[5] = *MEMORY[0x1E0C80C00];
  v70 = a1;
  sub_1BA4A3FB4(0, a1, a2);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v66 - v14;
  v71 = a2;
  v16 = ((uint64_t (*)(_QWORD, double))a2)(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v76 = (char *)&v66 - v21;
  MEMORY[0x1E0C80A78](v22);
  v77 = (char *)&v66 - v23;
  v25 = MEMORY[0x1E0C80A78](v24);
  v68 = (char *)&v66 - v26;
  v27 = *(_QWORD *)(v6 + *(int *)(a4(0, a3, type metadata accessor for FormatSelectorValue, v25) + 36));
  if (!*(_QWORD *)(v27 + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v67, v6, v16);
  v66 = v27;
  v28 = sub_1BA793D58();
  v29 = *(_QWORD *)(*(_QWORD *)(v28 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v29 + 16) + 16))
  {
    v86[0] = *(_QWORD *)(v28 + 56);
    v30 = swift_bridgeObjectRetain();
    v31 = sub_1BA6E42A0(v30);
    sub_1BA6E3FB8(v31);
    swift_release();
    v85 = v86[0];
  }
  else
  {
    v85 = sub_1BA6E3F38();
    swift_release();
  }
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v34 = v68;
  v33(v68, v11, v16);
  v35 = v77;
  v83 = (void (*)(char *, char *, uint64_t))v33;
  v33(v77, (uint64_t)v34, v16);
  v36 = v66;
  v80 = *(_QWORD *)(v66 + 16);
  if (v80)
  {
    v75 = v19;
    v69 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a4)(0, a5, type metadata accessor for FormatSelectorValueSelector);
    v37 = *(_QWORD *)(v69 - 8);
    v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v39 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v39 != -1)
      swift_once();
    v40 = v36 + v38;
    v41 = 0;
    v78 = *(_QWORD *)(v37 + 72);
    v79 = v40;
    v42 = v75;
    v43 = v76;
    v73 = v17;
    v74 = v16;
    v72 = v15;
    do
    {
      v84 = v41;
      v47 = (uint64_t *)(v79 + v78 * v41);
      v48 = *v47;
      v49 = v47[1];
      v81 = v47;
      v86[0] = v48;
      v86[1] = v49;
      swift_bridgeObjectRetain();
      v50 = sub_1BA6E583C(v86);
      swift_bridgeObjectRelease();
      v51 = v50;
      v52 = *(_QWORD *)(v50 + 16);
      if (v52)
      {
        v82 = v51;
        v53 = (uint64_t *)(v51 + 64);
        do
        {
          v54 = *(v53 - 1);
          v55 = *v53;
          v56 = *(_BYTE *)(v54 + 32);
          v57 = v56 & 0x3F;
          v58 = (unint64_t)((1 << v56) + 63) >> 6;
          v59 = 8 * v58;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v57 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v66 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0), v59);
            v61 = sub_1BA6EB5B4((uint64_t)&v66 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v54, v85);
            swift_bridgeObjectRelease();
          }
          else
          {
            v62 = (void *)swift_slowAlloc();
            bzero(v62, v59);
            v61 = sub_1BA6EB5B4((uint64_t)v62, v58, v54, v85);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v62, -1, -1);
          }
          v63 = sub_1BA6EB330(v61, v54);
          swift_release();
          if ((v63 & 1) != 0)
          {
            v64 = sub_1BA6EBD20(v85, v55);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v64 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v15 = v72;
              v16 = v74;
              v83(v72, (char *)v81 + *(int *)(v69 + 36), v74);
              v65 = 0;
              v17 = v73;
              goto LABEL_24;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v53 += 5;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease();
        v65 = 1;
        v17 = v73;
        v16 = v74;
        v15 = v72;
LABEL_24:
        v42 = v75;
        v43 = v76;
        v35 = v77;
      }
      else
      {
        swift_bridgeObjectRelease();
        v65 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v65, 1, v16);
      v83(v42, v35, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {
        v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v44(v43, v42, v16);
        sub_1BA502AD0((uint64_t)v15, v70, v71);
        v45 = *(void (**)(char *, uint64_t))(v17 + 8);
      }
      else
      {
        v45 = *(void (**)(char *, uint64_t))(v17 + 8);
        v45(v42, v16);
        v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v44(v43, v15, v16);
      }
      v46 = v84 + 1;
      v45(v35, v16);
      v41 = v46;
      v44(v35, v43, v16);
    }
    while (v46 != v80);
  }
  else
  {
    v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    swift_bridgeObjectRetain();
  }
  v44(v67, v35, v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v68, v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA9A43D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    v6 = sub_1BA793D58();
    v7 = *(_QWORD *)(*(_QWORD *)(v6 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v7 + 16) + 16))
    {
      v12 = *(_QWORD *)(v6 + 56);
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BA6E42A0(v8);
      sub_1BA6E3FB8(v9);
      swift_release();
      v10 = v12;
    }
    else
    {
      v10 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7855E0(a1, a2, v10, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA9A44F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA99FC68(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA9A461C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  size_t v51;
  uint64_t isStackAllocationSafe;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return a2 & 1;
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v69 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v59 = a2;
  if (v6)
  {
    v68[0] = *(_QWORD *)(v69 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v66 = v68[0];
  }
  else
  {
    v66 = sub_1BA6E3F38();
    swift_release();
  }
  v60 = a3 + 32;
  v58 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
LABEL_8:
  v65 = v9;
  v10 = v60 + 24 * v9;
  v12 = *(_QWORD *)v10;
  v11 = *(_QWORD *)(v10 + 8);
  v62 = *(unsigned __int8 *)(v10 + 16);
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = qword_1ED4768D0;
  v15 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v12, v11);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 24 * v18 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v20 + 16);
      if (!v44)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      v63 = v20;
      v64 = v11;
      v45 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v48 = *(_BYTE *)(v46 + 32);
        v49 = v48 & 0x3F;
        v50 = (unint64_t)((1 << v48) + 63) >> 6;
        v51 = 8 * v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v49 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
          v53 = sub_1BA6EB5B4((uint64_t)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = (void *)swift_slowAlloc();
          bzero(v54, v51);
          v53 = sub_1BA6EB5B4((uint64_t)v54, v50, v46, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v54, -1, -1);
        }
        v55 = sub_1BA6EB330(v53, v46);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v66, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v59 = v62;
LABEL_7:
            v9 = v65 + 1;
            if (v65 + 1 == v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              LOBYTE(a2) = v59;
              return a2 & 1;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 += 5;
        if (!--v44)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v63 = v15;
  swift_endAccess();
  v67[0] = v12;
  v67[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v67, v68);
  v21 = v68[1];
  v64 = v68[0];
  v22 = v68[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v22;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v12;
  v25 = isUniquelyReferenced_nonNull_native;
  v67[0] = *v16;
  v26 = v67[0];
  *v16 = 0x8000000000000000;
  v27 = v24;
  v28 = v11;
  v30 = sub_1BA6E35A8(v24, v11);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v34 = v29;
  if (*(_QWORD *)(v26 + 24) >= v33)
  {
    if ((v25 & 1) != 0)
    {
      v37 = (_QWORD *)v67[0];
      if ((v29 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v37 = (_QWORD *)v67[0];
      if ((v34 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v39 = (uint64_t *)(v37[6] + 16 * v30);
    *v39 = v27;
    v39[1] = v28;
    v40 = (uint64_t *)(v37[7] + 24 * v30);
    *v40 = v64;
    v40[1] = v21;
    v40[2] = v20;
    v41 = v37[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_41;
    v11 = v28;
    v37[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v33, v25);
  v35 = sub_1BA6E35A8(v27, v28);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    v37 = (_QWORD *)v67[0];
    if ((v34 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v38 = (uint64_t *)(v37[7] + 24 * v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v38 = v64;
    v38[1] = v21;
    v38[2] = v20;
    v11 = v28;
LABEL_25:
    *v16 = (uint64_t)v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA9A4C48@<X0>(char *a1@<X8>)
{
  return sub_1BA9A600C((unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&qword_1ED3B5EF0, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D5EC, (uint64_t)&qword_1ED3BA910, a1);
}

uint64_t sub_1BA9A4CB4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  unint64_t v48;
  size_t v49;
  uint64_t isStackAllocationSafe;
  uint64_t v51;
  void *v52;
  char v53;
  char v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v57 = *(_QWORD *)(a2 + 16);
  if (v57)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v3 = *(_QWORD *)(*(_QWORD *)(v65 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
    {
      v64[0] = *(_QWORD *)(v65 + 56);
      v4 = swift_bridgeObjectRetain();
      v5 = sub_1BA6E42A0(v4);
      sub_1BA6E3FB8(v5);
      swift_release();
      v62 = v64[0];
    }
    else
    {
      v62 = sub_1BA6E3F38();
      swift_release();
    }
    v55[1] = a2;
    v56 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = (uint64_t *)(v56 + 24 * v6);
      v9 = *v7;
      v8 = v7[1];
      v10 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      if (v10 != -1)
        swift_once();
      v11 = qword_1ED4768D0;
      v12 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v13 = (uint64_t *)(v11 + 16);
      swift_beginAccess();
      v14 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      v60 = v6;
      if (!v15)
        goto LABEL_13;
      swift_bridgeObjectRetain();
      v16 = sub_1BA6E35A8(v9, v8);
      if ((v17 & 1) == 0)
        break;
      v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 24 * v16 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v42 = *(_QWORD *)(v18 + 16);
      if (v42)
      {
        v59 = v8;
        v61 = v18;
        v43 = (uint64_t *)(v18 + 64);
        do
        {
          v44 = *(v43 - 1);
          v45 = *v43;
          v46 = *(_BYTE *)(v44 + 32);
          v47 = v46 & 0x3F;
          v48 = (unint64_t)((1 << v46) + 63) >> 6;
          v49 = 8 * v48;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v47 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v55 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v49);
            v51 = sub_1BA6EB5B4((uint64_t)v55 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v48, v44, v62);
            swift_bridgeObjectRelease();
          }
          else
          {
            v52 = (void *)swift_slowAlloc();
            bzero(v52, v49);
            v51 = sub_1BA6EB5B4((uint64_t)v52, v48, v44, v62);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v52, -1, -1);
          }
          v53 = sub_1BA6EB330(v51, v44);
          swift_release();
          if ((v53 & 1) != 0)
          {
            v54 = sub_1BA6EBD20(v62, v45);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v54 & 1) != 0)
              break;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v43 += 5;
          --v42;
        }
        while (v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v60 + 1;
      if (v60 + 1 == v57)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    v58 = v12;
    swift_endAccess();
    v63[0] = v9;
    v63[1] = v8;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v63, v64);
    v19 = v64[1];
    v59 = v64[0];
    v20 = v64[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v20;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v9;
    v23 = isUniquelyReferenced_nonNull_native;
    v63[0] = *v13;
    v24 = v63[0];
    *v13 = 0x8000000000000000;
    v25 = v22;
    v26 = v8;
    v28 = sub_1BA6E35A8(v22, v8);
    v29 = *(_QWORD *)(v24 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    v32 = v27;
    if (*(_QWORD *)(v24 + 24) < v31)
    {
      sub_1BA7AAAE4(v31, v23);
      v33 = sub_1BA6E35A8(v25, v26);
      if ((v32 & 1) != (v34 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v28 = v33;
      v35 = (_QWORD *)v63[0];
      if ((v32 & 1) == 0)
        goto LABEL_22;
LABEL_20:
      v36 = (uint64_t *)(v35[7] + 24 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v36 = v59;
      v36[1] = v19;
      v18 = v61;
      v36[2] = v61;
      v8 = v26;
LABEL_24:
      *v13 = (uint64_t)v35;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_25;
    }
    if ((v23 & 1) != 0)
    {
      v35 = (_QWORD *)v63[0];
      if ((v27 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      sub_1BB4C1F6C();
      v35 = (_QWORD *)v63[0];
      if ((v32 & 1) != 0)
        goto LABEL_20;
    }
LABEL_22:
    v35[(v28 >> 6) + 8] |= 1 << v28;
    v37 = (uint64_t *)(v35[6] + 16 * v28);
    *v37 = v25;
    v37[1] = v26;
    v38 = (uint64_t *)(v35[7] + 24 * v28);
    *v38 = v59;
    v38[1] = v19;
    v18 = v61;
    v38[2] = v61;
    v39 = v35[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_40;
    v8 = v26;
    v35[2] = v41;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1BA9A52E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  size_t v51;
  uint64_t isStackAllocationSafe;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return a2;
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v69 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v59 = a2;
  if (v6)
  {
    v68[0] = *(_QWORD *)(v69 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v66 = v68[0];
  }
  else
  {
    v66 = sub_1BA6E3F38();
    swift_release();
  }
  v60 = a3 + 32;
  v58 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
LABEL_8:
  v65 = v9;
  v10 = (uint64_t *)(v60 + 24 * v9);
  v12 = *v10;
  v11 = v10[1];
  v62 = v10[2];
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = qword_1ED4768D0;
  v15 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v12, v11);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 24 * v18 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v20 + 16);
      if (!v44)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      v63 = v20;
      v64 = v11;
      v45 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v48 = *(_BYTE *)(v46 + 32);
        v49 = v48 & 0x3F;
        v50 = (unint64_t)((1 << v48) + 63) >> 6;
        v51 = 8 * v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v49 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
          v53 = sub_1BA6EB5B4((uint64_t)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = (void *)swift_slowAlloc();
          bzero(v54, v51);
          v53 = sub_1BA6EB5B4((uint64_t)v54, v50, v46, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v54, -1, -1);
        }
        v55 = sub_1BA6EB330(v53, v46);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v66, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v59 = v62;
LABEL_7:
            v9 = v65 + 1;
            if (v65 + 1 == v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v59;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 += 5;
        if (!--v44)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v63 = v15;
  swift_endAccess();
  v67[0] = v12;
  v67[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v67, v68);
  v21 = v68[1];
  v64 = v68[0];
  v22 = v68[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v22;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v12;
  v25 = isUniquelyReferenced_nonNull_native;
  v67[0] = *v16;
  v26 = v67[0];
  *v16 = 0x8000000000000000;
  v27 = v24;
  v28 = v11;
  v30 = sub_1BA6E35A8(v24, v11);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v34 = v29;
  if (*(_QWORD *)(v26 + 24) >= v33)
  {
    if ((v25 & 1) != 0)
    {
      v37 = (_QWORD *)v67[0];
      if ((v29 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v37 = (_QWORD *)v67[0];
      if ((v34 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v39 = (uint64_t *)(v37[6] + 16 * v30);
    *v39 = v27;
    v39[1] = v28;
    v40 = (uint64_t *)(v37[7] + 24 * v30);
    *v40 = v64;
    v40[1] = v21;
    v40[2] = v20;
    v41 = v37[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_41;
    v11 = v28;
    v37[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v33, v25);
  v35 = sub_1BA6E35A8(v27, v28);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    v37 = (_QWORD *)v67[0];
    if ((v34 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v38 = (uint64_t *)(v37[7] + 24 * v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v38 = v64;
    v38[1] = v21;
    v38[2] = v20;
    v11 = v28;
LABEL_25:
    *v16 = (uint64_t)v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA9A590C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  unint64_t v53;
  size_t v54;
  uint64_t isStackAllocationSafe;
  uint64_t v56;
  void *v57;
  char v58;
  char v59;
  uint64_t result;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v65 = *(_QWORD *)(a4 + 16);
  if (v65)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v7 = *(_QWORD *)(*(_QWORD *)(v75 + 40) + 16);
    swift_beginAccess();
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 16) + 16);
    v62 = a2;
    if (v8)
    {
      v74[0] = *(_QWORD *)(v75 + 56);
      v9 = swift_bridgeObjectRetain();
      v10 = sub_1BA6E42A0(v9);
      sub_1BA6E3FB8(v10);
      swift_release();
      v72 = v74[0];
    }
    else
    {
      v72 = sub_1BA6E3F38();
      swift_release();
    }
    v64 = a4 + 32;
    v61[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v11 = 0;
    v61[1] = a3;
    v63 = a3;
    while (1)
    {
      v13 = (uint64_t *)(v64 + 32 * v11);
      v15 = *v13;
      v14 = v13[1];
      v16 = v13[3];
      v66 = v13[2];
      v17 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v69 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1)
        swift_once();
      v18 = qword_1ED4768D0;
      v19 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v21 + 16);
      v70 = v11;
      if (!v22)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v23 = sub_1BA6E35A8(v15, v14);
      if ((v24 & 1) == 0)
        break;
      v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v70;
        goto LABEL_8;
      }
      v68 = v14;
      v71 = v25;
      v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        v49 = *(v48 - 1);
        v50 = *v48;
        v51 = *(_BYTE *)(v49 + 32);
        v52 = v51 & 0x3F;
        v53 = (unint64_t)((1 << v51) + 63) >> 6;
        v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          v56 = sub_1BA6EB5B4((uint64_t)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v72);
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          v56 = sub_1BA6EB5B4((uint64_t)v57, v53, v49, v72);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v57, -1, -1);
        }
        v58 = sub_1BA6EB330(v56, v49);
        swift_release();
        if ((v58 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v48 += 5;
        if (!--v47)
          goto LABEL_7;
      }
      v59 = sub_1BA6EBD20(v72, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v70;
      v62 = v66;
      v63 = v69;
LABEL_8:
      swift_bridgeObjectRelease();
      v11 = v12 + 1;
      if (v11 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v62;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v67 = v19;
    swift_endAccess();
    v73[0] = v15;
    v73[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v73, v74);
    v26 = v74[1];
    v68 = v74[0];
    v27 = v74[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71 = v27;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *v20;
    v29 = v73[0];
    *v20 = 0x8000000000000000;
    v30 = v15;
    v31 = v14;
    v33 = sub_1BA6E35A8(v15, v14);
    v34 = *(_QWORD *)(v29 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v37 = v32;
    if (*(_QWORD *)(v29 + 24) < v36)
    {
      sub_1BA7AAAE4(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_1BA6E35A8(v30, v31);
      if ((v37 & 1) != (v39 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v33 = v38;
      v40 = (_QWORD *)v73[0];
      if ((v37 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v41 = v68;
      v41[1] = v26;
      v25 = v71;
      v41[2] = v71;
      v14 = v31;
LABEL_26:
      *v20 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v40 = (_QWORD *)v73[0];
      if ((v32 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v40 = (_QWORD *)v73[0];
      if ((v37 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v42 = (uint64_t *)(v40[6] + 16 * v33);
    *v42 = v30;
    v42[1] = v31;
    v43 = (uint64_t *)(v40[7] + 24 * v33);
    *v43 = v68;
    v43[1] = v26;
    v25 = v71;
    v43[2] = v71;
    v44 = v40[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_42;
    v14 = v31;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BA9A5FA0@<X0>(char *a1@<X8>)
{
  return sub_1BA9A600C((unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&qword_1ED3B5EE8, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D4C8, (uint64_t)&qword_1ED3BA908, a1);
}

uint64_t sub_1BA9A600C@<X0>(unint64_t *a1@<X1>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), double)@<X4>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(char *, uint64_t);
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  unint64_t v54;
  size_t v55;
  uint64_t isStackAllocationSafe;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t *v66;
  void (*v67)(uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[2];
  uint64_t v83;
  uint64_t v84;

  v80 = a5;
  v10 = v6;
  v84 = *MEMORY[0x1E0C80C00];
  v66 = a1;
  sub_1BA4A3FB4(0, a1, a2);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v62 - v14;
  v67 = a2;
  v16 = ((uint64_t (*)(_QWORD, double))a2)(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v73 = (char *)&v62 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v62 - v23;
  v26 = MEMORY[0x1E0C80A78](v25);
  v64 = (char *)&v62 - v27;
  v63 = *(_QWORD *)(v10 + *(int *)(a4(0, a3, type metadata accessor for FormatSelectorValue, v26) + 36));
  if (!*(_QWORD *)(v63 + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(a6, v10, v16);
  v62 = a6;
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v28 = v83;
  v29 = *(_QWORD *)(*(_QWORD *)(v83 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v29 + 16) + 16))
  {
    v82[0] = *(_QWORD *)(v28 + 56);
    v30 = swift_bridgeObjectRetain();
    v31 = sub_1BA6E42A0(v30);
    sub_1BA6E3FB8(v31);
    swift_release();
    v81 = v82[0];
  }
  else
  {
    v81 = sub_1BA6E3F38();
    swift_release();
  }
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v34 = v64;
  v33(v64, v10, v16);
  v79 = (void (*)(char *, char *, uint64_t))v33;
  v33(v24, (uint64_t)v34, v16);
  v35 = v63;
  v36 = v73;
  v76 = *(_QWORD *)(v63 + 16);
  if (v76)
  {
    v72 = v24;
    v65 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a4)(0, v80, type metadata accessor for FormatSelectorValueSelector);
    v37 = *(_QWORD *)(v65 - 8);
    v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v39 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v39 != -1)
      swift_once();
    v40 = v35 + v38;
    v41 = 0;
    v74 = *(_QWORD *)(v37 + 72);
    v75 = v40;
    v24 = v72;
    v70 = v17;
    v71 = v16;
    v68 = v19;
    v69 = v15;
    do
    {
      v80 = v41;
      v44 = (uint64_t *)(v75 + v74 * v41);
      v45 = *v44;
      v46 = v44[1];
      v77 = v44;
      v82[0] = v45;
      v82[1] = v46;
      swift_bridgeObjectRetain();
      v47 = sub_1BA6E583C(v82);
      swift_bridgeObjectRelease();
      v48 = *(_QWORD *)(v47 + 16);
      if (v48)
      {
        v78 = v47;
        v49 = (uint64_t *)(v47 + 64);
        do
        {
          v50 = *(v49 - 1);
          v51 = *v49;
          v52 = *(_BYTE *)(v50 + 32);
          v53 = v52 & 0x3F;
          v54 = (unint64_t)((1 << v52) + 63) >> 6;
          v55 = 8 * v54;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v53 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
            v57 = sub_1BA6EB5B4((uint64_t)&v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v81);
            swift_bridgeObjectRelease();
          }
          else
          {
            v58 = (void *)swift_slowAlloc();
            bzero(v58, v55);
            v57 = sub_1BA6EB5B4((uint64_t)v58, v54, v50, v81);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v58, -1, -1);
          }
          v59 = sub_1BA6EB330(v57, v50);
          swift_release();
          if ((v59 & 1) != 0)
          {
            v60 = sub_1BA6EBD20(v81, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v60 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v15 = v69;
              v16 = v71;
              v79(v69, (char *)v77 + *(int *)(v65 + 36), v71);
              v61 = 0;
              v17 = v70;
              goto LABEL_24;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v49 += 5;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
        v61 = 1;
        v17 = v70;
        v16 = v71;
        v15 = v69;
LABEL_24:
        v19 = v68;
        v24 = v72;
        v36 = v73;
      }
      else
      {
        swift_bridgeObjectRelease();
        v61 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v61, 1, v16);
      v79(v19, v24, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {
        v42 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v42(v36, v19, v16);
        sub_1BA502AD0((uint64_t)v15, v66, v67);
        v43 = *(void (**)(char *, uint64_t))(v17 + 8);
      }
      else
      {
        v43 = *(void (**)(char *, uint64_t))(v17 + 8);
        v43(v19, v16);
        v42 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v42(v36, v15, v16);
      }
      v41 = v80 + 1;
      v43(v24, v16);
      v42(v24, v36, v16);
    }
    while (v41 != v76);
  }
  else
  {
    v42 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    swift_bridgeObjectRetain();
  }
  v42(v62, v24, v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v64, v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA9A66BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA99F048(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA9A67F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1BA9A6F54(a1, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&qword_1ED3B5EF0, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D5EC, (uint64_t)&qword_1ED3BA910, a2);
}

uint64_t sub_1BA9A685C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  unint64_t v54;
  size_t v55;
  uint64_t isStackAllocationSafe;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  uint64_t result;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  _QWORD v75[8];

  v75[6] = *MEMORY[0x1E0C80C00];
  v66 = *(_QWORD *)(a4 + 16);
  if (v66)
  {
    v7 = *(_QWORD *)(a1 + 64);
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 40) + 16);
    swift_beginAccess();
    v9 = *(_QWORD *)(*(_QWORD *)(v8 + 16) + 16);
    v63 = a2;
    if (v9)
    {
      v75[0] = *(_QWORD *)(v7 + 56);
      swift_retain();
      v10 = swift_bridgeObjectRetain();
      v11 = sub_1BA6E42A0(v10);
      sub_1BA6E3FB8(v11);
      swift_release();
      v73 = v75[0];
    }
    else
    {
      swift_retain();
      v73 = sub_1BA6E3F38();
      swift_release();
    }
    v65 = a4 + 32;
    v62[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v12 = 0;
    v62[1] = a3;
    v64 = a3;
    while (1)
    {
      v14 = (uint64_t *)(v65 + 32 * v12);
      v16 = *v14;
      v15 = v14[1];
      v17 = v14[3];
      v67 = v14[2];
      v18 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v70 = v17;
      swift_bridgeObjectRetain();
      if (v18 != -1)
        swift_once();
      v19 = qword_1ED4768D0;
      v20 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v21 = (uint64_t *)(v19 + 16);
      swift_beginAccess();
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v22 + 16);
      v71 = v12;
      if (!v23)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v24 = sub_1BA6E35A8(v16, v15);
      if ((v25 & 1) == 0)
        break;
      v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v24 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v48 = *(_QWORD *)(v26 + 16);
      if (!v48)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v71;
        goto LABEL_8;
      }
      v69 = v15;
      v72 = v26;
      v49 = (uint64_t *)(v26 + 64);
      while (1)
      {
        v50 = *(v49 - 1);
        v51 = *v49;
        v52 = *(_BYTE *)(v50 + 32);
        v53 = v52 & 0x3F;
        v54 = (unint64_t)((1 << v52) + 63) >> 6;
        v55 = 8 * v54;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v53 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
          v57 = sub_1BA6EB5B4((uint64_t)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v73);
          swift_bridgeObjectRelease();
        }
        else
        {
          v58 = (void *)swift_slowAlloc();
          bzero(v58, v55);
          v57 = sub_1BA6EB5B4((uint64_t)v58, v54, v50, v73);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v58, -1, -1);
        }
        v59 = sub_1BA6EB330(v57, v50);
        swift_release();
        if ((v59 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v49 += 5;
        if (!--v48)
          goto LABEL_7;
      }
      v60 = sub_1BA6EBD20(v73, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v71;
      v63 = v67;
      v64 = v70;
LABEL_8:
      swift_bridgeObjectRelease();
      v12 = v13 + 1;
      if (v12 == v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v63;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v68 = v20;
    swift_endAccess();
    v74[0] = v16;
    v74[1] = v15;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v74, v75);
    v27 = v75[1];
    v69 = v75[0];
    v28 = v75[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v28;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = *v21;
    v30 = v74[0];
    *v21 = 0x8000000000000000;
    v31 = v16;
    v32 = v15;
    v34 = sub_1BA6E35A8(v16, v15);
    v35 = *(_QWORD *)(v30 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v38 = v33;
    if (*(_QWORD *)(v30 + 24) < v37)
    {
      sub_1BA7AAAE4(v37, isUniquelyReferenced_nonNull_native);
      v39 = sub_1BA6E35A8(v31, v32);
      if ((v38 & 1) != (v40 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v34 = v39;
      v41 = (_QWORD *)v74[0];
      if ((v38 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v42 = (uint64_t *)(v41[7] + 24 * v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v42 = v69;
      v42[1] = v27;
      v26 = v72;
      v42[2] = v72;
      v15 = v32;
LABEL_26:
      *v21 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v41 = (_QWORD *)v74[0];
      if ((v33 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v41 = (_QWORD *)v74[0];
      if ((v38 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    v43 = (uint64_t *)(v41[6] + 16 * v34);
    *v43 = v31;
    v43[1] = v32;
    v44 = (uint64_t *)(v41[7] + 24 * v34);
    *v44 = v69;
    v44[1] = v27;
    v26 = v72;
    v44[2] = v72;
    v45 = v41[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_42;
    v15 = v32;
    v41[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BA9A6EE8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1BA9A6F54(a1, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&qword_1ED3B5EE8, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), double))sub_1BA68D4C8, (uint64_t)&qword_1ED3BA908, a2);
}

uint64_t sub_1BA9A6F54@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), double)@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  unint64_t v58;
  size_t v59;
  uint64_t isStackAllocationSafe;
  uint64_t v61;
  void *v62;
  char v63;
  char v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t *v71;
  void (*v72)(uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[7];

  v12 = v7;
  v87[5] = *MEMORY[0x1E0C80C00];
  v71 = a2;
  sub_1BA4A3FB4(0, a2, a3);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v67 - v17;
  v72 = a3;
  v19 = ((uint64_t (*)(_QWORD, double))a3)(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v77 = (char *)&v67 - v24;
  MEMORY[0x1E0C80A78](v25);
  v78 = (char *)&v67 - v26;
  v28 = MEMORY[0x1E0C80A78](v27);
  v69 = (char *)&v67 - v29;
  v68 = *(_QWORD *)(v12 + *(int *)(a5(0, a4, type metadata accessor for FormatSelectorValue, v28) + 36));
  if (!*(_QWORD *)(v68 + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16))(a7, v12, v19);
  v67 = a7;
  v30 = *(_QWORD *)(a1 + 64);
  v31 = *(_QWORD *)(*(_QWORD *)(v30 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v31 + 16) + 16))
  {
    v87[0] = *(_QWORD *)(v30 + 56);
    swift_retain();
    v32 = swift_bridgeObjectRetain();
    v33 = sub_1BA6E42A0(v32);
    sub_1BA6E3FB8(v33);
    swift_release();
    v86 = v87[0];
  }
  else
  {
    swift_retain();
    v86 = sub_1BA6E3F38();
    swift_release();
  }
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v36 = v69;
  v35(v69, v12, v19);
  v37 = v78;
  v35(v78, (uint64_t)v36, v19);
  v38 = v68;
  v83 = *(_QWORD *)(v68 + 16);
  if (v83)
  {
    v82 = v35;
    v76 = v22;
    v70 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a5)(0, a6, type metadata accessor for FormatSelectorValueSelector);
    v39 = *(_QWORD *)(v70 - 8);
    v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v41 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = v38 + v40;
    v43 = 0;
    v80 = *(_QWORD *)(v39 + 72);
    v81 = v42;
    v44 = v76;
    v45 = v77;
    v74 = v20;
    v75 = v19;
    v73 = v18;
    do
    {
      v85 = v43;
      v48 = (uint64_t *)(v81 + v80 * v43);
      v49 = v48[1];
      v87[0] = *v48;
      v87[1] = v49;
      swift_bridgeObjectRetain();
      v50 = sub_1BA6E583C(v87);
      swift_bridgeObjectRelease();
      v51 = v50;
      v52 = *(_QWORD *)(v50 + 16);
      if (v52)
      {
        v79 = v48;
        v84 = v51;
        v53 = (uint64_t *)(v51 + 64);
        do
        {
          v54 = *(v53 - 1);
          v55 = *v53;
          v56 = *(_BYTE *)(v54 + 32);
          v57 = v56 & 0x3F;
          v58 = (unint64_t)((1 << v56) + 63) >> 6;
          v59 = 8 * v58;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v57 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v67 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0), v59);
            v61 = sub_1BA6EB5B4((uint64_t)&v67 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v54, v86);
            swift_bridgeObjectRelease();
          }
          else
          {
            v62 = (void *)swift_slowAlloc();
            bzero(v62, v59);
            v61 = sub_1BA6EB5B4((uint64_t)v62, v58, v54, v86);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v62, -1, -1);
          }
          v63 = sub_1BA6EB330(v61, v54);
          swift_release();
          if ((v63 & 1) != 0)
          {
            v64 = sub_1BA6EBD20(v86, v55);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v64 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v18 = v73;
              v19 = v75;
              v65 = (void (*)(char *, char *, uint64_t))v82;
              v82(v73, (uint64_t)v79 + *(int *)(v70 + 36), v75);
              v66 = 0;
              v20 = v74;
              v44 = v76;
              v45 = v77;
              v37 = v78;
              goto LABEL_26;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v53 += 5;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease();
        v66 = 1;
        v20 = v74;
        v19 = v75;
        v18 = v73;
        v44 = v76;
        v45 = v77;
        v37 = v78;
      }
      else
      {
        swift_bridgeObjectRelease();
        v66 = 1;
      }
      v65 = (void (*)(char *, char *, uint64_t))v82;
LABEL_26:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, v66, 1, v19);
      v65(v44, v37, v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
      {
        v46 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v46(v45, v44, v19);
        sub_1BA502AD0((uint64_t)v18, v71, v72);
        v47 = *(void (**)(char *, uint64_t))(v20 + 8);
      }
      else
      {
        v47 = *(void (**)(char *, uint64_t))(v20 + 8);
        v47(v44, v19);
        v46 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v46(v45, v18, v19);
      }
      v43 = v85 + 1;
      v47(v37, v19);
      v46(v37, v45, v19);
    }
    while (v43 != v83);
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    swift_bridgeObjectRetain();
  }
  v46(v67, v37, v19);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v69, v19);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA9A760C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  if (*(_QWORD *)(a3 + 16))
  {
    v7 = *(_QWORD *)(a1 + 64);
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v8 + 16) + 16))
    {
      v13 = *(_QWORD *)(v7 + 56);
      swift_retain();
      v9 = swift_bridgeObjectRetain();
      v10 = sub_1BA6E42A0(v9);
      sub_1BA6E3FB8(v10);
      swift_release();
      v11 = v13;
    }
    else
    {
      swift_retain();
      v11 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7855E0(a2, a3, v11, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a4 = a2;
    return swift_retain();
  }
}

void sub_1BA9A773C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

id sub_1BA9A7778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  id (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;

  v4 = *(_BYTE *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v16 = sub_1BA9B00A8;
  v17 = v6;
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1BA61387C;
  v15 = &block_descriptor_391;
  v8 = _Block_copy(&v12);
  v9 = v3;
  v10 = objc_msgSend(v7, sel_initWithDynamicProvider_, v8, v12, v13);
  _Block_release(v8);
  swift_release();
  return v10;
}

void sub_1BA9A7C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

id sub_1BA9A7C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  id (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;

  v4 = *(_BYTE *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v16 = sub_1BA9B00A8;
  v17 = v6;
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1BA61387C;
  v15 = &block_descriptor_194;
  v8 = _Block_copy(&v12);
  v9 = v3;
  v10 = objc_msgSend(v7, sel_initWithDynamicProvider_, v8, v12, v13);
  _Block_release(v8);
  swift_release();
  return v10;
}

void sub_1BA9A80D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

id sub_1BA9A8150()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + 24) = v3;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  *(_QWORD *)(v2 - 96) = sub_1BA9B00A8;
  *(_QWORD *)(v2 - 88) = v5;
  *(_QWORD *)(v2 - 128) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v2 - 120) = 1107296256;
  *(_QWORD *)(v2 - 112) = sub_1BA61387C;
  *(_QWORD *)(v2 - 104) = &block_descriptor_326;
  v7 = _Block_copy((const void *)(v2 - 128));
  v8 = v1;
  v9 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);
  swift_release();
  return v9;
}

void sub_1BA9A85F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

id sub_1BA9A8630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  id (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  v4 = *(_BYTE *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v16 = sub_1BA6138CC;
  v17 = v6;
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1BA61387C;
  v15 = &block_descriptor_46;
  v8 = _Block_copy(&v12);
  v9 = v3;
  v10 = objc_msgSend(v7, sel_initWithDynamicProvider_, v8, v12, v13);
  _Block_release(v8);
  swift_release();
  return v10;
}

void sub_1BA9A8ACC(uint64_t a1, uint64_t a2)
{
  sub_1BA745DA8(a1, a2);
}

void sub_1BA9A8AF8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1BA9A8B3C(uint64_t a1, unint64_t a2)
{
  unint64_t *v2;

  *v2 = a2;
  return sub_1BA74444C(a2);
}

void sub_1BA9A8CEC(uint64_t a1, uint64_t a2)
{
  sub_1BA745DA8(a1, a2);
}

void sub_1BA9A8D18(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1BA9A8D5C(uint64_t a1, unint64_t a2)
{
  unint64_t *v2;

  *v2 = a2;
  return sub_1BA74444C(a2);
}

void sub_1BA9A8F04(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA9A8F58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a2;
  return swift_retain();
}

void sub_1BA9A8F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = swift_allocObject();
  sub_1BA9A8F04(v4, v7);
  if (v2)
  {
    swift_deallocUninitializedObject();
  }
  else
  {
    sub_1BA9A8F04(v4, v6);
    v9 = *(_QWORD *)(v5 - 128);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 - 224);
    *(_QWORD *)(v8 + 24) = v9;
    *v3 = v8 | 0x3000000000000000;
  }
  JUMPOUT(0x1BA9A8F64);
}

void sub_1BA9A9738(uint64_t a1, uint64_t a2)
{
  sub_1BA742998(a1, a2);
}

void sub_1BA9A97AC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA9A9800(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a2;
  return swift_retain();
}

void sub_1BA9A983C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = swift_allocObject();
  sub_1BA9A97AC(v4, v7);
  if (v2)
  {
    swift_deallocUninitializedObject();
  }
  else
  {
    sub_1BA9A97AC(v4, v6);
    v9 = *(_QWORD *)(v5 - 128);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v8 + 24) = v9;
    *v3 = v8 | 0x3000000000000000;
  }
  JUMPOUT(0x1BA9A980CLL);
}

void sub_1BA9A9F94(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA9A9FE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a2;
  return swift_retain();
}

