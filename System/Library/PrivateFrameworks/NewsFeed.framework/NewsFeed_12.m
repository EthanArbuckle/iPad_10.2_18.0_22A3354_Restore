uint64_t sub_1BAC64CD0(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v3 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v3;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  v5 = *v2;
  if (*v2 < 0)
  {
    v6 = result;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BB57402C(v6, (uint64_t)v9, v7, v8);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAC64D70()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

void sub_1BAC64E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  if ((v3 & 1) != 0)
  {
    sub_1BA69C808(v1, v2, 1);
    v5 = sub_1BA862600((uint64_t)&unk_1E72542E0);
    sub_1BB3757A0(v1, v2, v5, 1, v4);
    if (!v0)
      sub_1BA502AD0(v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BA968268(v1, v2, v3);
  }
}

void sub_1BAC64F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  if ((v3 & 1) != 0)
  {
    sub_1BA69C808(v1, v2, 1);
    v5 = sub_1BA862600((uint64_t)&unk_1E7254308);
    sub_1BB3757A0(v1, v2, v5, 1, v4);
    if (!v0)
      JUMPOUT(0x1BAC64F44);
    JUMPOUT(0x1BAC64F5CLL);
  }
  JUMPOUT(0x1BAC64F74);
}

void sub_1BAC64FF0()
{
  __asm { BR              X10 }
}

void sub_1BAC65034()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  if (v0 <= 0xFD)
  {
    sub_1BA968194(v2, v1, v0);
    sub_1BAC64D70();
    sub_1BA968240(v2, v1, v0, 0);
  }
}

uint64_t sub_1BAC65170(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BAC651E4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA71CA6C(result);
  return result;
}

unint64_t sub_1BAC651F8(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA719718(result);
  return result;
}

unint64_t sub_1BAC6520C(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  switch((a14 >> 18) & 4 | ((unsigned __int16)a14 >> 14))
  {
    case 0u:
      result = sub_1BA7147C0(result, a2, a3, a4, a5, a6);
      break;
    case 1u:
      sub_1BA713CDC(result, a2, a3, a4, a5, a6, a7, SHIBYTE(a7));
      result = sub_1BA714334(a8, a9, a10, a11, a12, a13, a14 & 0xFFEF3FFF);
      break;
    case 5u:
      result = sub_1BA690C00(result, a2, a3, a4);
      break;
    case 6u:
      sub_1BA739250(result);
      result = sub_1BA75D96C(a2, a3);
      break;
    case 7u:
      result = sub_1BAC6535C(a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAC6535C(uint64_t result)
{
  if ((result & 0xFE) != 0xC)
    return swift_retain();
  return result;
}

uint64_t sub_1BAC65374(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      result = a7();
      break;
    case 3:
      result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      result = sub_1BA967F18(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAC653C4(uint64_t result)
{
  if ((result & 0xFE) != 0xC)
    return swift_release();
  return result;
}

uint64_t sub_1BAC653DC(uint64_t a1)
{
  sub_1BA4B6260(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_OWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  return a1;
}

uint64_t sub_1BAC6543C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23[3];
  char v24;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23[-1] - v3;
  v5 = type metadata accessor for FormatURL();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23[-1] - v10;
  v12 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v14, v15);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 2, v5);
  if (!(_DWORD)result)
  {
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v8[24])
      {
        v19 = *(_QWORD *)v8;
        v18 = *((_QWORD *)v8 + 1);
        v20 = *((_QWORD *)v8 + 2);
        v23[0] = v19;
        v23[1] = v18;
        v23[2] = v20;
        v24 = 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1BB6B84D4(v23, &v24);
        if (!v1)
        {
          sub_1BB3757A0(v19, v18, v21, 1, (uint64_t)v4);
          sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
          swift_bridgeObjectRelease();
        }
        sub_1BA5A7EF8(v19, v18, v20, 0);
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  return result;
}

uint64_t sub_1BAC6569C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[3];
  char v17;

  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16[-1] - v3;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16[-1] - v6;
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v8 = *(_QWORD *)(v0 + 8);
    v10 = *(_QWORD *)(v0 + 16);
    v16[0] = *(_QWORD *)v0;
    v9 = v16[0];
    v16[1] = v8;
    v16[2] = v10;
    v17 = 5;
    sub_1BA60DF54(v16[0], v8, v10, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BB6B84D4(v16, &v17);
    if (v1)
      return sub_1BA60DFC4(v9, v8, v10, 1);
    sub_1BB3757A0(v9, v8, v11, 1, (uint64_t)v7);
    sub_1BA502AD0((uint64_t)v7, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BA60DFC4(v9, v8, v10, 1);
  }
  v13 = type metadata accessor for FormatPurchaseLandingPage();
  sub_1BA57B488(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v14 = type metadata accessor for FormatPostPurchase();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v4, 1, v14) == 1)
    return sub_1BA502AD0((uint64_t)v4, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BAC6543C();
  return sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
}

void sub_1BAC658D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  char *v12;
  _QWORD v13[2];

  v13[1] = a1;
  v2 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v2);
  v13[0] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA4C2DD8(v1, (uint64_t)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v12 = (char *)sub_1BAC65A94 + 4 * byte_1BB8A65D9[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAC65A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA5D5518(v1, v0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BA57B488(v0, v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v3 = type metadata accessor for FormatPostPurchase();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_1BA502AD0(v0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    return sub_1BA502AD0(v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  else
  {
    sub_1BAC6543C();
    sub_1BA502AD0(v0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    return sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  }
}

uint64_t sub_1BAC65CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[7];
  char v15;
  uint64_t v16[3];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v14[-v3];
  v5 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for FormatRemoteFont();
  sub_1BA4C2DD8(v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
    return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v7[24])
  {
    v11 = *(_QWORD *)v7;
    v10 = *((_QWORD *)v7 + 1);
    v12 = *((_QWORD *)v7 + 2);
    v16[0] = v11;
    v16[1] = v10;
    v16[2] = v12;
    v15 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BB6B84D4(v16, &v15);
    if (!v1)
    {
      sub_1BB3757A0(v11, v10, v13, 1, (uint64_t)v4);
      sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    return sub_1BA5A7EF8(v11, v10, v12, 0);
  }
  return result;
}

uint64_t sub_1BAC65EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 72);
  v13 = *(_OWORD *)(a1 + 104);
  v14 = *(_OWORD *)(a1 + 88);
  v12 = *(_OWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 136);
  v10 = *(_BYTE *)(a1 + 144);
  swift_release();
  sub_1BA4B6260(v16, v2, v3, v4, v5, v6, v7, v8, v15, BYTE8(v15), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1BAC65F98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_BYTE *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 112);
  v18 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 128);
  v16 = *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAA4E044(v12, v11, v2, v3, v4, v5, v6, v7, v8);
  sub_1BAA4E044(v20, v19, v18, v17, v16, v15, v14, v13, v9);
  return a1;
}

uint64_t sub_1BAC6607C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 3:
      goto LABEL_4;
    case 4:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAC66130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 3:
      goto LABEL_4;
    case 4:
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAC661E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v2);
  v128 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v110 = (uint64_t)&v102 - v5;
  MEMORY[0x1E0C80A78](v6);
  v111 = (uint64_t)&v102 - v7;
  MEMORY[0x1E0C80A78](v8);
  v112 = (uint64_t)&v102 - v9;
  MEMORY[0x1E0C80A78](v10);
  v113 = (uint64_t)&v102 - v11;
  MEMORY[0x1E0C80A78](v12);
  v114 = (uint64_t)&v102 - v13;
  MEMORY[0x1E0C80A78](v14);
  v115 = (uint64_t)&v102 - v15;
  MEMORY[0x1E0C80A78](v16);
  v117 = (uint64_t)&v102 - v17;
  MEMORY[0x1E0C80A78](v18);
  v116 = (uint64_t)&v102 - v19;
  MEMORY[0x1E0C80A78](v20);
  v119 = (uint64_t)&v102 - v21;
  MEMORY[0x1E0C80A78](v22);
  v118 = (uint64_t)&v102 - v23;
  MEMORY[0x1E0C80A78](v24);
  v120 = (uint64_t)&v102 - v25;
  MEMORY[0x1E0C80A78](v26);
  v123 = (char *)&v102 - v27;
  MEMORY[0x1E0C80A78](v28);
  v127 = (char *)&v102 - v29;
  MEMORY[0x1E0C80A78](v30);
  v121 = (uint64_t)&v102 - v31;
  MEMORY[0x1E0C80A78](v32);
  v122 = (uint64_t)&v102 - v33;
  MEMORY[0x1E0C80A78](v34);
  v124 = (uint64_t)&v102 - v35;
  MEMORY[0x1E0C80A78](v36);
  v125 = (uint64_t)&v102 - v37;
  MEMORY[0x1E0C80A78](v38);
  v126 = (uint64_t)&v102 - v39;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v102 - v41;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v102 - v44;
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v102 - v47;
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v102 - v50;
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)&v102 - v53;
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v102 - v56;
  MEMORY[0x1E0C80A78](v58);
  v60 = (char *)&v102 - v59;
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)&v102 - v62;
  v129 = a1;
  v64 = (uint64_t)v130;
  result = sub_1BA54AC58();
  if (!v64)
  {
    v130 = v63;
    v109 = v60;
    v108 = v57;
    v107 = v54;
    v106 = v51;
    v105 = v48;
    v104 = v45;
    v103 = v42;
    v66 = (uint64_t)v128;
    v67 = (int *)type metadata accessor for FormatRemoteVideo();
    v68 = v131;
    sub_1BA54AC58();
    sub_1BA54AC58();
    v69 = (uint64_t)v130;
    sub_1BA57B488(v68 + v67[7], (uint64_t)v130, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v70 = type metadata accessor for FormatURL();
    v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48);
    if (v71(v69, 1, v70) == 1)
    {
      sub_1BA502AD0(v69, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v72 = (uint64_t)v109;
    sub_1BA57B488(v68 + v67[8], (uint64_t)v109, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v72, 1, v70) == 1)
    {
      sub_1BA502AD0(v72, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v73 = (uint64_t)v127;
    v74 = (uint64_t)v108;
    sub_1BA57B488(v68 + v67[9], (uint64_t)v108, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v74, 1, v70) == 1)
    {
      sub_1BA502AD0(v74, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v75 = (uint64_t)v107;
    sub_1BA57B488(v68 + v67[10], (uint64_t)v107, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v75, 1, v70) == 1)
    {
      sub_1BA502AD0(v75, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v76 = (uint64_t)v106;
    sub_1BA57B488(v68 + v67[11], (uint64_t)v106, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v76, 1, v70) == 1)
    {
      sub_1BA502AD0(v76, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v76, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v77 = (uint64_t)v105;
    sub_1BA57B488(v68 + v67[12], (uint64_t)v105, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v77, 1, v70) == 1)
    {
      sub_1BA502AD0(v77, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v78 = (uint64_t)v104;
    sub_1BA57B488(v68 + v67[13], (uint64_t)v104, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v78, 1, v70) == 1)
    {
      sub_1BA502AD0(v78, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v78, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v79 = (uint64_t)v103;
    sub_1BA57B488(v68 + v67[14], (uint64_t)v103, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v79, 1, v70) == 1)
    {
      sub_1BA502AD0(v79, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v80 = v126;
    sub_1BA57B488(v68 + v67[15], v126, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v80, 1, v70) == 1)
    {
      sub_1BA502AD0(v80, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v80, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v81 = v125;
    sub_1BA57B488(v68 + v67[16], v125, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v81, 1, v70) == 1)
    {
      sub_1BA502AD0(v81, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v82 = v124;
    sub_1BA57B488(v68 + v67[17], v124, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v82, 1, v70) == 1)
    {
      sub_1BA502AD0(v82, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v82, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v83 = v122;
    sub_1BA57B488(v68 + v67[18], v122, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v84 = v71(v83, 1, v70);
    v85 = (uint64_t)v123;
    if (v84 == 1)
    {
      sub_1BA502AD0(v83, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v83, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    v86 = v121;
    sub_1BA57B488(v68 + v67[19], v121, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v86, 1, v70) == 1)
    {
      sub_1BA502AD0(v86, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v73 = (uint64_t)v127;
    }
    sub_1BA57B488(v68 + v67[20], v73, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v73, 1, v70) == 1)
    {
      sub_1BA502AD0(v73, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA57B488(v68 + v67[21], v85, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v85, 1, v70) == 1)
    {
      sub_1BA502AD0(v85, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v87 = v120;
    sub_1BA57B488(v68 + v67[22], v120, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v87, 1, v70) == 1)
    {
      sub_1BA502AD0(v87, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v88 = v118;
    sub_1BA57B488(v68 + v67[23], v118, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v88, 1, v70) == 1)
    {
      sub_1BA502AD0(v88, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v89 = v119;
    sub_1BA57B488(v68 + v67[24], v119, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v89, 1, v70) == 1)
    {
      sub_1BA502AD0(v89, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v90 = v116;
    sub_1BA57B488(v68 + v67[25], v116, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v90, 1, v70) == 1)
    {
      sub_1BA502AD0(v90, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v116, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v91 = v117;
    sub_1BA57B488(v68 + v67[26], v117, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v91, 1, v70) == 1)
    {
      sub_1BA502AD0(v117, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v117, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v92 = v115;
    sub_1BA57B488(v68 + v67[27], v115, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v92, 1, v70) == 1)
    {
      sub_1BA502AD0(v115, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v93 = v114;
    sub_1BA57B488(v68 + v67[28], v114, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v93, 1, v70) == 1)
    {
      sub_1BA502AD0(v114, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      sub_1BA4A2E80(v114, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v94 = v113;
    sub_1BA57B488(v68 + v67[29], v113, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v94, 1, v70) == 1)
    {
      sub_1BA502AD0(v113, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      v95 = v113;
      sub_1BA54AC58();
      sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v96 = v112;
    sub_1BA57B488(v68 + v67[30], v112, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v96, 1, v70) == 1)
    {
      sub_1BA502AD0(v112, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      v97 = v112;
      sub_1BA54AC58();
      sub_1BA4A2E80(v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v98 = v111;
    sub_1BA57B488(v68 + v67[31], v111, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v98, 1, v70) == 1)
    {
      sub_1BA502AD0(v111, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      v99 = v111;
      sub_1BA54AC58();
      sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v100 = v110;
    sub_1BA57B488(v68 + v67[32], v110, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v100, 1, v70) == 1)
    {
      sub_1BA502AD0(v110, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      v101 = v110;
      sub_1BA54AC58();
      sub_1BA4A2E80(v101, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA57B488(v68 + v67[33], v66, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v71(v66, 1, v70) == 1)
    {
      return sub_1BA502AD0(v66, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    }
    else
    {
      sub_1BA54AC58();
      return sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
  }
  return result;
}

void sub_1BAC67464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[3];
  char v11;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10[-1] - v3;
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v6 = *(_QWORD *)(v0 + 8);
    v5 = *(_QWORD *)(v0 + 16);
    v10[0] = *(_QWORD *)v0;
    v7 = v10[0];
    v10[1] = v6;
    v10[2] = v5;
    v11 = 5;
    sub_1BA60DF54(v10[0], v6, v5, 1);
    v8 = sub_1BB6B84D4(v10, &v11);
    if (!v1)
    {
      sub_1BB3757A0(v7, v6, v8, 1, (uint64_t)v4);
      sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BAC67580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22[3];
  char v23;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22[-1] - v3;
  v5 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22[-1] - v9;
  v11 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v13, v14);
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v7[24])
    {
      v17 = *(_QWORD *)v7;
      v16 = *((_QWORD *)v7 + 1);
      v18 = *((_QWORD *)v7 + 2);
      v22[0] = v17;
      v22[1] = v16;
      v22[2] = v18;
      v23 = 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1BB6B84D4(v22, &v23);
      if (!v1)
      {
        sub_1BB3757A0(v17, v16, v19, 1, (uint64_t)v4);
        sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
      sub_1BA5A7EF8(v17, v16, v18, 0);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

void sub_1BAC677C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[7];
  char v15;
  uint64_t v16[3];

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-v7];
  v10 = *(_QWORD *)v0;
  v9 = *(_QWORD *)(v0 + 8);
  v11 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    if ((v11 & 1) != 0)
    {
      v12 = sub_1BA862600((uint64_t)&unk_1E7254B20);
      sub_1BB3757A0(v10, v9, v12, 1, (uint64_t)v5);
      v8 = v5;
      if (v2)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_4:
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      goto LABEL_5;
    }
  }
  else
  {
    v16[0] = *(_QWORD *)v0;
    v16[1] = v9;
    v16[2] = v11;
    v15 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BB6B84D4(v16, &v15);
    if (!v2)
    {
      sub_1BB3757A0(v10, v9, v13, 1, (uint64_t)v8);
      goto LABEL_4;
    }
  }
}

uint64_t sub_1BAC67944(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v3 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v63 = (uint64_t)&v53 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v53 - v13;
  v15 = *(unsigned __int8 *)(v1 + 24);
  v17 = *(_QWORD *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 40);
  v18 = *(unsigned __int8 *)(v1 + 48);
  result = *(_QWORD *)(v1 + 56);
  v20 = *(unsigned __int8 *)(v1 + 72);
  v21 = *(_QWORD *)(v1 + 80);
  v22 = *(_QWORD *)(v1 + 88);
  v61 = *(_QWORD *)(v1 + 64);
  v62 = v21;
  v23 = *(unsigned __int8 *)(v1 + 96);
  if (v15 == 255)
  {
LABEL_4:
    v35 = v20;
    v36 = v63;
    if (v18 == 255)
      goto LABEL_14;
    goto LABEL_5;
  }
  v58 = *(unsigned __int8 *)(v1 + 96);
  v59 = v7;
  v24 = a1;
  v26 = *(_QWORD *)(v1 + 8);
  v25 = *(_QWORD *)(v1 + 16);
  if ((v15 & 1) == 0)
  {
    v27 = result;
    v28 = v26;
    v29 = v16;
    v30 = v25;
    v31 = v18;
    v32 = v15;
    v33 = v17;
    v34 = v12;
    sub_1BA796C70(v28, v30, v32);
    v12 = v34;
    v17 = v33;
    v16 = v29;
    v18 = v31;
    result = v27;
    a1 = v24;
    v3 = v2;
    v7 = v59;
    v23 = v58;
    goto LABEL_4;
  }
  v53 = v12;
  v54 = v17;
  v55 = v16;
  v56 = v18;
  v60 = result;
  v57 = v22;
  sub_1BA69C808(v26, v25, 1);
  v45 = sub_1BA862600((uint64_t)&unk_1E7254B48);
  v46 = v24;
  sub_1BB3757A0(v26, v25, v45, 1, (uint64_t)v14);
  v3 = v2;
  if (v2)
  {
    swift_bridgeObjectRelease();
    v42 = v26;
    v43 = v25;
    v44 = v15;
    return sub_1BA796C70(v42, v43, v44);
  }
  sub_1BA502AD0((uint64_t)v14, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BA796C70(v26, v25, v15);
  a1 = v46;
  v7 = v59;
  result = v60;
  v23 = v58;
  v22 = v57;
  v35 = v20;
  v36 = v63;
  v18 = v56;
  v17 = v54;
  v16 = v55;
  v12 = v53;
  if (v56 == 255)
  {
LABEL_14:
    v47 = v62;
    if (v35 != 255)
    {
      if ((v35 & 1) != 0)
      {
        v57 = v22;
        v49 = result;
        v50 = v61;
        sub_1BA69C808(result, v61, 1);
        v51 = sub_1BA862600((uint64_t)&unk_1E7254B98);
        sub_1BB3757A0(v49, v50, v51, 1, v36);
        if (v3)
        {
          swift_bridgeObjectRelease();
          v42 = v49;
          v43 = v50;
          v44 = v35;
          return sub_1BA796C70(v42, v43, v44);
        }
        sub_1BA502AD0(v63, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        v22 = v57;
        v48 = v50;
        result = v49;
        v47 = v62;
      }
      else
      {
        v48 = v61;
      }
      result = sub_1BA796C70(result, v48, v35);
    }
    if (v23 == 255)
      return result;
    if ((v23 & 1) != 0)
    {
      sub_1BA69C808(v47, v22, 1);
      v52 = sub_1BA862600((uint64_t)&unk_1E7254BC0);
      sub_1BB3757A0(v47, v22, v52, 1, (uint64_t)v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        v42 = v47;
        v43 = v22;
LABEL_27:
        v44 = v23;
        return sub_1BA796C70(v42, v43, v44);
      }
      sub_1BA502AD0((uint64_t)v7, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    v42 = v47;
    v43 = v22;
    goto LABEL_27;
  }
LABEL_5:
  v60 = result;
  if ((v18 & 1) == 0)
  {
LABEL_13:
    sub_1BA796C70(v17, v16, v18);
    result = v60;
    goto LABEL_14;
  }
  v56 = v18;
  v57 = v22;
  v37 = v16;
  v38 = v17;
  v39 = a1;
  v40 = v12;
  sub_1BA69C808(v17, v16, 1);
  v41 = sub_1BA862600((uint64_t)&unk_1E7254B70);
  v59 = v39;
  sub_1BB3757A0(v38, v37, v41, 1, v40);
  if (!v3)
  {
    sub_1BA502AD0(v40, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    v22 = v57;
    v36 = v63;
    LOBYTE(v18) = v56;
    v16 = v37;
    v17 = v38;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v42 = v38;
  v43 = v37;
  v44 = v56;
  return sub_1BA796C70(v42, v43, v44);
}

void sub_1BAC67DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[3];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10[-1] - v3;
  if (!*(_BYTE *)(v0 + 24))
  {
    v5 = *(_QWORD *)(v0 + 8);
    v7 = *(_QWORD *)(v0 + 16);
    v10[0] = *(_QWORD *)v0;
    v6 = v10[0];
    v10[1] = v5;
    v10[2] = v7;
    HIBYTE(v9) = 6;
    sub_1BA690C00(v10[0], v5, v7, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1BB6B84D4(v10, (char *)&v9 + 7);
    if (!v1)
    {
      sub_1BB3757A0(v6, v5, v8, 1, (uint64_t)v4);
      sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    sub_1BA5A7EF8(v6, v5, v7, 0);
  }
}

uint64_t sub_1BAC67EF0(uint64_t result)
{
  if ((result & 0xF000000000000007) != 0xD000000000000007)
    return sub_1BA6E6CD8(result);
  return result;
}

uint64_t sub_1BAC67F0C(uint64_t result)
{
  if ((result & 0xF000000000000007) != 0xD000000000000007)
    return sub_1BA6E6C68(result);
  return result;
}

uint64_t sub_1BAC67F28(uint64_t a1)
{
  sub_1BA745F88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_1BAC67F64(uint64_t a1)
{
  sub_1BA6F3F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1BAC67FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 72);
  v10 = *(_OWORD *)(a1 + 104);
  v11 = *(_OWORD *)(a1 + 88);
  v9 = *(_OWORD *)(a1 + 120);
  v24 = *(_QWORD *)(a1 + 168);
  v25 = *(_QWORD *)(a1 + 160);
  v22 = *(_QWORD *)(a1 + 184);
  v23 = *(_QWORD *)(a1 + 176);
  v21 = *(_QWORD *)(a1 + 192);
  v19 = *(_QWORD *)(a1 + 208);
  v20 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 224);
  v18 = *(_QWORD *)(a1 + 216);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_BYTE *)(a1 + 240);
  v26 = *(_QWORD *)(a1 + 488);
  v27 = *(_QWORD *)(a1 + 480);
  v28 = *(_QWORD *)(a1 + 504);
  v29 = *(_QWORD *)(a1 + 496);
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v2);
  sub_1BA6E8AA8(v17, v16, v15, v3, v4, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((unint64_t *)&v9 + 1));
  swift_bridgeObjectRetain();
  sub_1BA6E8A48(v25, v24, v23, v22, v21, v20, v19, v18, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E8A60(v27, v26);
  sub_1BA6E8A60(v29, v28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAC68120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 72);
  v10 = *(_OWORD *)(a1 + 104);
  v11 = *(_OWORD *)(a1 + 88);
  v9 = *(_OWORD *)(a1 + 120);
  v24 = *(_QWORD *)(a1 + 168);
  v25 = *(_QWORD *)(a1 + 160);
  v22 = *(_QWORD *)(a1 + 184);
  v23 = *(_QWORD *)(a1 + 176);
  v21 = *(_QWORD *)(a1 + 192);
  v19 = *(_QWORD *)(a1 + 208);
  v20 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_BYTE *)(a1 + 240);
  v18 = *(_QWORD *)(a1 + 216);
  v26 = *(_QWORD *)(a1 + 488);
  v27 = *(_QWORD *)(a1 + 480);
  v28 = *(_QWORD *)(a1 + 504);
  v29 = *(_QWORD *)(a1 + 496);
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(v2);
  sub_1BA6E8B94(v17, v16, v15, v3, v4, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((unint64_t *)&v9 + 1));
  swift_bridgeObjectRelease();
  sub_1BA6E8A78(v25, v24, v23, v22, v21, v20, v19, v18, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E8A90(v27, v26);
  sub_1BA6E8A90(v29, v28);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAC68298(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_BYTE *)(a1 + 80);
  v21 = *(_QWORD *)(a1 + 104);
  v22 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 120);
  v20 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 136);
  v18 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 160);
  v10 = *(_BYTE *)(a1 + 176);
  swift_bridgeObjectRetain();
  sub_1BA7AF9CC(v14, v13, v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRetain();
  sub_1BA6E8A48(v22, v21, v20, v19, v18, v17, v16, v15, v12, v9, v10);
  return a1;
}

uint64_t sub_1BAC68394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_BYTE *)(a1 + 80);
  v21 = *(_QWORD *)(a1 + 104);
  v22 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 120);
  v20 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 136);
  v18 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 160);
  v10 = *(_BYTE *)(a1 + 176);
  swift_bridgeObjectRelease();
  sub_1BA7AF9E4(v14, v13, v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  sub_1BA6E8A78(v22, v21, v20, v19, v18, v17, v16, v15, v12, v9, v10);
  return a1;
}

uint64_t sub_1BAC68490(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_BYTE *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 160);
  v20 = *(_QWORD *)(a1 + 184);
  v9 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v2);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v3, v4, v9);
  sub_1BA6E8A48(v18, v17, v16, v15, v5, v14, v13, v12, v6, v7, v8);
  sub_1BA5E7FF4(v11);
  sub_1BA6E6C80(v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C90(v20);
  return a1;
}

uint64_t sub_1BAC685AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_BYTE *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 160);
  v20 = *(_QWORD *)(a1 + 184);
  v9 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(v2);
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v3, v4, v9);
  sub_1BA6E8A78(v18, v17, v16, v15, v5, v14, v13, v12, v6, v7, v8);
  sub_1BA5E800C(v11);
  sub_1BA6E6CF0(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6D00(v20);
  return a1;
}

uint64_t sub_1BAC686C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  int v17;

  v17 = (a17 >> 5) & 3;
  if (v17 == 1)
    return sub_1BA769654(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 0x9F);
  if (!v17)
    return sub_1BA895D94(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return result;
}

uint64_t sub_1BAC68720(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

unint64_t sub_1BAC68784(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1BAC687B4(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC687E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 128);
  v13 = *(_QWORD *)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_BYTE *)(a1 + 144);
  v11 = *(_QWORD *)(a1 + 160);
  v12 = *(_QWORD *)(a1 + 152);
  v22 = *(_QWORD *)(a1 + 184);
  v23 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 168);
  v21 = *(_BYTE *)(a1 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v2);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v3, v4, v8);
  sub_1BA6E8A48(v20, v19, v18, v17, v16, v15, v14, v13, v5, v6, v7);
  sub_1BA796C58(v12, v11, v10);
  sub_1BA796C58(v23, v22, v21);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAC6890C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 128);
  v13 = *(_QWORD *)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_BYTE *)(a1 + 144);
  v11 = *(_QWORD *)(a1 + 160);
  v12 = *(_QWORD *)(a1 + 152);
  v22 = *(_QWORD *)(a1 + 184);
  v23 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 168);
  v21 = *(_BYTE *)(a1 + 192);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(v2);
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v3, v4, v8);
  sub_1BA6E8A78(v20, v19, v18, v17, v16, v15, v14, v13, v5, v6, v7);
  sub_1BA796C70(v12, v11, v10);
  sub_1BA796C70(v23, v22, v21);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BAC68A38(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_1BA92F770(a1, a2 & 1);
}

uint64_t sub_1BAC68A50(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1BAB5EC9C(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1BAC68A68(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1BAB5EC7C(result, a2, a3 & 1);
  return result;
}

id sub_1BAC68A80(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1BA92F754(result, a2 & 1);
  return result;
}

uint64_t sub_1BAC68A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, void (*a14)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result;

  if (a4 != 254)
  {
    a14(a2, a3, a4);
    a14(a5, a6, a7);
    a14(a8, a9, a10);
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))a14)(a11, a12, a13);
  }
  return result;
}

uint64_t sub_1BAC68B58(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BAC68B64(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BAC68B70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if ((a8 & 0x80) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BA69C828(a2, a3, a4 & 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC68BE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a9)(void))
{
  int v9;

  v9 = (unsigned __int16)a7 >> 13;
  if (v9 == 4 || v9 == 3)
    return a9();
  if (v9 == 2)
    return a8(result, a2, a3, a4, a5, a6, a7, (a7 >> 8) & 0x1F);
  return result;
}

uint64_t sub_1BAC68C24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BAC68C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0x3000000000000007) != 0)
    return sub_1BA7CCC64(a1, a2, a3);
  return a1;
}

uint64_t sub_1BAC68C70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((~a2 & 0xF000000000000007) != 0 || (a4 & 7) != 7)
    return sub_1BA7CCC14(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_1BAC68C90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((~a2 & 0xF000000000000007) != 0 || (a4 & 7) != 7)
    return sub_1BA7CCBB4(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_1BAC68CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0x3000000000000007) != 0)
    return sub_1BA7CCCA0(a1, a2, a3);
  return a1;
}

uint64_t sub_1BAC68CCC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BAC68CF0(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t sub_1BAC68D2C(uint64_t a1)
{
  sub_1BA745F88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_1BAC68D68(uint64_t a1)
{
  sub_1BA6F3F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1BAC68DA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAC68DD0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAC68DFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3BA910)
  {
    v2 = sub_1BB86C8B0();
    v3 = sub_1BA4A2870((unint64_t *)&qword_1ED3C44F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&protocol conformance descriptor for Date);
    v5 = type metadata accessor for FormatSelectorValueSelector(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3BA910);
  }
}

void sub_1BAC68E74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3BA908)
  {
    v2 = sub_1BB86C67C();
    v3 = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
    v5 = type metadata accessor for FormatSelectorValueSelector(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3BA908);
  }
}

uint64_t sub_1BAC68EEC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 6 < 6 || a3 == 12)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BAC68F14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_BYTE *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v2);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v3, v4, v9);
  sub_1BA6E8A48(v17, v16, v15, v14, v5, v13, v12, v11, v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAC68FF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_BYTE *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(v2);
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v3, v4, v9);
  sub_1BA6E8A78(v17, v16, v15, v14, v5, v13, v12, v11, v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAC690CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_BYTE *)(a1 + 136);
  v8 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v2, v3, v8);
  sub_1BA6E8A48(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  return a1;
}

uint64_t sub_1BAC6919C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_BYTE *)(a1 + 136);
  v8 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v2, v3, v8);
  sub_1BA6E8A78(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  return a1;
}

uint64_t sub_1BAC6926C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 88);
  v16 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_BYTE *)(a1 + 144);
  v10 = *(_QWORD *)(a1 + 152);
  v8 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v2);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v3, v4, v8);
  sub_1BA6E8A48(v18, v17, v16, v15, v14, v13, v12, v11, v5, v6, v7);
  sub_1BA5E7FF4(v10);
  return a1;
}

uint64_t sub_1BAC69354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 88);
  v16 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_BYTE *)(a1 + 144);
  v10 = *(_QWORD *)(a1 + 152);
  v8 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(v2);
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v3, v4, v8);
  sub_1BA6E8A78(v18, v17, v16, v15, v14, v13, v12, v11, v5, v6, v7);
  sub_1BA5E800C(v10);
  return a1;
}

uint64_t sub_1BAC69440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(a5, a6, a7);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BAC694A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(a5, a6, a7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC69510(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8(a2, a1);
  return a2;
}

uint64_t sub_1BAC6954C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy19_8(a2, a1);
  return a2;
}

_QWORD *sub_1BAC69588(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t sub_1BAC695C4(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1BAC695F0(uint64_t a1)
{
  swift_release();
  return a1;
}

__n128 *sub_1BAC6961C(__n128 *a1, __n128 *a2)
{
  __swift_memcpy18_8(a2, a1);
  return a2;
}

uint64_t sub_1BAC69658(uint64_t a1, uint64_t a2)
{
  __swift_memcpy19_8(a2, a1);
  return a2;
}

uint64_t sub_1BAC69694(uint64_t a1)
{
  sub_1BA745F88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1BAC696C4(uint64_t a1)
{
  sub_1BA6F3F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1BAC696F4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8(a2, a1);
  return a2;
}

void sub_1BAC69730(uint64_t a1, uint64_t *a2)
{
  sub_1BAC5B058(a1, a2);
}

void sub_1BAC69744(uint64_t a1, uint64_t *a2)
{
  sub_1BAC5B078(a1, a2);
}

void sub_1BAC69758(uint64_t a1)
{
  sub_1BAC402DC(a1);
}

void sub_1BAC6976C(uint64_t a1)
{
  sub_1BAC402FC(a1);
}

void sub_1BAC69780(uint64_t a1)
{
  sub_1BAC5491C(a1);
}

uint64_t FormatBindingFont.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatURLBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatSymbolName.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatInteger.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatColorComponentExpression.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatDateTimeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatSourceMapNode.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatBoolean.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatVideoNodeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatVideoPlayerLiveBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatVideoPlayerNodeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t FormatWebEmbedNodeBinding.bindChildren(binder:context:)()
{
  return FormatString.bindChildren(binder:context:)();
}

uint64_t sub_1BAC69884(uint64_t a1, uint64_t a2)
{
  return sub_1BABCC904(a1, a2);
}

uint64_t sub_1BAC69898(uint64_t a1)
{
  return sub_1BAC5BD8C(a1);
}

uint64_t sub_1BAC698AC(uint64_t a1)
{
  return sub_1BAC3E090(a1);
}

uint64_t sub_1BAC698C0(uint64_t a1)
{
  return sub_1BAC4BB04(a1);
}

uint64_t sub_1BAC698D4(uint64_t a1, uint64_t a2)
{
  return sub_1BABCEF88(a1, a2);
}

uint64_t sub_1BAC698E8(uint64_t a1, uint64_t a2)
{
  return sub_1BABCEFA8(a1, a2);
}

uint64_t sub_1BAC698FC(uint64_t a1, uint64_t a2)
{
  return sub_1BABE2238(a1, a2);
}

uint64_t sub_1BAC69910(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E0], 0xD000000000000021, 0x80000001BB96FB30, (uint64_t *)&unk_1ED3AC0C8);
}

uint64_t static Settings.NewsFeedModule.Features.useNewReportConcern.getter()
{
  return sub_1BA499934(&qword_1ED3AC0D8);
}

uint64_t sub_1BAC69958(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD00000000000001ELL, 0x80000001BB96FB10, &qword_1ED3C4520);
}

uint64_t static Settings.NewsFeedModule.Features.useMoreToReadEOA.getter()
{
  return sub_1BA499934(&qword_1ED3C21F0);
}

uint64_t sub_1BAC699A0(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000021, 0x80000001BB96FAE0, &qword_1ED3A0D10);
}

uint64_t static Settings.NewsFeedModule.Features.useMoreFromIssueEOA.getter()
{
  return sub_1BA499934(&qword_1ED3A0D18);
}

uint64_t sub_1BAC699E8(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000022, 0x80000001BB96FAB0, &qword_1EF2B0E58);
}

uint64_t static Settings.NewsFeedModule.Features.useMultipleNativeAds.getter()
{
  return sub_1BA499934(&qword_1EF2A6CE0);
}

uint64_t sub_1BAC69A30(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD00000000000001FLL, 0x80000001BB96FA90, &qword_1ED3A3388);
}

uint64_t static Settings.NewsFeedModule.Features.useSportsNativeAds.getter()
{
  return sub_1BA499934(qword_1ED3A10A8);
}

uint64_t sub_1BAC69A78(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000027, 0x80000001BB96FA40, &qword_1EF2B0E60);
}

uint64_t static Settings.NewsFeedModule.Features.usePuzzlesArchiveFetchAPI.getter()
{
  return sub_1BA499934(&qword_1EF2A6CE8);
}

uint64_t sub_1BAC69AC0(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E0], 0xD000000000000027, 0x80000001BB96FA10, &qword_1EF2B0E68);
}

uint64_t static Settings.NewsFeedModule.Features.useNavigationImprovements.getter()
{
  return sub_1BA499934(&qword_1EF2A6CF0);
}

uint64_t sub_1BAC69B08(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E0], 0xD00000000000002ALL, 0x80000001BB96F9E0, &qword_1ED3A33B8);
}

uint64_t static Settings.NewsFeedModule.Features.useArticleViewerImprovements.getter()
{
  return sub_1BA499934(qword_1ED3A10B8);
}

uint64_t static Settings.NewsFeedModule.Features.enableExperimental.getter()
{
  return sub_1BA499934(&qword_1ED3C4530);
}

uint64_t sub_1BAC69B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D378();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D36C();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB57E8], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0E70 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Features.experimentalFeatures.getter()
{
  return sub_1BA499934(&qword_1EF2A6CF8);
}

uint64_t sub_1BAC69CBC(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E0], 0xD000000000000027, 0x80000001BB96F8E0, &qword_1ED3AD158);
}

uint64_t static Settings.NewsFeedModule.Features.enableSponsoredSuperfeeds.getter()
{
  return sub_1BA499934(&qword_1ED3AD160);
}

uint64_t sub_1BAC69D04(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E8], 0xD000000000000033, 0x80000001BB96F8A0, &qword_1EF2B0E78);
}

uint64_t static Settings.NewsFeedModule.Features.overrideSponsoredSuperfeedEligibility.getter()
{
  return sub_1BA499934(&qword_1EF2A6D08);
}

uint64_t sub_1BAC69D4C(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E8], 0xD000000000000033, 0x80000001BB96F860, &qword_1ED3AD168);
}

uint64_t static Settings.NewsFeedModule.Features.overrideSponsoredSuperfeedBundleCheck.getter()
{
  return sub_1BA499934(&qword_1ED3AD170);
}

uint64_t sub_1BAC69D94(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E8], 0xD000000000000028, 0x80000001BB96F830, &qword_1ED3C0950);
}

uint64_t static Settings.NewsFeedModule.Features.useFeedDifferentiationMode.getter()
{
  return sub_1BA499934(&qword_1ED3C3FD8);
}

uint64_t sub_1BAC69DDC(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E0], 0xD000000000000020, 0x80000001BB96F800, &qword_1ED3D5140);
}

uint64_t static Settings.NewsFeedModule.Features.useFeedDensityMode.getter()
{
  return sub_1BA499934(&qword_1ED3D5160);
}

uint64_t sub_1BAC69E24(uint64_t a1)
{
  return sub_1BA4BB738(a1, 0xD000000000000025, 0x80000001BB96F7A0, &qword_1EF2B0E80);
}

uint64_t static Settings.NewsFeedModule.Content.showFakeTimestamps.getter()
{
  return sub_1BA499934(&qword_1EF2A6D10);
}

uint64_t sub_1BAC69E64(uint64_t a1)
{
  return sub_1BA50EF94(a1, 0, 0xD00000000000002DLL, 0x80000001BB96F770, &qword_1EF2B0E88);
}

uint64_t static Settings.NewsFeedModule.Content.highlightEvergreenArticles.getter()
{
  return sub_1BA499934(qword_1EF2A6D18);
}

uint64_t sub_1BAC69EA8(uint64_t a1)
{
  return sub_1BA50EF94(a1, 0, 0xD00000000000003BLL, 0x80000001BB96F730, (uint64_t *)&unk_1ED39EBC0);
}

uint64_t static Settings.NewsFeedModule.Content.disableFilteringSharedWithYouArticles.getter()
{
  return sub_1BA499934(&qword_1ED39ED50);
}

uint64_t static Settings.NewsFeedModule.Layout.feedScaleValue.getter()
{
  return sub_1BA499934(&qword_1ED3BBDC8);
}

uint64_t static Settings.NewsFeedModule.Layout.enableVisualDebugging.getter()
{
  return sub_1BA499934(&qword_1ED3BA870);
}

uint64_t sub_1BAC69F24(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000033, 0x80000001BB96F690, &qword_1ED3D1ED0);
}

uint64_t static Settings.NewsFeedModule.Layout.disableInternalLayoutErrorViews.getter()
{
  return sub_1BA499934(&qword_1ED3D1ED8);
}

uint64_t sub_1BAC69F68(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54E0], 0xD000000000000023, 0x80000001BB96F630, &qword_1ED3D24A8);
}

uint64_t static Settings.NewsFeedModule.Layout.layoutTransitions.getter()
{
  return sub_1BA499934(&qword_1ED3D29F8);
}

uint64_t static Settings.NewsFeedModule.OfflineMode.unavailableItemAlpha.getter()
{
  return sub_1BA499934(&qword_1ED3C20B0);
}

uint64_t sub_1BAC69FCC(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000030, 0x80000001BB96F5C0, &qword_1EF2B0E90);
}

uint64_t static Settings.NewsFeedModule.OfflineMode.dimNonSubscriberContentOffline.getter()
{
  return sub_1BA499934(&qword_1EF2A6D28);
}

uint64_t static Settings.NewsFeedModule.Badging.forcePremiumBadging.getter()
{
  return sub_1BA499934(&qword_1ED3BA640);
}

uint64_t static Settings.NewsFeedModule.Weather.requestTimeout.getter()
{
  return sub_1BA499934(&qword_1ED39DF78);
}

uint64_t static Settings.NewsFeedModule.Database.clearOnLaunch.getter()
{
  return sub_1BA499934(&qword_1ED39E290);
}

uint64_t static Settings.NewsFeedModule.Database.clearOnNextLaunch.getter()
{
  return sub_1BA499934(&qword_1ED39E298);
}

uint64_t sub_1BAC6A084(uint64_t a1)
{
  return sub_1BA50EF94(a1, 1, 0xD000000000000021, 0x80000001BB96F4D0, &qword_1ED3AC980);
}

uint64_t static Settings.NewsFeedModule.Database.cleanupEnabled.getter()
{
  return sub_1BA499934(&qword_1ED3AC990);
}

uint64_t static Settings.NewsFeedModule.Database.enabled.getter()
{
  return sub_1BA499934(&qword_1ED39E2A8);
}

uint64_t sub_1BAC6A0E4(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000022, 0x80000001BB96F480, &qword_1EF2B0E98);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showColumns.getter()
{
  return sub_1BA499934(&qword_1EF2A6D30);
}

uint64_t sub_1BAC6A128(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000029, 0x80000001BB96F450, &qword_1EF2B0EA0);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showLayoutMargins.getter()
{
  return sub_1BA499934(&qword_1EF2A6D38);
}

uint64_t sub_1BAC6A16C(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000021, 0x80000001BB96F420, &qword_1EF2B0EA8);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showBounds.getter()
{
  return sub_1BA499934(&qword_1EF2A6D40);
}

uint64_t sub_1BAC6A1B0(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000026, 0x80000001BB96F3F0, &qword_1EF2B0EB0);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showCellBounds.getter()
{
  return sub_1BA499934(&qword_1EF2A6D48);
}

uint64_t sub_1BAC6A1F4(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002ELL, 0x80000001BB96F3C0, &qword_1EF2B0EB8);
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.showCellContentBounds.getter()
{
  return sub_1BA499934(&qword_1EF2A6D50);
}

uint64_t sub_1BAC6A238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3B0598);
  v5[2] = 0x3FD0000000000000;
  v5[3] = 0x3FF0000000000000;
  v5[1] = 0x3FF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1BB86D3C0();
  qword_1EF2B0EC0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Layout.scale.getter()
{
  return sub_1BA499934(&qword_1EF2A6D58);
}

uint64_t sub_1BAC6A344(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000026, 0x80000001BB96F370, &qword_1ED3A3358);
}

uint64_t static Settings.NewsFeedModule.Debug.WebEmbed.showDebugger.getter()
{
  return sub_1BA499934(&qword_1ED3A3360);
}

uint64_t sub_1BAC6A388(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000025, 0x80000001BB96F340, (uint64_t *)&unk_1ED3A2518);
}

uint64_t static Settings.NewsFeedModule.Debug.WebEmbed.ignoreCache.getter()
{
  return sub_1BA499934(&qword_1ED3A2528);
}

uint64_t sub_1BAC6A3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0x2E302E302E373231;
  v9[1] = 0xE900000000000031;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0EC8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.host.getter()
{
  return sub_1BA499934(&qword_1EF2A6D60);
}

uint64_t sub_1BAC6A530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 808988728;
  v9[1] = 0xE400000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0ED0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.port.getter()
{
  return sub_1BA499934(&qword_1EF2A6D68);
}

uint64_t sub_1BAC6A688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 825765944;
  v9[1] = 0xE400000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0ED8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.socket.getter()
{
  return sub_1BA499934(&qword_1EF2A6D70);
}

uint64_t sub_1BAC6A7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  v5[2] = 6;
  v5[3] = 6;
  v5[1] = 18;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1BB86D3C0();
  qword_1EF2B0EE0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.columns.getter()
{
  return sub_1BA499934(&qword_1EF2A6D78);
}

uint64_t sub_1BAC6A8EC(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000022, 0x80000001BB96F290, &qword_1EF2B0EE8);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showColumns.getter()
{
  return sub_1BA499934(&qword_1EF2A6D80);
}

uint64_t sub_1BAC6A930(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000029, 0x80000001BB96F260, &qword_1EF2B0EF0);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showLayoutMargins.getter()
{
  return sub_1BA499934(&qword_1EF2A6D88);
}

uint64_t sub_1BAC6A974(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000030, 0x80000001BB96F220, &qword_1EF2B0EF8);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showContentFrameOverlay.getter()
{
  return sub_1BA499934(&qword_1EF2A6D90);
}

uint64_t sub_1BAC6A9B8(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000028, 0x80000001BB96F1F0, &qword_1EF2B0F00);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showDragPreviews.getter()
{
  return sub_1BA499934(&qword_1EF2A6D98);
}

uint64_t sub_1BAC6A9FC(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000032, 0x80000001BB96F1B0, &qword_1EF2B0F08);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showLayoutPaneOnSnapshot.getter()
{
  return sub_1BA499934(&qword_1EF2A6DA0);
}

uint64_t sub_1BAC6AA40(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000030, 0x80000001BB96F170, &qword_1EF2B0F10);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.clearCacheOnNextLaunch.getter()
{
  return sub_1BA499934(&qword_1EF2A6DA8);
}

uint64_t sub_1BAC6AA84(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000034, 0x80000001BB96F130, &qword_1EF2B0F18);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.clearRunModeCacheOnLayout.getter()
{
  return sub_1BA499934(&qword_1EF2A6DB0);
}

uint64_t sub_1BAC6AAC8(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002ELL, 0x80000001BB96E690, &qword_1EF3D0540);
}

uint64_t sub_1BAC6AAF0(uint64_t a1)
{
  return sub_1BAC6AB38(a1, 0xD000000000000025, 0x80000001BB96E7E0, &qword_1EF3D0548);
}

uint64_t sub_1BAC6AB14(uint64_t a1)
{
  return sub_1BAC6AB38(a1, 0xD00000000000002ALL, 0x80000001BB96E7B0, &qword_1EF3D0550);
}

uint64_t sub_1BAC6AB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];

  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1BB86D378();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD, double))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v14[15] = 0;
  sub_1BAC6F290(0, &qword_1EF2B10B8, (void (*)(void))sub_1BAC6F0B4);
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a4 = result;
  return result;
}

uint64_t sub_1BAC6AC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D0558 = result;
  return result;
}

uint64_t sub_1BAC6ADA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F20 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorPinnedIdentifiers.getter()
{
  return sub_1BA499934(&qword_1EF2A6DD8);
}

uint64_t sub_1BAC6AEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F28 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.hiddenInventoryIdentifiers.getter()
{
  return sub_1BA499934(&qword_1EF2A6DE0);
}

uint64_t sub_1BAC6B048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F30 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorLayoutIdentifier.getter()
{
  return sub_1BA499934(&qword_1EF2A6DE8);
}

uint64_t sub_1BAC6B198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F38 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorBackgroundLayoutIdentifier.getter()
{
  return sub_1BA499934(&qword_1EF2A6DF0);
}

uint64_t sub_1BAC6B2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F40 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorThemeIdentifiers.getter()
{
  return sub_1BA499934(&qword_1EF2A6DF8);
}

uint64_t sub_1BAC6B438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F48 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorGroupIdentifier.getter()
{
  return sub_1BA499934(&qword_1EF2A6E00);
}

uint64_t sub_1BAC6B588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F50 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorBackgroundGroupIdentifier.getter()
{
  return sub_1BA499934(&qword_1EF2A6E08);
}

uint64_t sub_1BAC6B6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F58 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorBindingIdentifier.getter()
{
  return sub_1BA499934(&qword_1EF2A6E10);
}

uint64_t sub_1BAC6B828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F60 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorCompilePackageIdentifiers.getter()
{
  return sub_1BA499934(&qword_1EF2A6E18);
}

uint64_t sub_1BAC6B978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[1] = 1;
  sub_1BAC6F32C(0, &qword_1EF2B1148, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceStyle, (unint64_t *)&unk_1EF2B1150, (uint64_t)&protocol conformance descriptor for UIUserInterfaceStyle);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F68 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorUserInterfaceStyle.getter()
{
  return sub_1BA499934(&qword_1EF2A6E20);
}

uint64_t sub_1BAC6BAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[1] = 0;
  sub_1BAC6F32C(0, &qword_1EF2B1138, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, &qword_1EF2B1140, (uint64_t)&protocol conformance descriptor for UIUserInterfaceLayoutDirection);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F70 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.editorInterfaceLayoutDirection.getter()
{
  return sub_1BA499934(&qword_1EF2A6E28);
}

uint64_t sub_1BAC6BC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_1BA4AD288(0, &qword_1EF2B13C0, (uint64_t)&type metadata for DebugFormatLocation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v22 - v3;
  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86D378();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 0;
  v12 = 11;
  v22 = v9;
  v23 = v6;
  v24 = v5;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7AB24(0, 11, 0);
  v13 = &byte_1E7251898;
  v14 = v26;
  do
  {
    v15 = *v13++;
    sub_1BB6C04E4(v15);
    v26 = v14;
    v17 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v14 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1BAC7AB24(v16 > 1, v17 + 1, 1);
      v14 = v26;
    }
    *(_QWORD *)(v14 + 16) = v17 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v14+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v17, v4, v1);
    --v12;
  }
  while (v12);
  v19 = v23;
  v18 = v24;
  v20 = v22;
  sub_1BAC6F290(0, &qword_1EF2B1028, (void (*)(void))sub_1BAC6ED5C);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v11, *MEMORY[0x1E0DB5800], v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v8, *MEMORY[0x1E0DB57E0], v18);
  sub_1BAC6EDA0();
  result = sub_1BB86D39C();
  qword_1EF3D0560 = result;
  return result;
}

uint64_t sub_1BAC6BE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;

  sub_1BA93EB3C(0);
  MEMORY[0x1E0C80A78](v0);
  v37 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4AD288(0, &qword_1EF2B13B0, (uint64_t)&type metadata for DebugFormatWeather, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - v5;
  v7 = sub_1BB86D36C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86D378();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x1E0C80A78](v11);
  v33 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = 0;
  v13 = 26;
  v28 = v8;
  v29 = v7;
  v30 = v10;
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7AB58(0, 26, 0);
  v14 = &byte_1E7251408;
  v15 = v44;
  v34 = 0x80000001BB96E0C0;
  v35 = 0x80000001BB96E0E0;
  v36 = v3;
  do
  {
    v17 = *v14++;
    v16 = v17;
    switch(v17)
    {
      case 0:
        v38 = 0;
        goto LABEL_11;
      case 22:
        v39 = 22;
        goto LABEL_11;
      case 23:
        v40 = 23;
        goto LABEL_11;
      case 24:
        v41 = 24;
        goto LABEL_11;
      case 25:
        v42 = 25;
LABEL_11:
        sub_1BB86D384();
        break;
      default:
        v18 = (uint64_t)v37;
        sub_1BB61A45C(v16);
        v19 = type metadata accessor for FeedWeather(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19) == 1)
        {
          v20 = (uint64_t (*)(_QWORD))sub_1BA93EB3C;
        }
        else
        {
          swift_bridgeObjectRetain();
          v20 = type metadata accessor for FeedWeather;
        }
        sub_1BA4A2E80(v18, v20);
        v43 = v16;
        sub_1BB86D384();
        v3 = v36;
        break;
    }
    v44 = v15;
    v22 = *(_QWORD *)(v15 + 16);
    v21 = *(_QWORD *)(v15 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1BAC7AB58(v21 > 1, v22 + 1, 1);
      v15 = v44;
    }
    *(_QWORD *)(v15 + 16) = v22 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v22, v6, v3);
    --v13;
  }
  while (v13);
  v24 = v29;
  v23 = v30;
  v25 = v28;
  sub_1BAC6F290(0, &qword_1EF2B1010, (void (*)(void))sub_1BAC6ECD4);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0DB5800], v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v23, *MEMORY[0x1E0DB57E0], v24);
  sub_1BAC6ED18();
  result = sub_1BB86D39C();
  qword_1EF3D0568 = result;
  return result;
}

uint64_t sub_1BAC6C2E0(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD00000000000002CLL, 0x80000001BB96EEA0, &qword_1EF2B0F78);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.alwaysBounceVertical.getter()
{
  return sub_1BA499934(&qword_1EF2A6E40);
}

uint64_t sub_1BAC6C324(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002ELL, 0x80000001BB96EE70, &qword_1EF2B0F80);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.alwaysBounceHorizontal.getter()
{
  return sub_1BA499934(&qword_1EF2A6E48);
}

uint64_t sub_1BAC6C368(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002CLL, 0x80000001BB96EE40, &qword_1EF2B0F88);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.wildcardSlotFallback.getter()
{
  return sub_1BA499934(&qword_1EF2A6E50);
}

uint64_t sub_1BAC6C3AC(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000032, 0x80000001BB96EE00, &qword_1EF2B0F90);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.showMissingOptionBindings.getter()
{
  return sub_1BA499934(&qword_1EF2A6E58);
}

uint64_t sub_1BAC6C3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[15] = 1;
  sub_1BAC6F290(0, &qword_1EF2B1128, (void (*)(void))sub_1BAC6F2E8);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0F98 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.layoutOrder.getter()
{
  return sub_1BA499934(&qword_1EF2A6E60);
}

uint64_t sub_1BAC6C540()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v0 = sub_1BB86D36C();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86D378();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F290(0, &qword_1EF2B1108, (void (*)(void))sub_1BA970CA8);
  v9 = v7;
  v15 = 0;
  sub_1BAC6EE28(0, &qword_1EF2B1110, &qword_1EF2B1118, (uint64_t)&type metadata for DebugFormatUploadTarget);
  sub_1BA4AD288(0, &qword_1EF2B1118, (uint64_t)&type metadata for DebugFormatUploadTarget, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
  v14 = 1;
  sub_1BB86D384();
  v13 = 2;
  sub_1BB86D384();
  v12 = 0;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  sub_1BAC6F24C();
  result = sub_1BB86D39C();
  qword_1EF2B0FA0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.uploadTarget.getter()
{
  return sub_1BA499934(&qword_1EF2A6E68);
}

uint64_t sub_1BAC6C7CC(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD00000000000002CLL, 0x80000001BB96ED70, &qword_1EF2B0FA8);
}

uint64_t static Settings.NewsFeedModule.Debug.Format.uploadDiffingEnabled.getter()
{
  return sub_1BA499934(&qword_1EF2A6E70);
}

uint64_t sub_1BAC6C810()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v0 = sub_1BB86D36C();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86D378();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F290(0, &qword_1EF2B10E8, (void (*)(void))sub_1BA970C64);
  v9 = v7;
  v15 = 0;
  sub_1BAC6EE28(0, &qword_1EF2B10F0, &qword_1EF2B10F8, (uint64_t)&type metadata for DebugFormatBackendEnvironment);
  sub_1BA4AD288(0, &qword_1EF2B10F8, (uint64_t)&type metadata for DebugFormatBackendEnvironment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
  v14 = 0;
  sub_1BB86D384();
  v13 = 1;
  sub_1BB86D384();
  v12 = 2;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  sub_1BAC6F208();
  result = sub_1BB86D39C();
  qword_1EF2B0FB0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.backendEnvironment.getter()
{
  return sub_1BA499934(&qword_1EF2A6E78);
}

uint64_t sub_1BAC6CA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0FB8 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.assetServerUsername.getter()
{
  return sub_1BA499934(&qword_1EF2A6E80);
}

uint64_t sub_1BAC6CBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2B0FC0 = result;
  return result;
}

uint64_t static Settings.NewsFeedModule.Debug.Format.assetServerPassword.getter()
{
  return sub_1BA499934(&qword_1EF2A6E88);
}

uint64_t sub_1BAC6CD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D0570 = result;
  return result;
}

uint64_t sub_1BAC6CE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[15] = 30;
  sub_1BAC6F290(0, &qword_1EF2B10E0, (void (*)(void))sub_1BAC6F1C4);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D0578 = result;
  return result;
}

uint64_t sub_1BAC6CF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[15] = 3;
  sub_1BAC6F290(0, &qword_1EF2B10D8, (void (*)(void))sub_1BAC6F180);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D0580 = result;
  return result;
}

uint64_t sub_1BAC6D0C8(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002ELL, 0x80000001BB96E930, &qword_1EF3D0588);
}

uint64_t sub_1BAC6D0F0(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000026, 0x80000001BB96E900, &qword_1EF3D0590);
}

uint64_t sub_1BAC6D118(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000003BLL, 0x80000001BB96E8C0, &qword_1EF3D0598);
}

uint64_t sub_1BAC6D140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAC6F290(0, &qword_1EF2B10C8, (void (*)(void))sub_1BAC6F0F8);
  v9[15] = 0;
  sub_1BB2DA61C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1BAC6F13C();
  result = sub_1BB86D39C();
  qword_1EF3D05A0 = result;
  return result;
}

uint64_t sub_1BAC6D290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0x666666666666;
  v9[1] = 0xE600000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D05A8 = result;
  return result;
}

uint64_t sub_1BAC6D3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0x303030303030;
  v9[1] = 0xE600000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D05B0 = result;
  return result;
}

uint64_t sub_1BAC6D508(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000020, 0x80000001BB96E720, &qword_1EF3D05B8);
}

uint64_t sub_1BAC6D530(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000022, 0x80000001BB96E6F0, &qword_1EF3D05C0);
}

uint64_t sub_1BAC6D558(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000025, 0x80000001BB96E750, &qword_1EF3D05C8);
}

uint64_t sub_1BAC6D580(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000020, 0x80000001BB96E590, &qword_1EF3D05D0);
}

uint64_t sub_1BAC6D5AC(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD00000000000002DLL, 0x80000001BB96E560, &qword_1EF3D05D8);
}

uint64_t sub_1BAC6D5D8(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000026, 0x80000001BB96E530, &qword_1EF3D05E0);
}

uint64_t sub_1BAC6D604(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD00000000000002ALL, 0x80000001BB96E500, &qword_1EF3D05E8);
}

uint64_t sub_1BAC6D630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  v5[2] = 0;
  v5[3] = 5;
  v5[1] = 0x7FFFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1BB86D3C0();
  qword_1EF3D05F0 = result;
  return result;
}

uint64_t sub_1BAC6D720()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v0 = sub_1BB86D36C();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86D378();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F290(0, &qword_1EF2B1060, (void (*)(void))sub_1BAC6EECC);
  v9 = v7;
  v14 = 1;
  sub_1BAC6EE28(0, &qword_1EF2B1068, &qword_1EF2B1070, (uint64_t)&type metadata for DebugFormatTestRun);
  sub_1BA4AD288(0, &qword_1EF2B1070, (uint64_t)&type metadata for DebugFormatTestRun, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
  v13 = 1;
  sub_1BB86D384();
  v12 = 0;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  sub_1BAC6EF10();
  result = sub_1BB86D39C();
  qword_1EF3D05F8 = result;
  return result;
}

uint64_t sub_1BAC6D964(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002DLL, 0x80000001BB96E4A0, &qword_1EF3D0600);
}

uint64_t sub_1BAC6D98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3B0598);
  v5[3] = 0x3FE4CCCCCCCCCCCDLL;
  v5[2] = 0x3FD3333333333333;
  v5[1] = 0x3FF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1BB86D3C0();
  qword_1EF3D0608 = result;
  return result;
}

uint64_t sub_1BAC6DA90()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  uint64_t v10;
  char v11;
  char v12;
  char v13;

  v10 = sub_1BB86D36C();
  v0 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86D378();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F290(0, &qword_1EF2B1080, (void (*)(void))sub_1BAC6EF54);
  v9[1] = v7;
  v13 = 0;
  sub_1BAC6EE28(0, &qword_1EF2B1088, &qword_1EF2B1090, (uint64_t)&type metadata for DebugFormatTestScope);
  sub_1BA4AD288(0, &qword_1EF2B1090, (uint64_t)&type metadata for DebugFormatTestScope, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
  v12 = 0;
  sub_1BB86D384();
  v11 = 1;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E0DB57E0], v10);
  sub_1BAC6EF98();
  result = sub_1BB86D39C();
  qword_1EF3D0610 = result;
  return result;
}

uint64_t sub_1BAC6DCD8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v0 = sub_1BB86D36C();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86D378();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F290(0, &qword_1EF2B1040, (void (*)(void))sub_1BAC6EDE4);
  v9 = v7;
  v15 = 2;
  sub_1BAC6EE28(0, &qword_1EF2B1048, &qword_1EF2B1050, (uint64_t)&type metadata for DebugFormatTestSubject);
  sub_1BA4AD288(0, &qword_1EF2B1050, (uint64_t)&type metadata for DebugFormatTestSubject, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
  v14 = 0;
  sub_1BB86D384();
  v13 = 2;
  sub_1BB86D384();
  v12 = 1;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  sub_1BAC6EE88();
  result = sub_1BB86D39C();
  qword_1EF3D0618 = result;
  return result;
}

uint64_t sub_1BAC6DF4C(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD00000000000002CLL, 0x80000001BB96E280, &qword_1EF3D0620);
}

uint64_t sub_1BAC6DF74(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD00000000000002DLL, 0x80000001BB96E250, &qword_1EF3D0628);
}

uint64_t sub_1BAC6DF9C(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000027, 0x80000001BB96E220, &qword_1EF3D0630);
}

uint64_t sub_1BAC6DFC4(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000028, 0x80000001BB96E1F0, &qword_1EF3D0638);
}

uint64_t sub_1BAC6DFEC(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000028, 0x80000001BB96E1C0, &qword_1EF3D0640);
}

uint64_t sub_1BAC6E014(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000028, 0x80000001BB96E190, &qword_1EF3D0648);
}

uint64_t sub_1BAC6E03C(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000027, 0x80000001BB96E160, &qword_1EF3D0650);
}

uint64_t sub_1BAC6E064(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000025, 0x80000001BB96E130, &qword_1EF3D0658);
}

uint64_t sub_1BAC6E08C(uint64_t a1)
{
  return sub_1BA4A4760(0.0, a1, 0xD000000000000041, 0x80000001BB96E040, &qword_1EF3D0660);
}

uint64_t sub_1BAC6E0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAC6F290(0, &qword_1EF2B1000, (void (*)(void))sub_1BAC6EC4C);
  v9[15] = 0;
  _s8NewsFeed0B4KindO7optionsSay11TeaSettings6OptionVyACGGvgZ_0();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1BAC6EC90();
  result = sub_1BB86D39C();
  qword_1EF3D0668 = result;
  return result;
}

uint64_t sub_1BAC6E204(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD00000000000002BLL, 0x80000001BB96E010, &qword_1EF3D0670);
}

uint64_t sub_1BAC6E22C(uint64_t a1)
{
  return sub_1BAC6E274(a1, 0xD00000000000002ELL, 0x80000001BB96E600, &qword_1EF3D0678);
}

uint64_t sub_1BAC6E250(uint64_t a1)
{
  return sub_1BAC6E274(a1, 0xD000000000000037, 0x80000001BB96E5C0, &qword_1EF3D0680);
}

uint64_t sub_1BAC6E274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];

  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86D378();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, _QWORD, double))(v12 + 104))((char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v14[1] = MEMORY[0x1E0DEE9D8];
  sub_1BAC6EFDC();
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a4 = result;
  return result;
}

uint64_t sub_1BAC6E3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[1] = MEMORY[0x1E0DEE9D8];
  sub_1BAC6F290(0, &qword_1EF2B0FF0, (void (*)(void))sub_1BAC6EC08);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D0688 = result;
  return result;
}

uint64_t sub_1BAC6E4D8(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000033, 0x80000001BB96DFB0, &qword_1EF3D0690);
}

uint64_t sub_1BAC6E500(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD000000000000035, 0x80000001BB96DF70, &qword_1EF3D0698);
}

uint64_t sub_1BAC6E528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D06A0 = result;
  return result;
}

uint64_t sub_1BAC6E65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D06A8 = result;
  return result;
}

uint64_t sub_1BAC6E790(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000029, 0x80000001BB96E9D0, &qword_1EF3D06B0);
}

uint64_t sub_1BAC6E7B8(uint64_t a1)
{
  return sub_1BA50EE54(a1, 1, 0xD00000000000002BLL, 0x80000001BB96ECB0, &qword_1ED39C248);
}

uint64_t static Settings.NewsFeedModule.Demo.enableMotionOnIssueCovers.getter()
{
  return sub_1BA499934(&qword_1ED39E288);
}

uint64_t sub_1BAC6E7FC(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002ALL, 0x80000001BB96EC80, &qword_1ED3B0570);
}

uint64_t static Settings.NewsFeedModule.Format.ignorePackageCache.getter()
{
  return sub_1BA499934(&qword_1ED3BA620);
}

uint64_t sub_1BAC6E840(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000003DLL, 0x80000001BB96EC40, &qword_1ED3B0578);
}

uint64_t static Settings.NewsFeedModule.Format.loadPackagesFromDebugServerDropbox.getter()
{
  return sub_1BA499934(&qword_1ED3BA628);
}

uint64_t sub_1BAC6E884(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000025, 0x80000001BB96EC10, &qword_1EF2B0FC8);
}

uint64_t static Settings.NewsFeedModule.Format.prefetchWebArchives.getter()
{
  return sub_1BA499934(&qword_1EF2A6FE0);
}

uint64_t sub_1BAC6E8C8(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD000000000000027, 0x80000001BB96EBE0, &qword_1EF2B0FD0);
}

uint64_t static Settings.NewsFeedModule.Format.prefetchDataResources.getter()
{
  return sub_1BA499934(qword_1EF2A6FE8);
}

uint64_t static Settings.NewsFeedModule.Format.forcePrereleaseVersion.getter()
{
  return sub_1BA499934(&qword_1ED3C3FD0);
}

uint64_t sub_1BAC6E928(uint64_t a1)
{
  return sub_1BA50EE54(a1, 0, 0xD00000000000002DLL, 0x80000001BB96EB80, &qword_1ED3C21F8);
}

uint64_t static Settings.NewsFeedModule.Resources.ignorePackageCache.getter()
{
  return sub_1BA499934(&qword_1ED3C4538);
}

uint64_t sub_1BAC6E96C(uint64_t a1)
{
  return sub_1BA4E7064(a1, MEMORY[0x1E0DB54D8], 0xD000000000000024, 0x80000001BB96EB50, &qword_1ED3A3340);
}

uint64_t static Settings.NewsFeedModule.Clustering.splitTopicGroups.getter()
{
  return sub_1BA499934(&qword_1ED3A3350);
}

uint64_t sub_1BAC6E9B4(uint64_t a1)
{
  return sub_1BA4BB738(a1, 0xD00000000000003FLL, 0x80000001BB96EB10, &qword_1EF2B0FD8);
}

uint64_t static Settings.NewsFeedModule.Clustering.allowAnyChannelForTodayChannelGroups.getter()
{
  return sub_1BA499934(&qword_1EF2A6FF8);
}

uint64_t sub_1BAC6E9F4(uint64_t a1)
{
  return sub_1BA4BB738(a1, 0xD00000000000003CLL, 0x80000001BB96EAD0, &qword_1ED3A3310);
}

uint64_t static Settings.NewsFeedModule.Clustering.recordCandidatesInClusteringJournal.getter()
{
  return sub_1BA499934(&qword_1ED3A3320);
}

uint64_t sub_1BAC6EA34(uint64_t a1)
{
  return sub_1BA50EF94(a1, 0, 0xD00000000000003CLL, 0x80000001BB96EA90, &qword_1ED3A3328);
}

uint64_t static Settings.NewsFeedModule.Clustering.logTopicPruningForImprovedManagedTopicGrouping.getter()
{
  return sub_1BA499934(&qword_1ED3A3338);
}

uint64_t sub_1BAC6EA78(uint64_t a1)
{
  return sub_1BA4BB738(a1, 0xD00000000000002DLL, 0x80000001BB96EA60, &qword_1EF2B0FE0);
}

uint64_t static Settings.NewsFeedModule.Personalization.scoreExclusivelyUsingEmbeddings.getter()
{
  return sub_1BA499934(&qword_1EF2A7000);
}

uint64_t sub_1BAC6EAB8(uint64_t a1)
{
  return sub_1BA4BB738(a1, 0xD000000000000027, 0x80000001BB96EA30, &qword_1EF2B0FE8);
}

uint64_t static Settings.NewsFeedModule.Personalization.scoreExclusivelyUsingTabi.getter()
{
  return sub_1BA499934(&qword_1EF2A7008);
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule()
{
  return &type metadata for Settings.NewsFeedModule;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Features()
{
  return &type metadata for Settings.NewsFeedModule.Features;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Content()
{
  return &type metadata for Settings.NewsFeedModule.Content;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Layout()
{
  return &type metadata for Settings.NewsFeedModule.Layout;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.OfflineMode()
{
  return &type metadata for Settings.NewsFeedModule.OfflineMode;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Badging()
{
  return &type metadata for Settings.NewsFeedModule.Badging;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Weather()
{
  return &type metadata for Settings.NewsFeedModule.Weather;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Database()
{
  return &type metadata for Settings.NewsFeedModule.Database;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug()
{
  return &type metadata for Settings.NewsFeedModule.Debug;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug.Layout()
{
  return &type metadata for Settings.NewsFeedModule.Debug.Layout;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug.WebEmbed()
{
  return &type metadata for Settings.NewsFeedModule.Debug.WebEmbed;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Debug.Format()
{
  return &type metadata for Settings.NewsFeedModule.Debug.Format;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Demo()
{
  return &type metadata for Settings.NewsFeedModule.Demo;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Format()
{
  return &type metadata for Settings.NewsFeedModule.Format;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Resources()
{
  return &type metadata for Settings.NewsFeedModule.Resources;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Clustering()
{
  return &type metadata for Settings.NewsFeedModule.Clustering;
}

ValueMetadata *type metadata accessor for Settings.NewsFeedModule.Personalization()
{
  return &type metadata for Settings.NewsFeedModule.Personalization;
}

unint64_t sub_1BAC6EC08()
{
  unint64_t result;

  result = qword_1EF2B0FF8;
  if (!qword_1EF2B0FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92E394, &type metadata for DebugFormatDebuggerBreakpoints);
    atomic_store(result, (unint64_t *)&qword_1EF2B0FF8);
  }
  return result;
}

unint64_t sub_1BAC6EC4C()
{
  unint64_t result;

  result = qword_1EF2BADD0;
  if (!qword_1EF2BADD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedKind, &type metadata for FeedKind);
    atomic_store(result, (unint64_t *)&qword_1EF2BADD0);
  }
  return result;
}

unint64_t sub_1BAC6EC90()
{
  unint64_t result;

  result = qword_1EF2B1008;
  if (!qword_1EF2B1008)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedKind, &type metadata for FeedKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B1008);
  }
  return result;
}

unint64_t sub_1BAC6ECD4()
{
  unint64_t result;

  result = qword_1EF2B1018;
  if (!qword_1EF2B1018)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934AA8, &type metadata for DebugFormatWeather);
    atomic_store(result, (unint64_t *)&qword_1EF2B1018);
  }
  return result;
}

unint64_t sub_1BAC6ED18()
{
  unint64_t result;

  result = qword_1EF2B1020;
  if (!qword_1EF2B1020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934A8C, &type metadata for DebugFormatWeather);
    atomic_store(result, (unint64_t *)&qword_1EF2B1020);
  }
  return result;
}

unint64_t sub_1BAC6ED5C()
{
  unint64_t result;

  result = qword_1EF2B1030;
  if (!qword_1EF2B1030)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EB68, &type metadata for DebugFormatLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2B1030);
  }
  return result;
}

unint64_t sub_1BAC6EDA0()
{
  unint64_t result;

  result = qword_1EF2B1038;
  if (!qword_1EF2B1038)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EB4C, &type metadata for DebugFormatLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2B1038);
  }
  return result;
}

unint64_t sub_1BAC6EDE4()
{
  unint64_t result;

  result = qword_1EF2BCE30;
  if (!qword_1EF2BCE30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87FF78, &type metadata for DebugFormatTestSubject);
    atomic_store(result, (unint64_t *)&qword_1EF2BCE30);
  }
  return result;
}

void sub_1BAC6EE28(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA4AD288(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
    v5 = sub_1BB874218();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BAC6EE88()
{
  unint64_t result;

  result = qword_1EF2B1058;
  if (!qword_1EF2B1058)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87FFB8, &type metadata for DebugFormatTestSubject);
    atomic_store(result, (unint64_t *)&qword_1EF2B1058);
  }
  return result;
}

unint64_t sub_1BAC6EECC()
{
  unint64_t result;

  result = qword_1EF2BCE40;
  if (!qword_1EF2BCE40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922984, &type metadata for DebugFormatTestRun);
    atomic_store(result, (unint64_t *)&qword_1EF2BCE40);
  }
  return result;
}

unint64_t sub_1BAC6EF10()
{
  unint64_t result;

  result = qword_1EF2B1078;
  if (!qword_1EF2B1078)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9229C4, &type metadata for DebugFormatTestRun);
    atomic_store(result, (unint64_t *)&qword_1EF2B1078);
  }
  return result;
}

unint64_t sub_1BAC6EF54()
{
  unint64_t result;

  result = qword_1EF2BCE50;
  if (!qword_1EF2BCE50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E3584, &type metadata for DebugFormatTestScope);
    atomic_store(result, (unint64_t *)&qword_1EF2BCE50);
  }
  return result;
}

unint64_t sub_1BAC6EF98()
{
  unint64_t result;

  result = qword_1EF2B1098;
  if (!qword_1EF2B1098)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E3568, &type metadata for DebugFormatTestScope);
    atomic_store(result, (unint64_t *)&qword_1EF2B1098);
  }
  return result;
}

void sub_1BAC6EFDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B10A0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAC6F054();
    v0 = sub_1BB86D3CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B10A0);
  }
}

unint64_t sub_1BAC6F054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B10A8;
  if (!qword_1EF2B10A8)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5978], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B10A8);
  }
  return result;
}

unint64_t sub_1BAC6F0B4()
{
  unint64_t result;

  result = qword_1EF2B10C0;
  if (!qword_1EF2B10C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B86C, &type metadata for DebugFormatConsoleDisplay);
    atomic_store(result, (unint64_t *)&qword_1EF2B10C0);
  }
  return result;
}

unint64_t sub_1BAC6F0F8()
{
  unint64_t result;

  result = qword_1EF2BACA0;
  if (!qword_1EF2BACA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905038, &type metadata for DebugFormatBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EF2BACA0);
  }
  return result;
}

unint64_t sub_1BAC6F13C()
{
  unint64_t result;

  result = qword_1EF2B10D0;
  if (!qword_1EF2B10D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90501C, &type metadata for DebugFormatBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B10D0);
  }
  return result;
}

unint64_t sub_1BAC6F180()
{
  unint64_t result;

  result = qword_1EF2BAC90;
  if (!qword_1EF2BAC90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882BF8, &type metadata for DebugFormatContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1EF2BAC90);
  }
  return result;
}

unint64_t sub_1BAC6F1C4()
{
  unint64_t result;

  result = qword_1EF2BAC80;
  if (!qword_1EF2BAC80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB923914, &type metadata for DebugFormatDevice);
    atomic_store(result, (unint64_t *)&qword_1EF2BAC80);
  }
  return result;
}

unint64_t sub_1BAC6F208()
{
  unint64_t result;

  result = qword_1EF2B1100;
  if (!qword_1EF2B1100)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatBackendEnvironment, &type metadata for DebugFormatBackendEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EF2B1100);
  }
  return result;
}

unint64_t sub_1BAC6F24C()
{
  unint64_t result;

  result = qword_1EF2B1120;
  if (!qword_1EF2B1120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatUploadTarget, &type metadata for DebugFormatUploadTarget);
    atomic_store(result, (unint64_t *)&qword_1EF2B1120);
  }
  return result;
}

void sub_1BAC6F290(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB86D3CC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BAC6F2E8()
{
  unint64_t result;

  result = qword_1EF2B1130;
  if (!qword_1EF2B1130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutOrder, &type metadata for FeedLayoutOrder);
    atomic_store(result, (unint64_t *)&qword_1EF2B1130);
  }
  return result;
}

void sub_1BAC6F32C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BA4A2870(a4, a3, a5);
    v9 = sub_1BB86D3CC();
    if (!v10)
      atomic_store(v9, a2);
  }
}

BOOL static WebEmbedDataSourceManagerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WebEmbedDataSourceManagerError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t WebEmbedDataSourceManagerError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAC6F430()
{
  unint64_t result;

  result = qword_1EF2B1160;
  if (!qword_1EF2B1160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataSourceManagerError, &type metadata for WebEmbedDataSourceManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF2B1160);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebEmbedDataSourceManagerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAC6F4C0 + 4 * byte_1BB8AA115[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAC6F4F4 + 4 * asc_1BB8AA110[v4]))();
}

uint64_t sub_1BAC6F4F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC6F4FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAC6F504);
  return result;
}

uint64_t sub_1BAC6F510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAC6F518);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAC6F51C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC6F524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourceManagerError()
{
  return &type metadata for WebEmbedDataSourceManagerError;
}

uint64_t initializeBufferWithCopyOfBuffer for SportsEventSearchKey(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for SportsStandingDataVisualizationMetadata()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for SportsEventSearchKey(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsEventSearchKey(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsEventSearchKey()
{
  return &type metadata for SportsEventSearchKey;
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.prepare(visualizations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.add(observer:visualization:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.remove(observer:visualization:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.datastore(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.datastores(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.failures(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerType.record(for:standing:standingRecordConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_1BAC6F63C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  swift_retain();
  sub_1BAC77BF8(a2, a1);
  swift_release();
  sub_1BA4B07F0(0, &qword_1ED3AE468, type metadata accessor for WebEmbedDataVisualizationDataRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86C67C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BAC77EA0();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v4, MEMORY[0x1E0CB0018]);
  v5 = sub_1BB872BC8();
  v6 = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    MEMORY[0x1E0C80A78](v6);
    sub_1BAC77F18();
    sub_1BB86EC14();
    swift_bridgeObjectRelease();
    *(_QWORD *)(swift_allocObject() + 16) = a2;
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BB86E854();
    type metadata accessor for WebEmbedDataSourceManager();
    v8 = sub_1BB86E980();
    swift_release();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED3A6A08 != -1)
      swift_once();
    v9 = (id)qword_1ED476638;
    v10 = sub_1BB87330C();
    sub_1BB86EF44("Web embed data source manager attempt to prepare but no stale data", 66, 2, &dword_1BA493000, v9, v10, MEMORY[0x1E0DEE9D8]);

    return sub_1BB44B088(a2);
  }
  return v8;
}

uint64_t sub_1BAC6F88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  if (qword_1ED3A6A08 != -1)
    swift_once();
  v5 = (void *)qword_1ED476638;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  v7 = v5;
  swift_bridgeObjectRetain();
  v8 = sub_1BB87330C();
  sub_1BB86EF44("Web embed data source manager did prepare visualizations %{public}@", 67, 2, &dword_1BA493000, v7, v8, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC6F998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (qword_1ED3A6A08 != -1)
    swift_once();
  v5 = (id)qword_1ED476638;
  v6 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  swift_bridgeObjectRetain();
  sub_1BB873E34();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 72) = 0;
  *(_QWORD *)(v7 + 80) = 0xE000000000000000;
  sub_1BB86EF44("Web embed data source manager failed to prepare visualizations %{public}@, error=%{public}@", 91, 2, &dword_1BA493000, v5, v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC6FB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  void (*v46)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD v57[5];
  uint64_t v58;
  unint64_t v59;

  v4 = v3;
  v56 = a2;
  v7 = *v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v55 = (char *)&v48 - v9;
  v10 = type metadata accessor for WebEmbedDatastoreUpdate();
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  MEMORY[0x1E0C80A78](v10);
  v49 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v12);
  v52 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - v18;
  v20 = sub_1BB8726B8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (uint64_t *)((char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v23 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DEF740], v20);
  v24 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, uint64_t))(v21 + 8))(v23, v20);
  if ((v24 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1BA4C2DD8(a3, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  swift_beginAccess();
  v25 = v4[7];
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1BB4AB52C((unint64_t)v19), (v27 & 1) != 0))
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v59 = v24;
  swift_endAccess();
  sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v50 = v4 + 7;
  v51 = a3;
  v48 = v7;
  if (v24 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    v28 = sub_1BB873F30();
    if (v28)
      goto LABEL_8;
    goto LABEL_21;
  }
  v28 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  if (v28)
  {
LABEL_8:
    v29 = 4;
    do
    {
      v30 = v29 - 4;
      if ((v24 & 0xC000000000000001) != 0)
      {
        v31 = MEMORY[0x1BCCE4630](v29 - 4, v24);
        v32 = v29 - 3;
        if (__OFADD__(v30, 1))
          goto LABEL_18;
      }
      else
      {
        v31 = *(_QWORD *)(v24 + 8 * v29);
        swift_retain();
        v32 = v29 - 3;
        if (__OFADD__(v30, 1))
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      v33 = MEMORY[0x1BCCE5D40](v31 + 16);
      swift_release();
      if (v33)
      {
        swift_unknownObjectRelease();
        if (v33 == a1)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
      }
      ++v29;
    }
    while (v32 != v28);
  }
LABEL_21:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  v36 = v51;
  v35 = v52;
  sub_1BA4C2DD8(v51, v52, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  type metadata accessor for WeakWebEmbedDataSourceManagerObserver();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v37 + 24) = v56;
  swift_unknownObjectWeakAssign();
  v38 = sub_1BA5193C4(v35, v37 + OBJC_IVAR____TtC8NewsFeed37WeakWebEmbedDataSourceManagerObserver_dataVisualization, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1BCCE36AC](v38);
  if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  sub_1BA4C2DD8(v36, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v39 = v59;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = v4[7];
  v4[7] = 0x8000000000000000;
  sub_1BB4BF6D8(v39, (unint64_t)v16, isUniquelyReferenced_nonNull_native);
  v4[7] = v58;
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  swift_endAccess();
  sub_1BA4C2DD8(v36, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v41 = (uint64_t)v55;
  sub_1BB86E7D0();
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v41, 1, v54) == 1)
  {
    sub_1BA5C699C(v41, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate);
  }
  else
  {
    v42 = v49;
    sub_1BA5193C4(v41, v49, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    v43 = v36;
    ObjectType = swift_getObjectType();
    v57[3] = v48;
    v57[4] = &off_1E729D660;
    v57[0] = v4;
    v45 = v56;
    v46 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8);
    swift_retain();
    v47 = ObjectType;
    v36 = v43;
    v46(v57, v43, v42, v47, v45);
    sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  sub_1BAC70120(v36);
  sub_1BB44BEF4(v36);
  sub_1BA4C2DD8(v36, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BB44DCD4((uint64_t)v16, 0, 0);
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
}

uint64_t sub_1BAC70120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  int EnumCaseMultiPayload;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  void (*v102)(char *, uint64_t);
  double v103;
  double v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t *v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char v124;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  void (*v139)(char *, uint64_t);
  double v140;
  double v141;
  uint64_t v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  int v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  _QWORD *v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t *v166;
  _QWORD *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  char v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  os_unfair_lock_s *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  unint64_t v194;
  __int128 v195;
  __int128 v196;
  uint64_t *v197;
  uint64_t *v198;
  _QWORD *v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t *v227;
  uint64_t *v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  unint64_t v243;

  v2 = v1;
  v203 = sub_1BB86C8B0();
  v202 = *(_QWORD *)(v203 - 8);
  MEMORY[0x1E0C80A78](v203);
  v193 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v192 = (char *)&v183 - v6;
  MEMORY[0x1E0C80A78](v7);
  v191 = (char *)&v183 - v8;
  MEMORY[0x1E0C80A78](v9);
  v190 = (char *)&v183 - v10;
  v201 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v201);
  v189 = (uint64_t)&v183 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v188 = (uint64_t)&v183 - v13;
  sub_1BA4B07F0(0, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v213 = (char *)&v183 - v15;
  v218 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  v212 = *(_QWORD *)(v218 - 8);
  MEMORY[0x1E0C80A78](v218);
  v200 = (uint64_t *)((char *)&v183 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v199 = (uint64_t *)((char *)&v183 - v18);
  MEMORY[0x1E0C80A78](v19);
  v215 = (uint64_t)&v183 - v20;
  v183 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v183);
  v22 = (char *)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = type metadata accessor for WebEmbedDataVisualization();
  v23 = *(_QWORD *)(v238 - 8);
  MEMORY[0x1E0C80A78](v238);
  v227 = (uint64_t *)((char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v229 = (uint64_t *)((char *)&v183 - v26);
  MEMORY[0x1E0C80A78](v27);
  v236 = (uint64_t)&v183 - v28;
  MEMORY[0x1E0C80A78](v29);
  v198 = (uint64_t *)((char *)&v183 - v30);
  MEMORY[0x1E0C80A78](v31);
  v233 = (uint64_t)&v183 - v32;
  MEMORY[0x1E0C80A78](v33);
  v226 = (uint64_t *)((char *)&v183 - v34);
  MEMORY[0x1E0C80A78](v35);
  v228 = (uint64_t *)((char *)&v183 - v36);
  MEMORY[0x1E0C80A78](v37);
  v235 = (uint64_t)&v183 - v38;
  MEMORY[0x1E0C80A78](v39);
  v197 = (uint64_t *)((char *)&v183 - v40);
  MEMORY[0x1E0C80A78](v41);
  v232 = (uint64_t)&v183 - v42;
  MEMORY[0x1E0C80A78](v43);
  v220 = (uint64_t)&v183 - v44;
  MEMORY[0x1E0C80A78](v45);
  v224 = (uint64_t)&v183 - v46;
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v183 - v48;
  MEMORY[0x1E0C80A78](v50);
  v216 = (uint64_t)&v183 - v51;
  sub_1BA4B07F0(0, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v52 = *(unsigned __int8 *)(v23 + 80);
  v53 = (v52 + 32) & ~v52;
  v237 = *(_QWORD *)(v23 + 72);
  v211 = v54;
  v210 = v53 + v237;
  v209 = v52 | 7;
  v55 = swift_allocObject();
  v208 = xmmword_1BB87CE70;
  *(_OWORD *)(v55 + 16) = xmmword_1BB87CE70;
  sub_1BA4C2DD8(a1, v55 + v53, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v221 = a1;
  v56 = sub_1BB47B828();
  v242 = v55;
  sub_1BA604D90(v56);
  v57 = v242;
  v187 = *(_QWORD *)(v242 + 16);
  if (v187)
  {
    v58 = 0;
    v207 = v53;
    v186 = v242 + v53;
    v196 = xmmword_1BB87A390;
    v195 = xmmword_1BB87FC80;
    v206 = v2;
    v185 = v49;
    v184 = v242;
    while (v58 < *(_QWORD *)(v57 + 16))
    {
      sub_1BA4C2DD8(v186 + v58 * v237, v216, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4C2DD8(v221, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() != 1)
        __asm { BR              X10 }
      sub_1BA5193C4((uint64_t)v49, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      v59 = *(_QWORD *)&v22[*(int *)(v183 + 24)];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      v194 = v58;
      v219 = v59;
      if (v59 >> 62)
      {
        swift_bridgeObjectRetain();
        v60 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (!v60)
          goto LABEL_3;
LABEL_10:
        if (v60 >= 1)
        {
          v61 = 0;
          v231 = *(_QWORD *)(v2 + 72);
          v222 = v219 & 0xC000000000000001;
          v214 = v219 + 32;
          v223 = v60;
          while (1)
          {
            v234 = v61;
            if (v222)
            {
              v65 = MEMORY[0x1BCCE4630]();
            }
            else
            {
              v65 = *(_QWORD *)(v214 + 8 * v61);
              swift_retain();
            }
            v66 = v65 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
            sub_1BB86E7D0();
            if (v242)
            {
              v62 = *(os_unfair_lock_s **)(v242 + 16);
              swift_retain();
              os_unfair_lock_lock(v62 + 6);
              v63 = v220;
              sub_1BA4C2DD8(v221, v220, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              v64 = v224;
              sub_1BA9DA054(v224, v63);
              sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              os_unfair_lock_unlock(v62 + 6);
              swift_release();
              swift_release();
              goto LABEL_13;
            }
            v217 = v65;
            v67 = (uint64_t)v213;
            sub_1BB86E7D0();
            v68 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v212 + 48))(v67, 1, v218) == 1;
            v225 = v66;
            if (v68)
            {
              sub_1BA5C699C(v67, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
              if (qword_1ED3A6A08 != -1)
                swift_once();
              v69 = (void *)qword_1ED476638;
              sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v70 = swift_allocObject();
              *(_OWORD *)(v70 + 16) = v196;
              v71 = v69;
              v72 = v216;
              v73 = sub_1BAC73668();
              v75 = v74;
              v76 = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEA968];
              v77 = sub_1BA6A2D8C();
              *(_QWORD *)(v70 + 64) = v77;
              *(_QWORD *)(v70 + 32) = v73;
              *(_QWORD *)(v70 + 40) = v75;
              v78 = sub_1BB86C538();
              *(_QWORD *)(v70 + 96) = v76;
              *(_QWORD *)(v70 + 104) = v77;
              *(_QWORD *)(v70 + 72) = v78;
              *(_QWORD *)(v70 + 80) = v79;
              v80 = sub_1BB87330C();
              sub_1BB86EF44("Web embed data source manager subscribing to visualization data %{public}@ with immediate fetch, %{public}@", 107, 2, &dword_1BA493000, v71, v80, v70);

              swift_bridgeObjectRelease();
              v81 = swift_allocObject();
              *(_OWORD *)(v81 + 16) = v208;
              v205 = v81;
              v82 = v81 + v207;
              sub_1BA4C2DD8(v72, v81 + v207, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              sub_1BA4A2870((unint64_t *)&unk_1ED3A7A50, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
              v83 = sub_1BB873060();
              v84 = v233;
              sub_1BA4C2DD8(v82, v233, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              sub_1BB8745CC();
              v85 = v84;
              v86 = v198;
              sub_1BA4C2DD8(v85, (uint64_t)v198, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              v204 = v82;
              if (EnumCaseMultiPayload == 1)
              {
                sub_1BA5193C4((uint64_t)v86, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
                v240 = 0x3A636972656E6567;
                v241 = 0xE90000000000003ALL;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BB872AFC(v88);
                swift_bridgeObjectRelease();
                sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
              }
              else
              {
                v239 = *v86;
                v240 = 0x3A3A7374726F7073;
                v241 = 0xE800000000000000;
                swift_bridgeObjectRetain();
                SportsDataVisualization.identifier.getter();
                sub_1BB872AFC(v106);
                swift_bridgeObjectRelease();
                swift_release();
              }
              sub_1BB872A90();
              swift_bridgeObjectRelease();
              v107 = sub_1BB874608();
              v108 = -1 << *(_BYTE *)(v83 + 32);
              v109 = v107 & ~v108;
              if (((*(_QWORD *)(v83 + 56 + ((v109 >> 3) & 0xFFFFFFFFFFFFF8)) >> v109) & 1) == 0)
              {
LABEL_43:
                swift_bridgeObjectRelease();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v126 = v233;
                v127 = v224;
                sub_1BA4C2DD8(v233, v224, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                v242 = v83;
                sub_1BA9E46BC(v127, v109, isUniquelyReferenced_nonNull_native);
                v83 = v242;
                swift_bridgeObjectRelease();
                v128 = v126;
                v2 = v206;
                goto LABEL_74;
              }
              v230 = ~v108;
              while (2)
              {
                v110 = v236;
                sub_1BA4C2DD8(*(_QWORD *)(v83 + 48) + v109 * v237, v236, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                v111 = v110;
                v112 = v229;
                sub_1BA4C2DD8(v111, (uint64_t)v229, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  sub_1BA5193C4((uint64_t)v112, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
                  v242 = 0x3A636972656E6567;
                  v243 = 0xE90000000000003ALL;
                  swift_bridgeObjectRetain();
                  sub_1BB872AFC(v113);
                  swift_bridgeObjectRelease();
                  v115 = v242;
                  v114 = v243;
                  sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
                }
                else
                {
                  v116 = *v112;
                  v242 = 0x3A3A7374726F7073;
                  v243 = 0xE800000000000000;
                  v240 = v116;
                  SportsDataVisualization.identifier.getter();
                  sub_1BB872AFC(v117);
                  swift_bridgeObjectRelease();
                  swift_release();
                  v115 = v242;
                  v114 = v243;
                }
                v118 = v227;
                sub_1BA4C2DD8(v233, (uint64_t)v227, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  sub_1BA5193C4((uint64_t)v118, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
                  v242 = 0x3A636972656E6567;
                  v243 = 0xE90000000000003ALL;
                  swift_bridgeObjectRetain();
                  sub_1BB872AFC(v119);
                  swift_bridgeObjectRelease();
                  v120 = v242;
                  v121 = v243;
                  sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
                  if (v115 != v120)
                  {
LABEL_41:
                    v124 = sub_1BB874398();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1BA4A2E80(v236, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                    if ((v124 & 1) != 0)
                      goto LABEL_73;
                    v109 = (v109 + 1) & v230;
                    if (((*(_QWORD *)(v83 + 56 + ((v109 >> 3) & 0xFFFFFFFFFFFFF8)) >> v109) & 1) == 0)
                      goto LABEL_43;
                    continue;
                  }
                }
                else
                {
                  v122 = *v118;
                  v242 = 0x3A3A7374726F7073;
                  v243 = 0xE800000000000000;
                  v240 = v122;
                  SportsDataVisualization.identifier.getter();
                  sub_1BB872AFC(v123);
                  swift_bridgeObjectRelease();
                  swift_release();
                  v121 = v243;
                  if (v115 != v242)
                    goto LABEL_41;
                }
                break;
              }
              if (v114 == v121)
              {
                swift_bridgeObjectRelease_n();
                sub_1BA4A2E80(v236, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_73:
                swift_bridgeObjectRelease();
                v2 = v206;
                v128 = v233;
LABEL_74:
                v177 = v225;
                sub_1BA4A2E80(v128, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                swift_setDeallocating();
                swift_arrayDestroy();
                swift_deallocClassInstance();
                sub_1BAC751E0(v177, v83, 0, 1);
                swift_bridgeObjectRelease();
                goto LABEL_78;
              }
              goto LABEL_41;
            }
            v89 = v215;
            sub_1BA5193C4(v67, v215, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
            if (qword_1ED3A6A08 != -1)
              swift_once();
            v90 = (void *)qword_1ED476638;
            sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v91 = swift_allocObject();
            *(_OWORD *)(v91 + 16) = v195;
            v92 = v90;
            v93 = sub_1BAC73668();
            v95 = v94;
            *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
            v96 = sub_1BA6A2D8C();
            *(_QWORD *)(v91 + 64) = v96;
            *(_QWORD *)(v91 + 32) = v93;
            *(_QWORD *)(v91 + 40) = v95;
            v97 = v199;
            sub_1BA4C2DD8(v89, (uint64_t)v199, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v98 = v202;
              v99 = v191;
              v100 = v203;
              (*(void (**)(char *, uint64_t, uint64_t))(v202 + 16))(v191, *v97 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate, v203);
              v101 = v190;
              sub_1BB86C7FC();
              v102 = *(void (**)(char *, uint64_t))(v98 + 8);
              v102(v99, v100);
              sub_1BB86C844();
              v104 = v103;
              swift_release();
              if (v104 < 0.0)
                v104 = 0.0;
              v105 = v101;
              v89 = v215;
              v102(v105, v100);
            }
            else
            {
              v129 = v188;
              sub_1BA5193C4((uint64_t)v97, v188, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
              sub_1BB86C844();
              if (v130 < 0.0)
                v104 = 0.0;
              else
                v104 = v130;
              sub_1BA4A2E80(v129, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
            }
            *(_QWORD *)(v91 + 96) = MEMORY[0x1E0DEB070];
            *(_QWORD *)(v91 + 104) = MEMORY[0x1E0DEB100];
            *(double *)(v91 + 72) = v104;
            v131 = sub_1BB86C538();
            *(_QWORD *)(v91 + 136) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v91 + 144) = v96;
            *(_QWORD *)(v91 + 112) = v131;
            *(_QWORD *)(v91 + 120) = v132;
            v133 = sub_1BB87330C();
            sub_1BB86EF44("Web embed data source manager subscribing to visualization data %{public}@ with %f delayed fetch %{public}@", 107, 2, &dword_1BA493000, v92, v133, v91);

            swift_bridgeObjectRelease();
            v134 = v200;
            sub_1BA4C2DD8(v89, (uint64_t)v200, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v135 = v202;
              v136 = v193;
              v137 = v203;
              (*(void (**)(char *, uint64_t, uint64_t))(v202 + 16))(v193, *v134 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate, v203);
              v138 = v192;
              sub_1BB86C7FC();
              v139 = *(void (**)(char *, uint64_t))(v135 + 8);
              v139(v136, v137);
              sub_1BB86C844();
              v141 = v140;
              swift_release();
              if (v141 < 0.0)
                v141 = 0.0;
              v139(v138, v137);
            }
            else
            {
              v142 = v189;
              sub_1BA5193C4((uint64_t)v134, v189, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
              sub_1BB86C844();
              if (v143 < 0.0)
                v141 = 0.0;
              else
                v141 = v143;
              sub_1BA4A2E80(v142, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
            }
            v144 = v207;
            v145 = swift_allocObject();
            *(_OWORD *)(v145 + 16) = v208;
            sub_1BA4C2DD8(v216, v145 + v144, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2870((unint64_t *)&unk_1ED3A7A50, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
            v146 = sub_1BB873060();
            v147 = v232;
            sub_1BA4C2DD8(v145 + v144, v232, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BB8745CC();
            v148 = v147;
            v149 = v197;
            sub_1BA4C2DD8(v148, (uint64_t)v197, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            v150 = swift_getEnumCaseMultiPayload();
            v205 = v145;
            v204 = v145 + v144;
            if (v150 == 1)
            {
              sub_1BA5193C4((uint64_t)v149, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
              v240 = 0x3A636972656E6567;
              v241 = 0xE90000000000003ALL;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BB872AFC(v151);
              swift_bridgeObjectRelease();
              sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
            }
            else
            {
              v239 = *v149;
              v240 = 0x3A3A7374726F7073;
              v241 = 0xE800000000000000;
              swift_bridgeObjectRetain();
              SportsDataVisualization.identifier.getter();
              sub_1BB872AFC(v152);
              swift_bridgeObjectRelease();
              swift_release();
            }
            sub_1BB872A90();
            swift_bridgeObjectRelease();
            v153 = sub_1BB874608();
            v154 = -1 << *(_BYTE *)(v146 + 32);
            v155 = v153 & ~v154;
            v156 = v146 + 56;
            if (((*(_QWORD *)(v146 + 56 + ((v155 >> 3) & 0xFFFFFFFFFFFFF8)) >> v155) & 1) == 0)
            {
LABEL_71:
              swift_bridgeObjectRelease();
              v173 = swift_isUniquelyReferenced_nonNull_native();
              v174 = v232;
              v175 = v224;
              sub_1BA4C2DD8(v232, v224, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              v242 = v146;
              sub_1BA9E46BC(v175, v155, v173);
              v146 = v242;
              swift_bridgeObjectRelease();
              v176 = v174;
              v2 = v206;
              goto LABEL_77;
            }
            v157 = ~v154;
            v230 = v146;
            while (1)
            {
              v158 = v235;
              sub_1BA4C2DD8(*(_QWORD *)(v146 + 48) + v155 * v237, v235, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              v159 = v158;
              v160 = v228;
              sub_1BA4C2DD8(v159, (uint64_t)v228, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                sub_1BA5193C4((uint64_t)v160, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
                v242 = 0x3A636972656E6567;
                v243 = 0xE90000000000003ALL;
                swift_bridgeObjectRetain();
                sub_1BB872AFC(v161);
                swift_bridgeObjectRelease();
                v163 = v242;
                v162 = v243;
                sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
              }
              else
              {
                v164 = *v160;
                v242 = 0x3A3A7374726F7073;
                v243 = 0xE800000000000000;
                v240 = v164;
                SportsDataVisualization.identifier.getter();
                sub_1BB872AFC(v165);
                swift_bridgeObjectRelease();
                swift_release();
                v163 = v242;
                v162 = v243;
              }
              v166 = v226;
              sub_1BA4C2DD8(v232, (uint64_t)v226, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              if (swift_getEnumCaseMultiPayload() != 1)
                break;
              sub_1BA5193C4((uint64_t)v166, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
              v242 = 0x3A636972656E6567;
              v243 = 0xE90000000000003ALL;
              swift_bridgeObjectRetain();
              sub_1BB872AFC(v167);
              swift_bridgeObjectRelease();
              v168 = v242;
              v169 = v243;
              v146 = v230;
              sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
              if (v163 == v168)
                goto LABEL_68;
LABEL_69:
              v172 = sub_1BB874398();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BA4A2E80(v235, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              if ((v172 & 1) != 0)
                goto LABEL_76;
              v155 = (v155 + 1) & v157;
              if (((*(_QWORD *)(v156 + ((v155 >> 3) & 0xFFFFFFFFFFFFF8)) >> v155) & 1) == 0)
                goto LABEL_71;
            }
            v170 = *v166;
            v242 = 0x3A3A7374726F7073;
            v243 = 0xE800000000000000;
            v240 = v170;
            SportsDataVisualization.identifier.getter();
            sub_1BB872AFC(v171);
            swift_bridgeObjectRelease();
            swift_release();
            v169 = v243;
            if (v163 != v242)
              goto LABEL_69;
LABEL_68:
            if (v162 != v169)
              goto LABEL_69;
            swift_bridgeObjectRelease_n();
            sub_1BA4A2E80(v235, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_76:
            swift_bridgeObjectRelease();
            v2 = v206;
            v176 = v232;
LABEL_77:
            v178 = v225;
            sub_1BA4A2E80(v176, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1BAC751E0(v178, v146, *(uint64_t *)&v141, 0);
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v215, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
LABEL_78:
            sub_1BB86E7D0();
            if (v242)
            {
              v179 = *(os_unfair_lock_s **)(v242 + 16);
              swift_retain();
              os_unfair_lock_lock(v179 + 6);
              v180 = v220;
              sub_1BA4C2DD8(v221, v220, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              v181 = v224;
              sub_1BA9DA054(v224, v180);
              sub_1BA4A2E80(v181, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              os_unfair_lock_unlock(v179 + 6);
              swift_release();
              swift_release();
            }
LABEL_13:
            swift_release();
            v61 = v234 + 1;
            if (v234 + 1 == v223)
              goto LABEL_3;
          }
        }
LABEL_86:
        __break(1u);
        JUMPOUT(0x1BAC71AC0);
      }
      v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v60)
        goto LABEL_10;
LABEL_3:
      v58 = v194 + 1;
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v216, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v49 = v185;
      v57 = v184;
      if (v58 == v187)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
    goto LABEL_86;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC71ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  char v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_unfair_lock_s *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86[4];

  v4 = v3;
  v7 = sub_1BB86C67C();
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  MEMORY[0x1E0C80A78](v7);
  v76 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v82 = (uint64_t)&v70 - v10;
  v11 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v71);
  v79 = (uint64_t *)((char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v15);
  v81 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v84 = (unint64_t)&v70 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v70 - v20;
  v22 = sub_1BB8726B8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v25 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, unint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v26 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, unint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BA4C2DD8(a3, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v80 = v4 + 56;
  swift_beginAccess();
  v27 = *(_QWORD *)(v4 + 56);
  v28 = MEMORY[0x1E0DEE9D8];
  v23 = a3;
  if (*(_QWORD *)(v27 + 16))
  {
    v29 = sub_1BB4AB52C((unint64_t)v21);
    if ((v30 & 1) != 0)
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v29);
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  swift_endAccess();
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v86[0] = v28;
  if (v22 >> 62)
  {
LABEL_25:
    swift_unknownObjectRetain();
    v31 = sub_1BB873F30();
    v83 = v23;
    if (v31)
      goto LABEL_9;
    goto LABEL_26;
  }
  v31 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  v83 = a3;
  if (v31)
  {
LABEL_9:
    v73 = (unint64_t)v13;
    *(_QWORD *)&v74 = v11;
    v75 = v4;
    v23 = 0;
    v13 = (char *)(v22 & 0xFFFFFFFFFFFFFF8);
    while (1)
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x1BCCE4630](v23, v22);
        v32 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_21:
          __break(1u);
LABEL_22:
          v34 = v86[0];
          v23 = v83;
          v4 = v75;
          v13 = (char *)v73;
          v11 = v74;
          goto LABEL_27;
        }
      }
      else
      {
        if (v23 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_24;
        }
        v11 = *(_QWORD *)(v22 + 8 * v23 + 32);
        swift_retain();
        v32 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_21;
      }
      v33 = MEMORY[0x1BCCE5D40](v11 + 16);
      if (v33 && (v4 = v33, swift_unknownObjectRelease(), v4 == a1) || !MEMORY[0x1BCCE5D40](v11 + 16))
      {
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
        sub_1BB873DB0();
        v4 = *(_QWORD *)(v86[0] + 16);
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
      }
      ++v23;
      if (v32 == v31)
        goto LABEL_22;
    }
  }
LABEL_26:
  v34 = MEMORY[0x1E0DEE9D8];
LABEL_27:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v35 = v84;
  sub_1BA4C2DD8(v23, v84, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if ((v34 & 0x8000000000000000) == 0 && (v34 & 0x4000000000000000) == 0)
  {
    v37 = v80;
    v36 = (unint64_t)v81;
    if (*(_QWORD *)(v34 + 16))
      goto LABEL_30;
LABEL_33:
    swift_release();
    swift_beginAccess();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  v39 = sub_1BB873F30();
  swift_release();
  v37 = v80;
  v36 = (unint64_t)v81;
  if (!v39)
    goto LABEL_33;
LABEL_30:
  swift_beginAccess();
  if (!v34)
  {
LABEL_34:
    sub_1BAA49618(v35);
    sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v85 = *(_QWORD *)v37;
  *(_QWORD *)v37 = 0x8000000000000000;
  sub_1BB4BF6D8(v34, v35, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v37 = v85;
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
LABEL_35:
  swift_endAccess();
  sub_1BA4C2DD8(v23, v36, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v37 + 16))
  {
    sub_1BB4AB52C(v36);
    if ((v40 & 1) != 0)
    {
      swift_endAccess();
      return sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    }
  }
  swift_endAccess();
  sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v75 = v42;
  v43 = swift_allocObject();
  v74 = xmmword_1BB87CE70;
  *(_OWORD *)(v43 + 16) = xmmword_1BB87CE70;
  v44 = WebEmbedDataVisualization.identifier.getter();
  v46 = v45;
  *(_QWORD *)(v43 + 56) = MEMORY[0x1E0DEA968];
  v73 = sub_1BA6A2D8C();
  *(_QWORD *)(v43 + 64) = v73;
  *(_QWORD *)(v43 + 32) = v44;
  *(_QWORD *)(v43 + 40) = v46;
  v72 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
  v47 = (void *)sub_1BB873A08();
  v48 = sub_1BB87330C();
  sub_1BB86EF44("Web embed data source manager detected no more observers for data from visualization %{public}@; cleaning up polling work items",
    127,
    2,
    &dword_1BA493000,
    v47,
    v48,
    v43);
  swift_bridgeObjectRelease();

  sub_1BB448434(v23);
  v49 = v79;
  sub_1BA4C2DD8(v23, (uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v49, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v50 = *(_QWORD *)&v13[*(int *)(v11 + 24)];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v86[0] = *v49;
    SportsDataVisualization.urlDataSources.getter();
    v50 = (unint64_t)v51;
    swift_release();
  }
  if (v50 >> 62)
  {
LABEL_58:
    swift_bridgeObjectRetain();
    v52 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v52)
      goto LABEL_43;
  }
  else
  {
    v52 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v52)
    {
LABEL_43:
      v53 = *(_QWORD *)(v4 + 72);
      v84 = v50 & 0xC000000000000001;
      v54 = 4;
      v80 = v52;
      v81 = (char *)v50;
      v79 = (uint64_t *)v53;
      do
      {
        v55 = v54 - 4;
        if (v84)
        {
          v56 = MEMORY[0x1BCCE4630](v54 - 4, v50);
          v57 = v54 - 3;
          if (__OFADD__(v55, 1))
            goto LABEL_57;
        }
        else
        {
          v56 = *(_QWORD *)(v50 + 8 * v54);
          swift_retain();
          v57 = v54 - 3;
          if (__OFADD__(v55, 1))
          {
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
        }
        v4 = v56 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
        sub_1BB86E7D0();
        v58 = v86[0];
        if (v86[0])
        {
          v59 = *(os_unfair_lock_s **)(v86[0] + 16);
          swift_retain();
          os_unfair_lock_lock(v59 + 6);
          v60 = v82;
          sub_1BAC75F20(v83, v82);
          sub_1BA5C699C(v60, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          os_unfair_lock_unlock(v59 + 6);
          swift_release();
          v61 = *(_QWORD *)(v58 + 16);
          swift_retain();
          os_unfair_lock_lock((os_unfair_lock_t)(v61 + 24));
          sub_1BA8B312C((_QWORD *)(v61 + 16), v86);
          os_unfair_lock_unlock((os_unfair_lock_t)(v61 + 24));
          v62 = v86[0];
          swift_release();
          v63 = *(_QWORD *)(v62 + 16);
          swift_bridgeObjectRelease();
          if (v63)
          {
            swift_release();
            swift_release();
            v52 = v80;
            v50 = (unint64_t)v81;
          }
          else
          {
            v64 = swift_allocObject();
            *(_OWORD *)(v64 + 16) = v74;
            v65 = sub_1BB86C538();
            v66 = v73;
            *(_QWORD *)(v64 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v64 + 64) = v66;
            *(_QWORD *)(v64 + 32) = v65;
            *(_QWORD *)(v64 + 40) = v67;
            v68 = (void *)sub_1BB873A08();
            v69 = sub_1BB87330C();
            sub_1BB86EF44("Web embed data source manager canceling and removing work item for url %{public}@", 81, 2, &dword_1BA493000, v68, v69, v64);
            swift_bridgeObjectRelease();

            sub_1BB86E7D0();
            v52 = v80;
            if (v86[0])
            {
              swift_retain();
              swift_release();
              sub_1BB8726A0();
              swift_release();
            }
            (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v4, v78);
            v86[0] = 0;
            sub_1BB86E7DC();
            swift_release();
            swift_release();
            v50 = (unint64_t)v81;
          }
        }
        else
        {
          swift_release();
        }
        ++v54;
      }
      while (v57 != v52);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC72480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  sub_1BA4C2DD8(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BB86E7D0();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v8 = type metadata accessor for WebEmbedDatastoreUpdate();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate);
    return 0;
  }
  else
  {
    v9 = *(_QWORD *)&v7[*(int *)(v8 + 20)];
    swift_retain();
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  }
  return v9;
}

uint64_t sub_1BAC725D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v2 = type metadata accessor for WebEmbedDatastoreUpdate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_BYTE *)(a1 + 8);
  v13 = *(_QWORD *)a1;
  v14 = v6;
  v7 = sub_1BB44A21C(&v13);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v9 = v7 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      swift_retain();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v9 += v10;
      --v8;
    }
    while (v8);
    v11 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v11;
}

uint64_t sub_1BAC72734()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  unint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v65 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v65);
  v1 = (char *)&v56 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v56 - v3;
  v5 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v56 - v9;
  v11 = type metadata accessor for WebEmbedDatastoreProperty();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v56 - v15;
  v70 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents);
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v61 = v14;
      v62 = v1;
      v19 = &v16[*(int *)(v59 + 20)];
      v63 = (_QWORD *)(v66 + 16);
      v20 = v17 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      v68 = *(_QWORD *)(v58 + 72);
      v60 = v17;
      swift_bridgeObjectRetain();
      v67 = v10;
      v64 = v19;
      do
      {
        sub_1BA4C2DD8(v20, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
        sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
        sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v21 = swift_retain();
          MEMORY[0x1BCCE36AC](v21);
          if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          swift_release();
        }
        else
        {
          v22 = v16;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
          v23 = __swift_project_boxed_opaque_existential_1(v63, *(_QWORD *)(v66 + 40));
          v24 = *(int *)(v65 + 32);
          v25 = v4;
          v26 = *v23;
          sub_1BB86DD20();
          v27 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
          swift_beginAccess();
          v28 = *v27;
          if (*(_QWORD *)(v28 + 16))
          {
            v29 = sub_1BB4AB2C8((uint64_t)&v25[v24]);
            v4 = v25;
            if ((v30 & 1) != 0)
            {
              v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
              swift_retain();
            }
            else
            {
              v31 = 0;
            }
          }
          else
          {
            v31 = 0;
            v4 = v25;
          }
          v16 = v22;
          swift_endAccess();
          sub_1BB86DD2C();
          v19 = v64;
          if (v31)
          {
            v32 = swift_retain();
            MEMORY[0x1BCCE36AC](v32);
            if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            swift_release();
          }
          sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
        }
        v10 = v67;
        v20 += v68;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v14 = v61;
      v1 = v62;
    }
  }
  v33 = *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents);
  if (v33 && (v61 = *(_QWORD **)(v33 + 16)) != 0)
  {
    v64 = (char *)(v66 + 16);
    v60 = v33 + 32;
    result = swift_bridgeObjectRetain();
    v35 = 0;
    v36 = type metadata accessor for WebEmbedDatastoreProperty;
    v57 = result;
    while (v35 < *(_QWORD *)(result + 16))
    {
      v37 = *(_QWORD *)(v60 + 8 * v35);
      v38 = *(_QWORD *)(v37 + 16);
      if (v38)
      {
        v62 = *(char **)(v60 + 8 * v35);
        v63 = (_QWORD *)v35;
        v39 = v58;
        v68 = v69 + *(int *)(v59 + 20);
        v40 = v37 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
        swift_bridgeObjectRetain();
        v67 = *(char **)(v39 + 72);
        do
        {
          v41 = v69;
          sub_1BA4C2DD8(v40, v69, (uint64_t (*)(_QWORD))v36);
          sub_1BA4C2DD8(v68, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
          sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))v36);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v42 = swift_retain();
            MEMORY[0x1BCCE36AC](v42);
            if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            swift_release();
          }
          else
          {
            v43 = v36;
            v44 = v5;
            sub_1BA5193C4((uint64_t)v7, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
            v45 = __swift_project_boxed_opaque_existential_1(v64, *(_QWORD *)(v66 + 40));
            v46 = *(int *)(v65 + 32);
            v47 = v1;
            v48 = *v45;
            sub_1BB86DD20();
            v49 = (uint64_t *)(v48 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
            swift_beginAccess();
            v50 = *v49;
            if (*(_QWORD *)(v50 + 16))
            {
              v51 = sub_1BB4AB2C8((uint64_t)&v47[v46]);
              v1 = v47;
              if ((v52 & 1) != 0)
              {
                v53 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v51);
                swift_retain();
              }
              else
              {
                v53 = 0;
              }
            }
            else
            {
              v53 = 0;
              v1 = v47;
            }
            v5 = v44;
            v36 = v43;
            swift_endAccess();
            sub_1BB86DD2C();
            if (v53)
            {
              v54 = swift_retain();
              MEMORY[0x1BCCE36AC](v54);
              if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1BB872E44();
              sub_1BB872E8C();
              sub_1BB872DCC();
              swift_release();
            }
            sub_1BA4A2E80((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
          }
          v40 += (uint64_t)v67;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        result = v57;
        v35 = (unint64_t)v63;
      }
      if ((_QWORD *)++v35 == v61)
      {
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_44:
    v55 = v70;
    type metadata accessor for WebEmbedDatastoreFailures();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v55;
  }
  return result;
}

uint64_t sub_1BAC72DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4B07F0(0, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8) + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v5 + v4) = v6 | 0x2000000000000000;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v7 = sub_1BA60364C(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v7;
}

uint64_t sub_1BAC72EC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE *v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v67[5];
  uint64_t v68;

  v50 = a7;
  v49 = a6;
  v48 = a5;
  v47 = a4;
  v51 = a8;
  v52 = a3;
  v10 = sub_1BB8729E8();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v55 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v54);
  v58 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - v14;
  v62 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v63 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v59 = (uint64_t)&v46 - v18;
  v19 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  v65 = a2;
  if (v19 >> 62)
    goto LABEL_34;
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_retain();
  while (1)
  {
    v61 = v15;
    v64 = a1;
    if (!v20)
    {
LABEL_19:
      swift_bridgeObjectRelease_n();
      sub_1BAC772CC();
      swift_allocError();
      *v29 = 0;
      swift_willThrow();
      return swift_release();
    }
    v66 = v19 & 0xC000000000000001;
    a1 = 4;
    v21 = v20;
LABEL_7:
    v23 = a1 - 4;
    if (v66)
      break;
    v24 = *(_QWORD *)(v19 + 8 * a1);
    swift_retain();
    v25 = a1 - 3;
    if (!__OFADD__(v23, 1))
      goto LABEL_12;
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain_n();
    swift_retain();
    v20 = sub_1BB873F30();
  }
  v24 = MEMORY[0x1BCCE4630](a1 - 4, v19);
  v25 = a1 - 3;
  if (__OFADD__(v23, 1))
    goto LABEL_33;
LABEL_12:
  v15 = *(char **)(v24 + 16);
  v26 = *(_QWORD *)(v24 + 24);
  v27 = 0x617453746E657665;
  v28 = 0xEF61746144636974;
  switch(v26)
  {
    case 0uLL:
      goto LABEL_14;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      goto LABEL_5;
    case 4uLL:
      sub_1BAB05BB0(*(_QWORD *)(v24 + 16), 4uLL);
      sub_1BAB05BB0(0, 0);
      goto LABEL_6;
    default:
      v27 = *(_QWORD *)(v24 + 16);
      v28 = *(_QWORD *)(v24 + 24);
LABEL_14:
      if (v27 == 0x617453746E657665 && v28 == 0xEF61746144636974)
      {
        sub_1BA993F8C(*(_QWORD *)(v24 + 16), *(_QWORD *)(v24 + 24));
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
LABEL_5:
      v22 = sub_1BB874398();
      sub_1BA993F8C((uint64_t)v15, v26);
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
LABEL_6:
        swift_release();
        ++a1;
        if (v25 == v21)
          goto LABEL_19;
        goto LABEL_7;
      }
      swift_bridgeObjectRelease_n();
LABEL_21:
      swift_retain();
      v31 = (uint64_t)v61;
      sub_1BB86E7D0();
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v31, 1, v62);
      v33 = (uint64_t)v63;
      if (v32 == 1)
      {
        sub_1BA5C699C(v31, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
        sub_1BAC772CC();
        swift_allocError();
        *v34 = 0;
        swift_willThrow();
        swift_release();
        return swift_release_n();
      }
      v35 = v59;
      sub_1BA5193C4(v31, v59, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      sub_1BA4C2DD8(v35, v33, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
        sub_1BAC772CC();
        swift_allocError();
        *v36 = 0;
        swift_willThrow();
        swift_release();
        swift_release_n();
        v37 = v35;
        return sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      }
      v38 = v58;
      sub_1BA5193C4(v33, v58, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
      swift_bridgeObjectRetain();
      v39 = v55;
      sub_1BB8729DC();
      v40 = sub_1BB8729AC();
      v42 = v41;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v57);
      if (v42 >> 60 == 15)
      {
        sub_1BAC772CC();
        swift_allocError();
        *v43 = 1;
        swift_willThrow();
        swift_release();
        swift_release_n();
        v44 = v38;
LABEL_29:
        sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
        v37 = v59;
        return sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      }
      else
      {
        sub_1BB86DC9C();
        swift_allocObject();
        sub_1BB86DC90();
        sub_1BAC77310();
        v45 = v53;
        sub_1BB86DC78();
        if (v45)
        {
          swift_release();
          sub_1BA69D490(v40, v42);
          swift_release();
          swift_release_n();
          v44 = v58;
          goto LABEL_29;
        }
        swift_release();
        v68 = v67[0];
        v67[0] = v47;
        v67[1] = v48;
        v67[2] = v49;
        v67[3] = v50;
        sub_1BAAAAB20(v52, &v68, (uint64_t)v67, v51);
        sub_1BA69D490(v40, v42);
        swift_release();
        swift_release_n();
        sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
        sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
        return swift_bridgeObjectRelease();
      }
  }
}

uint64_t sub_1BAC73668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v0, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v18 = WebEmbedDataVisualization.kind.getter();
    v19 = v8;
    sub_1BB872AFC(v9);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v10);
    swift_bridgeObjectRelease();
    v11 = v18;
    sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v12 = *v6;
    v18 = WebEmbedDataVisualization.kind.getter();
    v19 = v13;
    sub_1BB872AFC(v14);
    v17[1] = v12;
    SportsDataVisualization.umcCanonicalId.getter();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    swift_release();
    return v18;
  }
  return v11;
}

uint64_t sub_1BAC737E0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BAC7382C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC6FB1C(a1, a2, a3);
}

uint64_t sub_1BAC7384C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC71ADC(a1, a2, a3);
}

uint64_t sub_1BAC7386C(uint64_t a1)
{
  return sub_1BAC72480(a1);
}

uint64_t sub_1BAC7388C(uint64_t a1)
{
  return sub_1BAC725D8(a1);
}

uint64_t sub_1BAC738AC()
{
  return sub_1BAC72734();
}

uint64_t sub_1BAC738CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v6 = *a3;
  v5 = a3[1];
  v8 = a3[2];
  v7 = a3[3];
  sub_1BB86EC14();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a1;
  v9[4] = v6;
  v9[5] = v5;
  v9[6] = v8;
  v9[7] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1BB86E854();
  v11 = sub_1BB86E98C();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1BAC739D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) + 24);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1BAC73A34(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  swift_retain();
  sub_1BAC78010(a1, a2);
  swift_release();
  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86ECBC();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1BAC73AC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD v21[2];
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v28 = *v1;
  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - v8;
  v10 = a1 + *(int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) + 24);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v25 = v9;
  v11(v9, v10, v3);
  v26 = (void (*)(char *, char *, uint64_t))v11;
  v29 = v1;
  v30 = a1;
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  sub_1BB86EC14();
  v11(v6, (uint64_t)v9, v3);
  v27 = v5;
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 16) & ~v12;
  v23 = v12 | 7;
  v24 = v13 + v4;
  v14 = swift_allocObject();
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v22(v14 + v13, v6, v3);
  v15 = (void *)sub_1BB86E854();
  v21[1] = sub_1BB86E98C();
  swift_release();
  swift_release();

  v16 = v25;
  v26(v6, v25, v3);
  v17 = swift_allocObject();
  v22(v17 + v13, v6, v3);
  v18 = (void *)sub_1BB86E854();
  v19 = sub_1BB86E9B0();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v3);
  return v19;
}

uint64_t sub_1BAC73CE8()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED3A6A08 != -1)
    swift_once();
  v0 = (void *)qword_1ED476638;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v2 = v0;
  v3 = sub_1BB86C538();
  v5 = v4;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  v6 = sub_1BB87330C();
  sub_1BB86EF44("Web embed data source manager prepared url %{public}@", 53, 2, &dword_1BA493000, v2, v6, v1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC73E04()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  if (qword_1ED3A6A08 != -1)
    swift_once();
  v0 = (id)qword_1ED476638;
  v1 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87A390;
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v3 = sub_1BB86C538();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0xE000000000000000;
  sub_1BB86EF44("Web embed data source manager failed to prepare url %{public}@, error=%{public}@", 80, 2, &dword_1BA493000, v0, v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC73F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t (*v14)(_QWORD);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37[8];
  uint64_t v38;

  v33 = a2;
  v36 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v15 = *(_QWORD *)&v10[*(int *)(v8 + 24)];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v38 = *v13;
    SportsDataVisualization.urlDataSources.getter();
    v15 = v16;
    swift_release();
  }
  if (!(v15 >> 62))
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v35 = a3;
    if (v17)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    v26 = v33;
    swift_retain();
    sub_1BAC773E4(v20, v26);
    v28 = v27;
    v29 = swift_release();
    MEMORY[0x1E0C80A78](v29);
    v30 = v34;
    *(&v32 - 2) = v26;
    *(&v32 - 1) = v30;
    v31 = sub_1BA8A2D18((void (*)(uint64_t))sub_1BAC7852C, (uint64_t)(&v32 - 4), v28, (uint64_t)v37);
    result = swift_bridgeObjectRelease();
    *v35 = v31;
    return result;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v35 = a3;
  if (!v17)
    goto LABEL_16;
LABEL_6:
  v38 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC79D98(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    v19 = 0;
    v20 = v38;
    v21 = v15 & 0xC000000000000001;
    v22 = v15;
    do
    {
      if (v21)
      {
        v23 = MEMORY[0x1BCCE4630](v19, v15);
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v36);
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v15 + 8 * v19 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v36);
      }
      v38 = v20;
      v25 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1BAC79D98(v24 > 1, v25 + 1, 1);
        v20 = v38;
      }
      ++v19;
      *(_QWORD *)(v20 + 16) = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v25, v7, v36);
      v15 = v22;
    }
    while (v17 != v19);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1BAC742FC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v31 = a2;
  v6 = sub_1BB86C8E0();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1BB86C67C();
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v27 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WebEmbedDataVisualization();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  sub_1BB86E7D0();
  if (!v39)
  {
    v37 = v3;
    v28 = MEMORY[0x1E0DEE9E8];
    goto LABEL_5;
  }
  v13 = *(_QWORD *)(v39 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  sub_1BA8B312C((_QWORD *)(v13 + 16), &v38);
  v37 = v3;
  v14 = (os_unfair_lock_s *)(v13 + 24);
  if (!v3)
  {
    os_unfair_lock_unlock(v14);
    v28 = v38;
    swift_release();
    swift_release();
LABEL_5:
    v15 = v31;
    sub_1BA4C2DD8(v31, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v29 = swift_getEnumCaseMultiPayload() == 1;
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v16 = v33;
    v17 = v27;
    v18 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v27, v30, v36);
    sub_1BA4B07F0(0, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    sub_1BA4C2DD8(v15, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v21 = sub_1BA90DEA0(v20, v28);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v22 = v32;
    sub_1BB86C8D4();
    v23 = sub_1BB86C8C8();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
    *(_QWORD *)a3 = v23;
    *(_QWORD *)(a3 + 8) = v25;
    *(_BYTE *)(a3 + 16) = v29;
    v26 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3 + *(int *)(v26 + 24), v17, v18);
    *(_QWORD *)(a3 + *(int *)(v26 + 28)) = v21;
    return;
  }
  os_unfair_lock_unlock(v14);
  __break(1u);
}

void sub_1BAC745F0(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  sub_1BB86E7D0();
  if (v22)
  {
    v6 = *(_QWORD *)(v22 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
    sub_1BA8B312C((_QWORD *)(v6 + 16), &v21);
    if (v2)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
      __break(1u);
      return;
    }
    v3 = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
    v7 = v21;
    swift_release();
    swift_release();
    v8 = sub_1BA938D8C(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0xE700000000000000;
    v8 = 0x6E776F6E6B6E75;
  }
  v11 = a1;
  v20 = a2;
  if (qword_1ED3A6A08 != -1)
    swift_once();
  v12 = (void *)qword_1ED476638;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87A390;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v10;
  v16 = v12;
  v17 = sub_1BB86C538();
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 72) = v17;
  *(_QWORD *)(v13 + 80) = v18;
  v19 = sub_1BB87330C();
  sub_1BB86EF44("Web embed data source manager fetched visualization data %{public}@, url=%{public}@", 83, 2, &dword_1BA493000, v16, v19, v13);

  swift_bridgeObjectRelease();
  sub_1BB44B534(v11);
  if (!v3)
    sub_1BA4C2DD8((uint64_t)v11, v20, type metadata accessor for WebEmbedDataVisualizationDataResult);
}

uint64_t sub_1BAC7480C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  sub_1BB86E7D0();
  if (v19)
  {
    v6 = *(_QWORD *)(v19 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
    sub_1BA8B312C((_QWORD *)(v6 + 16), &v20);
    os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
    v7 = v20;
    swift_release();
    swift_release();
    v8 = sub_1BA938D8C(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0xE700000000000000;
    v8 = 0x6E776F6E6B6E75;
  }
  if (qword_1ED3A6A08 != -1)
    swift_once();
  v11 = (id)qword_1ED476638;
  v12 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87FC80;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v10;
  v16 = sub_1BB86C538();
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 72) = v16;
  *(_QWORD *)(v13 + 80) = v17;
  v20 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v13 + 136) = v14;
  *(_QWORD *)(v13 + 144) = v15;
  *(_QWORD *)(v13 + 112) = 0;
  *(_QWORD *)(v13 + 120) = 0xE000000000000000;
  sub_1BB86EF44("Web embed data source manager failed fetching visualization data %{public}@, url=%{public}@,  error=%{public}@", 110, 2, &dword_1BA493000, v11, v12, v13);

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  result = sub_1BA937E7C(a3);
  if (result)
  {
    sub_1BB44B8D8(a3, result, 30);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC74A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t);
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v17[2];
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2;
  v21 = a1;
  v19 = a1;
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  sub_1BB86EC14();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v17[0] = v8 | 7;
  v17[1] = v9 + v6;
  v10 = swift_allocObject();
  v11 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v11(v10 + v9, v7, v4);
  v12 = (void *)sub_1BB86E854();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v18(v7, v19, v4);
  v13 = swift_allocObject();
  v11(v13 + v9, v7, v4);
  v14 = (void *)sub_1BB86E854();
  v15 = sub_1BB86E9B0();
  swift_release();
  swift_release();

  return v15;
}

void sub_1BAC74C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_1BB86C8E0();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1BB86C67C();
  v47 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v46 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  MEMORY[0x1E0C80A78](v40);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (os_unfair_lock_s *)((char *)&v36 - v10);
  v12 = type metadata accessor for WebEmbedDataVisualization();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v45 = (uint64_t)&v36 - v17;
  v39 = a2;
  sub_1BB86E7D0();
  v18 = v48;
  if (!v48)
    goto LABEL_5;
  v37 = v4;
  v38 = a1;
  v19 = *(_QWORD *)(v48 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
  v20 = v44;
  sub_1BA8B312C((_QWORD *)(v19 + 16), &v48);
  v44 = v20;
  v21 = (os_unfair_lock_s *)(v19 + 24);
  if (v20)
  {
    os_unfair_lock_unlock(v21);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v21);
    v22 = v48;
    swift_release();
    sub_1BA9BEA84(v22, (uint64_t)v11);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(os_unfair_lock_s *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      swift_release();
      sub_1BA5C699C((uint64_t)v11, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_5:
      sub_1BAC772CC();
      swift_allocError();
      *v23 = 2;
      swift_willThrow();
      return;
    }
    v24 = v45;
    sub_1BA5193C4((uint64_t)v11, v45, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4C2DD8(v24, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v26 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v39, v42);
    v27 = *(_QWORD *)(v18 + 16);
    v11 = (os_unfair_lock_s *)(v27 + 24);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    v28 = v44;
    sub_1BA8B312C((_QWORD *)(v27 + 16), &v48);
    if (!v28)
    {
      v29 = EnumCaseMultiPayload == 1;
      os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
      v30 = v48;
      swift_release();
      v31 = v41;
      sub_1BB86C8D4();
      v32 = sub_1BB86C8C8();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v37);
      *(_QWORD *)v8 = v32;
      *((_QWORD *)v8 + 1) = v34;
      v8[16] = v29;
      v35 = v40;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v8[*(int *)(v40 + 24)], v46, v26);
      *(_QWORD *)&v8[*(int *)(v35 + 28)] = v30;
      sub_1BAC73AC0((uint64_t)v8);
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      return;
    }
  }
  os_unfair_lock_unlock(v11);
  __break(1u);
}

void sub_1BAC75018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BB86E7D0();
  if (!v15)
  {
LABEL_6:
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v9 = sub_1BB86C538();
    v11 = v10;
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
    v12 = (void *)sub_1BB873A08();
    v13 = sub_1BB87330C();
    sub_1BB86EF44("Web embed data source manager got result from url=%{public}@ but work item is gone or empty; canceling polling",
      110,
      2,
      &dword_1BA493000,
      v12,
      v13,
      v8);
    swift_bridgeObjectRelease();

    return;
  }
  v6 = *(_QWORD *)(v15 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1BA8B312C((_QWORD *)(v6 + 16), &v14);
  if (!v3)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
    v7 = v14;
    swift_release();
    swift_release();
    if (*(_QWORD *)(v7 + 16))
    {
      ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC751E0)(a3, v7, (double)*(uint64_t *)(a1 + 16), 0);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  __break(1u);
}

void sub_1BAC751E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  double v45;
  char *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  double v58;
  int v59;
  uint64_t v60;
  _QWORD aBlock[6];

  v59 = a4;
  v8 = sub_1BB872688();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v51 - v13;
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  if (*(_QWORD *)(a2 + 16))
  {
    v55 = v18;
    v56 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v60 = a1;
    v51 = v11;
    v52 = v14;
    v57 = v4;
    v58 = *(double *)&a3;
    v53 = v9;
    v54 = v8;
    if (qword_1ED3A6A08 != -1)
      swift_once();
    v19 = (void *)qword_1ED476638;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87FC80;
    v21 = v19;
    v22 = swift_bridgeObjectRetain();
    v23 = sub_1BA938D8C(v22);
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_1BA6A2D8C();
    v28 = v27;
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v25;
    v29 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v20 + 96) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v20 + 104) = v29;
    v30 = (v59 & 1) == 0;
    v59 &= 1u;
    v31 = v58;
    if (!v30)
      v31 = 0.0;
    *(_QWORD *)(v20 + 64) = v27;
    *(double *)(v20 + 72) = v31;
    v32 = v60;
    v33 = sub_1BB86C538();
    *(_QWORD *)(v20 + 136) = v26;
    *(_QWORD *)(v20 + 144) = v28;
    *(_QWORD *)(v20 + 112) = v33;
    *(_QWORD *)(v20 + 120) = v34;
    v35 = sub_1BB87330C();
    sub_1BB86EF44("Web embed data source manager queuing fetch for visualization data %{public}@ with %f delay, url=%{public}@", 107, 2, &dword_1BA493000, v21, v35, v20);

    swift_bridgeObjectRelease();
    v36 = swift_allocObject();
    swift_weakInit();
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v38 = v56;
    v39 = v32;
    v40 = v55;
    v37(v56, v39, v55);
    v41 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v36;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v42 + v41, v38, v40);
    aBlock[4] = sub_1BAC785E0;
    aBlock[5] = v42;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_25;
    v43 = _Block_copy(aBlock);
    type metadata accessor for WebEmbedDataSourceWorkItem();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    v44 = sub_1BB73A32C(a2, v43);
    _Block_release(v43);
    swift_release();
    swift_release();
    v37(v38, v60, v40);
    aBlock[0] = v44;
    swift_retain();
    sub_1BB86E7DC();
    if (v59)
    {
      swift_retain();
      sub_1BB873480();
      swift_release();
    }
    else
    {
      v45 = v58;
      v46 = v51;
      sub_1BB87267C();
      v47 = v52;
      MEMORY[0x1BCCE2FE0](v46, v45);
      v48 = *(void (**)(char *, uint64_t))(v53 + 8);
      v49 = v46;
      v50 = v54;
      v48(v49, v54);
      sub_1BB873444();
      v48(v47, v50);
    }
    swift_release();
  }
}

void sub_1BAC755D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BB86E7D0();
  if (v15)
  {
    v5 = *(_QWORD *)(v15 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    sub_1BA8B312C((_QWORD *)(v5 + 16), &v14);
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    v6 = v14;
    swift_release();
    swift_release();
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = sub_1BAC78758(a1, 30);
      sub_1BAC751E0(a3, v6, *(_QWORD *)&v7, 0);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v9 = sub_1BB86C538();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
  v12 = (void *)sub_1BB873A08();
  v13 = sub_1BB87330C();
  sub_1BB86EF44("Web embed data source manager got error from url=%{public}@ but work item is gone or empty; canceling polling",
    109,
    2,
    &dword_1BA493000,
    v12,
    v13,
    v8);
  swift_bridgeObjectRelease();

}

uint64_t sub_1BAC75784(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BAC74A5C(a2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC757EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD v20[5];

  v4 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2;
  sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 56);
  if (!*(_QWORD *)(v7 + 16) || (v8 = sub_1BB4AB52C((unint64_t)v6), (v9 & 1) == 0))
  {
    swift_endAccess();
    return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_endAccess();
  swift_bridgeObjectRetain();
  result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return swift_bridgeObjectRelease();
  }
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v12; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0)
    {
      v14 = MEMORY[0x1BCCE4630](i, v10);
    }
    else
    {
      v14 = *(_QWORD *)(v10 + 8 * i + 32);
      swift_retain();
    }
    v15 = MEMORY[0x1BCCE5D40](v14 + 16);
    swift_unknownObjectRelease();
    if (v15)
    {
      v20[3] = type metadata accessor for WebEmbedDataSourceManager();
      v20[4] = &off_1E729D660;
      v20[0] = a1;
      if (MEMORY[0x1BCCE5D40](v14 + 16))
      {
        v16 = *(_QWORD *)(v14 + 24);
        ObjectType = swift_getObjectType();
        v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
        swift_retain_n();
        v18(v20, v19, v19, ObjectType, v16);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      swift_release();
    }
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC75A24()
{
  uint64_t v0;

  return sub_1BAC72DB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAC75A3C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAC75A78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BAC72EC8(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_1BAC75A98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v6 = sub_1BB874608();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1BB874398() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1BB874398() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BA6EF188();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1BAC766F4(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1BAC75C24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_1BB8745C0();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BA9E674C();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1BAC768B8(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BAC75D2C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v5 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB41AD48((uint64_t)v26);
  v10 = sub_1BB874608();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v22 = v2;
    v23 = v6;
    v24 = v5;
    v25 = a2;
    v13 = ~v11;
    v14 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      v15 = sub_1BB41CA78((uint64_t)v8, a1);
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      if ((v15 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v16 = 1;
        a2 = v25;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    v17 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v17;
    v26[0] = *v17;
    *v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BA9E773C();
      v19 = v26[0];
    }
    a2 = v25;
    sub_1BA5193C4(*(_QWORD *)(v19 + 48) + v14 * v12, v25, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BAC76A3C(v12);
    *v17 = v26[0];
    swift_bridgeObjectRelease();
    v16 = 0;
LABEL_10:
    v6 = v23;
    v5 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1BAC75F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v5 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WebEmbedDataVisualization();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v50 = (uint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v39 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - v14;
  v42 = v2;
  v16 = *v2;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  v51 = a1;
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v17 = sub_1BB874608();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v19 = v17 & ~v18;
  v45 = v16 + 56;
  if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v41 = a2;
    v43 = ~v18;
    v40 = v8;
    v46 = *(_QWORD *)(v8 + 72);
    v47 = v16;
    v48 = v7;
    while (1)
    {
      v20 = v46 * v19;
      sub_1BA4C2DD8(*(_QWORD *)(v16 + 48) + v46 * v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v44 = v20;
      if (EnumCaseMultiPayload == 1)
      {
        v22 = v49;
        sub_1BA5193C4((uint64_t)v12, v49, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
        v53 = 0x3A636972656E6567;
        v54 = 0xE90000000000003ALL;
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v23);
        swift_bridgeObjectRelease();
        v24 = v53;
        v25 = v54;
        sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        v52 = *v12;
        v53 = 0x3A3A7374726F7073;
        v54 = 0xE800000000000000;
        SportsDataVisualization.identifier.getter();
        sub_1BB872AFC(v26);
        swift_bridgeObjectRelease();
        swift_release();
        v24 = v53;
        v25 = v54;
      }
      v27 = v50;
      sub_1BA4C2DD8(v51, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v28 = v49;
        sub_1BA5193C4((uint64_t)v27, v49, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
        v53 = 0x3A636972656E6567;
        v54 = 0xE90000000000003ALL;
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v29);
        swift_bridgeObjectRelease();
        v31 = v53;
        v30 = v54;
        sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        v52 = *v27;
        v53 = 0x3A3A7374726F7073;
        v54 = 0xE800000000000000;
        SportsDataVisualization.identifier.getter();
        sub_1BB872AFC(v32);
        swift_bridgeObjectRelease();
        swift_release();
        v31 = v53;
        v30 = v54;
      }
      if (v24 == v31 && v25 == v30)
        break;
      v33 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v7 = v48;
      if ((v33 & 1) != 0)
        goto LABEL_16;
      v19 = (v19 + 1) & v43;
      v16 = v47;
      if (((*(_QWORD *)(v45 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v34 = 1;
        a2 = v41;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v7 = v48;
LABEL_16:
    swift_bridgeObjectRelease();
    v35 = v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *v35;
    v53 = *v35;
    *v35 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BA9E7760();
      v37 = v53;
    }
    a2 = v41;
    sub_1BA5193C4(*(_QWORD *)(v37 + 48) + v44, v41, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BAC76C88(v19);
    *v35 = v53;
    swift_bridgeObjectRelease();
    v34 = 0;
LABEL_19:
    v8 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v34, 1, v7);
}

uint64_t sub_1BAC76408@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = *v2;
  v5 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  sub_1BAB0AAD0(v5, a1);
  v7 = v6 & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X9 }
  result = swift_bridgeObjectRelease();
  *a2 = 7;
  return result;
}

unint64_t sub_1BAC766F4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v10 = sub_1BB874608();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1BAC768B8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_1BB8745C0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1BAC76A3C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25[72];

  v23 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v22 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = sub_1BB873BD0();
    v24 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v3 + 72);
      while (1)
      {
        v14 = v13 * v9;
        sub_1BA4C2DD8(*(_QWORD *)(v6 + 48) + v13 * v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        sub_1BB8745CC();
        sub_1BB41AD48((uint64_t)v25);
        v15 = sub_1BB874608();
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        v16 = v15 & v10;
        if ((uint64_t)a1 >= (uint64_t)v12)
          break;
        if (v16 < v12)
          goto LABEL_11;
LABEL_12:
        v17 = v13 * a1;
        if ((uint64_t)(v13 * a1) < v14 || *(_QWORD *)(v6 + 48) + v13 * a1 >= *(_QWORD *)(v6 + 48) + v14 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v17 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        if (((*(_QWORD *)(v24 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_16;
      }
      if (v16 < v12)
        goto LABEL_6;
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v16)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    *(_QWORD *)(v24 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v22;
  }
  else
  {
    *(_QWORD *)(v7 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v18 = *v1;
  v19 = *(_QWORD *)(*v1 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v18 + 16) = v21;
    ++*(_DWORD *)(v18 + 36);
  }
}

uint64_t sub_1BAC76C88(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v3 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v3);
  v33 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for WebEmbedDataVisualization();
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  result = *v1;
  v12 = *v1 + 56;
  v13 = -1 << *(_BYTE *)(*v1 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    v32 = v1;
    v15 = ~v13;
    v39 = result;
    swift_retain();
    v16 = sub_1BB873BD0();
    if ((*(_QWORD *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v17 = *(_QWORD *)(v5 + 72);
      v18 = v39;
      v37 = v15;
      v38 = v12;
      v35 = v17;
      v36 = (v16 + 1) & v15;
      while (1)
      {
        v19 = v17 * v14;
        sub_1BA4C2DD8(*(_QWORD *)(v18 + 48) + v17 * v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        sub_1BB8745CC();
        sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v20 = v33;
          sub_1BA5193C4((uint64_t)v7, v33, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
          v41 = 0x3A636972656E6567;
          v42 = 0xE90000000000003ALL;
          swift_bridgeObjectRetain();
          sub_1BB872AFC(v21);
          swift_bridgeObjectRelease();
          sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
        }
        else
        {
          v40 = *v7;
          v41 = 0x3A3A7374726F7073;
          v42 = 0xE800000000000000;
          SportsDataVisualization.identifier.getter();
          sub_1BB872AFC(v22);
          swift_bridgeObjectRelease();
          swift_release();
        }
        sub_1BB872A90();
        swift_bridgeObjectRelease();
        v23 = sub_1BB874608();
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v24 = v37;
        v25 = v23 & v37;
        v18 = v39;
        if ((uint64_t)a1 >= (uint64_t)v36)
          break;
        v17 = v35;
        if (v25 < v36)
          goto LABEL_14;
LABEL_15:
        v26 = v17 * a1;
        if ((uint64_t)(v17 * a1) < v19 || *(_QWORD *)(v39 + 48) + v17 * a1 >= *(_QWORD *)(v39 + 48) + v19 + v17)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v14;
          if (v26 == v19)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v14;
LABEL_6:
        v14 = (v14 + 1) & v24;
        v12 = v38;
        if (((*(_QWORD *)(v38 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          goto LABEL_20;
      }
      v17 = v35;
      if (v25 < v36)
        goto LABEL_6;
LABEL_14:
      if ((uint64_t)a1 < (uint64_t)v25)
        goto LABEL_6;
      goto LABEL_15;
    }
LABEL_20:
    *(_QWORD *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v32;
  }
  else
  {
    *(_QWORD *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v27 = *v1;
  v28 = *(_QWORD *)(*v1 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v27 + 16) = v30;
    ++*(_DWORD *)(v27 + 36);
  }
  return result;
}

unint64_t sub_1BAC77054(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(*v1 + 32));
  if (((1 << v5) & *(_QWORD *)(v4 + 8 * (v5 >> 6))) != 0)
  {
    swift_retain();
    sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v5);
      sub_1BB8745CC();
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    JUMPOUT(0x1BAC772B0);
  }
  *(_QWORD *)(v3 + 16) = v9;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1BAC772CC()
{
  unint64_t result;

  result = qword_1ED3ACA58;
  if (!qword_1ED3ACA58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataSourceManagerError, &type metadata for WebEmbedDataSourceManagerError);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA58);
  }
  return result;
}

unint64_t sub_1BAC77310()
{
  unint64_t result;

  result = qword_1EF2B1170;
  if (!qword_1EF2B1170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94FBA0, &type metadata for SportsStandingRecord);
    atomic_store(result, (unint64_t *)&qword_1EF2B1170);
  }
  return result;
}

uint64_t sub_1BAC77354()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAC77378()
{
  uint64_t v0;

  return sub_1BAC6F63C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAC77390()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAC773B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAC6F88C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAC773CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAC6F998(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BAC773E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;

  v66 = a2;
  v3 = sub_1BB86C8B0();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v48 - v6;
  MEMORY[0x1E0C80A78](v7);
  v56 = (char *)&v48 - v8;
  v50 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v50);
  v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v48 - v12;
  v13 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  MEMORY[0x1E0C80A78](v13);
  v55 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - v16;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v10);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - v19;
  v21 = sub_1BB86C67C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v67 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25.n128_f64[0] = MEMORY[0x1E0C80A78](v24);
  v68 = (char *)&v48 - v26;
  v71 = MEMORY[0x1E0DEE9D8];
  v63 = *(_QWORD *)(a1 + 16);
  if (v63)
  {
    v60 = v17;
    v61 = v20;
    v27 = 0;
    v62 = a1;
    v28 = a1;
    while (1)
    {
      if (v27 >= *(_QWORD *)(v28 + 16))
      {
        __break(1u);
        return;
      }
      v29 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v30 = *(_QWORD *)(v22 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v22 + 16))(v20, v28 + v29 + v30 * v27, v21, v25);
      v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v59)(v20, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
        goto LABEL_20;
      v70 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
      v70(v68, v20, v21);
      v31 = v69;
      sub_1BB86E7D0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v31, 1, v65) == 1)
        break;
      v32 = (uint64_t)v60;
      sub_1BA5193C4(v69, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      v33 = v32;
      v34 = v55;
      sub_1BA4C2DD8(v33, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v35 = *v34;
        v53 = v34[1];
        v54 = v35;
        v36 = v57;
        v37 = v58;
        v38 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v52, v35 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate, v58);
        v39 = v51;
        sub_1BB86C7FC();
        v40 = *(void (**)(char *, uint64_t))(v36 + 8);
        v40(v38, v37);
        v41 = v56;
        sub_1BB86C8A4();
        LODWORD(v53) = sub_1BB86C814();
        swift_release();
        v40(v41, v37);
        v40(v39, v37);
        sub_1BA4A2E80((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
        if ((v53 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        v42 = v49;
        sub_1BA5193C4((uint64_t)v34, v49, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
        v43 = v56;
        sub_1BB86C8A4();
        v44 = sub_1BB86C814();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v58);
        sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
        sub_1BA4A2E80((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
        if ((v44 & 1) != 0)
          goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v68, v21);
LABEL_4:
      v28 = v62;
      ++v27;
      v20 = v61;
      if (v63 == v27)
      {
        v59(v61, 1, 1, v21, v25);
        goto LABEL_20;
      }
    }
    sub_1BA5C699C(v69, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
LABEL_13:
    v70(v67, v68, v21);
    v45 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC79D98(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v71;
    }
    v47 = *(_QWORD *)(v45 + 16);
    v46 = *(_QWORD *)(v45 + 24);
    if (v47 >= v46 >> 1)
    {
      sub_1BAC79D98(v46 > 1, v47 + 1, 1);
      v45 = v71;
    }
    *(_QWORD *)(v45 + 16) = v47 + 1;
    v70((char *)(v45 + v29 + v47 * v30), v67, v21);
    v71 = v45;
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56))(v20, 1, 1, v21, v25);
LABEL_20:
  swift_bridgeObjectRelease();
  sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BAC779DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  char isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v32;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    sub_1BAC73F84(v6, a2, &v32);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    v9 = v32;
    v10 = *(_QWORD *)(v32 + 16);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = v11 + v10;
    if (__OFADD__(v11, v10))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v12 <= *(_QWORD *)(v8 + 24) >> 1)
    {
      if (*(_QWORD *)(v9 + 16))
        goto LABEL_15;
    }
    else
    {
      if (v11 <= v12)
        v14 = v11 + v10;
      else
        v14 = v11;
      v8 = sub_1BB391A98(isUniquelyReferenced_nonNull_native, v14, 1, v8);
      if (*(_QWORD *)(v9 + 16))
      {
LABEL_15:
        v15 = *(_QWORD *)(v8 + 16);
        v16 = (*(_QWORD *)(v8 + 24) >> 1) - v15;
        v17 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
        if (v16 < v10)
          goto LABEL_30;
        v18 = *(_QWORD *)(v17 - 8);
        v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
        v20 = *(_QWORD *)(v18 + 72);
        v21 = v8 + v19 + v20 * v15;
        v22 = v9 + v19;
        v23 = v20 * v10;
        v24 = v21 + v23;
        v25 = v22 + v23;
        if (v22 < v24 && v21 < v25)
          goto LABEL_32;
        swift_arrayInitWithCopy();
        if (v10)
        {
          v27 = *(_QWORD *)(v8 + 16);
          v28 = __OFADD__(v27, v10);
          v29 = v27 + v10;
          if (v28)
            goto LABEL_31;
          *(_QWORD *)(v8 + 16) = v29;
        }
        goto LABEL_4;
      }
    }
    if (v10)
      goto LABEL_29;
LABEL_4:
    swift_bridgeObjectRelease();
    v6 += v7;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC77BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  int isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = a1 + v6;
  v8 = *(_QWORD *)(v5 + 72);
  sub_1BA4B07F0(0, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v35 = v6;
  v34 = v8;
  swift_bridgeObjectRetain();
  v9 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    sub_1BA4C2DD8(v7, v10 + v35, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v11 = sub_1BB47B828();
    sub_1BA604D90(v11);
    swift_retain();
    v12 = sub_1BAC779DC(v10, a2);
    swift_bridgeObjectRelease();
    swift_release();
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v9 + 16);
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= *(_QWORD *)(v9 + 24) >> 1)
    {
      if (*(_QWORD *)(v12 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v14 <= v15)
        v17 = v14 + v13;
      else
        v17 = v14;
      v9 = sub_1BB391A98(isUniquelyReferenced_nonNull_native, v17, 1, v9);
      if (*(_QWORD *)(v12 + 16))
      {
LABEL_14:
        v18 = *(_QWORD *)(v9 + 16);
        v19 = (*(_QWORD *)(v9 + 24) >> 1) - v18;
        v20 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
        if (v19 < v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v20 - 8);
        v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        v23 = *(_QWORD *)(v21 + 72);
        v24 = v9 + v22 + v23 * v18;
        v25 = v12 + v22;
        v26 = v23 * v13;
        v27 = v24 + v26;
        v28 = v25 + v26;
        if (v25 < v27 && v24 < v28)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v30 = *(_QWORD *)(v9 + 16);
          v31 = __OFADD__(v30, v13);
          v32 = v30 + v13;
          if (v31)
            goto LABEL_29;
          *(_QWORD *)(v9 + 16) = v32;
        }
        goto LABEL_4;
      }
    }
    if (v13)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    v7 += v34;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BAC77EA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AE470;
  if (!qword_1ED3AE470)
  {
    sub_1BA4B07F0(255, &qword_1ED3AE468, type metadata accessor for WebEmbedDataVisualizationDataRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AE470);
  }
  return result;
}

uint64_t sub_1BAC77F00()
{
  uint64_t v0;

  return sub_1BAC73A34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BAC77F18()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_1ED3AB110)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BA4D787C(255, &qword_1ED39DA30, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AB110);
  }
}

uint64_t sub_1BAC77FC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAC77FE4()
{
  uint64_t v0;

  return sub_1BB44B088(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BAC78010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[2];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v34 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v4 = *(_QWORD *)(v34 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v26[0] = v2;
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v8 = *(unsigned __int8 *)(v4 + 80);
    v9 = a1 + ((v8 + 32) & ~v8);
    if (qword_1ED3A6A08 != -1)
      swift_once();
    v32 = *(_QWORD *)(v4 + 72);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = (v8 + 16) & ~v8;
    v31 = v10;
    v29 = v30 + v5;
    v28 = v8 | 7;
    v27 = xmmword_1BB87CE70;
    v26[1] = MEMORY[0x1E0DEE9C0] + 8;
    v11 = (uint64_t)v33;
    do
    {
      v12 = (void *)qword_1ED476638;
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = v27;
      v14 = v12;
      v15 = sub_1BB86C538();
      v17 = v16;
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v13 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v13 + 32) = v15;
      *(_QWORD *)(v13 + 40) = v17;
      v18 = sub_1BB87330C();
      sub_1BB86EF44("Web embed data source manager preparing url %{public}@", 54, 2, &dword_1BA493000, v14, v18, v13);

      v19 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v19);
      v26[-2] = v35;
      v26[-1] = v9;
      type metadata accessor for WebEmbedDataVisualizationDataResult(0);
      sub_1BB86EC14();
      sub_1BA4C2DD8(v9, v11, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      v36 = v6;
      v20 = swift_allocObject();
      v21 = v30;
      sub_1BA5193C4(v11, v20 + v30, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      v22 = (void *)sub_1BB86E854();
      sub_1BB86E974();
      swift_release();
      swift_release();

      sub_1BA4C2DD8(v9, v11, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      v23 = v36;
      v24 = swift_allocObject();
      sub_1BA5193C4(v11, v24 + v21, type metadata accessor for WebEmbedDataVisualizationDataRequest);
      v25 = (void *)sub_1BB86E854();
      sub_1BB86E9A4();
      swift_release();

      swift_release();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v9 += v32;
      v6 = v23 - 1;
    }
    while (v6);
    return v37;
  }
  return result;
}

uint64_t sub_1BAC7838C()
{
  uint64_t v0;

  return sub_1BAC73AC0(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAC783B4()
{
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  return sub_1BAC73CE8();
}

uint64_t sub_1BAC78410()
{
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  return sub_1BAC73E04();
}

uint64_t sub_1BAC7844C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for WebEmbedDataVisualizationDataService(0);
  return sub_1BA93A278(v2);
}

void sub_1BAC784BC(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BB86C67C();
  sub_1BAC745F0(a1, a2);
}

uint64_t sub_1BAC78520(uint64_t a1, uint64_t a2)
{
  return sub_1BAC786FC(a1, a2, sub_1BAC7480C);
}

void sub_1BAC7852C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BAC742FC(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BAC78548()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAC7856C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BAC785E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 80);
  return sub_1BAC75784(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_1BAC78610()
{
  uint64_t v0;

  sub_1BAC74C14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BAC7862C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 80);
  sub_1BAC75018(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t objectdestroy_21Tm_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BAC786F0(uint64_t a1, uint64_t a2)
{
  return sub_1BAC786FC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BAC755D4);
}

uint64_t sub_1BAC786FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 80);
  return a3(a1, a2, v3 + ((v6 + 16) & ~v6));
}

double sub_1BAC78758(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v9;
  id v10;

  v4 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  v7 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v6[8])
        a2 = *(_QWORD *)v6;
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
    }
  }

  return (double)a2;
}

uint64_t sub_1BAC78858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_7;
LABEL_4:
  for (v4 &= v4 - 1; ; v4 = (v10 - 1) & v10)
  {
    sub_1BA7114A0();
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)sub_1BB873AB0();
    if (v8[2] == 2)
    {
      v16 = v8[6];
      v12 = v8[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BA6EA0D0(0, v17[2] + 1, 1, v17);
        v17 = (_QWORD *)result;
      }
      v14 = v17[2];
      v13 = v17[3];
      if (v14 >= v13 >> 1)
      {
        result = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v13 > 1), v14 + 1, 1, v17);
        v17 = (_QWORD *)result;
      }
      v17[2] = v14 + 1;
      v15 = &v17[2 * v14];
      v15[4] = v16;
      v15[5] = v12;
      if (v4)
        goto LABEL_4;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v4)
        goto LABEL_4;
    }
LABEL_7:
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v5)
      goto LABEL_29;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_29;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_29;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_29;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    ;
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v17;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_29;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BAC78AE8(unint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v5;
  void *v6;
  uint64_t v7;

  v5 = *a1;
  sub_1BAC792EC(0);
  swift_retain();
  swift_retain();
  sub_1BAC79308(v5, a2, a3);
  swift_release();
  swift_release();
  v6 = (void *)sub_1BB86E854();
  sub_1BAC79574(0);
  sub_1BA4A2870(&qword_1EF2B1190, (uint64_t (*)(uint64_t))sub_1BAC79574, MEMORY[0x1E0DEAF50]);
  v7 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t sub_1BAC78BD8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v18[1] = a2;
  v3 = sub_1BB871F8C();
  v4 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  v20 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB871CBC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB871CD4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v18[0] = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D52C70], v7);
  sub_1BB871CC8();
  sub_1BA4A2870(&qword_1ED3B0B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C90], MEMORY[0x1E0D52C88]);
  sub_1BB871EF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unknownObjectRetain();
  sub_1BB871F80();
  sub_1BA4A2870(&qword_1EF2B1198, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53200], MEMORY[0x1E0D531F8]);
  v16 = v19;
  sub_1BB871EF0();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v16);
}

uint64_t sub_1BAC78DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  double v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, double);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v30 = sub_1BB86E008();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB871E24();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C0970, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v14 = MEMORY[0x1E0C80A78](v13);
  v28 = (char *)&v26 - v15;
  v16 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v16(v11, a1, v5, v14);
  ((void (*)(char *, char *, uint64_t))v16)(v8, v11, v5);
  v27 = sub_1BB871DAC();
  v18 = v17;
  v19 = sub_1BB871DD0();
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v8, v5);
  ((void (*)(char *, char *, uint64_t))v16)(v8, v11, v5);
  if (qword_1ED3A2570 != -1)
    swift_once();
  v23 = v30;
  v24 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED3A0D50);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v29, v24, v23);
  sub_1BAC79100(v27, v18, v19, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB86ECF8();
  v22(v11, v5);
  return sub_1BB86DEA0();
}

uint64_t sub_1BAC79008(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;

  sub_1BAC78858(a1);
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9630, (uint64_t (*)(uint64_t))sub_1BA78682C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86EC14();
  swift_bridgeObjectRelease();
  swift_retain();
  v2 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED39BDB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490], v1);
  v3 = sub_1BB86E980();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1BAC79100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7447E8(0, 2, 0);
  v8 = v17;
  v10 = *(_QWORD *)(v17 + 16);
  v9 = *(_QWORD *)(v17 + 24);
  v11 = v10 + 1;
  swift_bridgeObjectRetain();
  if (v10 >= v9 >> 1)
  {
    sub_1BA7447E8(v9 > 1, v10 + 1, 1);
    v8 = v17;
  }
  *(_QWORD *)(v8 + 16) = v11;
  v12 = v8 + 16 * v10;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v13 = *(_QWORD *)(v8 + 24);
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1)
  {
    sub_1BA7447E8(v13 > 1, v10 + 2, 1);
    v8 = v17;
  }
  *(_QWORD *)(v8 + 16) = v10 + 2;
  v14 = v8 + 16 * v11;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6D249C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B95D0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
  v15 = sub_1BB872904();
  swift_release();
  return v15;
}

uint64_t sub_1BAC79270()
{
  uint64_t *v0;

  return sub_1BAC79100(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BAC7927C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1[10];
  v4 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v4);
}

uint64_t sub_1BAC792D4(unint64_t *a1, _QWORD *a2)
{
  _QWORD *v2;

  return sub_1BAC78AE8(a1, a2, v2);
}

void sub_1BAC792EC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1180, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

uint64_t sub_1BAC79308(unint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t (*)(_QWORD *), uint64_t, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = v3;
  v28 = a3;
  v29 = a2;
  v27 = *a3;
  v6 = sub_1BB86C8E0();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_14;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v9)
      break;
    v30 = MEMORY[0x1E0DEE9D8];
    result = sub_1BB873DD4();
    if (v9 < 0)
    {
      __break(1u);
      return result;
    }
    v20 = v4;
    v4 = 0;
    v21 = v29 + 2;
    v22 = a1 & 0xC000000000000001;
    v23 = v9;
    v24 = a1;
    while (v9 != v4)
    {
      if (v22)
      {
        v11 = MEMORY[0x1BCCE4630](v4, a1);
      }
      else
      {
        v11 = *(_QWORD *)(a1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      ++v4;
      v13 = v29[5];
      v12 = v29[6];
      __swift_project_boxed_opaque_existential_1(v21, v13);
      sub_1BB86C8D4();
      v14 = sub_1BB86C8C8();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v11;
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(_QWORD *), uint64_t, uint64_t, uint64_t))(v12 + 8);
      swift_unknownObjectRetain();
      v18(v14, v16, sub_1BAC795B4, v17, v13, v12);
      swift_bridgeObjectRelease();
      swift_release();
      v19 = (void *)sub_1BB86E854();
      sub_1BB86DEAC();
      sub_1BB86E98C();
      swift_unknownObjectRelease();
      swift_release();

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v9 = v23;
      a1 = v24;
      if (v23 == v4)
        return v30;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC79574(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1188, (uint64_t (*)(uint64_t))sub_1BAC792EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BAC79590()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAC795B4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BAC78BD8(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for FeedSponsorshipAdReference()
{
  return &type metadata for FeedSponsorshipAdReference;
}

uint64_t sub_1BAC795D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPatternMode.init(from:)(a1, a2);
}

uint64_t sub_1BAC795E4(_QWORD *a1)
{
  return FormatPatternMode.encode(to:)(a1);
}

void _s8NewsFeed17FormatPatternModeO2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = *a1;
  v3 = *a2;
  if (v2 < 0)
  {
    if (v3 < 0)
    {
      v4 = (v2 & 1) == 0;
      if ((v2 & 1) != 0)
        v5 = 0x6F546D6F74746F62;
      else
        v5 = 0x746F426F54706F74;
      if (v4)
        v6 = 0xEB000000006D6F74;
      else
        v6 = 0xEB00000000706F54;
      if ((v3 & 1) != 0)
        v7 = 0x6F546D6F74746F62;
      else
        v7 = 0x746F426F54706F74;
      if ((v3 & 1) != 0)
        v8 = 0xEB00000000706F54;
      else
        v8 = 0xEB000000006D6F74;
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else if ((v3 & 0x80000000) == 0)
  {
    sub_1BB7FCC1C(v2);
  }
}

unint64_t sub_1BAC796E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAC79704();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAC79704()
{
  unint64_t result;

  result = qword_1EF2B11A0;
  if (!qword_1EF2B11A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternMode, &type metadata for FormatPatternMode);
    atomic_store(result, (unint64_t *)&qword_1EF2B11A0);
  }
  return result;
}

unint64_t sub_1BAC79748(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAC7977C();
  a1[2] = sub_1BAC797C0();
  result = sub_1BAC79804();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAC7977C()
{
  unint64_t result;

  result = qword_1ED39CD38;
  if (!qword_1ED39CD38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternMode, &type metadata for FormatPatternMode);
    atomic_store(result, (unint64_t *)&qword_1ED39CD38);
  }
  return result;
}

unint64_t sub_1BAC797C0()
{
  unint64_t result;

  result = qword_1ED39B428;
  if (!qword_1ED39B428)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternMode, &type metadata for FormatPatternMode);
    atomic_store(result, (unint64_t *)&qword_1ED39B428);
  }
  return result;
}

unint64_t sub_1BAC79804()
{
  unint64_t result;

  result = qword_1EF2B11A8;
  if (!qword_1EF2B11A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternMode, &type metadata for FormatPatternMode);
    atomic_store(result, (unint64_t *)&qword_1EF2B11A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatPatternMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 225 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 225) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1E)
    return ((uint64_t (*)(void))((char *)&loc_1BAC79894 + 4 * byte_1BB8AA3A5[v4]))();
  *a1 = a2 - 31;
  return ((uint64_t (*)(void))((char *)sub_1BAC798C8 + 4 * byte_1BB8AA3A0[v4]))();
}

uint64_t sub_1BAC798C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC798D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAC798D8);
  return result;
}

uint64_t sub_1BAC798F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAC798F8);
  *(_BYTE *)result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BAC798FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC79904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternMode()
{
  return &type metadata for FormatPatternMode;
}

uint64_t FeedAppConfigManager.__allocating_init(appConfigManager:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  type metadata accessor for FormatFeedConfigManager();
  swift_allocObject();
  *(_QWORD *)(v2 + 24) = sub_1BA90728C();
  return v2;
}

uint64_t sub_1BAC79980@<X0>(_QWORD *a1@<X8>)
{
  return FeedAppConfigManagerType.feedEditionConfig.getter(a1);
}

uint64_t FeedAppConfigManagerType.feedEditionConfig.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1ED3C0C80 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *(_QWORD *)algn_1ED3C5428;
  *a1 = qword_1ED3C5420;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedAppConfigManager.init(appConfigManager:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  type metadata accessor for FormatFeedConfigManager();
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_1BA90728C();
  return v1;
}

id FeedAppConfigManager.timesOfDayConfiguration.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_timesOfDayConfiguration) & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_timesOfDayConfiguration);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v2;
}

double FeedAppConfigManager.feedEditionConfig.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getObjectType();
  FCNewsAppConfigurationManager.todayFeedEditionConfig.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t FeedAppConfigManager.formatFeedConfig.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA906F40(objc_msgSend(*(id *)(v1 + 16), sel_possiblyUnfetchedAppConfiguration), a1);
  return swift_unknownObjectRelease();
}

unint64_t FeedAppConfigManager.puzzleRanksByPuzzleTypeID.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 16), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_puzzleRanksByPuzzleTypeID);

  if (!v2)
    return sub_1BA8F3AF0(MEMORY[0x1E0DEE9D8]);
  sub_1BA6D7158();
  v3 = sub_1BB87276C();

  return v3;
}

uint64_t FeedAppConfigManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedAppConfigManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAC79C70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA906F40(objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_possiblyUnfetchedAppConfiguration), a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1BAC79CC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1BAC79D0C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t sub_1BAC79D34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC79D60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC79D6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86914, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79D98(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86930, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79DC4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC887F0, type metadata accessor for FormatVersioningModeSelection);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79DF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86C2C, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB3388]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79E1C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86C48, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79E48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC802F0(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B13E8, (unint64_t *)&unk_1EF2B13F0, (uint64_t)&type metadata for FormatInspectionGroup);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79E7C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC82920(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BA8EDAAC, sub_1BA89EA04);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79EA8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC869D8, (uint64_t (*)(_QWORD))type metadata accessor for FormatSection);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79ED4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7BBFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC79EF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86C10, (uint64_t (*)(_QWORD))sub_1BA8676E0);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79F1C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7BD90(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79F38(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7BF40(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79F54(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7C0E0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79F70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7C29C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC79F8C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7C458(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC79FA8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7C5C8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC79FC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, &qword_1ED3AB8B0, (uint64_t)&type metadata for SportsDataVisualization);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC79FF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88178, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A01C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88860, type metadata accessor for FormatService.ThemePackage);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A048(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83FF8(a1, a2, a3, *v3, &qword_1ED3ABCF0, (uint64_t)&type metadata for SportsDataVisualizationRequest);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A074(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BAC88438, qword_1ED3B0C60);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A0A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC875AC, type metadata accessor for FormatDerivedDataResultOptionReference);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A0D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7C76C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A0F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA766F78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A10C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7EB4AC, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A138(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7CAC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A154(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA76B854(a1, a2, a3, (_QWORD *)*v3, &qword_1ED3B9DA0, (uint64_t (*)(uint64_t))sub_1BA76B7C4);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A180(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA865088, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A1AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7CC48(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A1C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7CE00(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A1E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7CF7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A200(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3A0A38, (uint64_t)&type metadata for FormatMenuGroupableData);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A22C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7D114(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A248(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86C64, type metadata accessor for FormatInspectionItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A274(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86FE8, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A2A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87004, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A2CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86B80, (uint64_t (*)(_QWORD))type metadata accessor for LayeredMediaImageVariant);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A2F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7D2C0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A314(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7D5D8(a1, a2, a3, *v3, &qword_1ED39DCA0, (uint64_t)&type metadata for LayeredMediaLayerRenderable);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A340(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7D454(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A35C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA527270(a1, a2, a3, *v3, &qword_1EF2B1348, (uint64_t)&type metadata for FormatBindResult);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A388(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BAC86ECC, (unint64_t *)&qword_1EF2A9760);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A3BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7D5D8(a1, a2, a3, *v3, (unint64_t *)&unk_1ED39DC38, (uint64_t)&type metadata for FeedIssue);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A3E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7D91C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A404(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DAB4(a1, a2, a3, *v3, (unint64_t *)&qword_1EF2B1728, (uint64_t)&type metadata for DebugFormatUploadConfirmItem);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A430(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F5D8(a1, a2, a3, *v3, &qword_1EF2B1720, (uint64_t)&type metadata for DebugFormatUploadConfirmSection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A45C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DC2C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A478(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DDA8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A494(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA64D860(a1, a2, a3, *v3, &qword_1EF2B15F8, (uint64_t)&type metadata for DebugFormatLayoutFeedItem);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A4C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DF44(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A4DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7E0DC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A4F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7E24C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A514(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7E3C8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A530(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7E544(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A54C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6821F0(a1, a2, a3, *v3, &qword_1EF2B1398, (uint64_t)&type metadata for FormatDerivedDataCompilerMode);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A578(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86B48, type metadata accessor for SportsDataServiceRequest);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A5A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6821F0(a1, a2, a3, *v3, &qword_1ED39DC58, (uint64_t)&type metadata for IssueCoverTraits);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A5D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8880C, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A5FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC80974(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EF2B1810, &qword_1EF2AC8B8, (uint64_t)&type metadata for FeedKind);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A630(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8871C, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A65C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC886C0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A688(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7E8B4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A6A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7EBF0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A6C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8852C, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A6EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7EF5C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A708(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA740EB4(a1, a2, a3, *v3, (unint64_t *)&unk_1EF2B1320, (uint64_t)&type metadata for PuzzleHistoryServiceChange);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A734(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC875C8, type metadata accessor for FormatCompilingSlotDefinition);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A760(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87348, type metadata accessor for FormatPropertyDefinition);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A78C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8732C, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A7B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC869A0, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatsProcessingData);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A7E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA73C36C(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1ED3A1740, &qword_1ED3A13D8, (uint64_t)&type metadata for FormatAccessibilityData);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A818(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F2AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A834(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86F68, (uint64_t (*)(_QWORD))type metadata accessor for FormatTextLink.Link);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A860(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F444(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A87C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F5D8(a1, a2, a3, *v3, (unint64_t *)&qword_1EF2B1500, (uint64_t)&type metadata for DebugInspectionDataSection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A8A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F770(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7A8C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA76B854(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EF2B1588, (uint64_t (*)(uint64_t))sub_1BAC87364);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A8F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC873C0, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A91C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7F8EC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A938(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7FB08(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A954(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7FD24(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A970(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7FF40(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A98C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87140, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A9B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87380, (uint64_t (*)(_QWORD))sub_1BAC8739C);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7A9E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87098, (uint64_t (*)(_QWORD))type metadata accessor for DebugJournalGroupItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AA10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BAC88114, &qword_1ED3B0A40);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AA44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC8015C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AA60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC802F0(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EF2B1370, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AA94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC804A8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AAB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC80640(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87020, (void (*)(_QWORD))sub_1BA983338);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AADC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC80640(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8703C, (void (*)(_QWORD))sub_1BA98341C);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AB08(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC807E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AB24(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC80974(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B13B8, &qword_1EF2B13C0, (uint64_t)&type metadata for DebugFormatLocation);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AB58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC80974(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B13A8, &qword_1EF2B13B0, (uint64_t)&type metadata for DebugFormatWeather);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AB8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC869BC, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7ABB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87108, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7ABE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BA81BC34, (unint64_t *)&qword_1ED3C69C0);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AC18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8841C, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AC44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC80BA8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AC60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC869F4, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AC8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86520, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7ACB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC80D8C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7ACD4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC81418(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7ACF0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC8175C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AD0C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86A10, type metadata accessor for FeedItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AD38(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8887C, type metadata accessor for PluginLayout.Context);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AD64(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC81AAC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AD80(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC862AC(a1, a2, a3, *v3, (unint64_t *)&qword_1EF2B14F0, (uint64_t)&type metadata for FormatInspectionGroup);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7ADAC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC82784(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B14D8, (uint64_t (*)(uint64_t))sub_1BAC87074);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7ADD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86A2C, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AE04(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC81C48(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AE20(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA740EB4(a1, a2, a3, *v3, &qword_1EF2B1730, (uint64_t)&type metadata for DebugFormatCreatePackageItem);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AE4C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6821F0(a1, a2, a3, *v3, &qword_1EF2B1448, (uint64_t)&type metadata for DebugFormatTestCaseResultSeverity);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AE78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA76B854(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B15E8, (uint64_t (*)(uint64_t))sub_1BAC875E4);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AEA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC81DF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AEC0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC81F8C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AEDC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC870EC, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AF08(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC82104(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AF24(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DAB4(a1, a2, a3, *v3, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AF50(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88844, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AF7C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88010, (uint64_t (*)(_QWORD))MEMORY[0x1E0D52F40]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AFA8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86F30, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7AFD4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC822BC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7AFF0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC82454(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B00C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86EB0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B038(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86C80, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B064(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86A48, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B090(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DAB4(a1, a2, a3, *v3, (unint64_t *)&qword_1EF2B13C8, (uint64_t)&type metadata for DebugPersonalizationItem);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B0BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86B10, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B0E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86B2C, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponse);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B114(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC825EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B130(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B15C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC82784(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B16E0, (uint64_t (*)(uint64_t))sub_1BAC87EC4);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B188(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC82920(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88310, (void (*)(_QWORD))sub_1BA93CD14);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B1B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC870B4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B1E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC870D0, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B20C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BAC87E60, (unint64_t *)&qword_1EF2C3240);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B240(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87DD4, (uint64_t (*)(_QWORD))sub_1BAC87DF0);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B26C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC8315C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B288(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87124, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatBindingItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B2B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC832D8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B2D0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83470(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B2EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8832C, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B318(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88348, type metadata accessor for FormatLayoutSectionDescriptor.Header);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B344(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6C29B0(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3B9E50, (uint64_t)&type metadata for FormatContentSlot.Resolved);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B370(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88828, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B39C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC882F4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D52FE0]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B3C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DAB4(a1, a2, a3, *v3, (unint64_t *)&qword_1EF2B14C0, (uint64_t)&type metadata for DebugFormatHistoryItem);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B3F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC881B0, type metadata accessor for FormatContentSidecarPlacement);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B420(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC88194, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B44C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F5D8(a1, a2, a3, *v3, &qword_1EF2B1760, (uint64_t)&type metadata for FormatContentSubgroupSection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B478(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3AB8C0, (uint64_t)&type metadata for SportsTaxonomyGraphNode);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B4A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83608(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B4C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC837A0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B4DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83958(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B4F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83AE4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B514(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7DAB4(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3B9CE0, (uint64_t)&type metadata for FeedLayoutResult);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B540(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC83C60(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B55C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83E7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B578(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC83FF8(a1, a2, a3, *v3, &qword_1EF2B16B0, (uint64_t)&type metadata for DebugFormatFile);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B5A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC84170(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B5C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA76B854(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EF2B1620, (uint64_t (*)(uint64_t))sub_1BA584114);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B5EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC845A8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B608(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC847C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B624(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC849E0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B640(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87910, (uint64_t (*)(_QWORD))sub_1BA709CA4);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B66C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC84BFC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B688(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC84E18(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B6A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC85034(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B6C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC85250(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B6DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC8546C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B6F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC85688(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B714(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC858A4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B730(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87C58, (uint64_t (*)(_QWORD))sub_1BAC87C74);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B75C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC85AC0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B778(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC85CDC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B794(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86B64, (uint64_t (*)(_QWORD))MEMORY[0x1E0DBABD0]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B7C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA73C36C(a1, a2, a3, (_QWORD *)*v3, &qword_1EF2B1458, (unint64_t *)&unk_1EF2B1460, (uint64_t)&type metadata for FormatMenuGroupableData);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B7F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87F44, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B820(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC7F5D8(a1, a2, a3, *v3, (unint64_t *)&unk_1EF2B1710, (uint64_t)&type metadata for DebugFormatUploadHiddenSection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B84C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC85EF8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B868(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, &qword_1EF2B14C8, (uint64_t)&type metadata for DebugFormatHistorySection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B894(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8802C, (uint64_t (*)(_QWORD))sub_1BAC88048);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B8C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC86090(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B8DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA6821F0(a1, a2, a3, *v3, (unint64_t *)&unk_1EF2B1430, (uint64_t)&type metadata for DebugFormatDevice);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B908(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC8694C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D60D48]);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B934(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC86968, (uint64_t (*)(_QWORD))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B960(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BAC862AC(a1, a2, a3, *v3, (unint64_t *)&unk_1EF2B1400, (uint64_t)&type metadata for DebugFormatCompilerSection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BAC7B98C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BAC87058, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BAC7B9B8(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7BB98(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1EF2A91A0, (uint64_t)&type metadata for SportsDataConfigurationEventStatus);
}

uint64_t sub_1BAC7BBAC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1ED3CFBB0, (uint64_t)&type metadata for FormatResizeAutoMask);
}

uint64_t sub_1BAC7BBC0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1ED3AB8A0, (uint64_t)&type metadata for FormatJsonConfigKey);
}

uint64_t sub_1BAC7BBD4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC8849C, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
}

uint64_t sub_1BAC7BBE8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B17B0, (uint64_t)&type metadata for FormatPrintNodeValue);
}

uint64_t sub_1BAC7BBFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFBB8, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8])
      memmove(v12, v13, 80 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7BD90(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC874C4();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 3 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3BC290, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7BF40(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC87450();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BA50CAA8(0, &qword_1ED3B0CF0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7C0E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC873DC();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1BA4CDF6C(0, &qword_1ED3BC288, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7C29C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC87538();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3BC2A0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7C458(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B1770, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7C5C8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED39C1D8, (uint64_t)&type metadata for WebArchiveRequest, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7C744(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC88860, type metadata accessor for FormatService.ThemePackage);
}

uint64_t sub_1BAC7C758(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC86984, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
}

uint64_t sub_1BAC7C76C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC87740();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7C90C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B0470, (uint64_t (*)(uint64_t))sub_1BAC88778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_1BAC88778();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7CAC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A0A28, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 136 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7CC48(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA58281C(0, &qword_1ED3CFBD8, &qword_1ED3CA9D0, (uint64_t)&type metadata for FormatStateMachineEvent, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1BA4AD288(0, &qword_1ED3CA9D0, (uint64_t)&type metadata for FormatStateMachineEvent, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7CE00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1480, (uint64_t)&type metadata for LayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7CF7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1488, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7D114(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B15D8, (uint64_t)&type metadata for AnyFormatSelectorValueSelector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7D2AC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC867AC, (uint64_t (*)(_QWORD))sub_1BAC867C8);
}

uint64_t sub_1BAC7D2C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED39DC98, (uint64_t)&type metadata for LayeredMediaVideoVariant, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7D454(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B14B0, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7D5C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC867EC, (uint64_t (*)(_QWORD))sub_1BAC86808);
}

uint64_t sub_1BAC7D5D8(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 144);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 144 * v10;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7D768(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC866C4();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 19 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1BAC88670(0, &qword_1EF2B12B8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7D91C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED39DC70, (uint64_t)&type metadata for CoverIssueViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 392);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[392 * v8])
      memmove(v12, v13, 392 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[392 * v8] || v12 >= &v13[392 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7DAB4(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 + 31;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 6);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  v17 = v10 << 6;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[v17])
      memmove(v15, v16, v17);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7DC2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B16F0, (uint64_t)&type metadata for DebugFormatUploadSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7DDA8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1410, (uint64_t)&type metadata for DebugFormatAlert, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7DF44(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9CD0, (uint64_t)&type metadata for FeedScoredItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7E0DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3B9FE0, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7E24C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9CF0, (uint64_t)&type metadata for FeedScoredHeadline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7E3C8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2C26A0, (uint64_t)&type metadata for FeedScoredIssue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7E544(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B1780, (uint64_t)&type metadata for FeedScoredTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7E6DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, &qword_1EF2A91C8, (uint64_t (*)(uint64_t))sub_1BA865180, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1BA865180();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7E88C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC88738, (uint64_t (*)(_QWORD))sub_1BAC88754);
}

uint64_t sub_1BAC7E8A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC886DC, (uint64_t (*)(_QWORD))sub_1BAC886F8);
}

uint64_t sub_1BAC7E8B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B17D0, (uint64_t)&type metadata for FeedPuzzleType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7EA30(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC885FC();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8)
      memmove(v10 + 4, a4 + 4, 72 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    sub_1BAC88670(0, (unint64_t *)&unk_1EF2B17E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7EBF0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3AB850, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 168);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[168 * v8])
      memmove(v12, v13, 168 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[168 * v8] || v12 >= &v13[168 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7ED8C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC88588();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 176 * v8)
      memmove(v10 + 4, a4 + 4, 176 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 176 * v8 || v12 >= v13 + 176 * v8)
  {
    sub_1BAC88670(0, &qword_1ED3A1038);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7EF48(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC88548, (uint64_t (*)(_QWORD))sub_1BAC88564);
}

uint64_t sub_1BAC7EF5C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3AB840, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 152 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7F0EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC884B8();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 20 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1BAC88670(0, &qword_1ED3AB1A8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7F298(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA740EB4(a1, a2, a3, a4, &qword_1ED3AB830, (uint64_t)&type metadata for FeedGroupEmitterRuleResult);
}

uint64_t sub_1BAC7F2AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED39DC30, (uint64_t)&type metadata for FeedTopicCluster, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7F444(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3AB838, (uint64_t)&type metadata for FeedGroupEmitterRuleOutputDescription, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7F5D8(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[24 * v10])
      memmove(v14, v15, 24 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[24 * v10] || v14 >= &v15[24 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7F770(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B15D0, (uint64_t)&type metadata for FormatDerivedDataResultItemReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7F8EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC8715C();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7FB08(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC871D0();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7FD24(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87244();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC7FF40(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC872B8();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC8015C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED39DC80, (uint64_t)&type metadata for FormatLocalizationString, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC802F0(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = a4[3];
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = a4[2];
  if (v12 <= v13)
    v14 = a4[2];
  else
    v14 = v12;
  if (v14)
  {
    sub_1BA58281C(0, a5, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v15 = (_QWORD *)swift_allocObject();
    v16 = _swift_stdlib_malloc_size(v15);
    v17 = v16 - 32;
    if (v16 < 32)
      v17 = v16 - 25;
    v15[2] = v13;
    v15[3] = 2 * (v17 >> 3);
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = (unint64_t)(v15 + 4);
  v19 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v15 != a4 || v18 >= v19 + 8 * v13)
      memmove(v15 + 4, a4 + 4, 8 * v13);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v19 >= v18 + 8 * v13 || v18 >= v19 + 8 * v13)
  {
    sub_1BA4AD288(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v15;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC804A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1490, (uint64_t (*)(uint64_t))sub_1BA983254, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1BA983254();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC80640(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), void (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    a5(0);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11)
      memmove(v13 + 4, a4 + 4, 24 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC807E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1740, (uint64_t)&type metadata for DebugFormatRulerIndicatorView.Selection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC80974(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  size_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = a4[3];
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = a4[2];
  if (v12 <= v13)
    v14 = a4[2];
  else
    v14 = v12;
  if (!v14)
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  v15 = MEMORY[0x1E0DB5820];
  sub_1BA58281C(0, a5, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  sub_1BA4AD288(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))v15);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = (_QWORD *)swift_allocObject();
  v21 = _swift_stdlib_malloc_size(v20);
  if (!v18)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v21 - v19 == 0x8000000000000000 && v18 == -1)
    goto LABEL_34;
  v20[2] = v13;
  v20[3] = 2 * ((uint64_t)(v21 - v19) / v18);
LABEL_19:
  sub_1BA4AD288(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB5820]);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = (char *)v20 + v25;
  v27 = (char *)a4 + v25;
  if ((a1 & 1) != 0)
  {
    if (v20 < a4 || v26 >= &v27[*(_QWORD *)(v24 + 72) * v13])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v20 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v28 = *(_QWORD *)(v24 + 72) * v13;
  v29 = &v26[v28];
  v30 = (unint64_t)&v27[v28];
  if (v27 >= v29 || (unint64_t)v26 >= v30)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v20;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC80B94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC8841C, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1BAC80BA8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA58281C(0, &qword_1ED3AB8D8, &qword_1ED3A73D0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1BA4AD288(0, &qword_1ED3A73D0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC80D78(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC8653C, (uint64_t (*)(_QWORD))sub_1BAC86558);
}

uint64_t sub_1BAC80D8C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3AC810, (uint64_t)&type metadata for FeedGapOffline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8])
      memmove(v12, v13, 88 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC80F24(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC868A0();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 96 * v8)
      memmove(v10 + 4, a4 + 4, 96 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    sub_1BAC88670(0, &qword_1EF2B1308);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC810E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC8682C();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1BAC88670(0, (unint64_t *)&unk_1EF2B12F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC81280(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, &qword_1EF2B1298, (uint64_t (*)(uint64_t))sub_1BAC865F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BAC865F0(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC81418(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B12D0, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 288);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 288 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC815A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC86738();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 296);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 37 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1BAC88670(0, &qword_1EF2B12C8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC8175C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED39EAE0, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[152 * v8])
      memmove(v12, v13, 152 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[152 * v8] || v12 >= &v13[152 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC818F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC8657C();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 160 * v8)
      memmove(v10 + 4, a4 + 4, 160 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 160 * v8 || v12 >= v13 + 160 * v8)
  {
    sub_1BAC88670(0, (unint64_t *)&unk_1EF2B1288);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC81AAC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED39E230, (uint64_t)&type metadata for CategoryViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 200);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[200 * v8])
      memmove(v12, v13, 200 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[200 * v8] || v12 >= &v13[200 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC81C48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1738, (uint64_t)&type metadata for DebugFormatCreatePackageSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8])
      memmove(v12, v13, 104 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC81DE0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA6821F0(a1, a2, a3, a4, &qword_1EF2B1448, (uint64_t)&type metadata for DebugFormatTestCaseResultSeverity);
}

uint64_t sub_1BAC81DF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, &qword_1EF2B16F8, (uint64_t (*)(uint64_t))sub_1BA9834B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BA9834B4();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC81F8C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1EF2B7EA0, (uint64_t)&type metadata for DebugFormatUploadItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82104(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2C2570, (uint64_t)&type metadata for FormatDebuggerBreakpoint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82280(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC88844, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
}

uint64_t sub_1BAC82294(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC86F4C, type metadata accessor for DebugFormatTestCaseResult);
}

uint64_t sub_1BAC822A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC86F30, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
}

uint64_t sub_1BAC822BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1428, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82454(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1420, (uint64_t)&type metadata for FormatContentSlot, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC825EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1ED3AC108, (uint64_t)&type metadata for FeedChannelCluster, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82784(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11)
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82920(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), void (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    a5(0);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82AC4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, &qword_1EF2B1610, (uint64_t (*)(uint64_t))sub_1BA865254, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1BA865254();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82C78(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BAC87600();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BAC88670(0, (unint64_t *)&qword_1EF2A91E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82E18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B16B8, (uint64_t)&type metadata for FormatInspectionIssue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC82FAC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA000, (uint64_t (*)(uint64_t))sub_1BAC87F60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8)
      memmove(v10 + 4, a4 + 4, 80 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    sub_1BAC87F60();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC8315C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B1510, (uint64_t)&type metadata for DebugFormatInventorySection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC832D8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB8E0, (uint64_t (*)(uint64_t))sub_1BAC86F84, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BAC86F84(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83470(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFB60, (uint64_t)&type metadata for FeedJournalEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83608(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1758, (uint64_t)&type metadata for DebugTextAttachment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC837A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA58281C(0, (unint64_t *)&qword_1ED3B9FB0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83958(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1350, (uint64_t)&type metadata for DebugInspectionAggregate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 96 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83AE4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B1358, (uint64_t)&type metadata for DebugInspectionTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83C60(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC88364();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83E7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, &qword_1EF2B14D0, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC83FF8(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 1;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 5);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  v17 = 32 * v10;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[v17])
      memmove(v15, v16, v17);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC84170(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC876CC();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC8438C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BA7C3638();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC845A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC877B4();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC847C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87828();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC849E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC8789C();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC84BFC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC8792C();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC84E18(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC879A0();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC85034(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87A14();
  sub_1BA4CDF6C(0, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC85250(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87A88();
  sub_1BA4CDF6C(0, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC8546C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87AFC();
  sub_1BA4CDF6C(0, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC85688(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87B70();
  sub_1BA4CDF6C(0, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC858A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87BE4();
  sub_1BA4CDF6C(0, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC85AC0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87CEC();
  sub_1BA4CDF6C(0, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC85CDC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87D60();
  sub_1BA4CDF6C(0, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC85EF8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4B07F0(0, &qword_1ED3A0A68, (uint64_t (*)(uint64_t))sub_1BAC88064, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BAC88064(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC86090(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC86B9C();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A3E80, (uint64_t (*)(void))sub_1BA83171C, (uint64_t)&type metadata for FormatLayoutModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A3E80, (uint64_t (*)(void))sub_1BA83171C, (uint64_t)&type metadata for FormatLayoutModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC862AC(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 40);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[40 * v10])
      memmove(v14, v15, 40 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[40 * v10] || v14 >= &v15[40 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAC86440(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BAC87FF4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DDA248]);
}

uint64_t sub_1BAC86454(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BB873060();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BA6D573C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t dispatch thunk of FeedAppConfigManagerType.segmentSetIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.timesOfDayConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.feedEditionConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.formatFeedConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedAppConfigManagerType.puzzleRanksByPuzzleTypeID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for FeedAppConfigManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedAppConfigManager.__allocating_init(appConfigManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for NoopFeedAppConfigManager()
{
  return objc_opt_self();
}

void sub_1BAC86520(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A09D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8653C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1270, (uint64_t (*)(uint64_t))sub_1BAC86558, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86558(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3A08D8, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
}

void sub_1BAC8657C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1280)
  {
    sub_1BAC88670(255, (unint64_t *)&unk_1EF2B1288);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1280);
  }
}

void sub_1BAC865F0(uint64_t a1)
{
  sub_1BA6AA0A4(a1, (unint64_t *)&unk_1EF2B12A0, (void (*)(uint64_t))MEMORY[0x1E0DB6B18]);
}

uint64_t sub_1BAC86614(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a3 >> 1;
  result = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_1BB873060();
  v12 = result;
  v7 = v4 - a2;
  if (v4 == a2)
    return result;
  if (v4 <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v8 = (uint64_t *)(a1 + 16 * a2 + 8);
  do
  {
    v9 = *(v8 - 1);
    v10 = *v8;
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v11, v9, v10);
    swift_bridgeObjectRelease();
    v8 += 2;
    --v7;
  }
  while (v7);
  return v12;
}

void sub_1BAC866C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B12B0)
  {
    sub_1BAC88670(255, &qword_1EF2B12B8);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B12B0);
  }
}

void sub_1BAC86738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B12C0)
  {
    sub_1BAC88670(255, &qword_1EF2B12C8);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B12C0);
  }
}

void sub_1BAC867AC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9FE8, (uint64_t (*)(uint64_t))sub_1BAC867C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC867C8(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
}

void sub_1BAC867EC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B12E0, (uint64_t (*)(uint64_t))sub_1BAC86808, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86808(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
}

void sub_1BAC8682C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B12E8)
  {
    sub_1BAC88670(255, (unint64_t *)&unk_1EF2B12F0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B12E8);
  }
}

void sub_1BAC868A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1300)
  {
    sub_1BAC88670(255, &qword_1EF2B1308);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1300);
  }
}

void sub_1BAC86914(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86930(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CFB20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8694C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1310, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86968(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1318, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86984(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2A9160, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC869A0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1340, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsProcessingData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC869BC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AF450, type metadata accessor for WebEmbedDataVisualizationDataRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC869D8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AB870, (uint64_t (*)(uint64_t))type metadata accessor for FormatSection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC869F4(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86A10(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A1738, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86A2C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1380, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86A48(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1390, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BAC86A64(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for UIUserInterfaceIdiom(0);
  sub_1BA4A2870((unint64_t *)&qword_1EF2A9730, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t)&unk_1BB87BE18);
  result = sub_1BB873060();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BA9D7074(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BAC86AF4(uint64_t a1)
{
  return sub_1BA61BEC4(a1, (void (*)(void))sub_1BA9ED39C, (uint64_t)&type metadata for FormatDerivedDataCompilerMode, (void (*)(char *, _QWORD))sub_1BA9D78EC);
}

void sub_1BAC86B10(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AB970, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86B2C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AB908, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86B48(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AB8F8, type metadata accessor for SportsDataServiceRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86B64(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A09C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBABD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86B80(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED39DC90, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86B9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB7E0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3A3E80, (uint64_t (*)(void))sub_1BA83171C, (uint64_t)&type metadata for FormatLayoutModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB7E0);
  }
}

void sub_1BAC86C10(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AB7D0, (uint64_t (*)(uint64_t))sub_1BA8676E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86C2C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B13E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3388], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86C48(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86C64(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86C80(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1418, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BAC86C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BB873060();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BA65F06C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BAC86D0C(uint64_t a1)
{
  return sub_1BA61BEC4(a1, (void (*)(void))sub_1BA9ED424, (uint64_t)&type metadata for FormatGroupLayoutFactoryOption, (void (*)(char *, _QWORD))sub_1BA9DA954);
}

uint64_t sub_1BAC86D28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for FeedGroupItem();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1BA4A2870(&qword_1ED3B2F78, v10, (uint64_t)&protocol conformance descriptor for FeedGroupItem);
  result = sub_1BB873060();
  v15 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BAC86E30(v12, (uint64_t)v5);
      sub_1BA6CD578((uint64_t)v8, (uint64_t)v5);
      sub_1BAC86E74((uint64_t)v8);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

uint64_t sub_1BAC86E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAC86E74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedGroupItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAC86EB0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9D70, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86ECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9CD0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1EF2A9760);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9CD0);
  }
}

void sub_1BAC86F30(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2320, (uint64_t (*)(uint64_t))type metadata accessor for ZIndexable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86F4C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1440, type metadata accessor for DebugFormatTestCaseResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86F68(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1450, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextLink.Link, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC86F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3A73D8)
  {
    v2 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99A0);
    v5 = type metadata accessor for FormatCommandActionValue.CaseValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3A73D8);
  }
}

void sub_1BAC86FE8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AF820, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87004(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1470, (uint64_t (*)(uint64_t))type metadata accessor for FormatJson, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87020(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B14A0, (uint64_t (*)(uint64_t))sub_1BA983338, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8703C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B14A8, (uint64_t (*)(uint64_t))sub_1BA98341C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87058(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A3210, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemAuxiliaryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87074(uint64_t a1)
{
  sub_1BA6AA0A4(a1, (unint64_t *)&unk_1EF2B14E0, (void (*)(uint64_t))sub_1BA584114);
}

void sub_1BAC87098(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2CE390, (uint64_t (*)(uint64_t))type metadata accessor for DebugJournalGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC870B4(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2BC5B0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC870D0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1520, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultOutput, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC870EC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1528, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87108(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1530, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87124(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1540, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatBindingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87140(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1548, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataWarningError, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8715C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1558)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1558);
  }
}

void sub_1BAC871D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1560)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1560);
  }
}

void sub_1BAC87244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1568)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1568);
  }
}

void sub_1BAC872B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1570)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1570);
  }
}

void sub_1BAC8732C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1578, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87348(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9F30, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87364(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BAC87380(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1598, (uint64_t (*)(uint64_t))sub_1BAC8739C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8739C(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
}

void sub_1BAC873C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B15A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBinderResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC873DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B15B0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3BC288, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B15B0);
  }
}

void sub_1BAC87450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0458)
  {
    sub_1BA50CAA8(255, &qword_1ED3B0CF0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0458);
  }
}

void sub_1BAC874C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B15B8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&unk_1ED3BC290, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B15B8);
  }
}

void sub_1BAC87538()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B15C8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&unk_1ED3BC2A0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B15C8);
  }
}

void sub_1BAC875AC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2A99F0, type metadata accessor for FormatDerivedDataResultOptionReference, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC875C8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3BBAD0, type metadata accessor for FormatCompilingSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC875E4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B15F0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BAC87600()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1600)
  {
    sub_1BAC88670(255, (unint64_t *)&qword_1EF2A91E0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1600);
  }
}

unint64_t sub_1BAC87674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B97F0;
  if (!qword_1ED3B97F0)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B97E0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B97F0);
  }
  return result;
}

void sub_1BAC876CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9DC0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9DC0);
  }
}

void sub_1BAC87740()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1618)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1618);
  }
}

void sub_1BAC877B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9DF0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9DF0);
  }
}

void sub_1BAC87828()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9DD0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9DD0);
  }
}

void sub_1BAC8789C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9E10)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9E10);
  }
}

void sub_1BAC87910(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C0530, (uint64_t (*)(uint64_t))sub_1BA709CA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8792C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9DE0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9DE0);
  }
}

void sub_1BAC879A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9E00)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9E00);
  }
}

void sub_1BAC87A14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1630)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1630);
  }
}

void sub_1BAC87A88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1640)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1640);
  }
}

void sub_1BAC87AFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1650)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1650);
  }
}

void sub_1BAC87B70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1660)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1660);
  }
}

void sub_1BAC87BE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1670)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1670);
  }
}

void sub_1BAC87C58(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1680, (uint64_t (*)(uint64_t))sub_1BAC87C74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87C74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2B1688)
  {
    v2 = type metadata accessor for FormatSnippet();
    v3 = sub_1BA4A2870(&qword_1ED3D0280, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, (uint64_t)&protocol conformance descriptor for FormatSnippet);
    v5 = type metadata accessor for DebugFormatObject(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2B1688);
  }
}

void sub_1BAC87CEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1690)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1690);
  }
}

void sub_1BAC87D60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B16A0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B16A0);
  }
}

void sub_1BAC87DD4(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B16C0, (uint64_t (*)(uint64_t))sub_1BAC87DF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87DF0()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2BDA60)
  {
    sub_1BB86CBE0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2BDA60);
  }
}

void sub_1BAC87E60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B16D0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1EF2C3240);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B16D0);
  }
}

void sub_1BAC87EC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B16E8)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B16E8);
  }
}

void sub_1BAC87F44(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C25A0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatUploadHiddenEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC87F60()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1ED3B9738)
  {
    sub_1BA4AD288(255, &qword_1ED3B9740, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    type metadata accessor for CGRect(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1ED3B9738);
  }
}

void sub_1BAC87FF4(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A09B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA248], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88010(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B1748, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52F40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8802C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3A3200, (uint64_t (*)(uint64_t))sub_1BAC88048, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88048(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A24E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA7E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAC88064(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A0920, (uint64_t (*)(uint64_t))sub_1BAC88080, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAC88080()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A0910)
  {
    sub_1BA49A224(255, &qword_1ED39ECF0);
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3D4440, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A0910);
  }
}

void sub_1BAC88114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DC18)
  {
    sub_1BA4D9CE8(255, &qword_1ED3B0A40);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DC18);
  }
}

void sub_1BAC88178(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9EC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88194(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2C2310, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC881B0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AB940, type metadata accessor for FormatContentSidecarPlacement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BAC881CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1BB871E9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1BA4A2870(&qword_1EF2A92A8, v10, MEMORY[0x1E0D52FE8]);
  result = sub_1BB873060();
  v16 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v5, v12, v2);
      sub_1BA9DB168((uint64_t)v8, v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

void sub_1BAC882F4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED39ED10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88310(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AFB60, (uint64_t (*)(uint64_t))sub_1BA93CD14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8832C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1768, type metadata accessor for FormatLayoutSectionDescriptor.Footer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88348(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AB950, type metadata accessor for FormatLayoutSectionDescriptor.Header, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1790)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1790);
  }
}

unint64_t sub_1BAC883D8()
{
  unint64_t result;

  result = qword_1EF2B17A0;
  if (!qword_1EF2B17A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9181D4, &type metadata for FormatBackgroundLayoutSolver.HiddenModel);
    atomic_store(result, (unint64_t *)&qword_1EF2B17A0);
  }
  return result;
}

void sub_1BAC8841C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3BBAE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88438()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9CC0)
  {
    sub_1BA4D9CE8(255, qword_1ED3B0C60);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9CC0);
  }
}

void sub_1BAC8849C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AB860, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC884B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB9D0)
  {
    sub_1BAC88670(255, &qword_1ED3AB1A8);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB9D0);
  }
}

void sub_1BAC8852C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED39C1C0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88548(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AB9D8, (uint64_t (*)(uint64_t))sub_1BAC88564, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88564(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED39BFD0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

void sub_1BAC88588()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B17C0)
  {
    sub_1BAC88670(255, &qword_1ED3A1038);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B17C0);
  }
}

void sub_1BAC885FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B17D8)
  {
    sub_1BAC88670(255, (unint64_t *)&unk_1EF2B17E0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B17D8);
  }
}

void sub_1BAC88670(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BAC886C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2A92F0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC886DC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B17F0, (uint64_t (*)(uint64_t))sub_1BAC886F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC886F8(uint64_t a1)
{
  sub_1BA6AA0A4(a1, (unint64_t *)&unk_1EF2B17F8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
}

void sub_1BAC8871C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED39EAD0, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88738(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1808, (uint64_t (*)(uint64_t))sub_1BAC88754, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88754(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3AB190, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
}

void sub_1BAC88778()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B03F8)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B2E30);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B03F8);
  }
}

void sub_1BAC887F0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AE5B8, type metadata accessor for FormatVersioningModeSelection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8880C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B1820, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester.ScheduledRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88828(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3CFBF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88844(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CFC88, (uint64_t (*)(uint64_t))type metadata accessor for ScoredFormatContentSlotItemResolution, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC88860(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C4438, type metadata accessor for FormatService.ThemePackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BAC8887C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AF458, type metadata accessor for PluginLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

unint64_t sub_1BAC88898(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA841CF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAC888BC()
{
  unint64_t result;

  result = qword_1ED3B0768;
  if (!qword_1ED3B0768)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF070], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED3B0768);
  }
  return result;
}

uint64_t sub_1BAC88900(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED3C44E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&protocol conformance descriptor for URL);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAC8893C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870((unint64_t *)&qword_1ED3C44F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&protocol conformance descriptor for Date);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAC88978(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AE500, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t)&protocol conformance descriptor for Version);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAC889B4(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t result;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  a1[1] = sub_1BA4A2870(&qword_1ED3B0918, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF0]);
  a1[2] = sub_1BA4A2870(&qword_1ED39C370, v2, MEMORY[0x1E0DB4DD8]);
  result = sub_1BA4A2870(&qword_1ED39C378, v2, MEMORY[0x1E0DB4DE8]);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAC88A2C(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t result;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  a1[1] = sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  a1[2] = sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, v2, MEMORY[0x1E0DB48C0]);
  result = sub_1BA4A2870(&qword_1EF2A96D8, v2, MEMORY[0x1E0DB48C8]);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAC88AA4(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1BAC88ADC(a1, a2, a3, MEMORY[0x1E0DEE9A0], MEMORY[0x1E0DEE988], MEMORY[0x1E0DEE998]);
}

uint64_t sub_1BAC88AC0(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1BAC88ADC(a1, a2, a3, MEMORY[0x1E0DEAF40], MEMORY[0x1E0DEAF10], MEMORY[0x1E0DEAF30]);
}

uint64_t sub_1BAC88ADC(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = *a3;
  v14 = *(_QWORD *)(*a3 + 8);
  a1[1] = MEMORY[0x1BCCE5B24](a4, a2, &v14);
  v13 = *(_QWORD *)(v10 + 16);
  a1[2] = MEMORY[0x1BCCE5B24](a5, a2, &v13);
  v12 = *(_QWORD *)(v10 + 24);
  result = MEMORY[0x1BCCE5B24](a6, a2, &v12);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAC88B70(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = *a3;
  v8 = *(_QWORD *)(*a3 + 8);
  a1[1] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D8], a2, &v8);
  v7 = *(_QWORD *)(v5 + 16);
  a1[2] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3B8], a2, &v7);
  result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3C8], a2);
  a1[3] = result;
  return result;
}

uint64_t destroy for FormatAttributedStringStyle(id *a1)
{

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FormatAttributedStringStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v10 = *(void **)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v12 = v3;
  v13 = v4;
  v14 = v6;
  v15 = v8;
  v16 = v10;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatAttributedStringStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v13;
  v14 = *(void **)(a1 + 40);
  v15 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v15;
  v16 = v15;

  v17 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v17;
  v18 = *(void **)(a1 + 64);
  v19 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v19;
  v20 = v19;

  v21 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v21;
  LOBYTE(v21) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = v21;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for FormatAttributedStringStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAttributedStringStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 121))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAttributedStringStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 121) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAttributedStringStyle()
{
  return &type metadata for FormatAttributedStringStyle;
}

id sub_1BAC88F84(id a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  if (a4)
  {
    v9 = *(_QWORD *)(a3 + 56);
    v10 = *(_QWORD *)(a4 + 56);
    if ((~v9 & 0xF000000000000007) != 0)
    {
      v20 = *(_QWORD *)(a3 + 56);
      if ((~v10 & 0xF000000000000007) == 0)
      {
        sub_1BA6E6C68(v9);
        sub_1BA6E6C68(v9);
        swift_retain();
        swift_release();
        goto LABEL_7;
      }
      sub_1BA6E6C68(v9);
      sub_1BA6E6C68(v9);
      swift_retain();
      static FormatFont.== infix(_:_:)((uint64_t)&v20);
      v12 = v11;
      swift_release();
      sub_1BA6E6CD8(v9);
      if ((v12 & 1) == 0)
        goto LABEL_13;
      swift_release();
    }
    else if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
LABEL_7:
      sub_1BA6E6C68(v10);
      sub_1BA6E6CD8(v9);
      sub_1BA6E6CD8(v10);
LABEL_13:
      v18 = sub_1BA742048(a4, a5);
      swift_release();
      return v18;
    }
  }
  v13 = objc_msgSend(a1, sel_fontDescriptor);
  v14 = objc_msgSend(v13, sel_symbolicTraits);

  v15 = v14 | a2;
  v16 = objc_msgSend(a1, sel_fontDescriptor);
  v17 = objc_msgSend(v16, sel_fontDescriptorWithSymbolicTraits_, v15);

  if (!v17)
    return a1;
  v18 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v17, 0.0);

  if (!v18)
    return a1;
  return v18;
}

void sub_1BAC89174()
{
  sub_1BB86C13C();
  __break(1u);
}

void sub_1BAC8918C()
{
  sub_1BB86C178();
  __break(1u);
}

void sub_1BAC891A4()
{
  sub_1BB86C130();
  __break(1u);
}

void sub_1BAC891BC()
{
  sub_1BB86C130();
  __break(1u);
}

void sub_1BAC891D4()
{
  sub_1BB86C124();
  __break(1u);
}

void sub_1BAC891EC()
{
  sub_1BB86C160();
  __break(1u);
}

void sub_1BAC89204()
{
  sub_1BB86C160();
  __break(1u);
}

void sub_1BAC8921C()
{
  sub_1BB86C154();
  __break(1u);
}

void sub_1BAC89234()
{
  sub_1BB86C10C();
  __break(1u);
}

void sub_1BAC8924C()
{
  sub_1BB86C10C();
  __break(1u);
}

id sub_1BAC89268(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _OWORD v14[12];
  __int16 v15;
  _BYTE v16[16];
  _BYTE v17[200];
  _OWORD v18[12];
  __int16 v19;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12B0]), sel_init);
  v5 = sub_1BAC894B4();
  v6 = objc_msgSend(a1, sel_imageWithConfiguration_, v5);

  objc_msgSend(v4, sel_setImage_, v6);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v4);
  v8 = objc_msgSend(v7, sel_length);
  objc_msgSend(v7, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1138], *v2, 0, v8);
  sub_1BA744E38(v2[13] + 296, (uint64_t)v17, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v17, (uint64_t)v18, (unint64_t *)&qword_1ED3B6270);
  if (sub_1BA92287C((uint64_t)v18) != 1)
  {
    v14[10] = v18[10];
    v14[11] = v18[11];
    v15 = v19;
    v14[6] = v18[6];
    v14[7] = v18[7];
    v14[8] = v18[8];
    v14[9] = v18[9];
    v14[2] = v18[2];
    v14[3] = v18[3];
    v14[4] = v18[4];
    v14[5] = v18[5];
    v14[0] = v18[0];
    v14[1] = v18[1];
    FormatParagraphStyle.paragraphStyle.getter();
    v10 = v9;
    objc_msgSend(v7, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1178], v9, 0, v8, *(_QWORD *)&v14[0]);

  }
  sub_1BA744E38((uint64_t)(v2 + 11), (uint64_t)v16, &qword_1ED3B0778);
  sub_1BA744E38((uint64_t)v16, (uint64_t)v14, &qword_1ED3B0778);
  if ((BYTE8(v14[0]) & 1) == 0)
  {
    v11 = *MEMORY[0x1E0DC1108];
    v12 = (void *)sub_1BB86DC24();
    objc_msgSend(v7, sel_addAttribute_value_range_, v11, v12, 0, v8);

  }
  return v7;
}

id sub_1BAC894B4()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;

  v1 = v0;
  v17 = MEMORY[0x1E0DEE9D8];
  v2 = (void *)v0[1];
  if (v2)
  {
    v3 = v2;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();

  }
  v4 = (void *)v0[2];
  if (v4)
  {
    v5 = (void *)objc_opt_self();
    v6 = v4;
    v7 = objc_msgSend(v5, sel_clearColor);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    v8 = sub_1BB8738B8();

    if ((v8 & 1) == 0)
    {
      v9 = v6;
      MEMORY[0x1BCCE36AC]();
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
    }

  }
  v10 = *v1;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_configurationWithFont_, v10);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  v13 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_configurationWithPaletteColors_, v13);

  v15 = objc_msgSend(v12, sel_configurationByApplyingConfiguration_, v14);
  return v15;
}

id sub_1BAC896DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  _OWORD v15[12];
  __int16 v16;
  _BYTE v17[8];
  _BYTE v18[16];
  uint64_t v19;
  _BYTE v20[200];
  _OWORD v21[12];
  __int16 v22;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12B0]), sel_init);
  objc_msgSend(v4, sel_setImage_, a1);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v4);
  v6 = objc_msgSend(v5, sel_length);
  objc_msgSend(v5, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1138], *v2, 0, v6);
  sub_1BA744E38(v2[13] + 296, (uint64_t)v20, (unint64_t *)&qword_1ED3B6270);
  sub_1BA744E38((uint64_t)v20, (uint64_t)v21, (unint64_t *)&qword_1ED3B6270);
  if (sub_1BA92287C((uint64_t)v21) != 1)
  {
    v15[10] = v21[10];
    v15[11] = v21[11];
    v16 = v22;
    v15[6] = v21[6];
    v15[7] = v21[7];
    v15[8] = v21[8];
    v15[9] = v21[9];
    v15[2] = v21[2];
    v15[3] = v21[3];
    v15[4] = v21[4];
    v15[5] = v21[5];
    v15[0] = v21[0];
    v15[1] = v21[1];
    FormatParagraphStyle.paragraphStyle.getter();
    v8 = v7;
    objc_msgSend(v5, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1178], v7, 0, v6, *(_QWORD *)&v15[0]);

  }
  sub_1BA744E38((uint64_t)(v2 + 11), (uint64_t)v18, &qword_1ED3B0778);
  sub_1BA744E38((uint64_t)v18, (uint64_t)v15, &qword_1ED3B0778);
  if ((BYTE8(v15[0]) & 1) == 0)
  {
    v9 = *MEMORY[0x1E0DC1108];
    v10 = (void *)sub_1BB86DC24();
    objc_msgSend(v5, sel_addAttribute_value_range_, v9, v10, 0, v6);

  }
  sub_1BA745768((uint64_t)(v2 + 1), (uint64_t)v17);
  sub_1BA745768((uint64_t)v17, (uint64_t)&v19);
  if (v19)
    objc_msgSend(v5, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1140], v19, 0, v6);
  v11 = (void *)v2[2];
  if (v11)
  {
    v12 = *MEMORY[0x1E0DC1100];
    v13 = v11;
    objc_msgSend(v5, sel_addAttribute_value_range_, v12, v13, 0, v6);

  }
  return v5;
}

void sub_1BAC8999C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, double *a5@<X8>, double a6@<D0>)
{
  uint64_t v9;
  char v12;
  double v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int *v18;
  int v19;
  CGFloat Height;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  int v25;
  CGFloat v26;
  double v27;
  uint64_t v28;

  if (!BYTE2(a4))
  {
    v16 = sub_1BB870F9C();
    if ((a3 & 1) != 0)
      v17 = (unsigned int *)MEMORY[0x1E0DBB610];
    else
      v17 = (unsigned int *)MEMORY[0x1E0DBB608];
    (*(void (**)(double *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a5, *v17, v16);
    v18 = (unsigned int *)MEMORY[0x1E0DBB620];
    goto LABEL_16;
  }
  v12 = a4;
  if (BYTE2(a4) == 1)
  {
    if ((a4 & 0x100) != 0)
    {
      v19 = ~(_BYTE)a4;
      Height = CGRectGetHeight(*(CGRect *)&a6);
      v15 = Height + Height;
      if (v19)
      {
        sub_1BAC8A4D4(a1, a2, a3, v12);
        if (v9)
          return;
        v15 = v21;
      }
    }
    else
    {
      type metadata accessor for FormatDecorationContext();
      sub_1BB86DD80();
      v15 = sub_1BA72BED4(v28, a3);
      swift_release();
      if (v9)
        return;
    }
    *a5 = v15;
    v18 = (unsigned int *)MEMORY[0x1E0DBB630];
    goto LABEL_16;
  }
  if (BYTE1(a4) > 0xFEu)
  {
    v18 = (unsigned int *)MEMORY[0x1E0DBB638];
LABEL_16:
    v22 = *v18;
    v23 = sub_1BB870FA8();
    (*(void (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(a5, v22, v23);
    return;
  }
  if ((a4 & 0x100) != 0)
  {
    v25 = ~(_BYTE)a4;
    v26 = CGRectGetHeight(*(CGRect *)&a6);
    v24 = v26 + v26;
    if (v25)
    {
      sub_1BAC8A4D4(a1, a2, a3, v12);
      if (v9)
        return;
      v24 = v27;
    }
LABEL_24:
    *a5 = v24;
    v18 = (unsigned int *)MEMORY[0x1E0DBB600];
    goto LABEL_16;
  }
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v24 = sub_1BA72BED4(v28, a3);
  swift_release();
  if (!v9)
    goto LABEL_24;
}

uint64_t FormatSupplementaryNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.styles.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC89C4C(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = v1[4];
  v4 = v1[5];
  swift_beginAccess();
  v5 = v1[2];
  v6 = v1[3];
  swift_beginAccess();
  v7 = v1[12];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3D84A4(v3, v4, 2, v5, v6, v7, a1, v1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSupplementaryNode.blocks.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.supplementaryIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FormatSupplementaryNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatSupplementaryNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatSupplementaryNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.styles.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.styles.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.blocks.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSupplementaryNode.blocks.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSupplementaryNode.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t FormatSupplementaryNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSupplementaryNode.__deallocating_deinit()
{
  FormatSupplementaryNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAC8A1A0(_QWORD *a1, _QWORD *a2)
{
  return static FormatSupplementaryNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BAC8A1AC(unint64_t a1)
{
  return sub_1BAC89C4C(a1);
}

uint64_t sub_1BAC8A1CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2B1830, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNode, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAC8A208(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BEFD0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNode, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNode);
  a1[2] = sub_1BA50AD30(&qword_1ED3A0270, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNode, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNode);
  result = sub_1BA50AD30(&qword_1EF2B1838, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNode, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAC8A280(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2B1840, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNode, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAC8A2BC(uint64_t a1, uint64_t a2)
{
  return FormatSupplementaryNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BAC8A2DC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC8A328@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC8A374@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC8A3C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC8A40C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAC8A458@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSupplementaryNode()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAC8A4B0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAC8A4D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

double sub_1BAC8A514()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  uint64_t v6;

  if (v1)
  {
    if (v1 != 1)
    {
      type metadata accessor for FormatDecorationContext();
      sub_1BB86DD80();
      v4 = sub_1BA72BED4(v6, v1);
      swift_release();
      if (v0)
        return v2;
      return v4 + v2;
    }
    sub_1BB86D648();
  }
  else
  {
    sub_1BB86D654();
  }
  v4 = v3;
  return v4 + v2;
}

uint64_t sub_1BAC8A6F4()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

BOOL static SharingIssueActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SharingIssueActivity.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SharingIssueActivity.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAC8A7AC()
{
  unint64_t result;

  result = qword_1EF2B1848;
  if (!qword_1EF2B1848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SharingIssueActivity, &type metadata for SharingIssueActivity);
    atomic_store(result, (unint64_t *)&qword_1EF2B1848);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingIssueActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAC8A83C + 4 * byte_1BB8AAC55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAC8A870 + 4 * byte_1BB8AAC50[v4]))();
}

uint64_t sub_1BAC8A870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC8A878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAC8A880);
  return result;
}

uint64_t sub_1BAC8A88C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAC8A894);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAC8A898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC8A8A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAC8A8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;

  v4 = *(_QWORD *)(a4 + 8);
  v5 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
  if (v4)
    v6 = sub_1BB872970();
  else
    v6 = 0;
  v7 = (id)v6;
  objc_msgSend(v5, sel_setString_);

}

uint64_t sub_1BAC8A934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)(a4 + 8);
  LODWORD(result) = objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
  if (v4)
    return result;
  else
    return 0;
}

uint64_t FormatShareAttributionNodeContent.sharedItem(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v5[5];

  v5[3] = type metadata accessor for FormatNodeContext();
  v5[4] = &off_1E72F9288;
  v5[0] = a1;
  swift_retain();
  sub_1BA6D4C0C(v5, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t static FormatShareAttributionNodeContent.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_1BAC8A9EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAC8AA10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAC8AA10()
{
  unint64_t result;

  result = qword_1EF2B1850;
  if (!qword_1EF2B1850)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeContent, &type metadata for FormatShareAttributionNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B1850);
  }
  return result;
}

unint64_t sub_1BAC8AA54(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA820BD0();
  a1[2] = sub_1BAC8AA88();
  result = sub_1BAC8AACC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAC8AA88()
{
  unint64_t result;

  result = qword_1ED3A0670;
  if (!qword_1ED3A0670)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeContent, &type metadata for FormatShareAttributionNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A0670);
  }
  return result;
}

unint64_t sub_1BAC8AACC()
{
  unint64_t result;

  result = qword_1EF2B1858;
  if (!qword_1EF2B1858)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeContent, &type metadata for FormatShareAttributionNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B1858);
  }
  return result;
}

uint64_t sub_1BAC8AB10(_QWORD *a1)
{
  return FormatShareAttributionNodeContent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatShareAttributionNodeContent()
{
  return &type metadata for FormatShareAttributionNodeContent;
}

void destroy for DebugFormatLogSeverity(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s8NewsFeed22DebugFormatLogSeverityOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for DebugFormatLogSeverity(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

void **assignWithTake for DebugFormatLogSeverity(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatLogSeverity(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 5)
    return (v3 - 4);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugFormatLogSeverity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

uint64_t sub_1BAC8AD60(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1BAC8AD80(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLogSeverity()
{
  return &type metadata for DebugFormatLogSeverity;
}

id sub_1BAC8ADC0(uint64_t a1)
{
  id v1;
  id v2;
  id v4;

  switch(a1)
  {
    case 1:
      v1 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
      v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
      goto LABEL_7;
    case 2:
      return objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    case 3:
      v1 = objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
      v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
      goto LABEL_7;
    case 4:
      v1 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
      v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
      goto LABEL_7;
    default:
      v1 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
      v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.1);
LABEL_7:
      v4 = v2;

      return v4;
  }
}

uint64_t FeedServiceState.__allocating_init(feed:)(uint64_t *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FeedServiceState.init(feed:)(a1);
  return v2;
}

uint64_t FeedServiceState.init(feed:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a1;
  v4 = a1[3];
  v5 = *((_BYTE *)a1 + 32);
  sub_1BA511E9C(0, (unint64_t *)&unk_1ED3B07E0);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1BB86E1A0();
  sub_1BA511E9C(0, qword_1EF2B1860);
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_1BB86E1A0();
  *(_QWORD *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v1 + 56) = v4;
  *(_BYTE *)(v1 + 64) = v5;
  return v1;
}

Swift::Void __swiftcall FeedServiceState.markGapOnScreen(_:)(Swift::Bool a1)
{
  sub_1BB86E1D0();
}

Swift::Void __swiftcall FeedServiceState.commitNextRevision()()
{
  sub_1BB86E1B8();
}

_QWORD *sub_1BAC8B0B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (*result == -1)
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

uint64_t FeedServiceState.deinit()
{
  uint64_t v0;
  void *v1;

  swift_release();
  swift_release();
  v1 = *(void **)(v0 + 48);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedServiceState.__deallocating_deinit()
{
  FeedServiceState.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAC8B134()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedServiceState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedServiceState);
}

uint64_t method lookup function for FeedServiceState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedServiceState.__allocating_init(feed:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BAC8B1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

void sub_1BAC8B1E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3948)
  {
    type metadata accessor for SportsDataVisualizationResponseData();
    sub_1BA4A2870(&qword_1ED3A45D0, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseData, (uint64_t)&unk_1BB8FAE78);
    sub_1BA4A2870((unint64_t *)&unk_1ED3A45C0, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseData, (uint64_t)&unk_1BB8FAE50);
    v0 = sub_1BB86E1F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3948);
  }
}

uint64_t sub_1BAC8B284(uint64_t a1)
{
  uint64_t v2;

  sub_1BAC8B1E0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1BAC8B2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAC8B2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAC8B340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAC8B384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAC8B3C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAC8B3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BAC8B410()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAC8B41C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC8B1E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsDataVisualizationResponse()
{
  uint64_t result;

  result = qword_1ED3A9290;
  if (!qword_1ED3A9290)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAC8B498()
{
  unint64_t v0;

  sub_1BAC8B1E0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BAC8B500@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v19 = a2;
  sub_1BAC8B1E0();
  v21 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v22 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC8B8E4(0, &qword_1ED3AB4E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v20 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for SportsDataVisualizationResponse();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAC8B85C();
  sub_1BB87468C();
  if (!v2)
  {
    v14 = (uint64_t)v13;
    sub_1BA4A2870(&qword_1ED3A3940, (uint64_t (*)(uint64_t))sub_1BAC8B1E0, MEMORY[0x1E0DB3A38]);
    v16 = v20;
    v15 = v21;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v22, v15);
    sub_1BAC8B8A0(v14, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAC8B6E0()
{
  sub_1BAC8B85C();
  return sub_1BB874710();
}

uint64_t sub_1BAC8B708()
{
  sub_1BAC8B85C();
  return sub_1BB87471C();
}

uint64_t sub_1BAC8B730@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAC8B500(a1, a2);
}

uint64_t sub_1BAC8B744(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BAC8B8E4(0, &qword_1EF2B1910, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAC8B85C();
  sub_1BB8746C8();
  sub_1BAC8B1E0();
  sub_1BA4A2870(&qword_1EF2B1918, (uint64_t (*)(uint64_t))sub_1BAC8B1E0, MEMORY[0x1E0DB3A30]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BAC8B85C()
{
  unint64_t result;

  result = qword_1ED3A9268;
  if (!qword_1ED3A9268)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AB074, &type metadata for SportsDataVisualizationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9268);
  }
  return result;
}

uint64_t sub_1BAC8B8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataVisualizationResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAC8B8E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAC8B85C();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponse.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAC8B980 + 4 * byte_1BB8AAF30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAC8B9A0 + 4 * byte_1BB8AAF35[v4]))();
}

_BYTE *sub_1BAC8B980(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAC8B9A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAC8B9A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAC8B9B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAC8B9B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAC8B9C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponse.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponse.CodingKeys;
}

unint64_t sub_1BAC8B9E0()
{
  unint64_t result;

  result = qword_1EF2B1920;
  if (!qword_1EF2B1920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AB04C, &type metadata for SportsDataVisualizationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1920);
  }
  return result;
}

unint64_t sub_1BAC8BA28()
{
  unint64_t result;

  result = qword_1ED3A9278;
  if (!qword_1ED3A9278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AAFBC, &type metadata for SportsDataVisualizationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9278);
  }
  return result;
}

unint64_t sub_1BAC8BA70()
{
  unint64_t result;

  result = qword_1ED3A9270;
  if (!qword_1ED3A9270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AAFE4, &type metadata for SportsDataVisualizationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9270);
  }
  return result;
}

uint64_t sub_1BAC8BAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v17;
  uint64_t v18;
  unsigned __int8 v19;
  __int128 v20;
  char v21;

  v4 = *(unsigned __int8 *)(a1 + 72);
  v5 = (void *)MEMORY[0x1E0DEE9D8];
  if (v4 != 3)
  {
    if (*(_BYTE *)(a1 + 72) && v4 != 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
        v5 = &unk_1E724D798;
    }
  }
  sub_1BB86DD80();
  v7 = sub_1BA761770();
  swift_release();
  v8 = sub_1BA7B69E8((uint64_t)v5, v7);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(void **)(a1 + 64);
  v11 = v10;
  swift_unknownObjectRetain();
  PuzzleShareData.init(puzzleHistoryItem:)(v10, (uint64_t)&v18);
  v12 = v18;
  v13 = v19;
  v17 = v20;
  v14 = v21;
  if (v4 == 3)
  {
    swift_unknownObjectRetain();
    v15 = 0;
  }
  else
  {
    if (v4 > 1)
      v15 = 0;
    else
      v15 = sub_1BB874398() ^ 1;
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_OWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 40) = v14;
  *(_BYTE *)(a2 + 41) = 13;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v9;
  *(_BYTE *)(a2 + 64) = v15 & 1 | 0x20;
  type metadata accessor for FormatAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FormatPuzzleBinding.Action.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatPuzzleBinding.Action.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleBinding.Action.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAC8BD44()
{
  unint64_t result;

  result = qword_1EF2B1928;
  if (!qword_1EF2B1928)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Action, &type metadata for FormatPuzzleBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2B1928);
  }
  return result;
}

unint64_t sub_1BAC8BD88(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAC8BDAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAC8BDAC()
{
  unint64_t result;

  result = qword_1EF2B1930;
  if (!qword_1EF2B1930)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Action, &type metadata for FormatPuzzleBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2B1930);
  }
  return result;
}

unint64_t sub_1BAC8BDF0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82E60C();
  a1[2] = sub_1BAC8BE24();
  result = sub_1BAC8BD44();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAC8BE24()
{
  unint64_t result;

  result = qword_1ED3A6680;
  if (!qword_1ED3A6680)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Action, &type metadata for FormatPuzzleBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1ED3A6680);
  }
  return result;
}

uint64_t sub_1BAC8BE68(_QWORD *a1)
{
  return FormatPuzzleBinding.Action.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Action()
{
  return &type metadata for FormatPuzzleBinding.Action;
}

uint64_t sub_1BAC8BE8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v4);
  v50 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_1BB871A28();
  v6 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v42 - v9;
  v10 = type metadata accessor for FormatInspectionItem(0);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v56 = (uint64_t)&v42 - v14;
  v15 = sub_1BB871A4C();
  v16 = *(_QWORD *)(v15 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  v45 = v15;
  if (v16)
  {
    v18 = v15;
    v43 = a1;
    v44 = a2;
    v59 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A248(0, v16, 0);
    v19 = v18 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v48 = *(_QWORD *)(v6 + 72);
    v49 = v6;
    v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v46 = v12 + 2;
    v47 = v20;
    v21 = v56;
    v22 = v52;
    v23 = v50;
    do
    {
      v57 = v19;
      v58 = v16;
      v24 = v53;
      v25 = v47;
      ((void (*)(char *))v47)(v53);
      v26 = v51;
      v25(v51, v24, v22);
      *v12 = sub_1BB871A10();
      v12[1] = v27;
      v28 = v46;
      *v46 = 0;
      v28[1] = 0;
      v29 = (uint64_t)v12;
      v30 = sub_1BB871A1C();
      v32 = v31;
      v33 = *(void (**)(char *, uint64_t))(v49 + 8);
      v33(v26, v22);
      *v23 = v30;
      v23[1] = v32;
      v12 = (_QWORD *)v29;
      v34 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v23, 0, 1, v34);
      v35 = v55;
      sub_1BA5193C4((uint64_t)v23, v29 + *(int *)(v55 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v36 = v29 + *(int *)(v35 + 28);
      *(_QWORD *)v36 = 0;
      *(_QWORD *)(v36 + 8) = 0;
      *(_BYTE *)(v36 + 16) = -1;
      sub_1BA5193C4(v29, v21, type metadata accessor for FormatInspectionItem);
      v33(v24, v22);
      v17 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A248(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v59;
      }
      v38 = *(_QWORD *)(v17 + 16);
      v37 = *(_QWORD *)(v17 + 24);
      v39 = v58;
      if (v38 >= v37 >> 1)
      {
        sub_1BAC7A248(v37 > 1, v38 + 1, 1);
        v17 = v59;
      }
      *(_QWORD *)(v17 + 16) = v38 + 1;
      v21 = v56;
      sub_1BA5193C4(v56, v17+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v38, type metadata accessor for FormatInspectionItem);
      v19 = v57 + v48;
      v16 = v39 - 1;
    }
    while (v16);
    a1 = v43;
    a2 = v44;
  }
  v40 = sub_1BB871A70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(a1, v40);
  result = swift_bridgeObjectRelease();
  *a2 = 0xD000000000000019;
  a2[1] = 0x80000001BB970470;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = v17;
  return result;
}

void sub_1BAC8C214(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t (*v22)(uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t (*v26)(uint64_t);
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  _QWORD *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v4 = sub_1BB871E3C();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v6);
  v47 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1BB871A40();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1BB871A70();
  v10 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v48 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatInspectionItem(0);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
  {
    v41 = a2;
    v59 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A248(0, v18, 0);
    v20 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v45 = *(_QWORD *)(v10 + 72);
    v46 = v10;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v42 = (uint64_t *)v14;
    v43 = v14 + 16;
    v44 = v21;
    v22 = type metadata accessor for FormatInspectionItem;
    v58 = v17;
    v23 = v48;
    v24 = v52;
    v25 = v42;
    do
    {
      v44(v23, v20, v24);
      v26 = v22;
      v27 = v49;
      sub_1BB871A58();
      *v25 = sub_1BB871A64();
      v25[1] = v28;
      v29 = v43;
      *v43 = 0;
      v29[1] = 0;
      v30 = v55;
      sub_1BB871A34();
      v31 = sub_1BB871E30();
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v54);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v57);
      v34 = v47;
      *v47 = v31;
      v34[1] = v33;
      v35 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
      v36 = v51;
      v37 = (uint64_t)v34;
      v22 = v26;
      sub_1BA5193C4(v37, (uint64_t)v25 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v38 = (char *)v25 + *(int *)(v36 + 28);
      *(_QWORD *)v38 = 0;
      *((_QWORD *)v38 + 1) = 0;
      v38[16] = -1;
      sub_1BA5193C4((uint64_t)v25, (uint64_t)v58, v26);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v24);
      v19 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A248(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v59;
      }
      v40 = *(_QWORD *)(v19 + 16);
      v39 = *(_QWORD *)(v19 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1BAC7A248(v39 > 1, v40 + 1, 1);
        v19 = v59;
      }
      *(_QWORD *)(v19 + 16) = v40 + 1;
      sub_1BA5193C4((uint64_t)v58, v19+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v40, v26);
      v20 += v45;
      --v18;
    }
    while (v18);
    a2 = v41;
  }
  *a2 = 0x79726F74736948;
  a2[1] = 0xE700000000000000;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = v19;
}

BOOL FCTagProviding.traits.getter@<W0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  _BOOL8 v6;
  _BOOL8 result;
  uint64_t v8;

  v3 = objc_msgSend(v1, sel_asSports);
  swift_unknownObjectRelease();
  if (v3)
    v4 = 16777280;
  else
    v4 = 64;
  if ((objc_msgSend(v1, sel_isLocal) & ((v4 & 0x2000000) == 0)) != 0)
    v4 |= 0x2000000uLL;
  v5 = objc_msgSend(v1, sel_isNewspaper);
  if ((v5 & ((v4 & 0x4000000) == 0)) != 0)
    v4 |= 0x4000000uLL;
  v6 = FCTagProviding.isTopic.getter((uint64_t)v5);
  if (v6 && (v4 & 0x8000000) == 0)
    v4 |= 0x8000000uLL;
  result = FCTagProviding.isChannel.getter(v6);
  if (result && (v4 & 0x10000000) == 0)
    v8 = v4 | 0x10000000;
  else
    v8 = v4;
  *a1 = v8;
  return result;
}

id FCTagProviding.iconColor.getter()
{
  void *v0;
  id v1;
  id v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v1 = objc_msgSend(v0, sel_asSports);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_sportsType);
    swift_unknownObjectRelease();
    if (v2 == (id)4)
      return objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  }
  v4 = objc_msgSend(v0, sel_asSports);
  if (v4)
  {
    v5 = objc_msgSend(v4, sel_sportsTheme);
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_sportsPrimaryColor);
      swift_unknownObjectRelease();
      if (v6)
      {
        v7 = objc_msgSend(v6, sel_ne_color);
        swift_unknownObjectRelease();

        return v7;
      }
    }
    v8 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
    swift_unknownObjectRelease();
  }
  else
  {
    v9 = objc_msgSend(v0, sel_groupTitleColor);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_ne_color);
    }
    else
    {
      v10 = objc_msgSend(v0, sel_identifier);
      if (!v10)
      {
        sub_1BB8729A0();
        v10 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      v11 = objc_msgSend((id)objc_opt_self(), sel_nu_safeColorForIdentifier_, v10);
    }
    v8 = v11;

  }
  return v8;
}

uint64_t FCTagProviding.localizedTagType.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v6;
  id v7;
  uint64_t ObjCClassFromMetadata;

  v1 = objc_msgSend(v0, sel_asSportsEvent);
  swift_unknownObjectRelease();
  if (v1)
    goto LABEL_2;
  v6 = objc_msgSend(v0, sel_asSports);
  if (!v6)
  {
LABEL_7:
    if (!FCTagProviding.isChannel.getter((uint64_t)v6) || (objc_msgSend(v0, sel_isLocal) & 1) != 0)
    {
      objc_msgSend(v0, sel_isPuzzleType);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      goto LABEL_3;
    }
LABEL_2:
    type metadata accessor for Localized();
    v2 = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v2);
LABEL_3:
    v4 = sub_1BB86C340();

    return v4;
  }
  v7 = objc_msgSend(v6, sel_sportsType);
  v6 = (id)swift_unknownObjectRelease();
  switch((unint64_t)v7)
  {
    case 0uLL:
      goto LABEL_7;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      goto LABEL_2;
    default:
      if (FCTagProviding.isChannel.getter((uint64_t)v6) && (objc_msgSend(v0, sel_isLocal) & 1) == 0
        || (objc_msgSend(v0, sel_isPuzzleType) & 1) == 0)
      {
        goto LABEL_2;
      }
      v4 = 0;
      break;
  }
  return v4;
}

BOOL FCTagProviding.isChannel.getter(uint64_t a1)
{
  return sub_1BA783234(a1, (SEL *)&selRef_asChannel);
}

BOOL FCTagProviding.isSports.getter(uint64_t a1)
{
  return sub_1BA783234(a1, (SEL *)&selRef_asSports);
}

uint64_t FCTagProviding.topKArticleListID.getter()
{
  void *v0;
  uint64_t result;
  void *v2;

  result = (uint64_t)objc_msgSend(v0, sel_feedIDForBin_, 3);
  if (result)
  {
    v2 = (void *)result;
    sub_1BB8729A0();

    sub_1BB872AFC((_QWORD *)0x524C);
    swift_bridgeObjectRelease();
    return 21068;
  }
  return result;
}

double FallbackTagImageStyle.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

id FallbackTagImageStyle.tileColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id FallbackTagImageStyle.titleFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

double FallbackTagImageStyle.padding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void FallbackTagImageStyle.init(cornerRadius:tileColor:titleFont:padding:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  void *v10;
  id v11;
  unsigned int v12;
  id v13;

  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_whiteColor);
  v12 = objc_msgSend(a1, sel__isSimilarToColor_withinPercentage_, v11, 0.12);

  if (v12)
  {
    v13 = objc_msgSend(v10, sel_blackColor);

    a1 = v13;
  }
  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = a1;
  *(_QWORD *)(a3 + 16) = a2;
  *(double *)(a3 + 24) = a5;
}

uint64_t FCTagProviding.createTagImage(imageSize:style:)(uint64_t *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t result;
  _QWORD v21[6];

  v5 = v4;
  v9 = *a1;
  v11 = (void *)a1[1];
  v10 = (void *)a1[2];
  v12 = a1[3];
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a3, a4);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(double *)(v14 + 24) = a3;
  *(double *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = v9;
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 56) = v10;
  *(_QWORD *)(v14 + 64) = v12;
  *(_QWORD *)(v14 + 72) = v5;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BAC8E3E0;
  *(_QWORD *)(v15 + 24) = v14;
  v21[4] = sub_1BA4D7950;
  v21[5] = v15;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1BA56DAFC;
  v21[3] = &block_descriptor_26;
  v16 = _Block_copy(v21);
  v17 = v11;
  v18 = v10;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v13, sel_imageWithActions_, v16);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) == 0)
    return (uint64_t)v19;
  __break(1u);
  return result;
}

void sub_1BAC8D3FC(void *a1, void *a2, uint64_t a3, void *a4, double a5, double a6, double a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  BOOL v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double Width;
  BOOL v30;
  double v31;
  id v32;
  double v33;
  double v34;
  id v35;
  id v36;
  CGContext *v37;
  CGContext *v38;
  const CGPath *v39;
  CGContext *v40;
  CGColor *v41;
  CGContext *v42;
  CGColor *v43;
  CGContext *v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t inited;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  double v66;
  CGFloat x;
  CGFloat y;
  CGFloat v69;
  CGFloat height;
  double v71;
  uint64_t v72;
  double v73;
  double v74;
  uint64_t v75;
  void *v76;
  double v77;
  _QWORD v78[5];
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;

  v76 = a4;
  v73 = a8;
  v75 = a3;
  v77 = a7;
  v12 = sub_1BB86DC18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v17, sel_scale);
  v19 = v18;

  v20 = v19 <= 0.0;
  v21 = 1.0;
  if (!v20)
  {
    v22 = objc_msgSend(v16, sel_mainScreen);
    objc_msgSend(v22, sel_scale);
    v21 = v23;

  }
  v24 = 1.0 / v21;
  v25 = a5;
  v26 = a5 - 1.0 / v21;
  v27 = a6;
  v28 = a6 - 1.0 / v21;
  v79.origin.x = v24 * 0.5;
  v79.origin.y = v24 * 0.5;
  v79.size.width = v26;
  v79.size.height = a6 - v24;
  Width = CGRectGetWidth(v79);
  v80.origin.x = v24 * 0.5;
  v80.origin.y = v24 * 0.5;
  v80.size.width = v26;
  v80.size.height = v28;
  v30 = Width == CGRectGetHeight(v80);
  v31 = v77;
  v74 = v27;
  if (v30
    && (v81.origin.x = v24 * 0.5,
        v81.origin.y = v24 * 0.5,
        v81.size.width = v26,
        v81.size.height = v28,
        CGRectGetWidth(v81) * 0.5 == v31))
  {
    v32 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v24 * 0.5, v24 * 0.5, v26, v28, v31);
  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, -1, v24 * 0.5, v24 * 0.5, v26, v28, v31, v31);
  }
  v33 = v25;
  v34 = v73;
  v35 = v32;
  v36 = a2;
  v37 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetLineWidth(v37, 1.0 / v24);

  v38 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v77 = *(double *)&v35;
  v39 = (const CGPath *)objc_msgSend(v35, sel_CGPath);
  CGContextAddPath(v38, v39);

  v40 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v41 = (CGColor *)objc_msgSend(v36, sel_CGColor);
  CGContextSetStrokeColorWithColor(v40, v41);

  v42 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v43 = (CGColor *)objc_msgSend(v36, sel_CGColor);
  CGContextSetFillColorWithColor(v42, v43);

  v44 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextClosePath(v44);

  v45 = objc_msgSend(a1, sel_CGContext);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0C9B8A0], v12);
  sub_1BB873240();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BAC8DAA4(v76);
  sub_1BAC8DBAC();
  if (v46)
    swift_bridgeObjectRelease();
  *(double *)v78 = v31;
  v78[1] = v36;
  v78[2] = v75;
  *(double *)&v78[3] = v34;
  v47 = sub_1BAC8DD5C(v78);
  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v48, sel_setAlignment_, 1);
  objc_msgSend(v48, sel_setLineBreakMode_, 4);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v50 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1178];
  v51 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 40) = v48;
  v52 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = v51;
  *(_QWORD *)(inited + 72) = v52;
  v53 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 80) = v47;
  v76 = v36;
  v54 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 104) = v53;
  *(_QWORD *)(inited + 112) = v54;
  v55 = (void *)objc_opt_self();
  v56 = v50;
  v57 = v48;
  v58 = v52;
  v59 = v47;
  v60 = v54;
  v61 = objc_msgSend(v55, sel_whiteColor);
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 120) = v61;
  sub_1BA76E82C(inited);
  v62 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v63 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9880, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v64 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v65 = objc_msgSend(v62, sel_initWithString_attributes_, v63, v64);

  v66 = v25 - v34;
  sub_1BB8734D4();
  x = v82.origin.x;
  y = v82.origin.y;
  v69 = v82.size.width;
  height = v82.size.height;
  v71 = (v74 - CGRectGetHeight(v82)) * 0.5;
  v83.origin.x = x;
  v83.origin.y = y;
  v83.size.width = v69;
  v83.size.height = height;
  objc_msgSend(v65, sel_drawWithRect_options_context_, 1, 0, (v33 - v66) * 0.5, v71, v66, CGRectGetHeight(v83));

}

uint64_t sub_1BAC8DAA4(void *a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  uint64_t v3;

  objc_msgSend(a1, sel_tagType);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1BB86C340();

  return v3;
}

uint64_t sub_1BAC8DBAC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v1 = sub_1BB86BE54();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  v8 = sub_1BAC8DDAC();
  if (v9)
    return v8;
  v11 = objc_msgSend(v0, sel_displayName);
  sub_1BB8729A0();

  v12 = sub_1BB872A18();
  v14 = v13;
  swift_bridgeObjectRelease();
  v23 = v12;
  v24 = v14;
  sub_1BB86BDB8();
  sub_1BB86BE24();
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v7, v1);
  sub_1BA7114A0();
  v16 = sub_1BB873AEC();
  v18 = v17;
  v15(v4, v1);
  swift_bridgeObjectRelease();
  v19 = sub_1BA689E44(v16, v18);
  v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
    return 0;
  v23 = v19;
  v24 = v21;
  v10 = sub_1BB873ABC();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1BAC8DD5C(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  id v5;
  _QWORD v6[4];

  v2 = a1[1];
  v1 = (void *)a1[2];
  v3 = a1[3];
  v6[0] = *a1;
  v6[1] = v2;
  v6[2] = v1;
  v5 = v1;
  v6[3] = v3;
  result = sub_1BAC8E310((uint64_t)v6);
  if (!result)
    return v5;
  return result;
}

uint64_t sub_1BAC8DDAC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;

  v1 = sub_1BB86BE54();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - v7;
  v9 = objc_msgSend(v0, sel_asSports, v6);
  if (!v9)
    return 0;
  v10 = objc_msgSend(v9, sel_sportsType);
  swift_unknownObjectRelease();
  if (v10 != (id)4)
    return 0;
  v11 = objc_msgSend(v0, sel_name);
  sub_1BB8729A0();

  v12 = sub_1BB872A18();
  v14 = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v57 = v12;
  *((_QWORD *)&v57 + 1) = v14;
  sub_1BA7114A0();
  v15 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v15 + 16) >= 2uLL)
    v16 = 2;
  else
    v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v16, 0);
    v17 = *(_QWORD *)(v15 + 48);
    v18 = *(_QWORD *)(v15 + 56);
    v57 = *(_OWORD *)(v15 + 32);
    v58 = v17;
    v59 = v18;
    swift_bridgeObjectRetain();
    sub_1BB86BDB8();
    sub_1BB86BE24();
    v19 = *(void (**)(char *, uint64_t))(v2 + 8);
    v19(v8, v1);
    sub_1BAB222A8();
    v56 = sub_1BB873AEC();
    v21 = v20;
    v19(v4, v1);
    swift_bridgeObjectRelease();
    v22 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BA7447E8(0, v22[2] + 1, 1);
      v22 = v60;
    }
    v24 = v22[2];
    v23 = v22[3];
    v25 = v24 + 1;
    if (v24 >= v23 >> 1)
    {
      v55 = v24 + 1;
      sub_1BA7447E8(v23 > 1, v24 + 1, 1);
      v25 = v55;
      v22 = v60;
    }
    v22[2] = v25;
    v26 = &v22[2 * v24];
    v26[4] = v56;
    v26[5] = v21;
    if (v16 != 1)
    {
      v27 = *(_QWORD *)(v15 + 80);
      v28 = *(_QWORD *)(v15 + 88);
      v57 = *(_OWORD *)(v15 + 64);
      v58 = v27;
      v59 = v28;
      swift_bridgeObjectRetain();
      sub_1BB86BDB8();
      sub_1BB86BE24();
      v29 = *(void (**)(char *, uint64_t))(v2 + 8);
      v29(v8, v1);
      sub_1BAB222A8();
      v30 = sub_1BB873AEC();
      v32 = v31;
      v29(v4, v1);
      swift_bridgeObjectRelease();
      v22 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, v22[2] + 1, 1);
        v22 = v60;
      }
      v34 = v22[2];
      v33 = v22[3];
      if (v34 >= v33 >> 1)
      {
        sub_1BA7447E8(v33 > 1, v34 + 1, 1);
        v22 = v60;
      }
      v22[2] = v34 + 1;
      v35 = &v22[2 * v34];
      v35[4] = v30;
      v35[5] = v32;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (v22[2] != 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v36 = v22[5];
  if ((v36 & 0x2000000000000000) != 0)
    v37 = HIBYTE(v36) & 0xF;
  else
    v37 = v22[4] & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (v37)
  {
    swift_bridgeObjectRetain();
    v38 = sub_1BB872B74();
    v40 = v39;
    swift_bridgeObjectRelease();
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_1BB391AC0(0, v41[2] + 1, 1, v41);
    v43 = v41[2];
    v42 = v41[3];
    if (v43 >= v42 >> 1)
      v41 = sub_1BB391AC0((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
    v41[2] = v43 + 1;
    v44 = &v41[2 * v43];
    v44[4] = v38;
    v44[5] = v40;
  }
  else
  {
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v47 = v22[7];
  v48 = HIBYTE(v47) & 0xF;
  if ((v47 & 0x2000000000000000) == 0)
    v48 = v22[6] & 0xFFFFFFFFFFFFLL;
  if (v48)
  {
    swift_bridgeObjectRetain();
    v49 = sub_1BB872B74();
    v51 = v50;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_1BB391AC0(0, v41[2] + 1, 1, v41);
    v53 = v41[2];
    v52 = v41[3];
    if (v53 >= v52 >> 1)
      v41 = sub_1BB391AC0((_QWORD *)(v52 > 1), v53 + 1, 1, v41);
    v41[2] = v53 + 1;
    v54 = &v41[2 * v53];
    v54[4] = v49;
    v54[5] = v51;
  }
  swift_bridgeObjectRelease_n();
  *(_QWORD *)&v57 = v41;
  sub_1BAC8E52C();
  sub_1BA4A2870((unint64_t *)&unk_1EF2B1940, (uint64_t (*)(uint64_t))sub_1BAC8E52C, MEMORY[0x1E0DEAF38]);
  sub_1BB872B80();
  v45 = sub_1BB872A24();
  swift_bridgeObjectRelease();
  return v45;
}

id sub_1BAC8E310(uint64_t a1)
{
  void *v1;
  void *v2;
  id result;
  id v4;
  double v5;

  v2 = *(void **)(a1 + 16);
  result = objc_msgSend(v1, sel_asSports);
  if (result)
  {
    v4 = objc_msgSend(result, sel_sportsType);
    swift_unknownObjectRelease();
    if (v4 == (id)4)
    {
      objc_msgSend(v2, sel_pointSize);
      return objc_msgSend(v2, sel_fontWithSize_, v5 + -4.0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BAC8E3AC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BAC8E3E0(void *a1)
{
  uint64_t v1;

  sub_1BAC8D3FC(a1, *(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 72), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 64));
}

uint64_t sub_1BAC8E3FC()
{
  return swift_deallocObject();
}

void destroy for FallbackTagImageStyle(uint64_t a1)
{

}

_QWORD *initializeWithCopy for FallbackTagImageStyle(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = v3;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for FallbackTagImageStyle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for FallbackTagImageStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FallbackTagImageStyle()
{
  return &type metadata for FallbackTagImageStyle;
}

void sub_1BAC8E52C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1938)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1938);
  }
}

uint64_t sub_1BAC8E580(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v4 = sub_1BB86D93C();
  objc_msgSend(a1, sel_bounds, MEMORY[0x1E0C80A78](v4));
  sub_1BB8732C4();
  sub_1BB873618();
  v5 = objc_msgSend(a1, sel_window);
  if (!v5)
    v5 = (id)sub_1BB8736D8();
  v6 = v5;
  objc_msgSend(v5, sel_bounds);

  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_nativeBounds);

  v8 = objc_msgSend(a1, sel_traitCollection);
  objc_msgSend(a1, sel_layoutMargins);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  v9 = objc_msgSend(a1, sel_traitCollection);
  v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

  objc_msgSend(a2, sel_safeAreaInsets);
  if (qword_1ED3BC390 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  return sub_1BB86D6F0();
}

uint64_t sub_1BAC8E808(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v4 = sub_1BB86D93C();
  objc_msgSend(a1, sel_bounds, MEMORY[0x1E0C80A78](v4));
  objc_msgSend(a1, sel_bounds);
  sub_1BB873618();
  sub_1BB86DC3C();
  sub_1BB873624();
  sub_1BB8732C4();
  sub_1BB873618();
  v5 = objc_msgSend(a1, sel_window);
  if (!v5)
    v5 = (id)sub_1BB8736D8();
  v6 = v5;
  objc_msgSend(v5, sel_bounds);

  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_nativeBounds);

  v8 = objc_msgSend(a1, sel_traitCollection);
  objc_msgSend(a1, sel_layoutMargins);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  v9 = objc_msgSend(a1, sel_traitCollection);
  v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

  objc_msgSend(a2, sel_safeAreaInsets);
  if (qword_1ED3BC390 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  return sub_1BB86D6F0();
}

BOOL ContentAvailability.isAvailable.getter()
{
  unsigned __int8 *v0;

  return *v0 == 2;
}

uint64_t ContentAvailability.description.getter()
{
  _BYTE *v0;

  if (*v0 == 2)
    return 0x6C62616C69617641;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872AFC((_QWORD *)0x80000001BB970900);
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t ContentAvailability.UnavailableReason.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001BLL;
  else
    return 0x6863614320746F4ELL;
}

BOOL static ContentAvailability.UnavailableReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContentAvailability.UnavailableReason.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t ContentAvailability.UnavailableReason.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAC8EC7C()
{
  unint64_t result;

  result = qword_1EF2B1950;
  if (!qword_1EF2B1950)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ContentAvailability.UnavailableReason, &type metadata for ContentAvailability.UnavailableReason);
    atomic_store(result, (unint64_t *)&qword_1EF2B1950);
  }
  return result;
}

uint64_t dispatch thunk of ContentAvailabilityValidatorType.validate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContentAvailabilityValidatorType.isAvailableOffline(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ContentAvailabilityValidatorType.unavailableOffline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t getEnumTagSinglePayload for ContentAvailability(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BAC8ED28 + 4 * asc_1BB8AB220[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ContentAvailability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAC8EDD0 + 4 * byte_1BB8AB22A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAC8EE04 + 4 * byte_1BB8AB225[v5]))();
}

uint64_t sub_1BAC8EE04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC8EE0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAC8EE14);
  return result;
}

uint64_t sub_1BAC8EE20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAC8EE28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAC8EE2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC8EE34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentAvailability()
{
  return &type metadata for ContentAvailability;
}

uint64_t storeEnumTagSinglePayload for ContentAvailability.UnavailableReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAC8EE9C + 4 * byte_1BB8AB234[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAC8EED0 + 4 * byte_1BB8AB22F[v4]))();
}

uint64_t sub_1BAC8EED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC8EED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAC8EEE0);
  return result;
}

uint64_t sub_1BAC8EEEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAC8EEF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAC8EEF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC8EF00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentAvailability.UnavailableReason()
{
  return &type metadata for ContentAvailability.UnavailableReason;
}

uint64_t initializeBufferWithCopyOfBuffer for ContentValidationType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BAC8EF7C + 4 * byte_1BB8AB239[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void destroy for ContentValidationType(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  int EnumCaseMultiPayload;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
LABEL_2:
      swift_unknownObjectRelease();
      break;
    case 5u:
      v2 = *(id *)a1;
LABEL_5:

      break;
    case 6u:
      type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 48) < 0x11uLL)
            return;
          goto LABEL_3;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) < 0x11uLL)
            return;
          goto LABEL_3;
        case 2u:
          swift_bridgeObjectRelease();
          v3 = type metadata accessor for FeedBannerAd();
          v4 = a1 + *(int *)(v3 + 20);
          v5 = sub_1BB8721C0();
          goto LABEL_58;
        case 3u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v6 = (int *)type metadata accessor for FeedHeadline(0);
          v7 = a1 + v6[10];
          v8 = v7 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v9 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
          {
            v10 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);

            v11 = v8 + *(int *)(v9 + 28);
            v12 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
          }
          v13 = a1 + v6[11];
          v14 = sub_1BB871B24();
          v15 = *(_QWORD *)(v14 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
            (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
          if (*(_QWORD *)(a1 + v6[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + v6[13]) >= 3uLL)
            swift_unknownObjectRelease();
          v2 = *(id *)(a1 + v6[14]);
          goto LABEL_5;
        case 4u:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = (int *)type metadata accessor for FeedWebEmbed();
          v17 = a1 + v16[8];
          v18 = sub_1BB86C67C();
          v19 = *(_QWORD *)(v18 - 8);
          v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
          v20(v17, v18);
          v21 = a1 + v16[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18))
            v20(v21, v18);
          swift_release();
          swift_release();
          v22 = a1 + v16[12];
          v23 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v23 - 1) + 48))(v22, 1, v23))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            v24 = v23[10];
            v25 = v22 + v24 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            v26 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
            {
              v27 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);

              v20(v25 + *(int *)(v26 + 28), v18);
            }
            v28 = v22 + v23[11];
            v29 = sub_1BB871B24();
            v30 = *(_QWORD *)(v29 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
            if (*(_QWORD *)(v22 + v23[12] + 8) >= 0x11uLL)
              swift_bridgeObjectRelease();
            if (*(_QWORD *)(v22 + v23[13]) >= 3uLL)
              swift_unknownObjectRelease();

          }
          v31 = a1 + v16[13];
          v32 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
            return;
          if (swift_getEnumCaseMultiPayload() != 1)
            goto LABEL_60;
          swift_bridgeObjectRelease();
          v33 = type metadata accessor for GenericDataVisualization();
          v20(v31 + *(int *)(v33 + 20), v18);
          goto LABEL_3;
        case 5u:
          goto LABEL_41;
        case 6u:
          v34 = *(unsigned __int8 *)(a1 + 281);
          if (v34 == 2)
            goto LABEL_45;
          if (v34 == 1)
          {

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
              swift_bridgeObjectRelease();
            v42 = *(void **)(a1 + 144);
            if (v42)
            {

              swift_bridgeObjectRelease();
              if (*(_QWORD *)(a1 + 224) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

              }
              if (*(_QWORD *)(a1 + 272) >= 0x11uLL)
                goto LABEL_3;
            }
          }
          else
          {
            if (*(_BYTE *)(a1 + 281))
              return;
LABEL_41:

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
              goto LABEL_3;
          }
          break;
        case 7u:
LABEL_45:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 88) == 1)
            return;
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)(a1 + 120))
            return;
          v35 = a1 + 96;
          goto LABEL_67;
        case 8u:
          swift_bridgeObjectRelease();
          v36 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
          v38 = type metadata accessor for FormatCustomItem.Action();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
          {
            v39 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v37, v39);
          }
          goto LABEL_3;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56))
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          if (*(_QWORD *)(a1 + 96))
            __swift_destroy_boxed_opaque_existential_1(a1 + 72);
          if (!*(_QWORD *)(a1 + 136))
            return;
          v35 = a1 + 112;
          goto LABEL_67;
        case 0xAu:
          swift_bridgeObjectRelease();
          v3 = type metadata accessor for FeedEngagementBanner();
          v4 = a1 + *(int *)(v3 + 20);
          v5 = sub_1BB86EDAC();
LABEL_58:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
          if (*(_QWORD *)(a1 + *(int *)(v3 + 32) + 8) < 0x11uLL)
            return;
          goto LABEL_3;
        case 0xBu:
LABEL_60:
          swift_release();
          return;
        case 0xCu:
          goto LABEL_70;
        case 0xDu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 112))
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          if (!*(_QWORD *)(a1 + 152))
            return;
          v35 = a1 + 128;
LABEL_67:
          __swift_destroy_boxed_opaque_existential_1(v35);
          return;
        case 0xEu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
LABEL_70:
          swift_bridgeObjectRelease();
          goto LABEL_2;
        case 0xFu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v40 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_95;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                v44 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v41, 1, v44))
                {
                  v45 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v41, v45);
                }
              }
              v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              v47 = v41 + *(int *)(v46 + 20);
              v48 = swift_getEnumCaseMultiPayload();
              if (v48 == 5 || v48 == 4)
              {
                v49 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v47, 1, v49))
                {
                  v50 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v47, v50);
                }
              }
              v41 += *(int *)(v46 + 24);
LABEL_95:
              v51 = swift_getEnumCaseMultiPayload();
              if (v51 == 5 || v51 == 4)
              {
                v52 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v41, 1, v52))goto LABEL_108;
              }
              return;
            case 2u:
              v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v41, 1, v53))
              {
                return;
              }
              v54 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v41, v54);
              v55 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              v56 = v41 + *(int *)(v55 + 24);
              swift_bridgeObjectRelease();
              v57 = *(_QWORD *)(v56 + 24);
              if (v57 >> 60 != 15)
                sub_1BA69D314(*(_QWORD *)(v56 + 16), v57);
              goto LABEL_3;
            case 3u:
              v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              v59 = v41 + *(int *)(v58 + 24);
              v60 = type metadata accessor for PuzzleStreak();
              v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48);
              if (!v61(v59, 1, v60))
              {
                v62 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v59, v62);
              }
              v41 += *(int *)(v58 + 28);
              if (v61(v41, 1, v60))
                return;
LABEL_108:
              v63 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v41, v63);
              return;
            default:
              return;
          }
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 240) < 0x11uLL)
            return;
          goto LABEL_3;
        default:
          return;
      }
      break;
    default:
      return;
  }
}

void initializeWithCopy for ContentValidationType()
{
  char *v0;

  v0 = (char *)sub_1BAC91B9C + 4 * byte_1BB8AB29A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BAC91B9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__dst, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v32[2] = v33[2];
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v32;
}

uint64_t assignWithCopy for ContentValidationType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BAC96010(result);
    v2 = (char *)&loc_1BAC93C88 + 4 * byte_1BB8AB2CC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BAC96010(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContentValidationType();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ContentValidationType()
{
  uint64_t result;

  result = qword_1ED3AD670;
  if (!qword_1ED3AD670)
    return swift_getSingletonMetadata();
  return result;
}

char *initializeWithTake for ContentValidationType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *result;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  char *__dst;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;

  if (swift_getEnumCaseMultiPayload() == 6)
  {
    v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = (int *)type metadata accessor for FeedBannerAd();
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
        v12 = v7[7];
        v13 = &a1[v12];
        v14 = &a2[v12];
        v13[8] = v14[8];
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_42;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        v15 = (int *)type metadata accessor for FeedHeadline(0);
        v16 = v15[10];
        v17 = &a1[v16];
        v18 = &a2[v16];
        *v17 = a2[v16];
        v17[1] = a2[v16 + 1];
        v19 = (int *)type metadata accessor for FeedHeadline.State(0);
        v20 = v19[6];
        v21 = &v17[v20];
        v22 = &v18[v20];
        v23 = (int *)type metadata accessor for SharedItem();
        v24 = *((_QWORD *)v23 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
        {
          v25 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v60 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v21, v22, v60);
          v21[v23[5]] = v22[v23[5]];
          *(_QWORD *)&v21[v23[6]] = *(_QWORD *)&v22[v23[6]];
          v61 = v23[7];
          v110 = &v21[v61];
          v62 = &v22[v61];
          v63 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v110, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
        }
        v17[v19[7]] = v18[v19[7]];
        v17[v19[8]] = v18[v19[8]];
        v17[v19[9]] = v18[v19[9]];
        v17[v19[10]] = v18[v19[10]];
        v64 = v15[11];
        v65 = &a1[v64];
        v66 = &a2[v64];
        v67 = sub_1BB871B24();
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
        v77 = v15[13];
        v78 = *(_QWORD *)&a2[v77];
        if (v78 == 2)
          v78 = 2;
        *(_QWORD *)&a1[v77] = v78;
        *(_QWORD *)&a1[v15[14]] = *(_QWORD *)&a2[v15[14]];
        goto LABEL_42;
      case 4u:
        v26 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v26;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v27 = (int *)type metadata accessor for FeedWebEmbed();
        v28 = v27[8];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_1BB86C67C();
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v33(v29, v30, v31);
        v34 = v27[9];
        v35 = &a1[v34];
        v36 = &a2[v34];
        v108 = v33;
        v109 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v33(v35, v36, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
        }
        *(_QWORD *)&a1[v27[10]] = *(_QWORD *)&a2[v27[10]];
        *(_QWORD *)&a1[v27[11]] = *(_QWORD *)&a2[v27[11]];
        v70 = v27[12];
        v71 = &a1[v70];
        v72 = &a2[v70];
        v73 = (int *)type metadata accessor for FeedHeadline(0);
        v74 = *((_QWORD *)v73 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          v105 = v74;
          v106 = v27;
          *(_OWORD *)v71 = *(_OWORD *)v72;
          *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
          v71[24] = v72[24];
          *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
          *(_OWORD *)(v71 + 40) = *(_OWORD *)(v72 + 40);
          v71[56] = v72[56];
          v79 = v73[10];
          v80 = &v71[v79];
          v81 = &v72[v79];
          *v80 = v72[v79];
          v80[1] = v72[v79 + 1];
          v82 = (int *)type metadata accessor for FeedHeadline.State(0);
          v83 = v82[6];
          __dst = &v80[v83];
          v84 = &v81[v83];
          v85 = (int *)type metadata accessor for SharedItem();
          v104 = *((_QWORD *)v85 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v104 + 48))(v84, 1, v85))
          {
            v86 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          }
          else
          {
            v87 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(__dst, v84, v87);
            __dst[v85[5]] = v84[v85[5]];
            *(_QWORD *)&__dst[v85[6]] = *(_QWORD *)&v84[v85[6]];
            v108(&__dst[v85[7]], &v84[v85[7]], v109);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v104 + 56))(__dst, 0, 1, v85);
          }
          v80[v82[7]] = v81[v82[7]];
          v80[v82[8]] = v81[v82[8]];
          v80[v82[9]] = v81[v82[9]];
          v80[v82[10]] = v81[v82[10]];
          v88 = v73[11];
          v89 = &v71[v88];
          v90 = &v72[v88];
          v91 = sub_1BB871B24();
          v92 = *(_QWORD *)(v91 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v89, v90, v91);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
          }
          v27 = v106;
          *(_OWORD *)&v71[v73[12]] = *(_OWORD *)&v72[v73[12]];
          v94 = v73[13];
          v95 = *(_QWORD *)&v72[v94];
          if (v95 == 2)
            v95 = 2;
          *(_QWORD *)&v71[v94] = v95;
          *(_QWORD *)&v71[v73[14]] = *(_QWORD *)&v72[v73[14]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v105 + 56))(v71, 0, 1, v73);
        }
        v96 = v27[13];
        v97 = &a1[v96];
        v98 = &a2[v96];
        v99 = type metadata accessor for WebEmbedDataVisualization();
        v100 = *(_QWORD *)(v99 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v97 = *(_OWORD *)v98;
            v102 = type metadata accessor for GenericDataVisualization();
            v108(&v97[*(int *)(v102 + 20)], &v98[*(int *)(v102 + 20)], v109);
            *(_QWORD *)&v97[*(int *)(v102 + 24)] = *(_QWORD *)&v98[*(int *)(v102 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v97, v98, *(_QWORD *)(v100 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
        }
        a1[v27[14]] = a2[v27[14]];
        goto LABEL_42;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = *(_OWORD *)&a2[v38 + 16];
        *(_OWORD *)v39 = *(_OWORD *)&a2[v38];
        *((_OWORD *)v39 + 1) = v41;
        v42 = type metadata accessor for FormatCustomItem.Resolved();
        v43 = *(int *)(v42 + 24);
        v44 = &v39[v43];
        v45 = &v40[v43];
        v46 = type metadata accessor for FormatCustomItem.Action();
        v47 = *(_QWORD *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v76 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v44, v45, v76);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        *(_QWORD *)&v39[*(int *)(v42 + 28)] = *(_QWORD *)&v40[*(int *)(v42 + 28)];
        goto LABEL_42;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v49 = (int *)type metadata accessor for FeedEngagementBanner();
        v50 = v49[5];
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        *(_QWORD *)&a1[v49[6]] = *(_QWORD *)&a2[v49[6]];
        v54 = v49[7];
        v55 = &a1[v54];
        v56 = &a2[v54];
        v55[8] = v56[8];
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
LABEL_42:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v57 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v57;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v58] = *(_QWORD *)&a2[v58];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v59 = (char *)&loc_1BAC964CC + 4 * word_1BB8AB30C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ContentValidationType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  char *v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *result;
  uint64_t v105;
  uint64_t v106;
  char *__dst;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  int *v110;
  char *v111;

  if (a1 != a2)
  {
    sub_1BAC96010((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      v6 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v7 = (int *)type metadata accessor for FeedBannerAd();
          v8 = v7[5];
          v9 = &a1[v8];
          v10 = &a2[v8];
          v11 = sub_1BB8721C0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
          *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
          v12 = v7[7];
          v13 = &a1[v12];
          v14 = &a2[v12];
          v13[8] = v14[8];
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
          goto LABEL_43;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          a1[56] = a2[56];
          v15 = (int *)type metadata accessor for FeedHeadline(0);
          v16 = v15[10];
          v17 = &a1[v16];
          v18 = &a2[v16];
          *v17 = a2[v16];
          v17[1] = a2[v16 + 1];
          v19 = (int *)type metadata accessor for FeedHeadline.State(0);
          v20 = v19[6];
          v21 = &v17[v20];
          v22 = &v18[v20];
          v23 = (int *)type metadata accessor for SharedItem();
          v24 = *((_QWORD *)v23 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
          {
            v25 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            v60 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v21, v22, v60);
            v21[v23[5]] = v22[v23[5]];
            *(_QWORD *)&v21[v23[6]] = *(_QWORD *)&v22[v23[6]];
            v61 = v23[7];
            v111 = &v21[v61];
            v62 = &v22[v61];
            v63 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v111, v62, v63);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
          }
          v17[v19[7]] = v18[v19[7]];
          v17[v19[8]] = v18[v19[8]];
          v17[v19[9]] = v18[v19[9]];
          v17[v19[10]] = v18[v19[10]];
          v64 = v15[11];
          v65 = &a1[v64];
          v66 = &a2[v64];
          v67 = sub_1BB871B24();
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
          }
          *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
          v78 = v15[13];
          v79 = *(_QWORD *)&a2[v78];
          if (v79 == 2)
            v79 = 2;
          *(_QWORD *)&a1[v78] = v79;
          *(_QWORD *)&a1[v15[14]] = *(_QWORD *)&a2[v15[14]];
          goto LABEL_43;
        case 4u:
          v26 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v26;
          a1[16] = a2[16];
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v27 = (int *)type metadata accessor for FeedWebEmbed();
          v28 = v27[8];
          v29 = &a1[v28];
          v30 = &a2[v28];
          v31 = sub_1BB86C67C();
          v32 = *(_QWORD *)(v31 - 8);
          v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
          v33(v29, v30, v31);
          v110 = v27;
          v34 = v27[9];
          v35 = &a1[v34];
          v36 = &a2[v34];
          v108 = v33;
          v109 = v31;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            v33(v35, v36, v31);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
          }
          v70 = v27;
          *(_QWORD *)&a1[v27[10]] = *(_QWORD *)&a2[v27[10]];
          *(_QWORD *)&a1[v27[11]] = *(_QWORD *)&a2[v27[11]];
          v71 = v27[12];
          v72 = &a1[v71];
          v73 = &a2[v71];
          v74 = (int *)type metadata accessor for FeedHeadline(0);
          v75 = *((_QWORD *)v74 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v75 + 48))(v73, 1, v74))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
          }
          else
          {
            v106 = v75;
            *(_OWORD *)v72 = *(_OWORD *)v73;
            *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
            v72[24] = v73[24];
            *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
            *(_OWORD *)(v72 + 40) = *(_OWORD *)(v73 + 40);
            v72[56] = v73[56];
            v80 = v74[10];
            v81 = &v72[v80];
            v82 = &v73[v80];
            *v81 = v73[v80];
            v81[1] = v73[v80 + 1];
            v83 = (int *)type metadata accessor for FeedHeadline.State(0);
            v84 = v83[6];
            __dst = &v81[v84];
            v85 = &v82[v84];
            v86 = (int *)type metadata accessor for SharedItem();
            v105 = *((_QWORD *)v86 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v105 + 48))(v85, 1, v86))
            {
              v87 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            }
            else
            {
              v88 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(__dst, v85, v88);
              __dst[v86[5]] = v85[v86[5]];
              *(_QWORD *)&__dst[v86[6]] = *(_QWORD *)&v85[v86[6]];
              v108(&__dst[v86[7]], &v85[v86[7]], v109);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v105 + 56))(__dst, 0, 1, v86);
            }
            v81[v83[7]] = v82[v83[7]];
            v81[v83[8]] = v82[v83[8]];
            v81[v83[9]] = v82[v83[9]];
            v81[v83[10]] = v82[v83[10]];
            v89 = v74[11];
            v90 = &v72[v89];
            v91 = &v73[v89];
            v92 = sub_1BB871B24();
            v93 = *(_QWORD *)(v92 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v90, v91, v92);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
            }
            v70 = v110;
            *(_OWORD *)&v72[v74[12]] = *(_OWORD *)&v73[v74[12]];
            v95 = v74[13];
            v96 = *(_QWORD *)&v73[v95];
            if (v96 == 2)
              v96 = 2;
            *(_QWORD *)&v72[v95] = v96;
            *(_QWORD *)&v72[v74[14]] = *(_QWORD *)&v73[v74[14]];
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v106 + 56))(v72, 0, 1, v74);
          }
          v97 = v70[13];
          v98 = &a1[v97];
          v99 = &a2[v97];
          v100 = type metadata accessor for WebEmbedDataVisualization();
          v101 = *(_QWORD *)(v100 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)v98 = *(_OWORD *)v99;
              v103 = type metadata accessor for GenericDataVisualization();
              v108(&v98[*(int *)(v103 + 20)], &v99[*(int *)(v103 + 20)], v109);
              *(_QWORD *)&v98[*(int *)(v103 + 24)] = *(_QWORD *)&v99[*(int *)(v103 + 24)];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v98, v99, *(_QWORD *)(v101 + 64));
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
          }
          a1[v70[14]] = a2[v70[14]];
          goto LABEL_43;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v39 = &a1[v38];
          v40 = &a2[v38];
          v41 = *(_OWORD *)&a2[v38 + 16];
          *(_OWORD *)v39 = *(_OWORD *)&a2[v38];
          *((_OWORD *)v39 + 1) = v41;
          v42 = type metadata accessor for FormatCustomItem.Resolved();
          v43 = *(int *)(v42 + 24);
          v44 = &v39[v43];
          v45 = &v40[v43];
          v46 = type metadata accessor for FormatCustomItem.Action();
          v47 = *(_QWORD *)(v46 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            v77 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v44, v45, v77);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          }
          *(_QWORD *)&v39[*(int *)(v42 + 28)] = *(_QWORD *)&v40[*(int *)(v42 + 28)];
          goto LABEL_43;
        case 0xAu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v49 = (int *)type metadata accessor for FeedEngagementBanner();
          v50 = v49[5];
          v51 = &a1[v50];
          v52 = &a2[v50];
          v53 = sub_1BB86EDAC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
          *(_QWORD *)&a1[v49[6]] = *(_QWORD *)&a2[v49[6]];
          v54 = v49[7];
          v55 = &a1[v54];
          v56 = &a2[v54];
          v55[8] = v56[8];
          *(_QWORD *)v55 = *(_QWORD *)v56;
          *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
LABEL_43:
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
          v57 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v57;
          a1[16] = a2[16];
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)&a1[v58] = *(_QWORD *)&a2[v58];
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v59 = (char *)&loc_1BAC97808 + 4 * word_1BB8AB322[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BAC98704()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1BAC98798(unint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  _QWORD *v123;
  unint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;

  v149 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v149);
  v3 = (uint64_t *)((char *)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v152 = type metadata accessor for DebugFormatVersioningModeItem();
  v4 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v139 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v146 = (char *)&v134 - v7;
  MEMORY[0x1E0C80A78](v8);
  v147 = (uint64_t)&v134 - v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v134 - v12;
  v14 = sub_1BB86EB84();
  v148 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v136 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v134 - v17;
  sub_1BA4B07F0(0, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata, v10);
  MEMORY[0x1E0C80A78](v19);
  v150 = (uint64_t)&v134 - v20;
  v21 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v145 = *(_QWORD **)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v141 = (uint64_t)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C2128 != -1)
    goto LABEL_66;
  while (1)
  {
    v23 = sub_1BAC9AC44();
    v24 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
    v138 = v23;
    v137 = v24;
    v25 = sub_1BB872E08();
    v26 = v25;
    v27 = MEMORY[0x1E0DEE9D8];
    v159 = MEMORY[0x1E0DEE9D8];
    v28 = *(_QWORD *)(v25 + 16);
    v151 = v14;
    if (!v28)
      break;
    v142 = v21;
    v143 = a1;
    v144 = v4;
    a1 = 0;
    v21 = v25 + 32;
    while (a1 < *(_QWORD *)(v26 + 16))
    {
      sub_1BA4C010C(v21, (uint64_t)&v156);
      v29 = v157;
      v4 = v158;
      __swift_project_boxed_opaque_existential_1(&v156, v157);
      sub_1BA6EDCB0(v29, v4);
      if (qword_1ED3BB468 != -1)
        swift_once();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED3B8FC8);
      sub_1BA4A2870(&qword_1ED39C378, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE8]);
      v30 = sub_1BB872958();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v18, v14);
      if ((v30 & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
      }
      else
      {
        sub_1BA4CECCC(&v156, (uint64_t)&v153);
        v31 = v159;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7ABE4(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v159;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        v4 = v33 + 1;
        if (v33 >= v32 >> 1)
        {
          sub_1BAC7ABE4(v32 > 1, v33 + 1, 1);
          v31 = v159;
        }
        *(_QWORD *)(v31 + 16) = v4;
        sub_1BA4CECCC(&v153, v31 + 40 * v33 + 32);
        v14 = v151;
      }
      ++a1;
      v21 += 40;
      if (v28 == a1)
      {
        v27 = v159;
        v4 = v144;
        v21 = v142;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_66:
    swift_once();
  }
LABEL_16:
  v142 = v27;
  v135 = v13;
  swift_bridgeObjectRelease();
  swift_retain();
  v34 = v150;
  sub_1BB86E494();
  swift_release();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v145[6])(v34, 1, v21) == 1)
  {
    sub_1BA5C699C(v34, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1530, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = *(unsigned __int8 *)(v4 + 80);
    v36 = (v35 + 32) & ~v35;
    v150 = *(_QWORD *)(v4 + 72);
    v37 = v35 | 7;
    v144 = v38;
    v39 = (char *)(v36 + v150);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
    swift_storeEnumTagMultiPayload();
    v41 = sub_1BB391AE8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v43 = v41[2];
    v42 = v41[3];
    if (v43 >= v42 >> 1)
      v41 = sub_1BB391AE8((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
    v41[2] = v43 + 1;
    v145 = v41;
    v44 = &v41[5 * v43];
    *((_OWORD *)v44 + 2) = xmmword_1BB8AB4A0;
    v44[6] = 0;
    v44[7] = 0;
    v44[8] = v40;
    v45 = (uint64_t)v39;
  }
  else
  {
    v46 = v141;
    sub_1BA5193C4(v34, v141, type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1530, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v47 = *(_QWORD *)(v4 + 72);
    v48 = *(unsigned __int8 *)(v4 + 80);
    v49 = (v48 + 32) & ~v48;
    v50 = 2 * v47;
    v143 = v48 | 7;
    v144 = v51;
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1BB87FC80;
    v53 = (_QWORD *)(v52 + v49);
    v54 = (uint64_t *)(v46 + *(int *)(v21 + 24));
    v55 = *v54;
    v56 = v54[1];
    *v53 = 0x6172422065736142;
    v53[1] = 0xEB0000000068636ELL;
    v53[2] = v55;
    v53[3] = v56;
    swift_storeEnumTagMultiPayload();
    v150 = v47;
    v57 = (char *)(v52 + v49 + v47);
    swift_bridgeObjectRetain();
    v58 = sub_1BB86EB24();
    strcpy(v57, "Format Version");
    v57[15] = -18;
    *((_QWORD *)v57 + 2) = v58;
    *((_QWORD *)v57 + 3) = v59;
    swift_storeEnumTagMultiPayload();
    v60 = v52 + v49 + v50;
    v61 = sub_1BB86EB24();
    strcpy((char *)v60, "Server Version");
    *(_BYTE *)(v60 + 15) = -18;
    *(_QWORD *)(v60 + 16) = v61;
    *(_QWORD *)(v60 + 24) = v62;
    swift_storeEnumTagMultiPayload();
    v63 = sub_1BB391AE8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v65 = v63[2];
    v64 = v63[3];
    if (v65 >= v64 >> 1)
      v63 = sub_1BB391AE8((_QWORD *)(v64 > 1), v65 + 1, 1, v63);
    v63[2] = v65 + 1;
    v145 = v63;
    v66 = &v63[5 * v65];
    *((_OWORD *)v66 + 2) = xmmword_1BB8AB4A0;
    v66[6] = 0xD000000000000056;
    v66[7] = 0x80000001BB970A60;
    v66[8] = v52;
    sub_1BA4A2E80(v141, type metadata accessor for DebugFormatFileDirectoryMetadata);
    v36 = v49;
    v14 = v151;
    v45 = v49 + v150;
    v37 = v143;
  }
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1530, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v141 = v45;
  v67 = swift_allocObject();
  v140 = xmmword_1BB87CE70;
  *(_OWORD *)(v67 + 16) = xmmword_1BB87CE70;
  v151 = type metadata accessor for FormatVersioningModeSelection(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v68 = v142;
  v69 = *(_QWORD *)(v142 + 16);
  v70 = MEMORY[0x1E0DEE9D8];
  v143 = v37;
  if (v69)
  {
    v134 = v67;
    v71 = v36;
    v159 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7ABB8(0, v69, 0);
    v72 = v68 + 32;
    v73 = v69;
    v74 = v147;
    do
    {
      sub_1BA4C010C(v72, (uint64_t)&v156);
      sub_1BA4C010C((uint64_t)&v156, (uint64_t)&v153);
      v75 = v154;
      v76 = v155;
      __swift_project_boxed_opaque_existential_1(&v153, v154);
      *v3 = sub_1BB855794(v75, v76);
      v3[1] = v77;
      v78 = v154;
      v79 = v155;
      __swift_project_boxed_opaque_existential_1(&v153, v154);
      sub_1BA6EDCB0(v78, v79);
      sub_1BA5193C4((uint64_t)v3, v74, type metadata accessor for FormatVersioningModeRelease);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
      v70 = v159;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7ABB8(0, *(_QWORD *)(v70 + 16) + 1, 1);
        v70 = v159;
      }
      v81 = *(_QWORD *)(v70 + 16);
      v80 = *(_QWORD *)(v70 + 24);
      if (v81 >= v80 >> 1)
      {
        sub_1BAC7ABB8(v80 > 1, v81 + 1, 1);
        v70 = v159;
      }
      *(_QWORD *)(v70 + 16) = v81 + 1;
      v74 = v147;
      sub_1BA5193C4(v147, v70 + v71 + v81 * v150, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
      v72 += 40;
      --v73;
    }
    while (v73);
    v36 = v71;
    v67 = v134;
  }
  *(_QWORD *)&v156 = v67;
  sub_1BB386054(v70);
  v82 = v156;
  v83 = v145;
  v85 = v145[2];
  v84 = v145[3];
  v86 = (uint64_t)v139;
  if (v85 >= v84 >> 1)
    v83 = sub_1BB391AE8((_QWORD *)(v84 > 1), v85 + 1, 1, v145);
  v83[2] = v85 + 1;
  v145 = v83;
  v87 = &v83[5 * v85];
  *((_OWORD *)v87 + 2) = xmmword_1BB8AB4B0;
  v87[6] = 0;
  v87[7] = 0;
  v87[8] = v82;
  if (qword_1ED3BB468 != -1)
    swift_once();
  v88 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED3B8FC8);
  v89 = v148;
  v90 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v136, v88, v14);
  v91 = (uint64_t)v135;
  sub_1BB86EB78();
  v92 = sub_1BB86E3A4();
  v93 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8];
  v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 48))(v91, 1, v92);
  sub_1BA5C699C(v91, (unint64_t *)&unk_1ED3C20B8, v93);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v14);
  if (v94 == 1)
  {
    swift_release();
  }
  else
  {
    v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = v140;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v96 = v142;
    if (v69)
    {
      v148 = v95;
      v97 = v36;
      v159 = MEMORY[0x1E0DEE9D8];
      sub_1BAC7ABB8(0, v69, 0);
      v98 = v96 + 32;
      v99 = (uint64_t)v146;
      do
      {
        sub_1BA4C010C(v98, (uint64_t)&v156);
        sub_1BA4C010C((uint64_t)&v156, (uint64_t)&v153);
        v100 = v154;
        v101 = v155;
        __swift_project_boxed_opaque_existential_1(&v153, v154);
        *v3 = sub_1BB855794(v100, v101);
        v3[1] = v102;
        v103 = v154;
        v104 = v155;
        __swift_project_boxed_opaque_existential_1(&v153, v154);
        sub_1BA6EDCB0(v103, v104);
        sub_1BA5193C4((uint64_t)v3, v99, type metadata accessor for FormatVersioningModeRelease);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
        v105 = v159;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7ABB8(0, *(_QWORD *)(v105 + 16) + 1, 1);
          v105 = v159;
        }
        v107 = *(_QWORD *)(v105 + 16);
        v106 = *(_QWORD *)(v105 + 24);
        v108 = (uint64_t)v146;
        if (v107 >= v106 >> 1)
        {
          sub_1BAC7ABB8(v106 > 1, v107 + 1, 1);
          v108 = (uint64_t)v146;
          v105 = v159;
        }
        *(_QWORD *)(v105 + 16) = v107 + 1;
        v109 = v105 + v97 + v107 * v150;
        v99 = v108;
        sub_1BA5193C4(v108, v109, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
        v98 += 40;
        --v69;
      }
      while (v69);
      swift_release();
      v86 = (uint64_t)v139;
      v36 = v97;
      v95 = v148;
    }
    else
    {
      swift_release();
      v105 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)&v156 = v95;
    sub_1BB386054(v105);
    v110 = v156;
    v111 = v145;
    v113 = v145[2];
    v112 = v145[3];
    if (v113 >= v112 >> 1)
      v111 = sub_1BB391AE8((_QWORD *)(v112 > 1), v113 + 1, 1, v145);
    v111[2] = v113 + 1;
    v145 = v111;
    v114 = &v111[5 * v113];
    *((_OWORD *)v114 + 2) = xmmword_1BB8AB4C0;
    v114[6] = 0xD000000000000081;
    v114[7] = 0x80000001BB970990;
    v114[8] = v110;
  }
  if (qword_1ED3C6D10 != -1)
    swift_once();
  v115 = sub_1BB872E08();
  v116 = *(_QWORD *)(v115 + 16);
  if (v116)
  {
    *(_QWORD *)&v153 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7ABB8(0, v116, 0);
    v117 = v115 + 32;
    do
    {
      sub_1BA4C010C(v117, (uint64_t)&v156);
      v118 = v157;
      v119 = v158;
      __swift_project_boxed_opaque_existential_1(&v156, v157);
      sub_1BA6EDCB0(v118, v119);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
      v120 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7ABB8(0, *(_QWORD *)(v120 + 16) + 1, 1);
        v120 = v153;
      }
      v122 = *(_QWORD *)(v120 + 16);
      v121 = *(_QWORD *)(v120 + 24);
      if (v122 >= v121 >> 1)
      {
        sub_1BAC7ABB8(v121 > 1, v122 + 1, 1);
        v120 = v153;
      }
      *(_QWORD *)(v120 + 16) = v122 + 1;
      sub_1BA5193C4(v86, v120 + v36 + v122 * v150, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
      v117 += 40;
      --v116;
    }
    while (v116);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v120 = MEMORY[0x1E0DEE9D8];
  }
  v123 = v145;
  v125 = v145[2];
  v124 = v145[3];
  if (v125 >= v124 >> 1)
    v123 = sub_1BB391AE8((_QWORD *)(v124 > 1), v125 + 1, 1, v145);
  v123[2] = v125 + 1;
  v126 = &v123[5 * v125];
  *((_OWORD *)v126 + 2) = xmmword_1BB8AB4D0;
  v126[6] = 0;
  v126[7] = 0;
  v126[8] = v120;
  v127 = v123;
  v128 = swift_allocObject();
  *(_OWORD *)(v128 + 16) = v140;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v129 = v127;
  v130 = v127[2];
  v131 = v129[3];
  if (v130 >= v131 >> 1)
    v129 = sub_1BB391AE8((_QWORD *)(v131 > 1), v130 + 1, 1, v129);
  v129[2] = v130 + 1;
  v132 = &v129[5 * v130];
  v132[4] = 0;
  v132[5] = 0;
  v132[6] = 0xD000000000000039;
  v132[7] = 0x80000001BB970A20;
  v132[8] = v128;
  return v129;
}

void sub_1BAC997F8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  objc_super v21;

  v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView];
  objc_msgSend(v6, sel_setDataSource_, v1);
  objc_msgSend(v6, sel_setDelegate_, v1);
  objc_msgSend(v6, sel_setAlwaysBounceVertical_, 1);
  v7 = objc_msgSend(v4, sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTintColor_, v7);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTableFooterView_, v8);

  type metadata accessor for SubtitleTableViewCell();
  sub_1BB873234();
  type metadata accessor for KeyValueTableViewCell();
  sub_1BB873234();
  type metadata accessor for DebugJournalTableViewCell();
  sub_1BB873234();
  v9 = objc_msgSend(v1, sel_navigationItem);
  v10 = (void *)sub_1BB872970();
  objc_msgSend(v9, sel_setTitle_, v10);

  v11 = objc_msgSend(v1, sel_navigationItem);
  sub_1BA65E330();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB8856E0;
  v13 = (void *)sub_1BB872970();
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v13);

  if (!v14)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v15 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v16 = v1;
  v17 = objc_msgSend(v15, sel_initWithImage_style_target_action_, v14, 0, v16, sel_doDismiss);

  *(_QWORD *)(v12 + 32) = v17;
  sub_1BB872DCC();
  sub_1BAAC19FC();
  v18 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setRightBarButtonItems_, v18);

  v19 = objc_msgSend(v16, sel_view);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, sel_addSubview_, v6);

    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E4B8();
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1BAC99BD8(uint64_t a1)
{
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections) = sub_1BAC98798(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_editor));
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView), sel_reloadData);
}

uint64_t type metadata accessor for DebugFormatVersioningModeViewController()
{
  return objc_opt_self();
}

unint64_t sub_1BAC99F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  char *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  char v61;
  char v62;
  uint64_t v63;
  _QWORD v64[2];

  v1 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v64 - v5;
  v7 = type metadata accessor for DebugFormatVersioningModeItem();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86CBD4();
  result = sub_1BB86CBB0();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections);
  if (v11 >= *(_QWORD *)(v13 + 16))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v14 = *(_QWORD *)(v13 + 40 * v11 + 64);
  if (result >= *(_QWORD *)(v14 + 16))
  {
LABEL_52:
    __break(1u);
    return result;
  }
  sub_1BA4C2DD8(v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v64[1] = *((_QWORD *)v10 + 2);
      type metadata accessor for KeyValueTableViewCell();
      v16 = (char *)sub_1BB87321C();
      v17 = objc_msgSend(v16, sel_textLabel);
      if (v17)
      {
        v18 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
        objc_msgSend(v17, sel_setFont_, v18);

      }
      v19 = objc_msgSend(v16, sel_textLabel);
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
        objc_msgSend(v20, sel_setTextColor_, v21);

      }
      v22 = objc_msgSend(v16, sel_textLabel);
      if (v22)
      {
        v23 = v22;
        v24 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_setText_, v24);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v47 = objc_msgSend(v16, sel_detailTextLabel);
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
        objc_msgSend(v48, sel_setFont_, v49);

      }
      v50 = objc_msgSend(v16, sel_detailTextLabel);
      if (v50)
      {
        v51 = v50;
        v52 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
        objc_msgSend(v51, sel_setTextColor_, v52);

      }
      v53 = objc_msgSend(v16, sel_detailTextLabel);
      if (v53)
      {
        v54 = v53;
        objc_msgSend(v53, sel_setNumberOfLines_, 0);

      }
      v55 = objc_msgSend(v16, sel_detailTextLabel);
      if (v55)
      {
        v56 = v55;
        v57 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
        objc_msgSend(v56, sel_setTextColor_, v57);

      }
      v58 = objc_msgSend(v16, sel_detailTextLabel);
      if (v58)
      {
        v59 = v58;
        v60 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v59, sel_setText_, v60);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v16, sel_setAccessoryType_, 0);
      objc_msgSend(v16, sel_setSelectionStyle_, 0);
    }
    else
    {
      type metadata accessor for DebugJournalTableViewCell();
      v16 = (char *)sub_1BB87321C();
      objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_activityIndicatorView], sel_startAnimating);
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v6, type metadata accessor for FormatVersioningModeSelection);
    type metadata accessor for SubtitleTableViewCell();
    v25 = (void *)sub_1BB87321C();
    v26 = objc_msgSend(v25, sel_textLabel);
    if (v26)
    {
      v27 = v26;
      v28 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
      objc_msgSend(v27, sel_setFont_, v28);

    }
    v29 = objc_msgSend(v25, sel_textLabel);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      objc_msgSend(v30, sel_setTextColor_, v31);

    }
    v32 = objc_msgSend(v25, sel_textLabel);
    if (v32)
    {
      v33 = v32;
      sub_1BAA6CAB0();
      v34 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_setText_, v34);

    }
    v35 = objc_msgSend(v25, sel_detailTextLabel);
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
      objc_msgSend(v36, sel_setFont_, v37);

    }
    v38 = objc_msgSend(v25, sel_detailTextLabel);
    if (v38)
    {
      v39 = v38;
      v40 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      objc_msgSend(v39, sel_setTextColor_, v40);

    }
    v41 = objc_msgSend(v25, sel_detailTextLabel);
    if (v41)
    {
      v42 = v41;
      objc_msgSend(v41, sel_setNumberOfLines_, 0);

    }
    v43 = objc_msgSend(v25, sel_detailTextLabel);
    if (v43)
    {
      v44 = v43;
      sub_1BAA6CF50();
      if (v45)
      {
        v46 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      else
      {
        v46 = 0;
      }
      objc_msgSend(v44, sel_setText_, v46);

    }
    v16 = v25;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    _s8NewsFeed29FormatVersioningModeSelectionO2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v3);
    v62 = v61;
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FormatVersioningModeSelection);
    if ((v62 & 1) != 0)
      v63 = 3;
    else
      v63 = 0;
    objc_msgSend(v16, sel_setAccessoryType_, v63);

    objc_msgSend(v16, sel_setSelectionStyle_, 3);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersioningModeSelection);
  }
  return (unint64_t)v16;
}

unint64_t sub_1BAC9A7C8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  v12 = type metadata accessor for DebugFormatVersioningModeItem();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86CBD4();
  result = sub_1BB86CBB0();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections);
  if (v16 >= *(_QWORD *)(v18 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v19 = *(_QWORD *)(v18 + 40 * v16 + 64);
  if (result >= *(_QWORD *)(v19 + 16))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1BA4C2DD8(v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * result, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v11, type metadata accessor for FormatVersioningModeSelection);
    sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, type metadata accessor for FormatVersioningModeSelection);
    sub_1BA4C2DD8((uint64_t)v8, (uint64_t)v5, type metadata accessor for FormatVersioningModeSelection);
    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersioningModeSelection);
    objc_msgSend(a1, sel_reloadData);
    return sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersioningModeSelection);
  }
  return result;
}

id sub_1BAC9AA9C(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController__currentMode;
  if (qword_1EF2A6CB8 != -1)
    swift_once();
  sub_1BAC9ABCC();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)&v6[v7] = sub_1BB86D2F4();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_editor] = a1;
  v8 = swift_retain();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_sections] = sub_1BAC98798(v8);

  v10.receiver = v6;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

void sub_1BAC9ABCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B19A8)
  {
    type metadata accessor for FormatVersioningModeSelection(255);
    sub_1BA4A2870((unint64_t *)&unk_1EF2B19B0, type metadata accessor for FormatVersioningModeSelection, (uint64_t)&protocol conformance descriptor for FormatVersioningModeSelection);
    v0 = sub_1BB86D2E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B19A8);
  }
}

unint64_t sub_1BAC9AC44()
{
  unint64_t result;

  result = qword_1ED3C69C0;
  if (!qword_1ED3C69C0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3C69C0);
  }
  return result;
}

void sub_1BAC9AC98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController_tableView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed39DebugFormatVersioningModeViewController__currentMode;
  if (qword_1EF2A6CB8 != -1)
    swift_once();
  sub_1BAC9ABCC();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)&v1[v3] = sub_1BB86D2F4();

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FeedBannerAdViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t FeedBannerAdViewLayout.bannerAdViewLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FeedBannerAdViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t result;
  _OWORD v9[2];
  char v10;

  sub_1BA62E998();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v9, 0, sizeof(v9));
  v10 = 1;
  sub_1BA62D774(0, (unint64_t *)&qword_1ED3B0628, type metadata accessor for CGRect, (void (*)(void))sub_1BAC9AEB8);
  swift_allocObject();
  v5 = sub_1BB86D450();
  v6 = sub_1BB8720A0();
  v7 = (void (*)(uint64_t))MEMORY[0x1E0D535B0];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1BA62D774(0, &qword_1ED3B05F0, v7, (void (*)(void))sub_1BA83F380);
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v5;
  a1[1] = result;
  return result;
}

uint64_t sub_1BAC9AEB8()
{
  return sub_1BA4A2870(&qword_1ED3B9908, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0DB6508]);
}

double FeedBannerAdViewLayout.Attributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t FeedBannerAdViewLayout.Attributes.bannerAdViewLayoutAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedBannerAdViewLayout.Attributes(0) + 20);
  v4 = sub_1BB8720A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BAC9AF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAC9BAA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAC9AF4C()
{
  sub_1BA62E954();
  return sub_1BB874710();
}

uint64_t sub_1BAC9AF74()
{
  sub_1BA62E954();
  return sub_1BB87471C();
}

uint64_t FeedBannerAdViewLayout.Attributes.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B19C8, (uint64_t (*)(void))sub_1BA62E954, (uint64_t)&type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62E954();
  sub_1BB8746C8();
  v10 = v3[1];
  v12[0] = *v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
    LOBYTE(v12[0]) = 1;
    sub_1BB8720A0();
    sub_1BA4A2870(&qword_1EF2B19D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D535B0], MEMORY[0x1E0D535C0]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAC9B148()
{
  sub_1BA4A2870(&qword_1EF2B1A10, type metadata accessor for FeedBannerAdViewLayout.Attributes, (uint64_t)&protocol conformance descriptor for FeedBannerAdViewLayout.Attributes);
  return sub_1BB870FF0();
}

uint64_t sub_1BAC9B188(_QWORD *a1)
{
  return FeedBannerAdViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1BAC9B19C()
{
  sub_1BA4A2870(&qword_1ED3B1FE0, type metadata accessor for FeedBannerAdViewLayout.Attributes, (uint64_t)&protocol conformance descriptor for FeedBannerAdViewLayout.Attributes);
  return sub_1BB86D96C();
}

uint64_t FeedBannerAdViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA7353AC(v1, a1);
}

uint64_t sub_1BAC9B228()
{
  return sub_1BA4A2870(qword_1EF2B19D8, type metadata accessor for FeedBannerAdViewLayout.Attributes, (uint64_t)&protocol conformance descriptor for FeedBannerAdViewLayout.Attributes);
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedBannerAdViewLayout.Attributes(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1BB8720A0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FeedBannerAdViewLayout.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1BB8720A0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *initializeWithCopy for FeedBannerAdViewLayout.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB8720A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for FeedBannerAdViewLayout.Attributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB8720A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for FeedBannerAdViewLayout.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB8720A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_OWORD *assignWithTake for FeedBannerAdViewLayout.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB8720A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedBannerAdViewLayout.Attributes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAC9B4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1BB8720A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdViewLayout.Attributes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAC9B4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1BB8720A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedBannerAdViewLayout.Context(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for FeedBannerAd();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB8721C0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    v13 = v6[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = v6[8];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    if (v19 >= 0x11)
    {
      *v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

_QWORD *assignWithCopy for FeedBannerAdViewLayout.Context(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FeedBannerAd();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  v9 = v4[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = v11[8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v12;
  v13 = v4[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a1 + v13 + 8);
  v17 = v15[1];
  if (v16 >= 0x11)
  {
    if (v17 >= 0x11)
    {
      *v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v14);
    goto LABEL_6;
  }
  if (v17 < 0x11)
  {
LABEL_6:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    return a1;
  }
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for FeedBannerAdViewLayout.Context(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for FeedBannerAd();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  v9 = v4[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v10[8] = v11[8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_OWORD *)((char *)a1 + v4[8]) = *(_OWORD *)((char *)a2 + v4[8]);
  return a1;
}

_QWORD *assignWithTake for FeedBannerAdViewLayout.Context(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for FeedBannerAd();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8721C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  v10 = v5[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v13 = v5[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  if (*(_QWORD *)((char *)a1 + v13 + 8) >= 0x11uLL)
  {
    v16 = v15[1];
    if (v16 >= 0x11)
    {
      *v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v14);
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedBannerAdViewLayout.Context()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAC9B908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedBannerAd();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdViewLayout.Context()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAC9B950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedBannerAd();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdViewLayout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAC9B9DC + 4 * byte_1BB8AB525[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAC9BA10 + 4 * asc_1BB8AB520[v4]))();
}

uint64_t sub_1BAC9BA10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC9BA18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAC9BA20);
  return result;
}

uint64_t sub_1BAC9BA2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAC9BA34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAC9BA38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAC9BA40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedBannerAdViewLayout.Attributes.CodingKeys()
{
  return &type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1BAC9BA60()
{
  unint64_t result;

  result = qword_1EF2B1A08;
  if (!qword_1EF2B1A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AB7C4, &type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A08);
  }
  return result;
}

uint64_t sub_1BAC9BAA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001BB970B40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAC9BB8C(_QWORD *a1)
{
  return FormatBundleImageSize.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatBundleImageSizeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      sub_1BA76F534(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 0);
      sub_1BA76F534(v3, v2, 0);
      sub_1BA76F534(v3, v2, 0);
      sub_1BA76F534(v6, v5, 0);
      v8 = sub_1BA881EAC(v3, v6);
      sub_1BA76F57C(v3, v2, 0);
      sub_1BA76F57C(v6, v5, 0);
      sub_1BA76F57C(v6, v5, 0);
      v9 = v3;
      v10 = v2;
      v11 = 0;
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
    {
      sub_1BA76F534(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 1u);
      sub_1BA76F534(v3, v2, 1u);
      sub_1BA76F534(v3, v2, 1u);
      sub_1BA76F534(v6, v5, 1u);
      LOBYTE(v8) = sub_1BA881EAC(v3, v6);
      sub_1BA76F57C(v3, v2, 1u);
      sub_1BA76F57C(v6, v5, 1u);
      sub_1BA76F57C(v6, v5, 1u);
      v9 = v3;
      v10 = v2;
      v11 = 1;
LABEL_7:
      sub_1BA76F57C(v9, v10, v11);
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (v7 != 2)
  {
LABEL_12:
    sub_1BA76F534(*(_QWORD *)a1, v2, v4);
    sub_1BA76F534(v6, v5, v7);
    sub_1BA76F57C(v3, v2, v4);
    v15 = v6;
    v16 = v5;
    v17 = v7;
LABEL_13:
    sub_1BA76F57C(v15, v16, v17);
    return 0;
  }
  sub_1BA76F534(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 2u);
  sub_1BA76F534(v3, v2, 2u);
  sub_1BA76F534(v3, v2, 2u);
  sub_1BA76F534(v6, v5, 2u);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA881EAC(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    sub_1BA76F57C(v3, v2, 2u);
    sub_1BA76F57C(v6, v5, 2u);
    sub_1BA76F57C(v6, v5, 2u);
    v15 = v3;
    v16 = v2;
    v17 = 2;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA881EAC(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76F57C(v3, v2, 2u);
  sub_1BA76F57C(v6, v5, 2u);
  sub_1BA76F57C(v6, v5, 2u);
  sub_1BA76F57C(v3, v2, 2u);
  return (v14 & 1) != 0;
}

unint64_t sub_1BAC9BE98(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAC9BEBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAC9BEBC()
{
  unint64_t result;

  result = qword_1EF2B1A18;
  if (!qword_1EF2B1A18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImageSize, &type metadata for FormatBundleImageSize);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A18);
  }
  return result;
}

unint64_t sub_1BAC9BF00(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5251B8();
  a1[2] = sub_1BAC9BF34();
  result = sub_1BAC9BF78();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAC9BF34()
{
  unint64_t result;

  result = qword_1ED39B748;
  if (!qword_1ED39B748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImageSize, &type metadata for FormatBundleImageSize);
    atomic_store(result, (unint64_t *)&qword_1ED39B748);
  }
  return result;
}

unint64_t sub_1BAC9BF78()
{
  unint64_t result;

  result = qword_1EF2B1A20;
  if (!qword_1EF2B1A20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImageSize, &type metadata for FormatBundleImageSize);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A20);
  }
  return result;
}

uint64_t destroy for FormatBundleImageSize(uint64_t a1)
{
  return sub_1BA76F57C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed21FormatBundleImageSizeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA76F534(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatBundleImageSize(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA76F534(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA76F57C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatBundleImageSize(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA76F57C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBundleImageSize()
{
  return &type metadata for FormatBundleImageSize;
}

void LayeredMediaViewOptions.init(nativeScreenSize:boundingSize:scale:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
}

double LayeredMediaViewOptions.nativeScreenSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double LayeredMediaViewOptions.boundingSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double LayeredMediaViewOptions.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

BOOL _s8NewsFeed23LayeredMediaViewOptionsV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t getEnumTagSinglePayload for FormatMotion.TranslateWithScale(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FormatMotion.TranslateWithScale(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaViewOptions()
{
  return &type metadata for LayeredMediaViewOptions;
}

uint64_t sub_1BAC9C19C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A0D4(0, v1, 0);
  v2 = v23;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v20 = v1;
  v21 = v5;
  v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + (v6 << 6) + 16);
    v13 = *(_QWORD *)(v23 + 16);
    v14 = *(_QWORD *)(v23 + 24);
    result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1)
      result = sub_1BAC7A0D4(v14 > 1, v13 + 1, 1);
    *(_QWORD *)(v23 + 16) = v13 + 1;
    *(_QWORD *)(v23 + 8 * v13 + 32) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21)
      goto LABEL_27;
    v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v20;
    }
    else
    {
      v17 = v11 + 1;
      v18 = (unint64_t)(v9 + 63) >> 6;
      v10 = v20;
      if (v11 + 1 < v18)
      {
        v19 = *(_QWORD *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            v19 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BAC9C39C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[11];
  uint64_t v31;

  v23 = (uint64_t (*)(_QWORD *))result;
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v3 = 0;
    v4 = (uint64_t *)(a3 + 56);
    v5 = MEMORY[0x1E0DEE9D8];
    v21 = a3;
    while (v3 < *(_QWORD *)(a3 + 16))
    {
      v24 = v3;
      v6 = *(v4 - 3);
      v7 = *(v4 - 2);
      v8 = *(v4 - 1);
      v9 = *v4;
      v10 = v4[1];
      v11 = v4[2];
      v12 = v4[3];
      v13 = v4[4];
      v14 = v4[5];
      v15 = v4[6];
      v30[0] = v6;
      v30[1] = v7;
      v30[2] = v8;
      v30[3] = v9;
      v30[4] = v10;
      v30[5] = v11;
      v30[6] = v12;
      v30[7] = v13;
      v30[8] = v14;
      v30[9] = v15;
      v25 = v10;
      v26 = v11;
      v27 = v12;
      v28 = v13;
      sub_1BA6D78DC();
      v16 = v23(v30);
      if (v29)
      {
        sub_1BA7F4208();
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      v29 = 0;
      if ((v16 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v31 = v5;
        if ((result & 1) == 0)
        {
          result = sub_1BAC79ED4(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v31;
        }
        v18 = *(_QWORD *)(v5 + 16);
        v17 = *(_QWORD *)(v5 + 24);
        v19 = v18 + 1;
        if (v18 >= v17 >> 1)
        {
          result = sub_1BAC79ED4(v17 > 1, v18 + 1, 1);
          v19 = v18 + 1;
          v5 = v31;
        }
        *(_QWORD *)(v5 + 16) = v19;
        v20 = (_QWORD *)(v5 + 80 * v18);
        v20[4] = v6;
        v20[5] = v7;
        v20[6] = v8;
        v20[7] = v9;
        v20[8] = v25;
        v20[9] = v26;
        v20[10] = v27;
        v20[11] = v28;
        v20[12] = v14;
        v20[13] = v15;
      }
      else
      {
        result = sub_1BA7F4208();
      }
      v3 = v24 + 1;
      v4 += 10;
      a3 = v21;
      if (v22 == v24 + 1)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void sub_1BAC9C5B0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, type metadata accessor for FormatService.ThemePackage, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7A01C);
}

void sub_1BAC9C5D4(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1BAC9C804(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB4DC8], (void (*)(BOOL, uint64_t, uint64_t))sub_1BA790A6C);
}

uint64_t sub_1BAC9C5F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(__int128 *);
  unint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(__int128 *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v14 = *(_OWORD *)(a3 + 16 * v7 + 32);
      v13 = v14;
      swift_unknownObjectRetain();
      v9 = *((id *)&v13 + 1);
      v10 = v6(&v14);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        return v8;
      }
      if ((v10 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v15 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1BAC7A4F8(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v15;
        }
        v12 = *(_QWORD *)(v8 + 16);
        v11 = *(_QWORD *)(v8 + 24);
        if (v12 >= v11 >> 1)
        {
          result = sub_1BAC7A4F8(v11 > 1, v12 + 1, 1);
          v8 = v15;
        }
        *(_QWORD *)(v8 + 16) = v12 + 1;
        *(_OWORD *)(v8 + 16 * v12 + 32) = v13;
      }
      else
      {

        result = swift_unknownObjectRelease();
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void sub_1BAC9C774(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7A8F0);
}

void sub_1BAC9C798(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7AC18);
}

void sub_1BAC9C7BC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, type metadata accessor for FeedItem, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7AD0C);
}

void sub_1BAC9C7E0(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1BAC9C804(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D52F40], (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7AF7C);
}

void sub_1BAC9C804(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a5;
  v29 = a4(0);
  v9 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - v13;
  v30 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a3 + 16);
  if (v27)
  {
    v15 = 0;
    v24 = a2;
    v25 = a3;
    v23 = a1;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v17 = *(_QWORD *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v14, a3 + v16 + v17 * v15, v29, v12);
      v18 = a1(v14);
      if (v5)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v29);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if ((v18 & 1) != 0)
      {
        v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v26(v28, v14, v29);
        v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v22(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v19 = v30;
        }
        v21 = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v19 = v30;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        v26((char *)(v19 + v16 + v21 * v17), v28, v29);
        v30 = v19;
        a3 = v25;
        a1 = v23;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v29);
      }
      if (v27 == ++v15)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

void sub_1BAC9CA20(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BAC9CBE0(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAC87DF0, (void (*)(BOOL, uint64_t, uint64_t))sub_1BAC7B240);
}

unint64_t sub_1BAC9CA44(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(_QWORD *);
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v4 = a3;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 48);
    v8 = MEMORY[0x1E0DEE9D8];
    v16 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 2);
      v9 = *(v7 - 1);
      v11 = *v7;
      v19[0] = v10;
      v19[1] = v9;
      v19[2] = v11;
      swift_bridgeObjectRetain();
      sub_1BA67035C(v9);
      v12 = v5(v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_1BA5B18CC(v9);
        swift_release();
        goto LABEL_15;
      }
      if ((v12 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v20 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1BAC7B2D0(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v20;
        }
        v14 = *(_QWORD *)(v8 + 16);
        v13 = *(_QWORD *)(v8 + 24);
        if (v14 >= v13 >> 1)
        {
          result = sub_1BAC7B2D0(v13 > 1, v14 + 1, 1);
          v8 = v20;
        }
        *(_QWORD *)(v8 + 16) = v14 + 1;
        v15 = (_QWORD *)(v8 + 24 * v14);
        v15[4] = v10;
        v15[5] = v9;
        v15[6] = v11;
        v4 = a3;
        v5 = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        result = sub_1BA5B18CC(v9);
      }
      ++v6;
      v7 += 3;
      if (v18 == v6)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void sub_1BAC9CBE0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(BOOL, uint64_t, uint64_t);
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  uint64_t v27;
  uint64_t v28;

  v20 = a5;
  v6 = a4;
  v26 = a1;
  v27 = a2;
  v8 = a4(0);
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v24 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v28 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(a3 + 16);
  if (v23)
  {
    v13 = 0;
    v14 = MEMORY[0x1E0DEE9D8];
    v21 = v6;
    v22 = a3;
    while (v13 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v16 = *(_QWORD *)(v25 + 72);
      sub_1BA4C2DD8(a3 + v15 + v16 * v13, (uint64_t)v12, v6);
      v17 = v26(v12);
      if (v5)
      {
        sub_1BA4A2E80((uint64_t)v12, v6);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if ((v17 & 1) != 0)
      {
        sub_1BA5193C4((uint64_t)v12, v24, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v28;
        v19 = *(_QWORD *)(v28 + 16);
        v18 = *(_QWORD *)(v28 + 24);
        if (v19 >= v18 >> 1)
        {
          v20(v18 > 1, v19 + 1, 1);
          v14 = v28;
        }
        *(_QWORD *)(v14 + 16) = v19 + 1;
        v6 = v21;
        sub_1BA5193C4(v24, v14 + v15 + v19 * v16, v21);
        a3 = v22;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v12, v6);
      }
      if (v23 == ++v13)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC9CDF0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *);
  _QWORD v20[3];
  char v21;
  uint64_t v22;

  v4 = a3;
  v19 = (uint64_t (*)(_QWORD *))result;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v5 = 0;
    v6 = (_BYTE *)(a3 + 56);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v9 = *((_QWORD *)v6 - 3);
      v8 = *((_QWORD *)v6 - 2);
      v10 = *((_QWORD *)v6 - 1);
      v11 = *v6;
      v20[0] = v9;
      v20[1] = v8;
      v20[2] = v10;
      v21 = v11;
      swift_bridgeObjectRetain();
      v12 = v19(v20);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v12 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v22 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1BAC7B578(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v22;
        }
        v14 = *(_QWORD *)(v7 + 16);
        v13 = *(_QWORD *)(v7 + 24);
        v15 = v14 + 1;
        if (v14 >= v13 >> 1)
        {
          result = sub_1BAC7B578(v13 > 1, v14 + 1, 1);
          v15 = v14 + 1;
          v7 = v22;
        }
        *(_QWORD *)(v7 + 16) = v15;
        v16 = v7 + 32 * v14;
        *(_QWORD *)(v16 + 32) = v9;
        *(_QWORD *)(v16 + 40) = v8;
        *(_QWORD *)(v16 + 48) = v10;
        *(_BYTE *)(v16 + 56) = v11;
        v4 = a3;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 32;
      if (v18 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

Swift::Int __swiftcall GroupLayoutBindingContext.count(for:)(NewsFeed::FeedItemTraits a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int result;
  int64_t v8;
  Swift::Int v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v2 = *(_QWORD *)a1.rawValue;
  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 56));
  v23 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v24 = (unint64_t)(v4 + 63) >> 6;
  v25 = v3;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  v9 = 0;
  while (v6)
  {
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v11 = v10 | (v8 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v11);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v26 = v8;
      v17 = v15 + 32;
      swift_bridgeObjectRetain();
      v18 = 0;
      do
      {
        sub_1BA4C010C(v17, (uint64_t)v28);
        v19 = v29;
        v20 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        result = (Swift::Int)(*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 24))(&v27, v19, v20);
        v21 = (v2 & ~v27) == 0;
        v22 = __OFADD__(v18, v21);
        v18 += v21;
        if (v22)
        {
          __break(1u);
          goto LABEL_33;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        v17 += 40;
        --v16;
      }
      while (v16);
      result = swift_bridgeObjectRelease();
      v8 = v26;
      v22 = __OFADD__(v9, v18);
      v9 += v18;
      if (!v22)
        continue;
      __break(1u);
LABEL_31:
      swift_release();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v12 >= v24)
    goto LABEL_31;
  v13 = *(_QWORD *)(v23 + 8 * v12);
  ++v8;
  if (v13)
    goto LABEL_23;
  v8 = v12 + 1;
  if (v12 + 1 >= v24)
    goto LABEL_31;
  v13 = *(_QWORD *)(v23 + 8 * v8);
  if (v13)
    goto LABEL_23;
  v8 = v12 + 2;
  if (v12 + 2 >= v24)
    goto LABEL_31;
  v13 = *(_QWORD *)(v23 + 8 * v8);
  if (v13)
    goto LABEL_23;
  v8 = v12 + 3;
  if (v12 + 3 >= v24)
    goto LABEL_31;
  v13 = *(_QWORD *)(v23 + 8 * v8);
  if (v13)
    goto LABEL_23;
  v8 = v12 + 4;
  if (v12 + 4 >= v24)
    goto LABEL_31;
  v13 = *(_QWORD *)(v23 + 8 * v8);
  if (v13)
  {
LABEL_23:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_24;
  }
  v14 = v12 + 5;
  if (v14 >= v24)
    goto LABEL_31;
  v13 = *(_QWORD *)(v23 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v24)
      goto LABEL_31;
    v13 = *(_QWORD *)(v23 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t GroupLayoutBindingContext.unbindAll<A>(_:name:sortedBy:withTraits:slotIdentifier:peekBinding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  _QWORD *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v11 = v10;
  v40 = *a5;
  v41 = (_QWORD *)a4;
  swift_bridgeObjectRetain();
  sub_1BAB25C5C(a2, a3, &v42);
  v15 = v42;
  v16 = v43;
  v18 = v44;
  v17 = v45;
  v19 = type metadata accessor for GroupLayoutBindingContext();
  if (!*(_QWORD *)(*(_QWORD *)&v11[*(int *)(v19 + 56)] + 16))
    goto LABEL_8;
  v20 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = v18;
  sub_1BA6A8790(v15, v16, v18, v17);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v38 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = sub_1BA7C2A4C();
  v23 = sub_1BB873FD8();
  v24 = swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BB872E68();
  }
  v35[2] = v22;
  v36 = v15;
  v37 = v35;
  v42 = v23;
  MEMORY[0x1E0C80A78](v24);
  v25 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  v26 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v25);
  v40 = v25;
  v35[1] = v26;
  v27 = sub_1BB873DA4();
  v28 = sub_1BACA46B0((uint64_t)v41, v11, v27);
  result = swift_bridgeObjectRelease();
  v30 = *(_QWORD *)&v11[*(int *)(v20 + 72)];
  v31 = *(_QWORD *)&v11[*(int *)(v20 + 76)];
  if (!__OFSUB__(v30, v31))
  {
    v32 = sub_1BACA4708(v28, v30 - v31, a9, a10);
    v33 = swift_bridgeObjectRelease();
    v41 = v35;
    v42 = v23;
    MEMORY[0x1E0C80A78](v33);
    swift_bridgeObjectRetain();
    sub_1BB873DA4();
    v42 = v36;
    v43 = v16;
    v44 = v39;
    v45 = v17;
    swift_bridgeObjectRelease();
    v34 = sub_1BB873E28();
    swift_bridgeObjectRelease();
    sub_1BA6AB5A4(&v42, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v32;
  }
  __break(1u);
  return result;
}

uint64_t GroupLayoutBindingContext.unbind<A, B>(_:ofType:name:sortedBy:withTraits:slotIdentifier:peekBinding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v15 = v14;
  v16 = v13;
  v58 = a7;
  v59 = a8;
  v55 = a5;
  v19 = a12;
  v60 = *a6;
  v61 = a1;
  swift_bridgeObjectRetain();
  v56 = a12;
  sub_1BAB25C5C(a3, a4, &v64);
  v20 = v65;
  v62 = v64;
  v63 = v66;
  v68 = v67;
  v21 = type metadata accessor for GroupLayoutBindingContext();
  v22 = *(int *)(v21 + 56);
  v57 = v16;
  if (!*(_QWORD *)(*(_QWORD *)&v16[v22] + 16))
    goto LABEL_10;
  v19 = v21;
  v23 = v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6A8790(v62, v20, v63, v23);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = sub_1BA7C2A4C();
  v26 = sub_1BB873FD8();
  v27 = swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_10:
    v64 = 0;
    if ((sub_1BB872CAC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1BB872E68();
    }
    result = sub_1BB872CA0();
    v42 = v60;
    if (!*(_QWORD *)(result + 16))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_13:
    v43 = *(_QWORD *)(result + 32);
    swift_bridgeObjectRelease();
    sub_1BA7C5828();
    swift_allocError();
    *(_QWORD *)v44 = v62;
    *(_QWORD *)(v44 + 8) = v20;
    v45 = v68;
    *(_QWORD *)(v44 + 16) = v63;
    *(_QWORD *)(v44 + 24) = v45;
    *(_QWORD *)(v44 + 32) = v42;
    *(_QWORD *)(v44 + 40) = v43;
    v46 = v59;
    *(_QWORD *)(v44 + 48) = v58;
    *(_QWORD *)(v44 + 56) = v46;
    *(_BYTE *)(v44 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v19;
  }
  v49 = v25;
  v52 = &v49;
  v53 = v20;
  v64 = v26;
  MEMORY[0x1E0C80A78](v27);
  v54 = v15;
  v28 = v56;
  v29 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v29);
  v30 = v54;
  v31 = sub_1BB873DA4();
  v32 = v55;
  v33 = v57;
  v52 = (_QWORD *)a11;
  v54 = v30;
  v55 = a13;
  v34 = sub_1BACA46B0(v32, v57, v31);
  result = swift_bridgeObjectRelease();
  v36 = *(_QWORD *)&v33[*(int *)(v19 + 72)];
  v37 = *(_QWORD *)&v33[*(int *)(v19 + 76)];
  if (!__OFSUB__(v36, v37))
  {
    v50 = a9;
    v51 = v34;
    v38 = sub_1BACA4708(v34, v36 - v37, a10, v28);
    v39 = v61;
    v40 = (uint64_t)v52;
    v19 = sub_1BACA48AC(v61, v38, v26, a10, (uint64_t)v52, v28, v55);
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      v64 = v62;
      v65 = v53;
      v66 = v63;
      v67 = v68;
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
      }
      v41 = sub_1BB873E28();
      swift_bridgeObjectRelease();
      sub_1BA6AB5A4(&v64, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return v19;
    }
    v47 = v50;
    v19 = sub_1BACA48AC(v39, v51, v26, a10, v40, v28, v55);
    swift_bridgeObjectRelease();
    v20 = v53;
    if (v19)
    {
      v64 = v62;
      v65 = v53;
      v66 = v63;
      v67 = v68;
      if ((v47 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
      }
      v48 = sub_1BB873E28();
      swift_bridgeObjectRelease();
      sub_1BA6AB5A4(&v64, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    result = sub_1BB872CA0();
    v42 = v60;
    if (!*(_QWORD *)(result + 16))
    {
      __break(1u);
      goto LABEL_22;
    }
    goto LABEL_13;
  }
LABEL_23:
  __break(1u);
  return result;
}

_QWORD *GroupLayoutBindingContext.unbind<A>(_:name:sortedBy:withTraits:requireTraitsWhenMatching:slotIdentifier:peekBinding:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, char a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v12 = v11;
  v67 = a7;
  v62 = a6;
  v54 = a5;
  v55 = a3;
  v53 = a8;
  v16 = sub_1BB873A2C();
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  MEMORY[0x1E0C80A78](v16);
  v56 = (uint64_t)&v49 - v17;
  v61 = *a4;
  swift_bridgeObjectRetain();
  v57 = a11;
  sub_1BAB25C5C(a1, a2, &v63);
  v19 = v63;
  v18 = v64;
  v21 = v65;
  v20 = v66;
  v22 = type metadata accessor for GroupLayoutBindingContext();
  v23 = *(_QWORD *)(v12 + *(int *)(v22 + 56));
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_9;
  v24 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = v19;
  v59 = v21;
  v25 = sub_1BA6A8790(v19, v18, v21, v20);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v27 + 16))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    v19 = v58;
    v21 = v59;
LABEL_9:
    sub_1BA7C5828();
    swift_allocError();
    *(_QWORD *)v30 = v19;
    *(_QWORD *)(v30 + 8) = v18;
    *(_QWORD *)(v30 + 16) = v21;
    goto LABEL_10;
  }
  v28 = v60;
  sub_1BA6ABE54(v27, v62, v67);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  v60 = v12;
  sub_1BA7C2A4C();
  v33 = sub_1BB873FD8();
  swift_bridgeObjectRelease();
  if (!v33)
  {
    swift_bridgeObjectRelease();
    v37 = v61;
    goto LABEL_17;
  }
  v34 = v33;
  v63 = v33;
  v35 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v35);
  v36 = sub_1BB873168();
  v37 = v61;
  if ((v36 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_17:
    sub_1BA7C5828();
    swift_allocError();
    *(_QWORD *)v30 = v58;
    *(_QWORD *)(v30 + 8) = v18;
    *(_QWORD *)(v30 + 16) = v59;
    *(_QWORD *)(v30 + 24) = v20;
    *(_QWORD *)(v30 + 32) = v37;
    goto LABEL_11;
  }
  v50 = v27;
  v63 = v61;
  v38 = v56;
  v39 = v57;
  sub_1BACA42C4(v34, v55, &v63, v54 & 1, a10, v57, v56);
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(a10 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, a10) != 1)
  {
    v41 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v53, v38, a10);
    result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 24))(&v63, a10, v39);
    if ((v63 & 0x1000) != 0)
    {
      v42 = *(int *)(v24 + 76);
      v43 = *(_QWORD *)(v60 + v42);
      v44 = __OFADD__(v43, 1);
      v45 = v43 + 1;
      if (v44)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v60 + v42) = v45;
    }
    if ((a9 & 1) != 0)
    {
      v47 = v58;
      v46 = v59;
      v48 = v50;
    }
    else
    {
      MEMORY[0x1E0C80A78](result);
      *(&v49 - 4) = a10;
      *(&v49 - 3) = v39;
      *(&v49 - 2) = v41;
      v48 = sub_1BA6AB7E4((uint64_t)sub_1BACA6024, (uint64_t)(&v49 - 6), v50);
      v47 = v58;
      v46 = v59;
    }
    v63 = v47;
    v64 = v18;
    v65 = v46;
    v66 = v20;
    sub_1BA6AB5A4(&v63, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v38, v52);
  sub_1BA7C5828();
  swift_allocError();
  *(_QWORD *)v30 = v58;
  *(_QWORD *)(v30 + 8) = v18;
  *(_QWORD *)(v30 + 16) = v59;
LABEL_10:
  v31 = v61;
  *(_QWORD *)(v30 + 24) = v20;
  *(_QWORD *)(v30 + 32) = v31;
LABEL_11:
  *(_QWORD *)(v30 + 40) = 1;
  v32 = v67;
  *(_QWORD *)(v30 + 48) = v62;
  *(_QWORD *)(v30 + 56) = v32;
  *(_BYTE *)(v30 + 64) = 0;
  swift_bridgeObjectRetain();
  return (_QWORD *)swift_willThrow();
}

uint64_t sub_1BAC9DE64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1BA6AA10C(0, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  v39 = v3;
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FeedBannerAd();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v11 + 16);
  if (v32)
  {
    v31 = v11 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 0;
    v29 = v11;
    while (v12 < *(_QWORD *)(v11 + 16))
    {
      v36 = v12;
      v14 = v31 + 16 * v12;
      v15 = *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))v14;
      v16 = *(_QWORD *)(v14 + 8);
      swift_retain_n();
      v17 = swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1BACAC3F0(v17, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, &qword_1EF2B12E0);
      swift_bridgeObjectRelease();
      v40 = v18;
      sub_1BACB0D60(&v40, v15, v16);
      v35 = v13;
      if (v13)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v40;
      v20 = v40[2];
      if (v20)
      {
        v34 = v16;
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1BA6AD168(0, v20, 0);
        v21 = *(unsigned __int8 *)(v30 + 80);
        v33 = v19;
        v22 = (uint64_t)v19 + ((v21 + 32) & ~v21);
        v23 = *(_QWORD *)(v30 + 72);
        a1 = v40;
        do
        {
          sub_1BA6AA01C(v22, (uint64_t)v7, (uint64_t)&qword_1ED3B9708, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v24 = *(int *)(v39 + 48);
          v25 = (uint64_t)&v38[v24];
          sub_1BA4C2DD8((uint64_t)&v7[v24], (uint64_t)&v38[v24], (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
          sub_1BA5193C4(v25, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
          sub_1BA6AA068((uint64_t)v7, (uint64_t)&qword_1ED3B9708, (uint64_t)type metadata accessor for FeedBannerAd, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BA6AD168(0, a1[2] + 1, 1);
            a1 = v40;
          }
          v27 = a1[2];
          v26 = a1[3];
          if (v27 >= v26 >> 1)
          {
            sub_1BA6AD168(v26 > 1, v27 + 1, 1);
            a1 = v40;
          }
          a1[2] = v27 + 1;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)a1+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_release();
        swift_release();
        v11 = v29;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v13 = v35;
      v12 = v36 + 1;
      if (v36 + 1 == v32)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BAC9E1E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t i;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE v33[145];
  uint64_t v34;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v31 = *(_QWORD *)(v3 + 16);
  if (v31)
  {
    v30 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v29 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = *(_OWORD *)(v30 + 16 * v4);
      swift_retain();
      swift_retain();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BACABA64(v6);
      swift_bridgeObjectRelease();
      *(_QWORD *)v33 = v7;
      sub_1BACB5558((uint64_t *)v33, (uint64_t)sub_1BACB3860, v5, (uint64_t (*)(uint64_t))sub_1BACAB848, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BACAEB5C);
      swift_release();
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)v33;
      v9 = *(_QWORD *)(*(_QWORD *)v33 + 16);
      if (v9)
      {
        v32 = v4;
        v34 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7A3BC(0, v9, 0);
        a1 = v34;
        v10 = v9 - 1;
        for (i = 32; ; i += 152)
        {
          v12 = *(_OWORD *)(v8 + i + 16);
          *(_OWORD *)v33 = *(_OWORD *)(v8 + i);
          *(_OWORD *)&v33[16] = v12;
          v13 = *(_OWORD *)(v8 + i + 32);
          v14 = *(_OWORD *)(v8 + i + 48);
          v15 = *(_OWORD *)(v8 + i + 80);
          *(_OWORD *)&v33[64] = *(_OWORD *)(v8 + i + 64);
          *(_OWORD *)&v33[80] = v15;
          *(_OWORD *)&v33[32] = v13;
          *(_OWORD *)&v33[48] = v14;
          v16 = *(_OWORD *)(v8 + i + 96);
          v17 = *(_OWORD *)(v8 + i + 112);
          v18 = *(_OWORD *)(v8 + i + 128);
          v33[144] = *(_BYTE *)(v8 + i + 144);
          *(_OWORD *)&v33[112] = v17;
          *(_OWORD *)&v33[128] = v18;
          *(_OWORD *)&v33[96] = v16;
          sub_1BACB3868((uint64_t)v33);
          v34 = a1;
          v20 = *(_QWORD *)(a1 + 16);
          v19 = *(_QWORD *)(a1 + 24);
          if (v20 >= v19 >> 1)
          {
            sub_1BAC7A3BC(v19 > 1, v20 + 1, 1);
            a1 = v34;
          }
          *(_QWORD *)(a1 + 16) = v20 + 1;
          v21 = (_OWORD *)(a1 + 144 * v20);
          v21[2] = *(_OWORD *)&v33[8];
          v22 = *(_OWORD *)&v33[24];
          v23 = *(_OWORD *)&v33[40];
          v24 = *(_OWORD *)&v33[72];
          v21[5] = *(_OWORD *)&v33[56];
          v21[6] = v24;
          v21[3] = v22;
          v21[4] = v23;
          v25 = *(_OWORD *)&v33[88];
          v26 = *(_OWORD *)&v33[104];
          v27 = *(_OWORD *)&v33[120];
          *(_OWORD *)((char *)v21 + 153) = *(_OWORD *)&v33[129];
          v21[8] = v26;
          v21[9] = v27;
          v21[7] = v25;
          if (!v10)
            break;
          --v10;
        }
        swift_release();
        swift_release();
        v3 = v29;
        v4 = v32;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v31)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BAC9E474(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1BA6AA10C(0, &qword_1ED3AB190, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  v39 = v3;
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FeedCustomItem();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v11 + 16);
  if (v32)
  {
    v31 = v11 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 0;
    v29 = v11;
    while (v12 < *(_QWORD *)(v11 + 16))
    {
      v36 = v12;
      v14 = v31 + 16 * v12;
      v15 = *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))v14;
      v16 = *(_QWORD *)(v14 + 8);
      swift_retain_n();
      v17 = swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1BACAC3F0(v17, &qword_1ED3AB190, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, &qword_1EF2B1808);
      swift_bridgeObjectRelease();
      v40 = v18;
      sub_1BACB0E94(&v40, v15, v16);
      v35 = v13;
      if (v13)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v40;
      v20 = v40[2];
      if (v20)
      {
        v34 = v16;
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1BAC7A630(0, v20, 0);
        v21 = *(unsigned __int8 *)(v30 + 80);
        v33 = v19;
        v22 = (uint64_t)v19 + ((v21 + 32) & ~v21);
        v23 = *(_QWORD *)(v30 + 72);
        a1 = v40;
        do
        {
          sub_1BA6AA01C(v22, (uint64_t)v7, (uint64_t)&qword_1ED3AB190, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v24 = *(int *)(v39 + 48);
          v25 = (uint64_t)&v38[v24];
          sub_1BA4C2DD8((uint64_t)&v7[v24], (uint64_t)&v38[v24], (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          sub_1BA5193C4(v25, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          sub_1BA6AA068((uint64_t)v7, (uint64_t)&qword_1ED3AB190, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7A630(0, a1[2] + 1, 1);
            a1 = v40;
          }
          v27 = a1[2];
          v26 = a1[3];
          if (v27 >= v26 >> 1)
          {
            sub_1BAC7A630(v26 > 1, v27 + 1, 1);
            a1 = v40;
          }
          a1[2] = v27 + 1;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)a1+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_release();
        swift_release();
        v11 = v29;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v13 = v35;
      v12 = v36 + 1;
      if (v36 + 1 == v32)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BAC9E7F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1BA6AA10C(0, (unint64_t *)&unk_1EF2B17F8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  v39 = v3;
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FeedPuzzleStatistic();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v11 + 16);
  if (v32)
  {
    v31 = v11 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 0;
    v29 = v11;
    while (v12 < *(_QWORD *)(v11 + 16))
    {
      v36 = v12;
      v14 = v31 + 16 * v12;
      v15 = *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))v14;
      v16 = *(_QWORD *)(v14 + 8);
      swift_retain_n();
      v17 = swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1BACAC3F0(v17, (unint64_t *)&unk_1EF2B17F8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, &qword_1EF2B17F0);
      swift_bridgeObjectRelease();
      v40 = v18;
      sub_1BACB0FC8(&v40, v15, v16);
      v35 = v13;
      if (v13)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v40;
      v20 = v40[2];
      if (v20)
      {
        v34 = v16;
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1BAC7A65C(0, v20, 0);
        v21 = *(unsigned __int8 *)(v30 + 80);
        v33 = v19;
        v22 = (uint64_t)v19 + ((v21 + 32) & ~v21);
        v23 = *(_QWORD *)(v30 + 72);
        a1 = v40;
        do
        {
          sub_1BA6AA01C(v22, (uint64_t)v7, (uint64_t)&unk_1EF2B17F8, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v24 = *(int *)(v39 + 48);
          v25 = (uint64_t)&v38[v24];
          sub_1BA4C2DD8((uint64_t)&v7[v24], (uint64_t)&v38[v24], (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
          sub_1BA5193C4(v25, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
          sub_1BA6AA068((uint64_t)v7, (uint64_t)&unk_1EF2B17F8, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7A65C(0, a1[2] + 1, 1);
            a1 = v40;
          }
          v27 = a1[2];
          v26 = a1[3];
          if (v27 >= v26 >> 1)
          {
            sub_1BAC7A65C(v26 > 1, v27 + 1, 1);
            a1 = v40;
          }
          a1[2] = v27 + 1;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)a1+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_release();
        swift_release();
        v11 = v29;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v13 = v35;
      v12 = v36 + 1;
      if (v36 + 1 == v32)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BAC9EB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _OWORD *v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v3 + 16);
  if (v21)
  {
    v20 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v19 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = *(_OWORD *)(v20 + 16 * v4);
      swift_retain();
      swift_retain();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BACABCF8(v6);
      swift_bridgeObjectRelease();
      v26 = v7;
      sub_1BACB5558(&v26, (uint64_t)sub_1BACB5E28, v5, (uint64_t (*)(uint64_t))sub_1BACAB898, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BACB1360);
      swift_release();
      swift_bridgeObjectRelease();
      v8 = v26;
      v9 = *(_QWORD *)(v26 + 16);
      if (v9)
      {
        v22 = v4;
        v26 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7A688(0, v9, 0);
        a1 = v26;
        v10 = (_OWORD *)(v8 + 88);
        do
        {
          v23 = *((_QWORD *)v10 - 5);
          v24 = *((_QWORD *)v10 - 6);
          v11 = *((_BYTE *)v10 - 32);
          v12 = *((_QWORD *)v10 - 3);
          v13 = *((_QWORD *)v10 - 2);
          v14 = *((_QWORD *)v10 - 1);
          v25 = *v10;
          sub_1BA75A650(v12, v13);
          v26 = a1;
          v15 = *(_QWORD *)(a1 + 16);
          v16 = *(_QWORD *)(a1 + 24);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          if (v15 >= v16 >> 1)
          {
            sub_1BAC7A688(v16 > 1, v15 + 1, 1);
            a1 = v26;
          }
          *(_QWORD *)(a1 + 16) = v15 + 1;
          v17 = a1 + (v15 << 6);
          *(_QWORD *)(v17 + 32) = v24;
          *(_QWORD *)(v17 + 40) = v23;
          *(_BYTE *)(v17 + 48) = v11;
          *(_QWORD *)(v17 + 56) = v12;
          *(_QWORD *)(v17 + 64) = v13;
          *(_QWORD *)(v17 + 72) = v14;
          v10 = (_OWORD *)((char *)v10 + 72);
          *(_OWORD *)(v17 + 80) = v25;
          --v9;
        }
        while (v9);
        swift_release();
        swift_release();
        v3 = v19;
        v4 = v22;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v21)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BAC9EDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _OWORD v29[10];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v27 = *(_QWORD *)(v3 + 16);
  if (v27)
  {
    v26 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v25 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = (uint64_t *)(v26 + 16 * v4);
      v6 = *v5;
      v7 = v5[1];
      swift_retain_n();
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BACABF90(v8);
      swift_bridgeObjectRelease();
      v31 = v9;
      sub_1BA6AA414(&v31, v6, v7, (uint64_t)&unk_1E729F408, (uint64_t (*)(uint64_t))sub_1BACAB8AC, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1BACB1F08);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v31;
      v11 = *(_QWORD *)(v31 + 16);
      if (v11)
      {
        v28 = v4;
        v44 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7A6A4(0, v11, 0);
        v12 = v10 + 32;
        a1 = v44;
        do
        {
          sub_1BA6AA01C(v12, (uint64_t)&v31, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          sub_1BA93EB58((uint64_t)&v32, (uint64_t)v29);
          v41 = v29[8];
          v42 = v29[9];
          v43 = v30;
          v37 = v29[4];
          v38 = v29[5];
          v39 = v29[6];
          v40 = v29[7];
          v33 = v29[0];
          v34 = v29[1];
          v35 = v29[2];
          v36 = v29[3];
          sub_1BA6AA068((uint64_t)&v31, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7A6A4(0, *(_QWORD *)(a1 + 16) + 1, 1);
            a1 = v44;
          }
          v14 = *(_QWORD *)(a1 + 16);
          v13 = *(_QWORD *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1BAC7A6A4(v13 > 1, v14 + 1, 1);
            a1 = v44;
          }
          *(_QWORD *)(a1 + 16) = v14 + 1;
          v15 = a1 + 168 * v14;
          v16 = v33;
          v17 = v35;
          *(_OWORD *)(v15 + 48) = v34;
          *(_OWORD *)(v15 + 64) = v17;
          *(_OWORD *)(v15 + 32) = v16;
          v18 = v36;
          v19 = v37;
          v20 = v39;
          *(_OWORD *)(v15 + 112) = v38;
          *(_OWORD *)(v15 + 128) = v20;
          *(_OWORD *)(v15 + 80) = v18;
          *(_OWORD *)(v15 + 96) = v19;
          v21 = v40;
          v22 = v41;
          v23 = v42;
          *(_QWORD *)(v15 + 192) = v43;
          *(_OWORD *)(v15 + 160) = v22;
          *(_OWORD *)(v15 + 176) = v23;
          *(_OWORD *)(v15 + 144) = v21;
          v12 += 176;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
        v3 = v25;
        v4 = v28;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v27)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BAC9F104(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1BA6AA10C(0, &qword_1ED39BFD0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  v39 = v3;
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FeedWebEmbed();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v11 + 16);
  if (v32)
  {
    v31 = v11 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 0;
    v29 = v11;
    while (v12 < *(_QWORD *)(v11 + 16))
    {
      v36 = v12;
      v14 = v31 + 16 * v12;
      v15 = *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))v14;
      v16 = *(_QWORD *)(v14 + 8);
      swift_retain_n();
      v17 = swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1BACAC3F0(v17, &qword_1ED39BFD0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, &qword_1ED3AB9D8);
      swift_bridgeObjectRelease();
      v40 = v18;
      sub_1BACB2A78(&v40, v15, v16);
      v35 = v13;
      if (v13)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v40;
      v20 = v40[2];
      if (v20)
      {
        v34 = v16;
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1BAC7A6C0(0, v20, 0);
        v21 = *(unsigned __int8 *)(v30 + 80);
        v33 = v19;
        v22 = (uint64_t)v19 + ((v21 + 32) & ~v21);
        v23 = *(_QWORD *)(v30 + 72);
        a1 = v40;
        do
        {
          sub_1BA6AA01C(v22, (uint64_t)v7, (uint64_t)&qword_1ED39BFD0, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v24 = *(int *)(v39 + 48);
          v25 = (uint64_t)&v38[v24];
          sub_1BA4C2DD8((uint64_t)&v7[v24], (uint64_t)&v38[v24], (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          sub_1BA5193C4(v25, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          sub_1BA6AA068((uint64_t)v7, (uint64_t)&qword_1ED39BFD0, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7A6C0(0, a1[2] + 1, 1);
            a1 = v40;
          }
          v27 = a1[2];
          v26 = a1[3];
          if (v27 >= v26 >> 1)
          {
            sub_1BAC7A6C0(v26 > 1, v27 + 1, 1);
            a1 = v40;
          }
          a1[2] = v27 + 1;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)a1+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_release();
        swift_release();
        v11 = v29;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v13 = v35;
      v12 = v36 + 1;
      if (v36 + 1 == v32)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BAC9F484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _OWORD v28[9];
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  uint64_t v42;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v26 = *(_QWORD *)(v3 + 16);
  if (v26)
  {
    v25 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v24 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = (uint64_t *)(v25 + 16 * v4);
      v6 = *v5;
      v7 = v5[1];
      swift_retain_n();
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BACAC1C4(v8);
      swift_bridgeObjectRelease();
      v30 = v9;
      sub_1BA6AA414(&v30, v6, v7, (uint64_t)&unk_1E729F2C8, (uint64_t (*)(uint64_t))sub_1BACAB8D4, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1BACB2BAC);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v30;
      v11 = *(_QWORD *)(v30 + 16);
      if (v11)
      {
        v27 = v4;
        v42 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7A6EC(0, v11, 0);
        v12 = v10 + 32;
        a1 = v42;
        do
        {
          sub_1BA6AA01C(v12, (uint64_t)&v30, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          sub_1BA6A955C((uint64_t)&v31, (uint64_t)v28);
          v38 = v28[6];
          v39 = v28[7];
          v40 = v28[8];
          v41 = v29;
          v34 = v28[2];
          v35 = v28[3];
          v36 = v28[4];
          v37 = v28[5];
          v32 = v28[0];
          v33 = v28[1];
          sub_1BA6AA068((uint64_t)&v30, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7A6EC(0, *(_QWORD *)(a1 + 16) + 1, 1);
            a1 = v42;
          }
          v14 = *(_QWORD *)(a1 + 16);
          v13 = *(_QWORD *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1BAC7A6EC(v13 > 1, v14 + 1, 1);
            a1 = v42;
          }
          *(_QWORD *)(a1 + 16) = v14 + 1;
          v15 = a1 + 152 * v14;
          v16 = v33;
          *(_OWORD *)(v15 + 32) = v32;
          *(_OWORD *)(v15 + 48) = v16;
          v17 = v34;
          v18 = v35;
          v19 = v37;
          *(_OWORD *)(v15 + 96) = v36;
          *(_OWORD *)(v15 + 112) = v19;
          *(_OWORD *)(v15 + 64) = v17;
          *(_OWORD *)(v15 + 80) = v18;
          v20 = v38;
          v21 = v39;
          v22 = v40;
          *(_BYTE *)(v15 + 176) = v41;
          *(_OWORD *)(v15 + 144) = v21;
          *(_OWORD *)(v15 + 160) = v22;
          *(_OWORD *)(v15 + 128) = v20;
          v12 += 160;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
        v3 = v24;
        v4 = v27;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v26)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BAC9F788(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1BA6AA10C(0, &qword_1ED3A08D8, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  v39 = v3;
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FeedEngagementBanner();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v11 + 16);
  if (v32)
  {
    v31 = v11 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 0;
    v29 = v11;
    while (v12 < *(_QWORD *)(v11 + 16))
    {
      v36 = v12;
      v14 = v31 + 16 * v12;
      v15 = *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))v14;
      v16 = *(_QWORD *)(v14 + 8);
      swift_retain_n();
      v17 = swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1BACAC3F0(v17, &qword_1ED3A08D8, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (unint64_t *)&unk_1EF2B1270);
      swift_bridgeObjectRelease();
      v40 = v18;
      sub_1BACB3700(&v40, v15, v16);
      v35 = v13;
      if (v13)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v40;
      v20 = v40[2];
      if (v20)
      {
        v34 = v16;
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1BAC7AC8C(0, v20, 0);
        v21 = *(unsigned __int8 *)(v30 + 80);
        v33 = v19;
        v22 = (uint64_t)v19 + ((v21 + 32) & ~v21);
        v23 = *(_QWORD *)(v30 + 72);
        a1 = v40;
        do
        {
          sub_1BA6AA01C(v22, (uint64_t)v7, (uint64_t)&qword_1ED3A08D8, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v24 = *(int *)(v39 + 48);
          v25 = (uint64_t)&v38[v24];
          sub_1BA4C2DD8((uint64_t)&v7[v24], (uint64_t)&v38[v24], (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
          sub_1BA5193C4(v25, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
          sub_1BA6AA068((uint64_t)v7, (uint64_t)&qword_1ED3A08D8, (uint64_t)type metadata accessor for FeedEngagementBanner, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7AC8C(0, a1[2] + 1, 1);
            a1 = v40;
          }
          v27 = a1[2];
          v26 = a1[3];
          if (v27 >= v26 >> 1)
          {
            sub_1BAC7AC8C(v26 > 1, v27 + 1, 1);
            a1 = v40;
          }
          a1[2] = v27 + 1;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)a1+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_release();
        swift_release();
        v11 = v29;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v13 = v35;
      v12 = v36 + 1;
      if (v36 + 1 == v32)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BAC9FB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  v23 = *(_QWORD *)(v4 + 16);
  if (v23)
  {
    v22 = v4 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 0;
    v21 = v4;
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(v22 + 16 * v5);
      swift_retain();
      swift_retain();
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BACAC708(v7);
      swift_bridgeObjectRelease();
      v31 = v8;
      sub_1BACB5558(&v31, (uint64_t)sub_1BACB55F0, v6, (uint64_t (*)(uint64_t))sub_1BACAB910, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BACB3C70);
      swift_release();
      swift_bridgeObjectRelease();
      v9 = v31;
      v10 = *(_QWORD *)(v31 + 16);
      if (v10)
      {
        v24 = v5;
        v31 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7ACB8(0, v10, 0);
        a1 = v31;
        v11 = v9 + 64;
        do
        {
          v12 = *(_QWORD *)(v11 - 16);
          v29 = *(_QWORD *)(v11 - 8);
          v30 = *(_QWORD *)(v11 - 24);
          v28 = *(_QWORD *)v11;
          v27 = *(_BYTE *)(v11 + 8);
          v13 = *(_QWORD *)(v11 + 24);
          v14 = *(_QWORD *)(v11 + 40);
          v25 = *(_QWORD *)(v11 + 32);
          v26 = *(_QWORD *)(v11 + 16);
          v16 = *(_QWORD *)(v11 + 48);
          v15 = *(_QWORD *)(v11 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA75A650(v16, v15);
          v31 = a1;
          v18 = *(_QWORD *)(a1 + 16);
          v17 = *(_QWORD *)(a1 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1BAC7ACB8(v17 > 1, v18 + 1, 1);
            a1 = v31;
          }
          *(_QWORD *)(a1 + 16) = v18 + 1;
          v19 = a1 + 88 * v18;
          *(_QWORD *)(v19 + 32) = v30;
          *(_QWORD *)(v19 + 40) = v12;
          *(_QWORD *)(v19 + 48) = v29;
          *(_QWORD *)(v19 + 56) = v28;
          *(_BYTE *)(v19 + 64) = v27;
          *(_QWORD *)(v19 + 72) = v26;
          *(_QWORD *)(v19 + 80) = v13;
          *(_QWORD *)(v19 + 88) = v25;
          *(_QWORD *)(v19 + 96) = v14;
          *(_QWORD *)(v19 + 104) = v16;
          *(_QWORD *)(v19 + 112) = v15;
          v11 += 96;
          --v10;
        }
        while (v10);
        swift_release();
        swift_release();
        v4 = v21;
        v5 = v24;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v5 == v23)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BAC9FDAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  v23 = *(_QWORD *)(v4 + 16);
  if (v23)
  {
    v22 = v4 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 0;
    v21 = v4;
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(v22 + 16 * v5);
      swift_retain();
      swift_retain();
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BACAC9E0(v7);
      swift_bridgeObjectRelease();
      v27 = v8;
      sub_1BACB5558(&v27, (uint64_t)sub_1BACB55E8, v6, (uint64_t (*)(uint64_t))sub_1BACAB924, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BACB4B0C);
      swift_release();
      swift_bridgeObjectRelease();
      v9 = v27;
      v10 = *(_QWORD *)(v27 + 16);
      if (v10)
      {
        v24 = v5;
        v27 = MEMORY[0x1E0DEE9D8];
        sub_1BA7C44E8(0, v10, 0);
        a1 = v27;
        v11 = (unint64_t *)(v9 + 88);
        do
        {
          v13 = *(v11 - 6);
          v12 = *(v11 - 5);
          v14 = *(v11 - 4);
          v26 = *(v11 - 3);
          v25 = *((_BYTE *)v11 - 16);
          v15 = *(v11 - 1);
          v16 = *v11;
          swift_bridgeObjectRetain();
          sub_1BA75A650(v15, v16);
          v27 = a1;
          v18 = *(_QWORD *)(a1 + 16);
          v17 = *(_QWORD *)(a1 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1BA7C44E8(v17 > 1, v18 + 1, 1);
            a1 = v27;
          }
          v11 += 8;
          *(_QWORD *)(a1 + 16) = v18 + 1;
          v19 = a1 + 56 * v18;
          *(_QWORD *)(v19 + 32) = v13;
          *(_QWORD *)(v19 + 40) = v12;
          *(_QWORD *)(v19 + 48) = v14;
          *(_QWORD *)(v19 + 56) = v26;
          *(_BYTE *)(v19 + 64) = v25;
          *(_QWORD *)(v19 + 72) = v15;
          *(_QWORD *)(v19 + 80) = v16;
          --v10;
        }
        while (v10);
        swift_release();
        swift_release();
        v4 = v21;
        v5 = v24;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v5 == v23)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BACA0014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v3 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 32 + 16 * v4);
      swift_retain();
      swift_retain();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BACACC30(v6);
      swift_bridgeObjectRelease();
      v12 = v7;
      sub_1BACB5558(&v12, (uint64_t)sub_1BACB3858, v5, (uint64_t (*)(uint64_t))sub_1BACAB938, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BACAE0B0);
      swift_release();
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v12 + 16);
      if (v8)
      {
        v12 = MEMORY[0x1E0DEE9D8];
        sub_1BB873DD4();
        v9 = 40;
        do
        {
          swift_retain();
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
          v9 += 16;
          --v8;
        }
        while (v8);
        a1 = v12;
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v11)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BACA0210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE v20[288];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[288];
  uint64_t v24;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v18 = *(_QWORD *)(v3 + 16);
  if (v18)
  {
    v17 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v16 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = (uint64_t *)(v17 + 16 * v4);
      v6 = *v5;
      v7 = v5[1];
      swift_retain_n();
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BACACF4C(v8);
      swift_bridgeObjectRelease();
      v21 = v9;
      sub_1BA6AA414(&v21, v6, v7, (uint64_t)&unk_1E729EF08, (uint64_t (*)(uint64_t))sub_1BACAB94C, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1BACAF7D4);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v21;
      v11 = *(_QWORD *)(v21 + 16);
      if (v11)
      {
        v19 = v4;
        v24 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7ACD4(0, v11, 0);
        v12 = v10 + 32;
        a1 = v24;
        do
        {
          sub_1BA6AA01C(v12, (uint64_t)&v21, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          sub_1BA982FE4((uint64_t)&v22, (uint64_t)v20);
          sub_1BACB39A8(v20, v23);
          sub_1BA6AA068((uint64_t)&v21, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7ACD4(0, *(_QWORD *)(a1 + 16) + 1, 1);
            a1 = v24;
          }
          v14 = *(_QWORD *)(a1 + 16);
          v13 = *(_QWORD *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1BAC7ACD4(v13 > 1, v14 + 1, 1);
            a1 = v24;
          }
          *(_QWORD *)(a1 + 16) = v14 + 1;
          sub_1BACB39A8(v23, (void *)(a1 + 288 * v14 + 32));
          v12 += 296;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
        v3 = v16;
        v4 = v19;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v18)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BACA04CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _OWORD v28[9];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v26 = *(_QWORD *)(v3 + 16);
  if (v26)
  {
    v25 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = 0;
    v24 = v3;
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v5 = (uint64_t *)(v25 + 16 * v4);
      v6 = *v5;
      v7 = v5[1];
      swift_retain_n();
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BACAD144(v8);
      swift_bridgeObjectRelease();
      v30 = v9;
      sub_1BA6AA414(&v30, v6, v7, (uint64_t)&unk_1E729EE18, (uint64_t (*)(uint64_t))sub_1BACAB960, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1BACB0210);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v30;
      v11 = *(_QWORD *)(v30 + 16);
      if (v11)
      {
        v27 = v4;
        v42 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7ACF0(0, v11, 0);
        v12 = v10 + 32;
        a1 = v42;
        do
        {
          sub_1BA6AA01C(v12, (uint64_t)&v30, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          sub_1BA982E70((uint64_t)&v31, (uint64_t)v28);
          v38 = v28[6];
          v39 = v28[7];
          v40 = v28[8];
          v41 = v29;
          v34 = v28[2];
          v35 = v28[3];
          v36 = v28[4];
          v37 = v28[5];
          v32 = v28[0];
          v33 = v28[1];
          sub_1BA6AA068((uint64_t)&v30, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7ACF0(0, *(_QWORD *)(a1 + 16) + 1, 1);
            a1 = v42;
          }
          v14 = *(_QWORD *)(a1 + 16);
          v13 = *(_QWORD *)(a1 + 24);
          if (v14 >= v13 >> 1)
          {
            sub_1BAC7ACF0(v13 > 1, v14 + 1, 1);
            a1 = v42;
          }
          *(_QWORD *)(a1 + 16) = v14 + 1;
          v15 = a1 + 152 * v14;
          v16 = v33;
          *(_OWORD *)(v15 + 32) = v32;
          *(_OWORD *)(v15 + 48) = v16;
          v17 = v34;
          v18 = v35;
          v19 = v37;
          *(_OWORD *)(v15 + 96) = v36;
          *(_OWORD *)(v15 + 112) = v19;
          *(_OWORD *)(v15 + 64) = v17;
          *(_OWORD *)(v15 + 80) = v18;
          v20 = v38;
          v21 = v39;
          v22 = v40;
          *(_QWORD *)(v15 + 176) = v41;
          *(_OWORD *)(v15 + 144) = v21;
          *(_OWORD *)(v15 + 160) = v22;
          *(_OWORD *)(v15 + 128) = v20;
          v12 += 160;
          --v11;
        }
        while (v11);
        swift_release();
        swift_release();
        v3 = v24;
        v4 = v27;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E0DEE9D8];
      }
      if (++v4 == v26)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BACA07D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  sub_1BA93EB58(a2, (uint64_t)&v13);
  v10 = a3;
  sub_1BA93EB58(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BA6AA068((uint64_t)&v10, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  sub_1BA6AA068((uint64_t)&v12, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  return v9;
}

uint64_t sub_1BACA0890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  sub_1BA6A955C(a2, (uint64_t)&v13);
  v10 = a3;
  sub_1BA6A955C(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BA6AA068((uint64_t)&v10, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  sub_1BA6AA068((uint64_t)&v12, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  return v9;
}

uint64_t sub_1BACA0950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  sub_1BA982FE4(a2, (uint64_t)&v13);
  v10 = a3;
  sub_1BA982FE4(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BA6AA068((uint64_t)&v10, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  sub_1BA6AA068((uint64_t)&v12, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  return v9;
}

uint64_t sub_1BACA0A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  sub_1BA982E70(a2, (uint64_t)&v13);
  v10 = a3;
  sub_1BA982E70(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BA6AA068((uint64_t)&v10, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  sub_1BA6AA068((uint64_t)&v12, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
  return v9;
}

Swift::Int __swiftcall GroupLayoutBindingContext.count(forSlotIdentifier:)(Swift::String_optional forSlotIdentifier)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v21;
  void *v22;
  _BYTE v23[32];
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  object = forSlotIdentifier.value._object;
  countAndFlagsBits = forSlotIdentifier.value._countAndFlagsBits;
  v5 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 60));
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v21 = countAndFlagsBits;
    v22 = object;
    v28 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA6EFF20(0, v6, 0);
    v8 = v5 + 32;
    v7 = v28;
    do
    {
      sub_1BA6AC300(v8, (uint64_t)v23);
      sub_1BA4C010C((uint64_t)&v24, (uint64_t)v25);
      sub_1BA6ABDF8((uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA6EFF20(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v28;
      }
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
        sub_1BA6EFF20(v9 > 1, v10 + 1, 1);
      v11 = v26;
      v12 = v27;
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      v14 = MEMORY[0x1E0C80A78](v13);
      v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v17 + 16))(v16, v14);
      sub_1BA6AC628(v10, (uint64_t)v16, &v28, v11, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      v7 = v28;
      v8 += 72;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    countAndFlagsBits = v21;
    object = v22;
  }
  v18 = sub_1BA6ABE54(v7, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1BACA0CC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedItemAuxiliaryItem();
  v29 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a2;
  v13 = a2[1];
  v15 = a2[2];
  v14 = a2[3];
  v16 = a2[4];
  v17 = a2[5];
  v30 = v16;
  v31 = v12;
  v32 = v17;
  v33 = v13;
  v18 = (int *)type metadata accessor for GroupLayoutBindingContext();
  *(_QWORD *)(a3 + v18[14]) = MEMORY[0x1E0DEE9E0];
  v19 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + v18[15]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + v18[19]) = 0;
  v34 = a1;
  sub_1BA4C010C(a1, a3 + 8);
  *(_QWORD *)(a3 + 48) = sub_1BA66B904(v19);
  sub_1BA6A5AC4(0, (unint64_t *)&unk_1ED3B9D30, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
  v35 = v31;
  v36 = v13;
  v37 = v15;
  v38 = v14;
  v39 = v30;
  v40 = v17;
  sub_1BAF34118((_QWORD *)(v20 + 32));
  v35 = v20;
  sub_1BA6A5AC4(0, &qword_1ED3B9368, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A5A6C();
  sub_1BA6A6C68();
  *(_QWORD *)(a3 + 72) = sub_1BB872BBC();
  *(_QWORD *)(a3 + 80) = v20;
  *(_QWORD *)(a3 + 56) = MEMORY[0x1E0DEE9E8];
  v21 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 64) = sub_1BA8F2E08(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(a3 + v18[16]) = 0;
  v22 = a3 + v18[13];
  v23 = *MEMORY[0x1E0DB5FD0];
  v24 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  *(_BYTE *)a3 = 1;
  *(_QWORD *)(a3 + 96) = sub_1BA8F2F74(v21);
  *(_QWORD *)(a3 + v18[18]) = 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(a3 + v18[17]) = 0;
  *(_BYTE *)(a3 + 88) = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v15 + 16);
  if (v25)
  {
    v26 = v15 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v27 = *(_QWORD *)(v29 + 72);
    do
    {
      sub_1BA4C2DD8(v26, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
      sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, type metadata accessor for FeedItem);
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
      sub_1BA6A5444((uint64_t)v8);
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
      v26 += v27;
      --v25;
    }
    while (v25);
  }
  __swift_destroy_boxed_opaque_existential_1(v34);
  return swift_bridgeObjectRelease();
}

uint64_t GroupLayoutBindingContext.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v1 = type metadata accessor for GroupLayoutBindingContext();
  v2 = 0;
  result = 0;
  v4 = *(_QWORD *)(v0 + *(int *)(v1 + 56));
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v4 + 64;
  v8 = v6 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v5 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v2 << 6);
LABEL_5:
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v11) + 16);
    v13 = __OFADD__(result, v12);
    result += v12;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  v14 = v2 + 1;
  if (__OFADD__(v2, 1))
    goto LABEL_27;
  if (v14 >= v9)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v2;
  if (v15)
    goto LABEL_24;
  v2 = v14 + 1;
  if (v14 + 1 >= v9)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v2);
  if (v15)
    goto LABEL_24;
  v2 = v14 + 2;
  if (v14 + 2 >= v9)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v2);
  if (v15)
    goto LABEL_24;
  v2 = v14 + 3;
  if (v14 + 3 >= v9)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v2);
  if (v15)
    goto LABEL_24;
  v2 = v14 + 4;
  if (v14 + 4 >= v9)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v2);
  if (v15)
  {
LABEL_24:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v2 << 6);
    goto LABEL_5;
  }
  v16 = v14 + 5;
  if (v16 >= v9)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v2 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v2 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v2 >= v9)
      return result;
    v15 = *(_QWORD *)(v7 + 8 * v2);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
  return result;
}

double sub_1BACA10FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  double result;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x6F4D6E6967756C50, 0xEB000000006C6564, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v26 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v17 = sub_1BB86F5D4();
  v28 = v17;
  v18 = sub_1BA4A2870(&qword_1ED3A3D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t)&protocol conformance descriptor for PluginModel);
  v29 = v18;
  *(_QWORD *)&v27 = a1;
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v27, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v27 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x6F4D6E6967756C50, 0xEB000000006C6564, v26, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = *(int *)(v8 + 60);
  v21 = *(_QWORD **)(v4 + v20);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_1BA6A8950(0, v21[2] + 1, 1, v21);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_1BA6A8950((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v23 + 1;
  v24 = &v21[9 * v23];
  v24[4] = 0x6F4D6E6967756C50;
  v24[5] = 0xEB000000006C6564;
  v24[6] = v26;
  v24[7] = a3;
  v24[8] = a1;
  result = *(double *)&v27;
  *(_OWORD *)(v24 + 9) = v27;
  v24[11] = v17;
  v24[12] = v18;
  *(_QWORD *)(v4 + v20) = v21;
  return result;
}

double sub_1BACA13F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  double result;
  uint64_t v31;
  __int128 v32;
  ValueMetadata *v33;
  unint64_t v34;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x4F70614764656546, 0xEE00656E696C6666, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BACB56D4(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v31 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v33 = &type metadata for FeedGapOffline;
  v17 = sub_1BACB5734();
  v34 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)&v32 = v18;
  v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v18 + 96) = *(_QWORD *)(a1 + 80);
  v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v20;
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v32, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v32 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x4F70614764656546, 0xEE00656E696C6666, v31, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = swift_allocObject();
  v23 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v22 + 96) = *(_QWORD *)(a1 + 80);
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 32) = v24;
  v25 = *(int *)(v8 + 60);
  v26 = *(_QWORD **)(v4 + v25);
  sub_1BACB56D4(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1BA6A8950(0, v26[2] + 1, 1, v26);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BA6A8950((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[9 * v28];
  strcpy((char *)v29 + 32, "FeedGapOffline");
  *((_BYTE *)v29 + 47) = -18;
  v29[6] = v31;
  v29[7] = a3;
  v29[8] = v22;
  result = *(double *)&v32;
  *(_OWORD *)(v29 + 9) = v32;
  v29[11] = &type metadata for FeedGapOffline;
  v29[12] = v17;
  *(_QWORD *)(v4 + v25) = v26;
  return result;
}

__n128 sub_1BACA1768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __n128 result;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v4 = v3;
  v8 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for GroupLayoutBindingContext();
  v11 = *(int *)(v32 + 56);
  v12 = *(_QWORD *)(v3 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6A8790(0x4562655764656546, 0xEC0000006465626DLL, a2, a3);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
  v33 = a2;
  v34 = a1;
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v36.n128_u64[1] = v8;
  v19 = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  *(_QWORD *)&v37 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v16[2] = v18 + 1;
  sub_1BA4CECCC(&v35, (uint64_t)&v16[5 * v18 + 4]);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v35 = *(_QWORD *)(v4 + v11);
  *(_QWORD *)(v4 + v11) = 0x8000000000000000;
  v22 = v33;
  sub_1BA6A8604((uint64_t)v16, 0x4562655764656546, 0xEC0000006465626DLL, v33, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v11) = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v38 + 1) = v8;
  v39 = v19;
  v23 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v37);
  sub_1BA4C2DD8(v34, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  strcpy((char *)&v35, "FeedWebEmbed");
  BYTE13(v35) = 0;
  HIWORD(v35) = -5120;
  v36.n128_u64[0] = v22;
  v36.n128_u64[1] = a3;
  v24 = *(int *)(v32 + 60);
  v25 = *(_QWORD **)(v4 + v24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BA6A8950(0, v25[2] + 1, 1, v25);
  v27 = v25[2];
  v26 = v25[3];
  if (v27 >= v26 >> 1)
    v25 = sub_1BA6A8950((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  v25[2] = v27 + 1;
  v28 = &v25[9 * v27];
  *((_OWORD *)v28 + 2) = v35;
  result = v36;
  v30 = v37;
  v31 = v38;
  v28[12] = v39;
  *((_OWORD *)v28 + 4) = v30;
  *((_OWORD *)v28 + 5) = v31;
  *((__n128 *)v28 + 3) = result;
  *(_QWORD *)(v4 + v24) = v25;
  return result;
}

double sub_1BACA1AF4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char isUniquelyReferenced_nonNull_native;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  double result;
  uint64_t v35;
  __int128 v36;
  ValueMetadata *v37;
  unint64_t v38;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x7573734964656546, 0xE900000000000065, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA8D1F08((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v35 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v37 = &type metadata for FeedIssue;
  v17 = sub_1BA6B2E68();
  v38 = v17;
  v18 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v36 = v18;
  v19 = a1[7];
  v18[7] = a1[6];
  v18[8] = v19;
  *(_OWORD *)((char *)v18 + 137) = *(_OWORD *)((char *)a1 + 121);
  v20 = a1[3];
  v18[3] = a1[2];
  v18[4] = v20;
  v21 = a1[5];
  v18[5] = a1[4];
  v18[6] = v21;
  v22 = a1[1];
  v18[1] = *a1;
  v18[2] = v22;
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v36, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v36 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x7573734964656546, 0xE900000000000065, v35, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = (_OWORD *)swift_allocObject();
  v25 = a1[3];
  v24[3] = a1[2];
  v24[4] = v25;
  *(_OWORD *)((char *)v24 + 137) = *(_OWORD *)((char *)a1 + 121);
  v26 = a1[7];
  v24[7] = a1[6];
  v24[8] = v26;
  v27 = a1[5];
  v24[5] = a1[4];
  v24[6] = v27;
  v28 = a1[1];
  v24[1] = *a1;
  v24[2] = v28;
  v29 = *(int *)(v8 + 60);
  v30 = *(_QWORD **)(v4 + v29);
  sub_1BA8D1F08((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = sub_1BA6A8950(0, v30[2] + 1, 1, v30);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_1BA6A8950((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v30[2] = v32 + 1;
  v33 = &v30[9 * v32];
  v33[4] = 0x7573734964656546;
  v33[5] = 0xE900000000000065;
  v33[6] = v35;
  v33[7] = a3;
  v33[8] = v24;
  result = *(double *)&v36;
  *(_OWORD *)(v33 + 9) = v36;
  v33[11] = &type metadata for FeedIssue;
  v33[12] = v17;
  *(_QWORD *)(v4 + v29) = v30;
  return result;
}

double sub_1BACA1E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  double result;
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  double v29[37];

  v4 = v3;
  v25 = type metadata accessor for GroupLayoutBindingContext();
  v8 = *(int *)(v25 + 56);
  v9 = *(_QWORD *)(v3 + v8);
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA6A8790(0x6174614364656546, 0xEF6D657449676F6CLL, a2, a3);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA982FE4(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1BA6A94A8(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BA6A94A8((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v27 = &type metadata for FeedCatalogItem;
  v16 = sub_1BA983020();
  v28 = v16;
  *(_QWORD *)&v26 = swift_allocObject();
  sub_1BA982FE4((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BA4CECCC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1BA9831B8((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(_QWORD *)(v4 + v8) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v13, 0x6174614364656546, 0xEF6D657449676F6CLL, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = swift_allocObject();
  sub_1BA982FE4(a1, v18 + 16);
  v19 = *(int *)(v25 + 60);
  v20 = *(_QWORD **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_1BA6A8950(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_1BA6A8950((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[9 * v22];
  v23[4] = 0x6174614364656546;
  v23[5] = 0xEF6D657449676F6CLL;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedCatalogItem;
  v23[12] = v16;
  *(_QWORD *)(v4 + v19) = v20;
  return result;
}

double sub_1BACA2180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  double result;
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  double v29[20];

  v4 = v3;
  v25 = type metadata accessor for GroupLayoutBindingContext();
  v8 = *(int *)(v25 + 56);
  v9 = *(_QWORD *)(v3 + v8);
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA6A8790(0x67615464656546, 0xE700000000000000, a2, a3);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA6A955C(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1BA6A94A8(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BA6A94A8((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v27 = &type metadata for FeedTag;
  v16 = sub_1BA6A96BC();
  v28 = v16;
  *(_QWORD *)&v26 = swift_allocObject();
  sub_1BA6A955C((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BA4CECCC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1BA6A94C4((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(_QWORD *)(v4 + v8) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v13, 0x67615464656546, 0xE700000000000000, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = swift_allocObject();
  sub_1BA6A955C(a1, v18 + 16);
  v19 = *(int *)(v25 + 60);
  v20 = *(_QWORD **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_1BA6A8950(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_1BA6A8950((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[9 * v22];
  v23[4] = 0x67615464656546;
  v23[5] = 0xE700000000000000;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedTag;
  v23[12] = v16;
  *(_QWORD *)(v4 + v19) = v20;
  return result;
}

__n128 sub_1BACA2470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __n128 result;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v4 = v3;
  v8 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for GroupLayoutBindingContext();
  v11 = *(int *)(v32 + 56);
  v12 = *(_QWORD *)(v3 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6A8790(0x7473754364656546, 0xEE006D6574496D6FLL, a2, a3);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
  v33 = a2;
  v34 = a1;
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v36.n128_u64[1] = v8;
  v19 = sub_1BA4A2870(&qword_1ED39E460, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&protocol conformance descriptor for FeedCustomItem);
  *(_QWORD *)&v37 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  v16[2] = v18 + 1;
  sub_1BA4CECCC(&v35, (uint64_t)&v16[5 * v18 + 4]);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v35 = *(_QWORD *)(v4 + v11);
  *(_QWORD *)(v4 + v11) = 0x8000000000000000;
  v22 = v33;
  sub_1BA6A8604((uint64_t)v16, 0x7473754364656546, 0xEE006D6574496D6FLL, v33, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v11) = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v38 + 1) = v8;
  v39 = v19;
  v23 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v37);
  sub_1BA4C2DD8(v34, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  strcpy((char *)&v35, "FeedCustomItem");
  HIBYTE(v35) = -18;
  v36.n128_u64[0] = v22;
  v36.n128_u64[1] = a3;
  v24 = *(int *)(v32 + 60);
  v25 = *(_QWORD **)(v4 + v24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BA6A8950(0, v25[2] + 1, 1, v25);
  v27 = v25[2];
  v26 = v25[3];
  if (v27 >= v26 >> 1)
    v25 = sub_1BA6A8950((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  v25[2] = v27 + 1;
  v28 = &v25[9 * v27];
  *((_OWORD *)v28 + 2) = v35;
  result = v36;
  v30 = v37;
  v31 = v38;
  v28[12] = v39;
  *((_OWORD *)v28 + 4) = v30;
  *((_OWORD *)v28 + 5) = v31;
  *((__n128 *)v28 + 3) = result;
  *(_QWORD *)(v4 + v24) = v25;
  return result;
}

double sub_1BACA2818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  double result;
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  double v29[20];

  v4 = v3;
  v25 = type metadata accessor for GroupLayoutBindingContext();
  v8 = *(int *)(v25 + 56);
  v9 = *(_QWORD *)(v3 + v8);
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA6A8790(0x6574614364656546, 0xEC00000079726F67, a2, a3);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA982E70(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1BA6A94A8(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BA6A94A8((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v27 = &type metadata for FeedCategory;
  v16 = sub_1BA982EAC();
  v28 = v16;
  *(_QWORD *)&v26 = swift_allocObject();
  sub_1BA982E70((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BA4CECCC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1BA982F4C(v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(_QWORD *)(v4 + v8) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v13, 0x6574614364656546, 0xEC00000079726F67, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = swift_allocObject();
  sub_1BA982E70(a1, v18 + 16);
  v19 = *(int *)(v25 + 60);
  v20 = *(_QWORD **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_1BA6A8950(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_1BA6A8950((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[9 * v22];
  strcpy((char *)v23 + 32, "FeedCategory");
  *((_BYTE *)v23 + 45) = 0;
  *((_WORD *)v23 + 23) = -5120;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedCategory;
  v23[12] = v16;
  *(_QWORD *)(v4 + v19) = v20;
  return result;
}

__n128 sub_1BACA2B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __n128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v4 = v3;
  v8 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GroupLayoutBindingContext();
  v11 = *(int *)(v33 + 56);
  v12 = *(_QWORD *)(v3 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  v35 = a2;
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6A8790(0xD000000000000014, 0x80000001BB970C00, a2, a3);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
  v18 = v16[2];
  v17 = v16[3];
  v34 = a1;
  if (v18 >= v17 >> 1)
    v16 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v37.n128_u64[1] = v8;
  v19 = sub_1BA4A2870((unint64_t *)&unk_1ED39EC10, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t)&protocol conformance descriptor for FeedEngagementBanner);
  *(_QWORD *)&v38 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
  v16[2] = v18 + 1;
  sub_1BA4CECCC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v36 = *(_QWORD *)(v4 + v11);
  *(_QWORD *)(v4 + v11) = 0x8000000000000000;
  v22 = (uint64_t)v16;
  v23 = v35;
  sub_1BA6A8604(v22, 0xD000000000000014, 0x80000001BB970C00, v35, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v39 + 1) = v8;
  v40 = v19;
  v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1BA4C2DD8(v34, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
  *(_QWORD *)&v36 = 0xD000000000000014;
  *((_QWORD *)&v36 + 1) = 0x80000001BB970C00;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  v25 = *(int *)(v33 + 60);
  v26 = *(_QWORD **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1BA6A8950(0, v26[2] + 1, 1, v26);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BA6A8950((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  result = v37;
  v31 = v38;
  v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(_QWORD *)(v4 + v25) = v26;
  return result;
}

double sub_1BACA2E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  double result;
  uint64_t v29;
  __int128 v30;
  ValueMetadata *v31;
  unint64_t v32;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x726F705364656546, 0xEF746E6576457374, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BACB5A2C(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v29 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v31 = &type metadata for FeedSportsEvent;
  v17 = sub_1BACB5A60();
  v32 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)&v30 = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v19;
  *(_BYTE *)(v18 + 48) = *(_BYTE *)(a1 + 32);
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v30, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v30 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x726F705364656546, 0xEF746E6576457374, v29, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = swift_allocObject();
  v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v22;
  *(_BYTE *)(v21 + 48) = *(_BYTE *)(a1 + 32);
  v23 = *(int *)(v8 + 60);
  v24 = *(_QWORD **)(v4 + v23);
  sub_1BACB5A2C(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1BA6A8950(0, v24[2] + 1, 1, v24);
  v26 = v24[2];
  v25 = v24[3];
  if (v26 >= v25 >> 1)
    v24 = sub_1BA6A8950((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
  v24[2] = v26 + 1;
  v27 = &v24[9 * v26];
  v27[4] = 0x726F705364656546;
  v27[5] = 0xEF746E6576457374;
  v27[6] = v29;
  v27[7] = a3;
  v27[8] = v21;
  result = *(double *)&v30;
  *(_OWORD *)(v27 + 9) = v30;
  v27[11] = &type metadata for FeedSportsEvent;
  v27[12] = v17;
  *(_QWORD *)(v4 + v23) = v24;
  return result;
}

double sub_1BACA31E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  double result;
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  double v29[22];

  v4 = v3;
  v25 = type metadata accessor for GroupLayoutBindingContext();
  v8 = *(int *)(v25 + 56);
  v9 = *(_QWORD *)(v3 + v8);
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA6A8790(0x7A7A755064656546, 0xEA0000000000656CLL, a2, a3);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA93EB58(a1, (uint64_t)v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1BA6A94A8(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BA6A94A8((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v27 = &type metadata for FeedPuzzle;
  v16 = sub_1BACB5AD0();
  v28 = v16;
  *(_QWORD *)&v26 = swift_allocObject();
  sub_1BA93EB58((uint64_t)v29, v26 + 16);
  v13[2] = v15 + 1;
  sub_1BA4CECCC(&v26, (uint64_t)&v13[5 * v15 + 4]);
  sub_1BA93EBE8((uint64_t)v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(double *)(v4 + v8);
  *(_QWORD *)(v4 + v8) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v13, 0x7A7A755064656546, 0xEA0000000000656CLL, a2, a3, isUniquelyReferenced_nonNull_native);
  *(double *)(v4 + v8) = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = swift_allocObject();
  sub_1BA93EB58(a1, v18 + 16);
  v19 = *(int *)(v25 + 60);
  v20 = *(_QWORD **)(v4 + v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_1BA6A8950(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_1BA6A8950((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[9 * v22];
  v23[4] = 0x7A7A755064656546;
  v23[5] = 0xEA0000000000656CLL;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v18;
  result = v29[0];
  *(_OWORD *)(v23 + 9) = *(_OWORD *)v29;
  v23[11] = &type metadata for FeedPuzzle;
  v23[12] = v16;
  *(_QWORD *)(v4 + v19) = v20;
  return result;
}

double sub_1BACA34F0(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  char isUniquelyReferenced_nonNull_native;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  double result;
  uint64_t v31;
  __int128 v32;
  ValueMetadata *v33;
  unint64_t v34;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x7A7A755064656546, 0xEE0065707954656CLL, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BACB5B80((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v31 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v33 = &type metadata for FeedPuzzleType;
  v17 = sub_1BACB5BC8();
  v34 = v17;
  v18 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v32 = v18;
  v19 = a1[1];
  v18[1] = *a1;
  v18[2] = v19;
  v20 = a1[3];
  v18[3] = a1[2];
  v18[4] = v20;
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v32, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v32 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x7A7A755064656546, 0xEE0065707954656CLL, v31, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = (_OWORD *)swift_allocObject();
  v23 = a1[1];
  v22[1] = *a1;
  v22[2] = v23;
  v24 = a1[3];
  v22[3] = a1[2];
  v22[4] = v24;
  v25 = *(int *)(v8 + 60);
  v26 = *(_QWORD **)(v4 + v25);
  sub_1BACB5B80((uint64_t)a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1BA6A8950(0, v26[2] + 1, 1, v26);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BA6A8950((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[9 * v28];
  strcpy((char *)v29 + 32, "FeedPuzzleType");
  *((_BYTE *)v29 + 47) = -18;
  v29[6] = v31;
  v29[7] = a3;
  v29[8] = v22;
  result = *(double *)&v32;
  *(_OWORD *)(v29 + 9) = v32;
  v29[11] = &type metadata for FeedPuzzleType;
  v29[12] = v17;
  *(_QWORD *)(v4 + v25) = v26;
  return result;
}

__n128 sub_1BACA3840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __n128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v4 = v3;
  v8 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GroupLayoutBindingContext();
  v11 = *(int *)(v33 + 56);
  v12 = *(_QWORD *)(v3 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  v35 = a2;
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6A8790(0xD000000000000013, 0x80000001BB970C20, a2, a3);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
  v18 = v16[2];
  v17 = v16[3];
  v34 = a1;
  if (v18 >= v17 >> 1)
    v16 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v37.n128_u64[1] = v8;
  v19 = sub_1BA4A2870(&qword_1EF2B1A40, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
  *(_QWORD *)&v38 = v19;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v16[2] = v18 + 1;
  sub_1BA4CECCC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v36 = *(_QWORD *)(v4 + v11);
  *(_QWORD *)(v4 + v11) = 0x8000000000000000;
  v22 = (uint64_t)v16;
  v23 = v35;
  sub_1BA6A8604(v22, 0xD000000000000013, 0x80000001BB970C20, v35, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v39 + 1) = v8;
  v40 = v19;
  v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1BA4C2DD8(v34, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  *(_QWORD *)&v36 = 0xD000000000000013;
  *((_QWORD *)&v36 + 1) = 0x80000001BB970C20;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  v25 = *(int *)(v33 + 60);
  v26 = *(_QWORD **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1BA6A8950(0, v26[2] + 1, 1, v26);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BA6A8950((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  result = v37;
  v31 = v38;
  v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(_QWORD *)(v4 + v25) = v26;
  return result;
}

double sub_1BACA3B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  double result;
  uint64_t v41;
  __int128 v42;
  ValueMetadata *v43;
  unint64_t v44;

  v4 = v3;
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v9 = *(int *)(v8 + 56);
  v10 = *(_QWORD *)(v3 + v9);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA6A8790(0x7779615064656546, 0xEB000000006C6C61, a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BACB5C48(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1BA6A94A8(0, v14[2] + 1, 1, v14);
  v16 = v14[2];
  v15 = v14[3];
  v41 = a2;
  if (v16 >= v15 >> 1)
    v14 = sub_1BA6A94A8((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v43 = &type metadata for FeedPaywall;
  v17 = sub_1BACB5D18();
  v44 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)&v42 = v18;
  v19 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v18 + 208) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v18 + 224) = v19;
  *(_OWORD *)(v18 + 240) = *(_OWORD *)(a1 + 224);
  *(_QWORD *)(v18 + 256) = *(_QWORD *)(a1 + 240);
  v20 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v18 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v18 + 160) = v20;
  v21 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v18 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v18 + 192) = v21;
  v22 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v18 + 96) = v22;
  v23 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v18 + 128) = v23;
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v24;
  v25 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 64) = v25;
  v14[2] = v16 + 1;
  sub_1BA4CECCC(&v42, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v42 = *(_QWORD *)(v4 + v9);
  *(_QWORD *)(v4 + v9) = 0x8000000000000000;
  sub_1BA6A8604((uint64_t)v14, 0x7779615064656546, 0xEB000000006C6C61, v41, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v9) = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = swift_allocObject();
  v28 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v27 + 208) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v27 + 224) = v28;
  *(_OWORD *)(v27 + 240) = *(_OWORD *)(a1 + 224);
  *(_QWORD *)(v27 + 256) = *(_QWORD *)(a1 + 240);
  v29 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v27 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v27 + 160) = v29;
  v30 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v27 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v27 + 192) = v30;
  v31 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v27 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v27 + 96) = v31;
  v32 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v27 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v27 + 128) = v32;
  v33 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v27 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 32) = v33;
  v34 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v27 + 64) = v34;
  v35 = *(int *)(v8 + 60);
  v36 = *(_QWORD **)(v4 + v35);
  sub_1BACB5C48(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v36 = sub_1BA6A8950(0, v36[2] + 1, 1, v36);
  v38 = v36[2];
  v37 = v36[3];
  if (v38 >= v37 >> 1)
    v36 = sub_1BA6A8950((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
  v36[2] = v38 + 1;
  v39 = &v36[9 * v38];
  v39[4] = 0x7779615064656546;
  v39[5] = 0xEB000000006C6C61;
  v39[6] = v41;
  v39[7] = a3;
  v39[8] = v27;
  result = *(double *)&v42;
  *(_OWORD *)(v39 + 9) = v42;
  v39[11] = &type metadata for FeedPaywall;
  v39[12] = v17;
  *(_QWORD *)(v4 + v35) = v36;
  return result;
}

__n128 GroupLayoutBindingContext.bind<A>(_:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  __n128 result;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, double);
  __int128 v53;
  __n128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD *v58;

  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v45 - v14;
  v50 = v16;
  v51 = v17;
  v52 = *(void (**)(char *, double))(v17 + 16);
  v52((char *)&v45 - v14, v13);
  swift_bridgeObjectRetain();
  v48 = a5;
  sub_1BAB25C98((uint64_t)v15, a2, a3, a4, (uint64_t *)&v53);
  v18 = v53;
  v19 = v54;
  v47 = type metadata accessor for GroupLayoutBindingContext();
  v20 = *(int *)(v47 + 56);
  v49 = v5;
  v21 = *(_QWORD *)(v5 + v20);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1BA6A8790(v18, *((uint64_t *)&v18 + 1), v19.n128_i64[0], v19.n128_i64[1]);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD **)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  ((void (*)(char *, uint64_t, uint64_t))v52)(v11, v50, a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = v24;
  v45 = v19.n128_u64[0];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v24 = sub_1BA6A94A8(0, v24[2] + 1, 1, v24);
    v58 = v24;
  }
  v46 = v18;
  v27 = v24[2];
  v26 = v24[3];
  if (v27 >= v26 >> 1)
    v58 = sub_1BA6A94A8((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
  ((void (*)(char *, char *, uint64_t))v52)(v15, v11, a4);
  v28 = v48;
  sub_1BA7875C0(v19.n128_i64[0], (uint64_t)v15, (uint64_t *)&v58, a4, v48);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, a4);
  v29 = v58;
  swift_bridgeObjectRetain();
  v30 = v15;
  v31 = v49;
  swift_bridgeObjectRetain();
  v32 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v53 = *(_QWORD *)(v31 + v20);
  *(_QWORD *)(v31 + v20) = 0x8000000000000000;
  v33 = (uint64_t)v29;
  v34 = v46;
  v35 = v45;
  sub_1BA6A8604(v33, v46, *((uint64_t *)&v18 + 1), v45, v19.n128_i64[1], v32);
  *(_QWORD *)(v31 + v20) = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v52)(v30, v50, a4);
  *(_QWORD *)&v53 = v34;
  *((_QWORD *)&v53 + 1) = *((_QWORD *)&v18 + 1);
  v54.n128_u64[0] = v35;
  v54.n128_u64[1] = v19.n128_u64[1];
  *((_QWORD *)&v56 + 1) = a4;
  v57 = v28;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v55);
  (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 32))(boxed_opaque_existential_0, v30, a4);
  v37 = *(int *)(v47 + 60);
  v38 = *(_QWORD **)(v31 + v37);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_1BA6A8950(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_1BA6A8950((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v38[2] = v40 + 1;
  v41 = &v38[9 * v40];
  *((_OWORD *)v41 + 2) = v53;
  result = v54;
  v43 = v55;
  v44 = v56;
  v41[12] = v57;
  *((_OWORD *)v41 + 4) = v43;
  *((_OWORD *)v41 + 5) = v44;
  *((__n128 *)v41 + 3) = result;
  *(_QWORD *)(v49 + v37) = v38;
  return result;
}

void sub_1BACA42C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v8 = v7;
  v43 = a2;
  v44 = a6;
  v41 = a4;
  v42 = a1;
  v40 = (char *)a7;
  v11 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB873A2C();
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - v18;
  v20 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a3;
  v25 = v11[19];
  v26 = *(_QWORD *)(v8 + v25);
  if (v26 < *(_QWORD *)(v8 + v11[17]))
  {
    sub_1BACA52DC(v42, v24, v43, v41 & 1, a5, v44, (uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a5) != 1)
    {
      v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v34(v23, v19, a5);
      v35 = (uint64_t)v40;
      v34(v40, v23, a5);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, a5);
      return;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v39);
    v26 = *(_QWORD *)(v8 + v25);
  }
  v27 = *(_QWORD *)(v8 + v11[18]);
  v28 = __OFSUB__(v27, v26);
  v29 = v27 - v26;
  if (v28)
  {
    __break(1u);
  }
  else if (v29 <= 0)
  {
    v30 = v41 & 1;
    v31 = v42;
    v32 = v43;
    v33 = v44;
    sub_1BACA5454(v42, v24, v43, v30, a5, v44, 4096, (uint64_t)v16, 0);
    sub_1BA4C2DD8(v8, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, a5) == 1)
    {
      sub_1BACA5454(v31, v24, v32, v30, a5, v33, 0, (uint64_t)v40, 1);
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      v36 = (uint64_t)v40;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v40, v16, a5);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v36, 0, 1, a5);
    }
  }
  else
  {
    sub_1BACA5454(v42, v24, v43, v41 & 1, a5, v44, 0, (uint64_t)v40, 1);
  }
}

uint64_t sub_1BACA45E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v1 = sub_1BB86DEE8();
  v3 = v2;
  if (v1 == sub_1BB86DEE8() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    v7 = 0;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v6 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1BACA46B0(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;

  if (!a1 || (*a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  swift_retain();
  v5 = sub_1BAAD0048(a3);
  swift_release();
  return v5;
}

uint64_t sub_1BACA4708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a3;
  v19 = a4;
  v8 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v8);
  v20 = sub_1BB873DA4();
  v16 = a3;
  v17 = a4;
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v8);
  v11 = sub_1BAA52384((void (*)(char *, char *))sub_1BACB5F88, (uint64_t)v15, v8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  result = swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v11 + 16);
  if (v13 <= a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    sub_1BAC86614(v11 + 32, a2, (2 * v13) | 1);
    v14 = swift_bridgeObjectRelease();
    v20 = a1;
    MEMORY[0x1E0C80A78](v14);
    swift_bridgeObjectRetain();
    a1 = sub_1BB873DA4();
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BACA48AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v12 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *, double))(v14 + 16))(&v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  v15 = sub_1BB872C88();
  v16 = v15;
  v17 = *(_QWORD *)(v15 + 16);
  if (!v17)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  v18 = *(_QWORD *)(v15 + 32);
  result = MEMORY[0x1BCCE37B4](a2, a4);
  if (v18 != 0x7FFFFFFFFFFFFFFFLL && result < v18)
  {
    v21 = 0;
    while (v17 - 1 != v21)
    {
      if ((unint64_t)(v21 + 1) >= *(_QWORD *)(v16 + 16))
      {
        __break(1u);
        return result;
      }
      v22 = *(_QWORD *)(v16 + 8 * v21++ + 40);
      if (result >= v22 || v22 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_15;
    }
    goto LABEL_16;
  }
LABEL_15:
  *(_QWORD *)&v30 = a2;
  v24 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v24);
  sub_1BB87315C();
  v30 = v32;
  v31 = v33;
  v25 = sub_1BB873B70();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF78], v25);
  v26 = sub_1BB872EF8();
  *(_QWORD *)&v32 = a3;
  MEMORY[0x1E0C80A78](v26);
  *(_QWORD *)&v29[-48] = a4;
  *(_QWORD *)&v29[-40] = a5;
  *(_QWORD *)&v29[-32] = v27;
  *(_QWORD *)&v29[-24] = a7;
  *(_QWORD *)&v29[-16] = v28;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v24);
  sub_1BB873DA4();
  swift_bridgeObjectRelease();
  return v26;
}

BOOL sub_1BACA4AD4()
{
  uint64_t v0;

  v0 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v0);
  return (sub_1BB872C7C() & 1) == 0;
}

uint64_t sub_1BACA4B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BB86DEE8();
  v2 = v1;
  if (v0 == sub_1BB86DEE8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BACA4C0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v34;
  char v35;
  uint64_t v36;
  int v37;
  void (*v38)(char *, char *, uint64_t);
  void (*v39)(_QWORD *__return_ptr);
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD v64[2];
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t TupleTypeMetadata2;
  char *v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[2];
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v76 = a3;
  v81 = a7;
  v72 = a5;
  v13 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v13);
  v70 = (char *)v64 - v14;
  v15 = sub_1BB872EE0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v69 = (char *)v64 - v16;
  v80 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v64 - v20;
  v22 = swift_getTupleTypeMetadata2();
  v23 = sub_1BB873A2C();
  v78 = *(_QWORD *)(v23 - 8);
  v79 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v64 - v28;
  v77 = *a2;
  v74 = *a4;
  v73 = *((unsigned __int8 *)a4 + 8);
  v30 = a1;
  *(_QWORD *)&v83 = a1;
  v31 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v15, v27);
  if ((sub_1BB873168() & 1) != 0)
  {
    v32 = swift_getTupleTypeMetadata2();
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v34 = a8;
LABEL_20:
    v48 = 1;
    return v33((uint64_t)v34, v48, 1, v32);
  }
  else
  {
    v64[1] = v31;
    v35 = *v75;
    v65 = a8;
    if ((v35 & 1) != 0 || !v76)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
      v30 = sub_1BAAD0048(v30);
      swift_release();
    }
    v36 = v80;
    v66 = v30;
    v85 = v30;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v15);
    sub_1BB872C04();
    v85 = *(_QWORD *)&v82[0];
    sub_1BB873F0C();
    sub_1BB873EE8();
    v67 = v15;
    v76 = sub_1BB873F00();
    v37 = v73;
    if (!v74)
      v37 = 1;
    LODWORD(v75) = v37;
    while (1)
    {
      sub_1BB873EF4();
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v29, v25, v79);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v29, 1, v22) == 1)
        break;
      v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v38(v21, &v29[*(int *)(v22 + 48)], a6);
      v39 = *(void (**)(_QWORD *__return_ptr))(v81 + 24);
      if ((v75 & 1) != 0)
      {
        v40 = a6;
        v41 = 0;
      }
      else
      {
        ((void (*)(_OWORD *__return_ptr, uint64_t, uint64_t))v39)(v82, a6, v81);
        v40 = a6;
        v41 = (v74 & ~*(_QWORD *)&v82[0]) == 0;
      }
      v42 = v40;
      v39(v82);
      if ((v77 & ~*(_QWORD *)&v82[0]) == 0 && !v41)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v82[0] = v66;
        v43 = v71;
        sub_1BB872EBC();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v21, v42);
        v44 = swift_getTupleTypeMetadata2();
        v45 = *(int *)(v44 + 48);
        v46 = v65;
        v38(v65, v43, v42);
        *(_QWORD *)&v46[v45] = *(_QWORD *)&v82[0];
        v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
        v34 = v46;
LABEL_23:
        v48 = 0;
        v32 = v44;
        return v33((uint64_t)v34, v48, 1, v32);
      }
      v36 = v80;
      a6 = v42;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v21, v42);
    }
    swift_bridgeObjectRelease();
    v47 = v67;
    if ((v72 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v32 = swift_getTupleTypeMetadata2();
      v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
      v34 = v65;
      goto LABEL_20;
    }
    v49 = v66;
    *(_QWORD *)&v83 = v66;
    v50 = v70;
    sub_1BB873144();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v50, 1, a6);
    if ((_DWORD)result != 1)
    {
      v52 = a6;
      v53 = v36;
      v54 = TupleTypeMetadata2;
      v55 = *(int *)(TupleTypeMetadata2 + 48);
      v56 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      v57 = v69;
      v56(v69, v50, v52);
      *(_QWORD *)&v82[0] = v49;
      v85 = 1;
      sub_1BACB5E84(0, &qword_1EF2B1A58, MEMORY[0x1E0DEC910]);
      v59 = v58;
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF28], v47);
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC928], v59);
      sub_1BB872940();
      swift_bridgeObjectRelease();
      v82[0] = v83;
      v82[1] = v84;
      v60 = sub_1BB873B70();
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF78], v60);
      *(_QWORD *)&v57[v55] = sub_1BB872EF8();
      v61 = *(_QWORD *)&v57[*(int *)(v54 + 48)];
      v44 = swift_getTupleTypeMetadata2();
      v62 = *(int *)(v44 + 48);
      v63 = v65;
      v56(v65, v57, v52);
      *(_QWORD *)&v63[v62] = v61;
      v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
      v34 = v63;
      goto LABEL_23;
    }
    __break(1u);
  }
  return result;
}

BOOL sub_1BACA5280(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1BB86DEE8();
  LOBYTE(a2) = sub_1BA761FE4(v3, v4, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t sub_1BACA52DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v23 = a6;
  v24 = a7;
  sub_1BB872EE0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = sub_1BB873A2C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - v15;
  v27 = a2 | 0x1000;
  v25 = 0;
  v26 = 1;
  sub_1BACA4C0C(a1, &v27, a3, &v25, a4, a5, v23, (char *)&v22 - v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v17 = *(_QWORD *)(a5 - 8);
    v18 = 1;
    v19 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(a5 - 8);
    v20 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24, v16, a5);
    v18 = 0;
    v19 = v20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v19, v18, 1, a5);
}

uint64_t sub_1BACA5454@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, char a9)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v26 = a6;
  v27 = a8;
  v25 = a4;
  v24 = a3;
  sub_1BB872EE0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v23 - v16;
  v30 = a2;
  v28 = a7;
  v29 = a9;
  sub_1BACA4C0C(a1, &v30, v24, &v28, v25, a5, v26, (char *)&v23 - v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v17, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v18 = *(_QWORD *)(a5 - 8);
    v19 = 1;
    v20 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(a5 - 8);
    v21 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v17, a5);
    v19 = 0;
    v20 = v21;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v20, v19, 1, a5);
}

BOOL sub_1BACA55CC()
{
  uint64_t v0;

  v0 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v0);
  return (sub_1BB872C7C() & 1) == 0;
}

uint64_t sub_1BACA5650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BB86DEE8();
  v2 = v1;
  if (v0 == sub_1BB86DEE8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BACA5708@<X0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  __int128 v28[2];

  v6 = v5;
  v9 = sub_1BACA5874(a3, a4, v6, a1);
  v11 = v10;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v28);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB86DEE8();
  v14 = v13;
  v15 = *(_QWORD *)(v6 + 96);
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = v12;
    swift_bridgeObjectRetain();
    v17 = sub_1BA6E35A8(v16, v14);
    if ((v18 & 1) != 0)
    {
      v19 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 48 * v17);
      v21 = *v19;
      v20 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      v24 = v19[4];
      v25 = v19[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = 0;
      v20 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
    v20 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
  }
  swift_bridgeObjectRelease();
  result = sub_1BA4CECCC(v28, a5);
  *(_QWORD *)(a5 + 40) = v9;
  *(_QWORD *)(a5 + 48) = v11;
  *(_QWORD *)(a5 + 56) = v21;
  *(_QWORD *)(a5 + 64) = v20;
  *(_QWORD *)(a5 + 72) = v22;
  *(_QWORD *)(a5 + 80) = v23;
  *(_QWORD *)(a5 + 88) = v24;
  *(_QWORD *)(a5 + 96) = v25;
  *(_BYTE *)(a5 + 104) = a2 & 1;
  return result;
}

uint64_t sub_1BACA5874(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  if (a2)
  {
    __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    v6 = sub_1BB86DEE8();
    v8 = sub_1BACA5C40(a1, a2, v6, v7);
    swift_bridgeObjectRelease();
    v9 = sub_1BB86DEE8();
    sub_1BACA5DD0(a1, a2, v9, v10);
  }
  else
  {
    v11 = *(_QWORD *)(a3 + 80);
    v34 = *(_QWORD *)(v11 + 16);
    if (!v34)
      return MEMORY[0x1E0DEE9D8];
    v37 = v11 + 32;
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v38 = v12;
      v13 = (uint64_t *)(v37 + (v12 << 6));
      v14 = v13[1];
      v35 = *v13;
      v15 = v13[2];
      __swift_project_boxed_opaque_existential_1(a4, a4[3]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BB86DEE8();
      v18 = v17;
      if (*(_QWORD *)(v15 + 16))
      {
        v19 = v16;
        sub_1BB8745CC();
        sub_1BB872A90();
        v20 = sub_1BB874608();
        v21 = -1 << *(_BYTE *)(v15 + 32);
        v22 = v20 & ~v21;
        if (((*(_QWORD *)(v15 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
        {
          v23 = *(_QWORD *)(v15 + 48);
          v24 = (_QWORD *)(v23 + 16 * v22);
          v25 = *v24 == v19 && v24[1] == v18;
          if (v25 || (sub_1BB874398() & 1) != 0)
          {
LABEL_20:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v29 = sub_1BB86DEE8();
            v8 = sub_1BACA5C40(v35, v14, v29, v30);
            swift_bridgeObjectRelease();
            v31 = sub_1BB86DEE8();
            sub_1BACA5DD0(v35, v14, v31, v32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_21;
          }
          v26 = ~v21;
          while (1)
          {
            v22 = (v22 + 1) & v26;
            if (((*(_QWORD *)(v15 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
              break;
            v27 = (_QWORD *)(v23 + 16 * v22);
            v28 = *v27 == v19 && v27[1] == v18;
            if (v28 || (sub_1BB874398() & 1) != 0)
              goto LABEL_20;
          }
        }
      }
      v12 = v38 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v38 + 1 != v34);
    v8 = MEMORY[0x1E0DEE9D8];
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BACA5C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v4 + 72);
  if (!*(_QWORD *)(v5 + 16))
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(a1, a2);
  if ((v11 & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + (v10 << 6) + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v12 + 16))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1BA6E35A8(a3, a4);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1BACA5DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;

  if (!a2)
    return MEMORY[0x1E0DEE9E8];
  v5 = *(_QWORD *)(v4 + 72);
  if (!*(_QWORD *)(v5 + 16))
    return MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(a1, a2);
  if ((v11 & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + (v10 << 6) + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v12 + 16))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1BA6E35A8(a3, a4);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

BOOL sub_1BACA5F60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[4];
  (*(void (**)(uint64_t *__return_ptr, _QWORD))(v0[3] + 24))(&v3, v0[2]);
  return (v1 & ~v3) == 0;
}

BOOL sub_1BACA5FB0()
{
  return sub_1BACA4AD4();
}

BOOL sub_1BACA5FD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[6];
  (*(void (**)(uint64_t *__return_ptr, _QWORD))(v0[4] + 24))(&v3, v0[2]);
  return (v1 & ~v3) == 0;
}

uint64_t sub_1BACA6024(_QWORD *a1)
{
  return sub_1BACA45E0(a1) & 1;
}

uint64_t sub_1BACA6044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a6, unint64_t *a7, void (*a8)(uint64_t), uint64_t a9, unint64_t *a10)
{
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (**v33)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  void (**v43)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t *v44;
  void (*v45)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v46;
  unint64_t *v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a4;
  v41 = a1;
  v48 = a8;
  sub_1BA6AA10C(0, a7, a8);
  v51 = v16;
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v52 = (uint64_t)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v44 = (_QWORD *)((char *)v39 - v20);
  MEMORY[0x1E0C80A78](v21);
  v43 = (void (**)(uint64_t *__return_ptr, char *, _QWORD *))((char *)v39 - v22);
  v23 = swift_allocObject();
  v45 = a5;
  *(_QWORD *)(v23 + 16) = a5;
  *(_QWORD *)(v23 + 24) = a6;
  v40 = a2;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v39[1] = v23;
    v39[2] = v10;
    v47 = a7;
    v42 = a10;
    v24 = *(_QWORD *)(v17 + 72);
    v25 = a6;
    swift_retain();
    v55 = v24 * (a3 - 1);
    v46 = v24;
    v26 = v24 * a3;
    v27 = v53;
    while (2)
    {
      v49 = v26;
      v50 = a3;
      v28 = 0;
      v54 = v41;
      v29 = v47;
      v30 = v48;
      do
      {
        v31 = *v27;
        v32 = v26 + v28 + *v27;
        v33 = v43;
        sub_1BA6AA01C(v32, (uint64_t)v43, (uint64_t)v29, (uint64_t)v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        v34 = v44;
        sub_1BA6AA01C(v55 + v28 + v31, (uint64_t)v44, (uint64_t)v29, (uint64_t)v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        LOBYTE(v31) = sub_1BA7F0474(*v33, (uint64_t)v33 + *(int *)(v51 + 48), *v34, (uint64_t)v34 + *(int *)(v51 + 48), v45, v25, v42, v30);
        sub_1BA6AA068((uint64_t)v34, (uint64_t)v29, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        v35 = (uint64_t)v33;
        v26 = v49;
        sub_1BA6AA068(v35, (uint64_t)v29, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        v27 = v53;
        if ((v31 & 1) == 0)
          break;
        v36 = *v53;
        if (!*v53)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v37 = v36 + v55 + v28;
        v29 = v47;
        v30 = v48;
        sub_1BA7EF5CC(v36 + v26 + v28, v52, v47, v48);
        swift_arrayInitWithTakeFrontToBack();
        sub_1BA7EF5CC(v52, v37, v29, v30);
        v28 -= v46;
        v27 = v53;
        ++v54;
      }
      while (v50 != v54);
      a3 = v50 + 1;
      v55 += v46;
      v26 += v46;
      if (v50 + 1 != v40)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BACA635C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  uint64_t v23;
  void (*v24)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v11 = swift_allocObject();
  v24 = a5;
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v38 = a6;
    swift_retain();
    v12 = 176 * a3;
    while (2)
    {
      v13 = a1;
      v23 = v12;
      do
      {
        v14 = *a4 + v12;
        sub_1BA6AA01C(v14, (uint64_t)&v27, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C(v14 - 176, (uint64_t)&v25, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        LOBYTE(v14) = sub_1BACA07D0(v27, (uint64_t)&v27 + 8, v25, (uint64_t)&v26, v24);
        sub_1BA6AA068((uint64_t)&v25, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v27, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        if ((v14 & 1) == 0)
          break;
        if (!*a4)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v15 = (__int128 *)(*a4 + v12);
        v34 = v15[7];
        v35 = v15[8];
        v36 = v15[9];
        v37 = v15[10];
        v30 = v15[3];
        v31 = v15[4];
        v32 = v15[5];
        v33 = v15[6];
        v27 = *v15;
        v28 = v15[1];
        v29 = v15[2];
        v16 = *(v15 - 2);
        v15[8] = *(v15 - 3);
        v15[9] = v16;
        v15[10] = *(v15 - 1);
        v17 = *(v15 - 6);
        v15[4] = *(v15 - 7);
        v15[5] = v17;
        v18 = *(v15 - 4);
        v15[6] = *(v15 - 5);
        v15[7] = v18;
        v19 = *(v15 - 10);
        *v15 = *(v15 - 11);
        v15[1] = v19;
        v20 = *(v15 - 8);
        v15[2] = *(v15 - 9);
        v15[3] = v20;
        *(v15 - 4) = v34;
        *(v15 - 3) = v35;
        *(v15 - 2) = v36;
        *(v15 - 1) = v37;
        *(v15 - 8) = v30;
        *(v15 - 7) = v31;
        *(v15 - 6) = v32;
        *(v15 - 5) = v33;
        *(v15 - 11) = v27;
        *(v15 - 10) = v28;
        *(v15 - 9) = v29;
        v12 -= 176;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      v12 = v23 + 176;
      if (a3 != a2)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BACA6608(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  uint64_t v23;
  void (*v24)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[3];
  uint64_t v36;

  v11 = swift_allocObject();
  v24 = a5;
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v36 = a6;
    swift_retain();
    v12 = 160 * a3;
    while (2)
    {
      v13 = a1;
      v23 = v12;
      do
      {
        v14 = *a4 + v12;
        sub_1BA6AA01C(v14, (uint64_t)&v27, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C(v14 - 160, (uint64_t)&v25, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        LOBYTE(v14) = sub_1BACA0890(v27, (uint64_t)&v27 + 8, v25, (uint64_t)&v26, v24);
        sub_1BA6AA068((uint64_t)&v25, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v27, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        if ((v14 & 1) == 0)
          break;
        if (!*a4)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v15 = (__int128 *)(*a4 + v12);
        v33 = v15[6];
        v34 = v15[7];
        v35[0] = v15[8];
        *(_OWORD *)((char *)v35 + 9) = *(__int128 *)((char *)v15 + 137);
        v29 = v15[2];
        v30 = v15[3];
        v31 = v15[4];
        v32 = v15[5];
        v27 = *v15;
        v28 = v15[1];
        v16 = *(v15 - 3);
        v15[6] = *(v15 - 4);
        v15[7] = v16;
        v17 = *(v15 - 1);
        v15[8] = *(v15 - 2);
        v15[9] = v17;
        v18 = *(v15 - 7);
        v15[2] = *(v15 - 8);
        v15[3] = v18;
        v19 = *(v15 - 5);
        v15[4] = *(v15 - 6);
        v15[5] = v19;
        v20 = *(v15 - 9);
        *v15 = *(v15 - 10);
        v15[1] = v20;
        *(v15 - 4) = v33;
        *(v15 - 3) = v34;
        *(v15 - 2) = v35[0];
        *(__int128 *)((char *)v15 - 23) = *(_OWORD *)((char *)v35 + 9);
        *(v15 - 8) = v29;
        *(v15 - 7) = v30;
        *(v15 - 6) = v31;
        *(v15 - 5) = v32;
        *(v15 - 10) = v27;
        *(v15 - 9) = v28;
        v12 -= 160;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      v12 = v23 + 160;
      if (a3 != a2)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BACA68A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  void *v21;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t __dst[38];
  void (*v28)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  v11 = swift_allocObject();
  v28 = a5;
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    swift_retain();
    v12 = 296 * a3;
    while (2)
    {
      v13 = a1;
      v24 = v12;
      do
      {
        v14 = *a4 + v12;
        sub_1BA6AA01C(v14, (uint64_t)__dst, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C(v14 - 296, (uint64_t)&v25, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        LOBYTE(v14) = sub_1BACA0950(__dst[0], (uint64_t)&__dst[1], v25, (uint64_t)&v26, v28);
        sub_1BA6AA068((uint64_t)&v25, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)__dst, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        if ((v14 & 1) == 0)
          break;
        v15 = *a4;
        if (!*a4)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v16 = (void *)(v15 + v12);
        v17 = a4;
        v18 = a3;
        v19 = a6;
        v20 = (const void *)(v15 + v12 - 296);
        memcpy(__dst, (const void *)(v15 + v12), 0x122uLL);
        memcpy(v16, v20, 0x128uLL);
        v21 = (void *)v20;
        a6 = v19;
        a3 = v18;
        a4 = v17;
        memcpy(v21, __dst, 0x122uLL);
        v12 -= 296;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      v12 = v24 + 296;
      if (a3 != a2)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BACA6AB0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  uint64_t v23;
  void (*v24)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v11 = swift_allocObject();
  v24 = a5;
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v37 = a6;
    swift_retain();
    v12 = 160 * a3;
    while (2)
    {
      v13 = a1;
      v23 = v12;
      do
      {
        v14 = *a4 + v12;
        sub_1BA6AA01C(v14, (uint64_t)&v27, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C(v14 - 160, (uint64_t)&v25, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        LOBYTE(v14) = sub_1BACA0A10(v27, (uint64_t)&v27 + 8, v25, (uint64_t)&v26, v24);
        sub_1BA6AA068((uint64_t)&v25, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v27, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        if ((v14 & 1) == 0)
          break;
        if (!*a4)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v15 = (__int128 *)(*a4 + v12);
        v33 = v15[6];
        v34 = v15[7];
        v35 = v15[8];
        v36 = v15[9];
        v29 = v15[2];
        v30 = v15[3];
        v31 = v15[4];
        v32 = v15[5];
        v27 = *v15;
        v28 = v15[1];
        v16 = *(v15 - 3);
        v15[6] = *(v15 - 4);
        v15[7] = v16;
        v17 = *(v15 - 1);
        v15[8] = *(v15 - 2);
        v15[9] = v17;
        v18 = *(v15 - 7);
        v15[2] = *(v15 - 8);
        v15[3] = v18;
        v19 = *(v15 - 5);
        v15[4] = *(v15 - 6);
        v15[5] = v19;
        v20 = *(v15 - 9);
        *v15 = *(v15 - 10);
        v15[1] = v20;
        *(v15 - 4) = v33;
        *(v15 - 3) = v34;
        *(v15 - 2) = v35;
        *(v15 - 1) = v36;
        *(v15 - 8) = v29;
        *(v15 - 7) = v30;
        *(v15 - 6) = v31;
        *(v15 - 5) = v32;
        *(v15 - 10) = v27;
        *(v15 - 9) = v28;
        v12 -= 160;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      v12 = v23 + 160;
      if (a3 != a2)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BACA6D44(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char *v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  unint64_t v31;
  char *v32;
  char v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t result;
  char *v40;
  unint64_t v41;
  void (*v42)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v43;
  _BYTE v44[40];
  uint64_t v45;
  _BYTE v46[40];
  char *v47;
  char *v48;
  char *v49;

  v12 = swift_allocObject();
  v42 = a5;
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 48;
  v41 = a3;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v49 = a1;
  v48 = a4;
  if (v14 >= v16)
  {
    if (v15 < -47)
      goto LABEL_42;
    if (a4 != a2 || &a2[48 * v16] <= a4)
      memmove(a4, a2, 48 * v16);
    swift_retain();
    v26 = &a4[48 * v16];
    v47 = v26;
    v49 = a2;
    if (v15 < 48 || a1 >= a2)
      goto LABEL_41;
    v27 = (char *)(v41 - 48);
    v40 = a1;
    while (1)
    {
      v32 = v27 + 48;
      sub_1BA6AA01C((uint64_t)(v26 - 48), (uint64_t)&v45, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
      v30 = a2 - 48;
      sub_1BA6AA01C((uint64_t)(a2 - 48), (uint64_t)&v43, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
      v33 = sub_1BA6AB098(v45, (uint64_t)v46, v43, (uint64_t)v44, v42);
      sub_1BA6AA068((uint64_t)&v43, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
      sub_1BA6AA068((uint64_t)&v45, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
      if ((v33 & 1) != 0)
        break;
      v36 = (unint64_t)v47;
      v26 = v47 - 48;
      v47 -= 48;
      if ((unint64_t)v32 < v36 || (unint64_t)v27 >= v36)
      {
        v28 = *(_OWORD *)v26;
        v29 = *(_OWORD *)(v36 - 16);
        *((_OWORD *)v27 + 1) = *(_OWORD *)(v36 - 32);
        *((_OWORD *)v27 + 2) = v29;
        *(_OWORD *)v27 = v28;
        v30 = a2;
        goto LABEL_29;
      }
      v31 = (unint64_t)v40;
      if (v32 != (char *)v36)
      {
        v37 = *(_OWORD *)v26;
        v38 = *(_OWORD *)(v36 - 16);
        *((_OWORD *)v27 + 1) = *(_OWORD *)(v36 - 32);
        *((_OWORD *)v27 + 2) = v38;
        *(_OWORD *)v27 = v37;
      }
      v30 = a2;
      if (v26 <= a4)
        goto LABEL_41;
LABEL_30:
      v27 -= 48;
      a2 = v30;
      if ((unint64_t)v30 <= v31)
        goto LABEL_41;
    }
    if (v32 != a2 || v27 >= a2)
    {
      v34 = *(_OWORD *)v30;
      v35 = *((_OWORD *)a2 - 1);
      *((_OWORD *)v27 + 1) = *((_OWORD *)a2 - 2);
      *((_OWORD *)v27 + 2) = v35;
      *(_OWORD *)v27 = v34;
    }
    v49 -= 48;
    v26 = v47;
LABEL_29:
    v31 = (unint64_t)v40;
    if (v26 <= a4)
      goto LABEL_41;
    goto LABEL_30;
  }
  if (v13 >= -47)
  {
    if (a4 != a1 || &a1[48 * v14] <= a4)
      memmove(a4, a1, 48 * v14);
    swift_retain();
    v17 = (unint64_t)&a4[48 * v14];
    v47 = (char *)v17;
    if (v13 >= 48 && (unint64_t)a2 < v41)
    {
      do
      {
        sub_1BA6AA01C((uint64_t)a2, (uint64_t)&v45, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        sub_1BA6AA01C((uint64_t)a4, (uint64_t)&v43, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        v18 = sub_1BA6AB098(v45, (uint64_t)v46, v43, (uint64_t)v44, v42);
        sub_1BA6AA068((uint64_t)&v43, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        sub_1BA6AA068((uint64_t)&v45, (uint64_t)&qword_1ED3B03F8, (uint64_t)sub_1BA7C2A4C, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        v19 = v49;
        if ((v18 & 1) != 0)
        {
          v20 = (unint64_t)(a2 + 48);
          if (v49 >= a2 && (unint64_t)v49 < v20 && v49 == a2)
          {
            v19 = a2;
          }
          else
          {
            v21 = *(_OWORD *)a2;
            v22 = *((_OWORD *)a2 + 2);
            *((_OWORD *)v49 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)v19 + 2) = v22;
            *(_OWORD *)v19 = v21;
          }
        }
        else
        {
          v23 = v48 + 48;
          if (v49 != v48 || v49 >= v23)
          {
            v24 = *(_OWORD *)v48;
            v25 = *((_OWORD *)v48 + 2);
            *((_OWORD *)v49 + 1) = *((_OWORD *)v48 + 1);
            *((_OWORD *)v19 + 2) = v25;
            *(_OWORD *)v19 = v24;
          }
          v48 = v23;
          v20 = (unint64_t)a2;
        }
        v49 = v19 + 48;
        a4 = v48;
        if ((unint64_t)v48 >= v17)
          break;
        a2 = (char *)v20;
      }
      while (v20 < v41);
    }
LABEL_41:
    sub_1BACAA8F0((void **)&v49, (const void **)&v48, &v47);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_42:
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA71C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a6, unint64_t *a7, void (*a8)(uint64_t), uint64_t a9, unint64_t *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t);
  unint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(uint64_t);
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  void (**v50)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t *v51;
  char v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t result;
  _QWORD v59[3];
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t *v64;
  uint64_t *v65;
  void (*v66)(uint64_t *__return_ptr, char *, _QWORD *);
  void (*v67)(uint64_t);
  unint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v11 = v10;
  v62 = a4;
  v67 = a8;
  v68 = a7;
  sub_1BA6AA10C(0, a7, a8);
  v70 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v65 = (_QWORD *)((char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v22 = (void (**)(uint64_t *__return_ptr, char *, _QWORD *))((char *)v59 - v21);
  v23 = swift_allocObject();
  v66 = a5;
  *(_QWORD *)(v23 + 16) = a5;
  *(_QWORD *)(v23 + 24) = a6;
  v69 = a6;
  v24 = *(_QWORD *)(v18 + 72);
  if (!v24)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v25 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v24 == -1)
    goto LABEL_63;
  v26 = a3;
  v27 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v24 == -1)
    goto LABEL_64;
  v64 = a10;
  v28 = v25 / v24;
  v73 = a1;
  v29 = v62;
  v72 = v62;
  v30 = v27 / v24;
  v59[1] = v23;
  v59[2] = v11;
  if (v25 / v24 >= v27 / v24)
  {
    if ((v30 & 0x8000000000000000) == 0)
    {
      v32 = v30 * v24;
      if (v62 < a2 || a2 + v32 <= v62)
      {
        swift_retain();
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        swift_retain();
        if (v29 != a2)
          swift_arrayInitWithTakeBackToFront();
      }
      v42 = v29 + v32;
      v71 = v29 + v32;
      v73 = a2;
      if (v32 >= 1 && a1 < a2)
      {
        v44 = -v24;
        v60 = a1;
        v61 = -v24;
        do
        {
          v63 = v26 + v44;
          v45 = v26;
          v46 = v67;
          v47 = v68;
          sub_1BA6AA01C(v42 + v44, (uint64_t)v22, (uint64_t)v68, (uint64_t)v67, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v48 = a2 + v44;
          v49 = a2 + v44;
          v50 = v22;
          v51 = v65;
          sub_1BA6AA01C(v49, (uint64_t)v65, (uint64_t)v47, (uint64_t)v46, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v52 = sub_1BA7F0474(*v50, (uint64_t)v50 + *(int *)(v70 + 48), *v51, (uint64_t)v51 + *(int *)(v70 + 48), v66, v69, v64, v46);
          v53 = (uint64_t)v51;
          v22 = v50;
          sub_1BA6AA068(v53, (uint64_t)v47, (uint64_t)v46, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          sub_1BA6AA068((uint64_t)v50, (uint64_t)v47, (uint64_t)v46, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((v52 & 1) != 0)
          {
            v44 = v61;
            v26 = v63;
            if (v45 < a2 || v63 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v55 = v62;
              v56 = v60;
            }
            else
            {
              v54 = v45 == a2;
              v55 = v62;
              v56 = v60;
              if (!v54)
                swift_arrayInitWithTakeBackToFront();
            }
            v73 += v44;
          }
          else
          {
            v57 = v71;
            v71 += v61;
            v44 = v61;
            v26 = v63;
            if (v45 < v57 || v63 >= v57)
            {
              swift_arrayInitWithTakeFrontToBack();
              v48 = a2;
              v55 = v62;
            }
            else
            {
              v55 = v62;
              if (v45 != v57)
                swift_arrayInitWithTakeBackToFront();
              v48 = a2;
            }
            v56 = v60;
          }
          v42 = v71;
          if (v71 <= v55)
            break;
          a2 = v48;
        }
        while (v48 > v56);
      }
      goto LABEL_61;
    }
  }
  else if ((v28 & 0x8000000000000000) == 0)
  {
    v31 = v28 * v24;
    if (v62 < a1 || a1 + v31 <= v62)
    {
      swift_retain();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      swift_retain();
      if (v29 != a1)
        swift_arrayInitWithTakeBackToFront();
    }
    v63 = v29 + v31;
    v71 = v29 + v31;
    if (v31 >= 1 && a2 < v26)
    {
      v34 = v67;
      do
      {
        v35 = v68;
        sub_1BA6AA01C(a2, (uint64_t)v22, (uint64_t)v68, (uint64_t)v34, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        v36 = v29;
        v37 = v65;
        sub_1BA6AA01C(v36, (uint64_t)v65, (uint64_t)v35, (uint64_t)v34, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
        v38 = sub_1BA7F0474(*v22, (uint64_t)v22 + *(int *)(v70 + 48), *v37, (uint64_t)v37 + *(int *)(v70 + 48), v66, v69, v64, v34);
        sub_1BA6AA068((uint64_t)v37, (uint64_t)v35, (uint64_t)v34, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        sub_1BA6AA068((uint64_t)v22, (uint64_t)v35, (uint64_t)v34, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
        v39 = v73;
        if ((v38 & 1) != 0)
        {
          v40 = a2 + v24;
          if (v73 < a2 || v73 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v73 == a2)
          {
            v39 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v41 = v72 + v24;
          if (v73 < v72 || v73 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v73 != v72)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v72 = v41;
          v40 = a2;
        }
        v73 = v39 + v24;
        v29 = v72;
        if (v72 >= v63)
          break;
        a2 = v40;
      }
      while (v40 < v26);
    }
LABEL_61:
    sub_1BACAAA50(&v73, &v72, (uint64_t *)&v71, v68, v67);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_65:
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA7788(char *__src, char *a2, char *a3, char *__dst, uint64_t (*a5)(uint64_t, char *, uint64_t, char *))
{
  uint64_t v5;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char *v35;
  BOOL v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char *v58;
  char *v59;
  BOOL v60;
  uint64_t result;
  char *v62;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  char v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  char v103;
  char *v104;
  char *v105;
  char *v106;

  v62 = __dst;
  v7 = a3;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = (a2 - __src) / 152;
  v12 = a3 - a2;
  v13 = (a3 - a2) / 152;
  v106 = __src;
  v105 = __dst;
  if (v11 >= v13)
  {
    if (v12 < -151)
      goto LABEL_48;
    v38 = 152 * v13;
    if (__dst != a2 || &a2[v38] <= __dst)
      memmove(__dst, a2, 152 * v13);
    v39 = &__dst[v38];
    v104 = v39;
    v106 = v8;
    if (v9 >= v8 || v12 < 152)
      goto LABEL_47;
    while (1)
    {
      v7 -= 152;
      v40 = *(_OWORD *)(v39 - 136);
      v84 = *(_OWORD *)(v39 - 152);
      v85 = v40;
      v41 = *(_OWORD *)(v39 - 120);
      v42 = *(_OWORD *)(v39 - 104);
      v43 = *(_OWORD *)(v39 - 72);
      v88 = *(_OWORD *)(v39 - 88);
      v89 = v43;
      v86 = v41;
      v87 = v42;
      v44 = *(_OWORD *)(v39 - 56);
      v45 = *(_OWORD *)(v39 - 40);
      v46 = *(_OWORD *)(v39 - 24);
      v93 = *(v39 - 8);
      v91 = v45;
      v92 = v46;
      v90 = v44;
      v47 = *(_OWORD *)(v8 - 136);
      v94 = *(_OWORD *)(v8 - 152);
      v95 = v47;
      v48 = *(_OWORD *)(v8 - 120);
      v49 = *(_OWORD *)(v8 - 104);
      v50 = *(_OWORD *)(v8 - 72);
      v98 = *(_OWORD *)(v8 - 88);
      v99 = v50;
      v96 = v48;
      v97 = v49;
      v51 = *(_OWORD *)(v8 - 56);
      v52 = *(_OWORD *)(v8 - 40);
      v53 = *(_OWORD *)(v8 - 24);
      v103 = *(v8 - 8);
      v101 = v52;
      v102 = v53;
      v100 = v51;
      v54 = v84;
      v80 = v90;
      v81 = v91;
      v82 = v92;
      v83 = v93;
      v76 = v86;
      v77 = v87;
      v78 = v88;
      v79 = v89;
      v74 = v84;
      v75 = v85;
      v55 = v94;
      v70 = v51;
      v71 = v52;
      v72 = v53;
      v73 = v103;
      v66 = v96;
      v67 = v97;
      v68 = v98;
      v69 = v50;
      *((_QWORD *)&v64 + 1) = *((_QWORD *)&v94 + 1);
      v65 = v95;
      sub_1BACB3868((uint64_t)&v84);
      sub_1BACB3868((uint64_t)&v94);
      v56 = a5(v54, (char *)&v74 + 8, v55, (char *)&v64 + 8);
      if (v5)
      {
        v104 = v39;
        v106 = v8;
LABEL_43:
        sub_1BACB3908((uint64_t)&v94);
        sub_1BACB3908((uint64_t)&v84);
        goto LABEL_47;
      }
      v57 = v56;
      v58 = v7 + 152;
      sub_1BACB3908((uint64_t)&v94);
      sub_1BACB3908((uint64_t)&v84);
      if ((v57 & 1) != 0)
      {
        v59 = v8 - 152;
        if (v58 != v8)
        {
          v8 -= 152;
LABEL_37:
          memmove(v7, v59, 0x98uLL);
          goto LABEL_38;
        }
        v60 = v7 >= v8;
        v8 -= 152;
        if (v60)
          goto LABEL_37;
      }
      else
      {
        v59 = v39 - 152;
        if (v58 != v39)
        {
          v39 -= 152;
          goto LABEL_37;
        }
        v60 = v7 >= v39;
        v39 -= 152;
        if (v60)
          goto LABEL_37;
      }
LABEL_38:
      if (v39 <= v62 || v8 <= v9)
      {
        v104 = v39;
        v106 = v8;
        goto LABEL_47;
      }
    }
  }
  if (v10 < -151)
  {
LABEL_48:
    result = sub_1BB873F84();
    __break(1u);
    return result;
  }
  v14 = 152 * v11;
  if (__dst != __src || &__src[v14] <= __dst)
    memmove(__dst, __src, v14);
  v15 = &__dst[v14];
  v104 = v15;
  if (v8 >= v7 || v10 < 152)
    goto LABEL_47;
  v16 = v62;
  while (1)
  {
    v17 = *((_OWORD *)v8 + 1);
    v84 = *(_OWORD *)v8;
    v85 = v17;
    v18 = *((_OWORD *)v8 + 2);
    v19 = *((_OWORD *)v8 + 3);
    v20 = *((_OWORD *)v8 + 5);
    v88 = *((_OWORD *)v8 + 4);
    v89 = v20;
    v86 = v18;
    v87 = v19;
    v21 = *((_OWORD *)v8 + 6);
    v22 = *((_OWORD *)v8 + 7);
    v23 = *((_OWORD *)v8 + 8);
    v93 = v8[144];
    v91 = v22;
    v92 = v23;
    v90 = v21;
    v24 = *((_OWORD *)v16 + 1);
    v94 = *(_OWORD *)v16;
    v95 = v24;
    v25 = *((_OWORD *)v16 + 2);
    v26 = *((_OWORD *)v16 + 3);
    v27 = *((_OWORD *)v16 + 5);
    v98 = *((_OWORD *)v16 + 4);
    v99 = v27;
    v96 = v25;
    v97 = v26;
    v28 = *((_OWORD *)v16 + 6);
    v29 = *((_OWORD *)v16 + 7);
    v30 = *((_OWORD *)v16 + 8);
    v103 = v16[144];
    v101 = v29;
    v102 = v30;
    v100 = v28;
    v31 = v84;
    v80 = v90;
    v81 = v91;
    v82 = v92;
    v83 = v93;
    v76 = v86;
    v77 = v87;
    v78 = v88;
    v79 = v89;
    v74 = v84;
    v75 = v85;
    v32 = v94;
    v70 = v28;
    v71 = v29;
    v72 = v30;
    v73 = v103;
    v66 = v96;
    v67 = v97;
    v68 = v98;
    v69 = v27;
    *((_QWORD *)&v64 + 1) = *((_QWORD *)&v94 + 1);
    v65 = v95;
    sub_1BACB3868((uint64_t)&v84);
    sub_1BACB3868((uint64_t)&v94);
    v33 = a5(v31, (char *)&v74 + 8, v32, (char *)&v64 + 8);
    if (v5)
    {
      v105 = v62;
      v106 = v9;
      goto LABEL_43;
    }
    v34 = v33;
    sub_1BACB3908((uint64_t)&v94);
    sub_1BACB3908((uint64_t)&v84);
    if ((v34 & 1) == 0)
    {
      v35 = v16;
      v36 = v9 == v16;
      v62 = v16 + 152;
      v16 += 152;
      if (v36)
        goto LABEL_16;
LABEL_15:
      memmove(v9, v35, 0x98uLL);
      goto LABEL_16;
    }
    v35 = v8;
    v36 = v9 == v8;
    v8 += 152;
    if (!v36)
      goto LABEL_15;
LABEL_16:
    v37 = v9 + 152;
    if (v16 >= v15)
    {
      v105 = v62;
      goto LABEL_46;
    }
    if (v8 >= v7)
      break;
    v9 += 152;
  }
  v105 = v62;
  v37 = v9 + 152;
LABEL_46:
  v106 = v37;
LABEL_47:
  sub_1BACAAB70((void **)&v106, (const void **)&v105, &v104);
  return 1;
}

uint64_t sub_1BACA7CA4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t, char *, _QWORD, char *))
{
  char *v5;
  __int128 *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  unint64_t v24;
  char v25;
  char v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unint64_t v47;
  char v48;
  char v49;
  char *v50;
  char *v51;
  uint64_t result;
  const void *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t __dstb;
  char *__dsta;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  const void *v87[2];
  char *v88;

  v5 = __dst;
  v6 = (__int128 *)a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 72;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 72;
  v88 = __src;
  v87[0] = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -71)
    {
      if (__dst != a2 || &a2[72 * v11] <= __dst)
        memmove(__dst, a2, 72 * v11);
      v30 = &v5[72 * v11];
      v86 = v30;
      v88 = (char *)v6;
      if (v7 < (char *)v6 && v10 >= 72)
      {
        v67 = v5;
        v31 = (char *)(a3 - 72);
        v32 = v6;
        while (1)
        {
          __dsta = v31;
          v70 = (char *)v6;
          v55 = (unint64_t)v30;
          v33 = *(_OWORD *)(v30 - 72);
          v30 -= 72;
          v34 = v33;
          v35 = *((_QWORD *)v30 + 2);
          v36 = v30[24];
          v37 = *((_QWORD *)v30 + 4);
          v38 = *((_QWORD *)v30 + 7);
          v39 = *((_QWORD *)v30 + 8);
          v40 = *(_OWORD *)((char *)v32 - 72);
          v32 = (_OWORD *)((char *)v32 - 72);
          v62 = v34;
          v41 = *((_QWORD *)v32 + 2);
          v42 = *((_BYTE *)v32 + 24);
          v43 = *((_QWORD *)v32 + 4);
          v44 = *((_QWORD *)v32 + 7);
          v45 = *((_QWORD *)v32 + 8);
          v46 = *(_OWORD *)(v30 + 40);
          v59 = *(_OWORD *)((char *)v32 + 40);
          v79 = v34;
          v80 = v35;
          v81 = v36;
          v82 = v37;
          v83 = v46;
          v84 = v38;
          v85 = v39;
          *((_QWORD *)&v72 + 1) = *((_QWORD *)&v40 + 1);
          v73 = v41;
          v74 = v42;
          v75 = v43;
          v76 = v59;
          v47 = v46;
          v77 = v44;
          v78 = v45;
          v56 = v37;
          sub_1BA75A650(v37, v46);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          sub_1BA75A650(v43, v59);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v48 = a5(v62, (char *)&v79 + 8, v40, (char *)&v72 + 8);
          if (v71)
            break;
          v49 = v48;
          v71 = 0;
          v50 = __dsta + 72;
          sub_1BA6E0CBC(v43, v59);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v56, v47);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if ((v49 & 1) != 0)
          {
            v51 = __dsta;
            if (v50 != v70 || __dsta >= v70)
              memmove(__dsta, v32, 0x48uLL);
            v88 = (char *)v32;
            v30 = (char *)v55;
            if (v32 <= (_OWORD *)v7)
              goto LABEL_42;
          }
          else
          {
            v86 = v30;
            v32 = v70;
            v51 = __dsta;
            if ((unint64_t)v50 < v55 || (unint64_t)__dsta >= v55 || v50 != (char *)v55)
              memmove(__dsta, v30, 0x48uLL);
            if (v70 <= v7)
              goto LABEL_42;
          }
          v31 = v51 - 72;
          v6 = v32;
          if (v30 <= v67)
            goto LABEL_42;
        }
        sub_1BA6E0CBC(v43, v59);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v56, v47);
        swift_unknownObjectRelease();
LABEL_45:
        swift_bridgeObjectRelease();
        sub_1BACAAC2C((void **)&v88, v87, &v86);
        return 1;
      }
LABEL_42:
      sub_1BACAAC2C((void **)&v88, v87, &v86);
      return 1;
    }
  }
  else if (v8 >= -71)
  {
    if (__dst != __src || &__src[72 * v9] <= __dst)
      memmove(__dst, __src, 72 * v9);
    v57 = &v5[72 * v9];
    v86 = v57;
    if ((unint64_t)v6 < a3 && v8 >= 72)
    {
      v53 = v87[0];
      v12 = v88;
      while (1)
      {
        v54 = v12;
        v68 = v7;
        v69 = (char *)v6;
        v13 = *((_QWORD *)v6 + 2);
        v14 = *((_BYTE *)v6 + 24);
        v15 = *((_QWORD *)v6 + 4);
        v16 = *((_QWORD *)v6 + 7);
        v17 = *((_QWORD *)v6 + 8);
        v18 = *((_QWORD *)v5 + 2);
        v19 = v5[24];
        v20 = *((_QWORD *)v5 + 4);
        v21 = *((_QWORD *)v5 + 7);
        v22 = *((_QWORD *)v5 + 8);
        v23 = *(__int128 *)((char *)v6 + 40);
        v66 = v5;
        v60 = *(_OWORD *)(v5 + 40);
        v61 = *(_OWORD *)v5;
        v79 = *v6;
        __dstb = v79;
        v80 = v13;
        v81 = v14;
        v82 = v15;
        v83 = v23;
        v84 = v16;
        v85 = v17;
        *((_QWORD *)&v72 + 1) = *((_QWORD *)&v61 + 1);
        v73 = v18;
        v74 = v19;
        v75 = v20;
        v76 = v60;
        v24 = v23;
        v77 = v21;
        v78 = v22;
        sub_1BA75A650(v15, v23);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1BA75A650(v20, v60);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v25 = a5(__dstb, (char *)&v79 + 8, v61, (char *)&v72 + 8);
        if (v71)
        {
          v87[0] = v53;
          v88 = v54;
          sub_1BA6E0CBC(v20, v60);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v15, v24);
          swift_unknownObjectRelease();
          goto LABEL_45;
        }
        v26 = v25;
        sub_1BA6E0CBC(v20, v60);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v15, v24);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
          break;
        v27 = v68;
        v5 = v66 + 72;
        v29 = v66;
        v28 = v69;
        v53 = v66 + 72;
        if (v68 != v66)
          goto LABEL_18;
LABEL_19:
        v71 = 0;
        v12 = v27 + 72;
        if (v5 < v57)
        {
          v6 = (__int128 *)v28;
          v7 = v27 + 72;
          if ((unint64_t)v28 < a3)
            continue;
        }
        v87[0] = v53;
        v88 = v27 + 72;
        goto LABEL_42;
      }
      v27 = v68;
      v28 = v69 + 72;
      if (v68 < v69 || v68 >= v28)
      {
        v29 = v69;
        v5 = v66;
      }
      else
      {
        v29 = v69;
        v5 = v66;
        if (v68 == v69)
          goto LABEL_19;
      }
LABEL_18:
      memmove(v27, v29, 0x48uLL);
      goto LABEL_19;
    }
    goto LABEL_42;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA82B0(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char v26;
  unint64_t v27;
  uint64_t result;
  char *v29;
  unint64_t v30;
  void (*v31)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v32;
  _BYTE v33[168];
  uint64_t v34;
  _BYTE v35[168];
  unint64_t v36;
  char *v37;
  char *v38;

  v12 = swift_allocObject();
  v31 = a5;
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 176;
  v30 = a3;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 176;
  v38 = a1;
  v37 = a4;
  if (v14 >= v16)
  {
    if (v15 >= -175)
    {
      v29 = a1;
      if (a4 != a2 || &a2[176 * v16] <= a4)
        memmove(a4, a2, 176 * v16);
      swift_retain();
      v22 = &a4[176 * v16];
      v36 = (unint64_t)v22;
      v38 = a2;
      if (v15 >= 176 && v29 < a2)
      {
        v23 = (char *)(v30 - 176);
        while (1)
        {
          v24 = v23 + 176;
          sub_1BA6AA01C((uint64_t)(v22 - 176), (uint64_t)&v34, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v25 = a2 - 176;
          sub_1BA6AA01C((uint64_t)(a2 - 176), (uint64_t)&v32, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v26 = sub_1BACA07D0(v34, (uint64_t)v35, v32, (uint64_t)v33, v31);
          sub_1BA6AA068((uint64_t)&v32, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          sub_1BA6AA068((uint64_t)&v34, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((v26 & 1) != 0)
          {
            if (v24 != a2 || v23 >= a2)
              memmove(v23, a2 - 176, 0xB0uLL);
            v38 -= 176;
            v22 = (char *)v36;
            if (v36 <= (unint64_t)a4)
              goto LABEL_40;
          }
          else
          {
            v27 = v36;
            v22 = (char *)(v36 - 176);
            v36 -= 176;
            if ((unint64_t)v24 < v27 || (unint64_t)v23 >= v27 || v24 != (char *)v27)
              memmove(v23, (const void *)(v27 - 176), 0xB0uLL);
            v25 = a2;
            if (v22 <= a4)
              goto LABEL_40;
          }
          v23 -= 176;
          a2 = v25;
          if (v25 <= v29)
            goto LABEL_40;
        }
      }
      goto LABEL_40;
    }
  }
  else if (v13 >= -175)
  {
    if (a4 != a1 || &a1[176 * v14] <= a4)
      memmove(a4, a1, 176 * v14);
    swift_retain();
    v17 = (unint64_t)&a4[176 * v14];
    v36 = v17;
    if (v13 >= 176 && (unint64_t)a2 < v30)
    {
      do
      {
        sub_1BA6AA01C((uint64_t)a2, (uint64_t)&v34, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C((uint64_t)a4, (uint64_t)&v32, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        v18 = sub_1BACA07D0(v34, (uint64_t)v35, v32, (uint64_t)v33, v31);
        sub_1BA6AA068((uint64_t)&v32, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v34, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        v19 = v38;
        if ((v18 & 1) != 0)
        {
          v20 = (unint64_t)(a2 + 176);
          if (v38 >= a2 && (unint64_t)v38 < v20 && v38 == a2)
            v19 = a2;
          else
            memmove(v38, a2, 0xB0uLL);
        }
        else
        {
          v21 = v37 + 176;
          if (v38 != v37 || v38 >= v21)
            memmove(v38, v37, 0xB0uLL);
          v37 = v21;
          v20 = (unint64_t)a2;
        }
        v38 = v19 + 176;
        a4 = v37;
        if ((unint64_t)v37 >= v17)
          break;
        a2 = (char *)v20;
      }
      while (v20 < v30);
    }
LABEL_40:
    sub_1BACAACEC((void **)&v38, (const void **)&v37, &v36);
    swift_release();
    swift_release();
    return 1;
  }
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA871C(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unint64_t v18;
  char v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  unint64_t v29;
  uint64_t result;
  char *v31;
  unint64_t v32;
  void (*v33)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v34;
  _BYTE v35[152];
  uint64_t v36;
  _BYTE v37[152];
  char *v38;
  char *v39;
  char *v40;

  v12 = swift_allocObject();
  v33 = a5;
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 160;
  v32 = a3;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 160;
  v40 = a1;
  v39 = a4;
  if (v14 >= v16)
  {
    if (v15 >= -159)
    {
      v31 = a1;
      v23 = 160 * v16;
      if (a4 != a2 || &a2[v23] <= a4)
        memmove(a4, a2, 160 * v16);
      swift_retain();
      v24 = &a4[v23];
      v38 = &a4[v23];
      v40 = a2;
      if (v15 >= 160 && a1 < a2)
      {
        v25 = (char *)(a3 - 160);
        while (1)
        {
          v26 = v25 + 160;
          sub_1BA6AA01C((uint64_t)(v24 - 160), (uint64_t)&v36, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v27 = a2 - 160;
          sub_1BA6AA01C((uint64_t)(a2 - 160), (uint64_t)&v34, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v28 = sub_1BACA0890(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
          sub_1BA6AA068((uint64_t)&v34, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          sub_1BA6AA068((uint64_t)&v36, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((v28 & 1) != 0)
          {
            if (v26 != a2 || v25 >= a2)
              memmove(v25, a2 - 160, 0xA0uLL);
            v40 -= 160;
            v24 = v38;
            if (v38 <= a4)
              goto LABEL_40;
          }
          else
          {
            v29 = (unint64_t)v38;
            v24 = v38 - 160;
            v38 -= 160;
            if ((unint64_t)v26 < v29 || (unint64_t)v25 >= v29 || v26 != (char *)v29)
              memmove(v25, (const void *)(v29 - 160), 0xA0uLL);
            v27 = a2;
            if (v24 <= a4)
              goto LABEL_40;
          }
          v25 -= 160;
          a2 = v27;
          if (v27 <= v31)
            goto LABEL_40;
        }
      }
      goto LABEL_40;
    }
  }
  else if (v13 >= -159)
  {
    v17 = 160 * v14;
    if (a4 != a1 || &a1[v17] <= a4)
      memmove(a4, a1, v17);
    swift_retain();
    v18 = (unint64_t)&a4[v17];
    v38 = &a4[v17];
    if (v13 >= 160 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_1BA6AA01C((uint64_t)a2, (uint64_t)&v36, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C((uint64_t)a4, (uint64_t)&v34, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        v19 = sub_1BACA0890(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
        sub_1BA6AA068((uint64_t)&v34, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v36, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        v20 = v40;
        if ((v19 & 1) != 0)
        {
          v21 = (unint64_t)(a2 + 160);
          if (v40 >= a2 && (unint64_t)v40 < v21 && v40 == a2)
            v20 = a2;
          else
            memmove(v40, a2, 0xA0uLL);
        }
        else
        {
          v22 = v39 + 160;
          if (v40 != v39 || v40 >= v22)
            memmove(v40, v39, 0xA0uLL);
          v39 = v22;
          v21 = (unint64_t)a2;
        }
        v40 = v20 + 160;
        a4 = v39;
        if ((unint64_t)v39 >= v18)
          break;
        a2 = (char *)v21;
      }
      while (v21 < v32);
    }
LABEL_40:
    sub_1BACAADAC((void **)&v40, (const void **)&v39, &v38);
    swift_release();
    swift_release();
    return 1;
  }
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA8B78(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t, char *, _QWORD, char *))
{
  char *v5;
  __int128 *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  char v35;
  char *v36;
  char *v37;
  char *v38;
  char *v40;
  char *v41;
  _OWORD *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  char v65;
  char v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t result;
  const void *v72;
  char *v73;
  unint64_t v74;
  char *v75;
  unint64_t v76;
  __int128 v78;
  uint64_t v79;
  uint64_t v81;
  char *v82;
  char *__dsta;
  char *__dstb;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  const void *v111[2];
  char *v112;

  v5 = __dst;
  v6 = (__int128 *)a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 96;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 96;
  v112 = __src;
  v111[0] = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -95)
    {
      if (__dst != a2 || &a2[96 * v11] <= __dst)
      {
        memmove(__dst, a2, 96 * v11);
        v6 = (__int128 *)a2;
      }
      v40 = &v5[96 * v11];
      v110 = v40;
      v112 = (char *)v6;
      if (v7 < (char *)v6 && v10 >= 96)
      {
        v41 = (char *)(a3 - 96);
        v42 = v6;
        __dstb = v7;
        v86 = v5;
        while (1)
        {
          v82 = v41;
          v88 = (char *)v6;
          v74 = (unint64_t)v40;
          v44 = *((_OWORD *)v40 - 6);
          v40 -= 96;
          v45 = v44;
          v46 = *((_QWORD *)v40 + 2);
          v47 = v40[40];
          v48 = *((_QWORD *)v40 + 6);
          v49 = *((_QWORD *)v40 + 7);
          v50 = *((_QWORD *)v40 + 8);
          v51 = *((_QWORD *)v40 + 9);
          v53 = *((_QWORD *)v40 + 10);
          v52 = *((_QWORD *)v40 + 11);
          v54 = *(v42 - 6);
          v42 -= 6;
          v79 = v45;
          v55 = *((_QWORD *)v42 + 2);
          v56 = *((_BYTE *)v42 + 40);
          v57 = *((_QWORD *)v42 + 6);
          v58 = *((_QWORD *)v42 + 7);
          v59 = *((_QWORD *)v42 + 8);
          v60 = *((_QWORD *)v42 + 9);
          v61 = *((_QWORD *)v42 + 10);
          v62 = *((_QWORD *)v42 + 11);
          v63 = *(_OWORD *)(v40 + 24);
          v64 = *(_OWORD *)((char *)v42 + 24);
          v100 = v45;
          v101 = v46;
          v102 = v63;
          v103 = v47;
          v104 = v48;
          v105 = v49;
          v106 = v50;
          v107 = v51;
          v108 = v53;
          v109 = v52;
          *((_QWORD *)&v90 + 1) = *((_QWORD *)&v54 + 1);
          v91 = v55;
          v92 = v64;
          v93 = v56;
          v94 = v57;
          v95 = v58;
          v96 = v59;
          v97 = v60;
          v98 = v61;
          v99 = v62;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v76 = v52;
          sub_1BA75A650(v53, v52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA75A650(v61, v62);
          v65 = a5(v79, (char *)&v100 + 8, v54, (char *)&v90 + 8);
          if (v89)
            break;
          v66 = v65;
          v89 = 0;
          v67 = v82 + 96;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v61, v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v53, v76);
          if ((v66 & 1) != 0)
          {
            v68 = v82;
            if (v67 != v88 || v82 >= v88)
              memmove(v82, v42, 0x60uLL);
            v112 = (char *)v42;
            v43 = v86;
            v40 = (char *)v74;
            if (v42 <= (_OWORD *)__dstb)
              goto LABEL_42;
          }
          else
          {
            v110 = v40;
            v68 = v82;
            if ((unint64_t)v67 < v74 || (unint64_t)v82 >= v74 || v67 != (char *)v74)
              memmove(v82, v40, 0x60uLL);
            v43 = v86;
            v42 = v88;
            if (v88 <= __dstb)
              goto LABEL_42;
          }
          v41 = v68 - 96;
          v6 = v42;
          if (v40 <= v43)
            goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v61, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v70 = v52;
        v69 = v53;
LABEL_45:
        sub_1BA6E0CBC(v69, v70);
        sub_1BACAAF30((void **)&v112, v111, &v110);
        return 1;
      }
LABEL_42:
      sub_1BACAAF30((void **)&v112, v111, &v110);
      return 1;
    }
  }
  else if (v8 >= -95)
  {
    if (__dst != __src || &__src[96 * v9] <= __dst)
    {
      memmove(__dst, __src, 96 * v9);
      v6 = (__int128 *)a2;
    }
    v75 = &v5[96 * v9];
    v110 = v75;
    if ((unint64_t)v6 < a3 && v8 >= 96)
    {
      v72 = v111[0];
      v13 = v112;
      while (1)
      {
        v73 = v13;
        __dsta = v7;
        v14 = *((_QWORD *)v6 + 2);
        v15 = *((_BYTE *)v6 + 40);
        v16 = *((_QWORD *)v6 + 6);
        v17 = *((_QWORD *)v6 + 7);
        v18 = *((_QWORD *)v6 + 8);
        v19 = *((_QWORD *)v6 + 9);
        v21 = *((_QWORD *)v6 + 10);
        v20 = *((_QWORD *)v6 + 11);
        v22 = *((_QWORD *)v5 + 2);
        v23 = v5[40];
        v24 = *((_QWORD *)v5 + 6);
        v25 = *((_QWORD *)v5 + 7);
        v26 = v5;
        v27 = *((_QWORD *)v5 + 8);
        v28 = *((_QWORD *)v5 + 9);
        v29 = *((_QWORD *)v5 + 10);
        v30 = *((_QWORD *)v26 + 11);
        v85 = v26;
        v87 = (char *)v6;
        v31 = *(__int128 *)((char *)v6 + 24);
        v78 = *(_OWORD *)v26;
        v32 = *(_OWORD *)v26;
        v33 = *(_OWORD *)(v26 + 24);
        v100 = *v6;
        v81 = v100;
        v101 = v14;
        v102 = v31;
        v103 = v15;
        v104 = v16;
        v105 = v17;
        v106 = v18;
        v107 = v19;
        v108 = v21;
        v109 = v20;
        *((_QWORD *)&v90 + 1) = *((_QWORD *)&v32 + 1);
        v91 = v22;
        v92 = v33;
        v93 = v23;
        v94 = v24;
        v95 = v25;
        v96 = v27;
        v97 = v28;
        v98 = v29;
        v99 = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(v21, v20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(v29, v30);
        v34 = a5(v81, (char *)&v100 + 8, v78, (char *)&v90 + 8);
        if (v89)
        {
          v111[0] = v72;
          v112 = v73;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v29, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70 = v20;
          v69 = v21;
          goto LABEL_45;
        }
        v35 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v21, v20);
        if ((v35 & 1) != 0)
          break;
        v36 = v87;
        v5 = v85 + 96;
        v38 = v85;
        v37 = __dsta;
        v72 = v85 + 96;
        if (__dsta != v85)
          goto LABEL_18;
LABEL_19:
        v89 = 0;
        v13 = v37 + 96;
        if (v5 < v75)
        {
          v6 = (__int128 *)v36;
          v7 = v37 + 96;
          if ((unint64_t)v36 < a3)
            continue;
        }
        v111[0] = v72;
        v112 = v37 + 96;
        goto LABEL_42;
      }
      v5 = v85;
      v36 = v87 + 96;
      v37 = __dsta;
      if (__dsta < v87 || __dsta >= v36)
      {
        v38 = v87;
      }
      else
      {
        v38 = v87;
        if (__dsta == v87)
          goto LABEL_19;
      }
LABEL_18:
      memmove(v37, v38, 0x60uLL);
      goto LABEL_19;
    }
    goto LABEL_42;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA91F0(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t, char *, _QWORD, char *))
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char *v24;
  __int128 v25;
  char v26;
  char v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  char v53;
  char v54;
  char *v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t result;
  const void *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  __int128 v70;
  __int128 v71;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  char v83;
  uint64_t v84;
  unint64_t v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  const void *v93[2];
  char *v94;

  v5 = __src;
  v6 = a2 - __src;
  v7 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v7 = a2 - __src;
  v8 = v7 >> 6;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 6;
  v94 = __src;
  v93[0] = __dst;
  v66 = __dst;
  if (v8 >= v10 >> 6)
  {
    if (v9 >= -63)
    {
      if (__dst != a2 || &a2[64 * v11] <= __dst)
      {
        v34 = a2;
        memmove(__dst, a2, v11 << 6);
        a2 = v34;
        __dst = v66;
      }
      v35 = &__dst[64 * v11];
      v92 = v35;
      v94 = a2;
      if (v5 < a2 && v9 >= 64)
      {
        v36 = (char *)(a3 - 64);
        v37 = a2;
        v76 = v5;
        while (1)
        {
          v74 = v36;
          v78 = a2;
          v67 = v35;
          v41 = v35 - 64;
          v42 = *((_QWORD *)v35 - 6);
          v43 = *(v35 - 24);
          v44 = *((_QWORD *)v35 - 2);
          v45 = *((_QWORD *)v35 - 1);
          v46 = *((_OWORD *)v37 - 4);
          v37 -= 64;
          v71 = *((_OWORD *)v35 - 4);
          v47 = *((_QWORD *)v37 + 2);
          v48 = v37[40];
          v49 = *((_QWORD *)v37 + 6);
          v50 = *((_QWORD *)v37 + 7);
          v51 = *(_OWORD *)(v41 + 24);
          v52 = *(_OWORD *)(v37 + 24);
          v86 = v71;
          v87 = v42;
          v88 = v51;
          v89 = v43;
          v90 = v44;
          v91 = v45;
          *((_QWORD *)&v80 + 1) = *((_QWORD *)&v46 + 1);
          v81 = v47;
          v82 = v52;
          v83 = v48;
          v84 = v49;
          v85 = v50;
          swift_bridgeObjectRetain();
          sub_1BA75A650(v44, v45);
          swift_bridgeObjectRetain();
          sub_1BA75A650(v49, v50);
          v53 = a5(v71, (char *)&v86 + 8, v46, (char *)&v80 + 8);
          if (v79)
            break;
          v54 = v53;
          v79 = 0;
          v55 = v74 + 64;
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v49, v50);
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v44, v45);
          if ((v54 & 1) != 0)
          {
            v56 = v66;
            v57 = v74;
            if (v55 != v78 || v74 >= v78)
            {
              v38 = *(_OWORD *)v37;
              v39 = *((_OWORD *)v37 + 1);
              v40 = *((_OWORD *)v37 + 3);
              *((_OWORD *)v74 + 2) = *((_OWORD *)v37 + 2);
              *((_OWORD *)v74 + 3) = v40;
              *(_OWORD *)v74 = v38;
              *((_OWORD *)v74 + 1) = v39;
            }
            v94 = v37;
            v35 = v67;
            if (v37 <= v76)
              goto LABEL_46;
          }
          else
          {
            v92 = v41;
            v56 = v66;
            v37 = v78;
            v57 = v74;
            if (v55 < v67 || v74 >= v67 || v55 != v67)
            {
              v58 = *(_OWORD *)v41;
              v59 = *((_OWORD *)v41 + 1);
              v60 = *((_OWORD *)v41 + 3);
              *((_OWORD *)v74 + 2) = *((_OWORD *)v41 + 2);
              *((_OWORD *)v74 + 3) = v60;
              *(_OWORD *)v74 = v58;
              *((_OWORD *)v74 + 1) = v59;
            }
            v35 = v41;
            if (v78 <= v76)
              goto LABEL_46;
          }
          v36 = v57 - 64;
          a2 = v37;
          if (v35 <= v56)
            goto LABEL_46;
        }
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v49, v50);
        swift_bridgeObjectRelease();
        v61 = v44;
        v62 = v45;
LABEL_49:
        sub_1BA6E0CBC(v61, v62);
        sub_1BACAAFEC((void **)&v94, v93, &v92);
        return 1;
      }
LABEL_46:
      sub_1BACAAFEC((void **)&v94, v93, &v92);
      return 1;
    }
  }
  else if (v6 >= -63)
  {
    if (__dst != __src || &__src[64 * v8] <= __dst)
    {
      v12 = a2;
      memmove(__dst, __src, v8 << 6);
      a2 = v12;
      __dst = v66;
    }
    v68 = &__dst[64 * v8];
    v92 = v68;
    if ((unint64_t)a2 < a3 && v6 >= 64)
    {
      v64 = v93[0];
      v13 = v94;
      while (1)
      {
        v65 = v13;
        v75 = v5;
        v77 = a2;
        v14 = *((_QWORD *)a2 + 2);
        v15 = a2[40];
        v16 = *((_QWORD *)a2 + 6);
        v17 = *((_QWORD *)a2 + 7);
        v18 = *((_QWORD *)__dst + 2);
        v19 = __dst[40];
        v21 = *((_QWORD *)__dst + 6);
        v20 = *((_QWORD *)__dst + 7);
        v22 = *(_OWORD *)(a2 + 24);
        v70 = *(_OWORD *)__dst;
        v23 = *(_OWORD *)__dst;
        v24 = __dst;
        v25 = *(_OWORD *)(__dst + 24);
        v86 = *(_OWORD *)a2;
        v73 = v86;
        v87 = v14;
        v88 = v22;
        v89 = v15;
        v90 = v16;
        v91 = v17;
        *((_QWORD *)&v80 + 1) = *((_QWORD *)&v23 + 1);
        v81 = v18;
        v82 = v25;
        v83 = v19;
        v84 = v21;
        v85 = v20;
        swift_bridgeObjectRetain();
        sub_1BA75A650(v16, v17);
        swift_bridgeObjectRetain();
        sub_1BA75A650(v21, v20);
        v26 = a5(v73, (char *)&v86 + 8, v70, (char *)&v80 + 8);
        if (v79)
        {
          v93[0] = v64;
          v94 = v65;
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v21, v20);
          swift_bridgeObjectRelease();
          v61 = v16;
          v62 = v17;
          goto LABEL_49;
        }
        v27 = v26;
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v21, v20);
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v16, v17);
        if ((v27 & 1) != 0)
          break;
        __dst = v24 + 64;
        v30 = v24;
        v28 = v75;
        v29 = v77;
        v64 = v24 + 64;
        if (v75 != v24)
          goto LABEL_22;
LABEL_23:
        v79 = 0;
        v13 = v28 + 64;
        if (__dst < v68)
        {
          a2 = v29;
          v5 = v28 + 64;
          if ((unint64_t)v29 < a3)
            continue;
        }
        v93[0] = v64;
        v94 = v28 + 64;
        goto LABEL_46;
      }
      v28 = v75;
      v29 = v77 + 64;
      __dst = v24;
      if (v75 < v77 || v75 >= v29)
      {
        v30 = v77;
      }
      else
      {
        v30 = v77;
        if (v75 == v77)
          goto LABEL_23;
      }
LABEL_22:
      v31 = *(_OWORD *)v30;
      v32 = *((_OWORD *)v30 + 1);
      v33 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v28 + 3) = v33;
      *(_OWORD *)v28 = v31;
      *((_OWORD *)v28 + 1) = v32;
      goto LABEL_23;
    }
    goto LABEL_46;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA9744(char *a1, char *__src, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t *))
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char *v34;
  uint64_t result;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;

  v5 = __src;
  v6 = __src - a1;
  v7 = __src - a1 + 15;
  if (__src - a1 >= 0)
    v7 = __src - a1;
  v8 = v7 >> 4;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 4;
  v45 = a1;
  v44 = a4;
  if (v8 >= v11 >> 4)
  {
    if (v10 >= -15)
    {
      if (a4 != __src || &__src[16 * v12] <= a4)
        memmove(a4, __src, 16 * v12);
      v23 = &a4[16 * v12];
      v43 = v23;
      v45 = v5;
      if (a1 >= v5 || v10 < 16)
        goto LABEL_47;
      v24 = (char *)(a3 - 16);
      v25 = v5;
      while (1)
      {
        v38 = v5;
        v26 = (unint64_t)v23;
        v27 = *((_QWORD *)v23 - 2);
        v29 = *((_QWORD *)v23 - 1);
        v28 = v23 - 16;
        v30 = *((_QWORD *)v25 - 2);
        v31 = *((_QWORD *)v25 - 1);
        v25 -= 16;
        v41 = v31;
        v42 = v29;
        swift_retain();
        swift_retain();
        v32 = a5(v27, &v42, v30, &v41);
        if (v40)
          goto LABEL_46;
        v33 = v32;
        v40 = 0;
        v34 = v24 + 16;
        swift_release();
        swift_release();
        if ((v33 & 1) != 0)
        {
          v23 = (char *)v26;
          if (v34 != v38 || v24 >= v38)
            *(_OWORD *)v24 = *(_OWORD *)v25;
          v45 = v25;
        }
        else
        {
          v43 = v28;
          if ((unint64_t)v34 < v26 || (unint64_t)v24 >= v26 || v34 != (char *)v26)
            *(_OWORD *)v24 = *(_OWORD *)v28;
          v25 = v38;
          v23 = v28;
        }
        if (v25 > a1)
        {
          v24 -= 16;
          v5 = v25;
          if (v23 > a4)
            continue;
        }
        goto LABEL_47;
      }
    }
  }
  else if (v6 >= -15)
  {
    v13 = a4;
    if (a4 != a1 || &a1[16 * v8] <= a4)
      memmove(a4, a1, 16 * v8);
    v15 = &a4[16 * v8];
    v43 = v15;
    if ((unint64_t)v5 >= a3 || v6 < 16)
      goto LABEL_47;
    v16 = a1;
    while (1)
    {
      v17 = *(_QWORD *)v5;
      v18 = *((_QWORD *)v5 + 1);
      v19 = *(_QWORD *)v13;
      v41 = *((_QWORD *)v13 + 1);
      v42 = v18;
      swift_retain();
      swift_retain();
      v20 = a5(v17, &v42, v19, &v41);
      if (v40)
        break;
      v21 = v20;
      swift_release();
      swift_release();
      if ((v21 & 1) != 0)
      {
        v22 = v5 + 16;
        if (v16 < v5 || v16 >= v22 || v16 != v5)
          *(_OWORD *)v16 = *(_OWORD *)v5;
      }
      else
      {
        if (v16 != v13)
          *(_OWORD *)v16 = *(_OWORD *)v13;
        v13 += 16;
        v44 = v13;
        v22 = v5;
      }
      v16 += 16;
      v45 = v16;
      if (v13 < v15)
      {
        v5 = v22;
        if ((unint64_t)v22 < a3)
          continue;
      }
      goto LABEL_47;
    }
LABEL_46:
    swift_release();
    swift_release();
LABEL_47:
    sub_1BACAA47C((void **)&v45, (const void **)&v44, &v43);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA9AA0(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unint64_t v18;
  char v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  unint64_t v29;
  uint64_t result;
  char *v31;
  unint64_t v32;
  void (*v33)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v34;
  _BYTE v35[288];
  uint64_t v36;
  _BYTE v37[288];
  char *v38;
  char *v39;
  char *v40;

  v12 = swift_allocObject();
  v33 = a5;
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 296;
  v32 = a3;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 296;
  v40 = a1;
  v39 = a4;
  if (v14 >= v16)
  {
    if (v15 >= -295)
    {
      v31 = a1;
      v23 = 296 * v16;
      if (a4 != a2 || &a2[v23] <= a4)
        memmove(a4, a2, 296 * v16);
      swift_retain();
      v24 = &a4[v23];
      v38 = &a4[v23];
      v40 = a2;
      if (v15 >= 296 && a1 < a2)
      {
        v25 = (char *)(a3 - 296);
        while (1)
        {
          v26 = v25 + 296;
          sub_1BA6AA01C((uint64_t)(v24 - 296), (uint64_t)&v36, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v27 = a2 - 296;
          sub_1BA6AA01C((uint64_t)(a2 - 296), (uint64_t)&v34, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v28 = sub_1BACA0950(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
          sub_1BA6AA068((uint64_t)&v34, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          sub_1BA6AA068((uint64_t)&v36, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((v28 & 1) != 0)
          {
            if (v26 != a2 || v25 >= a2)
              memmove(v25, a2 - 296, 0x128uLL);
            v40 -= 296;
            v24 = v38;
            if (v38 <= a4)
              goto LABEL_40;
          }
          else
          {
            v29 = (unint64_t)v38;
            v24 = v38 - 296;
            v38 -= 296;
            if ((unint64_t)v26 < v29 || (unint64_t)v25 >= v29 || v26 != (char *)v29)
              memmove(v25, (const void *)(v29 - 296), 0x128uLL);
            v27 = a2;
            if (v24 <= a4)
              goto LABEL_40;
          }
          v25 -= 296;
          a2 = v27;
          if (v27 <= v31)
            goto LABEL_40;
        }
      }
      goto LABEL_40;
    }
  }
  else if (v13 >= -295)
  {
    v17 = 296 * v14;
    if (a4 != a1 || &a1[v17] <= a4)
      memmove(a4, a1, v17);
    swift_retain();
    v18 = (unint64_t)&a4[v17];
    v38 = &a4[v17];
    if (v13 >= 296 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_1BA6AA01C((uint64_t)a2, (uint64_t)&v36, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C((uint64_t)a4, (uint64_t)&v34, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        v19 = sub_1BACA0950(v36, (uint64_t)v37, v34, (uint64_t)v35, v33);
        sub_1BA6AA068((uint64_t)&v34, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v36, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        v20 = v40;
        if ((v19 & 1) != 0)
        {
          v21 = (unint64_t)(a2 + 296);
          if (v40 >= a2 && (unint64_t)v40 < v21 && v40 == a2)
            v20 = a2;
          else
            memmove(v40, a2, 0x128uLL);
        }
        else
        {
          v22 = v39 + 296;
          if (v40 != v39 || v40 >= v22)
            memmove(v40, v39, 0x128uLL);
          v39 = v22;
          v21 = (unint64_t)a2;
        }
        v40 = v20 + 296;
        a4 = v39;
        if ((unint64_t)v39 >= v18)
          break;
        a2 = (char *)v21;
      }
      while (v21 < v32);
    }
LABEL_40:
    sub_1BACAB094((void **)&v40, (const void **)&v39, &v38);
    swift_release();
    swift_release();
    return 1;
  }
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BACA9F04(char *a1, char *a2, unint64_t a3, char *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char v26;
  unint64_t v27;
  uint64_t result;
  char *v29;
  unint64_t v30;
  void (*v31)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v32;
  _BYTE v33[152];
  uint64_t v34;
  _BYTE v35[152];
  unint64_t v36;
  char *v37;
  char *v38;

  v12 = swift_allocObject();
  v31 = a5;
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 160;
  v30 = a3;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 160;
  v38 = a1;
  v37 = a4;
  if (v14 >= v16)
  {
    if (v15 >= -159)
    {
      v29 = a1;
      if (a4 != a2 || &a2[160 * v16] <= a4)
        memmove(a4, a2, 160 * v16);
      swift_retain();
      v22 = &a4[160 * v16];
      v36 = (unint64_t)v22;
      v38 = a2;
      if (v15 >= 160 && v29 < a2)
      {
        v23 = (char *)(v30 - 160);
        while (1)
        {
          v24 = v23 + 160;
          sub_1BA6AA01C((uint64_t)(v22 - 160), (uint64_t)&v34, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v25 = a2 - 160;
          sub_1BA6AA01C((uint64_t)(a2 - 160), (uint64_t)&v32, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
          v26 = sub_1BACA0A10(v34, (uint64_t)v35, v32, (uint64_t)v33, v31);
          sub_1BA6AA068((uint64_t)&v32, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          sub_1BA6AA068((uint64_t)&v34, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
          if ((v26 & 1) != 0)
          {
            if (v24 != a2 || v23 >= a2)
              memmove(v23, a2 - 160, 0xA0uLL);
            v38 -= 160;
            v22 = (char *)v36;
            if (v36 <= (unint64_t)a4)
              goto LABEL_40;
          }
          else
          {
            v27 = v36;
            v22 = (char *)(v36 - 160);
            v36 -= 160;
            if ((unint64_t)v24 < v27 || (unint64_t)v23 >= v27 || v24 != (char *)v27)
              memmove(v23, (const void *)(v27 - 160), 0xA0uLL);
            v25 = a2;
            if (v22 <= a4)
              goto LABEL_40;
          }
          v23 -= 160;
          a2 = v25;
          if (v25 <= v29)
            goto LABEL_40;
        }
      }
      goto LABEL_40;
    }
  }
  else if (v13 >= -159)
  {
    if (a4 != a1 || &a1[160 * v14] <= a4)
      memmove(a4, a1, 160 * v14);
    swift_retain();
    v17 = (unint64_t)&a4[160 * v14];
    v36 = v17;
    if (v13 >= 160 && (unint64_t)a2 < v30)
    {
      do
      {
        sub_1BA6AA01C((uint64_t)a2, (uint64_t)&v34, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        sub_1BA6AA01C((uint64_t)a4, (uint64_t)&v32, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BACB5E30);
        v18 = sub_1BACA0A10(v34, (uint64_t)v35, v32, (uint64_t)v33, v31);
        sub_1BA6AA068((uint64_t)&v32, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        sub_1BA6AA068((uint64_t)&v34, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5E30);
        v19 = v38;
        if ((v18 & 1) != 0)
        {
          v20 = (unint64_t)(a2 + 160);
          if (v38 >= a2 && (unint64_t)v38 < v20 && v38 == a2)
            v19 = a2;
          else
            memmove(v38, a2, 0xA0uLL);
        }
        else
        {
          v21 = v37 + 160;
          if (v38 != v37 || v38 >= v21)
            memmove(v38, v37, 0xA0uLL);
          v37 = v21;
          v20 = (unint64_t)a2;
        }
        v38 = v19 + 160;
        a4 = v37;
        if ((unint64_t)v37 >= v17)
          break;
        a2 = (char *)v20;
      }
      while (v20 < v30);
    }
LABEL_40:
    sub_1BACAB150((void **)&v38, (const void **)&v37, &v36);
    swift_release();
    swift_release();
    return 1;
  }
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BACAA368(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA6AA3C0(0, &qword_1ED3AB9E0, (uint64_t)&unk_1ED3AB1C8, (uint64_t)MEMORY[0x1E0DEB848], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E84);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BACAA47C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1BACAA524(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 3;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -4)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
      return (char *)memmove(result, v3, 4 * v7);
  }
  return result;
}

char *sub_1BACAA5CC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1BACAA678(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

uint64_t sub_1BACAA708(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
}

uint64_t sub_1BACAA714(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, type metadata accessor for FormatService.ThemePackage);
}

uint64_t sub_1BACAA720(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_1BB873F84();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1BACAA82C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

uint64_t sub_1BACAA8E4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
}

char *sub_1BACAA8F0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_1BACAA9AC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0x3FuLL : 0)) & 0xFFFFFFFFFFFFFFC0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

void sub_1BACAAA50(unint64_t *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *a1;
  v6 = *a2;
  v7 = *a3;
  sub_1BA6AA10C(0, a4, a5);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72);
  if (!v9)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v7 - v6;
  if (v7 - v6 == 0x8000000000000000 && v9 == -1)
    goto LABEL_14;
  if (v10 / v9 < 0)
  {
LABEL_15:
    sub_1BB873F84();
    __break(1u);
    return;
  }
  if (v5 < v6 || v5 >= v6 + v10 / v9 * v9)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v5 != v6)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_1BACAAB64(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB4DC8]);
}

char *sub_1BACAAB70(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -152)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 152 * (v4 / 152);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1BACAAC2C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -72)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
      return (char *)memmove(result, v3, 72 * v6);
  }
  return result;
}

char *sub_1BACAACEC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -176)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 176;
    if (result != v3 || result >= &v3[176 * v6])
      return (char *)memmove(result, v3, 176 * v6);
  }
  return result;
}

char *sub_1BACAADAC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -160)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 160 * (v4 / 160);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

uint64_t sub_1BACAAE60(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak);
}

uint64_t sub_1BACAAE6C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

char *sub_1BACAAE78(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1BACAAF30(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -96)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 96;
    if (result != v3 || result >= &v3[96 * v6])
      return (char *)memmove(result, v3, 96 * v6);
  }
  return result;
}

char *sub_1BACAAFEC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

char *sub_1BACAB094(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -296)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 296 * (v4 / 296);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1BACAB150(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -160)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 160;
    if (result != v3 || result >= &v3[160 * v6])
      return (char *)memmove(result, v3, 160 * v6);
  }
  return result;
}

char *sub_1BACAB20C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

uint64_t sub_1BACAB2B4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
}

uint64_t sub_1BACAB2C0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1BACAB2CC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, type metadata accessor for DebugFormatTestCaseResult);
}

uint64_t sub_1BACAB2D8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
}

char *sub_1BACAB2E4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1BACAB3A0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -80)
  {
    result = (char *)sub_1BB873F84();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
      return (char *)memmove(result, v3, 80 * v6);
  }
  return result;
}

uint64_t sub_1BACAB458(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BACAA720(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DDA248]);
}

char *sub_1BACAB464(uint64_t a1)
{
  return sub_1BACAA368(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB478(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1BACAB5C8((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1BACAB5C8((uint64_t)v7, v4, v2);
    MEMORY[0x1BCCE5C38](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1BACAB5C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;

  v4 = (unint64_t *)result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v6 << 6);
LABEL_20:
    v17 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
    result = *v17;
    if (*v17 != 42 || v17[1] != 0xE100000000000000)
    {
      result = sub_1BB874398();
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        if (__OFADD__(v5++, 1))
        {
          __break(1u);
          return sub_1BA6AC7E4(v4, a2, v5, a3);
        }
      }
    }
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v14 >= v11)
    return sub_1BA6AC7E4(v4, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_19;
  v6 = v14 + 1;
  if (v14 + 1 >= v11)
    return sub_1BA6AC7E4(v4, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_19;
  v6 = v14 + 2;
  if (v14 + 2 >= v11)
    return sub_1BA6AC7E4(v4, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_20;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    return sub_1BA6AC7E4(v4, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return sub_1BA6AC7E4(v4, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BACAB76C(uint64_t a1)
{
  return sub_1BA6D597C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB780(uint64_t a1)
{
  return sub_1BAC7BB98(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB794(uint64_t a1)
{
  return sub_1BAC7BBAC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB7A8(uint64_t a1)
{
  return sub_1BAC7BBC0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB7BC(_QWORD *a1)
{
  return sub_1BAC7BBD4(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB7D0(uint64_t a1)
{
  return sub_1BAC7BBE8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB7E4(_QWORD *a1)
{
  return sub_1BAC7C744(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB7F8(_QWORD *a1)
{
  return sub_1BAC7C758(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB80C(_QWORD *a1)
{
  return sub_1BAC7C90C(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB820(_QWORD *a1)
{
  return sub_1BAC7D2AC(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB834(_QWORD *a1)
{
  return sub_1BAC7D5C4(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB848(_QWORD *a1)
{
  return sub_1BAC7D768(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB85C(_QWORD *a1)
{
  return sub_1BAC7E6DC(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB870(_QWORD *a1)
{
  return sub_1BAC7E88C(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB884(_QWORD *a1)
{
  return sub_1BAC7E8A0(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB898(_QWORD *a1)
{
  return sub_1BAC7EA30(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB8AC(_QWORD *a1)
{
  return sub_1BAC7ED8C(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB8C0(_QWORD *a1)
{
  return sub_1BAC7EF48(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB8D4(_QWORD *a1)
{
  return sub_1BAC7F0EC(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB8E8(uint64_t a1)
{
  return sub_1BAC7F298(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB8FC(_QWORD *a1)
{
  return sub_1BAC80D78(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB910(_QWORD *a1)
{
  return sub_1BAC80F24(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB924(_QWORD *a1)
{
  return sub_1BAC810E0(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB938(_QWORD *a1)
{
  return sub_1BAC81280(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB94C(_QWORD *a1)
{
  return sub_1BAC815A8(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB960(_QWORD *a1)
{
  return sub_1BAC818F4(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB974(uint64_t a1)
{
  return sub_1BAC81DE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB988(uint64_t a1)
{
  return sub_1BAC82104(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB99C(uint64_t a1)
{
  return sub_1BAC7E24C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACAB9B0(_QWORD *a1)
{
  return sub_1BAC82280(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB9C4(_QWORD *a1)
{
  return sub_1BAC80B94(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB9D8(_QWORD *a1)
{
  return sub_1BAC82294(0, a1[2], 0, a1);
}

uint64_t sub_1BACAB9EC(_QWORD *a1)
{
  return sub_1BAC822A8(0, a1[2], 0, a1);
}

uint64_t sub_1BACABA00(_QWORD *a1)
{
  return sub_1BAC82AC4(0, a1[2], 0, a1);
}

uint64_t sub_1BACABA14(_QWORD *a1)
{
  return sub_1BAC82C78(0, a1[2], 0, a1);
}

uint64_t sub_1BACABA28(uint64_t a1)
{
  return sub_1BAC82E18(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BACABA3C(_QWORD *a1)
{
  return sub_1BAC82FAC(0, a1[2], 0, a1);
}

uint64_t sub_1BACABA50(_QWORD *a1)
{
  return sub_1BAC86440(0, a1[2], 0, a1);
}

uint64_t sub_1BACABA64(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[25];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[3];

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = (uint64_t)(v2 + 4);
    v7 = v1 - 1;
    v8 = 32;
    v25 = result;
    for (i = v2; ; i = v2)
    {
      v10 = *(_OWORD *)(v3 + v8 + 112);
      v40 = *(_OWORD *)(v3 + v8 + 96);
      v41[0] = v10;
      *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)(v3 + v8 + 121);
      v11 = *(_OWORD *)(v3 + v8 + 48);
      v36 = *(_OWORD *)(v3 + v8 + 32);
      v37 = v11;
      v12 = *(_OWORD *)(v3 + v8 + 80);
      v38 = *(_OWORD *)(v3 + v8 + 64);
      v39 = v12;
      v13 = *(_OWORD *)(v3 + v8 + 16);
      v34 = *(_OWORD *)(v3 + v8);
      v35 = v13;
      if (v4)
      {
        result = sub_1BA8D1F08((uint64_t)&v34);
        v2 = i;
        goto LABEL_21;
      }
      v14 = i[3];
      if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_31;
      v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
      v16 = v15 <= 1 ? 1 : v15;
      sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B12B0, (uint64_t)&qword_1EF2B12B8, (uint64_t)&type metadata for FeedIssue, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
      v2 = (_QWORD *)swift_allocObject();
      v17 = (uint64_t)(_swift_stdlib_malloc_size(v2) - 32) / 152;
      v2[2] = v16;
      v2[3] = 2 * v17;
      v18 = i[3] >> 1;
      v19 = 19 * v18;
      v4 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v18;
      v6 = (uint64_t)&v2[19 * v18 + 4];
      if (i[2])
        break;
      sub_1BA8D1F08((uint64_t)&v34);
      result = swift_release();
LABEL_20:
      v3 = v25;
LABEL_21:
      v32 = v40;
      *(_OWORD *)v33 = v41[0];
      *(_OWORD *)&v33[9] = *(_OWORD *)((char *)v41 + 9);
      v28 = v36;
      v29 = v37;
      v30 = v38;
      v31 = v39;
      v26 = v34;
      v27 = v35;
      v21 = __OFSUB__(v4--, 1);
      if (v21)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      *(_QWORD *)v6 = v5;
      *(_OWORD *)(v6 + 8) = v26;
      *(_OWORD *)(v6 + 72) = v30;
      *(_OWORD *)(v6 + 56) = v29;
      *(_OWORD *)(v6 + 40) = v28;
      *(_OWORD *)(v6 + 24) = v27;
      *(_OWORD *)(v6 + 129) = *(_OWORD *)&v33[9];
      *(_OWORD *)(v6 + 120) = *(_OWORD *)v33;
      *(_OWORD *)(v6 + 104) = v32;
      *(_OWORD *)(v6 + 88) = v31;
      if (v7 == v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      v6 += 152;
      v8 += 144;
      ++v5;
    }
    if (v2 < i || v2 + 4 >= &i[v19 + 4])
    {
      sub_1BA8D1F08((uint64_t)&v34);
    }
    else
    {
      sub_1BA8D1F08((uint64_t)&v34);
      if (v2 == i)
        goto LABEL_19;
    }
    memmove(v2 + 4, i + 4, v19 * 8);
LABEL_19:
    i[2] = 0;
    result = swift_release();
    goto LABEL_20;
  }
  v4 = 0;
LABEL_26:
  v22 = v2[3];
  if (v22 >= 2)
  {
    v23 = v22 >> 1;
    v21 = __OFSUB__(v23, v4);
    v24 = v23 - v4;
    if (v21)
      goto LABEL_32;
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

uint64_t sub_1BACABCF8(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = (uint64_t)(v2 + 4);
    v25 = v1;
    v6 = (_QWORD *)(result + 88);
    while (1)
    {
      v7 = *((_BYTE *)v6 - 40);
      v8 = *(v6 - 4);
      v9 = *(_OWORD *)(v6 - 3);
      v10 = *(v6 - 1);
      v11 = *v6;
      v28 = *(_OWORD *)(v6 - 7);
      v29 = v9;
      if (v3)
      {
        sub_1BA75A650(v8, v9);
        swift_bridgeObjectRetain();
        result = swift_unknownObjectRetain();
        goto LABEL_20;
      }
      v12 = v2[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_29;
      v27 = *(v6 - 4);
      v26 = *((_BYTE *)v6 - 40);
      v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1)
        v14 = 1;
      else
        v14 = v13;
      sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B17D8, (uint64_t)&unk_1EF2B17E0, (uint64_t)&type metadata for FeedPuzzleType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
      v15 = (_QWORD *)swift_allocObject();
      v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 72;
      v15[2] = v14;
      v15[3] = 2 * v16;
      v17 = v2[2];
      v18 = v2;
      v19 = v2[3] >> 1;
      v5 = (uint64_t)&v15[9 * v19 + 4];
      v3 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      if (!v17)
      {
        sub_1BA75A650(v27, v29);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        result = swift_release();
        v2 = v15;
        v8 = v27;
        v1 = v25;
        v7 = v26;
        goto LABEL_20;
      }
      if (v15 < v18 || v15 + 4 >= &v18[9 * v19 + 4])
      {
        sub_1BA75A650(v27, v29);
      }
      else
      {
        sub_1BA75A650(v27, v29);
        if (v15 == v18)
          goto LABEL_19;
      }
      memmove(v15 + 4, v18 + 4, 72 * v19);
LABEL_19:
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v18[2] = 0;
      result = swift_release();
      v2 = v15;
      v1 = v25;
      v7 = v26;
      v8 = v27;
LABEL_20:
      v21 = __OFSUB__(v3--, 1);
      if (v21)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        return result;
      }
      *(_QWORD *)v5 = v4;
      *(_OWORD *)(v5 + 8) = v28;
      *(_BYTE *)(v5 + 24) = v7;
      *(_QWORD *)(v5 + 32) = v8;
      *(_OWORD *)(v5 + 40) = v29;
      *(_QWORD *)(v5 + 56) = v10;
      *(_QWORD *)(v5 + 64) = v11;
      v5 += 72;
      v6 += 8;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v3 = 0;
LABEL_24:
  v22 = v2[3];
  if (v22 >= 2)
  {
    v23 = v22 >> 1;
    v21 = __OFSUB__(v23, v3);
    v24 = v23 - v3;
    if (v21)
      goto LABEL_30;
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

uint64_t sub_1BACABF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD v29[10];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = MEMORY[0x1E0DEE9D8] + 32;
    while (1)
    {
      result = sub_1BA93EB58(v6, (uint64_t)v29);
      v39 = v29[8];
      v40 = v29[9];
      v41 = v30;
      v35 = v29[4];
      v36 = v29[5];
      v37 = v29[6];
      v38 = v29[7];
      v31 = v29[0];
      v32 = v29[1];
      v33 = v29[2];
      v34 = v29[3];
      if (!v5)
      {
        v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B17C0, (uint64_t)&qword_1ED3A1038, (uint64_t)&type metadata for FeedPuzzle, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 176;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v3[3] >> 1;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[22 * v15 + 4])
            memmove(v12 + 4, v3 + 4, 176 * v15);
          v3[2] = 0;
        }
        v7 = v14 + 176 * v15;
        v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v3 = v12;
      }
      v17 = __OFSUB__(v5--, 1);
      if (v17)
        break;
      *(_QWORD *)v7 = v4;
      v18 = v39;
      v19 = v40;
      *(_QWORD *)(v7 + 168) = v41;
      v20 = v31;
      v21 = v32;
      v22 = v34;
      *(_OWORD *)(v7 + 40) = v33;
      *(_OWORD *)(v7 + 24) = v21;
      *(_OWORD *)(v7 + 8) = v20;
      v23 = v35;
      v24 = v36;
      v25 = v38;
      *(_OWORD *)(v7 + 104) = v37;
      *(_OWORD *)(v7 + 88) = v24;
      *(_OWORD *)(v7 + 72) = v23;
      *(_OWORD *)(v7 + 56) = v22;
      *(_OWORD *)(v7 + 152) = v19;
      *(_OWORD *)(v7 + 136) = v18;
      *(_OWORD *)(v7 + 120) = v25;
      v7 += 176;
      v6 += 168;
      if (v1 == ++v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = 0;
LABEL_21:
  result = swift_bridgeObjectRelease();
  v26 = v3[3];
  if (v26 < 2)
    return (uint64_t)v3;
  v27 = v26 >> 1;
  v17 = __OFSUB__(v27, v5);
  v28 = v27 - v5;
  if (!v17)
  {
    v3[2] = v28;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BACAC1C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD v29[9];
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = MEMORY[0x1E0DEE9D8] + 32;
    while (1)
    {
      result = sub_1BA6A955C(v6, (uint64_t)v29);
      v37 = v29[6];
      v38 = v29[7];
      v39 = v29[8];
      v40 = v30;
      v33 = v29[2];
      v34 = v29[3];
      v35 = v29[4];
      v36 = v29[5];
      v31 = v29[0];
      v32 = v29[1];
      if (!v5)
      {
        v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        sub_1BA6AA3C0(0, (unint64_t *)&qword_1ED3AB9D0, (uint64_t)&qword_1ED3AB1A8, (uint64_t)&type metadata for FeedTag, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 160;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v3[3] >> 1;
        v16 = 20 * v15;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[v16 + 4])
            memmove(v12 + 4, v3 + 4, 160 * v15);
          v3[2] = 0;
        }
        v7 = v14 + v16 * 8;
        v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v3 = v12;
      }
      v18 = __OFSUB__(v5--, 1);
      if (v18)
        break;
      *(_QWORD *)v7 = v4;
      v19 = v37;
      v20 = v38;
      v21 = v39;
      *(_BYTE *)(v7 + 152) = v40;
      v22 = v31;
      *(_OWORD *)(v7 + 24) = v32;
      *(_OWORD *)(v7 + 8) = v22;
      v23 = v33;
      v24 = v34;
      v25 = v35;
      *(_OWORD *)(v7 + 88) = v36;
      *(_OWORD *)(v7 + 72) = v25;
      *(_OWORD *)(v7 + 56) = v24;
      *(_OWORD *)(v7 + 40) = v23;
      *(_OWORD *)(v7 + 136) = v21;
      *(_OWORD *)(v7 + 120) = v20;
      *(_OWORD *)(v7 + 104) = v19;
      v7 += 160;
      v6 += 152;
      if (v1 == ++v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = 0;
LABEL_21:
  result = swift_bridgeObjectRelease();
  v26 = v3[3];
  if (v26 < 2)
    return (uint64_t)v3;
  v27 = v26 >> 1;
  v18 = __OFSUB__(v27, v5);
  v28 = v27 - v5;
  if (!v18)
  {
    v3[2] = v28;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

size_t sub_1BACAC3F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t *v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t result;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  unint64_t *v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v50 = a4;
  v51 = a2;
  sub_1BA6AA10C(0, a2, a3);
  v57 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v55 = (_QWORD *)((char *)v49 - v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v49 - v11;
  v58 = v13;
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v54 = v15;
  v49[1] = a1;
  if (v15)
  {
    v52 = (v14 + 32) & ~v14;
    v17 = MEMORY[0x1E0DEE9D8] + v52;
    v18 = 0;
    v19 = 0;
    v20 = *(_QWORD *)(((uint64_t (*)(_QWORD))a3)(0) - 8);
    v21 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v53 = *(_QWORD *)(v20 + 72);
    v49[2] = v14 | 7;
    v22 = v16;
    v23 = v51;
    while (1)
    {
      v25 = v57;
      v26 = (uint64_t)v12;
      v27 = (uint64_t)&v56[*(int *)(v57 + 48)];
      sub_1BA4C2DD8(v21, v27, (uint64_t (*)(_QWORD))a3);
      v28 = *(int *)(v25 + 48);
      v29 = (uint64_t)v55;
      v30 = (uint64_t)v55 + v28;
      *v55 = v18;
      v31 = v27;
      v12 = (char *)v26;
      sub_1BA5193C4(v31, v30, (uint64_t (*)(_QWORD))a3);
      result = sub_1BA7EF5CC(v29, v26, v23, a3);
      if (v19)
      {
        v16 = v22;
        v24 = __OFSUB__(v19--, 1);
        if (v24)
          goto LABEL_27;
      }
      else
      {
        v33 = v22[3];
        if ((uint64_t)((v33 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        v34 = v33 & 0xFFFFFFFFFFFFFFFELL;
        if (v34 <= 1)
          v35 = 1;
        else
          v35 = v34;
        sub_1BA6AA3C0(0, v50, (uint64_t)v23, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA6AA10C);
        v36 = *(_QWORD *)(v58 + 72);
        v37 = v52;
        v16 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v16);
        if (!v36)
          goto LABEL_34;
        v38 = result - v37;
        if (result - v37 == 0x8000000000000000 && v36 == -1)
          goto LABEL_35;
        v40 = v38 / v36;
        v16[2] = v35;
        v16[3] = 2 * (v38 / v36);
        v41 = (char *)v16 + v37;
        v42 = v22[3] >> 1;
        v43 = v42 * v36;
        if (v22[2])
        {
          if (v16 < v22 || v41 >= (char *)v22 + v52 + v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v16 != v22)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v22[2] = 0;
        }
        v17 = (uint64_t)&v41[v43];
        v45 = (v40 & 0x7FFFFFFFFFFFFFFFLL) - v42;
        swift_release();
        v23 = v51;
        v12 = (char *)v26;
        v24 = __OFSUB__(v45, 1);
        v19 = v45 - 1;
        if (v24)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v18;
      sub_1BA7EF5CC((uint64_t)v12, v17, v23, a3);
      v17 += *(_QWORD *)(v58 + 72);
      v21 += v53;
      v22 = v16;
      if (v54 == v18)
        goto LABEL_29;
    }
  }
  v19 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v46 = v16[3];
  if (v46 >= 2)
  {
    v47 = v46 >> 1;
    v24 = __OFSUB__(v47, v19);
    v48 = v47 - v19;
    if (v24)
      goto LABEL_36;
    v16[2] = v48;
  }
  return (size_t)v16;
}

uint64_t sub_1BACAC708(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = result;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v7 = MEMORY[0x1E0DEE9D8] + 32;
    v25 = swift_bridgeObjectRetain();
    v24 = v1;
    while (1)
    {
      result = *(_QWORD *)(v3 + v4 + 40);
      v30 = *(_QWORD *)(v3 + v4 + 32);
      v31 = *(_OWORD *)(v3 + v4 + 48);
      v29 = *(_BYTE *)(v3 + v4 + 64);
      v8 = *(_QWORD *)(v3 + v4 + 80);
      v9 = *(_QWORD *)(v3 + v4 + 96);
      v27 = *(_QWORD *)(v3 + v4 + 88);
      v28 = *(_QWORD *)(v3 + v4 + 72);
      v11 = *(_QWORD *)(v3 + v4 + 104);
      v10 = *(_QWORD *)(v3 + v4 + 112);
      v32 = result;
      if (v5)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_1BA75A650(v11, v10);
        v12 = __OFSUB__(v5--, 1);
        if (v12)
          goto LABEL_30;
        goto LABEL_23;
      }
      v13 = v26[3];
      if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_31;
      v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if (v14 <= 1)
        v15 = 1;
      else
        v15 = v14;
      sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B1300, (uint64_t)&qword_1EF2B1308, (uint64_t)&type metadata for FeedGapOffline, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
      v16 = (_QWORD *)swift_allocObject();
      v17 = (uint64_t)(_swift_stdlib_malloc_size(v16) - 32) / 96;
      v16[2] = v15;
      v16[3] = 2 * v17;
      v18 = v26[3] >> 1;
      v7 = (uint64_t)&v16[12 * v18 + 4];
      v19 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v18;
      if (!v26[2])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(v11, v10);
        goto LABEL_22;
      }
      if (v16 < v26 || v16 + 4 >= &v26[12 * v18 + 4])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(v11, v10);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(v11, v10);
        if (v16 == v26)
          goto LABEL_21;
      }
      memmove(v16 + 4, v26 + 4, 96 * v18);
LABEL_21:
      v26[2] = 0;
LABEL_22:
      result = swift_release();
      v26 = v16;
      v1 = v24;
      v3 = v25;
      v12 = __OFSUB__(v19, 1);
      v5 = v19 - 1;
      if (v12)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
LABEL_23:
      *(_QWORD *)v7 = v6;
      *(_QWORD *)(v7 + 8) = v30;
      *(_QWORD *)(v7 + 16) = v32;
      *(_OWORD *)(v7 + 24) = v31;
      *(_BYTE *)(v7 + 40) = v29;
      *(_QWORD *)(v7 + 48) = v28;
      *(_QWORD *)(v7 + 56) = v8;
      *(_QWORD *)(v7 + 64) = v27;
      *(_QWORD *)(v7 + 72) = v9;
      *(_QWORD *)(v7 + 80) = v11;
      *(_QWORD *)(v7 + 88) = v10;
      v7 += 96;
      v4 += 88;
      if (v1 == ++v6)
      {
        result = swift_bridgeObjectRelease();
        v2 = v26;
        goto LABEL_26;
      }
    }
  }
  v5 = 0;
LABEL_26:
  v21 = v2[3];
  if (v21 >= 2)
  {
    v22 = v21 >> 1;
    v12 = __OFSUB__(v22, v5);
    v23 = v22 - v5;
    if (v12)
      goto LABEL_32;
    v2[2] = v23;
  }
  return (uint64_t)v2;
}

uint64_t sub_1BACAC9E0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *__src;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  __int128 v30;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = (uint64_t)(v2 + 4);
    v25 = v1;
    v6 = (unint64_t *)(result + 80);
    while (1)
    {
      v7 = *(v6 - 6);
      v8 = *(v6 - 5);
      v30 = *((_OWORD *)v6 - 2);
      v29 = *((_BYTE *)v6 - 16);
      v9 = *(v6 - 1);
      v10 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        result = sub_1BA75A650(v9, v10);
        v11 = __OFSUB__(v3--, 1);
        if (v11)
          goto LABEL_30;
        goto LABEL_23;
      }
      v12 = v2[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_31;
      v28 = *(v6 - 6);
      v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1)
        v14 = 1;
      else
        v14 = v13;
      sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B12E8, (uint64_t)&unk_1EF2B12F0, (uint64_t)&type metadata for FeedGap, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
      v15 = (_QWORD *)swift_allocObject();
      v16 = _swift_stdlib_malloc_size(v15);
      v17 = v16 - 32;
      if (v16 < 32)
        v17 = v16 + 31;
      v18 = v17 >> 6;
      v15[2] = v14;
      v15[3] = 2 * v18;
      v19 = v2[3] >> 1;
      v5 = (uint64_t)&v15[8 * v19 + 4];
      v20 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      if (!v2[2])
      {
        swift_bridgeObjectRetain();
        sub_1BA75A650(v9, v10);
        goto LABEL_22;
      }
      __src = v2 + 4;
      v27 = v2;
      if (v15 < v2 || v15 + 4 >= &v2[8 * v19 + 4])
      {
        v21 = v15 + 4;
        swift_bridgeObjectRetain();
        sub_1BA75A650(v9, v10);
      }
      else
      {
        v21 = v15 + 4;
        swift_bridgeObjectRetain();
        sub_1BA75A650(v9, v10);
        if (v15 == v27)
          goto LABEL_21;
      }
      memmove(v21, __src, v19 << 6);
LABEL_21:
      v27[2] = 0;
LABEL_22:
      result = swift_release();
      v2 = v15;
      v1 = v25;
      v7 = v28;
      v11 = __OFSUB__(v20, 1);
      v3 = v20 - 1;
      if (v11)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
LABEL_23:
      v6 += 7;
      *(_QWORD *)v5 = v4;
      *(_QWORD *)(v5 + 8) = v7;
      *(_QWORD *)(v5 + 16) = v8;
      *(_OWORD *)(v5 + 24) = v30;
      *(_BYTE *)(v5 + 40) = v29;
      *(_QWORD *)(v5 + 48) = v9;
      *(_QWORD *)(v5 + 56) = v10;
      v5 += 64;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  v3 = 0;
LABEL_26:
  v22 = v2[3];
  if (v22 >= 2)
  {
    v23 = v22 >> 1;
    v11 = __OFSUB__(v23, v3);
    v24 = v23 - v3;
    if (v11)
      goto LABEL_32;
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

uint64_t sub_1BACACC30(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const void *v18;
  BOOL v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  if (a1 >> 62)
    goto LABEL_46;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_53;
      }
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v4 = 0;
      v5 = 0;
      v6 = (char *)MEMORY[0x1E0DEE9D8];
      v7 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      while (1)
      {
        v8 = MEMORY[0x1BCCE4630](v5, a1);
        if (!v4)
        {
          v9 = *((_QWORD *)v6 + 3);
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_44;
          v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1)
            v11 = 1;
          else
            v11 = v10;
          sub_1BA6AA3C0(0, &qword_1EF2B1298, (uint64_t)&unk_1EF2B12A0, (uint64_t)MEMORY[0x1E0DB6B18], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA6AA10C);
          v12 = (char *)swift_allocObject();
          v13 = _swift_stdlib_malloc_size(v12);
          v14 = v13 - 32;
          if (v13 < 32)
            v14 = v13 - 17;
          v15 = v14 >> 4;
          *((_QWORD *)v12 + 2) = v11;
          *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
          v16 = (unint64_t)(v12 + 32);
          v17 = *((_QWORD *)v6 + 3) >> 1;
          if (*((_QWORD *)v6 + 2))
          {
            v18 = v6 + 32;
            if (v12 != v6 || v16 >= (unint64_t)v18 + 16 * v17)
              memmove(v12 + 32, v18, 16 * v17);
            *((_QWORD *)v6 + 2) = 0;
          }
          v7 = (_QWORD *)(v16 + 16 * v17);
          v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release();
          v6 = v12;
        }
        v19 = __OFSUB__(v4--, 1);
        if (v19)
          break;
        *v7 = v5;
        v7[1] = v8;
        v7 += 2;
        if (v2 == ++v5)
          goto LABEL_41;
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      swift_bridgeObjectRetain();
      result = sub_1BB873F30();
      v2 = result;
      if (!result)
        goto LABEL_47;
    }
    v4 = 0;
    v20 = 0;
    v6 = (char *)MEMORY[0x1E0DEE9D8];
    v21 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v22 = MEMORY[0x1E0DB6B18];
    do
    {
      v23 = *(_QWORD *)(a1 + 8 * v20 + 32);
      if (v4)
      {
        swift_retain();
        v19 = __OFSUB__(v4--, 1);
        if (v19)
          goto LABEL_43;
      }
      else
      {
        v24 = *((_QWORD *)v6 + 3);
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_45;
        v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1)
          v26 = 1;
        else
          v26 = v25;
        sub_1BA6AA3C0(0, &qword_1EF2B1298, (uint64_t)&unk_1EF2B12A0, (uint64_t)v22, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA6AA10C);
        v27 = (char *)swift_allocObject();
        v28 = _swift_stdlib_malloc_size(v27);
        v29 = v28 - 32;
        if (v28 < 32)
          v29 = v28 - 17;
        v30 = v29 >> 4;
        *((_QWORD *)v27 + 2) = v26;
        *((_QWORD *)v27 + 3) = 2 * (v29 >> 4);
        v31 = v27 + 32;
        v32 = *((_QWORD *)v6 + 3) >> 1;
        v21 = &v27[16 * v32 + 32];
        v33 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
        if (*((_QWORD *)v6 + 2))
        {
          v34 = v6 + 32;
          if (v27 != v6 || v31 >= &v34[16 * v32])
            memmove(v31, v34, 16 * v32);
          swift_retain();
          *((_QWORD *)v6 + 2) = 0;
        }
        else
        {
          swift_retain();
        }
        swift_release();
        v6 = v27;
        v19 = __OFSUB__(v33, 1);
        v4 = v33 - 1;
        if (v19)
          goto LABEL_43;
      }
      *(_QWORD *)v21 = v20;
      *((_QWORD *)v21 + 1) = v23;
      v21 += 16;
      ++v20;
    }
    while (v2 != v20);
LABEL_41:
    result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_47:
    result = swift_bridgeObjectRelease();
    v4 = 0;
    v6 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v35 = *((_QWORD *)v6 + 3);
  if (v35 < 2)
    return (uint64_t)v6;
  v36 = v35 >> 1;
  v19 = __OFSUB__(v36, v4);
  v37 = v36 - v4;
  if (!v19)
  {
    *((_QWORD *)v6 + 2) = v37;
    return (uint64_t)v6;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1BACACF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  size_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[288];
  _QWORD __src[37];
  _BYTE __dst[290];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v22 = v1;
    while (1)
    {
      sub_1BA982FE4(v6, (uint64_t)v23);
      __src[0] = v4;
      sub_1BACB39A8(v23, &__src[1]);
      result = (uint64_t)memcpy(__dst, __src, sizeof(__dst));
      if (!v5)
      {
        v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B12C0, (uint64_t)&qword_1EF2B12C8, (uint64_t)&type metadata for FeedCatalogItem, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 296;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v3[3] >> 1;
        v16 = 296 * v15;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[v16 / 8 + 4])
            memmove(v12 + 4, v3 + 4, v16);
          v3[2] = 0;
        }
        v7 = (char *)(v14 + v16);
        v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v3 = v12;
        v1 = v22;
      }
      v18 = __OFSUB__(v5--, 1);
      if (v18)
        break;
      ++v4;
      memcpy(v7, __dst, 0x122uLL);
      v7 += 296;
      v6 += 288;
      if (v1 == v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = 0;
LABEL_21:
  result = swift_bridgeObjectRelease();
  v19 = v3[3];
  if (v19 < 2)
    return (uint64_t)v3;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v5);
  v21 = v20 - v5;
  if (!v18)
  {
    v3[2] = v21;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BACAD144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _OWORD v28[9];
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = MEMORY[0x1E0DEE9D8] + 32;
    while (1)
    {
      result = sub_1BA982E70(v6, (uint64_t)v28);
      v36 = v28[6];
      v37 = v28[7];
      v38 = v28[8];
      v39 = v29;
      v32 = v28[2];
      v33 = v28[3];
      v34 = v28[4];
      v35 = v28[5];
      v30 = v28[0];
      v31 = v28[1];
      if (!v5)
      {
        v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        sub_1BA6AA3C0(0, (unint64_t *)&qword_1EF2B1280, (uint64_t)&unk_1EF2B1288, (uint64_t)&type metadata for FeedCategory, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BACB5E30);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 160;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v3[3] >> 1;
        if (v3[2])
        {
          if (v12 != v3 || v14 >= (unint64_t)&v3[20 * v15 + 4])
            memmove(v12 + 4, v3 + 4, 160 * v15);
          v3[2] = 0;
        }
        v7 = v14 + 160 * v15;
        v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v3 = v12;
      }
      v17 = __OFSUB__(v5--, 1);
      if (v17)
        break;
      *(_QWORD *)v7 = v4;
      v18 = v36;
      v19 = v37;
      v20 = v38;
      *(_QWORD *)(v7 + 152) = v39;
      v21 = v30;
      *(_OWORD *)(v7 + 24) = v31;
      *(_OWORD *)(v7 + 8) = v21;
      v22 = v32;
      v23 = v33;
      v24 = v34;
      *(_OWORD *)(v7 + 88) = v35;
      *(_OWORD *)(v7 + 72) = v24;
      *(_OWORD *)(v7 + 56) = v23;
      *(_OWORD *)(v7 + 40) = v22;
      *(_OWORD *)(v7 + 136) = v20;
      *(_OWORD *)(v7 + 120) = v19;
      *(_OWORD *)(v7 + 104) = v18;
      v7 += 160;
      v6 += 152;
      if (v1 == ++v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = 0;
LABEL_21:
  result = swift_bridgeObjectRelease();
  v25 = v3[3];
  if (v25 < 2)
    return (uint64_t)v3;
  v26 = v25 >> 1;
  v17 = __OFSUB__(v26, v5);
  v27 = v26 - v5;
  if (!v17)
  {
    v3[2] = v27;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupLayoutBindingContext(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    v8 = a2[7];
    *(_QWORD *)(v4 + 48) = a2[6];
    *(_QWORD *)(v4 + 56) = v8;
    v9 = a2[9];
    *(_QWORD *)(v4 + 64) = a2[8];
    *(_QWORD *)(v4 + 72) = v9;
    *(_QWORD *)(v4 + 80) = a2[10];
    *(_BYTE *)(v4 + 88) = *((_BYTE *)a2 + 88);
    v10 = a3[13];
    v18 = (uint64_t)a2 + v10;
    v19 = v4 + v10;
    *(_QWORD *)(v4 + 96) = a2[12];
    v11 = sub_1BB86D8A0();
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v19, v18, v11);
    v12 = a3[15];
    *(_QWORD *)(v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(_QWORD *)(v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    v13 = a3[17];
    *(_BYTE *)(v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *(_QWORD *)(v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[19];
    *(_QWORD *)(v4 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(_QWORD *)(v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t assignWithCopy for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[13];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  return a1;
}

uint64_t initializeWithTake for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v8 = a3[13];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v11 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v7 = a3[13];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  v11 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_1BACAD874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86D8A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t sub_1BACAD8F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86D8A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

_QWORD *assignWithCopy for GroupLayoutBindingContext.OrderedItemBinding(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  return a1;
}

uint64_t assignWithTake for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for GroupLayoutBindingContext.OrderedItemBinding()
{
  return &type metadata for GroupLayoutBindingContext.OrderedItemBinding;
}

uint64_t sub_1BACADA48(uint64_t a1, _OWORD *a2, uint64_t a3, _OWORD *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unsigned __int8 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD v53[2];

  v6 = a2[4];
  v44 = a2[5];
  v7 = a2[5];
  v45 = a2[6];
  v8 = a2[6];
  v46[0] = a2[7];
  *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)a2 + 121);
  v9 = a2[1];
  v10 = a2[3];
  v41 = a2[2];
  v42 = v10;
  v11 = a2[3];
  v43 = a2[4];
  v12 = a2[1];
  v40[0] = *a2;
  v40[1] = v12;
  v13 = a4[6];
  v14 = a4[4];
  v51 = a4[5];
  v52 = v13;
  v15 = a4[6];
  v53[0] = a4[7];
  *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)a4 + 121);
  v16 = a4[1];
  v17 = a4[3];
  v48 = a4[2];
  v49 = v17;
  v18 = a4[3];
  v50 = a4[4];
  v19 = a4[1];
  v47[0] = *a4;
  v47[1] = v19;
  v37 = v7;
  v38 = v8;
  v39[0] = a2[7];
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)a2 + 121);
  v33 = v9;
  v34 = v41;
  v35 = v11;
  v36 = v6;
  v32 = v40[0];
  v28 = v51;
  v29 = v15;
  v30[0] = a4[7];
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)a4 + 121);
  v24 = v16;
  v25 = v48;
  v26 = v18;
  v27 = v14;
  v31 = a1;
  v22 = a3;
  v23 = v47[0];
  sub_1BA8D1F08((uint64_t)v40);
  sub_1BA8D1F08((uint64_t)v47);
  a5(&v21, &v31, &v22);
  sub_1BA8D1FE4((uint64_t)v47);
  sub_1BA8D1FE4((uint64_t)v40);
  return v21;
}

uint64_t sub_1BACADB98(uint64_t a1, __int128 *a2, uint64_t a3, __int128 *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *((_BYTE *)a2 + 16);
  v7 = *((_QWORD *)a2 + 3);
  v8 = *((_QWORD *)a2 + 6);
  v9 = *((_QWORD *)a2 + 7);
  v10 = *((_BYTE *)a4 + 16);
  v11 = *((_QWORD *)a4 + 3);
  v12 = *((_QWORD *)a4 + 6);
  v23 = *((_QWORD *)a4 + 7);
  v24 = a1;
  v25 = *a2;
  v26 = v6;
  v27 = v7;
  v28 = a2[2];
  v29 = v8;
  v30 = v9;
  v17 = a3;
  v18 = *a4;
  v19 = v10;
  v20 = v11;
  v21 = a4[2];
  v15 = v21;
  v13 = v28;
  v22 = v12;
  sub_1BA75A650(v7, v28);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BA75A650(v11, v21);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  a5(&v16, &v24, &v17);
  sub_1BA6E0CBC(v11, v15);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v7, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BACADCD0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, _QWORD *, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int8 v25;
  _QWORD v26[3];
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[3];
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((_BYTE *)a2 + 32);
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v12 = a2[9];
  v13 = a2[10];
  v14 = *a4;
  v15 = a4[1];
  v16 = *((_BYTE *)a4 + 32);
  v17 = a4[5];
  v18 = a4[6];
  v19 = a4[7];
  v20 = a4[8];
  v21 = a4[9];
  v22 = a4[10];
  v35[0] = a1;
  v35[1] = v5;
  v35[2] = v6;
  v36 = *((_OWORD *)a2 + 1);
  v37 = v7;
  v38 = v8;
  v39 = v9;
  v40 = v10;
  v41 = v11;
  v42 = v12;
  v43 = v13;
  v26[0] = a3;
  v26[1] = v14;
  v26[2] = v15;
  v27 = *((_OWORD *)a4 + 1);
  v28 = v16;
  v29 = v17;
  v30 = v18;
  v31 = v19;
  v32 = v20;
  v33 = v21;
  v34 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA75A650(v12, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA75A650(v21, v22);
  a5(&v25, v35, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v12, v13);
  return v25;
}

uint64_t sub_1BACADE30(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, _QWORD *, _QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unsigned __int8 v17;
  _QWORD v18[3];
  __int128 v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[3];
  __int128 v24;
  char v25;
  uint64_t v26;
  unint64_t v27;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 32);
  v9 = a2[5];
  v10 = a2[6];
  v11 = *a4;
  v12 = a4[1];
  v13 = *((_BYTE *)a4 + 32);
  v14 = a4[5];
  v15 = a4[6];
  v23[0] = a1;
  v23[1] = v6;
  v23[2] = v7;
  v24 = *((_OWORD *)a2 + 1);
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v18[0] = a3;
  v18[1] = v11;
  v18[2] = v12;
  v19 = *((_OWORD *)a4 + 1);
  v20 = v13;
  v21 = v14;
  v22 = v15;
  swift_bridgeObjectRetain();
  sub_1BA75A650(v9, v10);
  swift_bridgeObjectRetain();
  sub_1BA75A650(v14, v15);
  a5(&v17, v23, v18);
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v14, v15);
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v9, v10);
  return v17;
}

uint64_t sub_1BACADF1C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(unsigned __int8 *__return_ptr, _QWORD *, _QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v9;
  _QWORD v10[2];
  _QWORD v11[2];

  v6 = *a2;
  v7 = *a4;
  v11[0] = a1;
  v11[1] = v6;
  v10[0] = a3;
  v10[1] = v7;
  swift_retain();
  swift_retain();
  a5(&v9, v11, v10);
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_1BACADF90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a3 != a2)
  {
    v5 = result;
    v6 = *a4;
    v7 = (_QWORD *)(*a4 + 16 * a3);
    v15 = result;
LABEL_4:
    v8 = (uint64_t *)(v6 + 16 * a3);
    v9 = *v8;
    v10 = v8[1];
    v17 = v7;
    v18 = a3;
    while (1)
    {
      v11 = *(v7 - 2);
      v12 = *(v7 - 1);
      v22 = v10;
      v21 = v12;
      swift_retain();
      swift_retain();
      v13 = a5(v9, &v22, v11, &v21);
      swift_release();
      result = swift_release();
      if (v20)
        break;
      if ((v13 & 1) == 0)
      {
        v14 = v18;
LABEL_11:
        a3 = v14 + 1;
        v7 = v17 + 2;
        v5 = v15;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      if (!v6)
      {
        __break(1u);
        return result;
      }
      v9 = *v7;
      v10 = v7[1];
      *(_OWORD *)v7 = *((_OWORD *)v7 - 1);
      *(v7 - 1) = v10;
      *(v7 - 2) = v9;
      v7 -= 2;
      ++v5;
      v14 = v18;
      if (v18 == v5)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BACAE0B0(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t *, uint64_t, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;

  v3 = v2;
  v5 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_139;
    if (v5)
      return sub_1BACADF90(0, v5, 1, a1, a2);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_148;
  v109 = result;
  v105 = a1;
  if (v5 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v114 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v110 = MEMORY[0x1E0DEE9D8];
    if (v5 != 1)
    {
      v37 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_102:
      if (v37 >= 2)
      {
        v95 = *v105;
        do
        {
          v96 = v37 - 2;
          if (v37 < 2)
            goto LABEL_134;
          if (!v95)
            goto LABEL_147;
          v97 = v10;
          v98 = v10 + 32;
          v99 = *(_QWORD *)&v10[16 * v96 + 32];
          v100 = *(_QWORD *)&v10[16 * v37 + 24];
          sub_1BACA9744((char *)(v95 + 16 * v99), (char *)(v95 + 16 * *(_QWORD *)&v98[16 * v37 - 16]), v95 + 16 * v100, v114, a2);
          if (v3)
            break;
          if (v100 < v99)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BACAB464((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_136;
          v101 = &v97[16 * v96 + 32];
          *(_QWORD *)v101 = v99;
          *((_QWORD *)v101 + 1) = v100;
          v102 = *((_QWORD *)v97 + 2);
          if (v37 > v102)
            goto LABEL_137;
          v10 = v97;
          memmove(&v97[16 * v37 + 16], &v97[16 * v37 + 32], 16 * (v102 - v37));
          *((_QWORD *)v97 + 2) = v102 - 1;
          v37 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
LABEL_116:
      *(_QWORD *)(v110 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v7 >> 1;
    sub_1BA6AA10C(0, (unint64_t *)&unk_1EF2B12A0, (void (*)(uint64_t))MEMORY[0x1E0DB6B18]);
    v9 = sub_1BB872E74();
    *(_QWORD *)(v9 + 16) = v8;
    v110 = v9;
    v114 = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v106 = *a1 + 24;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v111 = v5;
  v115 = *a1;
  while (1)
  {
    v13 = v11 + 1;
    if (v11 + 1 < v5)
    {
      v14 = (uint64_t *)(v12 + 16 * v13);
      v15 = *v14;
      v16 = v14[1];
      v17 = (uint64_t *)(v12 + 16 * v11);
      v18 = *v17;
      v19 = v17[1];
      v118 = v16;
      v117 = v19;
      swift_retain();
      swift_retain();
      v112 = a2(v15, &v118, v18, &v117);
      if (v3)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_116;
      }
      swift_release();
      swift_release();
      v13 = v11 + 2;
      v5 = v111;
      if (v11 + 2 < v111)
      {
        v107 = v11;
        v20 = (_QWORD *)(v106 + 16 * v11);
        v21 = v20;
        while (1)
        {
          v22 = v13;
          v23 = v21[2];
          v21 += 2;
          v24 = *(v20 - 1);
          v25 = *v20;
          v26 = v20[1];
          v118 = v23;
          v117 = v25;
          swift_retain();
          swift_retain();
          LODWORD(v26) = a2(v26, &v118, v24, &v117);
          swift_release();
          swift_release();
          if (((v112 ^ v26) & 1) != 0)
            break;
          ++v13;
          v20 = v21;
          v5 = v111;
          if (v111 == v22 + 1)
          {
            v13 = v111;
            goto LABEL_21;
          }
        }
        v5 = v111;
LABEL_21:
        v3 = 0;
        v11 = v107;
      }
      v12 = v115;
      if ((v112 & 1) != 0)
      {
        if (v13 < v11)
          goto LABEL_143;
        if (v11 < v13)
        {
          v27 = 16 * v13;
          v28 = 16 * v11;
          v29 = v13;
          v30 = v11;
          do
          {
            if (v30 != --v29)
            {
              if (!v115)
                goto LABEL_146;
              v31 = v115 + v27;
              v32 = *(_QWORD *)(v115 + v28);
              v33 = *(_QWORD *)(v115 + v28 + 8);
              *(_OWORD *)(v115 + v28) = *(_OWORD *)(v115 + v27 - 16);
              *(_QWORD *)(v31 - 16) = v32;
              *(_QWORD *)(v31 - 8) = v33;
            }
            ++v30;
            v27 -= 16;
            v28 += 16;
          }
          while (v30 < v29);
        }
      }
    }
    if (v13 >= v5)
      goto LABEL_39;
    if (__OFSUB__(v13, v11))
      goto LABEL_140;
    if (v13 - v11 >= v109)
      goto LABEL_39;
    v34 = v11 + v109;
    if (__OFADD__(v11, v109))
      goto LABEL_141;
    if (v34 >= v5)
      v34 = v5;
    if (v34 < v11)
      break;
    if (v13 != v34)
    {
      v103 = v34;
      v86 = (_QWORD *)(v12 + 16 * v13);
      v108 = v11;
      do
      {
        v87 = (uint64_t *)(v12 + 16 * v13);
        v88 = *v87;
        v89 = v87[1];
        v104 = v86;
        while (1)
        {
          v90 = *(v86 - 2);
          v91 = *(v86 - 1);
          v118 = v89;
          v117 = v91;
          swift_retain();
          swift_retain();
          v92 = a2(v88, &v118, v90, &v117);
          if (v3)
            goto LABEL_114;
          v93 = v92;
          swift_release();
          swift_release();
          if ((v93 & 1) == 0)
            break;
          v12 = v115;
          if (!v115)
            goto LABEL_145;
          v88 = *v86;
          v89 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v89;
          *(v86 - 2) = v88;
          v86 -= 2;
          if (v13 == ++v11)
            goto LABEL_97;
        }
        v12 = v115;
LABEL_97:
        ++v13;
        v86 = v104 + 2;
        v11 = v108;
      }
      while (v13 != v103);
      v13 = v103;
      v3 = 0;
      if (v103 < v108)
        goto LABEL_138;
      goto LABEL_40;
    }
LABEL_39:
    if (v13 < v11)
      goto LABEL_138;
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v36 = *((_QWORD *)v10 + 2);
    v35 = *((_QWORD *)v10 + 3);
    v37 = v36 + 1;
    v12 = v115;
    if (v36 >= v35 >> 1)
    {
      v94 = sub_1BACAA368((char *)(v35 > 1), v36 + 1, 1, v10);
      v12 = v115;
      v10 = v94;
    }
    *((_QWORD *)v10 + 2) = v37;
    v38 = v10 + 32;
    v39 = &v10[16 * v36 + 32];
    *(_QWORD *)v39 = v11;
    *((_QWORD *)v39 + 1) = v13;
    v113 = v13;
    if (v36)
    {
      while (1)
      {
        v40 = v37 - 1;
        if (v37 >= 4)
        {
          v45 = &v38[16 * v37];
          v46 = *((_QWORD *)v45 - 8);
          v47 = *((_QWORD *)v45 - 7);
          v51 = __OFSUB__(v47, v46);
          v48 = v47 - v46;
          if (v51)
            goto LABEL_123;
          v50 = *((_QWORD *)v45 - 6);
          v49 = *((_QWORD *)v45 - 5);
          v51 = __OFSUB__(v49, v50);
          v43 = v49 - v50;
          v44 = v51;
          if (v51)
            goto LABEL_124;
          v52 = v37 - 2;
          v53 = &v38[16 * v37 - 32];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v51 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v51)
            goto LABEL_126;
          v51 = __OFADD__(v43, v56);
          v57 = v43 + v56;
          if (v51)
            goto LABEL_129;
          if (v57 >= v48)
          {
            v75 = &v38[16 * v40];
            v77 = *(_QWORD *)v75;
            v76 = *((_QWORD *)v75 + 1);
            v51 = __OFSUB__(v76, v77);
            v78 = v76 - v77;
            if (v51)
              goto LABEL_133;
            v68 = v43 < v78;
            goto LABEL_76;
          }
        }
        else
        {
          if (v37 != 3)
          {
            v69 = *((_QWORD *)v10 + 4);
            v70 = *((_QWORD *)v10 + 5);
            v51 = __OFSUB__(v70, v69);
            v62 = v70 - v69;
            v63 = v51;
            goto LABEL_70;
          }
          v42 = *((_QWORD *)v10 + 4);
          v41 = *((_QWORD *)v10 + 5);
          v51 = __OFSUB__(v41, v42);
          v43 = v41 - v42;
          v44 = v51;
        }
        if ((v44 & 1) != 0)
          goto LABEL_125;
        v52 = v37 - 2;
        v58 = &v38[16 * v37 - 32];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v61 = __OFSUB__(v59, v60);
        v62 = v59 - v60;
        v63 = v61;
        if (v61)
          goto LABEL_128;
        v64 = &v38[16 * v40];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v51 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v51)
          goto LABEL_131;
        if (__OFADD__(v62, v67))
          goto LABEL_132;
        if (v62 + v67 >= v43)
        {
          v68 = v43 < v67;
LABEL_76:
          if (v68)
            v40 = v52;
          goto LABEL_78;
        }
LABEL_70:
        if ((v63 & 1) != 0)
          goto LABEL_127;
        v71 = &v38[16 * v40];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v51 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v51)
          goto LABEL_130;
        if (v74 < v62)
          goto LABEL_87;
LABEL_78:
        v79 = v40 - 1;
        if (v40 - 1 >= v37)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12)
          goto LABEL_144;
        v80 = v10;
        v81 = &v38[16 * v79];
        v82 = *(_QWORD *)v81;
        v83 = &v38[16 * v40];
        v84 = *((_QWORD *)v83 + 1);
        sub_1BACA9744((char *)(v12 + 16 * *(_QWORD *)v81), (char *)(v12 + 16 * *(_QWORD *)v83), v12 + 16 * v84, v114, a2);
        if (v3)
          goto LABEL_115;
        if (v84 < v82)
          goto LABEL_120;
        if (v40 > *((_QWORD *)v80 + 2))
          goto LABEL_121;
        *(_QWORD *)v81 = v82;
        *(_QWORD *)&v38[16 * v79 + 8] = v84;
        v85 = *((_QWORD *)v80 + 2);
        if (v40 >= v85)
          goto LABEL_122;
        v10 = v80;
        v37 = v85 - 1;
        memmove(&v38[16 * v40], v83 + 16, 16 * (v85 - 1 - v40));
        *((_QWORD *)v80 + 2) = v85 - 1;
        v12 = v115;
        if (v85 <= 2)
          goto LABEL_87;
      }
    }
    v37 = 1;
LABEL_87:
    v5 = v111;
    v11 = v113;
    if (v113 >= v111)
      goto LABEL_102;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BACAE8DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, char *, uint64_t, char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[9];
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  _OWORD v69[9];
  char v70;
  uint64_t (*v71)(uint64_t, char *, uint64_t, char *);

  v71 = a5;
  if (a3 != a2)
  {
    v6 = a3;
    v46 = *a4;
    v7 = *a4 + 152 * a3 - 152;
    v8 = result + 1;
    v43 = result + 1;
LABEL_5:
    v45 = v7;
    while (1)
    {
      v9 = (__int128 *)(v7 + 152);
      v10 = *(_OWORD *)(v7 + 168);
      v59 = *(_OWORD *)(v7 + 152);
      v60 = v10;
      v11 = *(_OWORD *)(v7 + 184);
      v12 = *(_OWORD *)(v7 + 200);
      v13 = *(_OWORD *)(v7 + 232);
      v63 = *(_OWORD *)(v7 + 216);
      v64 = v13;
      v61 = v11;
      v62 = v12;
      v14 = *(_OWORD *)(v7 + 248);
      v15 = *(_OWORD *)(v7 + 264);
      v16 = *(_OWORD *)(v7 + 280);
      v68 = *(_BYTE *)(v7 + 296);
      v66 = v15;
      v67 = v16;
      v65 = v14;
      v17 = *(_OWORD *)(v7 + 16);
      v69[0] = *(_OWORD *)v7;
      v69[1] = v17;
      v18 = *(_OWORD *)(v7 + 32);
      v19 = *(_OWORD *)(v7 + 48);
      v20 = *(_OWORD *)(v7 + 80);
      v69[4] = *(_OWORD *)(v7 + 64);
      v69[5] = v20;
      v69[2] = v18;
      v69[3] = v19;
      v21 = *(_OWORD *)(v7 + 96);
      v22 = *(_OWORD *)(v7 + 112);
      v23 = *(_OWORD *)(v7 + 128);
      v70 = *(_BYTE *)(v7 + 144);
      v69[7] = v22;
      v69[8] = v23;
      v69[6] = v21;
      v24 = v59;
      v55 = v65;
      v56 = v66;
      v57 = v67;
      v58 = v68;
      v51 = v61;
      v52 = v62;
      v53 = v63;
      v54 = v64;
      v49 = v59;
      v50 = v60;
      v25 = *(_QWORD *)&v69[0];
      v26 = *(_OWORD *)(v7 + 112);
      v47[6] = *(_OWORD *)(v7 + 96);
      v47[7] = v26;
      v47[8] = *(_OWORD *)(v7 + 128);
      v48 = *(_BYTE *)(v7 + 144);
      v27 = *(_OWORD *)(v7 + 48);
      v47[2] = *(_OWORD *)(v7 + 32);
      v47[3] = v27;
      v28 = *(_OWORD *)(v7 + 80);
      v47[4] = *(_OWORD *)(v7 + 64);
      v47[5] = v28;
      v29 = *(_OWORD *)(v7 + 16);
      v47[0] = *(_OWORD *)v7;
      v47[1] = v29;
      sub_1BACB3868((uint64_t)&v59);
      sub_1BACB3868((uint64_t)v69);
      v30 = v71(v24, (char *)&v49 + 8, v25, (char *)v47 + 8);
      sub_1BACB3908((uint64_t)v69);
      result = sub_1BACB3908((uint64_t)&v59);
      if (v5)
        break;
      if ((v30 & 1) == 0)
        goto LABEL_4;
      if (!v46)
      {
        __break(1u);
        return result;
      }
      v31 = *(_OWORD *)(v7 + 264);
      v55 = *(_OWORD *)(v7 + 248);
      v56 = v31;
      v57 = *(_OWORD *)(v7 + 280);
      v58 = *(_BYTE *)(v7 + 296);
      v32 = *(_OWORD *)(v7 + 200);
      v51 = *(_OWORD *)(v7 + 184);
      v52 = v32;
      v33 = *(_OWORD *)(v7 + 232);
      v53 = *(_OWORD *)(v7 + 216);
      v54 = v33;
      v34 = *(_OWORD *)(v7 + 168);
      v49 = *v9;
      v50 = v34;
      v35 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)(v7 + 248) = *(_OWORD *)(v7 + 96);
      *(_OWORD *)(v7 + 264) = v35;
      *(_OWORD *)(v7 + 280) = *(_OWORD *)(v7 + 128);
      *(_QWORD *)(v7 + 296) = *(_QWORD *)(v7 + 144);
      v36 = *(_OWORD *)(v7 + 48);
      *(_OWORD *)(v7 + 184) = *(_OWORD *)(v7 + 32);
      *(_OWORD *)(v7 + 200) = v36;
      v37 = *(_OWORD *)(v7 + 80);
      *(_OWORD *)(v7 + 216) = *(_OWORD *)(v7 + 64);
      *(_OWORD *)(v7 + 232) = v37;
      v38 = *(_OWORD *)(v7 + 16);
      *v9 = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 168) = v38;
      v39 = v56;
      *(_OWORD *)(v7 + 96) = v55;
      *(_OWORD *)(v7 + 112) = v39;
      *(_OWORD *)(v7 + 128) = v57;
      *(_BYTE *)(v7 + 144) = v58;
      v40 = v52;
      *(_OWORD *)(v7 + 32) = v51;
      *(_OWORD *)(v7 + 48) = v40;
      v41 = v54;
      *(_OWORD *)(v7 + 64) = v53;
      *(_OWORD *)(v7 + 80) = v41;
      v42 = v50;
      *(_OWORD *)v7 = v49;
      *(_OWORD *)(v7 + 16) = v42;
      if (v6 == v8)
      {
LABEL_4:
        ++v6;
        v7 = v45 + 152;
        v8 = v43;
        if (v6 == a2)
          return result;
        goto LABEL_5;
      }
      v7 -= 152;
      ++v8;
    }
  }
  return result;
}

uint64_t sub_1BACAEB5C(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, uint64_t, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t i;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  _OWORD v166[9];
  char v167;
  _OWORD v168[9];
  char v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  char v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  char v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  char v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  char v209;
  uint64_t v210;

  v4 = v3;
  v210 = a3;
  v6 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_141;
    if (v6)
      return sub_1BACAE8DC(0, v6, 1, a1, a2);
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_150;
  v157 = result;
  v155 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v164 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v158 = MEMORY[0x1E0DEE9D8];
    if (v6 != 1)
    {
      v89 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_105:
      if (v89 >= 2)
      {
        v142 = *v155;
        do
        {
          v143 = v89 - 2;
          if (v89 < 2)
            goto LABEL_136;
          if (!v142)
            goto LABEL_149;
          v144 = v11;
          v145 = v11 + 32;
          v146 = *(_QWORD *)&v11[16 * v143 + 32];
          v147 = *(_QWORD *)&v11[16 * v89 + 24];
          sub_1BACA7788((char *)(v142 + 152 * v146), (char *)(v142 + 152 * *(_QWORD *)&v145[16 * v89 - 16]), (char *)(v142 + 152 * v147), v164, a2);
          if (v4)
            break;
          if (v147 < v146)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v144 = sub_1BACAB464((uint64_t)v144);
          if (v143 >= *((_QWORD *)v144 + 2))
            goto LABEL_138;
          v148 = &v144[16 * v143 + 32];
          *(_QWORD *)v148 = v146;
          *((_QWORD *)v148 + 1) = v147;
          v149 = *((_QWORD *)v144 + 2);
          if (v89 > v149)
            goto LABEL_139;
          v11 = v144;
          memmove(&v144[16 * v89 + 16], &v144[16 * v89 + 32], 16 * (v149 - v89));
          *((_QWORD *)v144 + 2) = v149 - 1;
          v89 = v149 - 1;
        }
        while (v149 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v158 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BACB5E30(0, &qword_1EF2B12B8);
    v10 = sub_1BB872E74();
    *(_QWORD *)(v10 + 16) = v9;
    v158 = v10;
    v164 = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v156 = *a1 + 152;
  v154 = *a1 - 152;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v162 = v6;
  v163 = *a1;
  while (1)
  {
    v161 = v11;
    if (v12 + 1 >= v6)
    {
      v56 = v12 + 1;
      goto LABEL_51;
    }
    v159 = v12 + 1;
    v14 = v13 + 152 * (v12 + 1);
    v15 = *(_OWORD *)(v14 + 16);
    v190 = *(_OWORD *)v14;
    v191 = v15;
    v16 = *(_OWORD *)(v14 + 32);
    v17 = *(_OWORD *)(v14 + 48);
    v18 = *(_OWORD *)(v14 + 80);
    v194 = *(_OWORD *)(v14 + 64);
    v195 = v18;
    v192 = v16;
    v193 = v17;
    v19 = *(_OWORD *)(v14 + 96);
    v20 = *(_OWORD *)(v14 + 112);
    v21 = *(_OWORD *)(v14 + 128);
    v199 = *(_BYTE *)(v14 + 144);
    v197 = v20;
    v198 = v21;
    v196 = v19;
    v22 = v13 + 152 * v12;
    v23 = *(_OWORD *)(v22 + 16);
    v200 = *(_OWORD *)v22;
    v201 = v23;
    v24 = *(_OWORD *)(v22 + 32);
    v25 = *(_OWORD *)(v22 + 48);
    v26 = *(_OWORD *)(v22 + 80);
    v204 = *(_OWORD *)(v22 + 64);
    v205 = v26;
    v202 = v24;
    v203 = v25;
    v27 = *(_OWORD *)(v22 + 96);
    v28 = *(_OWORD *)(v22 + 112);
    v29 = *(_OWORD *)(v22 + 128);
    v209 = *(_BYTE *)(v22 + 144);
    v207 = v28;
    v208 = v29;
    v206 = v27;
    v30 = v190;
    v186 = v196;
    v187 = v197;
    v188 = v198;
    v189 = v199;
    v182 = v192;
    v183 = v193;
    v184 = v194;
    v185 = v195;
    v180 = v190;
    v181 = v191;
    v31 = v200;
    v176 = *(_OWORD *)(v22 + 96);
    v177 = *(_OWORD *)(v22 + 112);
    v178 = *(_OWORD *)(v22 + 128);
    v179 = *(_BYTE *)(v22 + 144);
    v172 = *(_OWORD *)(v22 + 32);
    v173 = *(_OWORD *)(v22 + 48);
    v174 = *(_OWORD *)(v22 + 64);
    v175 = *(_OWORD *)(v22 + 80);
    v170 = *(_OWORD *)v22;
    v171 = *(_OWORD *)(v22 + 16);
    sub_1BACB3868((uint64_t)&v190);
    sub_1BACB3868((uint64_t)&v200);
    v32 = a2(v30, (char *)&v180 + 8, v31, (char *)&v170 + 8);
    if (v4)
    {
      sub_1BACB3908((uint64_t)&v200);
      sub_1BACB3908((uint64_t)&v190);
      goto LABEL_119;
    }
    v33 = v32;
    sub_1BACB3908((uint64_t)&v200);
    sub_1BACB3908((uint64_t)&v190);
    if (v12 + 2 >= v6)
    {
      v57 = v12 + 2;
      v58 = v12 + 1;
      if ((v33 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      v34 = v12 + 3;
      v152 = v12;
      for (i = v156 + 152 * v12; ; i += 152)
      {
        v36 = *(_OWORD *)(i + 168);
        v170 = *(_OWORD *)(i + 152);
        v171 = v36;
        v37 = *(_OWORD *)(i + 184);
        v38 = *(_OWORD *)(i + 200);
        v39 = *(_OWORD *)(i + 232);
        v174 = *(_OWORD *)(i + 216);
        v175 = v39;
        v172 = v37;
        v173 = v38;
        v40 = *(_OWORD *)(i + 248);
        v41 = *(_OWORD *)(i + 264);
        v42 = *(_OWORD *)(i + 280);
        v179 = *(_BYTE *)(i + 296);
        v177 = v41;
        v178 = v42;
        v176 = v40;
        v43 = *(_OWORD *)(i + 16);
        v180 = *(_OWORD *)i;
        v181 = v43;
        v44 = *(_OWORD *)(i + 32);
        v45 = *(_OWORD *)(i + 48);
        v46 = *(_OWORD *)(i + 80);
        v184 = *(_OWORD *)(i + 64);
        v185 = v46;
        v182 = v44;
        v183 = v45;
        v47 = *(_OWORD *)(i + 96);
        v48 = *(_OWORD *)(i + 112);
        v49 = *(_OWORD *)(i + 128);
        v189 = *(_BYTE *)(i + 144);
        v187 = v48;
        v188 = v49;
        v186 = v47;
        v50 = v170;
        v168[6] = v176;
        v168[7] = v177;
        v168[8] = v178;
        v169 = v179;
        v168[2] = v172;
        v168[3] = v173;
        v168[4] = v174;
        v168[5] = v175;
        v168[0] = v170;
        v168[1] = v171;
        v51 = v180;
        v52 = *(_OWORD *)(i + 112);
        v166[6] = *(_OWORD *)(i + 96);
        v166[7] = v52;
        v166[8] = *(_OWORD *)(i + 128);
        v167 = *(_BYTE *)(i + 144);
        v53 = *(_OWORD *)(i + 48);
        v166[2] = *(_OWORD *)(i + 32);
        v166[3] = v53;
        v54 = *(_OWORD *)(i + 80);
        v166[4] = *(_OWORD *)(i + 64);
        v166[5] = v54;
        v55 = *(_OWORD *)(i + 16);
        v166[0] = *(_OWORD *)i;
        v166[1] = v55;
        sub_1BACB3868((uint64_t)&v170);
        sub_1BACB3868((uint64_t)&v180);
        LODWORD(v50) = a2(v50, (char *)v168 + 8, v51, (char *)v166 + 8);
        sub_1BACB3908((uint64_t)&v180);
        sub_1BACB3908((uint64_t)&v170);
        v11 = v161;
        if (((v33 ^ v50) & 1) != 0)
        {
          v57 = v34 - 1;
          v6 = v162;
          goto LABEL_49;
        }
        if (v162 == v34)
          break;
        ++v34;
      }
      v6 = v162;
      v57 = v162;
LABEL_49:
      v12 = v152;
      v58 = v159;
      if ((v33 & 1) != 0)
      {
LABEL_22:
        if (v57 < v12)
          goto LABEL_145;
        v56 = v57;
        if (v12 < v57)
        {
          v59 = (_OWORD *)(v154 + 152 * v57);
          v60 = v12;
          v61 = (_OWORD *)(v13 + 152 * v12);
          do
          {
            if (v60 != --v56)
            {
              if (!v13)
                goto LABEL_148;
              v186 = v61[6];
              v187 = v61[7];
              v188 = v61[8];
              v189 = *((_BYTE *)v61 + 144);
              v182 = v61[2];
              v183 = v61[3];
              v184 = v61[4];
              v185 = v61[5];
              v180 = *v61;
              v181 = v61[1];
              memmove(v61, v59, 0x98uLL);
              v59[6] = v186;
              v59[7] = v187;
              v59[8] = v188;
              *((_BYTE *)v59 + 144) = v189;
              v59[2] = v182;
              v59[3] = v183;
              v59[4] = v184;
              v59[5] = v185;
              *v59 = v180;
              v59[1] = v181;
            }
            ++v60;
            v59 = (_OWORD *)((char *)v59 - 152);
            v61 = (_OWORD *)((char *)v61 + 152);
          }
          while (v60 < v56);
          v6 = v162;
          v56 = v57;
          v58 = v159;
        }
        if (v56 >= v6)
          goto LABEL_51;
        goto LABEL_32;
      }
    }
    v56 = v57;
    if (v57 >= v6)
      goto LABEL_51;
LABEL_32:
    if (__OFSUB__(v56, v12))
      goto LABEL_142;
    if (v56 - v12 >= v157)
      goto LABEL_51;
    if (__OFADD__(v12, v157))
      goto LABEL_143;
    v62 = v12 + v157 >= v6 ? v6 : v12 + v157;
    if (v62 < v12)
      break;
    if (v56 != v62)
    {
      v153 = v12;
      v63 = v154 + 152 * v56;
      v160 = v58;
      v150 = v62;
      do
      {
        v64 = v56;
        v65 = v58;
        v151 = v63;
        while (1)
        {
          v66 = (__int128 *)(v63 + 152);
          v67 = *(_OWORD *)(v63 + 168);
          v190 = *(_OWORD *)(v63 + 152);
          v191 = v67;
          v68 = *(_OWORD *)(v63 + 184);
          v69 = *(_OWORD *)(v63 + 200);
          v70 = *(_OWORD *)(v63 + 232);
          v194 = *(_OWORD *)(v63 + 216);
          v195 = v70;
          v192 = v68;
          v193 = v69;
          v71 = *(_OWORD *)(v63 + 248);
          v72 = *(_OWORD *)(v63 + 264);
          v73 = *(_OWORD *)(v63 + 280);
          v199 = *(_BYTE *)(v63 + 296);
          v197 = v72;
          v198 = v73;
          v196 = v71;
          v74 = *(_OWORD *)(v63 + 16);
          v200 = *(_OWORD *)v63;
          v201 = v74;
          v75 = *(_OWORD *)(v63 + 32);
          v76 = *(_OWORD *)(v63 + 48);
          v77 = *(_OWORD *)(v63 + 80);
          v204 = *(_OWORD *)(v63 + 64);
          v205 = v77;
          v202 = v75;
          v203 = v76;
          v78 = *(_OWORD *)(v63 + 96);
          v79 = *(_OWORD *)(v63 + 112);
          v80 = *(_OWORD *)(v63 + 128);
          v209 = *(_BYTE *)(v63 + 144);
          v207 = v79;
          v208 = v80;
          v206 = v78;
          v81 = v190;
          v186 = v196;
          v187 = v197;
          v188 = v198;
          v189 = v199;
          v182 = v192;
          v183 = v193;
          v184 = v194;
          v185 = v195;
          v180 = v190;
          v181 = v191;
          v82 = v200;
          v176 = *(_OWORD *)(v63 + 96);
          v177 = *(_OWORD *)(v63 + 112);
          v178 = *(_OWORD *)(v63 + 128);
          v179 = *(_BYTE *)(v63 + 144);
          v172 = *(_OWORD *)(v63 + 32);
          v173 = *(_OWORD *)(v63 + 48);
          v174 = *(_OWORD *)(v63 + 64);
          v175 = *(_OWORD *)(v63 + 80);
          v170 = *(_OWORD *)v63;
          v171 = *(_OWORD *)(v63 + 16);
          sub_1BACB3868((uint64_t)&v190);
          sub_1BACB3868((uint64_t)&v200);
          LOBYTE(v81) = a2(v81, (char *)&v180 + 8, v82, (char *)&v170 + 8);
          sub_1BACB3908((uint64_t)&v200);
          sub_1BACB3908((uint64_t)&v190);
          if ((v81 & 1) == 0)
            break;
          if (!v13)
            goto LABEL_147;
          v186 = *(_OWORD *)(v63 + 248);
          v187 = *(_OWORD *)(v63 + 264);
          v188 = *(_OWORD *)(v63 + 280);
          v189 = *(_BYTE *)(v63 + 296);
          v182 = *(_OWORD *)(v63 + 184);
          v183 = *(_OWORD *)(v63 + 200);
          v184 = *(_OWORD *)(v63 + 216);
          v185 = *(_OWORD *)(v63 + 232);
          v180 = *v66;
          v181 = *(_OWORD *)(v63 + 168);
          v83 = *(_OWORD *)(v63 + 112);
          *(_OWORD *)(v63 + 248) = *(_OWORD *)(v63 + 96);
          *(_OWORD *)(v63 + 264) = v83;
          *(_OWORD *)(v63 + 280) = *(_OWORD *)(v63 + 128);
          *(_QWORD *)(v63 + 296) = *(_QWORD *)(v63 + 144);
          v84 = *(_OWORD *)(v63 + 48);
          *(_OWORD *)(v63 + 184) = *(_OWORD *)(v63 + 32);
          *(_OWORD *)(v63 + 200) = v84;
          v85 = *(_OWORD *)(v63 + 80);
          *(_OWORD *)(v63 + 216) = *(_OWORD *)(v63 + 64);
          *(_OWORD *)(v63 + 232) = v85;
          v86 = *(_OWORD *)(v63 + 16);
          *v66 = *(_OWORD *)v63;
          *(_OWORD *)(v63 + 168) = v86;
          *(_OWORD *)(v63 + 96) = v186;
          *(_OWORD *)(v63 + 112) = v187;
          *(_OWORD *)(v63 + 128) = v188;
          *(_BYTE *)(v63 + 144) = v189;
          *(_OWORD *)(v63 + 32) = v182;
          *(_OWORD *)(v63 + 48) = v183;
          *(_OWORD *)(v63 + 64) = v184;
          *(_OWORD *)(v63 + 80) = v185;
          *(_OWORD *)v63 = v180;
          *(_OWORD *)(v63 + 16) = v181;
          if (v56 == v65)
            break;
          v63 -= 152;
          ++v65;
        }
        ++v56;
        v63 = v151 + 152;
        v58 = v160;
      }
      while (v64 + 1 != v150);
      v56 = v150;
      v11 = v161;
      v12 = v153;
      if (v150 < v153)
        goto LABEL_140;
      goto LABEL_52;
    }
LABEL_51:
    if (v56 < v12)
      goto LABEL_140;
LABEL_52:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v88 = *((_QWORD *)v11 + 2);
    v87 = *((_QWORD *)v11 + 3);
    v89 = v88 + 1;
    if (v88 >= v87 >> 1)
      v11 = sub_1BACAA368((char *)(v87 > 1), v88 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v89;
    v90 = v11 + 32;
    v91 = &v11[16 * v88 + 32];
    *(_QWORD *)v91 = v12;
    *((_QWORD *)v91 + 1) = v56;
    if (v88)
    {
      while (1)
      {
        v92 = v89 - 1;
        if (v89 >= 4)
        {
          v97 = &v90[16 * v89];
          v98 = *((_QWORD *)v97 - 8);
          v99 = *((_QWORD *)v97 - 7);
          v103 = __OFSUB__(v99, v98);
          v100 = v99 - v98;
          if (v103)
            goto LABEL_125;
          v102 = *((_QWORD *)v97 - 6);
          v101 = *((_QWORD *)v97 - 5);
          v103 = __OFSUB__(v101, v102);
          v95 = v101 - v102;
          v96 = v103;
          if (v103)
            goto LABEL_126;
          v104 = v89 - 2;
          v105 = &v90[16 * v89 - 32];
          v107 = *(_QWORD *)v105;
          v106 = *((_QWORD *)v105 + 1);
          v103 = __OFSUB__(v106, v107);
          v108 = v106 - v107;
          if (v103)
            goto LABEL_128;
          v103 = __OFADD__(v95, v108);
          v109 = v95 + v108;
          if (v103)
            goto LABEL_131;
          if (v109 >= v100)
          {
            v127 = &v90[16 * v92];
            v129 = *(_QWORD *)v127;
            v128 = *((_QWORD *)v127 + 1);
            v103 = __OFSUB__(v128, v129);
            v130 = v128 - v129;
            if (v103)
              goto LABEL_135;
            v120 = v95 < v130;
            goto LABEL_88;
          }
        }
        else
        {
          if (v89 != 3)
          {
            v121 = *((_QWORD *)v11 + 4);
            v122 = *((_QWORD *)v11 + 5);
            v103 = __OFSUB__(v122, v121);
            v114 = v122 - v121;
            v115 = v103;
            goto LABEL_82;
          }
          v94 = *((_QWORD *)v11 + 4);
          v93 = *((_QWORD *)v11 + 5);
          v103 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          v96 = v103;
        }
        if ((v96 & 1) != 0)
          goto LABEL_127;
        v104 = v89 - 2;
        v110 = &v90[16 * v89 - 32];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v113 = __OFSUB__(v111, v112);
        v114 = v111 - v112;
        v115 = v113;
        if (v113)
          goto LABEL_130;
        v116 = &v90[16 * v92];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v103 = __OFSUB__(v117, v118);
        v119 = v117 - v118;
        if (v103)
          goto LABEL_133;
        if (__OFADD__(v114, v119))
          goto LABEL_134;
        if (v114 + v119 >= v95)
        {
          v120 = v95 < v119;
LABEL_88:
          if (v120)
            v92 = v104;
          goto LABEL_90;
        }
LABEL_82:
        if ((v115 & 1) != 0)
          goto LABEL_129;
        v123 = &v90[16 * v92];
        v125 = *(_QWORD *)v123;
        v124 = *((_QWORD *)v123 + 1);
        v103 = __OFSUB__(v124, v125);
        v126 = v124 - v125;
        if (v103)
          goto LABEL_132;
        if (v126 < v114)
          goto LABEL_99;
LABEL_90:
        v131 = v92 - 1;
        if (v92 - 1 >= v89)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v13)
          goto LABEL_146;
        v132 = v4;
        v133 = v11;
        v134 = v13;
        v135 = &v90[16 * v131];
        v136 = *(_QWORD *)v135;
        v137 = v90;
        v138 = v92;
        v139 = &v90[16 * v92];
        v140 = *((_QWORD *)v139 + 1);
        sub_1BACA7788((char *)(v134 + 152 * *(_QWORD *)v135), (char *)(v134 + 152 * *(_QWORD *)v139), (char *)(v134 + 152 * v140), v164, a2);
        if (v132)
          goto LABEL_119;
        if (v140 < v136)
          goto LABEL_122;
        if (v138 > *((_QWORD *)v133 + 2))
          goto LABEL_123;
        *(_QWORD *)v135 = v136;
        *(_QWORD *)&v137[16 * v131 + 8] = v140;
        v141 = *((_QWORD *)v133 + 2);
        if (v138 >= v141)
          goto LABEL_124;
        v11 = v133;
        v89 = v141 - 1;
        memmove(v139, v139 + 16, 16 * (v141 - 1 - v138));
        v90 = v137;
        *((_QWORD *)v133 + 2) = v141 - 1;
        v120 = v141 > 2;
        v13 = v163;
        v4 = 0;
        if (!v120)
          goto LABEL_99;
      }
    }
    v89 = 1;
LABEL_99:
    v12 = v56;
    v6 = v162;
    if (v56 >= v162)
      goto LABEL_105;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BACAF7D4(uint64_t *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  unint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t result;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  unsigned __int8 v127;
  uint64_t v128;
  _BYTE v129[288];
  uint64_t __dst[38];
  void (*v131)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  v7 = swift_allocObject();
  v131 = a2;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v125 = a1;
  v8 = a1[1];
  swift_retain_n();
  v9 = sub_1BB8741F4();
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        swift_retain();
        sub_1BACA68A0(0, v8, 1, a1, v131, a3);
      }
      swift_release();
      swift_release();
      return swift_release_n();
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    swift_release_n();
    __break(1u);
LABEL_143:
    swift_release_n();
    __break(1u);
LABEL_144:
    swift_release_n();
    __break(1u);
LABEL_145:
    swift_release_n();
    __break(1u);
LABEL_146:
    swift_release_n();
    swift_release();
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_146;
  v123 = a3;
  v124 = v3;
  v113 = v9;
  if (v8 < 2)
  {
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v117 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v112 = MEMORY[0x1E0DEE9D8];
    if (v8 != 1)
    {
      v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v15 = a1;
LABEL_103:
      if (v16 < 2)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v112 + 16) = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      v101 = *v15;
      v126 = *v15;
      while (1)
      {
        v102 = v16 - 2;
        if (v16 < 2)
          goto LABEL_133;
        if (!v101)
          goto LABEL_145;
        v103 = v13;
        v104 = *(_QWORD *)&v13[16 * v102 + 32];
        v105 = *(_QWORD *)&v13[16 * v16 + 24];
        v106 = (char *)(v101 + 296 * v104);
        v107 = (char *)(v101 + 296 * *(_QWORD *)&v13[16 * v16 + 16]);
        v108 = v101 + 296 * v105;
        swift_retain();
        sub_1BACA9AA0(v106, v107, v108, v117, v131, v123);
        if (v124)
        {
          v100 = v112;
          goto LABEL_101;
        }
        if (v105 < v104)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v103 = sub_1BACAB464((uint64_t)v13);
        if (v102 >= *((_QWORD *)v103 + 2))
          goto LABEL_135;
        v109 = &v103[16 * v102 + 32];
        *(_QWORD *)v109 = v104;
        *((_QWORD *)v109 + 1) = v105;
        v110 = *((_QWORD *)v103 + 2);
        if (v16 > v110)
          goto LABEL_136;
        memmove(&v103[16 * v16 + 16], &v103[16 * v16 + 32], 16 * (v110 - v16));
        *((_QWORD *)v103 + 2) = v110 - 1;
        v16 = v110 - 1;
        v13 = v103;
        v101 = v126;
        if (v110 <= 2)
          goto LABEL_114;
      }
    }
  }
  else
  {
    v11 = v10 >> 1;
    sub_1BACB5E30(0, &qword_1EF2B12C8);
    v12 = sub_1BB872E74();
    *(_QWORD *)(v12 + 16) = v11;
    v112 = v12;
    v117 = (char *)(v12 + 32);
  }
  v14 = 0;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v15 = a1;
  while (1)
  {
    v17 = v14;
    v18 = v14 + 1;
    if (v14 + 1 < v8)
    {
      v114 = v13;
      v19 = *v15;
      v20 = (uint64_t *)(*v15 + 296 * v18);
      v21 = v8;
      v22 = (uint64_t *)(*v15 + 296 * v14);
      v23 = *v22;
      __dst[0] = *v20;
      sub_1BA982FE4((uint64_t)(v20 + 1), (uint64_t)&__dst[1]);
      v128 = v23;
      sub_1BA982FE4((uint64_t)(v22 + 1), (uint64_t)v129);
      v131(&v127, __dst, &v128);
      sub_1BA6AA068((uint64_t)&v128, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      v8 = v21;
      sub_1BA6AA068((uint64_t)__dst, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      v24 = v127;
      v18 = v17 + 2;
      if (v17 + 2 < v21)
      {
        v120 = v17;
        v25 = v19 + 296 * v17;
        while (1)
        {
          v26 = v18;
          v27 = *(_QWORD *)(v25 + 296);
          __dst[0] = *(_QWORD *)(v25 + 592);
          sub_1BA982FE4(v25 + 600, (uint64_t)&__dst[1]);
          v128 = v27;
          sub_1BA982FE4(v25 + 304, (uint64_t)v129);
          v131(&v127, __dst, &v128);
          sub_1BA6AA068((uint64_t)&v128, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
          sub_1BA6AA068((uint64_t)__dst, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
          if (v24 != v127)
            break;
          v25 += 296;
          v18 = v26 + 1;
          if (v21 == v26 + 1)
          {
            v8 = v21;
            v18 = v21;
            v17 = v120;
            goto LABEL_23;
          }
        }
        v18 = v26;
        v17 = v120;
        v8 = v21;
      }
LABEL_23:
      v13 = v114;
      if (!v24)
      {
        v15 = v125;
        if (v18 >= v8)
          goto LABEL_53;
        goto LABEL_35;
      }
      if (v18 < v17)
        goto LABEL_139;
      if (v17 < v18)
      {
        v28 = v19;
        v29 = (char *)(v19 + 296 * v18 - 296);
        v30 = v28;
        v31 = (char *)(v28 + 296 * v17);
        v32 = v18;
        v33 = v17;
        do
        {
          if (v33 != --v18)
          {
            if (!v30)
              goto LABEL_144;
            memcpy(__dst, v31, 0x122uLL);
            memmove(v31, v29, 0x128uLL);
            memcpy(v29, __dst, 0x122uLL);
          }
          ++v33;
          v29 -= 296;
          v31 += 296;
        }
        while (v33 < v18);
        v15 = v125;
        v18 = v32;
        v8 = v21;
        v13 = v114;
        if (v18 >= v21)
          goto LABEL_53;
        goto LABEL_35;
      }
      v15 = v125;
    }
    if (v18 >= v8)
      goto LABEL_53;
LABEL_35:
    if (__OFSUB__(v18, v17))
      goto LABEL_137;
    if (v18 - v17 < v113)
    {
      if (__OFADD__(v17, v113))
        goto LABEL_140;
      if (v17 + v113 >= v8)
        v34 = v8;
      else
        v34 = v17 + v113;
      if (v34 < v17)
        goto LABEL_141;
      if (v18 != v34)
      {
        v118 = v34;
        v121 = v17;
        v115 = v13;
        v35 = 296 * v18 - 296;
        do
        {
          v36 = v18;
          v37 = v121;
          v38 = v35;
          do
          {
            v39 = (uint64_t *)(*v15 + v38);
            v40 = *v39;
            v41 = (uint64_t)(v39 + 1);
            __dst[0] = v39[37];
            sub_1BA982FE4((uint64_t)(v39 + 38), (uint64_t)&__dst[1]);
            v128 = v40;
            sub_1BA982FE4(v41, (uint64_t)v129);
            v131(&v127, __dst, &v128);
            sub_1BA6AA068((uint64_t)&v128, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
            sub_1BA6AA068((uint64_t)__dst, (uint64_t)&unk_1EF2B1A38, (uint64_t)&type metadata for FeedCatalogItem, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
            if (v127 != 1)
              break;
            v42 = *v15;
            if (!*v15)
              goto LABEL_142;
            v43 = (void *)(v42 + v38);
            v44 = (void *)(v42 + v38 + 296);
            memcpy(__dst, v44, 0x122uLL);
            memcpy(v44, v43, 0x128uLL);
            memcpy(v43, __dst, 0x122uLL);
            v38 -= 296;
            ++v37;
            v15 = v125;
          }
          while (v36 != v37);
          v18 = v36 + 1;
          v35 += 296;
        }
        while (v36 + 1 != v118);
        v18 = v118;
        v13 = v115;
        v17 = v121;
      }
    }
LABEL_53:
    if (v18 < v17)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    v116 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BACAA368(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v46 = *((_QWORD *)v13 + 2);
    v45 = *((_QWORD *)v13 + 3);
    v16 = v46 + 1;
    if (v46 >= v45 >> 1)
      v13 = sub_1BACAA368((char *)(v45 > 1), v46 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v16;
    v47 = v13 + 32;
    v48 = &v13[16 * v46 + 32];
    *(_QWORD *)v48 = v17;
    *((_QWORD *)v48 + 1) = v116;
    if (v46)
      break;
    v16 = 1;
LABEL_15:
    v8 = v15[1];
    v14 = v116;
    if (v116 >= v8)
      goto LABEL_103;
  }
  while (1)
  {
    v49 = v16 - 1;
    if (v16 >= 4)
    {
      v54 = &v47[16 * v16];
      v55 = *((_QWORD *)v54 - 8);
      v56 = *((_QWORD *)v54 - 7);
      v60 = __OFSUB__(v56, v55);
      v57 = v56 - v55;
      if (v60)
        goto LABEL_121;
      v59 = *((_QWORD *)v54 - 6);
      v58 = *((_QWORD *)v54 - 5);
      v60 = __OFSUB__(v58, v59);
      v52 = v58 - v59;
      v53 = v60;
      if (v60)
        goto LABEL_122;
      v61 = v16 - 2;
      v62 = &v47[16 * v16 - 32];
      v64 = *(_QWORD *)v62;
      v63 = *((_QWORD *)v62 + 1);
      v60 = __OFSUB__(v63, v64);
      v65 = v63 - v64;
      if (v60)
        goto LABEL_124;
      v60 = __OFADD__(v52, v65);
      v66 = v52 + v65;
      if (v60)
        goto LABEL_127;
      if (v66 >= v57)
      {
        v84 = &v47[16 * v49];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v60 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v60)
          goto LABEL_131;
        v77 = v52 < v87;
        goto LABEL_90;
      }
    }
    else
    {
      if (v16 != 3)
      {
        v78 = *((_QWORD *)v13 + 4);
        v79 = *((_QWORD *)v13 + 5);
        v60 = __OFSUB__(v79, v78);
        v71 = v79 - v78;
        v72 = v60;
        goto LABEL_84;
      }
      v51 = *((_QWORD *)v13 + 4);
      v50 = *((_QWORD *)v13 + 5);
      v60 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      v53 = v60;
    }
    if ((v53 & 1) != 0)
      goto LABEL_123;
    v61 = v16 - 2;
    v67 = &v47[16 * v16 - 32];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v70 = __OFSUB__(v68, v69);
    v71 = v68 - v69;
    v72 = v70;
    if (v70)
      goto LABEL_126;
    v73 = &v47[16 * v49];
    v75 = *(_QWORD *)v73;
    v74 = *((_QWORD *)v73 + 1);
    v60 = __OFSUB__(v74, v75);
    v76 = v74 - v75;
    if (v60)
      goto LABEL_129;
    if (__OFADD__(v71, v76))
      goto LABEL_130;
    if (v71 + v76 >= v52)
    {
      v77 = v52 < v76;
LABEL_90:
      if (v77)
        v49 = v61;
      goto LABEL_92;
    }
LABEL_84:
    if ((v72 & 1) != 0)
      goto LABEL_125;
    v80 = &v47[16 * v49];
    v82 = *(_QWORD *)v80;
    v81 = *((_QWORD *)v80 + 1);
    v60 = __OFSUB__(v81, v82);
    v83 = v81 - v82;
    if (v60)
      goto LABEL_128;
    if (v83 < v71)
      goto LABEL_15;
LABEL_92:
    v88 = v49 - 1;
    if (v49 - 1 >= v16)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    v89 = *v15;
    if (!*v15)
      goto LABEL_143;
    v90 = &v47[16 * v88];
    v91 = v47;
    v92 = *(_QWORD *)v90;
    v93 = v91;
    v94 = v49;
    v95 = &v91[16 * v49];
    v96 = *((_QWORD *)v95 + 1);
    v97 = (char *)(v89 + 296 * *(_QWORD *)v90);
    v119 = v89 + 296 * v96;
    v122 = (char *)(v89 + 296 * *(_QWORD *)v95);
    swift_retain();
    sub_1BACA9AA0(v97, v122, v119, v117, v131, v123);
    if (v124)
      break;
    if (v96 < v92)
      goto LABEL_118;
    if (v94 > *((_QWORD *)v13 + 2))
      goto LABEL_119;
    v98 = v94;
    *(_QWORD *)v90 = v92;
    *(_QWORD *)&v93[16 * v88 + 8] = v96;
    v99 = *((_QWORD *)v13 + 2);
    if (v94 >= v99)
      goto LABEL_120;
    v47 = v93;
    v124 = 0;
    v16 = v99 - 1;
    memmove(v95, v95 + 16, 16 * (v99 - 1 - v98));
    *((_QWORD *)v13 + 2) = v99 - 1;
    v15 = v125;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v112;
LABEL_101:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v100 + 16) = 0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BACB0210(_QWORD *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t result;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  _BYTE v135[152];
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  void (*v146)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  v7 = swift_allocObject();
  v146 = a2;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = a1[1];
  swift_retain_n();
  v9 = sub_1BB8741F4();
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        swift_retain();
        sub_1BACA6AB0(0, v8, 1, a1, v146, a3);
      }
      swift_release();
      swift_release();
      return swift_release_n();
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_146;
  v130 = a3;
  v131 = v3;
  v118 = v9;
  if (v8 < 2)
  {
    v124 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v117 = MEMORY[0x1E0DEE9D8];
    if (v8 != 1)
    {
      v15 = (char *)MEMORY[0x1E0DEE9D8];
      v17 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
      if (v17 < 2)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v117 + 16) = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      v105 = *a1;
      v132 = *a1;
      while (1)
      {
        v106 = v17 - 2;
        if (v17 < 2)
          break;
        if (!v105)
          goto LABEL_145;
        v107 = v15;
        v108 = v15 + 32;
        v109 = *(_QWORD *)&v15[16 * v106 + 32];
        v110 = *(_QWORD *)&v15[16 * v17 + 24];
        v111 = (char *)(v105 + 160 * v109);
        v112 = (char *)(v105 + 160 * *(_QWORD *)&v108[16 * v17 - 16]);
        v113 = v105 + 160 * v110;
        swift_retain();
        sub_1BACA9F04(v111, v112, v113, v124, v146, v130);
        if (v131)
        {
          v104 = v117;
          goto LABEL_101;
        }
        if (v110 < v109)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v107 = sub_1BACAB464((uint64_t)v107);
        if (v106 >= *((_QWORD *)v107 + 2))
          goto LABEL_135;
        v114 = &v107[16 * v106 + 32];
        *(_QWORD *)v114 = v109;
        *((_QWORD *)v114 + 1) = v110;
        v115 = *((_QWORD *)v107 + 2);
        if (v17 > v115)
          goto LABEL_136;
        v15 = v107;
        memmove(&v107[16 * v17 + 16], &v107[16 * v17 + 32], 16 * (v115 - v17));
        *((_QWORD *)v107 + 2) = v115 - 1;
        v17 = v115 - 1;
        v105 = v132;
        if (v115 <= 2)
          goto LABEL_114;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    v11 = 1;
  }
  else
  {
    v11 = v8;
    v12 = v10 >> 1;
    sub_1BACB5E30(0, (unint64_t *)&unk_1EF2B1288);
    v13 = sub_1BB872E74();
    *(_QWORD *)(v13 + 16) = v12;
    v117 = v13;
    v124 = (char *)(v13 + 32);
  }
  v14 = 0;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v123 = a1;
  v16 = v11;
  while (1)
  {
    v18 = v14;
    v19 = v14 + 1;
    v125 = v14;
    v20 = v16;
    if (v14 + 1 >= v16)
    {
LABEL_34:
      if (v19 >= v20)
        goto LABEL_53;
      goto LABEL_35;
    }
    v21 = *a1;
    v22 = (_QWORD *)(*a1 + 160 * v19);
    v23 = (uint64_t *)(*a1 + 160 * v14);
    v24 = *v23;
    *(_QWORD *)&v136 = *v22;
    sub_1BA982E70((uint64_t)(v22 + 1), (uint64_t)&v136 + 8);
    v134 = v24;
    sub_1BA982E70((uint64_t)(v23 + 1), (uint64_t)v135);
    v146(&v133, (uint64_t *)&v136, &v134);
    v127 = v20;
    sub_1BA6AA068((uint64_t)&v134, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
    sub_1BA6AA068((uint64_t)&v136, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
    v25 = v133;
    v19 = v18 + 2;
    v121 = v21;
    if (v18 + 2 >= v20)
      goto LABEL_23;
    v26 = v18;
    v27 = v18 + 2;
    v28 = v21 + 160 * v26 + 168;
    do
    {
      v29 = *(_QWORD *)(v28 - 8);
      *(_QWORD *)&v136 = *(_QWORD *)(v28 + 152);
      sub_1BA982E70(v28 + 160, (uint64_t)&v136 + 8);
      v134 = v29;
      sub_1BA982E70(v28, (uint64_t)v135);
      v146(&v133, (uint64_t *)&v136, &v134);
      sub_1BA6AA068((uint64_t)&v134, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      sub_1BA6AA068((uint64_t)&v136, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      if (v25 != v133)
      {
        v19 = v27;
        v18 = v125;
        v20 = v127;
        a1 = v123;
        if (v25)
          goto LABEL_24;
LABEL_32:
        if (v19 >= v20)
          goto LABEL_53;
LABEL_35:
        if (!__OFSUB__(v19, v18))
        {
          if (v19 - v18 >= v118)
            goto LABEL_53;
          if (!__OFADD__(v18, v118))
          {
            if (v18 + v118 >= v20)
              v36 = v20;
            else
              v36 = v18 + v118;
            if (v36 >= v18)
            {
              if (v19 != v36)
              {
                v119 = v15;
                v122 = v36;
                v37 = 160 * v19 - 160;
                do
                {
                  v38 = v19;
                  v39 = v18;
                  v128 = v37;
                  v40 = v37;
                  do
                  {
                    v41 = (uint64_t *)(*a1 + v40);
                    v42 = *v41;
                    v43 = (uint64_t)(v41 + 1);
                    *(_QWORD *)&v136 = v41[20];
                    sub_1BA982E70((uint64_t)(v41 + 21), (uint64_t)&v136 + 8);
                    v134 = v42;
                    sub_1BA982E70(v43, (uint64_t)v135);
                    v146(&v133, (uint64_t *)&v136, &v134);
                    sub_1BA6AA068((uint64_t)&v134, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
                    sub_1BA6AA068((uint64_t)&v136, (uint64_t)&unk_1EF2B1A30, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
                    if (v133 != 1)
                      break;
                    if (!*a1)
                      goto LABEL_142;
                    v44 = (_OWORD *)(*a1 + v40);
                    v142 = v44[16];
                    v143 = v44[17];
                    v144 = v44[18];
                    v145 = v44[19];
                    v138 = v44[12];
                    v139 = v44[13];
                    v140 = v44[14];
                    v141 = v44[15];
                    v136 = v44[10];
                    v137 = v44[11];
                    v45 = v44[7];
                    v44[16] = v44[6];
                    v44[17] = v45;
                    v46 = v44[9];
                    v44[18] = v44[8];
                    v44[19] = v46;
                    v47 = v44[3];
                    v44[12] = v44[2];
                    v44[13] = v47;
                    v48 = v44[5];
                    v44[14] = v44[4];
                    v44[15] = v48;
                    v49 = v44[1];
                    v44[10] = *v44;
                    v44[11] = v49;
                    v44[6] = v142;
                    v44[7] = v143;
                    v44[8] = v144;
                    v44[9] = v145;
                    v44[2] = v138;
                    v44[3] = v139;
                    v44[4] = v140;
                    v44[5] = v141;
                    *v44 = v136;
                    v44[1] = v137;
                    v40 -= 160;
                    ++v39;
                  }
                  while (v38 != v39);
                  v19 = v38 + 1;
                  v18 = v125;
                  v37 = v128 + 160;
                }
                while (v38 + 1 != v122);
                v19 = v122;
                v15 = v119;
              }
              goto LABEL_53;
            }
            goto LABEL_141;
          }
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          swift_release_n();
          __break(1u);
LABEL_143:
          swift_release_n();
          __break(1u);
LABEL_144:
          swift_release_n();
          __break(1u);
LABEL_145:
          swift_release_n();
          __break(1u);
LABEL_146:
          swift_release_n();
          swift_release();
          result = sub_1BB873EA0();
          __break(1u);
          return result;
        }
        goto LABEL_137;
      }
      v28 += 160;
      ++v27;
    }
    while (v127 != v27);
    v18 = v125;
    v20 = v127;
    v19 = v127;
LABEL_23:
    a1 = v123;
    if (!v25)
      goto LABEL_32;
LABEL_24:
    if (v19 < v18)
      goto LABEL_139;
    if (v18 >= v19)
      goto LABEL_34;
    v30 = v15;
    v31 = v19;
    v32 = (_OWORD *)(v121 + 160 * v19 - 160);
    v33 = (__int128 *)(v121 + 160 * v18);
    v34 = v121;
    v35 = v18;
    do
    {
      if (v35 != --v31)
      {
        if (!v34)
          goto LABEL_144;
        v142 = v33[6];
        v143 = v33[7];
        v144 = v33[8];
        v145 = v33[9];
        v138 = v33[2];
        v139 = v33[3];
        v140 = v33[4];
        v141 = v33[5];
        v136 = *v33;
        v137 = v33[1];
        memmove(v33, v32, 0xA0uLL);
        v32[6] = v142;
        v32[7] = v143;
        v32[8] = v144;
        v32[9] = v145;
        v32[2] = v138;
        v32[3] = v139;
        v32[4] = v140;
        v32[5] = v141;
        *v32 = v136;
        v32[1] = v137;
        v34 = v121;
      }
      ++v35;
      v32 -= 10;
      v33 += 10;
    }
    while (v35 < v31);
    v15 = v30;
    a1 = v123;
    v20 = v127;
    if (v19 < v127)
      goto LABEL_35;
LABEL_53:
    if (v19 < v18)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    v120 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1BACAA368(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v51 = *((_QWORD *)v15 + 2);
    v50 = *((_QWORD *)v15 + 3);
    v17 = v51 + 1;
    if (v51 >= v50 >> 1)
      v15 = sub_1BACAA368((char *)(v50 > 1), v51 + 1, 1, v15);
    *((_QWORD *)v15 + 2) = v17;
    v52 = v15 + 32;
    v53 = &v15[16 * v51 + 32];
    *(_QWORD *)v53 = v18;
    *((_QWORD *)v53 + 1) = v19;
    if (v51)
      break;
    v17 = 1;
LABEL_16:
    v16 = a1[1];
    v14 = v120;
    if (v120 >= v16)
      goto LABEL_103;
  }
  while (1)
  {
    v54 = v17 - 1;
    if (v17 >= 4)
    {
      v59 = &v52[16 * v17];
      v60 = *((_QWORD *)v59 - 8);
      v61 = *((_QWORD *)v59 - 7);
      v65 = __OFSUB__(v61, v60);
      v62 = v61 - v60;
      if (v65)
        goto LABEL_121;
      v64 = *((_QWORD *)v59 - 6);
      v63 = *((_QWORD *)v59 - 5);
      v65 = __OFSUB__(v63, v64);
      v57 = v63 - v64;
      v58 = v65;
      if (v65)
        goto LABEL_122;
      v66 = v17 - 2;
      v67 = &v52[16 * v17 - 32];
      v69 = *(_QWORD *)v67;
      v68 = *((_QWORD *)v67 + 1);
      v65 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      if (v65)
        goto LABEL_124;
      v65 = __OFADD__(v57, v70);
      v71 = v57 + v70;
      if (v65)
        goto LABEL_127;
      if (v71 >= v62)
      {
        v89 = &v52[16 * v54];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v65 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v65)
          goto LABEL_131;
        v82 = v57 < v92;
        goto LABEL_90;
      }
    }
    else
    {
      if (v17 != 3)
      {
        v83 = *((_QWORD *)v15 + 4);
        v84 = *((_QWORD *)v15 + 5);
        v65 = __OFSUB__(v84, v83);
        v76 = v84 - v83;
        v77 = v65;
        goto LABEL_84;
      }
      v56 = *((_QWORD *)v15 + 4);
      v55 = *((_QWORD *)v15 + 5);
      v65 = __OFSUB__(v55, v56);
      v57 = v55 - v56;
      v58 = v65;
    }
    if ((v58 & 1) != 0)
      goto LABEL_123;
    v66 = v17 - 2;
    v72 = &v52[16 * v17 - 32];
    v74 = *(_QWORD *)v72;
    v73 = *((_QWORD *)v72 + 1);
    v75 = __OFSUB__(v73, v74);
    v76 = v73 - v74;
    v77 = v75;
    if (v75)
      goto LABEL_126;
    v78 = &v52[16 * v54];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v65 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v65)
      goto LABEL_129;
    if (__OFADD__(v76, v81))
      goto LABEL_130;
    if (v76 + v81 >= v57)
    {
      v82 = v57 < v81;
LABEL_90:
      if (v82)
        v54 = v66;
      goto LABEL_92;
    }
LABEL_84:
    if ((v77 & 1) != 0)
      goto LABEL_125;
    v85 = &v52[16 * v54];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v65 = __OFSUB__(v86, v87);
    v88 = v86 - v87;
    if (v65)
      goto LABEL_128;
    if (v88 < v76)
      goto LABEL_16;
LABEL_92:
    v93 = v54 - 1;
    if (v54 - 1 >= v17)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    v94 = *a1;
    if (!*a1)
      goto LABEL_143;
    v95 = v52;
    v96 = &v52[16 * v93];
    v97 = *(_QWORD *)v96;
    v98 = v54;
    v99 = &v95[16 * v54];
    v100 = *((_QWORD *)v99 + 1);
    v101 = (char *)(v94 + 160 * *(_QWORD *)v96);
    v126 = v94 + 160 * v100;
    v129 = (char *)(v94 + 160 * *(_QWORD *)v99);
    swift_retain();
    sub_1BACA9F04(v101, v129, v126, v124, v146, v130);
    if (v131)
      break;
    if (v100 < v97)
      goto LABEL_118;
    if (v98 > *((_QWORD *)v15 + 2))
      goto LABEL_119;
    v102 = v98;
    *(_QWORD *)v96 = v97;
    v52 = v15 + 32;
    *(_QWORD *)&v15[16 * v93 + 40] = v100;
    v103 = *((_QWORD *)v15 + 2);
    if (v98 >= v103)
      goto LABEL_120;
    v131 = 0;
    v17 = v103 - 1;
    memmove(v99, v99 + 16, 16 * (v103 - 1 - v102));
    *((_QWORD *)v15 + 2) = v103 - 1;
    a1 = v123;
    if (v103 <= 2)
      goto LABEL_16;
  }
  v104 = v117;
LABEL_101:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v104 + 16) = 0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BACB0D60(_QWORD **a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  sub_1BA6AA10C(0, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BACAB834(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BA7EF74C(v12, a2, a3, &qword_1ED3B9708, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, &qword_1ED3B9748, (uint64_t)&unk_1E729F070, (uint64_t)&unk_1E729F098, (uint64_t)&unk_1E729F0C0);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1BACB0E94(_QWORD **a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  sub_1BA6AA10C(0, &qword_1ED3AB190, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BACAB870(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BA7EF74C(v12, a2, a3, &qword_1ED3AB190, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, &qword_1ED39EA58, (uint64_t)&unk_1E729F598, (uint64_t)&unk_1E729F5C0, (uint64_t)&unk_1E729F5E8);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1BACB0FC8(_QWORD **a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  sub_1BA6AA10C(0, (unint64_t *)&unk_1EF2B17F8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BACAB884(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BA7EF74C(v12, a2, a3, (unint64_t *)&unk_1EF2B17F8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, &qword_1EF2B1A50, (uint64_t)&unk_1E729F4F8, (uint64_t)&unk_1E729F520, (uint64_t)&unk_1E729F548);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1BACB10FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, char *, _QWORD, char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 *v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = v5;
  if (a3 != a2)
  {
    v7 = *a4;
    v8 = (_QWORD *)(*a4 + 72 * a3 + 64);
    v28 = result;
    v31 = *a4;
LABEL_3:
    v9 = (__int128 *)(v7 + 72 * a3);
    v10 = *v9;
    v11 = *((_QWORD *)v9 + 2);
    v12 = *((_BYTE *)v9 + 24);
    v13 = *((_QWORD *)v9 + 4);
    v14 = *((_QWORD *)v9 + 5);
    v15 = *((_QWORD *)v9 + 6);
    v16 = *((_QWORD *)v9 + 7);
    v17 = *((_QWORD *)v9 + 8);
    v30 = v8;
    v32 = a3;
    while (1)
    {
      v37 = v13;
      v34 = result;
      v18 = *(v8 - 15);
      v19 = *((_BYTE *)v8 - 112);
      v20 = *(v8 - 13);
      v21 = *(v8 - 10);
      v22 = *(v8 - 9);
      v46 = v10;
      v47 = v11;
      v48 = v12 & 1;
      v49 = v13;
      v50 = v14;
      v51 = v15;
      v52 = v16;
      v53 = v17;
      v36 = v10;
      v39 = *(_OWORD *)(v8 - 17);
      v40 = v18;
      v41 = v19;
      v42 = v20;
      v43 = *((_OWORD *)v8 - 6);
      v35 = v43;
      v44 = v21;
      v45 = v22;
      v38 = v14;
      v54 = v16;
      sub_1BA75A650(v13, v14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BA75A650(v20, v35);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v23 = v6;
      v24 = a5(v36, (char *)&v46 + 8, v39, (char *)&v39 + 8);
      sub_1BA6E0CBC(v20, v35);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v37, v38);
      swift_unknownObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v23)
        break;
      if ((v24 & 1) == 0)
      {
        v6 = 0;
        v27 = v32;
        v7 = v31;
LABEL_10:
        a3 = v27 + 1;
        v8 = v30 + 9;
        result = v28;
        if (a3 != a2)
          goto LABEL_3;
        return result;
      }
      v7 = v31;
      if (!v31)
      {
        __break(1u);
        return result;
      }
      v10 = *((_OWORD *)v8 - 4);
      v11 = *(v8 - 6);
      v12 = *((_BYTE *)v8 - 40);
      v13 = *(v8 - 4);
      v14 = *(v8 - 3);
      v15 = *(v8 - 2);
      v16 = *(v8 - 1);
      v17 = *v8;
      v25 = *(_OWORD *)(v8 - 11);
      *((_OWORD *)v8 - 2) = *(_OWORD *)(v8 - 13);
      *((_OWORD *)v8 - 1) = v25;
      *v8 = *(v8 - 9);
      v26 = *(_OWORD *)(v8 - 15);
      *((_OWORD *)v8 - 4) = *(_OWORD *)(v8 - 17);
      *((_OWORD *)v8 - 3) = v26;
      *(v8 - 9) = v17;
      v8 -= 9;
      *((_OWORD *)v8 - 4) = v10;
      *(v8 - 6) = v11;
      *((_BYTE *)v8 - 40) = v12;
      *(v8 - 4) = v13;
      *(v8 - 3) = v14;
      result = v34 + 1;
      *(v8 - 2) = v15;
      *(v8 - 1) = v16;
      v27 = v32;
      v6 = 0;
      if (v32 == v34 + 1)
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t sub_1BACB1360(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  __int128 v152;
  char *__dst;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  __int128 v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v4 = v3;
  v177 = a3;
  v6 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_139;
    if (v6)
      return sub_1BACB10FC(0, v6, 1, a1, a2);
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_148;
  v142 = v6;
  v139 = result;
  v134 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v140 = MEMORY[0x1E0DEE9D8];
    if (v6 != 1)
    {
      v53 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_103;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BACB5E30(0, (unint64_t *)&unk_1EF2B17E0);
    v10 = sub_1BB872E74();
    *(_QWORD *)(v10 + 16) = v9;
    v140 = v10;
    __dst = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v135 = *a1 + 104;
  v133 = *a1 + 64;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v14 = v142;
  v158 = *a1;
  while (1)
  {
    v15 = v12 + 1;
    v141 = v11;
    if (v12 + 1 < v14)
    {
      v16 = v13 + 72 * v15;
      v17 = *(_QWORD *)(v16 + 16);
      v18 = *(_BYTE *)(v16 + 24);
      v159 = v4;
      v19 = *(_QWORD *)(v16 + 32);
      v20 = *(_QWORD *)(v16 + 56);
      v21 = *(_QWORD *)(v16 + 64);
      v22 = v13 + 72 * v12;
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_BYTE *)(v22 + 24);
      v25 = *(_QWORD *)(v22 + 32);
      v26 = *(_QWORD *)(v22 + 56);
      v27 = *(_QWORD *)(v22 + 64);
      v170 = *(_OWORD *)v16;
      v151 = v170;
      v171 = v17;
      v172 = v18;
      v173 = v19;
      v174 = *(_OWORD *)(v16 + 40);
      v175 = v20;
      v176 = v21;
      v163 = *(_OWORD *)v22;
      v164 = v23;
      v165 = v24;
      v166 = v25;
      v167 = *(_OWORD *)(v22 + 40);
      v148 = v167;
      v28 = v174;
      v168 = v26;
      v169 = v27;
      sub_1BA75A650(v19, v174);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BA75A650(v25, v148);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v144 = a2(v151, (char *)&v170 + 8, v163, (char *)&v163 + 8);
      if (v159)
      {
        sub_1BA6E0CBC(v25, v148);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v19, v28);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
LABEL_116:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v140 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      sub_1BA6E0CBC(v25, v148);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v19, v28);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v12 + 2;
      if (v12 + 2 < v142)
      {
        v136 = v12;
        v29 = v135 + 72 * v12;
        while (1)
        {
          v154 = v15;
          v30 = *(_QWORD *)(v29 + 56);
          v31 = *(_BYTE *)(v29 + 64);
          v32 = *(_QWORD *)(v29 + 72);
          v33 = *(_QWORD *)(v29 + 96);
          v34 = *(_QWORD *)(v29 + 104);
          v35 = *(_QWORD *)(v29 - 16);
          v36 = *(_BYTE *)(v29 - 8);
          v37 = *(_QWORD *)v29;
          v38 = *(_QWORD *)(v29 + 24);
          v39 = *(_QWORD *)(v29 + 32);
          v170 = *(_OWORD *)(v29 + 40);
          v149 = v170;
          v171 = v30;
          v172 = v31;
          v173 = v32;
          v174 = *(_OWORD *)(v29 + 80);
          v175 = v33;
          v176 = v34;
          v163 = *(_OWORD *)(v29 - 32);
          v164 = v35;
          v165 = v36;
          v166 = v37;
          v167 = *(_OWORD *)(v29 + 8);
          v146 = v167;
          v40 = v174;
          v168 = v38;
          v169 = v39;
          sub_1BA75A650(v32, v174);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          sub_1BA75A650(v37, v146);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v41 = a2(v149, (char *)&v170 + 8, v163, (char *)&v163 + 8);
          sub_1BA6E0CBC(v37, v146);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v32, v40);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if (((v144 ^ v41) & 1) != 0)
            break;
          v15 = v154 + 1;
          v29 += 72;
          if (v142 == v154 + 1)
          {
            v15 = v142;
            goto LABEL_21;
          }
        }
        v15 = v154;
LABEL_21:
        v12 = v136;
      }
      v13 = v158;
      v4 = 0;
      v11 = v141;
      if ((v144 & 1) != 0)
      {
        if (v15 < v12)
          goto LABEL_143;
        if (v12 < v15)
        {
          v42 = v12;
          v43 = v15;
          v44 = 72 * v15;
          v45 = 72 * v42;
          v155 = v43;
          v137 = v42;
          do
          {
            if (v42 != --v43)
            {
              if (!v13)
                goto LABEL_146;
              v46 = v13 + v44;
              v47 = *(_QWORD *)(v13 + v45 + 16);
              v48 = *(_BYTE *)(v13 + v45 + 24);
              v49 = *(_QWORD *)(v13 + v45 + 48);
              v160 = *(_OWORD *)(v13 + v45 + 56);
              v150 = *(_OWORD *)(v13 + v45);
              v152 = *(_OWORD *)(v13 + v45 + 32);
              memmove((void *)(v13 + v45), (const void *)(v13 + v44 - 72), 0x48uLL);
              v13 = v158;
              *(_OWORD *)(v46 - 72) = v150;
              *(_QWORD *)(v46 - 56) = v47;
              *(_BYTE *)(v46 - 48) = v48;
              *(_OWORD *)(v46 - 40) = v152;
              *(_QWORD *)(v46 - 24) = v49;
              *(_OWORD *)(v46 - 16) = v160;
              v11 = v141;
            }
            ++v42;
            v44 -= 72;
            v45 += 72;
          }
          while (v42 < v43);
          v15 = v155;
          v12 = v137;
        }
      }
    }
    if (v15 >= v142)
      goto LABEL_41;
    if (__OFSUB__(v15, v12))
      goto LABEL_140;
    if (v15 - v12 >= v139)
    {
LABEL_41:
      if (v15 < v12)
        goto LABEL_138;
      goto LABEL_42;
    }
    if (__OFADD__(v12, v139))
      goto LABEL_141;
    v50 = v12 + v139 >= v142 ? v142 : v12 + v139;
    if (v50 < v12)
      break;
    if (v15 == v50)
      goto LABEL_41;
    v138 = v12;
    v161 = v4;
    v101 = (_QWORD *)(v133 + 72 * v15);
    v131 = v50;
    do
    {
      v102 = v13 + 72 * v15;
      v103 = *(_OWORD *)v102;
      v104 = *(_QWORD *)(v102 + 16);
      v105 = *(_BYTE *)(v102 + 24);
      v106 = *(_QWORD *)(v102 + 32);
      v107 = *(_QWORD *)(v102 + 40);
      v108 = *(_QWORD *)(v102 + 48);
      v109 = *(_QWORD *)(v102 + 56);
      v110 = *(_QWORD *)(v102 + 64);
      v111 = v138;
      v132 = v101;
      v157 = v15;
      while (1)
      {
        v143 = v111;
        v112 = *(v101 - 15);
        v113 = *((_BYTE *)v101 - 112);
        v114 = *(v101 - 13);
        v115 = *(v101 - 10);
        v116 = *(v101 - 9);
        v170 = v103;
        v171 = v104;
        v172 = v105 & 1;
        v173 = v106;
        *(_QWORD *)&v174 = v107;
        *((_QWORD *)&v174 + 1) = v108;
        v175 = v109;
        v176 = v110;
        v147 = v103;
        v163 = *(_OWORD *)(v101 - 17);
        v164 = v112;
        v165 = v113;
        v166 = v114;
        v167 = *((_OWORD *)v101 - 6);
        v145 = v167;
        v168 = v115;
        v169 = v116;
        v117 = v106;
        v118 = v107;
        sub_1BA75A650(v106, v107);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1BA75A650(v114, v145);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v119 = a2(v147, (char *)&v170 + 8, v163, (char *)&v163 + 8);
        if (v161)
        {
          sub_1BA6E0CBC(v114, v145);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v117, v118);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_116;
        }
        v120 = v119;
        sub_1BA6E0CBC(v114, v145);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v117, v118);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        if ((v120 & 1) == 0)
          break;
        v121 = v157;
        v13 = v158;
        if (!v158)
          goto LABEL_145;
        v103 = *((_OWORD *)v101 - 4);
        v104 = *(v101 - 6);
        v105 = *((_BYTE *)v101 - 40);
        v106 = *(v101 - 4);
        v107 = *(v101 - 3);
        v108 = *(v101 - 2);
        v109 = *(v101 - 1);
        v110 = *v101;
        v122 = *(_OWORD *)(v101 - 11);
        *((_OWORD *)v101 - 2) = *(_OWORD *)(v101 - 13);
        *((_OWORD *)v101 - 1) = v122;
        *v101 = *(v101 - 9);
        v123 = *(_OWORD *)(v101 - 15);
        *((_OWORD *)v101 - 4) = *(_OWORD *)(v101 - 17);
        *((_OWORD *)v101 - 3) = v123;
        *(v101 - 9) = v110;
        v101 -= 9;
        *((_OWORD *)v101 - 4) = v103;
        *(v101 - 6) = v104;
        *((_BYTE *)v101 - 40) = v105;
        *(v101 - 4) = v106;
        *(v101 - 3) = v107;
        v111 = v143 + 1;
        *(v101 - 2) = v108;
        *(v101 - 1) = v109;
        if (v157 == v143 + 1)
          goto LABEL_99;
      }
      v121 = v157;
      v13 = v158;
LABEL_99:
      v15 = v121 + 1;
      v101 = v132 + 9;
    }
    while (v15 != v131);
    v15 = v131;
    v4 = 0;
    v11 = v141;
    v12 = v138;
    if (v131 < v138)
      goto LABEL_138;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v52 = *((_QWORD *)v11 + 2);
    v51 = *((_QWORD *)v11 + 3);
    v53 = v52 + 1;
    v13 = v158;
    v156 = v15;
    if (v52 >= v51 >> 1)
    {
      v124 = sub_1BACAA368((char *)(v51 > 1), v52 + 1, 1, v11);
      v13 = v158;
      v11 = v124;
    }
    *((_QWORD *)v11 + 2) = v53;
    v54 = v11 + 32;
    v55 = &v11[16 * v52 + 32];
    *(_QWORD *)v55 = v12;
    *((_QWORD *)v55 + 1) = v156;
    if (v52)
    {
LABEL_47:
      v56 = v53 - 1;
      if (v53 >= 4)
      {
        v61 = &v54[16 * v53];
        v62 = *((_QWORD *)v61 - 8);
        v63 = *((_QWORD *)v61 - 7);
        v67 = __OFSUB__(v63, v62);
        v64 = v63 - v62;
        if (v67)
          goto LABEL_123;
        v66 = *((_QWORD *)v61 - 6);
        v65 = *((_QWORD *)v61 - 5);
        v67 = __OFSUB__(v65, v66);
        v59 = v65 - v66;
        v60 = v67;
        if (v67)
          goto LABEL_124;
        v68 = v53 - 2;
        v69 = &v54[16 * v53 - 32];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v67 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v67)
          goto LABEL_126;
        v67 = __OFADD__(v59, v72);
        v73 = v59 + v72;
        if (v67)
          goto LABEL_129;
        if (v73 >= v64)
        {
          v91 = &v54[16 * v56];
          v93 = *(_QWORD *)v91;
          v92 = *((_QWORD *)v91 + 1);
          v67 = __OFSUB__(v92, v93);
          v94 = v92 - v93;
          if (v67)
            goto LABEL_133;
          v84 = v59 < v94;
        }
        else
        {
LABEL_60:
          if ((v60 & 1) != 0)
            goto LABEL_125;
          v68 = v53 - 2;
          v74 = &v54[16 * v53 - 32];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v77 = __OFSUB__(v75, v76);
          v78 = v75 - v76;
          v79 = v77;
          if (v77)
            goto LABEL_128;
          v80 = &v54[16 * v56];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v67 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v67)
            goto LABEL_131;
          if (__OFADD__(v78, v83))
            goto LABEL_132;
          if (v78 + v83 < v59)
            goto LABEL_72;
          v84 = v59 < v83;
        }
        if (v84)
          v56 = v68;
      }
      else
      {
        if (v53 == 3)
        {
          v58 = *((_QWORD *)v11 + 4);
          v57 = *((_QWORD *)v11 + 5);
          v67 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          v60 = v67;
          goto LABEL_60;
        }
        v85 = *((_QWORD *)v11 + 4);
        v86 = *((_QWORD *)v11 + 5);
        v67 = __OFSUB__(v86, v85);
        v78 = v86 - v85;
        v79 = v67;
LABEL_72:
        if ((v79 & 1) != 0)
          goto LABEL_127;
        v87 = &v54[16 * v56];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v67 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v67)
          goto LABEL_130;
        if (v90 < v78)
          goto LABEL_89;
      }
      v95 = v56 - 1;
      if (v56 - 1 >= v53)
      {
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
        break;
      }
      if (!v13)
        goto LABEL_144;
      v96 = &v54[16 * v95];
      v97 = *(_QWORD *)v96;
      v98 = &v54[16 * v56];
      v99 = *((_QWORD *)v98 + 1);
      sub_1BACA7CA4((char *)(v13 + 72 * *(_QWORD *)v96), (char *)(v13 + 72 * *(_QWORD *)v98), v13 + 72 * v99, __dst, a2);
      if (v4)
        goto LABEL_116;
      if (v99 < v97)
        goto LABEL_120;
      if (v56 > *((_QWORD *)v11 + 2))
        goto LABEL_121;
      *(_QWORD *)v96 = v97;
      *(_QWORD *)&v54[16 * v95 + 8] = v99;
      v100 = *((_QWORD *)v11 + 2);
      if (v56 >= v100)
        goto LABEL_122;
      v53 = v100 - 1;
      memmove(&v54[16 * v56], v98 + 16, 16 * (v100 - 1 - v56));
      *((_QWORD *)v11 + 2) = v100 - 1;
      v13 = v158;
      if (v100 <= 2)
        goto LABEL_89;
      goto LABEL_47;
    }
    v53 = 1;
LABEL_89:
    v14 = v142;
    v12 = v156;
    if (v156 >= v142)
    {
LABEL_103:
      if (v53 >= 2)
      {
        v125 = *v134;
        while (1)
        {
          v126 = v53 - 2;
          if (v53 < 2)
            goto LABEL_134;
          if (!v125)
            goto LABEL_147;
          v127 = *(_QWORD *)&v11[16 * v126 + 32];
          v128 = *(_QWORD *)&v11[16 * v53 + 24];
          sub_1BACA7CA4((char *)(v125 + 72 * v127), (char *)(v125 + 72 * *(_QWORD *)&v11[16 * v53 + 16]), v125 + 72 * v128, __dst, a2);
          if (v4)
            goto LABEL_116;
          if (v128 < v127)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1BACAB464((uint64_t)v11);
          if (v126 >= *((_QWORD *)v11 + 2))
            goto LABEL_136;
          v129 = &v11[16 * v126 + 32];
          *(_QWORD *)v129 = v127;
          *((_QWORD *)v129 + 1) = v128;
          v130 = *((_QWORD *)v11 + 2);
          if (v53 > v130)
            goto LABEL_137;
          memmove(&v11[16 * v53 + 16], &v11[16 * v53 + 32], 16 * (v130 - v53));
          *((_QWORD *)v11 + 2) = v130 - 1;
          v53 = v130 - 1;
          if (v130 <= 2)
            goto LABEL_116;
        }
      }
      goto LABEL_116;
    }
  }
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BACB1F08(_QWORD *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _OWORD *v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  unint64_t v109;
  char *v110;
  unint64_t v111;
  uint64_t result;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned __int8 v129;
  uint64_t v130;
  _BYTE v131[168];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  void (*v143)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  v7 = swift_allocObject();
  v143 = a2;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = a1[1];
  swift_retain_n();
  v9 = sub_1BB8741F4();
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        swift_retain();
        sub_1BACA635C(0, v8, 1, a1, v143, a3);
      }
      swift_release();
      swift_release();
      return swift_release_n();
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    swift_release_n();
    __break(1u);
LABEL_145:
    swift_release_n();
    __break(1u);
LABEL_146:
    swift_release_n();
    __break(1u);
LABEL_147:
    swift_release_n();
    __break(1u);
LABEL_148:
    swift_release_n();
    swift_release();
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_148;
  v126 = a3;
  v127 = v3;
  v114 = v9;
  if (v8 < 2)
  {
    v119 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v113 = MEMORY[0x1E0DEE9D8];
    if (v8 != 1)
    {
      v15 = (char *)MEMORY[0x1E0DEE9D8];
      v17 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_105:
      if (v17 < 2)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v113 + 16) = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      v101 = *a1;
      v128 = *a1;
      while (1)
      {
        v102 = v17 - 2;
        if (v17 < 2)
          goto LABEL_135;
        if (!v101)
          goto LABEL_147;
        v103 = v15;
        v104 = v15 + 32;
        v105 = *(_QWORD *)&v15[16 * v102 + 32];
        v106 = *(_QWORD *)&v15[16 * v17 + 24];
        v107 = (char *)(v101 + 176 * v105);
        v108 = (char *)(v101 + 176 * *(_QWORD *)&v104[16 * v17 - 16]);
        v109 = v101 + 176 * v106;
        swift_retain();
        sub_1BACA82B0(v107, v108, v109, v119, v143, v126);
        if (v127)
        {
          v100 = v113;
          goto LABEL_103;
        }
        if (v106 < v105)
          goto LABEL_136;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v103 = sub_1BACAB464((uint64_t)v103);
        if (v102 >= *((_QWORD *)v103 + 2))
          goto LABEL_137;
        v110 = &v103[16 * v102 + 32];
        *(_QWORD *)v110 = v105;
        *((_QWORD *)v110 + 1) = v106;
        v111 = *((_QWORD *)v103 + 2);
        if (v17 > v111)
          goto LABEL_138;
        v15 = v103;
        memmove(&v103[16 * v17 + 16], &v103[16 * v17 + 32], 16 * (v111 - v17));
        *((_QWORD *)v103 + 2) = v111 - 1;
        v17 = v111 - 1;
        v101 = v128;
        if (v111 <= 2)
          goto LABEL_116;
      }
    }
    v11 = 1;
  }
  else
  {
    v11 = v8;
    v12 = v10 >> 1;
    sub_1BACB5E30(0, &qword_1ED3A1038);
    v13 = sub_1BB872E74();
    *(_QWORD *)(v13 + 16) = v12;
    v113 = v13;
    v119 = (char *)(v13 + 32);
  }
  v14 = 0;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v118 = a1;
  v16 = v11;
  while (1)
  {
    v18 = v14++;
    v120 = v18;
    v19 = v16;
    if (v14 < v16)
    {
      v20 = *a1;
      v21 = (_QWORD *)(*a1 + 176 * v14);
      v22 = (uint64_t *)(*a1 + 176 * v18);
      v23 = *v22;
      *(_QWORD *)&v132 = *v21;
      sub_1BA93EB58((uint64_t)(v21 + 1), (uint64_t)&v132 + 8);
      v130 = v23;
      sub_1BA93EB58((uint64_t)(v22 + 1), (uint64_t)v131);
      v143(&v129, (uint64_t *)&v132, &v130);
      sub_1BA6AA068((uint64_t)&v130, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      sub_1BA6AA068((uint64_t)&v132, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      v122 = v129;
      v14 = v18 + 2;
      v116 = v20;
      if (v18 + 2 < v19)
      {
        v24 = v19;
        v25 = v20 + 176 * v18 + 184;
        while (1)
        {
          v26 = *(_QWORD *)(v25 - 8);
          *(_QWORD *)&v132 = *(_QWORD *)(v25 + 168);
          sub_1BA93EB58(v25 + 176, (uint64_t)&v132 + 8);
          v130 = v26;
          sub_1BA93EB58(v25, (uint64_t)v131);
          v143(&v129, (uint64_t *)&v132, &v130);
          sub_1BA6AA068((uint64_t)&v130, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
          sub_1BA6AA068((uint64_t)&v132, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
          if (v122 != v129)
            break;
          ++v14;
          v25 += 176;
          if (v24 == v14)
          {
            v19 = v24;
            v14 = v24;
            goto LABEL_24;
          }
        }
        v19 = v24;
      }
LABEL_24:
      a1 = v118;
      if (!v122)
      {
        if (v14 >= v19)
          goto LABEL_54;
        goto LABEL_36;
      }
      if (v14 < v18)
        goto LABEL_141;
      if (v18 < v14)
      {
        v123 = v19;
        v27 = v15;
        v28 = (_OWORD *)(v116 + 176 * v14 - 176);
        v29 = (__int128 *)(v116 + 176 * v18);
        v30 = v116;
        v31 = v14;
        v32 = v18;
        do
        {
          if (v32 != --v31)
          {
            if (!v30)
              goto LABEL_146;
            v139 = v29[7];
            v140 = v29[8];
            v141 = v29[9];
            v142 = v29[10];
            v135 = v29[3];
            v136 = v29[4];
            v137 = v29[5];
            v138 = v29[6];
            v132 = *v29;
            v133 = v29[1];
            v134 = v29[2];
            memmove(v29, v28, 0xB0uLL);
            v28[7] = v139;
            v28[8] = v140;
            v28[9] = v141;
            v28[10] = v142;
            v28[3] = v135;
            v28[4] = v136;
            v28[5] = v137;
            v28[6] = v138;
            *v28 = v132;
            v28[1] = v133;
            v28[2] = v134;
            v30 = v116;
          }
          ++v32;
          v28 -= 11;
          v29 += 11;
        }
        while (v32 < v31);
        v15 = v27;
        a1 = v118;
        v19 = v123;
        if (v14 >= v123)
          goto LABEL_54;
        goto LABEL_36;
      }
    }
    if (v14 >= v19)
      goto LABEL_54;
LABEL_36:
    if (__OFSUB__(v14, v18))
      goto LABEL_139;
    if (v14 - v18 < v114)
    {
      if (__OFADD__(v18, v114))
        goto LABEL_142;
      if (v18 + v114 >= v19)
        v33 = v19;
      else
        v33 = v18 + v114;
      if (v33 < v18)
        goto LABEL_143;
      if (v14 != v33)
      {
        v117 = v33;
        v34 = 176 * v14 - 176;
        do
        {
          v35 = v18;
          v124 = v34;
          v36 = v34;
          do
          {
            v37 = (uint64_t *)(*a1 + v36);
            v38 = *v37;
            v39 = (uint64_t)(v37 + 1);
            *(_QWORD *)&v132 = v37[22];
            sub_1BA93EB58((uint64_t)(v37 + 23), (uint64_t)&v132 + 8);
            v130 = v38;
            sub_1BA93EB58(v39, (uint64_t)v131);
            v143(&v129, (uint64_t *)&v132, &v130);
            sub_1BA6AA068((uint64_t)&v130, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
            sub_1BA6AA068((uint64_t)&v132, (uint64_t)&unk_1ED3A16E0, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
            if (v129 != 1)
              break;
            if (!*a1)
              goto LABEL_144;
            v40 = (_OWORD *)(*a1 + v36);
            v139 = v40[18];
            v140 = v40[19];
            v141 = v40[20];
            v142 = v40[21];
            v135 = v40[14];
            v136 = v40[15];
            v137 = v40[16];
            v138 = v40[17];
            v132 = v40[11];
            v133 = v40[12];
            v134 = v40[13];
            v41 = v40[9];
            v40[19] = v40[8];
            v40[20] = v41;
            v40[21] = v40[10];
            v42 = v40[5];
            v40[15] = v40[4];
            v40[16] = v42;
            v43 = v40[7];
            v40[17] = v40[6];
            v40[18] = v43;
            v44 = v40[1];
            v40[11] = *v40;
            v40[12] = v44;
            v45 = v40[3];
            v40[13] = v40[2];
            v40[14] = v45;
            v40[7] = v139;
            v40[8] = v140;
            v40[9] = v141;
            v40[10] = v142;
            v40[3] = v135;
            v40[4] = v136;
            v40[5] = v137;
            v40[6] = v138;
            *v40 = v132;
            v40[1] = v133;
            v40[2] = v134;
            v36 -= 176;
            ++v35;
          }
          while (v14 != v35);
          ++v14;
          v18 = v120;
          v34 = v124 + 176;
        }
        while (v14 != v117);
        v14 = v117;
      }
    }
LABEL_54:
    if (v14 < v18)
    {
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
      goto LABEL_140;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1BACAA368(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v47 = *((_QWORD *)v15 + 2);
    v46 = *((_QWORD *)v15 + 3);
    v17 = v47 + 1;
    if (v47 >= v46 >> 1)
      v15 = sub_1BACAA368((char *)(v46 > 1), v47 + 1, 1, v15);
    *((_QWORD *)v15 + 2) = v17;
    v48 = v15 + 32;
    v49 = &v15[16 * v47 + 32];
    *(_QWORD *)v49 = v18;
    *((_QWORD *)v49 + 1) = v14;
    if (v47)
      break;
    v17 = 1;
LABEL_16:
    v16 = a1[1];
    if (v14 >= v16)
      goto LABEL_105;
  }
  v115 = v14;
  while (1)
  {
    v50 = v17 - 1;
    if (v17 >= 4)
    {
      v55 = &v48[16 * v17];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_123;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_124;
      v62 = v17 - 2;
      v63 = &v48[16 * v17 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_126;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_129;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_133;
        v78 = v53 < v88;
        goto LABEL_92;
      }
    }
    else
    {
      if (v17 != 3)
      {
        v79 = *((_QWORD *)v15 + 4);
        v80 = *((_QWORD *)v15 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_86;
      }
      v52 = *((_QWORD *)v15 + 4);
      v51 = *((_QWORD *)v15 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_125;
    v62 = v17 - 2;
    v68 = &v48[16 * v17 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_128;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_131;
    if (__OFADD__(v72, v77))
      goto LABEL_132;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_92:
      if (v78)
        v50 = v62;
      goto LABEL_94;
    }
LABEL_86:
    if ((v73 & 1) != 0)
      goto LABEL_127;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_130;
    if (v84 < v72)
      goto LABEL_16;
LABEL_94:
    v89 = v50 - 1;
    if (v50 - 1 >= v17)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    v90 = *a1;
    if (!*a1)
      goto LABEL_145;
    v91 = v48;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v50;
    v95 = &v91[16 * v50];
    v96 = *((_QWORD *)v95 + 1);
    v97 = (char *)(v90 + 176 * *(_QWORD *)v92);
    v121 = v90 + 176 * v96;
    v125 = (char *)(v90 + 176 * *(_QWORD *)v95);
    swift_retain();
    sub_1BACA82B0(v97, v125, v121, v119, v143, v126);
    if (v127)
      break;
    if (v96 < v93)
      goto LABEL_120;
    if (v94 > *((_QWORD *)v15 + 2))
      goto LABEL_121;
    v98 = v94;
    *(_QWORD *)v92 = v93;
    v48 = v15 + 32;
    *(_QWORD *)&v15[16 * v89 + 40] = v96;
    v99 = *((_QWORD *)v15 + 2);
    if (v94 >= v99)
      goto LABEL_122;
    v127 = 0;
    v17 = v99 - 1;
    memmove(v95, v95 + 16, 16 * (v99 - 1 - v98));
    *((_QWORD *)v15 + 2) = v99 - 1;
    a1 = v118;
    v14 = v115;
    if (v99 <= 2)
      goto LABEL_16;
  }
  v100 = v113;
LABEL_103:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v100 + 16) = 0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BACB2A78(_QWORD **a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  sub_1BA6AA10C(0, &qword_1ED39BFD0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BACAB8C0(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BA7EF74C(v12, a2, a3, &qword_1ED39BFD0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, (unint64_t *)&unk_1ED39BFE0, (uint64_t)&unk_1E729F390, (uint64_t)&unk_1E729F3B8, (uint64_t)&unk_1E729F3E0);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1BACB2BAC(_QWORD *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t result;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  _BYTE v135[152];
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  _OWORD v144[3];
  void (*v145)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);

  v7 = swift_allocObject();
  v145 = a2;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = a1[1];
  swift_retain_n();
  v9 = sub_1BB8741F4();
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        swift_retain();
        sub_1BACA6608(0, v8, 1, a1, v145, a3);
      }
      swift_release();
      swift_release();
      return swift_release_n();
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_146;
  v130 = a3;
  v131 = v3;
  v118 = v9;
  if (v8 < 2)
  {
    v124 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v117 = MEMORY[0x1E0DEE9D8];
    if (v8 != 1)
    {
      v15 = (char *)MEMORY[0x1E0DEE9D8];
      v17 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
      if (v17 < 2)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v117 + 16) = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      v105 = *a1;
      v132 = *a1;
      while (1)
      {
        v106 = v17 - 2;
        if (v17 < 2)
          break;
        if (!v105)
          goto LABEL_145;
        v107 = v15;
        v108 = v15 + 32;
        v109 = *(_QWORD *)&v15[16 * v106 + 32];
        v110 = *(_QWORD *)&v15[16 * v17 + 24];
        v111 = (char *)(v105 + 160 * v109);
        v112 = (char *)(v105 + 160 * *(_QWORD *)&v108[16 * v17 - 16]);
        v113 = v105 + 160 * v110;
        swift_retain();
        sub_1BACA871C(v111, v112, v113, v124, v145, v130);
        if (v131)
        {
          v104 = v117;
          goto LABEL_101;
        }
        if (v110 < v109)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v107 = sub_1BACAB464((uint64_t)v107);
        if (v106 >= *((_QWORD *)v107 + 2))
          goto LABEL_135;
        v114 = &v107[16 * v106 + 32];
        *(_QWORD *)v114 = v109;
        *((_QWORD *)v114 + 1) = v110;
        v115 = *((_QWORD *)v107 + 2);
        if (v17 > v115)
          goto LABEL_136;
        v15 = v107;
        memmove(&v107[16 * v17 + 16], &v107[16 * v17 + 32], 16 * (v115 - v17));
        *((_QWORD *)v107 + 2) = v115 - 1;
        v17 = v115 - 1;
        v105 = v132;
        if (v115 <= 2)
          goto LABEL_114;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    v11 = 1;
  }
  else
  {
    v11 = v8;
    v12 = v10 >> 1;
    sub_1BACB5E30(0, &qword_1ED3AB1A8);
    v13 = sub_1BB872E74();
    *(_QWORD *)(v13 + 16) = v12;
    v117 = v13;
    v124 = (char *)(v13 + 32);
  }
  v14 = 0;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v123 = a1;
  v16 = v11;
  while (1)
  {
    v18 = v14;
    v19 = v14 + 1;
    v125 = v14;
    v20 = v16;
    if (v14 + 1 >= v16)
    {
LABEL_34:
      if (v19 >= v20)
        goto LABEL_53;
      goto LABEL_35;
    }
    v21 = *a1;
    v22 = (_QWORD *)(*a1 + 160 * v19);
    v23 = (uint64_t *)(*a1 + 160 * v14);
    v24 = *v23;
    *(_QWORD *)&v136 = *v22;
    sub_1BA6A955C((uint64_t)(v22 + 1), (uint64_t)&v136 + 8);
    v134 = v24;
    sub_1BA6A955C((uint64_t)(v23 + 1), (uint64_t)v135);
    v145(&v133, (uint64_t *)&v136, &v134);
    v127 = v20;
    sub_1BA6AA068((uint64_t)&v134, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
    sub_1BA6AA068((uint64_t)&v136, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
    v25 = v133;
    v19 = v18 + 2;
    v121 = v21;
    if (v18 + 2 >= v20)
      goto LABEL_23;
    v26 = v18;
    v27 = v18 + 2;
    v28 = v21 + 160 * v26 + 168;
    do
    {
      v29 = *(_QWORD *)(v28 - 8);
      *(_QWORD *)&v136 = *(_QWORD *)(v28 + 152);
      sub_1BA6A955C(v28 + 160, (uint64_t)&v136 + 8);
      v134 = v29;
      sub_1BA6A955C(v28, (uint64_t)v135);
      v145(&v133, (uint64_t *)&v136, &v134);
      sub_1BA6AA068((uint64_t)&v134, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      sub_1BA6AA068((uint64_t)&v136, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
      if (v25 != v133)
      {
        v19 = v27;
        v18 = v125;
        v20 = v127;
        a1 = v123;
        if (v25)
          goto LABEL_24;
LABEL_32:
        if (v19 >= v20)
          goto LABEL_53;
LABEL_35:
        if (!__OFSUB__(v19, v18))
        {
          if (v19 - v18 >= v118)
            goto LABEL_53;
          if (!__OFADD__(v18, v118))
          {
            if (v18 + v118 >= v20)
              v36 = v20;
            else
              v36 = v18 + v118;
            if (v36 >= v18)
            {
              if (v19 != v36)
              {
                v119 = v15;
                v122 = v36;
                v37 = 160 * v19 - 160;
                do
                {
                  v38 = v19;
                  v39 = v18;
                  v128 = v37;
                  v40 = v37;
                  do
                  {
                    v41 = (uint64_t *)(*a1 + v40);
                    v42 = *v41;
                    v43 = (uint64_t)(v41 + 1);
                    *(_QWORD *)&v136 = v41[20];
                    sub_1BA6A955C((uint64_t)(v41 + 21), (uint64_t)&v136 + 8);
                    v134 = v42;
                    sub_1BA6A955C(v43, (uint64_t)v135);
                    v145(&v133, (uint64_t *)&v136, &v134);
                    sub_1BA6AA068((uint64_t)&v134, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
                    sub_1BA6AA068((uint64_t)&v136, (uint64_t)&qword_1ED3AB1C0, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BACB5DD8);
                    if (v133 != 1)
                      break;
                    if (!*a1)
                      goto LABEL_142;
                    v44 = (_OWORD *)(*a1 + v40);
                    v142 = v44[16];
                    v143 = v44[17];
                    v144[0] = v44[18];
                    v138 = v44[12];
                    v139 = v44[13];
                    v140 = v44[14];
                    v141 = v44[15];
                    v136 = v44[10];
                    v137 = v44[11];
                    *(_OWORD *)((char *)v144 + 9) = *(_OWORD *)((char *)v44 + 297);
                    v45 = v44[7];
                    v44[16] = v44[6];
                    v44[17] = v45;
                    v46 = v44[9];
                    v44[18] = v44[8];
                    v44[19] = v46;
                    v47 = v44[3];
                    v44[12] = v44[2];
                    v44[13] = v47;
                    v48 = v44[5];
                    v44[14] = v44[4];
                    v44[15] = v48;
                    v49 = v44[1];
                    v44[10] = *v44;
                    v44[11] = v49;
                    v44[6] = v142;
                    v44[7] = v143;
                    v44[8] = v144[0];
                    *(_OWORD *)((char *)v44 + 137) = *(_OWORD *)((char *)v144 + 9);
                    v44[2] = v138;
                    v44[3] = v139;
                    v44[4] = v140;
                    v44[5] = v141;
                    *v44 = v136;
                    v44[1] = v137;
                    v40 -= 160;
                    ++v39;
                  }
                  while (v38 != v39);
                  v19 = v38 + 1;
                  v18 = v125;
                  v37 = v128 + 160;
                }
                while (v38 + 1 != v122);
                v19 = v122;
                v15 = v119;
              }
              goto LABEL_53;
            }
            goto LABEL_141;
          }
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          swift_release_n();
          __break(1u);
LABEL_143:
          swift_release_n();
          __break(1u);
LABEL_144:
          swift_release_n();
          __break(1u);
LABEL_145:
          swift_release_n();
          __break(1u);
LABEL_146:
          swift_release_n();
          swift_release();
          result = sub_1BB873EA0();
          __break(1u);
          return result;
        }
        goto LABEL_137;
      }
      v28 += 160;
      ++v27;
    }
    while (v127 != v27);
    v18 = v125;
    v20 = v127;
    v19 = v127;
LABEL_23:
    a1 = v123;
    if (!v25)
      goto LABEL_32;
LABEL_24:
    if (v19 < v18)
      goto LABEL_139;
    if (v18 >= v19)
      goto LABEL_34;
    v30 = v15;
    v31 = v19;
    v32 = (_OWORD *)(v121 + 160 * v19 - 160);
    v33 = (__int128 *)(v121 + 160 * v18);
    v34 = v121;
    v35 = v18;
    do
    {
      if (v35 != --v31)
      {
        if (!v34)
          goto LABEL_144;
        v142 = v33[6];
        v143 = v33[7];
        v144[0] = v33[8];
        *(_OWORD *)((char *)v144 + 9) = *(__int128 *)((char *)v33 + 137);
        v138 = v33[2];
        v139 = v33[3];
        v140 = v33[4];
        v141 = v33[5];
        v136 = *v33;
        v137 = v33[1];
        memmove(v33, v32, 0xA0uLL);
        v32[6] = v142;
        v32[7] = v143;
        v32[8] = v144[0];
        *(_OWORD *)((char *)v32 + 137) = *(_OWORD *)((char *)v144 + 9);
        v32[2] = v138;
        v32[3] = v139;
        v32[4] = v140;
        v32[5] = v141;
        *v32 = v136;
        v32[1] = v137;
        v34 = v121;
      }
      ++v35;
      v32 -= 10;
      v33 += 10;
    }
    while (v35 < v31);
    v15 = v30;
    a1 = v123;
    v20 = v127;
    if (v19 < v127)
      goto LABEL_35;
LABEL_53:
    if (v19 < v18)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    v120 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1BACAA368(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v51 = *((_QWORD *)v15 + 2);
    v50 = *((_QWORD *)v15 + 3);
    v17 = v51 + 1;
    if (v51 >= v50 >> 1)
      v15 = sub_1BACAA368((char *)(v50 > 1), v51 + 1, 1, v15);
    *((_QWORD *)v15 + 2) = v17;
    v52 = v15 + 32;
    v53 = &v15[16 * v51 + 32];
    *(_QWORD *)v53 = v18;
    *((_QWORD *)v53 + 1) = v19;
    if (v51)
      break;
    v17 = 1;
LABEL_16:
    v16 = a1[1];
    v14 = v120;
    if (v120 >= v16)
      goto LABEL_103;
  }
  while (1)
  {
    v54 = v17 - 1;
    if (v17 >= 4)
    {
      v59 = &v52[16 * v17];
      v60 = *((_QWORD *)v59 - 8);
      v61 = *((_QWORD *)v59 - 7);
      v65 = __OFSUB__(v61, v60);
      v62 = v61 - v60;
      if (v65)
        goto LABEL_121;
      v64 = *((_QWORD *)v59 - 6);
      v63 = *((_QWORD *)v59 - 5);
      v65 = __OFSUB__(v63, v64);
      v57 = v63 - v64;
      v58 = v65;
      if (v65)
        goto LABEL_122;
      v66 = v17 - 2;
      v67 = &v52[16 * v17 - 32];
      v69 = *(_QWORD *)v67;
      v68 = *((_QWORD *)v67 + 1);
      v65 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      if (v65)
        goto LABEL_124;
      v65 = __OFADD__(v57, v70);
      v71 = v57 + v70;
      if (v65)
        goto LABEL_127;
      if (v71 >= v62)
      {
        v89 = &v52[16 * v54];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v65 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v65)
          goto LABEL_131;
        v82 = v57 < v92;
        goto LABEL_90;
      }
    }
    else
    {
      if (v17 != 3)
      {
        v83 = *((_QWORD *)v15 + 4);
        v84 = *((_QWORD *)v15 + 5);
        v65 = __OFSUB__(v84, v83);
        v76 = v84 - v83;
        v77 = v65;
        goto LABEL_84;
      }
      v56 = *((_QWORD *)v15 + 4);
      v55 = *((_QWORD *)v15 + 5);
      v65 = __OFSUB__(v55, v56);
      v57 = v55 - v56;
      v58 = v65;
    }
    if ((v58 & 1) != 0)
      goto LABEL_123;
    v66 = v17 - 2;
    v72 = &v52[16 * v17 - 32];
    v74 = *(_QWORD *)v72;
    v73 = *((_QWORD *)v72 + 1);
    v75 = __OFSUB__(v73, v74);
    v76 = v73 - v74;
    v77 = v75;
    if (v75)
      goto LABEL_126;
    v78 = &v52[16 * v54];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v65 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v65)
      goto LABEL_129;
    if (__OFADD__(v76, v81))
      goto LABEL_130;
    if (v76 + v81 >= v57)
    {
      v82 = v57 < v81;
LABEL_90:
      if (v82)
        v54 = v66;
      goto LABEL_92;
    }
LABEL_84:
    if ((v77 & 1) != 0)
      goto LABEL_125;
    v85 = &v52[16 * v54];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v65 = __OFSUB__(v86, v87);
    v88 = v86 - v87;
    if (v65)
      goto LABEL_128;
    if (v88 < v76)
      goto LABEL_16;
LABEL_92:
    v93 = v54 - 1;
    if (v54 - 1 >= v17)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    v94 = *a1;
    if (!*a1)
      goto LABEL_143;
    v95 = v52;
    v96 = &v52[16 * v93];
    v97 = *(_QWORD *)v96;
    v98 = v54;
    v99 = &v95[16 * v54];
    v100 = *((_QWORD *)v99 + 1);
    v101 = (char *)(v94 + 160 * *(_QWORD *)v96);
    v126 = v94 + 160 * v100;
    v129 = (char *)(v94 + 160 * *(_QWORD *)v99);
    swift_retain();
    sub_1BACA871C(v101, v129, v126, v124, v145, v130);
    if (v131)
      break;
    if (v100 < v97)
      goto LABEL_118;
    if (v98 > *((_QWORD *)v15 + 2))
      goto LABEL_119;
    v102 = v98;
    *(_QWORD *)v96 = v97;
    v52 = v15 + 32;
    *(_QWORD *)&v15[16 * v93 + 40] = v100;
    v103 = *((_QWORD *)v15 + 2);
    if (v98 >= v103)
      goto LABEL_120;
    v131 = 0;
    v17 = v103 - 1;
    memmove(v99, v99 + 16, 16 * (v103 - 1 - v102));
    *((_QWORD *)v15 + 2) = v103 - 1;
    a1 = v123;
    if (v103 <= 2)
      goto LABEL_16;
  }
  v104 = v117;
LABEL_101:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v104 + 16) = 0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BACB3700(_QWORD **a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  sub_1BA6AA10C(0, &qword_1ED3A08D8, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BACAB8FC(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BA7EF74C(v12, a2, a3, &qword_1ED3A08D8, (void (*)(uint64_t))type metadata accessor for FeedEngagementBanner, &qword_1EF2B1A28, (uint64_t)&unk_1E729EDA0, (uint64_t)&unk_1E729EDC8, (uint64_t)&unk_1E729EDF0);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1BACB3834()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BACB3858(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1BACADF1C(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, _QWORD *, _QWORD *))(v4 + 16));
}

uint64_t sub_1BACB3860(uint64_t a1, _OWORD *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;

  return sub_1BACADA48(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))(v4 + 16));
}

uint64_t sub_1BACB3868(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v12;

  v2 = *(void **)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(void **)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 128);
  v9 = *(id *)(a1 + 8);
  swift_bridgeObjectRetain();
  v10 = v2;
  sub_1BA8D1FA8(v3, v4, v5, v6, v7);
  sub_1BA75A650(v12, v8);
  return a1;
}

uint64_t sub_1BACB3908(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(void **)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 128);

  swift_bridgeObjectRelease();
  sub_1BA7B9D78(v3, v4, v5, v6, v7);
  sub_1BA6E0CBC(v10, v8);
  return a1;
}

void *sub_1BACB39A8(const void *a1, void *a2)
{
  __swift_memcpy282_8(a2, a1);
  return a2;
}

uint64_t sub_1BACB39E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(unint64_t, _QWORD *, _QWORD, char *))
{
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD v54[2];
  __int128 v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = (unint64_t *)(*a4 + 96 * a3 + 88);
    v32 = result;
    v35 = *a4;
LABEL_4:
    v7 = v5 + 96 * a3;
    v8 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(_OWORD *)(v7 + 24);
    v12 = *(_BYTE *)(v7 + 40);
    v13 = *(_QWORD *)(v7 + 48);
    v14 = *(_QWORD *)(v7 + 56);
    v15 = *(_QWORD *)(v7 + 64);
    v16 = *(_QWORD *)(v7 + 72);
    v18 = *(_QWORD *)(v7 + 80);
    v17 = *(_QWORD *)(v7 + 88);
    v34 = v6;
    v36 = a3;
    while (1)
    {
      v38 = result;
      v19 = *(v6 - 21);
      v20 = *((_BYTE *)v6 - 144);
      v21 = *(v6 - 17);
      v22 = *(v6 - 16);
      v23 = *(v6 - 15);
      v24 = *(v6 - 14);
      v25 = *(v6 - 13);
      v39 = *(v6 - 12);
      v40 = v8;
      v53 = v8;
      v54[0] = v9;
      v54[1] = v10;
      v55 = v11;
      v56 = v12 & 1;
      v57 = v13;
      v58 = v14;
      v59 = v15;
      v60 = v16;
      v41 = *(_OWORD *)(v6 - 23);
      v61 = v18;
      v62 = v17;
      *((_QWORD *)&v43 + 1) = *((_QWORD *)&v41 + 1);
      v44 = v19;
      v45 = *((_OWORD *)v6 - 10);
      v46 = v20;
      v47 = v21;
      v48 = v22;
      v49 = v23;
      v50 = v24;
      v51 = v25;
      v52 = v39;
      v42 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA75A650(v18, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA75A650(v25, v39);
      v26 = v63;
      v27 = a5(v40, v54, v41, (char *)&v43 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v25, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1BA6E0CBC(v18, v42);
      v63 = v26;
      if (v26)
        break;
      if ((v27 & 1) == 0)
      {
        v31 = v36;
        v5 = v35;
LABEL_11:
        a3 = v31 + 1;
        v6 = v34 + 12;
        result = v32;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v5 = v35;
      if (!v35)
      {
        __break(1u);
        return result;
      }
      v8 = *(v6 - 11);
      v9 = *(v6 - 10);
      v10 = *(v6 - 9);
      v11 = *((_OWORD *)v6 - 4);
      v12 = *((_BYTE *)v6 - 48);
      v13 = *(v6 - 5);
      v14 = *(v6 - 4);
      v15 = *(v6 - 3);
      v16 = *(v6 - 2);
      v18 = *(v6 - 1);
      v17 = *v6;
      v28 = *(_OWORD *)(v6 - 17);
      *(_OWORD *)(v6 - 7) = *(_OWORD *)(v6 - 19);
      *(_OWORD *)(v6 - 5) = v28;
      v29 = *(_OWORD *)(v6 - 13);
      *(_OWORD *)(v6 - 3) = *(_OWORD *)(v6 - 15);
      *(_OWORD *)(v6 - 1) = v29;
      v30 = *(_OWORD *)(v6 - 21);
      *(_OWORD *)(v6 - 11) = *(_OWORD *)(v6 - 23);
      *(_OWORD *)(v6 - 9) = v30;
      *(v6 - 12) = v17;
      v6 -= 12;
      *(v6 - 11) = v8;
      *(v6 - 10) = v9;
      *(v6 - 9) = v10;
      *((_OWORD *)v6 - 4) = v11;
      *((_BYTE *)v6 - 48) = v12;
      *(v6 - 5) = v13;
      *(v6 - 4) = v14;
      *(v6 - 3) = v15;
      *(v6 - 2) = v16;
      result = v38 + 1;
      *(v6 - 1) = v18;
      v31 = v36;
      if (v36 == v38 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BACB3C70(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  __int128 v117;
  char v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t *v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  int v160;
  __int128 v161;
  unint64_t v162;
  __int128 v163;
  unint64_t v164;
  unint64_t v165;
  __int128 v166;
  unint64_t v167;
  __int128 v168;
  uint64_t v169;
  char *__dst;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  __int128 v180;
  uint64_t v181;
  __int128 v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  __int128 v190;
  unint64_t v191;
  __int128 v192;
  char v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;

  v4 = v3;
  v200 = a3;
  v6 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_140;
    if (v6)
      return sub_1BACB39E4(0, v6, 1, a1, (uint64_t (*)(unint64_t, _QWORD *, _QWORD, char *))a2);
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_149;
  v156 = v6;
  v152 = result;
  v150 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v153 = MEMORY[0x1E0DEE9D8];
    if (v6 != 1)
    {
      v64 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_103;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BACB5E30(0, &qword_1EF2B1308);
    v10 = sub_1BB872E74();
    *(_QWORD *)(v10 + 16) = v9;
    v153 = v10;
    __dst = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v151 = *a1 + 144;
  v149 = *a1 + 88;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v14 = v156;
  v175 = *a1;
  do
  {
    v15 = v12;
    v16 = v12 + 1;
    v154 = v12;
    v155 = v11;
    if (v12 + 1 < v14)
    {
      v17 = v13 + 96 * v16;
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_BYTE *)(v17 + 40);
      v20 = *(_QWORD *)(v17 + 48);
      v21 = *(_QWORD *)(v17 + 56);
      v22 = *(_QWORD *)(v17 + 64);
      v23 = *(_QWORD *)(v17 + 72);
      v176 = v4;
      v24 = *(_QWORD *)(v17 + 80);
      v25 = *(_QWORD *)(v17 + 88);
      v26 = v13 + 96 * v15;
      v27 = *(_QWORD *)(v26 + 16);
      v28 = *(_BYTE *)(v26 + 40);
      v29 = *(_QWORD *)(v26 + 48);
      v30 = *(_QWORD *)(v26 + 56);
      v31 = *(_QWORD *)(v26 + 64);
      v32 = *(_QWORD *)(v26 + 72);
      v33 = *(_QWORD *)(v26 + 80);
      v34 = *(_QWORD *)(v26 + 88);
      v190 = *(_OWORD *)v17;
      v164 = v190;
      v191 = v18;
      v192 = *(_OWORD *)(v17 + 24);
      v193 = v19;
      v194 = v20;
      v195 = v21;
      v196 = v22;
      v197 = v23;
      v198 = v24;
      v199 = v25;
      v180 = *(_OWORD *)v26;
      v181 = v27;
      v182 = *(_OWORD *)(v26 + 24);
      v183 = v28;
      v184 = v29;
      v185 = v30;
      v186 = v31;
      v187 = v32;
      v188 = v33;
      v189 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v167 = v25;
      sub_1BA75A650(v24, v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA75A650(v33, v34);
      v160 = a2(v164, (char *)&v190 + 8, v180, (char *)&v180 + 8);
      if (v176)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v146 = v24;
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v33, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v24, v25);
      v16 = v15 + 2;
      if (v15 + 2 < v156)
      {
        v35 = v151 + 96 * v15;
        while (1)
        {
          v171 = v16;
          v36 = *(_QWORD *)(v35 + 64);
          v37 = *(_BYTE *)(v35 + 88);
          v38 = *(_QWORD *)(v35 + 96);
          v39 = *(_QWORD *)(v35 + 104);
          v40 = *(_QWORD *)(v35 + 112);
          v41 = *(_QWORD *)(v35 + 120);
          v43 = *(_QWORD *)(v35 + 128);
          v42 = *(_QWORD *)(v35 + 136);
          v44 = *(_QWORD *)(v35 - 32);
          v45 = *(_BYTE *)(v35 - 8);
          v46 = *(_QWORD *)v35;
          v47 = *(_QWORD *)(v35 + 8);
          v48 = *(_QWORD *)(v35 + 16);
          v49 = *(_QWORD *)(v35 + 24);
          v51 = *(_QWORD *)(v35 + 32);
          v50 = *(_QWORD *)(v35 + 40);
          v190 = *(_OWORD *)(v35 + 48);
          v162 = v190;
          v191 = v36;
          v192 = *(_OWORD *)(v35 + 72);
          v193 = v37;
          v194 = v38;
          v195 = v39;
          v196 = v40;
          v197 = v41;
          v198 = v43;
          v199 = v42;
          v180 = *(_OWORD *)(v35 - 48);
          v181 = v44;
          v182 = *(_OWORD *)(v35 - 24);
          v183 = v45;
          v184 = v46;
          v185 = v47;
          v186 = v48;
          v187 = v49;
          v188 = v51;
          v189 = v50;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v165 = v42;
          sub_1BA75A650(v43, v42);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA75A650(v51, v50);
          LODWORD(v42) = a2(v162, (char *)&v190 + 8, v180, (char *)&v180 + 8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v51, v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v43, v165);
          if (((v160 ^ v42) & 1) != 0)
            break;
          v16 = v171 + 1;
          v35 += 96;
          if (v156 == v171 + 1)
          {
            v16 = v156;
            goto LABEL_21;
          }
        }
        v16 = v171;
LABEL_21:
        v15 = v154;
      }
      v13 = v175;
      v4 = 0;
      v11 = v155;
      if ((v160 & 1) != 0)
      {
        if (v16 < v15)
          goto LABEL_144;
        if (v15 < v16)
        {
          v52 = 96 * v16;
          v53 = v15;
          v54 = 96 * v15;
          v172 = v16;
          v55 = v16;
          v56 = v53;
          do
          {
            if (v56 != --v55)
            {
              if (!v13)
                goto LABEL_147;
              v57 = v13 + v52;
              v58 = *(_QWORD *)(v13 + v54 + 16);
              v59 = *(_BYTE *)(v13 + v54 + 40);
              v177 = *(_OWORD *)(v13 + v54 + 48);
              v60 = *(_QWORD *)(v13 + v54 + 72);
              v169 = *(_QWORD *)(v13 + v54 + 64);
              v163 = *(_OWORD *)(v13 + v54);
              v166 = *(_OWORD *)(v13 + v54 + 24);
              v168 = *(_OWORD *)(v13 + v54 + 80);
              memmove((void *)(v13 + v54), (const void *)(v13 + v52 - 96), 0x60uLL);
              v13 = v175;
              *(_OWORD *)(v57 - 96) = v163;
              *(_QWORD *)(v57 - 80) = v58;
              *(_OWORD *)(v57 - 72) = v166;
              *(_BYTE *)(v57 - 56) = v59;
              *(_OWORD *)(v57 - 48) = v177;
              *(_QWORD *)(v57 - 32) = v169;
              *(_QWORD *)(v57 - 24) = v60;
              *(_OWORD *)(v57 - 16) = v168;
              v11 = v155;
            }
            ++v56;
            v52 -= 96;
            v54 += 96;
          }
          while (v56 < v55);
          v16 = v172;
          v15 = v154;
        }
      }
    }
    if (v16 >= v156)
      goto LABEL_41;
    if (__OFSUB__(v16, v15))
      goto LABEL_141;
    if (v16 - v15 >= v152)
    {
LABEL_41:
      if (v16 < v15)
        goto LABEL_139;
      goto LABEL_42;
    }
    if (__OFADD__(v15, v152))
      goto LABEL_142;
    if (v15 + v152 >= v156)
      v61 = v156;
    else
      v61 = v15 + v152;
    if (v61 < v15)
    {
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      result = sub_1BB873EA0();
      __break(1u);
      return result;
    }
    if (v16 == v61)
      goto LABEL_41;
    v178 = v4;
    v112 = (unint64_t *)(v149 + 96 * v16);
    v147 = v61;
    do
    {
      v113 = v13 + 96 * v16;
      v115 = *(_QWORD *)v113;
      v114 = *(_QWORD *)(v113 + 8);
      v116 = *(_QWORD *)(v113 + 16);
      v117 = *(_OWORD *)(v113 + 24);
      v118 = *(_BYTE *)(v113 + 40);
      v119 = *(_QWORD *)(v113 + 48);
      v120 = *(_QWORD *)(v113 + 56);
      v121 = *(_QWORD *)(v113 + 64);
      v122 = *(_QWORD *)(v113 + 72);
      v124 = *(_QWORD *)(v113 + 80);
      v123 = *(_QWORD *)(v113 + 88);
      v125 = v154;
      v148 = v112;
      v174 = v16;
      while (1)
      {
        v157 = v125;
        v158 = *(v112 - 21);
        v159 = v115;
        v126 = *((_BYTE *)v112 - 144);
        v127 = *(v112 - 17);
        v128 = *(v112 - 16);
        v129 = *(v112 - 15);
        v130 = *(v112 - 14);
        v131 = *(v112 - 13);
        v132 = *(v112 - 12);
        *(_QWORD *)&v190 = v115;
        *((_QWORD *)&v190 + 1) = v114;
        v191 = v116;
        v192 = v117;
        v193 = v118 & 1;
        v194 = v119;
        v195 = v120;
        v196 = v121;
        v197 = v122;
        v161 = *(_OWORD *)(v112 - 23);
        v198 = v124;
        v199 = v123;
        *((_QWORD *)&v180 + 1) = *((_QWORD *)&v161 + 1);
        v181 = v158;
        v182 = *((_OWORD *)v112 - 10);
        v183 = v126;
        v184 = v127;
        v185 = v128;
        v186 = v129;
        v187 = v130;
        v188 = v131;
        v189 = v132;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v167 = v123;
        sub_1BA75A650(v124, v123);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(v131, v132);
        v133 = a2(v159, (char *)&v190 + 8, v161, (char *)&v180 + 8);
        if (v178)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v131, v132);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v146 = v124;
LABEL_116:
          sub_1BA6E0CBC(v146, v167);
          swift_bridgeObjectRelease();
          goto LABEL_117;
        }
        v134 = v133;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v131, v132);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v124, v167);
        if ((v134 & 1) == 0)
          break;
        v135 = v174;
        v13 = v175;
        if (!v175)
          goto LABEL_146;
        v115 = *(v112 - 11);
        v114 = *(v112 - 10);
        v116 = *(v112 - 9);
        v117 = *((_OWORD *)v112 - 4);
        v118 = *((_BYTE *)v112 - 48);
        v119 = *(v112 - 5);
        v120 = *(v112 - 4);
        v121 = *(v112 - 3);
        v122 = *(v112 - 2);
        v124 = *(v112 - 1);
        v123 = *v112;
        v136 = *(_OWORD *)(v112 - 17);
        *(_OWORD *)(v112 - 7) = *(_OWORD *)(v112 - 19);
        *(_OWORD *)(v112 - 5) = v136;
        v137 = *(_OWORD *)(v112 - 13);
        *(_OWORD *)(v112 - 3) = *(_OWORD *)(v112 - 15);
        *(_OWORD *)(v112 - 1) = v137;
        v138 = *(_OWORD *)(v112 - 21);
        *(_OWORD *)(v112 - 11) = *(_OWORD *)(v112 - 23);
        *(_OWORD *)(v112 - 9) = v138;
        *(v112 - 12) = v123;
        v112 -= 12;
        *(v112 - 11) = v115;
        *(v112 - 10) = v114;
        *(v112 - 9) = v116;
        *((_OWORD *)v112 - 4) = v117;
        *((_BYTE *)v112 - 48) = v118;
        *(v112 - 5) = v119;
        *(v112 - 4) = v120;
        *(v112 - 3) = v121;
        *(v112 - 2) = v122;
        v125 = v157 + 1;
        *(v112 - 1) = v124;
        if (v174 == v157 + 1)
          goto LABEL_99;
      }
      v135 = v174;
      v13 = v175;
LABEL_99:
      v16 = v135 + 1;
      v112 = v148 + 12;
    }
    while (v16 != v147);
    v16 = v147;
    v4 = 0;
    v11 = v155;
    if (v147 < v154)
      goto LABEL_139;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v63 = *((_QWORD *)v11 + 2);
    v62 = *((_QWORD *)v11 + 3);
    v64 = v63 + 1;
    v13 = v175;
    if (v63 >= v62 >> 1)
    {
      v139 = sub_1BACAA368((char *)(v62 > 1), v63 + 1, 1, v11);
      v13 = v175;
      v11 = v139;
    }
    *((_QWORD *)v11 + 2) = v64;
    v65 = v11 + 32;
    v66 = &v11[16 * v63 + 32];
    *(_QWORD *)v66 = v154;
    *((_QWORD *)v66 + 1) = v16;
    v173 = v16;
    if (v63)
    {
      while (2)
      {
        v67 = v64 - 1;
        if (v64 >= 4)
        {
          v72 = &v65[16 * v64];
          v73 = *((_QWORD *)v72 - 8);
          v74 = *((_QWORD *)v72 - 7);
          v78 = __OFSUB__(v74, v73);
          v75 = v74 - v73;
          if (v78)
            goto LABEL_124;
          v77 = *((_QWORD *)v72 - 6);
          v76 = *((_QWORD *)v72 - 5);
          v78 = __OFSUB__(v76, v77);
          v70 = v76 - v77;
          v71 = v78;
          if (v78)
            goto LABEL_125;
          v79 = v64 - 2;
          v80 = &v65[16 * v64 - 32];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v78 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v78)
            goto LABEL_127;
          v78 = __OFADD__(v70, v83);
          v84 = v70 + v83;
          if (v78)
            goto LABEL_130;
          if (v84 >= v75)
          {
            v102 = &v65[16 * v67];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v78 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v78)
              goto LABEL_134;
            v95 = v70 < v105;
          }
          else
          {
LABEL_60:
            if ((v71 & 1) != 0)
              goto LABEL_126;
            v79 = v64 - 2;
            v85 = &v65[16 * v64 - 32];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v88 = __OFSUB__(v86, v87);
            v89 = v86 - v87;
            v90 = v88;
            if (v88)
              goto LABEL_129;
            v91 = &v65[16 * v67];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v78 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v78)
              goto LABEL_132;
            if (__OFADD__(v89, v94))
              goto LABEL_133;
            if (v89 + v94 < v70)
              goto LABEL_72;
            v95 = v70 < v94;
          }
          if (v95)
            v67 = v79;
        }
        else
        {
          if (v64 == 3)
          {
            v69 = *((_QWORD *)v11 + 4);
            v68 = *((_QWORD *)v11 + 5);
            v78 = __OFSUB__(v68, v69);
            v70 = v68 - v69;
            v71 = v78;
            goto LABEL_60;
          }
          v96 = *((_QWORD *)v11 + 4);
          v97 = *((_QWORD *)v11 + 5);
          v78 = __OFSUB__(v97, v96);
          v89 = v97 - v96;
          v90 = v78;
LABEL_72:
          if ((v90 & 1) != 0)
            goto LABEL_128;
          v98 = &v65[16 * v67];
          v100 = *(_QWORD *)v98;
          v99 = *((_QWORD *)v98 + 1);
          v78 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          if (v78)
            goto LABEL_131;
          if (v101 < v89)
            goto LABEL_89;
        }
        v106 = v67 - 1;
        if (v67 - 1 >= v64)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v13)
          goto LABEL_145;
        v107 = &v65[16 * v106];
        v108 = *(_QWORD *)v107;
        v109 = &v65[16 * v67];
        v110 = *((_QWORD *)v109 + 1);
        sub_1BACA8B78((char *)(v13 + 96 * *(_QWORD *)v107), (char *)(v13 + 96 * *(_QWORD *)v109), v13 + 96 * v110, __dst, a2);
        if (v4)
          goto LABEL_114;
        if (v110 < v108)
          goto LABEL_121;
        if (v67 > *((_QWORD *)v11 + 2))
          goto LABEL_122;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v65[16 * v106 + 8] = v110;
        v111 = *((_QWORD *)v11 + 2);
        if (v67 >= v111)
          goto LABEL_123;
        v64 = v111 - 1;
        memmove(&v65[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
        *((_QWORD *)v11 + 2) = v111 - 1;
        v13 = v175;
        if (v111 <= 2)
          goto LABEL_89;
        continue;
      }
    }
    v64 = 1;
LABEL_89:
    v14 = v156;
    v12 = v173;
  }
  while (v173 < v156);
LABEL_103:
  if (v64 >= 2)
  {
    v140 = *v150;
    do
    {
      v141 = v64 - 2;
      if (v64 < 2)
        goto LABEL_135;
      if (!v140)
        goto LABEL_148;
      v142 = *(_QWORD *)&v11[16 * v141 + 32];
      v143 = *(_QWORD *)&v11[16 * v64 + 24];
      sub_1BACA8B78((char *)(v140 + 96 * v142), (char *)(v140 + 96 * *(_QWORD *)&v11[16 * v64 + 16]), v140 + 96 * v143, __dst, a2);
      if (v4)
        break;
      if (v143 < v142)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1BACAB464((uint64_t)v11);
      if (v141 >= *((_QWORD *)v11 + 2))
        goto LABEL_137;
      v144 = &v11[16 * v141 + 32];
      *(_QWORD *)v144 = v142;
      *((_QWORD *)v144 + 1) = v143;
      v145 = *((_QWORD *)v11 + 2);
      if (v64 > v145)
        goto LABEL_138;
      memmove(&v11[16 * v64 + 16], &v11[16 * v64 + 32], 16 * (v145 - v64));
      *((_QWORD *)v11 + 2) = v145 - 1;
      v64 = v145 - 1;
    }
    while (v145 > 2);
  }
LABEL_114:
  swift_bridgeObjectRelease();
LABEL_117:
  *(_QWORD *)(v153 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACB4900(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, _QWORD *, _QWORD, char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  __int128 v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = *a4 + (a3 << 6) + 56;
    v26 = result;
    v29 = *a4;
LABEL_4:
    v7 = (uint64_t *)(v5 + (a3 << 6));
    v9 = *v7;
    v8 = v7[1];
    v10 = v7[2];
    v11 = *(_OWORD *)(v7 + 3);
    v12 = *((_BYTE *)v7 + 40);
    v28 = v6;
    v14 = v7[6];
    v13 = v7[7];
    v30 = a3;
    while (1)
    {
      v32 = result;
      v15 = *(_QWORD *)(v6 - 104);
      v16 = *(_BYTE *)(v6 - 80);
      v18 = *(_QWORD *)(v6 - 72);
      v17 = *(_QWORD *)(v6 - 64);
      v40 = v9;
      v41[0] = v8;
      v41[1] = v10;
      v42 = v11;
      v43 = v12 & 1;
      v44 = v14;
      v45 = v13;
      v19 = (_OWORD *)(v6 - 120);
      v34 = *(_OWORD *)(v6 - 120);
      v35 = v15;
      v36 = *(_OWORD *)(v6 - 96);
      v37 = v16;
      v38 = v18;
      v39 = v17;
      v33 = v13;
      swift_bridgeObjectRetain();
      sub_1BA75A650(v14, v13);
      swift_bridgeObjectRetain();
      sub_1BA75A650(v18, v17);
      v20 = v46;
      v21 = a5(v9, v41, v34, (char *)&v34 + 8);
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v18, v17);
      swift_bridgeObjectRelease();
      result = sub_1BA6E0CBC(v14, v33);
      v46 = v20;
      if (v20)
        break;
      if ((v21 & 1) == 0)
      {
        v25 = v30;
        v5 = v29;
LABEL_11:
        a3 = v25 + 1;
        v6 = v28 + 64;
        result = v26;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v5 = v29;
      if (!v29)
      {
        __break(1u);
        return result;
      }
      v13 = *(_QWORD *)v6;
      v23 = *(_OWORD *)(v6 - 88);
      v22 = *(_OWORD *)(v6 - 72);
      *(_QWORD *)(v6 - 64) = *(_QWORD *)v6;
      v6 -= 64;
      v9 = *(_QWORD *)(v6 + 8);
      v8 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      v11 = *(_OWORD *)(v6 + 32);
      v24 = v19[1];
      v19[4] = *v19;
      v19[5] = v24;
      v12 = *(_BYTE *)(v6 + 48);
      v14 = *(_QWORD *)(v6 + 56);
      v19[6] = v23;
      v19[7] = v22;
      *(_QWORD *)(v6 - 56) = v9;
      *(_QWORD *)(v6 - 48) = v8;
      *(_QWORD *)(v6 - 40) = v10;
      *(_OWORD *)(v6 - 32) = v11;
      *(_BYTE *)(v6 - 16) = v12;
      result = v32 + 1;
      *(_QWORD *)(v6 - 8) = v14;
      v25 = v30;
      if (v30 == v32 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BACB4B0C(uint64_t *a1, uint64_t (*a2)(uint64_t, char *, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char v114;
  unint64_t v115;
  uint64_t v116;
  _OWORD *v117;
  char v118;
  char v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  char *__dst;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  char v157;
  uint64_t v158;
  unint64_t v159;
  __int128 v160;
  uint64_t v161;
  __int128 v162;
  char v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;

  v4 = v3;
  v166 = a3;
  v6 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_140;
    if (v6)
      return sub_1BACB4900(0, v6, 1, a1, (uint64_t (*)(uint64_t, _QWORD *, _QWORD, char *))a2);
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_149;
  v145 = v6;
  v138 = result;
  v136 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v139 = MEMORY[0x1E0DEE9D8];
    if (v6 != 1)
    {
      v56 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_103;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BACB5E30(0, (unint64_t *)&unk_1EF2B12F0);
    v10 = sub_1BB872E74();
    *(_QWORD *)(v10 + 16) = v9;
    v139 = v10;
    __dst = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v137 = *a1 + 104;
  v135 = *a1 + 56;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v14 = v145;
  v150 = *a1;
  do
  {
    v15 = v12;
    v16 = v12 + 1;
    v142 = v12;
    if (v12 + 1 < v14)
    {
      v140 = v11;
      v17 = v13 + (v16 << 6);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_BYTE *)(v17 + 40);
      v20 = *(_QWORD *)(v17 + 48);
      v21 = *(_QWORD *)(v17 + 56);
      v22 = v13 + (v12 << 6);
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_BYTE *)(v22 + 40);
      v25 = v4;
      v26 = *(_QWORD *)(v22 + 48);
      v27 = *(_QWORD *)(v22 + 56);
      v160 = *(_OWORD *)v17;
      v151 = v160;
      v161 = v18;
      v162 = *(_OWORD *)(v17 + 24);
      v163 = v19;
      v164 = v20;
      v165 = v21;
      v154 = *(_OWORD *)v22;
      v155 = v23;
      v156 = *(_OWORD *)(v22 + 24);
      v157 = v24;
      v158 = v26;
      v159 = v27;
      swift_bridgeObjectRetain();
      sub_1BA75A650(v20, v21);
      swift_bridgeObjectRetain();
      sub_1BA75A650(v26, v27);
      v146 = a2(v151, (char *)&v160 + 8, v154, (char *)&v154 + 8);
      if (v25)
      {
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v26, v27);
        swift_bridgeObjectRelease();
        v131 = v20;
        v132 = v21;
        goto LABEL_117;
      }
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v26, v27);
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v20, v21);
      v16 = v15 + 2;
      if (v15 + 2 < v145)
      {
        v28 = v137 + (v15 << 6);
        while (1)
        {
          v29 = v16;
          v30 = *(_QWORD *)(v28 + 40);
          v31 = *(_BYTE *)(v28 + 64);
          v32 = *(_QWORD *)(v28 + 72);
          v33 = *(_QWORD *)(v28 + 80);
          v34 = *(_QWORD *)(v28 - 24);
          v35 = *(_BYTE *)v28;
          v36 = *(_QWORD *)(v28 + 8);
          v37 = *(_QWORD *)(v28 + 16);
          v160 = *(_OWORD *)(v28 + 24);
          v148 = v160;
          v161 = v30;
          v162 = *(_OWORD *)(v28 + 48);
          v163 = v31;
          v164 = v32;
          v165 = v33;
          v154 = *(_OWORD *)(v28 - 40);
          v155 = v34;
          v156 = *(_OWORD *)(v28 - 16);
          v157 = v35;
          v158 = v36;
          v159 = v37;
          swift_bridgeObjectRetain();
          sub_1BA75A650(v32, v33);
          swift_bridgeObjectRetain();
          sub_1BA75A650(v36, v37);
          v38 = a2(v148, (char *)&v160 + 8, v154, (char *)&v154 + 8);
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v36, v37);
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v32, v33);
          if (((v146 ^ v38) & 1) != 0)
            break;
          v16 = v29 + 1;
          v28 += 64;
          if (v145 == v29 + 1)
          {
            v16 = v145;
            goto LABEL_21;
          }
        }
        v16 = v29;
LABEL_21:
        v15 = v142;
      }
      v13 = v150;
      v4 = 0;
      v11 = v140;
      if ((v146 & 1) != 0)
      {
        v14 = v145;
        if (v16 < v15)
          goto LABEL_144;
        if (v15 < v16)
        {
          v39 = v16 << 6;
          v40 = v15 << 6;
          v41 = v16;
          v42 = v15;
          do
          {
            if (v42 != --v41)
            {
              if (!v150)
                goto LABEL_147;
              v43 = (_OWORD *)(v150 + v40);
              v44 = *(_QWORD *)(v150 + v40 + 16);
              v45 = v150 + v39;
              v46 = *(_BYTE *)(v150 + v40 + 40);
              v47 = *(_OWORD *)(v150 + v40);
              v48 = *(_OWORD *)(v150 + v40 + 24);
              v49 = *(_OWORD *)(v150 + v40 + 48);
              v50 = *(_OWORD *)(v150 + v39 - 16);
              v52 = *(_OWORD *)(v150 + v39 - 64);
              v51 = *(_OWORD *)(v150 + v39 - 48);
              v43[2] = *(_OWORD *)(v150 + v39 - 32);
              v43[3] = v50;
              *v43 = v52;
              v43[1] = v51;
              *(_OWORD *)(v45 - 64) = v47;
              *(_QWORD *)(v45 - 48) = v44;
              *(_OWORD *)(v45 - 40) = v48;
              *(_BYTE *)(v45 - 24) = v46;
              *(_OWORD *)(v45 - 16) = v49;
            }
            ++v42;
            v39 -= 64;
            v40 += 64;
          }
          while (v42 < v41);
        }
      }
      else
      {
        v14 = v145;
      }
    }
    if (v16 >= v14)
      goto LABEL_41;
    if (__OFSUB__(v16, v15))
      goto LABEL_141;
    if (v16 - v15 >= v138)
    {
LABEL_41:
      if (v16 < v15)
        goto LABEL_139;
      goto LABEL_42;
    }
    if (__OFADD__(v15, v138))
      goto LABEL_142;
    if (v15 + v138 >= v14)
      v53 = v14;
    else
      v53 = v15 + v138;
    if (v53 < v15)
    {
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      result = sub_1BB873EA0();
      __break(1u);
      return result;
    }
    if (v16 == v53)
      goto LABEL_41;
    v141 = v11;
    v152 = v4;
    v104 = v135 + (v16 << 6);
    v133 = v53;
    do
    {
      v105 = v13 + (v16 << 6);
      v107 = *(_QWORD *)v105;
      v106 = *(_QWORD *)(v105 + 8);
      v108 = *(_QWORD *)(v105 + 16);
      v109 = *(_OWORD *)(v105 + 24);
      v110 = *(_BYTE *)(v105 + 40);
      v134 = v104;
      v111 = *(_QWORD *)(v105 + 48);
      v112 = *(_QWORD *)(v105 + 56);
      v144 = v16;
      while (1)
      {
        v147 = v15;
        v113 = *(_QWORD *)(v104 - 104);
        v114 = *(_BYTE *)(v104 - 80);
        v116 = *(_QWORD *)(v104 - 72);
        v115 = *(_QWORD *)(v104 - 64);
        *(_QWORD *)&v160 = v107;
        *((_QWORD *)&v160 + 1) = v106;
        v161 = v108;
        v162 = v109;
        v163 = v110 & 1;
        v164 = v111;
        v165 = v112;
        v117 = (_OWORD *)(v104 - 120);
        v154 = *(_OWORD *)(v104 - 120);
        v155 = v113;
        v156 = *(_OWORD *)(v104 - 96);
        v157 = v114;
        v158 = v116;
        v159 = v115;
        swift_bridgeObjectRetain();
        sub_1BA75A650(v111, v112);
        swift_bridgeObjectRetain();
        sub_1BA75A650(v116, v115);
        v118 = a2(v107, (char *)&v160 + 8, v154, (char *)&v154 + 8);
        if (v152)
        {
          swift_bridgeObjectRelease();
          sub_1BA6E0CBC(v116, v115);
          swift_bridgeObjectRelease();
          v131 = v111;
          v132 = v112;
LABEL_117:
          sub_1BA6E0CBC(v131, v132);
          swift_bridgeObjectRelease();
          goto LABEL_118;
        }
        v119 = v118;
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v116, v115);
        swift_bridgeObjectRelease();
        sub_1BA6E0CBC(v111, v112);
        if ((v119 & 1) == 0)
          break;
        v13 = v150;
        v120 = v144;
        if (!v150)
          goto LABEL_146;
        v112 = *(_QWORD *)v104;
        v122 = *(_OWORD *)(v104 - 88);
        v121 = *(_OWORD *)(v104 - 72);
        *(_QWORD *)(v104 - 64) = *(_QWORD *)v104;
        v104 -= 64;
        v107 = *(_QWORD *)(v104 + 8);
        v106 = *(_QWORD *)(v104 + 16);
        v108 = *(_QWORD *)(v104 + 24);
        v109 = *(_OWORD *)(v104 + 32);
        v123 = v117[1];
        v117[4] = *v117;
        v117[5] = v123;
        v110 = *(_BYTE *)(v104 + 48);
        v111 = *(_QWORD *)(v104 + 56);
        v117[6] = v122;
        v117[7] = v121;
        *(_QWORD *)(v104 - 56) = v107;
        *(_QWORD *)(v104 - 48) = v106;
        *(_QWORD *)(v104 - 40) = v108;
        *(_OWORD *)(v104 - 32) = v109;
        *(_BYTE *)(v104 - 16) = v110;
        v15 = v147 + 1;
        *(_QWORD *)(v104 - 8) = v111;
        if (v144 == v147 + 1)
          goto LABEL_99;
      }
      v13 = v150;
      v120 = v144;
LABEL_99:
      v16 = v120 + 1;
      v104 = v134 + 64;
      v15 = v142;
    }
    while (v16 != v133);
    v16 = v133;
    v4 = 0;
    v11 = v141;
    if (v133 < v142)
      goto LABEL_139;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v55 = *((_QWORD *)v11 + 2);
    v54 = *((_QWORD *)v11 + 3);
    v56 = v55 + 1;
    v13 = v150;
    if (v55 >= v54 >> 1)
    {
      v124 = sub_1BACAA368((char *)(v54 > 1), v55 + 1, 1, v11);
      v13 = v150;
      v11 = v124;
    }
    *((_QWORD *)v11 + 2) = v56;
    v57 = v11 + 32;
    v58 = &v11[16 * v55 + 32];
    *(_QWORD *)v58 = v142;
    *((_QWORD *)v58 + 1) = v16;
    v143 = v16;
    if (v55)
    {
      while (2)
      {
        v59 = v56 - 1;
        if (v56 >= 4)
        {
          v64 = &v57[16 * v56];
          v65 = *((_QWORD *)v64 - 8);
          v66 = *((_QWORD *)v64 - 7);
          v70 = __OFSUB__(v66, v65);
          v67 = v66 - v65;
          if (v70)
            goto LABEL_124;
          v69 = *((_QWORD *)v64 - 6);
          v68 = *((_QWORD *)v64 - 5);
          v70 = __OFSUB__(v68, v69);
          v62 = v68 - v69;
          v63 = v70;
          if (v70)
            goto LABEL_125;
          v71 = v56 - 2;
          v72 = &v57[16 * v56 - 32];
          v74 = *(_QWORD *)v72;
          v73 = *((_QWORD *)v72 + 1);
          v70 = __OFSUB__(v73, v74);
          v75 = v73 - v74;
          if (v70)
            goto LABEL_127;
          v70 = __OFADD__(v62, v75);
          v76 = v62 + v75;
          if (v70)
            goto LABEL_130;
          if (v76 >= v67)
          {
            v94 = &v57[16 * v59];
            v96 = *(_QWORD *)v94;
            v95 = *((_QWORD *)v94 + 1);
            v70 = __OFSUB__(v95, v96);
            v97 = v95 - v96;
            if (v70)
              goto LABEL_134;
            v87 = v62 < v97;
          }
          else
          {
LABEL_60:
            if ((v63 & 1) != 0)
              goto LABEL_126;
            v71 = v56 - 2;
            v77 = &v57[16 * v56 - 32];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v80 = __OFSUB__(v78, v79);
            v81 = v78 - v79;
            v82 = v80;
            if (v80)
              goto LABEL_129;
            v83 = &v57[16 * v59];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v70 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v70)
              goto LABEL_132;
            if (__OFADD__(v81, v86))
              goto LABEL_133;
            if (v81 + v86 < v62)
              goto LABEL_72;
            v87 = v62 < v86;
          }
          if (v87)
            v59 = v71;
        }
        else
        {
          if (v56 == 3)
          {
            v61 = *((_QWORD *)v11 + 4);
            v60 = *((_QWORD *)v11 + 5);
            v70 = __OFSUB__(v60, v61);
            v62 = v60 - v61;
            v63 = v70;
            goto LABEL_60;
          }
          v88 = *((_QWORD *)v11 + 4);
          v89 = *((_QWORD *)v11 + 5);
          v70 = __OFSUB__(v89, v88);
          v81 = v89 - v88;
          v82 = v70;
LABEL_72:
          if ((v82 & 1) != 0)
            goto LABEL_128;
          v90 = &v57[16 * v59];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v70 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v70)
            goto LABEL_131;
          if (v93 < v81)
            goto LABEL_89;
        }
        v98 = v59 - 1;
        if (v59 - 1 >= v56)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v13)
          goto LABEL_145;
        v99 = &v57[16 * v98];
        v100 = *(_QWORD *)v99;
        v101 = &v57[16 * v59];
        v102 = *((_QWORD *)v101 + 1);
        sub_1BACA91F0((char *)(v13 + (*(_QWORD *)v99 << 6)), (char *)(v13 + (*(_QWORD *)v101 << 6)), v13 + (v102 << 6), __dst, a2);
        if (v4)
          goto LABEL_114;
        if (v102 < v100)
          goto LABEL_121;
        if (v59 > *((_QWORD *)v11 + 2))
          goto LABEL_122;
        *(_QWORD *)v99 = v100;
        *(_QWORD *)&v57[16 * v98 + 8] = v102;
        v103 = *((_QWORD *)v11 + 2);
        if (v59 >= v103)
          goto LABEL_123;
        v56 = v103 - 1;
        memmove(&v57[16 * v59], v101 + 16, 16 * (v103 - 1 - v59));
        *((_QWORD *)v11 + 2) = v103 - 1;
        v13 = v150;
        if (v103 <= 2)
          goto LABEL_89;
        continue;
      }
    }
    v56 = 1;
LABEL_89:
    v12 = v143;
    v14 = v145;
  }
  while (v143 < v145);
LABEL_103:
  if (v56 >= 2)
  {
    v125 = *v136;
    do
    {
      v126 = v56 - 2;
      if (v56 < 2)
        goto LABEL_135;
      if (!v125)
        goto LABEL_148;
      v127 = *(_QWORD *)&v11[16 * v126 + 32];
      v128 = *(_QWORD *)&v11[16 * v56 + 24];
      sub_1BACA91F0((char *)(v125 + (v127 << 6)), (char *)(v125 + (*(_QWORD *)&v11[16 * v56 + 16] << 6)), v125 + (v128 << 6), __dst, a2);
      if (v4)
        break;
      if (v128 < v127)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1BACAB464((uint64_t)v11);
      if (v126 >= *((_QWORD *)v11 + 2))
        goto LABEL_137;
      v129 = &v11[16 * v126 + 32];
      *(_QWORD *)v129 = v127;
      *((_QWORD *)v129 + 1) = v128;
      v130 = *((_QWORD *)v11 + 2);
      if (v56 > v130)
        goto LABEL_138;
      memmove(&v11[16 * v56 + 16], &v11[16 * v56 + 32], 16 * (v130 - v56));
      *((_QWORD *)v11 + 2) = v130 - 1;
      v56 = v130 - 1;
    }
    while (v130 > 2);
  }
LABEL_114:
  swift_bridgeObjectRelease();
LABEL_118:
  *(_QWORD *)(v139 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACB5558(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v10 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = a4(v10);
  v11 = *(_QWORD *)(v10 + 16);
  v13[0] = v10 + 32;
  v13[1] = v11;
  result = a5(v13, a2, a3);
  *a1 = v10;
  return result;
}

uint64_t sub_1BACB55E8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1BACADE30(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, _QWORD *, _QWORD *))(v4 + 16));
}

uint64_t sub_1BACB55F0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1BACADCD0(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, _QWORD *, _QWORD *))(v4 + 16));
}

uint64_t sub_1BACB55F8(uint64_t a1)
{
  sub_1BA6E0CBC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BACB5640(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v2, v3);
  return a1;
}

uint64_t sub_1BACB56A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BACB56D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA75A650(v2, v3);
  return a1;
}

unint64_t sub_1BACB5734()
{
  unint64_t result;

  result = qword_1ED3AC148;
  if (!qword_1ED3AC148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGapOffline, &type metadata for FeedGapOffline);
    atomic_store(result, (unint64_t *)&qword_1ED3AC148);
  }
  return result;
}

uint64_t sub_1BACB5778()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BACB57BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BACB5820()
{
  uint64_t v0;
  int v1;
  void *v2;

  v1 = *(unsigned __int8 *)(v0 + 297);
  if (v1 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 136))
        __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  else
  {
    if (v1 != 1)
    {
      if (*(_BYTE *)(v0 + 297))
        return swift_deallocObject();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 96) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v0 + 144) < 0x11uLL)
        return swift_deallocObject();
LABEL_19:
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    }

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 96) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
      swift_bridgeObjectRelease();
    v2 = *(void **)(v0 + 160);
    if (v2)
    {

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 240) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v0 + 288) >= 0x11uLL)
        goto LABEL_19;
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1BACB5974()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BACB59D0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  if (v0[14])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 11));
  if (v0[19])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BACB5A2C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

unint64_t sub_1BACB5A60()
{
  unint64_t result;

  result = qword_1ED3A4A58;
  if (!qword_1ED3A4A58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedSportsEvent, &type metadata for FeedSportsEvent);
    atomic_store(result, (unint64_t *)&qword_1ED3A4A58);
  }
  return result;
}

uint64_t sub_1BACB5AA4()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BACB5AD0()
{
  unint64_t result;

  result = qword_1ED3A5268;
  if (!qword_1ED3A5268)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzle, &type metadata for FeedPuzzle);
    atomic_store(result, (unint64_t *)&qword_1ED3A5268);
  }
  return result;
}

uint64_t sub_1BACB5B14()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  if (*(_QWORD *)(v0 + 168))
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocObject();
}

uint64_t sub_1BACB5B80(uint64_t a1)
{
  sub_1BA75A650(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

unint64_t sub_1BACB5BC8()
{
  unint64_t result;

  result = qword_1ED3A4990;
  if (!qword_1ED3A4990)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleType, &type metadata for FeedPuzzleType);
    atomic_store(result, (unint64_t *)&qword_1ED3A4990);
  }
  return result;
}

uint64_t sub_1BACB5C0C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BACB5C48(uint64_t a1)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA75A650(v4, v3);
  return a1;
}

unint64_t sub_1BACB5D18()
{
  unint64_t result;

  result = qword_1EF2B1A48;
  if (!qword_1EF2B1A48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPaywall, &type metadata for FeedPaywall);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A48);
  }
  return result;
}

uint64_t sub_1BACB5D5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BACB5DD8(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BACB5E28(uint64_t a1, __int128 *a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;

  return sub_1BACADB98(a1, a2, a3, a4, *(void (**)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))(v4 + 16));
}

void sub_1BACB5E30(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BACB5E84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

BOOL sub_1BACB5ED8()
{
  return sub_1BACA55CC();
}

uint64_t sub_1BACB5EFC()
{
  return sub_1BACA5650() & 1;
}

uint64_t sub_1BACB5F20()
{
  return sub_1BACA4B54() & 1;
}

uint64_t sub_1BACB5F40()
{
  uint64_t v0;
  unint64_t v2;

  (*(void (**)(unint64_t *__return_ptr, _QWORD))(*(_QWORD *)(v0 + 24) + 24))(&v2, *(_QWORD *)(v0 + 16));
  return (v2 >> 12) & 1;
}

uint64_t sub_1BACB5F88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BB86DEE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_1BACB5FCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACA5280(a1, *(_QWORD *)(v1 + 32));
}

uint64_t FormatItemNodeSwipeActionStyleDimension.buttonSize.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeSwipeActionStyleDimension.minAreaWidth.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BACB60C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeSwipeActionStyleDimension.init(from:)(a1, a2);
}

uint64_t sub_1BACB60DC(_QWORD *a1)
{
  return FormatItemNodeSwipeActionStyleDimension.encode(to:)(a1);
}

unint64_t sub_1BACB60F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BACB6114();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BACB6114()
{
  unint64_t result;

  result = qword_1EF2B1A60;
  if (!qword_1EF2B1A60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyleDimension, &type metadata for FormatItemNodeSwipeActionStyleDimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A60);
  }
  return result;
}

unint64_t sub_1BACB6158(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BACB618C();
  a1[2] = sub_1BACB61D0();
  result = sub_1BACB6214();
  a1[3] = result;
  return result;
}

unint64_t sub_1BACB618C()
{
  unint64_t result;

  result = qword_1EF2B1A68;
  if (!qword_1EF2B1A68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyleDimension, &type metadata for FormatItemNodeSwipeActionStyleDimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A68);
  }
  return result;
}

unint64_t sub_1BACB61D0()
{
  unint64_t result;

  result = qword_1EF2B1A70;
  if (!qword_1EF2B1A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyleDimension, &type metadata for FormatItemNodeSwipeActionStyleDimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A70);
  }
  return result;
}

unint64_t sub_1BACB6214()
{
  unint64_t result;

  result = qword_1EF2B1A78;
  if (!qword_1EF2B1A78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyleDimension, &type metadata for FormatItemNodeSwipeActionStyleDimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A78);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeSwipeActionStyleDimension()
{
  return &type metadata for FormatItemNodeSwipeActionStyleDimension;
}

ValueMetadata *type metadata accessor for A18_V17()
{
  return &type metadata for A18_V17;
}

uint64_t sub_1BACB6278(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B1BB8, (uint64_t (*)(void))sub_1BACB9A54, (uint64_t)&type metadata for A18_V17.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACB9A54();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BACB642C()
{
  sub_1BACB9A54();
  return sub_1BB874710();
}

uint64_t sub_1BACB6454()
{
  sub_1BACB9A54();
  return sub_1BB87471C();
}

double sub_1BACB647C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BACB9840(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BACB64C0(_QWORD *a1)
{
  return sub_1BACB6278(a1);
}

uint64_t sub_1BACB64D4()
{
  sub_1BACB952C();
  return sub_1BB86D96C();
}

uint64_t sub_1BACB653C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __int128 v74;
  unsigned __int8 v75;
  ValueMetadata *v76;
  unint64_t v77;
  uint64_t v78;

  v63 = a2;
  v56 = a3;
  v57 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  MEMORY[0x1E0C80A78](v9);
  v78 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v55 - v12;
  v62 = type metadata accessor for GroupLayoutBindingContext();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v67 = a1;
  sub_1BA4C2DD8(a1, v60, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v59 = sub_1BB86C8C8();
  v58 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v57);
  v76 = &type metadata for A18_V17;
  v20 = sub_1BA8EDFC8();
  v77 = v20;
  LOBYTE(v74) = v15;
  *((_QWORD *)&v74 + 1) = v16;
  v75 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v68 = sub_1BB874734();
  v69 = v22;
  v72 = 95;
  v73 = 0xE100000000000000;
  v70 = 45;
  v71 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v58;
  *v26 = v59;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v74, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v60, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v28, 0, 1, v62);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v29, 0, 1, v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v74);
  sub_1BA7C2538(v16, v17);
  v76 = &type metadata for A18_V17;
  v77 = v20;
  LOBYTE(v74) = v15;
  *((_QWORD *)&v74 + 1) = v16;
  v75 = v17;
  sub_1BA4C2DD8(v63, v78, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v66;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269970, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v78, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v74);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = sub_1BA7E1F18((uint64_t)&unk_1E7269998, 0, 0, 0, 4, 0, 0, 0);
    v68 = v40;
    sub_1BA7DD6A0(v41);
    v66 = v68;
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v31;
    v44 = (_QWORD *)(v43 + 16);
    swift_beginAccess();
    v45 = *(_QWORD **)(v43 + 16);
    v46 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v43 + 16) = v45;
    if ((v46 & 1) == 0)
    {
      v45 = sub_1BA7892A0(0, v45[2] + 1, 1, v45);
      *v44 = v45;
    }
    v48 = v45[2];
    v47 = v45[3];
    if (v48 >= v47 >> 1)
    {
      v45 = sub_1BA7892A0((_QWORD *)(v47 > 1), v48 + 1, 1, v45);
      *v44 = v45;
    }
    v45[2] = v48 + 1;
    v49 = &v45[2 * v48];
    v49[4] = sub_1BACB8D7C;
    v49[5] = 0;
    swift_endAccess();
    v50 = sub_1BA7E1F18((uint64_t)&unk_1E72699C0, 0, 0, v43, 0, 0, 0, 0);
    swift_release();
    v68 = v66;
    sub_1BA7DD6A0(v50);
    v51 = v68;
    v52 = type metadata accessor for A18_V17.Bound();
    v53 = v56;
    v56[3] = v52;
    v53[4] = sub_1BA4A2870(qword_1EF2B1A90, (uint64_t (*)(uint64_t))type metadata accessor for A18_V17.Bound, (uint64_t)&unk_1BB8ABBE0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v53);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v74, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v78, (uint64_t)boxed_opaque_existential_0 + *(int *)(v52 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v52 + 28)) = v51;
  }
  return result;
}

double sub_1BACB6BE0@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  double result;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[18];
  char v48[105];
  __int128 v49[2];
  __int128 v50[2];
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v41 = a1;
  v3 = sub_1BB86DA38();
  *(_QWORD *)&v39 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A18_V17.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(int *)(v8 + 40);
  v10 = v7;
  v40 = v7;
  v11 = *(_QWORD *)(v7 + v9);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(double *)(v10 + *(int *)(v8 + 32));
  sub_1BA4C010C(v12 + 16, (uint64_t)v50);
  sub_1BA4C010C(v12 + 56, (uint64_t)v49);
  v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v50, inited + 16);
  sub_1BA4CECCC(v49, inited + 56);
  *(double *)(inited + 96) = v14;
  v48[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1BA829A4C();
  v16 = sub_1BB872E74();
  *(_QWORD *)(v16 + 16) = 3;
  sub_1BA4C010C((uint64_t)&v51, v16 + 32);
  sub_1BA4C010C((uint64_t)&v51, v16 + 72);
  sub_1BA4CECCC(&v51, v16 + 112);
  v17 = *(_QWORD *)(v11 + 16);
  sub_1BA4C010C(v17 + 16, (uint64_t)v50);
  sub_1BA4C010C(v17 + 56, (uint64_t)v49);
  v18 = v13 * *(double *)(v17 + 96);
  v19 = swift_initStackObject();
  sub_1BA4CECCC(v50, v19 + 16);
  sub_1BA4CECCC(v49, v19 + 56);
  *(double *)(v19 + 96) = v18;
  v48[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v19 + 16);
  __swift_destroy_boxed_opaque_existential_1(v19 + 56);
  v20 = sub_1BA6B5B08((uint64_t)&v51, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v6 + 28)) + 16) - 2);
  *(_QWORD *)&v51 = v16;
  sub_1BA6B5BE8(v20);
  v21 = v51;
  v47[2] = v2;
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1BACB8FF0(v22, v21, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v23 + 16);
  if (v24 >= 3)
    v25 = 3;
  else
    v25 = *(_QWORD *)(v23 + 16);
  v26 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
  v27 = v23 + ((v26 + 32) & ~v26);
  v28 = (2 * v24) | 1;
  v29 = *MEMORY[0x1E0DB5D88];
  v30 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v5, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v5, *MEMORY[0x1E0DB6200], v3);
  v42 = v23;
  v43 = v23;
  v44 = v27;
  v45 = v25;
  v46 = v28;
  sub_1BACB95D4(0, &qword_1EF2B1B38, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v40 = sub_1BB86DB34();
  v31 = sub_1BB86DB40();
  v39 = v51;
  v32 = v52;
  v33 = v53;
  *(_QWORD *)&v51 = v23;
  *(_QWORD *)&v50[0] = v54;
  MEMORY[0x1E0C80A78](v31);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v34 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v51 = v34;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v35 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v41;
  *v41 = 0;
  result = *(double *)&v39;
  *(_OWORD *)(v36 + 8) = v39;
  *((_QWORD *)v36 + 3) = v32;
  *((_QWORD *)v36 + 4) = v33;
  v38 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v36 + 5) = v35;
  *((_QWORD *)v36 + 6) = v38;
  return result;
}

uint64_t sub_1BACB7110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)&v20[-v15];
  v26 = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 18;
  *v16 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB63F8], v13);
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v18 = MEMORY[0x1E0DB5DD0];
  sub_1BACB95D4(0, &qword_1EF2B1B58, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BACB9594(&qword_1EF2B1B60, &qword_1EF2B1B58, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1BACB7290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *);
  void (*v16)(uint64_t *);
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  void (*v47)(uint64_t);
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *);
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t *, uint64_t);
  unsigned int v59;
  void (*v60)(uint64_t);
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v57 = a6;
  v56 = a5;
  v55 = a4;
  v54 = a3;
  v62 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v44 - v10);
  v69 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  v61 = *MEMORY[0x1E0DB5A38];
  v60 = *(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 104);
  v60(v14);
  *v11 = v13;
  v59 = *MEMORY[0x1E0DB6318];
  v15 = *(void (**)(uint64_t *))(v9 + 104);
  v15(v11);
  v16 = v15;
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
  v19 = v18;
  sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v17, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v58 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v58(v11, v8);
  v69 = a1;
  sub_1BA6AA16C(0, (unint64_t *)&qword_1ED3CFF68, (void (*)(uint64_t))MEMORY[0x1E0DB61D8]);
  v21 = v20;
  v22 = swift_allocBox();
  v24 = (char *)v23 + *(int *)(v21 + 48);
  *v23 = 11;
  v25 = *MEMORY[0x1E0DB61C8];
  v26 = sub_1BB86DA20();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  *v11 = v22;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v16)(v11, *MEMORY[0x1E0DB6338], v8);
  v68 = v62;
  v44 = v19;
  sub_1BB86D498();
  v27 = v58;
  v58(v11, v8);
  v45 = a1;
  v69 = a1;
  v28 = swift_allocBox();
  ((void (*)(uint64_t, _QWORD, uint64_t))v60)(v29, v61, v12);
  *v11 = v28;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v16)(v11, v59, v8);
  v52 = v16;
  sub_1BB86D4EC();
  v27(v11, v8);
  v69 = a1;
  v53 = *MEMORY[0x1E0DB6410];
  v16(v11);
  sub_1BACB9658();
  v51 = v30;
  sub_1BA4CDF6C(0, &qword_1EF2B1B80, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v32 = v31;
  v33 = *(_QWORD *)(v31 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = (v34 + 32) & ~v34;
  v50 = v35 + *(_QWORD *)(v33 + 72);
  v49 = v34 | 7;
  v36 = swift_allocObject();
  v48 = xmmword_1BB87CE70;
  *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
  v46 = *MEMORY[0x1E0DB5C80];
  v47 = *(void (**)(uint64_t))(v33 + 104);
  v47(v36 + v35);
  v67 = v62;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v37 = v58;
  v58(v11, v8);
  v38 = v45;
  v69 = v45;
  v39 = swift_allocBox();
  ((void (*)(uint64_t, _QWORD, uint64_t))v60)(v40, v61, v12);
  *v11 = v39;
  v41 = v52;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v52)(v11, v59, v8);
  sub_1BB86D4EC();
  v37(v11, v8);
  v69 = v38;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v11, v53, v8);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v48;
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v42 + v35, v46, v32);
  v63 = v54;
  v64 = v55;
  v65 = v56;
  v66 = v57;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v37)(v11, v8);
}

uint64_t sub_1BACB77E4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v28 = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB6410], v12);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v17 = (char *)v6 + v4[5];
    v27 = v12;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v26 = v13;
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 1;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v22;
    v23 = v22;
    sub_1BAB62528((uint64_t)v10, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
    sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v24, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BACB7A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 9;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
  sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 9;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BACB7C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
  sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BACB8088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
  sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

void sub_1BACB8490(uint64_t a1, char *a2, char *a3, char *a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a3;
  v37 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v30 - v11);
  v13 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v13);
  v16 = a5;
  v17 = (char *)(a5 >> 1);
  if (__OFSUB__(v17, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  v18 = a4;
  if (v17 != a4 && v17 - a4 == 3)
  {
    if ((uint64_t)v17 > (uint64_t)a4)
    {
      v19 = *(_QWORD *)(v15 + 72);
      v31 = *MEMORY[0x1E0DB63F8];
      v30 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_unknownObjectRetain();
      v32 = v19;
      v33 = v18;
      v20 = (uint64_t)&v36[v19 * (_QWORD)v18];
      v34 = v10;
      v35 = a1;
      v21 = (uint64_t)v30;
      do
      {
        sub_1BA4C2DD8(v20, v21, type metadata accessor for HeadlineViewLayout.Context);
        v39 = a1;
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = 6;
        *v12 = v22;
        v23 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, v31, v9);
        MEMORY[0x1E0C80A78](v23);
        v24 = v37;
        *(&v30 - 6) = (char *)v21;
        *(&v30 - 5) = v24;
        *(&v30 - 4) = v36;
        *(&v30 - 3) = v18;
        v25 = v16;
        v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
        v38 = v27;
        v29 = sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v26, MEMORY[0x1E0DB5A18]);
        v28 = v33;
        v10 = v34;
        sub_1BB86D4BC();
        v16 = v25;
        a1 = v35;
        (*(void (**)(uint64_t *))(v10 + 8))(v12);
        sub_1BA4A2E80(v21, type metadata accessor for HeadlineViewLayout.Context);
        --v17;
        v20 += v32;
        v18 = v28;
      }
      while (v28 != v17);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1BACB8730(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, int64_t a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void **v32;
  void *v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD *);
  char *v41;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;

  v57 = a1;
  v58 = a6;
  v46 = a3;
  v49 = a2;
  v50 = sub_1BB86DA38();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1BB86D93C();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2B1B50, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v44 - v20;
  v59 = v57;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v55 = v19;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v52 = v21;
  v57 = v18;
  v23(v21, v22, v18);
  v24 = 0;
  v25 = (unint64_t)v58 >> 1;
  if ((unint64_t)v58 >> 1 != a5)
  {
    v58 = v16;
    v45 = v14;
    v16 = v46;
    swift_unknownObjectRetain();
    while (a5 < v25)
    {
      sub_1BA4C2DD8(a4 + *(_QWORD *)(v11 + 72) * a5, (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      v26 = *(_QWORD *)&v13[*(int *)(v10 + 20) + 32];
      sub_1BA4A2E80((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      if ((v26 & 4) == 0)
      {
        swift_unknownObjectRelease();
        v24 = 2;
        goto LABEL_8;
      }
      if (v25 == ++a5)
      {
        swift_unknownObjectRelease();
        v24 = 0;
LABEL_8:
        v14 = v45;
        v16 = v58;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_9:
  v27 = v14;
  v28 = (char *)v16 + *(int *)(v14 + 20);
  v29 = *MEMORY[0x1E0DB61C8];
  v30 = sub_1BB86DA20();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  v32 = (void **)MEMORY[0x1E0DC4918];
  *v16 = v24;
  *(uint64_t *)((char *)v16 + *(int *)(v27 + 24)) = 0;
  v33 = *v32;
  *(uint64_t *)((char *)v16 + *(int *)(v27 + 28)) = (uint64_t)v33;
  v34 = qword_1ED3BC390;
  v35 = v33;
  if (v34 != -1)
LABEL_12:
    swift_once();
  swift_retain();
  v36 = v51;
  sub_1BB86D2B8();
  v37 = swift_release();
  v38 = MEMORY[0x1E0C80A78](v37);
  v39 = v50;
  *(&v44 - 4) = v49;
  *(&v44 - 3) = (uint64_t)v16;
  v43 = (unint64_t)v36;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v47 + 104))(v53, *MEMORY[0x1E0DB6208], v39, v38);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v56);
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
  v40 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BACB95D4(0, &qword_1EF2B1B68, MEMORY[0x1E0DB5A10]);
  sub_1BACB9594(&qword_1EF2B1B70, &qword_1EF2B1B68, v40, MEMORY[0x1E0DB5A18]);
  v43 = sub_1BA595D14();
  v41 = v52;
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v41, v57);
}

uint64_t sub_1BACB8BC4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V17.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BACB8CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BACB653C(a1, a2, a3);
}

uint64_t sub_1BACB8CB8()
{
  return sub_1BB6909BC();
}

unint64_t sub_1BACB8CC8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BACB8CF4();
  result = sub_1BACB8D38();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BACB8CF4()
{
  unint64_t result;

  result = qword_1EF2B1A80;
  if (!qword_1EF2B1A80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABB2C, &type metadata for A18_V17);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A80);
  }
  return result;
}

unint64_t sub_1BACB8D38()
{
  unint64_t result;

  result = qword_1EF2B1A88;
  if (!qword_1EF2B1A88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABB54, &type metadata for A18_V17);
    atomic_store(result, (unint64_t *)&qword_1EF2B1A88);
  }
  return result;
}

uint64_t sub_1BACB8D7C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = *a1;
  sub_1BA6AA16C(0, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  result = sub_1BAAD056C(v6, (uint64_t)a1 + *(int *)(v7 + 48), *a2, (uint64_t)a2 + *(int *)(v7 + 48));
  *a3 = result & 1;
  return result;
}

uint64_t type metadata accessor for A18_V17.Bound()
{
  uint64_t result;

  result = qword_1EF2B1AF0;
  if (!qword_1EF2B1AF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BACB8E20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACB8E2C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BACB8EA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BACB8EB4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BACB8F28()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BACB8FB4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B1B30, (uint64_t (*)(uint64_t))type metadata accessor for A18_V17.Bound, (uint64_t)&unk_1BB8ABBB8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BACB8FF0(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;

  v51 = a3;
  v52 = a4;
  v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  v50 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v48 = (uint64_t)&v43 - v10;
  v11 = type metadata accessor for FeedHeadline(0);
  v54 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v46 = (uint64_t)&v43 - v15;
  sub_1BA790414();
  v49 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v45 = (uint64_t)&v43 - v20;
  MEMORY[0x1E0C80A78](v21);
  v44 = (uint64_t)&v43 - v22;
  v23 = *(_QWORD *)(a2 + 16);
  v55 = *(_QWORD *)(a1 + 16);
  v56 = v23;
  if (v23 >= v55)
    v24 = v55;
  else
    v24 = v23;
  v57 = MEMORY[0x1E0DEE9D8];
  sub_1BA7F3810(0, v24, 0);
  v53 = a1;
  v47 = a2;
  if (v24)
  {
    v25 = a2 + 32;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v27 = 0;
    while (v55 != v27)
    {
      result = sub_1BA4C2DD8(a1+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v27, (uint64_t)v13, type metadata accessor for FeedHeadline);
      if (v56 == v27)
        goto LABEL_32;
      v28 = (uint64_t)&v18[*(int *)(v49 + 48)];
      sub_1BA5193C4((uint64_t)v13, (uint64_t)v18, type metadata accessor for FeedHeadline);
      sub_1BA4C010C(v25, v28);
      v51(v18, v28);
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA790414);
      v29 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7F3810(0, *(_QWORD *)(v29 + 16) + 1, 1);
        v29 = v57;
      }
      v31 = *(_QWORD *)(v29 + 16);
      v30 = *(_QWORD *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1BA7F3810(v30 > 1, v31 + 1, 1);
        v29 = v57;
      }
      ++v27;
      *(_QWORD *)(v29 + 16) = v31 + 1;
      result = sub_1BA5193C4((uint64_t)v8, v29+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v31, type metadata accessor for HeadlineViewLayout.Context);
      v25 += 40;
      a1 = v53;
      if (v24 == v27)
        goto LABEL_15;
    }
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
LABEL_15:
    v32 = v55;
    if (v55 <= v56)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v57;
    }
    if (v24 <= v56)
      v33 = v56;
    else
      v33 = v24;
    v34 = v47 + 40 * v24 + 32;
    while (v32 != v24)
    {
      v35 = v46;
      result = sub_1BA4C2DD8(a1+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v24, v46, type metadata accessor for FeedHeadline);
      if (v56 == v24)
      {
        sub_1BA4A2E80(v35, type metadata accessor for FeedHeadline);
        goto LABEL_30;
      }
      if (v33 == v24)
        goto LABEL_34;
      v36 = v49;
      v37 = v45;
      v38 = v45 + *(int *)(v49 + 48);
      sub_1BA5193C4(v35, v45, type metadata accessor for FeedHeadline);
      sub_1BA4C010C(v34, v38);
      v39 = v44;
      sub_1BA5193C4(v37, v44, (uint64_t (*)(_QWORD))sub_1BA790414);
      v51((char *)v39, v39 + *(int *)(v36 + 48));
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA790414);
      v40 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7F3810(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v57;
      }
      v32 = v55;
      v42 = *(_QWORD *)(v40 + 16);
      v41 = *(_QWORD *)(v40 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1BA7F3810(v41 > 1, v42 + 1, 1);
        v40 = v57;
      }
      ++v24;
      *(_QWORD *)(v40 + 16) = v42 + 1;
      result = sub_1BA5193C4(v48, v40+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v42, type metadata accessor for HeadlineViewLayout.Context);
      v34 += 40;
      a1 = v53;
      if (v32 == v24)
        goto LABEL_30;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1BACB94DC(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BACB7110);
}

unint64_t sub_1BACB94E8()
{
  unint64_t result;

  result = qword_1EF2B1B40;
  if (!qword_1EF2B1B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABD10, &type metadata for A18_V17.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B1B40);
  }
  return result;
}

unint64_t sub_1BACB952C()
{
  unint64_t result;

  result = qword_1EF2B1B48;
  if (!qword_1EF2B1B48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABCE0, &type metadata for A18_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1B48);
  }
  return result;
}

uint64_t sub_1BACB9570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BACB8BC4(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BACB9578()
{
  return swift_deallocObject();
}

uint64_t sub_1BACB9588(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BACB7290);
}

uint64_t sub_1BACB9594(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BACB95D4(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BACB95D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V17.Layout;
    v8[1] = &type metadata for A18_V17.Layout.Attributes;
    v8[2] = sub_1BACB94E8();
    v8[3] = sub_1BACB952C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BACB9650(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACB77E4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BACB9658()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1B78)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B1B80, (uint64_t (*)(void))sub_1BACB94E8, (uint64_t)&type metadata for A18_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1B78);
  }
}

uint64_t sub_1BACB96CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACB7A98(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BACB96D4(uint64_t a1)
{
  uint64_t v1;

  sub_1BACB8490(a1, *(char **)(v1 + 16), *(char **)(v1 + 24), *(char **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BACB96E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACB8730(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_1BACB96F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACB7C80(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BACB96F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACB8088(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V17.Layout.Attributes()
{
  return &type metadata for A18_V17.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V17.Layout()
{
  return &type metadata for A18_V17.Layout;
}

unint64_t sub_1BACB9724()
{
  unint64_t result;

  result = qword_1EF2B1B88;
  if (!qword_1EF2B1B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABC80, &type metadata for A18_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1B88);
  }
  return result;
}

unint64_t sub_1BACB976C()
{
  unint64_t result;

  result = qword_1EF2B1B90;
  if (!qword_1EF2B1B90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABC58, &type metadata for A18_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1B90);
  }
  return result;
}

unint64_t sub_1BACB97B4()
{
  unint64_t result;

  result = qword_1EF2B1B98;
  if (!qword_1EF2B1B98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABC30, &type metadata for A18_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1B98);
  }
  return result;
}

unint64_t sub_1BACB97FC()
{
  unint64_t result;

  result = qword_1EF2B1BA0;
  if (!qword_1EF2B1BA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABCA8, &type metadata for A18_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BA0);
  }
  return result;
}

uint64_t sub_1BACB9840@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B1BA8, (uint64_t (*)(void))sub_1BACB9A54, (uint64_t)&type metadata for A18_V17.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACB9A54();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BACB9A54()
{
  unint64_t result;

  result = qword_1EF2B1BB0;
  if (!qword_1EF2B1BB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABE04, &type metadata for A18_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V17.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BACB9AE4 + 4 * byte_1BB8ABB1D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BACB9B18 + 4 * asc_1BB8ABB18[v4]))();
}

uint64_t sub_1BACB9B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACB9B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACB9B28);
  return result;
}

uint64_t sub_1BACB9B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACB9B3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BACB9B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACB9B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V17.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V17.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BACB9B68()
{
  unint64_t result;

  result = qword_1EF2B1BC0;
  if (!qword_1EF2B1BC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABDDC, &type metadata for A18_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BC0);
  }
  return result;
}

unint64_t sub_1BACB9BB0()
{
  unint64_t result;

  result = qword_1EF2B1BC8;
  if (!qword_1EF2B1BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABD4C, &type metadata for A18_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BC8);
  }
  return result;
}

unint64_t sub_1BACB9BF8()
{
  unint64_t result;

  result = qword_1EF2B1BD0;
  if (!qword_1EF2B1BD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABD74, &type metadata for A18_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BD0);
  }
  return result;
}

uint64_t sub_1BACB9C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  uint64_t result;

  if (a8 <= 2u)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DebugFormatTemplateFile(uint64_t a1)
{
  return sub_1BACB9CB0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t sub_1BACB9CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  uint64_t result;

  if (a8 <= 2u)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DebugFormatTemplateFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1BACB9C3C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for DebugFormatTemplateFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1BACB9C3C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_1BACB9CB0(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for DebugFormatTemplateFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unsigned __int8 v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_1BACB9CB0(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t sub_1BACB9E94(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56);
}

uint64_t sub_1BACB9E9C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateFile()
{
  return &type metadata for DebugFormatTemplateFile;
}

uint64_t sub_1BACB9EB4(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v1;
  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  sub_1BACBAB08(v3, &v17);
  if (v21)
  {
    if (v21 == 1)
    {
      v26 = v17;
      v27 = v18;
      v28 = v19;
      v29 = v20;
      LOBYTE(v12) = 1;
      sub_1BACBABB0();
      v13 = 0uLL;
      sub_1BB8741AC();
      if (!v2)
      {
        v13 = v26;
        v14 = v27;
        v15 = v28;
        v10 = v29;
LABEL_9:
        v16 = v10;
        v12 = xmmword_1BB87FC90;
        sub_1BACBABF4();
        sub_1BB8741AC();
      }
    }
    else
    {
      v30 = v17;
      v31 = v18;
      v32 = v19;
      v33 = v20;
      LOBYTE(v12) = 2;
      sub_1BACBABB0();
      v13 = 0uLL;
      sub_1BB8741AC();
      if (!v2)
      {
        v13 = v30;
        v14 = v31;
        v15 = v32;
        v10 = v33;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v22 = v17;
    v23 = v18;
    v24 = v19;
    v25 = v20;
    LOBYTE(v12) = 0;
    sub_1BACBABB0();
    v13 = 0uLL;
    sub_1BB8741AC();
    if (!v2)
    {
      v13 = v22;
      v14 = v23;
      v15 = v24;
      v10 = v25;
      goto LABEL_9;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BACBA128()
{
  __int128 *v0;
  __int128 v2;
  __int128 v3;
  __int128 v4;

  sub_1BB8745CC();
  sub_1BACBAB08(v0, &v4);
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BACBAB08(v0, &v3);
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BACBAB08(v0, &v2);
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BACBA1F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F7160(*a1, *a2);
}

uint64_t sub_1BACBA200()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BACBA29C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACBA314()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BACBA3AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BACBA8F8();
  *a1 = result;
  return result;
}

void sub_1BACBA3D8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x74657070696E73;
  if (v2 != 1)
  {
    v5 = 0x656C797473;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6567616B636170;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BACBA434()
{
  sub_1BACBAD4C();
  return sub_1BB872D60();
}

uint64_t sub_1BACBA490()
{
  sub_1BACBAD4C();
  return sub_1BB872D0C();
}

_OWORD *sub_1BACBA4DC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  __int128 v5[4];

  result = (_OWORD *)sub_1BACBA940(a1, (uint64_t)v5);
  if (!v2)
    return sub_1BACBAB08(v5, a2);
  return result;
}

uint64_t sub_1BACBA520(_QWORD *a1)
{
  __int128 *v1;
  _OWORD v4[4];

  sub_1BACBAB08(v1, v4);
  return sub_1BACB9EB4(a1);
}

uint64_t sub_1BACBA56C()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1BACBAB08(v0, v2);
  return sub_1BACBA128();
}

uint64_t sub_1BACBA5A0()
{
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACBA63C()
{
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

BOOL sub_1BACBA6E8(__int128 *a1, __int128 *a2)
{
  __int128 v4[4];
  __int128 v5[4];

  sub_1BACBAB08(a1, v4);
  sub_1BACBAB08(a2, v5);
  return sub_1BACBA778(v4, v5);
}

unint64_t sub_1BACBA734()
{
  unint64_t result;

  result = qword_1EF2B1BD8;
  if (!qword_1EF2B1BD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABE88, &type metadata for DebugFormatTemplateFile);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BD8);
  }
  return result;
}

BOOL sub_1BACBA778(__int128 *a1, __int128 *a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_1BACBAB08(a1, &v23);
  if (v29)
  {
    if (v29 == 1)
    {
      v4 = *((_QWORD *)&v23 + 1);
      v3 = v23;
      v5 = v24;
      v6 = v25;
      v7 = v26;
      v8 = v27;
      v9 = v28;
      sub_1BACBAB08(a2, &v16);
      if (v22 != 1)
        return 0;
    }
    else
    {
      v4 = *((_QWORD *)&v23 + 1);
      v3 = v23;
      v5 = v24;
      v6 = v25;
      v7 = v26;
      v8 = v27;
      v9 = v28;
      sub_1BACBAB08(a2, &v16);
      if (v22 != 2)
        return 0;
    }
  }
  else
  {
    v4 = *((_QWORD *)&v23 + 1);
    v3 = v23;
    v5 = v24;
    v6 = v25;
    v7 = v26;
    v8 = v27;
    v9 = v28;
    sub_1BACBAB08(a2, &v16);
    if (v22)
      return 0;
  }
  v10 = v17;
  v11 = v18;
  v12 = v21;
  v14 = v20;
  v15 = v19;
  return (__PAIR128__(v4, v3) == v16 || (sub_1BB874398() & 1) != 0)
      && (v5 == v10 && v6 == v11 || (sub_1BB874398() & 1) != 0)
      && (sub_1BA88579C(v9, v12) & 1) != 0
      && (v7 == v15 && v8 == v14 || (sub_1BB874398() & 1) != 0);
}

uint64_t sub_1BACBA8F8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BACBA940@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BACBAB28();
  v19 = 0;
  v20 = 0;
  sub_1BB8740D4();
  v10 = v18;
  v18 = xmmword_1BB87FC90;
  sub_1BACBAB6C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  v15 = v23;
  v17 = v24;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v15;
  *(_OWORD *)(a2 + 40) = v17;
  *(_BYTE *)(a2 + 56) = v10;
  return result;
}

_OWORD *sub_1BACBAB08(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(__int128 *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

unint64_t sub_1BACBAB28()
{
  unint64_t result;

  result = qword_1EF2B1BE0;
  if (!qword_1EF2B1BE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC014, &type metadata for DebugFormatTemplateFile.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BE0);
  }
  return result;
}

unint64_t sub_1BACBAB6C()
{
  unint64_t result;

  result = qword_1EF2B1BE8;
  if (!qword_1EF2B1BE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87DE54, &type metadata for DebugFormatTemplate);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BE8);
  }
  return result;
}

unint64_t sub_1BACBABB0()
{
  unint64_t result;

  result = qword_1EF2B1BF0;
  if (!qword_1EF2B1BF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABFEC, &type metadata for DebugFormatTemplateFile.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BF0);
  }
  return result;
}

unint64_t sub_1BACBABF4()
{
  unint64_t result;

  result = qword_1EF2B1BF8;
  if (!qword_1EF2B1BF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87DE2C, &type metadata for DebugFormatTemplate);
    atomic_store(result, (unint64_t *)&qword_1EF2B1BF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTemplateFile.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BACBAC84 + 4 * byte_1BB8ABE65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BACBACB8 + 4 * byte_1BB8ABE60[v4]))();
}

uint64_t sub_1BACBACB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACBACC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACBACC8);
  return result;
}

uint64_t sub_1BACBACD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACBACDCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BACBACE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACBACE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateFile.CodingType()
{
  return &type metadata for DebugFormatTemplateFile.CodingType;
}

unint64_t sub_1BACBAD08()
{
  unint64_t result;

  result = qword_1EF2B1C00;
  if (!qword_1EF2B1C00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABFC4, &type metadata for DebugFormatTemplateFile.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B1C00);
  }
  return result;
}

unint64_t sub_1BACBAD4C()
{
  unint64_t result;

  result = qword_1EF2B1C08;
  if (!qword_1EF2B1C08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABF4C, &type metadata for DebugFormatTemplateFile.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B1C08);
  }
  return result;
}

void sub_1BACBADD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(_QWORD);
  char *v74;
  _QWORD v75[6];
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v108 = a2;
  v125 = a1;
  sub_1BACC488C();
  v80 = v4;
  v79 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v78 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA89C564();
  v77 = v6;
  v75[2] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v75[3] = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v75[1] = (char *)v75 - v9;
  v76 = sub_1BB86C8E0();
  v75[5] = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v75[4] = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v113);
  v105 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for FormatCustomItem.Action();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v83 = (char *)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v13);
  v101 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v115 = (char *)v75 - v16;
  v99 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v99);
  v100 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for FormatCustomItem();
  MEMORY[0x1E0C80A78](v106);
  v107 = (char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CAA04(0);
  MEMORY[0x1E0C80A78](v19);
  v20 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v20);
  v95 = (char *)v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v22);
  v112 = (char *)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v84 = (char *)v75 - v25;
  MEMORY[0x1E0C80A78](v26);
  v98 = (char *)v75 - v27;
  v117 = sub_1BB86C67C();
  v118 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v110 = (char *)v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  v82 = (char *)v75 - v31;
  MEMORY[0x1E0C80A78](v32);
  v114 = (char *)v75 - v33;
  MEMORY[0x1E0C80A78](v34);
  sub_1BACC4914(0);
  MEMORY[0x1E0C80A78](v35);
  v97 = (char *)v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v38);
  v116 = (char *)v75 - v39;
  v119 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v119);
  v109 = (char *)v75 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v111 = (char *)v75 - v42;
  MEMORY[0x1E0C80A78](v43);
  v104 = (char *)v75 - v44;
  MEMORY[0x1E0C80A78](v45);
  v120 = (char *)v75 - v46;
  v121 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v121);
  v90 = (char *)v75 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v91 = (char *)v75 - v49;
  MEMORY[0x1E0C80A78](v50);
  v89 = (char *)v75 - v51;
  MEMORY[0x1E0C80A78](v52);
  v88 = (char *)v75 - v53;
  MEMORY[0x1E0C80A78](v54);
  v81 = (char *)v75 - v55;
  MEMORY[0x1E0C80A78](v56);
  v92 = (char *)v75 - v57;
  MEMORY[0x1E0C80A78](v58);
  v94 = (char *)v75 - v59;
  MEMORY[0x1E0C80A78](v60);
  v87 = (char *)v75 - v61;
  MEMORY[0x1E0C80A78](v62);
  v86 = (char *)v75 - v63;
  MEMORY[0x1E0C80A78](v64);
  v96 = (char *)v75 - v65;
  MEMORY[0x1E0C80A78](v66);
  v85 = (char *)v75 - v67;
  MEMORY[0x1E0C80A78](v68);
  MEMORY[0x1E0C80A78](v69);
  v93 = (char *)v75 - v70;
  v71 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v71);
  v124 = *a3;
  v122 = a3[1];
  sub_1BA4C2DD8(v123, (uint64_t)v75 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0), v73);
  v74 = (char *)&loc_1BACBB5F0 + dword_1BACC14BC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BACBB600()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t *v42;

  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  v4 = **(_QWORD **)(v1 - 320);
  swift_retain_n();
  *(_QWORD *)(v1 - 408) = v2;
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_5;
  while (1)
  {
    v6 = *(_QWORD *)(v2 + 16);
    v5 = *(_QWORD *)(v2 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    v7 = sub_1BA6E35A8(v6, v5);
    if ((v8 & 1) != 0)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    if (!v3)
    {
LABEL_8:
      swift_release_n();
      return MEMORY[0x1E0DEE9D8];
    }
    while (1)
    {
      v2 = v3;
      v3 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      if (*(_QWORD *)(v4 + 16))
        break;
LABEL_5:
      swift_retain();
      swift_release();
      if (!v3)
        goto LABEL_8;
    }
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v7);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BA4B07F0(0, &qword_1ED3BBAE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = type metadata accessor for FormatContentSlotItemResolution();
  *(_QWORD *)(v1 - 416) = v10;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v1 - 384) = xmmword_1BB87CE70;
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v1 - 352) = v13;
  *(_QWORD *)(v1 - 424) = v13 + v12;
  v14 = v9;
  **(_QWORD **)(v1 - 600) = v9;
  swift_storeEnumTagMultiPayload();
  v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  v16 = *v15;
  v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  v18 = *v17;
  *(_QWORD *)(v1 - 192) = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v1 - 432) = v2;
  if (v19)
  {
    *(_QWORD *)(v1 - 440) = v14;
    swift_unknownObjectRetain();
    sub_1BA5DCC20(*(_QWORD *)(v1 - 328));
    *(_QWORD *)(v1 - 448) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 - 456) = v18;
    v20 = (uint64_t *)(v18 + 48);
    while (1)
    {
      v29 = *(v20 - 2);
      v28 = *(v20 - 1);
      v30 = *v20;
      if ((~*v20 & 0xF000000000000007) != 0)
      {
        sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v21 = type metadata accessor for FormatOption();
        v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
        v23 = (v22 + 32) & ~v22;
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = *(_OWORD *)(v1 - 384);
        v25 = (uint64_t *)(v24 + v23);
        *v25 = v29;
        v25[1] = v28;
        v25[2] = v30;
        v25[3] = 1;
        v26 = v24 + v23 + *(int *)(v21 + 28);
        v27 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
        swift_bridgeObjectRetain();
      }
      else
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v1 - 320) + 72);
        if (!*(_QWORD *)(v31 + 16))
          goto LABEL_18;
        swift_bridgeObjectRetain();
        v32 = sub_1BA6E35A8(v29, v28);
        if ((v33 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          v24 = MEMORY[0x1E0DEE9D8];
          goto LABEL_12;
        }
        v34 = (_QWORD *)(*(_QWORD *)(v31 + 56) + (v32 << 6));
        v35 = v34[2];
        *(_QWORD *)(v1 - 368) = v34[1];
        *(_QWORD *)(v1 - 392) = v35;
        *(_QWORD *)(v1 - 400) = v34[4];
        v24 = v34[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_12:
      v20 += 3;
      sub_1BA5E7FF4(v30);
      sub_1BA6D3834(v24);
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        v36 = *(_QWORD *)(v1 - 192);
        v37 = *(_QWORD *)(v1 - 360);
        v38 = *(_QWORD *)(v1 - 328);
        v39 = *(_QWORD *)(v1 - 448);
        goto LABEL_21;
      }
    }
  }
  swift_unknownObjectRetain();
  v38 = *(_QWORD *)(v1 - 328);
  v37 = *(_QWORD *)(v1 - 360);
  sub_1BA5DCC20(v38);
  swift_bridgeObjectRetain();
  v36 = MEMORY[0x1E0DEE9D8];
  v39 = v16;
LABEL_21:
  v40 = *(_QWORD *)(v1 - 424);
  sub_1BA5193C4(*(_QWORD *)(v1 - 600), v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
  v41 = *(int **)(v1 - 416);
  v42 = (uint64_t *)(v40 + v41[5]);
  *v42 = v38;
  v42[1] = v37;
  *(_QWORD *)(v40 + v41[6]) = v39;
  *(_QWORD *)(v40 + v41[7]) = v36;
  swift_release();
  swift_release_n();
  swift_unknownObjectRelease();
  swift_release();
  return *(_QWORD *)(v1 - 352);
}

uint64_t sub_1BACC1504(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 28));
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  v5 = *a2;
  swift_retain_n();
  v6 = v3;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_6;
  while (1)
  {
    v8 = *(_QWORD *)(v6 + 16);
    v7 = *(_QWORD *)(v6 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = sub_1BA6E35A8(v8, v7);
    if ((v10 & 1) != 0)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    if (!v4)
    {
LABEL_10:
      swift_release_n();
      return 0;
    }
    while (1)
    {
      v6 = v4;
      v4 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      if (*(_QWORD *)(v5 + 16))
        break;
LABEL_6:
      swift_retain();
      swift_release();
      if (!v4)
        goto LABEL_10;
    }
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v9);
  swift_unknownObjectRetain();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  return v11;
}

int *sub_1BACC16A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  int *result;
  _QWORD *v31;
  uint64_t v32;

  v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v8, v9);
  v10 = a2[5];
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v10 + 16) && (v13 = sub_1BA6E35A8(v11, v12), (v14 & 1) != 0))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v13);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  v18 = a2[4];
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v18 + 16) && (v21 = sub_1BA6E35A8(v19, v20), (v22 & 1) != 0))
  {
    v23 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v21);
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  v24 = a2[3];
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v24 + 16) && (v27 = sub_1BA6E35A8(v25, v26), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  sub_1BA5193C4((uint64_t)v8, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
  result = (int *)type metadata accessor for FormatContentSlotItemResolution();
  v31 = (_QWORD *)(a3 + result[5]);
  *v31 = v16;
  v31[1] = v17;
  *(_QWORD *)(a3 + result[6]) = v23;
  *(_QWORD *)(a3 + result[7]) = v29;
  return result;
}

uint64_t sub_1BACC1868@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  if ((~v6 & 0xF000000000000007) != 0)
  {
    sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = type metadata accessor for FormatOption();
    v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
    v13 = (v12 + 32) & ~v12;
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    v14 = (uint64_t *)(v10 + v13);
    *v14 = v5;
    v14[1] = v4;
    v14[2] = v6;
    v14[3] = 1;
    v15 = v10 + v13 + *(int *)(v11 + 28);
    v16 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_7:
    v10 = MEMORY[0x1E0DEE9D8];
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(v5, v4);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + (v8 << 6) + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  *a3 = v10;
  return sub_1BA5E7FF4(v6);
}

void FormatContentSlotItemObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[16];

  v2 = v1;
  v14[0] = type metadata accessor for FormatCustomItem();
  MEMORY[0x1E0C80A78](v14[0]);
  v14[2] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v5);
  v14[1] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v14[15] = v10;
  v14[4] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v14 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v14[5] = v12;
  sub_1BB8746C8();
  sub_1BA4C2DD8(v2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
  v13 = (char *)sub_1BACC1BC4 + 4 * word_1BB8AC064[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BACC1BC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  *(_BYTE *)(v1 - 96) = 0;
  sub_1BACC25C0();
  *(_QWORD *)(v1 - 144) = 0;
  *(_QWORD *)(v1 - 136) = 0;
  v3 = *(_QWORD *)(v1 - 72);
  v4 = *(_QWORD *)(v1 - 152);
  v5 = *(_QWORD *)(v1 - 168);
  sub_1BB8741AC();
  if (!v5)
  {
    *(_QWORD *)(v1 - 96) = v2;
    *(_OWORD *)(v1 - 144) = xmmword_1BB87FC90;
    type metadata accessor for FormatArticle();
    sub_1BA4A2870(&qword_1ED39CBB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
    sub_1BB8741AC();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 160) + 8))(v4, v3);
  return swift_release();
}

unint64_t sub_1BACC25C0()
{
  unint64_t result;

  result = qword_1ED3A7EE0;
  if (!qword_1ED3A7EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC2F4, &type metadata for FormatContentSlotItemObject.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7EE0);
  }
  return result;
}

unint64_t sub_1BACC2604()
{
  unint64_t result;

  result = qword_1ED3B4E48;
  if (!qword_1ED3B4E48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPlaceholder, &type metadata for FormatPlaceholder);
    atomic_store(result, (unint64_t *)&qword_1ED3B4E48);
  }
  return result;
}

uint64_t sub_1BACC2648(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BACC267C + 4 * byte_1BB8AC088[a1]))(0x656C6369747261, 0xE700000000000000);
}

uint64_t sub_1BACC267C()
{
  return 0x4C656C6369747261;
}

uint64_t sub_1BACC269C()
{
  return 0x6575737369;
}

uint64_t sub_1BACC26B0()
{
  return 6775156;
}

uint64_t sub_1BACC26C0()
{
  return 0x64656546676174;
}

uint64_t sub_1BACC26D4()
{
  return 0x6465626D45626577;
}

uint64_t sub_1BACC26EC()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1BACC2700()
{
  return 0x7954656C7A7A7570;
}

uint64_t sub_1BACC271C()
{
  return 0x7453656C7A7A7570;
}

uint64_t sub_1BACC2740()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_1BACC2760()
{
  return 0x6D6F74737563;
}

uint64_t sub_1BACC2774()
{
  return 0x65726F6373;
}

uint64_t sub_1BACC2788()
{
  return 0x676E69646E617473;
}

uint64_t sub_1BACC27A0()
{
  return 0x74656B63617262;
}

uint64_t sub_1BACC27B4()
{
  return 0x65726F6353786F62;
}

uint64_t sub_1BACC27CC()
{
  return 0x726F6353656E696CLL;
}

uint64_t sub_1BACC27E8()
{
  return 0x65527972756A6E69;
}

uint64_t sub_1BACC2808()
{
  return 0x6579616C5079656BLL;
}

uint64_t sub_1BACC2828(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BACC2648(*a1);
  v5 = v4;
  if (v3 == sub_1BACC2648(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BACC28B0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BACC2648(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BACC2910()
{
  unsigned __int8 *v0;

  sub_1BACC2648(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACC2950()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BACC2648(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BACC29AC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BACC2648(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BACC29D4()
{
  sub_1BA506944();
  return sub_1BB872D0C();
}

uint64_t sub_1BACC2A24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItemObject.init(from:)(a1, a2);
}

void sub_1BACC2A38(_QWORD *a1)
{
  FormatContentSlotItemObject.encode(to:)(a1);
}

void _s8NewsFeed27FormatContentSlotItemObjectO2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[14];
  uint64_t v41;
  uint64_t v42;
  char *v43;

  v42 = a1;
  v43 = a2;
  v2 = type metadata accessor for FormatCustomItem();
  MEMORY[0x1E0C80A78](v2);
  v40[2] = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v4);
  v40[1] = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v41);
  v40[8] = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v40[13] = (char *)v40 - v8;
  MEMORY[0x1E0C80A78](v9);
  v40[7] = (char *)v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v40[12] = (char *)v40 - v12;
  MEMORY[0x1E0C80A78](v13);
  v40[5] = (char *)v40 - v14;
  MEMORY[0x1E0C80A78](v15);
  v40[11] = (char *)v40 - v16;
  MEMORY[0x1E0C80A78](v17);
  v40[10] = (char *)v40 - v18;
  MEMORY[0x1E0C80A78](v19);
  v40[6] = (char *)v40 - v20;
  MEMORY[0x1E0C80A78](v21);
  v40[9] = (char *)v40 - v22;
  MEMORY[0x1E0C80A78](v23);
  v40[4] = (char *)v40 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  v40[3] = (char *)v40 - v28;
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  sub_1BACC482C();
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)v40 + *(int *)(v36 + 48) - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v42, (uint64_t)v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
  v38 = (uint64_t)v43;
  v43 = v37;
  sub_1BA4C2DD8(v38, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
  v39 = (char *)sub_1BACC2DD0 + 4 * word_1BB8AC09A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BACC2DD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(_QWORD);

  v3 = v0;
  sub_1BA4C2DD8(v0, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
  v4 = *v1;
  v5 = *(uint64_t **)(v2 - 176);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_release();
    v7 = 0;
    v8 = (uint64_t (*)(_QWORD))sub_1BACC482C;
  }
  else
  {
    v6 = *v5;
    type metadata accessor for FormatArticle();
    v7 = static FormatArticle.== infix(_:_:)(v4, v6);
    swift_release();
    swift_release();
    v8 = (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject;
  }
  sub_1BA4A2E80(v3, v8);
  return v7 & 1;
}

uint64_t sub_1BACC3574(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3A7F58, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemObject);
  a1[2] = sub_1BA4A2870(&qword_1ED3A7F50, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemObject);
  result = sub_1BA4A2870((unint64_t *)&unk_1EF2B1CA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemObject);
  a1[3] = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatContentSlotItemObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BACC364C + 4 * byte_1BB8AC0BE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for FormatContentSlotItemObject(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    v2 = (char *)&loc_1BACC3B24 + 4 * byte_1BB8AC0F4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for FormatContentSlotItemObject(_OWORD *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 10)
  {
    v18 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v18;
    v19 = (int *)type metadata accessor for FormatCustomItem();
    v20 = v19[6];
    v21 = (char *)a1 + v20;
    v22 = &a2[v20];
    v23 = type metadata accessor for FormatCustomItem.Action();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1BA648404(0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v21, v22, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    *(_QWORD *)((char *)a1 + v19[7]) = *(_QWORD *)&a2[v19[7]];
    *(_QWORD *)((char *)a1 + v19[8]) = *(_QWORD *)&a2[v19[8]];
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *(_OWORD *)a2;
    v7 = (int *)type metadata accessor for FormatWebEmbed();
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(v9, v10, v11);
    v14 = v7[6];
    v15 = (char *)a1 + v14;
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1BA6EF3B0();
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)&a2[v7[7]];
    *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)&a2[v7[8]];
    *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)&a2[v7[9]];
    *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)&a2[v7[10]];
    *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)&a2[v7[11]];
    *(_QWORD *)((char *)a1 + v7[12]) = *(_QWORD *)&a2[v7[12]];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatContentSlotItemObject(_OWORD *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 != (_OWORD *)a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 10)
    {
      v18 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v18;
      v19 = (int *)type metadata accessor for FormatCustomItem();
      v20 = v19[6];
      v21 = (char *)a1 + v20;
      v22 = &a2[v20];
      v23 = type metadata accessor for FormatCustomItem.Action();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        sub_1BA648404(0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v26 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v21, v22, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      *(_QWORD *)((char *)a1 + v19[7]) = *(_QWORD *)&a2[v19[7]];
      *(_QWORD *)((char *)a1 + v19[8]) = *(_QWORD *)&a2[v19[8]];
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *(_OWORD *)a2;
      v7 = (int *)type metadata accessor for FormatWebEmbed();
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = &a2[v8];
      v11 = sub_1BB86C67C();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      v14 = v7[6];
      v15 = (char *)a1 + v14;
      v16 = &a2[v14];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
      {
        sub_1BA6EF3B0();
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)&a2[v7[7]];
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)&a2[v7[8]];
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)&a2[v7[9]];
      *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)&a2[v7[10]];
      *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)&a2[v7[11]];
      *(_QWORD *)((char *)a1 + v7[12]) = *(_QWORD *)&a2[v7[12]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

ValueMetadata *type metadata accessor for FormatContentSlotItemObject.CodingType()
{
  return &type metadata for FormatContentSlotItemObject.CodingType;
}

unint64_t sub_1BACC4474()
{
  unint64_t result;

  result = qword_1EF2B1CB8;
  if (!qword_1EF2B1CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC2CC, &type metadata for FormatContentSlotItemObject.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B1CB8);
  }
  return result;
}

uint64_t sub_1BACC44B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v23 = a3;
  v7 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  v8 = *((_QWORD *)v7 - 1);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_15;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    if (!v11)
      return v12;
    v24 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7AC18(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
      break;
    v14 = 0;
    v12 = v24;
    v20 = v4;
    v21 = a1 & 0xC000000000000001;
    v22 = a1;
    while (v11 != v14)
    {
      if (v21)
        v15 = MEMORY[0x1BCCE4630](v14, a1);
      else
        v15 = swift_unknownObjectRetain();
      *v10 = v15;
      type metadata accessor for FormatContentSlotItemObject.Resolved();
      swift_storeEnumTagMultiPayload();
      v16 = (uint64_t *)((char *)v10 + v7[5]);
      v17 = v23;
      *v16 = a2;
      v16[1] = v17;
      *(uint64_t *)((char *)v10 + v7[6]) = MEMORY[0x1E0DEE9E8];
      *(uint64_t *)((char *)v10 + v7[7]) = MEMORY[0x1E0DEE9D8];
      sub_1BA5DCC20(a2);
      v24 = v12;
      v19 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      v4 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1BAC7AC18(v18 > 1, v19 + 1, 1);
        v12 = v24;
      }
      ++v14;
      *(_QWORD *)(v12 + 16) = v4;
      sub_1BA5193C4((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      a1 = v22;
      if (v11 == v14)
        return v12;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v11 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BACC46C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v3 = v2;
  v18 = a2;
  v5 = type metadata accessor for FormatContentSlotItemResolution();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AC18(0, v9, 0);
    v10 = v19;
    v11 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      sub_1BACC16A8(v12, v18, (uint64_t)v8);
      if (v3)
        break;
      v3 = 0;
      v19 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7AC18(v14 > 1, v15 + 1, 1);
        v10 = v19;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BA5193C4((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v12 += v13;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

void sub_1BACC482C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B1CC8)
  {
    type metadata accessor for FormatContentSlotItemObject();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B1CC8);
  }
}

void sub_1BACC488C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C48A8)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C6A28(&qword_1ED3CF870, MEMORY[0x1E0DEAF50]);
    v0 = sub_1BB86EC80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C48A8);
  }
}

void sub_1BACC4914(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CB010, (uint64_t (*)(uint64_t))type metadata accessor for GenericDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BACC4930()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BACC4954@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB720B44(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

unint64_t sub_1BACC4970()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2B1CE0;
  if (!qword_1EF2B1CE0)
  {
    sub_1BACC488C();
    v2 = v1;
    v3 = sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB4F58], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B1CE0);
  }
  return result;
}

uint64_t sub_1BACC49E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BACC1868(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BACC49F8(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BACC4A30(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BACC4A68@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BACC49E0(a1, a2);
}

uint64_t sub_1BACC4A7C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t *v52;
  uint64_t v53;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *(_QWORD *)a1 = *a2;
    v29 = v28 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v51 = a3;
    v52 = a2;
    v8 = a3[5];
    v53 = a1;
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB86D7A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v13 = v12[5];
    v14 = v9 + v13;
    v15 = v10 + v13;
    v16 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[6];
    v18 = v9 + v17;
    v19 = v10 + v17;
    *(_OWORD *)v18 = *(_OWORD *)(v10 + v17);
    *(_BYTE *)(v18 + 16) = *(_BYTE *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    *(_BYTE *)(v18 + 19) = *(_BYTE *)(v10 + v17 + 19);
    *(_DWORD *)(v18 + 20) = *(_DWORD *)(v10 + v17 + 20);
    v20 = *(_QWORD *)(v10 + v17 + 24);
    if (v20 >= 2)
      v20 = swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 24) = v20;
    v21 = type metadata accessor for FeedLayoutSolverOptions(0);
    v22 = *(int *)(v21 + 36);
    v23 = (void *)(v18 + v22);
    v24 = (const void *)(v19 + v22);
    v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1BA914C98();
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v30 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    *(_QWORD *)(v18 + *(int *)(v21 + 40)) = *(_QWORD *)(v19 + *(int *)(v21 + 40));
    *(_QWORD *)(v9 + v12[7]) = *(_QWORD *)(v10 + v12[7]);
    *(_QWORD *)(v9 + v12[8]) = *(_QWORD *)(v10 + v12[8]);
    *(_BYTE *)(v9 + v12[9]) = *(_BYTE *)(v10 + v12[9]);
    *(_QWORD *)(v9 + v12[10]) = *(_QWORD *)(v10 + v12[10]);
    *(_BYTE *)(v9 + v12[11]) = *(_BYTE *)(v10 + v12[11]);
    *(_QWORD *)(v9 + v12[12]) = *(_QWORD *)(v10 + v12[12]);
    v31 = v51[6];
    v32 = v53 + v31;
    v33 = (uint64_t)v52 + v31;
    *(_BYTE *)v32 = *((_BYTE *)v52 + v31);
    v34 = *(_OWORD *)((char *)v52 + v31 + 32);
    *(_OWORD *)(v32 + 32) = v34;
    v35 = v34;
    v36 = **(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8);
    swift_retain();
    swift_retain();
    v36(v32 + 8, v33 + 8, v35);
    v37 = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 56) = v37;
    v38 = *(_QWORD *)(v33 + 72);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 72) = v38;
    *(_QWORD *)(v32 + 80) = *(_QWORD *)(v33 + 80);
    *(_BYTE *)(v32 + 88) = *(_BYTE *)(v33 + 88);
    *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
    v39 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v40 = v39[13];
    v49 = v33 + v40;
    v50 = v32 + v40;
    v41 = sub_1BB86D8A0();
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v29 = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v50, v49, v41);
    *(_QWORD *)(v32 + v39[14]) = *(_QWORD *)(v33 + v39[14]);
    *(_QWORD *)(v32 + v39[15]) = *(_QWORD *)(v33 + v39[15]);
    *(_BYTE *)(v32 + v39[16]) = *(_BYTE *)(v33 + v39[16]);
    *(_QWORD *)(v32 + v39[17]) = *(_QWORD *)(v33 + v39[17]);
    *(_QWORD *)(v32 + v39[18]) = *(_QWORD *)(v33 + v39[18]);
    *(_QWORD *)(v32 + v39[19]) = *(_QWORD *)(v33 + v39[19]);
    v42 = v51[7];
    v43 = v51[8];
    v44 = v53 + v42;
    v45 = (uint64_t)v52 + v42;
    *(_BYTE *)v44 = *(_BYTE *)v45;
    *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v46 = *(_QWORD *)(v45 + 48);
    *(_QWORD *)(v44 + 40) = *(_QWORD *)(v45 + 40);
    *(_QWORD *)(v44 + 48) = v46;
    *(_QWORD *)(v53 + v43) = *(uint64_t *)((char *)v52 + v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v29;
}

uint64_t sub_1BACC4E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for GroupLayoutContext();
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v9 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  v13 = a1 + *(int *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(v13 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v13 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v15 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACC5004(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v48 = a3;
  v49 = a2;
  v7 = a3[5];
  v50 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  v19 = *(_QWORD *)(v9 + v16 + 24);
  if (v19 >= 2)
    v19 = swift_bridgeObjectRetain();
  *(_QWORD *)(v17 + 24) = v19;
  v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v20 + 36);
  v22 = (void *)(v17 + v21);
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA914C98();
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_QWORD *)(v17 + *(int *)(v20 + 40)) = *(_QWORD *)(v18 + *(int *)(v20 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  v28 = v48[6];
  v29 = v50 + v28;
  v30 = v49 + v28;
  *(_BYTE *)v29 = *(_BYTE *)(v49 + v28);
  v31 = *(_OWORD *)(v49 + v28 + 32);
  *(_OWORD *)(v29 + 32) = v31;
  v32 = v31;
  v33 = **(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8);
  swift_retain();
  swift_retain();
  v33(v29 + 8, v30 + 8, v32);
  v34 = *(_QWORD *)(v30 + 56);
  *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
  *(_QWORD *)(v29 + 56) = v34;
  v35 = *(_QWORD *)(v30 + 72);
  *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
  *(_QWORD *)(v29 + 72) = v35;
  *(_QWORD *)(v29 + 80) = *(_QWORD *)(v30 + 80);
  *(_BYTE *)(v29 + 88) = *(_BYTE *)(v30 + 88);
  *(_QWORD *)(v29 + 96) = *(_QWORD *)(v30 + 96);
  v36 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v37 = v36[13];
  v46 = v30 + v37;
  v47 = v29 + v37;
  v38 = sub_1BB86D8A0();
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45(v47, v46, v38);
  *(_QWORD *)(v29 + v36[14]) = *(_QWORD *)(v30 + v36[14]);
  *(_QWORD *)(v29 + v36[15]) = *(_QWORD *)(v30 + v36[15]);
  *(_BYTE *)(v29 + v36[16]) = *(_BYTE *)(v30 + v36[16]);
  *(_QWORD *)(v29 + v36[17]) = *(_QWORD *)(v30 + v36[17]);
  *(_QWORD *)(v29 + v36[18]) = *(_QWORD *)(v30 + v36[18]);
  *(_QWORD *)(v29 + v36[19]) = *(_QWORD *)(v30 + v36[19]);
  v39 = v48[7];
  v40 = v48[8];
  v41 = v50 + v39;
  v42 = v49 + v39;
  *(_BYTE *)v41 = *(_BYTE *)v42;
  *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
  *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
  v43 = *(_QWORD *)(v42 + 48);
  *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 40);
  *(_QWORD *)(v41 + 48) = v43;
  *(_QWORD *)(v50 + v40) = *(_QWORD *)(v49 + v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v50;
}

uint64_t *sub_1BACC53A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t *v49;
  uint64_t *v50;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v48 = a3;
  v49 = a2;
  v6 = a3[5];
  v50 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  v19 = (unint64_t *)&v7[v15 + 24];
  v20 = *(_QWORD *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v19 = *((_QWORD *)v17 + 3);
    }
  }
  else
  {
    *v19 = v20;
    if (v20 >= 2)
      swift_bridgeObjectRetain();
  }
  v47 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v47 + 36);
  v22 = (uint64_t)&v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v46 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (!v27)
    {
      v32 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v46, v23, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v46, 0, 1, v24);
      goto LABEL_16;
    }
    sub_1BA914C98();
    v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
    v30 = (void *)v46;
  }
  else
  {
    if (!v27)
    {
      v33 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v46, v23, v33);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v46, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
    v30 = (void *)v46;
  }
  memcpy(v30, v23, v29);
LABEL_16:
  *(_QWORD *)&v16[*(int *)(v47 + 40)] = *(_QWORD *)&v17[*(int *)(v47 + 40)];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  swift_retain();
  swift_release();
  v7[v10[11]] = v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  swift_retain();
  swift_release();
  v34 = v48[6];
  v35 = (char *)v50 + v34;
  v36 = (char *)v49 + v34;
  *((_BYTE *)v50 + v34) = *((_BYTE *)v49 + v34);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)v50 + v34 + 8), (uint64_t *)((char *)v49 + v34 + 8));
  *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 9) = *((_QWORD *)v36 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 10) = *((_QWORD *)v36 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[88] = v36[88];
  *((_QWORD *)v35 + 12) = *((_QWORD *)v36 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v38 = v37[13];
  v39 = &v35[v38];
  v40 = &v36[v38];
  v41 = sub_1BB86D8A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  *(_QWORD *)&v35[v37[14]] = *(_QWORD *)&v36[v37[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v35[v37[15]] = *(_QWORD *)&v36[v37[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[v37[16]] = v36[v37[16]];
  *(_QWORD *)&v35[v37[17]] = *(_QWORD *)&v36[v37[17]];
  *(_QWORD *)&v35[v37[18]] = *(_QWORD *)&v36[v37[18]];
  *(_QWORD *)&v35[v37[19]] = *(_QWORD *)&v36[v37[19]];
  v42 = v48[7];
  v43 = (char *)v50 + v42;
  v44 = (char *)v49 + v42;
  *v43 = *((_BYTE *)v49 + v42);
  *((_QWORD *)v43 + 1) = *(uint64_t *)((char *)v49 + v42 + 8);
  *((_QWORD *)v43 + 2) = *(uint64_t *)((char *)v49 + v42 + 16);
  *((_QWORD *)v43 + 3) = *(uint64_t *)((char *)v49 + v42 + 24);
  *((_QWORD *)v43 + 4) = *(uint64_t *)((char *)v49 + v42 + 32);
  *((_QWORD *)v43 + 5) = *(uint64_t *)((char *)v49 + v42 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v50 + v48[8]) = *(uint64_t *)((char *)v49 + v48[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_1BACC5880(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  void *__dst;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = a3[5];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for GroupLayoutContext();
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  *(_OWORD *)v15 = *(_OWORD *)(v7 + v14);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(_BYTE *)(v15 + 19) = *(_BYTE *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v7 + v14 + 24);
  v17 = type metadata accessor for FeedLayoutSolverOptions(0);
  v18 = *(int *)(v17 + 36);
  __dst = (void *)(v15 + v18);
  v19 = (const void *)(v16 + v18);
  v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1BA914C98();
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(_QWORD *)(v15 + *(int *)(v17 + 40)) = *(_QWORD *)(v16 + *(int *)(v17 + 40));
  *(_QWORD *)(v6 + v9[7]) = *(_QWORD *)(v7 + v9[7]);
  *(_QWORD *)(v6 + v9[8]) = *(_QWORD *)(v7 + v9[8]);
  *(_BYTE *)(v6 + v9[9]) = *(_BYTE *)(v7 + v9[9]);
  *(_QWORD *)(v6 + v9[10]) = *(_QWORD *)(v7 + v9[10]);
  *(_BYTE *)(v6 + v9[11]) = *(_BYTE *)(v7 + v9[11]);
  *(_QWORD *)(v6 + v9[12]) = *(_QWORD *)(v7 + v9[12]);
  v24 = a3[6];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)(a2 + v24);
  *(_OWORD *)(v25 + 8) = *(_OWORD *)(a2 + v24 + 8);
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(a2 + v24 + 24);
  *(_QWORD *)(v25 + 40) = *(_QWORD *)(a2 + v24 + 40);
  v27 = *(_OWORD *)(a2 + v24 + 64);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a2 + v24 + 48);
  *(_OWORD *)(v25 + 64) = v27;
  *(_QWORD *)(v25 + 80) = *(_QWORD *)(a2 + v24 + 80);
  *(_BYTE *)(v25 + 88) = *(_BYTE *)(a2 + v24 + 88);
  *(_QWORD *)(v25 + 96) = *(_QWORD *)(a2 + v24 + 96);
  v28 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v29 = v28[13];
  v30 = v25 + v29;
  v31 = v26 + v29;
  v32 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  *(_QWORD *)(v25 + v28[14]) = *(_QWORD *)(v26 + v28[14]);
  *(_QWORD *)(v25 + v28[15]) = *(_QWORD *)(v26 + v28[15]);
  *(_BYTE *)(v25 + v28[16]) = *(_BYTE *)(v26 + v28[16]);
  *(_QWORD *)(v25 + v28[17]) = *(_QWORD *)(v26 + v28[17]);
  *(_QWORD *)(v25 + v28[18]) = *(_QWORD *)(v26 + v28[18]);
  *(_QWORD *)(v25 + v28[19]) = *(_QWORD *)(v26 + v28[19]);
  v33 = a3[7];
  v34 = a3[8];
  v35 = a1 + v33;
  v36 = a2 + v33;
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_QWORD *)(v35 + 48) = *(_QWORD *)(v36 + 48);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  return a1;
}

uint64_t sub_1BACC5B74(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v49 = a3;
  v50 = a2;
  v7 = a3[5];
  v51 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 18) = *(_BYTE *)(v9 + v16 + 18);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_BYTE *)(v17 + 20) = *(_BYTE *)(v9 + v16 + 20);
  *(_BYTE *)(v17 + 21) = *(_BYTE *)(v9 + v16 + 21);
  *(_BYTE *)(v17 + 22) = *(_BYTE *)(v9 + v16 + 22);
  *(_BYTE *)(v17 + 23) = *(_BYTE *)(v9 + v16 + 23);
  v19 = (unint64_t *)(v8 + v16 + 24);
  v20 = *(_QWORD *)(v9 + v16 + 24);
  if (*v19 < 2)
    goto LABEL_4;
  if (v20 < 2)
  {
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v20 = *(_QWORD *)(v18 + 24);
LABEL_4:
    *v19 = v20;
    goto LABEL_6;
  }
  *v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  v48 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v48 + 36);
  v22 = v17 + v21;
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v47 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (!v27)
    {
      v32 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v47, v23, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v47, 0, 1, v24);
      goto LABEL_14;
    }
    sub_1BA914C98();
    v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
    v30 = (void *)v47;
  }
  else
  {
    if (!v27)
    {
      v33 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v47, v23, v33);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v47, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
    v30 = (void *)v47;
  }
  memcpy(v30, v23, v29);
LABEL_14:
  *(_QWORD *)(v17 + *(int *)(v48 + 40)) = *(_QWORD *)(v18 + *(int *)(v48 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  swift_release();
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  swift_release();
  v34 = v49[6];
  v35 = v51 + v34;
  v36 = v50 + v34;
  *(_BYTE *)(v51 + v34) = *(_BYTE *)(v50 + v34);
  __swift_destroy_boxed_opaque_existential_1(v51 + v34 + 8);
  *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
  *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
  v37 = *(_QWORD *)(v36 + 48);
  *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 40);
  *(_QWORD *)(v35 + 48) = v37;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 56) = *(_QWORD *)(v36 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 64) = *(_QWORD *)(v36 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 72) = *(_QWORD *)(v36 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 80) = *(_QWORD *)(v36 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 88) = *(_BYTE *)(v36 + 88);
  *(_QWORD *)(v35 + 96) = *(_QWORD *)(v36 + 96);
  swift_bridgeObjectRelease();
  v38 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v39 = v38[13];
  v40 = v35 + v39;
  v41 = v36 + v39;
  v42 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  *(_QWORD *)(v35 + v38[14]) = *(_QWORD *)(v36 + v38[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + v38[15]) = *(_QWORD *)(v36 + v38[15]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + v38[16]) = *(_BYTE *)(v36 + v38[16]);
  *(_QWORD *)(v35 + v38[17]) = *(_QWORD *)(v36 + v38[17]);
  *(_QWORD *)(v35 + v38[18]) = *(_QWORD *)(v36 + v38[18]);
  *(_QWORD *)(v35 + v38[19]) = *(_QWORD *)(v36 + v38[19]);
  v43 = v49[7];
  v44 = v51 + v43;
  v45 = v50 + v43;
  *(_BYTE *)v44 = *(_BYTE *)(v50 + v43);
  *(_OWORD *)(v44 + 8) = *(_OWORD *)(v50 + v43 + 8);
  *(_OWORD *)(v44 + 24) = *(_OWORD *)(v50 + v43 + 24);
  *(_QWORD *)(v44 + 40) = *(_QWORD *)(v50 + v43 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v44 + 48) = *(_QWORD *)(v45 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v51 + v49[8]) = *(_QWORD *)(v50 + v49[8]);
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1BACC5FCC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACC5FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for GroupLayoutBindingContext();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BACC6078()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACC6084(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for GroupLayoutBindingContext();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatTestCaseLayout()
{
  uint64_t result;

  result = qword_1EF2B1D40;
  if (!qword_1EF2B1D40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BACC615C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GroupLayoutBindingContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of PuzzleNavigationBarThemeProviderType.navigationBarTheme(puzzle:rankID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1BACC620C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v5 = sub_1BACC63F0(a2, a3, (uint64_t)v3, a1);
  v7 = v6;
  if (v6)
  {
    v8 = v5;
    v9 = v3[6];
    v10 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v9);
    v11 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
    swift_unknownObjectRelease();
    v12 = sub_1BB8729A0();
    v14 = v13;

    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v8, v7, v12, v14, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      v16 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_navigationBarThemeByRankID);
      swift_unknownObjectRelease();
      if (v16)
      {
        sub_1BA9D0070();
        v17 = sub_1BB87276C();

        v18 = objc_msgSend(v15, sel_identifier);
        v19 = sub_1BB8729A0();
        v21 = v20;

        if (*(_QWORD *)(v17 + 16) && (v22 = sub_1BA6E35A8(v19, v21), (v23 & 1) != 0))
        {
          v7 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v22);
          swift_unknownObjectRetain();
        }
        else
        {
          v7 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v7 = 0;
      }

    }
    else
    {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_1BACC63F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v31;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  v7 = *(_QWORD *)(a3 + 88);
  v8 = *(_QWORD *)(a3 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 64), v7);
  v9 = objc_msgSend(a4, sel_identifier);
  v10 = sub_1BB8729A0();
  v12 = v11;

  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 48))(v10, v12, v7);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = objc_msgSend(v13, sel_rankID);
    if (v14)
    {
      v15 = v14;
      a1 = sub_1BB8729A0();

      return a1;
    }

  }
  v16 = objc_msgSend(objc_msgSend(*(id *)(a3 + 16), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v17 = objc_msgSend(v16, sel_puzzleRanksByPuzzleTypeID);

  if (!v17)
    return 0;
  sub_1BA6D7158();
  v18 = sub_1BB87276C();

  v19 = objc_msgSend(objc_msgSend(a4, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  v20 = sub_1BB8729A0();
  v22 = v21;

  if (!*(_QWORD *)(v18 + 16) || (v23 = sub_1BA6E35A8(v20, v22), (v24 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25 >> 62)
    goto LABEL_26;
  a1 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (a1)
  {
    v26 = 4;
    while (1)
    {
      v27 = (v25 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1BCCE4630](v26 - 4, v25)
          : *(id *)(v25 + 8 * v26);
      v28 = v27;
      v29 = v26 - 3;
      if (__OFADD__(v26 - 4, 1))
        break;
      if (objc_msgSend(v27, sel_defaultRank))
      {
        swift_bridgeObjectRelease();
        v31 = objc_msgSend(v28, sel_identifier);
        a1 = sub_1BB8729A0();

        return a1;
      }

      ++v26;
      if (v29 == a1)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    a1 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BACC6704()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_1BACC6738(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BACC620C(a1, a2, a3);
}

uint64_t GapViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t GapViewLayout.activityIndicatorViewFrame.getter()
{
  return swift_retain();
}

uint64_t GapViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t GapViewLayout.fastDecode(decoder:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1BB86D8C4();
  if (!v1)
  {
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = v7;
    sub_1BB86D8E8();
    a1[3] = (uint64_t)&type metadata for GapViewLayout.Attributes;
    result = swift_allocObject();
    *a1 = result;
    *(_QWORD *)(result + 16) = v8;
    *(_QWORD *)(result + 24) = v9;
    *(_QWORD *)(result + 32) = v10;
    *(_QWORD *)(result + 40) = v11;
    *(_OWORD *)(result + 48) = v12;
    *(_QWORD *)(result + 64) = v13;
    *(_QWORD *)(result + 72) = v14;
  }
  return result;
}

uint64_t sub_1BACC68CC()
{
  return swift_deallocObject();
}

double GapViewLayout.Attributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double GapViewLayout.Attributes.activityIndicatorViewFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1BACC68F4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0x656D617266;
}

uint64_t sub_1BACC6930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BACC72B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BACC6954()
{
  sub_1BACC6B50();
  return sub_1BB874710();
}

uint64_t sub_1BACC697C()
{
  sub_1BACC6B50();
  return sub_1BB87471C();
}

uint64_t GapViewLayout.Attributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_1BA4CDF6C(0, &qword_1EF2B1D88, (uint64_t (*)(void))sub_1BACC6B50, (uint64_t)&type metadata for GapViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  v16 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 5);
  v13 = *((_QWORD *)v1 + 6);
  v14 = *((_QWORD *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACC6B50();
  sub_1BB8746C8();
  v17 = v16;
  v18 = v9;
  v19 = v10;
  v20 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v17 = v11;
    *((_QWORD *)&v17 + 1) = v12;
    v18 = v13;
    v19 = v14;
    v20 = 1;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BACC6B50()
{
  unint64_t result;

  result = qword_1ED3B3D48;
  if (!qword_1ED3B3D48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC6EC, &type metadata for GapViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3D48);
  }
  return result;
}

uint64_t GapViewLayout.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v16 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9BE8, (uint64_t (*)(void))sub_1BACC6B50, (uint64_t)&type metadata for GapViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACC6B50();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v16;
    type metadata accessor for CGRect(0);
    v19 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v10 = v17;
    v11 = v18;
    v19 = 1;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v17;
    v14 = v18;
    *v9 = v10;
    v9[1] = v11;
    v9[2] = v13;
    v9[3] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BACC6D68()
{
  sub_1BACC739C();
  return sub_1BB870FF0();
}

uint64_t sub_1BACC6D90@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return GapViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BACC6DA4(_QWORD *a1)
{
  return GapViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1BACC6DB8()
{
  sub_1BA504440();
  return sub_1BB86D96C();
}

uint64_t GapViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return sub_1BA75A650(v4, v5);
}

uint64_t GapViewLayout.Context.styler.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1 + 56, a1);
}

unint64_t sub_1BACC6E7C()
{
  unint64_t result;

  result = qword_1EF2B1D90;
  if (!qword_1EF2B1D90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapViewLayout.Attributes, &type metadata for GapViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1D90);
  }
  return result;
}

ValueMetadata *type metadata accessor for GapViewLayout.Attributes()
{
  return &type metadata for GapViewLayout.Attributes;
}

uint64_t assignWithCopy for GapViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >= 0x11uLL)
  {
    if (v5 >= 0x11)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA905D68(a1 + 40);
    goto LABEL_6;
  }
  if (v5 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t assignWithTake for GapViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = (_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 48) >= 0x11uLL)
  {
    v7 = *(_QWORD *)(a2 + 48);
    if (v7 >= 0x11)
    {
      *(_QWORD *)(a1 + 40) = *v6;
      *(_QWORD *)(a1 + 48) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA905D68(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatTemplateKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatTemplateKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GapViewLayout.Context()
{
  return &type metadata for GapViewLayout.Context;
}

uint64_t storeEnumTagSinglePayload for GapViewLayout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BACC7160 + 4 * byte_1BB8AC425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BACC7194 + 4 * byte_1BB8AC420[v4]))();
}

uint64_t sub_1BACC7194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACC719C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACC71A4);
  return result;
}

uint64_t sub_1BACC71B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACC71B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BACC71BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACC71C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GapViewLayout.Attributes.CodingKeys()
{
  return &type metadata for GapViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1BACC71E4()
{
  unint64_t result;

  result = qword_1EF2B1D98;
  if (!qword_1EF2B1D98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC6C4, &type metadata for GapViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1D98);
  }
  return result;
}

unint64_t sub_1BACC722C()
{
  unint64_t result;

  result = qword_1ED3B3D58;
  if (!qword_1ED3B3D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC634, &type metadata for GapViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3D58);
  }
  return result;
}

unint64_t sub_1BACC7274()
{
  unint64_t result;

  result = qword_1ED3B3D50;
  if (!qword_1ED3B3D50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC65C, &type metadata for GapViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3D50);
  }
  return result;
}

uint64_t sub_1BACC72B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BB970CC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BACC739C()
{
  unint64_t result;

  result = qword_1EF2B1DA0;
  if (!qword_1EF2B1DA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapViewLayout.Attributes, &type metadata for GapViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B1DA0);
  }
  return result;
}

uint64_t sub_1BACC73E0()
{
  return swift_deallocObject();
}

id sub_1BACC73F0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  char *v4;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView);
  v2 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale] = *(_QWORD *)(v0
                                                                                   + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale);
  objc_msgSend(v1, sel_setNeedsLayout);
  v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale] = *(_QWORD *)(v0 + v2);
  objc_msgSend(v3, sel_setNeedsLayout);
  v4 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale] = *(_QWORD *)(v0 + v2);
  return objc_msgSend(v4, sel_setNeedsLayout);
}

id sub_1BACC7488()
{
  uint64_t v0;
  char *v1;
  _QWORD *v2;
  char *v3;
  char *v4;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView);
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize);
  *(_OWORD *)&v1[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentSize] = *(_OWORD *)(v0
                                                                                         + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize);
  objc_msgSend(v1, sel_setNeedsLayout);
  v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge] = *v2;
  objc_msgSend(v3, sel_setNeedsLayout);
  v4 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge] = v2[1];
  return objc_msgSend(v4, sel_setNeedsLayout);
}

id sub_1BACC7524()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView];
  objc_msgSend(v0, sel_frame);
  sub_1BB8735A0();
  v2 = &v1[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentBounds];
  *(_QWORD *)v2 = v3;
  *((_QWORD *)v2 + 1) = v4;
  *((_QWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 3) = v6;
  objc_msgSend(v1, sel_setNeedsLayout);
  v7 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
  objc_msgSend(v0, sel_frame);
  sub_1BB8735A0();
  v8 = &v7[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
  *(_QWORD *)v8 = v9;
  *((_QWORD *)v8 + 1) = v10;
  *((_QWORD *)v8 + 2) = v11;
  *((_QWORD *)v8 + 3) = v12;
  objc_msgSend(v7, sel_setNeedsLayout);
  v13 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
  objc_msgSend(v0, sel_frame);
  sub_1BB8735A0();
  v14 = &v13[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
  *(_QWORD *)v14 = v15;
  *((_QWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 2) = v17;
  *((_QWORD *)v14 + 3) = v18;
  return objc_msgSend(v13, sel_setNeedsLayout);
}

id sub_1BACC7688()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView], sel_setHidden_, v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView], sel_setHidden_, v0[v1]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView], sel_setHidden_, v0[v1]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer], sel_setHidden_, v0[v1]);
  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1BACC7764()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  CGFloat v8;
  CGMutablePathRef Mutable;
  CGAffineTransform v10;
  objc_super v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_layoutSubviews);
  v2 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize];
  v3 = 0.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView], sel_setFrame_, 0.0, 0.0, v2, v2);
  v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
  v12 = 0x3FF0000000000000;
  v13 = 0;
  v14 = 0;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  *(_OWORD *)&v10.a = 0x3FF0000000000000uLL;
  v10.c = 0.0;
  v10.d = 1.0;
  *(_OWORD *)&v10.tx = 0uLL;
  objc_msgSend(v4, sel_setTransform_, &v10);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_, v2, v2, CGRectGetHeight(v18) - v2, v2);
  v5 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v5, sel_setAnchorPoint_, 0.0, 0.0);

  CGAffineTransformMakeRotation(&v10, 1.57079633);
  objc_msgSend(v4, sel_setTransform_, &v10);
  v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v6, sel_setFrame_, v2, 0.0, CGRectGetWidth(v19) - v2, v2);
  if (!objc_msgSend(v4, sel_isHidden))
    v3 = v2;
  v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView];
  objc_msgSend(v1, sel_bounds);
  v8 = CGRectGetWidth(v20) - v3;
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v7, sel_setFrame_, v3, v3, v8, CGRectGetHeight(v21) - v3);
  Mutable = CGPathCreateMutable();
  sub_1BB87333C();
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v22);
  sub_1BB873354();
  sub_1BB87333C();
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v23);
  sub_1BB873354();
  sub_1BB87333C();
  if ((objc_msgSend(v4, sel_isHidden) & 1) == 0)
  {
    objc_msgSend(v1, sel_bounds);
    CGRectGetHeight(v24);
  }
  sub_1BB873354();
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer], sel_setPath_, Mutable);

}

uint64_t type metadata accessor for DebugFormatRulerView()
{
  return objc_opt_self();
}

char *sub_1BACC7CA0()
{
  _BYTE *v0;
  objc_class *ObjectType;
  _QWORD *v2;
  _OWORD *v3;
  _QWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale] = 0x3FF0000000000000;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentBounds];
  *v3 = 0u;
  v3[1] = 0u;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_canvasOffset];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame];
  *v5 = 0u;
  v5[1] = 0u;
  v6 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame];
  *v6 = 0u;
  v6[1] = 0u;
  v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize] = 0x4040000000000000;
  v7 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView;
  v8 = (objc_class *)type metadata accessor for DebugFormatRulerEdgeView();
  v9 = objc_allocWithZone(v8);
  v10 = v0;
  *(_QWORD *)&v0[v7] = sub_1BAB6CFB4(0);
  v11 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView;
  v12 = objc_allocWithZone(v8);
  *(_QWORD *)&v10[v11] = sub_1BAB6CFB4(1);
  v13 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView;
  *(_QWORD *)&v10[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatGridView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView;
  *(_QWORD *)&v10[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer;
  *(_QWORD *)&v10[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);

  v37.receiver = v10;
  v37.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v37, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView];
  v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView]);
  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView]);
  v19 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView;
  v20 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView];
  v21 = (void *)objc_opt_self();
  v22 = v20;
  v23 = objc_msgSend(v21, sel_secondarySystemBackgroundColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[v19]);
  v24 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer;
  v25 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer];
  v26 = (void *)objc_opt_self();
  v27 = v25;
  v28 = objc_msgSend(v26, sel_mainScreen);
  objc_msgSend(v28, sel_scale);
  v30 = v29;

  objc_msgSend(v27, sel_setLineWidth_, 1.0 / v30);
  v31 = *(id *)&v18[v24];
  v32 = objc_msgSend(v21, sel_systemGrayColor);
  v33 = objc_msgSend(v32, sel_CGColor);

  objc_msgSend(v31, sel_setStrokeColor_, v33);
  v34 = objc_msgSend(v18, sel_layer);
  v35 = *(id *)&v18[v24];
  objc_msgSend(v34, sel_addSublayer_, v35);

  return v18;
}

void sub_1BACC803C()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale] = 0x3FF0000000000000;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentBounds];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_canvasOffset];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = &v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize] = 0x4040000000000000;
  v7 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView;
  v8 = (objc_class *)type metadata accessor for DebugFormatRulerEdgeView();
  v9 = objc_allocWithZone(v8);
  *(_QWORD *)&v0[v7] = sub_1BAB6CFB4(0);
  v10 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView;
  v11 = objc_allocWithZone(v8);
  *(_QWORD *)&v0[v10] = sub_1BAB6CFB4(1);
  v12 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_gridView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatGridView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_cornerView;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_borderLayer;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BACC81F4()
{
  return UIContentSizeCategory.description.getter();
}

uint64_t FormatJSONDecoder.__allocating_init()()
{
  swift_allocObject();
  return sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1BACC8234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  void (*v36)(_BYTE *, _QWORD);
  uint64_t (*v37)(char *, uint64_t, _QWORD);
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t result;
  void (*v40)(char *, char *, _QWORD);
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  char *v45;
  BOOL v47;
  void (*v48)(_BYTE *, _QWORD);
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  int v53;
  BOOL v54;
  BOOL v55;
  void (*v56)(_BYTE *, _QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, _QWORD);
  unsigned __int8 *v61;
  uint64_t v62;
  int v63;
  BOOL v64;
  uint64_t v66;
  void (*v67)(_BYTE *, _QWORD);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t v72;
  int v73;
  BOOL v74;
  void (*v76)(_BYTE *, _QWORD);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD, _QWORD, _QWORD);
  _BYTE v89[24];
  uint64_t v90;
  _BYTE v91[32];

  v86 = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v1);
  v82 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v84 = (char *)&v79 - v4;
  MEMORY[0x1E0C80A78](v5);
  v85 = (char *)&v79 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v79 - v8;
  v10 = sub_1BB873E58();
  v87 = *(_QWORD *)(v10 - 8);
  v88 = (void (*)(_QWORD, _QWORD, _QWORD))v10;
  MEMORY[0x1E0C80A78](v10);
  v80 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v79 - v13;
  MEMORY[0x1E0C80A78](v14);
  v83 = (char *)&v79 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v79 - v17;
  v19 = sub_1BB86DC60();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_1BB86DC48();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_1BB86DC90();
  *v26 = sub_1BACC8BC0;
  v26[1] = 0;
  (*(void (**)(uint64_t (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E0DB2FE0], v23);
  swift_retain();
  sub_1BB86DC54();
  *v22 = sub_1BACC8850;
  v22[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0DB2FF8], v19);
  v28 = v86;
  sub_1BB86DC6C();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v30 = (unsigned __int8 *)(v28 + 32);
    v31 = v29 - 1;
    do
    {
      v32 = *v30++;
      v33 = v32 == 0;
      if (v32)
        v34 = v31 == 0;
      else
        v34 = 1;
      --v31;
    }
    while (!v34);
  }
  else
  {
    v33 = 0;
  }
  v35 = v87;
  v36 = (void (*)(_BYTE *, _QWORD))sub_1BB86DC84();
  sub_1BB873E4C();
  v37 = *(uint64_t (**)(char *, uint64_t, _QWORD))(v35 + 48);
  v38 = v88;
  result = v37(v9, 1, v88);
  if ((_DWORD)result == 1)
  {
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v40 = *(void (**)(char *, char *, _QWORD))(v35 + 32);
  v40(v18, v9, v38);
  v90 = MEMORY[0x1E0DEAFA0];
  v89[0] = v33;
  sub_1BB4A9CB8((uint64_t)v89, (uint64_t)v18);
  v36(v91, 0);
  v41 = v28;
  v42 = *(_QWORD *)(v28 + 16);
  if (v42)
  {
    v43 = (unsigned __int8 *)(v28 + 32);
    v44 = v42 - 1;
    v45 = v85;
    do
    {
      if (*v43++)
        v47 = v44 == 0;
      else
        v47 = 1;
      --v44;
    }
    while (!v47);
  }
  else
  {
    v45 = v85;
  }
  v48 = (void (*)(_BYTE *, _QWORD))sub_1BB86DC84();
  sub_1BB8727A8();
  v48(v91, 0);
  v49 = *(_QWORD *)(v28 + 16);
  if (v49)
  {
    v50 = (unsigned __int8 *)(v28 + 32);
    v51 = v49 - 1;
    v52 = v88;
    do
    {
      v53 = *v50++;
      v54 = v53 == 0;
      if (v53)
        v55 = v51 == 0;
      else
        v55 = 1;
      --v51;
    }
    while (!v55);
  }
  else
  {
    v54 = 0;
    v52 = v88;
  }
  v56 = (void (*)(_BYTE *, _QWORD))sub_1BB86DC84();
  sub_1BB873E4C();
  result = v37(v45, 1, v52);
  if ((_DWORD)result == 1)
    goto LABEL_52;
  v57 = (uint64_t)v83;
  v88 = (void (*)(_QWORD, _QWORD, _QWORD))v40;
  v40(v83, v45, v52);
  v58 = MEMORY[0x1E0DEAFA0];
  v90 = MEMORY[0x1E0DEAFA0];
  v89[0] = v54;
  sub_1BB4A9CB8((uint64_t)v89, v57);
  v56(v91, 0);
  v59 = *(_QWORD *)(v41 + 16);
  if (v59)
  {
    v60 = v37;
    v61 = (unsigned __int8 *)(v41 + 32);
    v62 = v59 - 1;
    do
    {
      v63 = *v61++;
      v64 = v63 == 1;
    }
    while (v63 != 1 && v62-- != 0);
    v66 = MEMORY[0x1E0DEAFA0];
  }
  else
  {
    v60 = v37;
    v66 = v58;
    v64 = 0;
  }
  v67 = (void (*)(_BYTE *, _QWORD))sub_1BB86DC84();
  v68 = v84;
  sub_1BB873E4C();
  result = v60(v68, 1, v52);
  if ((_DWORD)result == 1)
    goto LABEL_53;
  v69 = (uint64_t)v81;
  v88(v81, v68, v52);
  v90 = v66;
  v89[0] = v64;
  sub_1BB4A9CB8((uint64_t)v89, v69);
  v67(v91, 0);
  v70 = *(_QWORD *)(v41 + 16);
  if (v70)
  {
    v71 = (unsigned __int8 *)(v41 + 32);
    v72 = v70 - 1;
    do
    {
      v73 = *v71++;
      v74 = v73 == 2;
    }
    while (v73 != 2 && v72-- != 0);
  }
  else
  {
    v74 = 0;
  }
  swift_bridgeObjectRelease();
  v76 = (void (*)(_BYTE *, _QWORD))sub_1BB86DC84();
  v77 = v82;
  sub_1BB873E4C();
  result = v60(v77, 1, v52);
  if ((_DWORD)result != 1)
  {
    v78 = (uint64_t)v80;
    v88(v80, v77, v52);
    v90 = v66;
    v89[0] = v74;
    sub_1BB4A9CB8((uint64_t)v89, v78);
    v76(v91, 0);
    swift_release();
    return v27;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1BACC8850@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _QWORD v29[4];
  uint64_t v30;

  v30 = a2;
  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB874674();
  if (!v2)
  {
    v26 = v7;
    v27 = v11;
    v28 = v5;
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    v13 = sub_1BB8743B0();
    v15 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    if (qword_1ED3C1718 != -1)
      swift_once();
    v16 = (void *)qword_1ED476938;
    v17 = (void *)sub_1BB872970();
    v18 = objc_msgSend(v16, sel_dateFromString_, v17);

    v19 = v4;
    v20 = (uint64_t)v27;
    if (v18)
    {
      v21 = v26;
      sub_1BB86C874();

      v22 = v28;
      v23 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
      v23(v20, v21, v19);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v19);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v19) != 1)
      {
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v30, v20, v19);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v27, 1, 1, v4);
    }
    sub_1BA76D750(v20);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v24 = sub_1BB87465C();
    sub_1BACC8C74();
    swift_allocError();
    *v25 = v13;
    v25[1] = v15;
    v25[2] = v24;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1BACC8AF0()
{
  unint64_t result;

  result = sub_1BA8F2B44((uint64_t)&unk_1E724E960);
  qword_1ED4768E0 = result;
  return result;
}

uint64_t FormatJSONDecoder.__deallocating_deinit()
{
  _s8NewsFeed17FormatJSONDecoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatJSONDecoder()
{
  uint64_t result;

  result = qword_1ED3B4BD0;
  if (!qword_1ED3B4BD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BACC8B70()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FormatJSONDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BACC8BB8()
{
  return type metadata accessor for FormatJSONDecoder();
}

uint64_t sub_1BACC8BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char v6;

  if (qword_1ED3C2148 != -1)
    swift_once();
  v4 = qword_1ED4768E0;
  if (!*(_QWORD *)(qword_1ED4768E0 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v5 = sub_1BA6E35A8(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    return a1;
  }
  a1 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BACC8C74()
{
  unint64_t result;

  result = qword_1EF2B1E50;
  if (!qword_1EF2B1E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB883708, &type metadata for FormatJSONDateFormatter.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2B1E50);
  }
  return result;
}

uint64_t ThumbnailProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ThumbnailProcessor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ThumbnailProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ThumbnailProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id _s8NewsFeed18ThumbnailProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  _BYTE v10[40];

  sub_1BA4C010C(a1, (uint64_t)v10);
  sub_1BA54B1AC();
  type metadata accessor for ThumbnailProcessorRequest();
  if (!swift_dynamicCast())
    return 0;
  __swift_project_boxed_opaque_existential_1(v9 + 3, v9[6]);
  sub_1BB86FA78();
  if (!v1)
  {
    v6 = v9[6];
    v7 = v9[7];
    __swift_project_boxed_opaque_existential_1(v9 + 3, v6);
    v4 = (id)MEMORY[0x1BCCE0370](v6, v7);
    if (v4)
      goto LABEL_4;
LABEL_7:
    swift_release();
    return v4;
  }
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithContentsOfFile_, v3);

  if (!v4)
    goto LABEL_7;
LABEL_4:
  v5 = v4;
  v4 = (id)sub_1BB873834();
  swift_release();

  return v4;
}

uint64_t type metadata accessor for ThumbnailProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ThumbnailProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThumbnailProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t FormatCustomNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatCustomNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 104);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatCustomNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatCustomNode.name.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

unint64_t FormatCustomNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatCustomNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  return swift_retain();
}

uint64_t FormatCustomNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatCustomNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatCustomNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 96);
}

uint64_t FormatCustomNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatCustomNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BACC9198(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 104);
  *(_QWORD *)(v3 + 104) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatCustomNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 104) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatCustomNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t FormatCustomNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatCustomNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNode.__allocating_init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v17;

  v17 = swift_allocObject();
  FormatCustomNode.init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v17;
}

uint64_t FormatCustomNode.init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v11;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v18 = *a3;
  v19 = *a4;
  v20 = *a5;
  v22 = *a10;
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = v18;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(a3 + 1);
  *(_QWORD *)(v11 + 56) = v19;
  *(_QWORD *)(v11 + 64) = v20;
  swift_beginAccess();
  *(_QWORD *)(v11 + 72) = a6;
  *(_QWORD *)(v11 + 80) = a7;
  *(_QWORD *)(v11 + 88) = a8;
  swift_beginAccess();
  *(_QWORD *)(v11 + 96) = a9;
  swift_beginAccess();
  *(_QWORD *)(v11 + 104) = v22;
  swift_beginAccess();
  *(_BYTE *)(v11 + 112) = a11;
  return v11;
}

uint64_t FormatCustomNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 104));
  return v0;
}

uint64_t FormatCustomNode.__deallocating_deinit()
{
  FormatCustomNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BACC9550(uint64_t a1)
{
  uint64_t result;

  result = sub_1BACC9648(&qword_1EF2B1E58, (uint64_t)&protocol conformance descriptor for FormatCustomNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BACC9584(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BACC9648(&qword_1ED3BDAD0, (uint64_t)&protocol conformance descriptor for FormatCustomNode);
  a1[2] = sub_1BACC9648(&qword_1ED39FBA8, (uint64_t)&protocol conformance descriptor for FormatCustomNode);
  result = sub_1BACC9648(&qword_1EF2B1E60, (uint64_t)&protocol conformance descriptor for FormatCustomNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BACC95E8(_QWORD *a1)
{
  return FormatCustomNode.encode(to:)(a1);
}

uint64_t sub_1BACC9608(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed16FormatCustomNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BACC9614(uint64_t a1)
{
  uint64_t result;

  result = sub_1BACC9648(&qword_1EF2B1E68, (uint64_t)&protocol conformance descriptor for FormatCustomNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BACC9648(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatCustomNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BACC9684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v17 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v19 = *(_QWORD *)(a4 + 16);
  v18 = *(_QWORD *)(a4 + 24);
  v20 = *(_QWORD *)(v17 + 40);
  if (!v20)
  {
    swift_bridgeObjectRetain();
    v30 = v18;
    v31 = v19;
    v23 = *(_QWORD *)(a4 + 64);
    if (v23)
      goto LABEL_3;
LABEL_5:
    v24 = 0;
    goto LABEL_6;
  }
  v37 = *(_QWORD *)(v17 + 32);
  v38 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v21);
  sub_1BB872AFC(v22);
  swift_bridgeObjectRelease();
  v30 = v20;
  v31 = v37;
  v19 = *(_QWORD *)(a4 + 16);
  v18 = *(_QWORD *)(a4 + 24);
  v23 = *(_QWORD *)(a4 + 64);
  if (!v23)
    goto LABEL_5;
LABEL_3:
  v24 = *(_QWORD *)(v23 + 16);
  swift_retain();
LABEL_6:
  v25 = swift_allocObject();
  v39 = v24;
  swift_beginAccess();
  v26 = *(_QWORD *)(a4 + 96);
  swift_beginAccess();
  v27 = *(_QWORD *)(a4 + 104);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v27);
  sub_1BA67C978(a3, &v36);
  sub_1BA6EEDB4(v27);
  swift_beginAccess();
  v28 = *(_BYTE *)(a4 + 112);
  swift_retain();
  sub_1BB86DD80();
  type metadata accessor for FormatCustomNodeLayoutAttributes();
  swift_allocObject();
  *(_QWORD *)(v25 + 16) = FormatCustomNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:style:contextLayoutOptions:)(a1, a2, v31, v30, v19, v18, &v39, v26, a7, a8, a9, a10, &v36, v28, a5, v35);
  *a6 = v25 | 0x5000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BACC98D4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BACC9920@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BACC996C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return result;
}

uint64_t sub_1BACC99B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 96) = v2;
  return result;
}

unint64_t sub_1BACC99F0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 104);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BACC9A3C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 112);
  return result;
}

uint64_t sub_1BACC9A80(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 112) = v2;
  return result;
}

uint64_t method lookup function for FormatCustomNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatCustomNode.__allocating_init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1BACC9AE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BACC9B08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = (void *)a2[4];
    swift_bridgeObjectRetain();
    if ((unint64_t)v8 >= 4)
      v9 = v8;
    v10 = a2[5];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = a1 + v11;
    v13 = (uint64_t)a2 + v11;
    sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1BACC9BD0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  if ((unint64_t)v4 >= 4)

  v5 = a1 + *(int *)(a2 + 24);
  sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1BACC9C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain();
  if ((unint64_t)v7 >= 4)
    v8 = v7;
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

_QWORD *sub_1BACC9CD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  if ((unint64_t)v6 >= 4)
  {
    if ((unint64_t)v7 >= 4)
    {
      v9 = v7;
      v10 = (void *)a1[4];
      a1[4] = v7;

    }
    else
    {

      a1[4] = a2[4];
    }
  }
  else
  {
    if ((unint64_t)v7 >= 4)
      v8 = v7;
    a1[4] = v7;
  }
  a1[5] = a2[5];
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1BACC9DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_1BACC9E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 32);
  if ((unint64_t)v7 >= 4)
  {
    if (v8 >= 4)
    {
      *(_QWORD *)(a1 + 32) = v8;

      goto LABEL_6;
    }

  }
  *(_QWORD *)(a1 + 32) = v8;
LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1BACC9F00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACC9F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BACC9F98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACC9FA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FormatDebuggerContext()
{
  uint64_t result;

  result = qword_1EF2B1ED0;
  if (!qword_1EF2B1ED0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BACCA064()
{
  unint64_t v0;

  sub_1BACCA448(319, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BACCA0F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v0 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BACCA448(0, &qword_1ED3C0AD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - v4;
  v6 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatDebuggerContext();
  sub_1BACCA448(0, qword_1EF2B1E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  sub_1BB86E800();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1BACCA4A0((uint64_t)v5);
    return 0;
  }
  else
  {
    sub_1BACCA4EC((uint64_t)v5, (uint64_t)v9);
    sub_1BACCA530((uint64_t)&v9[*(int *)(v6 + 24)], (uint64_t)v2);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_release();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACCA574();
      v13 = &v2[*(int *)(v12 + 48)];
      v18 = 0x203A74756F79614CLL;
      v19 = 0xE800000000000000;
      sub_1BACCA338();
      sub_1BB872AFC(v14);
      swift_bridgeObjectRelease();
      v10 = v18;
      sub_1BACCA5E4((uint64_t)v9);
      sub_1BA75C00C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    }
    else
    {
      v18 = 0x3A676E69646E6942;
      v19 = 0xE900000000000020;
      sub_1BACCA338();
      sub_1BB872AFC(v16);
      swift_bridgeObjectRelease();
      v10 = v18;
      sub_1BACCA5E4((uint64_t)v9);
    }
  }
  return v10;
}

uint64_t sub_1BACCA338()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t result;
  _QWORD v4[2];

  switch(*(_QWORD *)(v0 + 32))
  {
    case 0:
      strcpy((char *)v4, "breakpoint (");
      BYTE5(v4[1]) = 0;
      HIWORD(v4[1]) = -5120;
      sub_1BB87420C();
      sub_1BB872AFC(v1);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v2);
      result = v4[0];
      break;
    case 1:
      result = 0x65766F2070657473;
      break;
    case 2:
      result = 0x6E692070657473;
      break;
    case 3:
      result = 0x74756F2070657473;
      break;
    default:
      result = 0x726F727265;
      break;
  }
  return result;
}

void sub_1BACCA448(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatDebuggerCallStackFrame(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BACCA4A0(uint64_t a1)
{
  uint64_t v2;

  sub_1BACCA448(0, &qword_1ED3C0AD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BACCA4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BACCA530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BACCA574()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C7968)
  {
    type metadata accessor for FormatNodeContext();
    sub_1BA75C00C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C7968);
  }
}

uint64_t sub_1BACCA5E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Localized()
{
  return objc_opt_self();
}

uint64_t PuzzleAccessoryButtonsConfig.buttons.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::PuzzleAccessoryButtonsConfig_optional __swiftcall PuzzleAccessoryButtonsConfig.init(with:)(Swift::OpaquePointer with)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  Swift::Bool v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  NewsFeed::PuzzleAccessoryButtonsConfig_optional result;

  v2 = v1;
  v3 = *((_QWORD *)with._rawValue + 2);
  if (v3)
  {
    v15 = v1;
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v7 = swift_bridgeObjectRetain();
      PuzzleAccessoryButtonConfig.init(with:)(v7, &v18);
      v8 = v19;
      if (v19)
      {
        v9 = v18;
        v16 = v21;
        v17 = v20;
        v10 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1BB38EF90(0, v5[2] + 1, 1, v5);
        v12 = v5[2];
        v11 = v5[3];
        if (v12 >= v11 >> 1)
          v5 = sub_1BB38EF90((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
        v5[2] = v12 + 1;
        v6 = &v5[7 * v12];
        v6[4] = v9;
        v6[5] = v8;
        *((_OWORD *)v6 + 3) = v17;
        *((_OWORD *)v6 + 4) = v16;
        v6[10] = v10;
      }
      ++v4;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    v2 = v15;
  }
  else
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (void *)swift_bridgeObjectRelease();
  *v2 = v5;
  result.value.buttons._rawValue = v13;
  result.is_nil = v14;
  return result;
}

void PuzzleAccessoryButtonConfig.init(with:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[7];
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = sub_1BA6E35A8(25705, 0xE200000000000000);
    if ((v5 & 1) != 0)
    {
      sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v52);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v7 = v50;
        v6 = v51;
        if (*(_QWORD *)(a1 + 16))
        {
          v8 = sub_1BA6E35A8(1954047348, 0xE400000000000000);
          if ((v9 & 1) != 0)
          {
            sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v52);
            v10 = swift_dynamicCast();
            if (v10)
              v11 = v50;
            else
              v11 = 0;
            if (v10)
              v12 = v51;
            else
              v12 = 0;
            v47 = v12;
            if (!*(_QWORD *)(a1 + 16))
              goto LABEL_31;
LABEL_22:
            v23 = sub_1BA6E35A8(1852793705, 0xE400000000000000);
            if ((v24 & 1) != 0)
            {
              sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v23, (uint64_t)&v52);
              v25 = swift_dynamicCast();
              if (v25)
                v26 = v50;
              else
                v26 = 0;
              if (v25)
                v27 = v51;
              else
                v27 = 0;
              if (!*(_QWORD *)(a1 + 16))
                goto LABEL_32;
            }
            else
            {
              v26 = 0;
              v27 = 0;
              if (!*(_QWORD *)(a1 + 16))
                goto LABEL_32;
            }
            v43 = sub_1BA6E35A8(1970169197, 0xE400000000000000);
            if ((v44 & 1) != 0)
            {
              sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v43, (uint64_t)&v52);
LABEL_33:
              swift_bridgeObjectRelease();
              if (*((_QWORD *)&v53 + 1))
              {
                sub_1BACCB770();
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v46 = v51;
                  v28 = *(_QWORD *)(v50 + 16);
                  if (v28)
                  {
                    v45 = a2;
                    swift_bridgeObjectRetain();
                    v29 = 0;
                    v30 = v28 - 1;
                    v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                    while (1)
                    {
                      v32 = swift_bridgeObjectRetain();
                      PuzzleMenuConfig.init(with:)(v32, (uint64_t)v48);
                      sub_1BACCB7C4((uint64_t)v48, (uint64_t)&v50);
                      sub_1BACCB7C4((uint64_t)&v50, (uint64_t)&v52);
                      if (sub_1BACCB820((uint64_t)&v52) != 1)
                      {
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                          v31 = sub_1BB391C1C(0, v31[2] + 1, 1, v31);
                        v34 = v31[2];
                        v33 = v31[3];
                        if (v34 >= v33 >> 1)
                          v31 = sub_1BB391C1C((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
                        sub_1BACCB7C4((uint64_t)&v50, (uint64_t)v48);
                        v31[2] = v34 + 1;
                        v35 = &v31[18 * v34];
                        v35[2] = v48[0];
                        v36 = v48[4];
                        v38 = v48[1];
                        v37 = v48[2];
                        v35[5] = v48[3];
                        v35[6] = v36;
                        v35[3] = v38;
                        v35[4] = v37;
                        v40 = v48[6];
                        v39 = v49[0];
                        v41 = v48[5];
                        *(_OWORD *)((char *)v35 + 153) = *(_OWORD *)((char *)v49 + 9);
                        v35[8] = v40;
                        v35[9] = v39;
                        v35[7] = v41;
                      }
                      if (v30 == v29)
                        break;
                      ++v29;
                    }
                    swift_bridgeObjectRelease_n();
                    a2 = v45;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                  }
                  v6 = v46;
                  v42 = v47;
                  goto LABEL_53;
                }
              }
              else
              {
                sub_1BA6EDA74((uint64_t)&v52);
              }
              v42 = v47;
              v31 = 0;
LABEL_53:
              *a2 = v7;
              a2[1] = v6;
              a2[2] = v11;
              a2[3] = v42;
              a2[4] = v26;
              a2[5] = v27;
              a2[6] = (uint64_t)v31;
              return;
            }
LABEL_32:
            v52 = 0u;
            v53 = 0u;
            goto LABEL_33;
          }
          v11 = 0;
          v47 = 0;
          if (*(_QWORD *)(a1 + 16))
            goto LABEL_22;
        }
        else
        {
          v47 = 0;
          v11 = 0;
        }
LABEL_31:
        v27 = 0;
        v26 = 0;
        goto LABEL_32;
      }
    }
  }
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v13 = sub_1BB86EFEC();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain();
  v14 = sub_1BB86EFC8();
  v15 = sub_1BB8732F4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)&v52 = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    v18 = a2;
    v19 = sub_1BB872778();
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = v19;
    a2 = v18;
    v50 = sub_1BA5D2E14(v22, v21, (uint64_t *)&v52);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v14, v15, "Failed parsing PuzzleAccessoryButtonConfig. Invalid id entry: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v17, -1, -1);
    MEMORY[0x1BCCE5C38](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a2[6] = 0;
  *((_OWORD *)a2 + 1) = 0u;
  *((_OWORD *)a2 + 2) = 0u;
  *(_OWORD *)a2 = 0u;
}

uint64_t sub_1BACCACAC()
{
  return 0x736E6F74747562;
}

uint64_t sub_1BACCACC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BACCAD58()
{
  sub_1BACCB844();
  return sub_1BB874710();
}

uint64_t sub_1BACCAD80()
{
  sub_1BACCB844();
  return sub_1BB87471C();
}

uint64_t PuzzleAccessoryButtonsConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BA4CDF6C(0, &qword_1EF2B1F18, (uint64_t (*)(void))sub_1BACCB844, (uint64_t)&type metadata for PuzzleAccessoryButtonsConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACCB844();
  sub_1BB8746C8();
  v10[3] = v8;
  sub_1BA4AD288(0, &qword_1EF2B1F28, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BACCB8CC(&qword_1EF2B1F30, (uint64_t (*)(void))sub_1BACCB888, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryButtonsConfig.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B1F40, (uint64_t (*)(void))sub_1BACCB844, (uint64_t)&type metadata for PuzzleAccessoryButtonsConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACCB844();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v12;
    sub_1BA4AD288(0, &qword_1EF2B1F28, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BACCB8CC(&qword_1EF2B1F48, (uint64_t (*)(void))sub_1BACCB948, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BACCB084@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PuzzleAccessoryButtonsConfig.init(from:)(a1, a2);
}

uint64_t sub_1BACCB098(_QWORD *a1)
{
  return PuzzleAccessoryButtonsConfig.encode(to:)(a1);
}

uint64_t PuzzleAccessoryButtonConfig.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryButtonConfig.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryButtonConfig.icon.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryButtonConfig.menuItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BACCB138()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BACCB16C + 4 * byte_1BB8ACA50[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BACCB16C()
{
  return 1954047348;
}

uint64_t sub_1BACCB17C()
{
  return 1852793705;
}

uint64_t sub_1BACCB18C()
{
  return 0x6D657449756E656DLL;
}

uint64_t sub_1BACCB1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BACCBEB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BACCB1CC()
{
  sub_1BACCB98C();
  return sub_1BB874710();
}

uint64_t sub_1BACCB1F4()
{
  sub_1BACCB98C();
  return sub_1BB87471C();
}

uint64_t PuzzleAccessoryButtonConfig.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1BA4CDF6C(0, &qword_1EF2B1F58, (uint64_t (*)(void))sub_1BACCB98C, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = v1[2];
  v17 = v1[3];
  v18 = v8;
  v9 = v1[4];
  v15 = v1[5];
  v16 = v9;
  v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACCB98C();
  sub_1BB8746C8();
  v24 = 0;
  v10 = v19;
  sub_1BB87417C();
  if (!v10)
  {
    v11 = v14;
    v23 = 1;
    sub_1BB87411C();
    v22 = 2;
    sub_1BB87411C();
    v20 = v11;
    v21 = 3;
    sub_1BA4AD288(0, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BACCBA14(&qword_1EF2B1F68, (uint64_t (*)(void))sub_1BACCB9D0, MEMORY[0x1E0DEAF10]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryButtonConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v30 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B1F78, (uint64_t (*)(void))sub_1BACCB98C, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACCB98C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = a1;
  v9 = v6;
  v35 = 0;
  v10 = v5;
  v11 = sub_1BB874098();
  v13 = v12;
  v34 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BB87402C();
  v28 = v15;
  v26 = v14;
  v27 = v11;
  v33 = 2;
  swift_bridgeObjectRetain();
  v16 = sub_1BB87402C();
  v18 = v17;
  v25 = v16;
  sub_1BA4AD288(0, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v32 = 3;
  sub_1BACCBA14(&qword_1EF2B1F80, (uint64_t (*)(void))sub_1BACCBA90, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v20 = v31;
  swift_bridgeObjectRetain();
  v21 = (uint64_t)v29;
  v22 = v30;
  v23 = v28;
  *v30 = v27;
  v22[1] = v13;
  v22[2] = v26;
  v22[3] = v23;
  v22[4] = v25;
  v22[5] = v18;
  v22[6] = v20;
  __swift_destroy_boxed_opaque_existential_1(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACCB748@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PuzzleAccessoryButtonConfig.init(from:)(a1, a2);
}

uint64_t sub_1BACCB75C(_QWORD *a1)
{
  return PuzzleAccessoryButtonConfig.encode(to:)(a1);
}

void sub_1BACCB770()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B0738)
  {
    sub_1BA78647C();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B0738);
  }
}

uint64_t sub_1BACCB7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1EF2B1F10, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BACCB820(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

unint64_t sub_1BACCB844()
{
  unint64_t result;

  result = qword_1EF2B1F20;
  if (!qword_1EF2B1F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACD28, &type metadata for PuzzleAccessoryButtonsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F20);
  }
  return result;
}

unint64_t sub_1BACCB888()
{
  unint64_t result;

  result = qword_1EF2B1F38;
  if (!qword_1EF2B1F38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryButtonConfig, &type metadata for PuzzleAccessoryButtonConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F38);
  }
  return result;
}

uint64_t sub_1BACCB8CC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2B1F28, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BACCB948()
{
  unint64_t result;

  result = qword_1EF2B1F50;
  if (!qword_1EF2B1F50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryButtonConfig, &type metadata for PuzzleAccessoryButtonConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F50);
  }
  return result;
}

unint64_t sub_1BACCB98C()
{
  unint64_t result;

  result = qword_1EF2B1F60;
  if (!qword_1EF2B1F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACCD8, &type metadata for PuzzleAccessoryButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F60);
  }
  return result;
}

unint64_t sub_1BACCB9D0()
{
  unint64_t result;

  result = qword_1EF2B1F70;
  if (!qword_1EF2B1F70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig, &type metadata for PuzzleMenuConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F70);
  }
  return result;
}

uint64_t sub_1BACCBA14(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2A96C0, (uint64_t)&type metadata for PuzzleMenuConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BACCBA90()
{
  unint64_t result;

  result = qword_1EF2B1F88;
  if (!qword_1EF2B1F88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleMenuConfig, &type metadata for PuzzleMenuConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F88);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonsConfig()
{
  return &type metadata for PuzzleAccessoryButtonsConfig;
}

_QWORD *assignWithCopy for PuzzleAccessoryButtonConfig(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonConfig()
{
  return &type metadata for PuzzleAccessoryButtonConfig;
}

uint64_t storeEnumTagSinglePayload for PuzzleAccessoryButtonConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BACCBBE4 + 4 * byte_1BB8ACA59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BACCBC18 + 4 * byte_1BB8ACA54[v4]))();
}

uint64_t sub_1BACCBC18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACCBC20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACCBC28);
  return result;
}

uint64_t sub_1BACCBC34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACCBC3CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BACCBC40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACCBC48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonConfig.CodingKeys()
{
  return &type metadata for PuzzleAccessoryButtonConfig.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PuzzleAccessoryButtonsConfig.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BACCBCA4 + 4 * byte_1BB8ACA5E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BACCBCC4 + 4 * byte_1BB8ACA63[v4]))();
}

_BYTE *sub_1BACCBCA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BACCBCC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BACCBCCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BACCBCD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BACCBCDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BACCBCE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryButtonsConfig.CodingKeys()
{
  return &type metadata for PuzzleAccessoryButtonsConfig.CodingKeys;
}

unint64_t sub_1BACCBD04()
{
  unint64_t result;

  result = qword_1EF2B1F90;
  if (!qword_1EF2B1F90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACBF8, &type metadata for PuzzleAccessoryButtonsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F90);
  }
  return result;
}

unint64_t sub_1BACCBD4C()
{
  unint64_t result;

  result = qword_1EF2B1F98;
  if (!qword_1EF2B1F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACCB0, &type metadata for PuzzleAccessoryButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1F98);
  }
  return result;
}

unint64_t sub_1BACCBD94()
{
  unint64_t result;

  result = qword_1EF2B1FA0;
  if (!qword_1EF2B1FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACC20, &type metadata for PuzzleAccessoryButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FA0);
  }
  return result;
}

unint64_t sub_1BACCBDDC()
{
  unint64_t result;

  result = qword_1EF2B1FA8;
  if (!qword_1EF2B1FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACC48, &type metadata for PuzzleAccessoryButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FA8);
  }
  return result;
}

unint64_t sub_1BACCBE24()
{
  unint64_t result;

  result = qword_1EF2B1FB0;
  if (!qword_1EF2B1FB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACB68, &type metadata for PuzzleAccessoryButtonsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FB0);
  }
  return result;
}

unint64_t sub_1BACCBE6C()
{
  unint64_t result;

  result = qword_1EF2B1FB8;
  if (!qword_1EF2B1FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ACB90, &type metadata for PuzzleAccessoryButtonsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FB8);
  }
  return result;
}

uint64_t sub_1BACCBEB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D657449756E656DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BACCC060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t *v18;
  void *v19;
  void *v20;
  uint64_t *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD v31[5];

  v9 = *v3;
  v8 = v3[1];
  v11 = v3[2];
  v10 = v3[3];
  if ((v10 & 4) != 0)
  {
    v31[0] = *v3;
    swift_retain();
    sub_1BA72FFD8();
    if (v4)
    {
      return sub_1BA7CCC14(v9, v8, v11, v10);
    }
    else
    {
      v20 = v19;
      v21 = a3;
      v22 = objc_msgSend(v19, sel_string);

      v23 = v11;
      v24 = sub_1BB8729A0();
      v26 = v25;

      result = sub_1BA7CCC14(v9, v8, v23, v10);
      *v21 = v24;
      v21[1] = v26;
      *((_BYTE *)v21 + 16) = 0;
    }
  }
  else
  {
    v29 = a3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v12 = sub_1BB63FFAC(a2, a1, v9, v8, v11, v10, v31);
    v31[4] = &v28;
    v13 = v31[0];
    v14 = v31[1];
    v30 = v11;
    v15 = v31[2];
    MEMORY[0x1E0C80A78](v12);
    v27[2] = a1;
    v27[3] = a2;
    v16 = sub_1BB640EB4(a1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BACCC7A8, (uint64_t)v27, v13, v14, v15);
    sub_1BA7CCC14(v9, v8, v30, v10);
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_release();
    if (!v4)
    {
      v18 = v29;
      *v29 = (uint64_t)v16;
      v18[1] = 0;
      *((_BYTE *)v18 + 16) = 1;
    }
  }
  return result;
}

void sub_1BACCC248(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA72FFD8();
  if (!v1)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_string);

    v6 = sub_1BB8729A0();
    v8 = v7;

    *a1 = v6;
    a1[1] = v8;
  }
}

uint64_t _s8NewsFeed15FormatMenuTitleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  if ((v4 & 4) != 0)
  {
    if ((v8 & 4) != 0)
    {
      v18 = *a1;
      sub_1BA7CCBB4(v7, v6, v9, v8);
      sub_1BA7CCBB4(v3, v2, v5, v4);
      sub_1BA7CCBB4(v3, v2, v5, v4);
      sub_1BA7CCBB4(v7, v6, v9, v8);
      static FormatTextContent.== infix(_:_:)((uint64_t)&v18);
      v11 = v16;
      sub_1BA7CCC14(v3, v2, v5, v4);
      sub_1BA7CCC14(v7, v6, v9, v8);
      sub_1BA7CCC14(v7, v6, v9, v8);
      sub_1BA7CCC14(v3, v2, v5, v4);
      return v11 & 1;
    }
    goto LABEL_7;
  }
  if ((v8 & 4) != 0)
  {
LABEL_7:
    sub_1BA7CCBB4(*a1, v2, v5, v4);
    sub_1BA7CCBB4(v7, v6, v9, v8);
    sub_1BA7CCC14(v3, v2, v5, v4);
    v12 = v7;
    v13 = v6;
    v14 = v9;
    v15 = v8;
LABEL_8:
    sub_1BA7CCC14(v12, v13, v14, v15);
    goto LABEL_9;
  }
  sub_1BA7CCBB4(*a2, a2[1], v9, v8);
  sub_1BA7CCBB4(v3, v2, v5, v4);
  sub_1BA7CCBB4(v3, v2, v5, v4);
  sub_1BA7CCBB4(v7, v6, v9, v8);
  if ((sub_1BA890D20(v3, v7) & 1) == 0)
  {
    sub_1BA7CCC14(v3, v2, v5, v4);
    sub_1BA7CCC14(v7, v6, v9, v8);
    sub_1BA7CCC14(v7, v6, v9, v8);
    v12 = v3;
    v13 = v2;
    v14 = v5;
    v15 = v4;
    goto LABEL_8;
  }
  v10 = sub_1BA895988(v2, v5, v4, v6, v9, v8);
  sub_1BA7CCC14(v3, v2, v5, v4);
  sub_1BA7CCC14(v7, v6, v9, v8);
  sub_1BA7CCC14(v7, v6, v9, v8);
  sub_1BA7CCC14(v3, v2, v5, v4);
  if ((v10 & 1) == 0)
  {
LABEL_9:
    v11 = 0;
    return v11 & 1;
  }
  v11 = 1;
  return v11 & 1;
}

unint64_t sub_1BACCC578(uint64_t a1)
{
  unint64_t result;

  result = sub_1BACCC59C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BACCC59C()
{
  unint64_t result;

  result = qword_1EF2B1FC0;
  if (!qword_1EF2B1FC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuTitle, &type metadata for FormatMenuTitle);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FC0);
  }
  return result;
}

unint64_t sub_1BACCC5E0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4ED770();
  a1[2] = sub_1BA7B70C0();
  result = sub_1BACCC614();
  a1[3] = result;
  return result;
}

unint64_t sub_1BACCC614()
{
  unint64_t result;

  result = qword_1EF2B1FC8;
  if (!qword_1EF2B1FC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuTitle, &type metadata for FormatMenuTitle);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FC8);
  }
  return result;
}

uint64_t destroy for FormatMenuTitle(uint64_t *a1)
{
  return sub_1BA7CCC14(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *initializeWithCopy for FormatMenuTitle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1BA7CCBB4(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for FormatMenuTitle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1BA7CCBB4(*a2, v4, v5, v6);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1BA7CCC14(v7, v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for FormatMenuTitle(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_1BA7CCC14(v3, v5, v4, v6);
  return a1;
}

uint64_t sub_1BACCC758(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 24) >> 2) & 1;
}

uint64_t sub_1BACCC764(uint64_t result)
{
  *(_QWORD *)(result + 24) &= ~4uLL;
  return result;
}

uint64_t sub_1BACCC774(uint64_t result, char a2)
{
  unint64_t v2;

  v2 = *(_QWORD *)(result + 24) & 0xFFFFFFFFFFFFFFF8 | (4 * (a2 & 1u));
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFFFFFF8uLL;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuTitle()
{
  return &type metadata for FormatMenuTitle;
}

void sub_1BACCC7A8(uint64_t *a1@<X8>)
{
  sub_1BACCC248(a1);
}

void sub_1BACCC7C0(char *a1)
{
  sub_1BB7F6D5C(*a1);
}

void sub_1BACCC7CC()
{
  char *v0;

  sub_1BA8D2B18(*v0);
}

void sub_1BACCC7D4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BACCC814()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BACCC880(uint64_t a1)
{
  char *v1;

  sub_1BAB08E74(a1, *v1);
}

uint64_t FormatNodeAccessibilityRole.Position.position.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

BOOL static FormatNodeAccessibilityRole.Position.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BACCC8B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNodeAccessibilityRole.Position.init(from:)(a1, a2);
}

uint64_t sub_1BACCC8C4(_QWORD *a1)
{
  return FormatNodeAccessibilityRole.Position.encode(to:)(a1);
}

uint64_t _s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v8;
  uint64_t v10;
  int v11;
  BOOL v12;
  BOOL v13;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *a2;
  v5 = *((unsigned __int8 *)a2 + 8);
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      if ((v5 & 0xC0) != 0x40)
        return 0;
      goto LABEL_6;
    }
    v10 = v3 ^ 0x80;
    v11 = v5 & 0xC0;
    if (!(v2 | v10))
    {
      v12 = v11 == 128 && v4 == 0;
      return v12 && v5 == 128;
    }
    v13 = v11 == 128 && v4 == 1;
    return v13 && v5 == 128;
  }
  if (v5 >= 0x40)
    return 0;
LABEL_6:
  v6 = v5 & 1;
  v8 = (v5 & 1) == 0 && v2 == v4;
  if ((v3 & 1) != 0)
    return v6;
  else
    return v8;
}

BOOL _s8NewsFeed23FormatAccessibilityRoleO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v5;
  _BOOL4 v7;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 5)
    return v3 == 5;
  if (v2 == 6)
    return v3 == 6;
  if ((v3 - 5) < 2)
    return 0;
  v5 = v3 == 4;
  v7 = v3 == v2 && v3 != 4;
  if (v2 == 4)
    return v5;
  else
    return v7;
}

uint64_t sub_1BACCC9EC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5B7CF0, (uint64_t (*)(void))sub_1BA78508C, (uint64_t (*)(void))sub_1BACCCA08);
}

unint64_t sub_1BACCCA08()
{
  unint64_t result;

  result = qword_1EF2B1FD0;
  if (!qword_1EF2B1FD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityRole, &type metadata for FormatAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FD0);
  }
  return result;
}

unint64_t sub_1BACCCA4C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BACCCA70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BACCCA70()
{
  unint64_t result;

  result = qword_1EF2B1FD8;
  if (!qword_1EF2B1FD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole.Position, &type metadata for FormatNodeAccessibilityRole.Position);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FD8);
  }
  return result;
}

uint64_t sub_1BACCCAB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA54F644, (uint64_t (*)(void))sub_1BA578750, (uint64_t (*)(void))sub_1BACCCAD0);
}

unint64_t sub_1BACCCAD0()
{
  unint64_t result;

  result = qword_1EF2B1FE0;
  if (!qword_1EF2B1FE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole.Position, &type metadata for FormatNodeAccessibilityRole.Position);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FE0);
  }
  return result;
}

unint64_t sub_1BACCCB14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BACCCB38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BACCCB38()
{
  unint64_t result;

  result = qword_1EF2B1FE8;
  if (!qword_1EF2B1FE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole, &type metadata for FormatNodeAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FE8);
  }
  return result;
}

uint64_t sub_1BACCCB7C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA650BA0, (uint64_t (*)(void))sub_1BA5FB410, (uint64_t (*)(void))sub_1BACCCB98);
}

unint64_t sub_1BACCCB98()
{
  unint64_t result;

  result = qword_1EF2B1FF0;
  if (!qword_1EF2B1FF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeAccessibilityRole, &type metadata for FormatNodeAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FF0);
  }
  return result;
}

uint64_t sub_1BACCCBDC(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >= 4;
  v3 = v1 - 4;
  if (!v2)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

_BYTE *sub_1BACCCBF8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 4;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNodeAccessibilityRole(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BACCCC5C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BACCCC7C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeAccessibilityRole()
{
  return &type metadata for FormatNodeAccessibilityRole;
}

ValueMetadata *type metadata accessor for FormatNodeAccessibilityRole.Position()
{
  return &type metadata for FormatNodeAccessibilityRole.Position;
}

ValueMetadata *type metadata accessor for FormatAccessibilityRole.CodingType()
{
  return &type metadata for FormatAccessibilityRole.CodingType;
}

unint64_t sub_1BACCCCDC()
{
  unint64_t result;

  result = qword_1EF2B1FF8;
  if (!qword_1EF2B1FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD1F4, &type metadata for FormatAccessibilityRole.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B1FF8);
  }
  return result;
}

void sub_1BACCCD20()
{
  __asm { BR              X10 }
}

void sub_1BACCCD5C(void *a1)
{
  uint64_t *v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v2 = objc_msgSend(a1, sel_coverImagePrimaryColor);
  if (v2)
  {
    v4 = v2;
    v3 = swift_allocObject();
    objc_msgSend(v4, sel_red);
    v6 = v5 * 255.0;
    objc_msgSend(v4, sel_green);
    v8 = v7 * 255.0;
    objc_msgSend(v4, sel_blue);
    v10 = v9 * 255.0;
    objc_msgSend(v4, sel_alpha);
    *(double *)(v3 + 16) = v6;
    *(double *)(v3 + 24) = v8;
    *(double *)(v3 + 32) = v10;
    *(_QWORD *)(v3 + 40) = v11;
    *(_BYTE *)(v3 + 48) = 0;

    v12 = 0x6000000000000000;
  }
  else
  {
    v3 = swift_allocObject();
    *(_BYTE *)(v3 + 16) = 29;
    *(_QWORD *)(v3 + 24) = 0x3FF0000000000000;
    *(_BYTE *)(v3 + 32) = 0;
    v12 = 0x1000000000000000;
  }
  *v1 = v12 | v3;
}

uint64_t sub_1BACCCFA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BACCCFE4 + 4 * byte_1BB8AD244[a1]))(0xD000000000000011, 0x80000001BB95C7C0);
}

uint64_t sub_1BACCCFE4()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_1BACCD01C()
{
  return 0x7865547265766F63;
}

unint64_t sub_1BACCD040()
{
  return 0xD000000000000010;
}

void sub_1BACCD05C(char *a1)
{
  sub_1BB7FDD44(*a1);
}

void sub_1BACCD068()
{
  char *v0;

  sub_1BA8D2BEC(*v0);
}

void sub_1BACCD070(uint64_t a1)
{
  char *v1;

  sub_1BA9D3A08(a1, *v1);
}

void sub_1BACCD078(uint64_t a1)
{
  char *v1;

  sub_1BAB0A514(a1, *v1);
}

uint64_t sub_1BACCD080@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BACCD914();
  *a1 = result;
  return result;
}

uint64_t sub_1BACCD0AC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BACCCFA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BACCD0D4()
{
  sub_1BACCD53C();
  return sub_1BB872D60();
}

uint64_t sub_1BACCD130()
{
  sub_1BACCD53C();
  return sub_1BB872D0C();
}

void sub_1BACCD17C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251570;
}

uint64_t FormatIssueBinding.Color.hash(into:)()
{
  return sub_1BB8745D8();
}

BOOL static FormatIssueBinding.Color.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static FormatIssueBinding.Color.allCases.getter()
{
  return &unk_1E7251598;
}

uint64_t FormatIssueBinding.Color.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BACCD21C()
{
  unint64_t result;

  result = qword_1EF2B2000;
  if (!qword_1EF2B2000)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Color, &type metadata for FormatIssueBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2B2000);
  }
  return result;
}

unint64_t sub_1BACCD260(uint64_t a1)
{
  unint64_t result;

  result = sub_1BACCD284();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BACCD284()
{
  unint64_t result;

  result = qword_1EF2B2008;
  if (!qword_1EF2B2008)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Color, &type metadata for FormatIssueBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2B2008);
  }
  return result;
}

uint64_t sub_1BACCD2C8()
{
  return sub_1BA9BD27C(&qword_1EF2B2010, &qword_1EF2B2018);
}

void sub_1BACCD2F4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251598;
}

unint64_t sub_1BACCD304(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BACCD338();
  a1[2] = sub_1BACCD37C();
  result = sub_1BACCD21C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BACCD338()
{
  unint64_t result;

  result = qword_1ED39FD58;
  if (!qword_1ED39FD58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Color, &type metadata for FormatIssueBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED39FD58);
  }
  return result;
}

unint64_t sub_1BACCD37C()
{
  unint64_t result;

  result = qword_1EF2B2020;
  if (!qword_1EF2B2020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Color, &type metadata for FormatIssueBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2B2020);
  }
  return result;
}

uint64_t sub_1BACCD3C0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueBinding.Color.init(from:)(a1, a2);
}

void sub_1BACCD3D4(_QWORD *a1)
{
  FormatIssueBinding.Color.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Color()
{
  return &type metadata for FormatIssueBinding.Color;
}

uint64_t _s5ColorOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BACCD448 + 4 * byte_1BB8AD24F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BACCD47C + 4 * byte_1BB8AD24A[v4]))();
}

uint64_t sub_1BACCD47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACCD484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACCD48CLL);
  return result;
}

uint64_t sub_1BACCD498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACCD4A0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BACCD4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACCD4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5ColorO10CodingTypeOMa()
{
  return &_s5ColorO10CodingTypeON;
}

uint64_t sub_1BACCD4C8()
{
  return sub_1BA9BD27C(&qword_1EF2B2028, &qword_1EF2B2030);
}

unint64_t sub_1BACCD4F8()
{
  unint64_t result;

  result = qword_1EF2B2038;
  if (!qword_1EF2B2038)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD49C, &_s5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2038);
  }
  return result;
}

unint64_t sub_1BACCD53C()
{
  unint64_t result;

  result = qword_1EF2B2040;
  if (!qword_1EF2B2040)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD424, &_s5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2040);
  }
  return result;
}

void sub_1BACCD580(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BACCD5BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1BACCCD20();
  v1 = type metadata accessor for FormatInspectionItem(0);
  v2 = (_QWORD *)(v0 + *(int *)(v1 + 24));
  *v2 = v6;
  v3 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  *(_OWORD *)v0 = xmmword_1BB8AD510;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  v4 = v0 + *(int *)(v1 + 28);
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = -1;
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 0, 1, v1);
}

uint64_t sub_1BACCD914()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1BACCD95C()
{
  return swift_deallocObject();
}

uint64_t sub_1BACCD96C()
{
  return swift_deallocObject();
}

uint64_t static FormatOptionsNodeStatementModifier.Integer.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatOptionsNodeStatementModifier.Integer.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatOptionsNodeStatementModifier.Integer.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BACCD9EC()
{
  unint64_t result;

  result = qword_1EF2B2048;
  if (!qword_1EF2B2048)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Integer, &type metadata for FormatOptionsNodeStatementModifier.Integer);
    atomic_store(result, (unint64_t *)&qword_1EF2B2048);
  }
  return result;
}

unint64_t sub_1BACCDA30(uint64_t a1)
{
  unint64_t result;

  result = sub_1BACCDA54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BACCDA54()
{
  unint64_t result;

  result = qword_1EF2B2050;
  if (!qword_1EF2B2050)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Integer, &type metadata for FormatOptionsNodeStatementModifier.Integer);
    atomic_store(result, (unint64_t *)&qword_1EF2B2050);
  }
  return result;
}

unint64_t sub_1BACCDA98(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BACCDACC();
  a1[2] = sub_1BACCDB10();
  result = sub_1BACCD9EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BACCDACC()
{
  unint64_t result;

  result = qword_1EF2B2058;
  if (!qword_1EF2B2058)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Integer, &type metadata for FormatOptionsNodeStatementModifier.Integer);
    atomic_store(result, (unint64_t *)&qword_1EF2B2058);
  }
  return result;
}

unint64_t sub_1BACCDB10()
{
  unint64_t result;

  result = qword_1EF2B2060;
  if (!qword_1EF2B2060)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Integer, &type metadata for FormatOptionsNodeStatementModifier.Integer);
    atomic_store(result, (unint64_t *)&qword_1EF2B2060);
  }
  return result;
}

uint64_t sub_1BACCDB54(_QWORD *a1)
{
  return FormatOptionsNodeStatementModifier.Integer.init(from:)(a1);
}

uint64_t sub_1BACCDB68(_QWORD *a1)
{
  return FormatOptionsNodeStatementModifier.Integer.encode(to:)(a1);
}

uint64_t _s7IntegerOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BACCDBBC + 4 * byte_1BB8AD520[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BACCDBDC + 4 * byte_1BB8AD525[v4]))();
}

_BYTE *sub_1BACCDBBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BACCDBDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BACCDBE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BACCDBEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BACCDBF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BACCDBFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementModifier.Integer()
{
  return &type metadata for FormatOptionsNodeStatementModifier.Integer;
}

uint64_t dispatch thunk of FormatBlueprintAnimatorFactoryType.registerAnimators(with:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1BACCDC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9E8];
  if (*(_QWORD *)(*(_QWORD *)(a2 + 128) + 16))
  {
    v3 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v3);
  }
  if (*(_QWORD *)(*(_QWORD *)(a2 + 136) + 16))
  {
    v4 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v4);
  }
  sub_1BACCDD38();
  sub_1BACCDD8C();
  v5 = sub_1BB872BC8();
  v6 = sub_1BACCDDD4(v5, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1BACCDD00(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FormatContentSlotItemObject.Resolved.identifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_1BACCDD38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBA80)
  {
    type metadata accessor for FormatContentSlotItemResolution();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBA80);
  }
}

unint64_t sub_1BACCDD8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C03E8;
  if (!qword_1ED3C03E8)
  {
    sub_1BACCDD38();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C03E8);
  }
  return result;
}

uint64_t sub_1BACCDDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  _QWORD v18[6];
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a2;
  v3 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v6);
  v18[5] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v25);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1E0C80A78](v10);
  v27 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v18 - v14;
  result = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v23 = a1 + v22;
    v28 = *(_QWORD *)(v13 + 72);
    v18[3] = "uzzlesSolved";
    v18[2] = "fastestTimeByDifficultyLevel";
    v18[1] = "averageTimeByDifficultyLevel";
    v18[0] = "fficultyLevel";
    sub_1BA4C2DD8(a1 + v22, (uint64_t)v18 - v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
    sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v17 = (char *)&loc_1BACCE05C + dword_1BACCE514[swift_getEnumCaseMultiPayload()];
    v29 = 1;
    __asm { BR              X9 }
  }
  return result;
}

__n128 FeedLayoutSolverOptions.cursorTracking.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[1].n128_u8[0];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

void FeedLayoutSolverOptions.headlineOptions.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  char v2;
  char v3;

  v2 = v1[18];
  v3 = v1[19];
  *a1 = v1[17];
  a1[1] = v2;
  a1[2] = v3;
}

void FeedLayoutSolverOptions.categoryOptions.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 21);
  *a1 = *(_BYTE *)(v1 + 20);
  a1[1] = v2;
}

void FeedLayoutSolverOptions.coverOptions.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 23);
  *a1 = *(_BYTE *)(v1 + 22);
  a1[1] = v2;
}

unint64_t FeedLayoutSolverOptions.issueStripOptions.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  return sub_1BA67035C(v2);
}

uint64_t FeedLayoutSolverOptions.pluginOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedLayoutSolverOptions(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))sub_1BA914C98);
}

uint64_t type metadata accessor for FeedLayoutSolverOptions.PluginOptions(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3D2A48);
}

uint64_t FeedLayoutSolverOptions.traits.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedLayoutSolverOptions(0);
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 40));
  return result;
}

NewsFeed::FeedLayoutSolverOptions::Traits __swiftcall FeedLayoutSolverOptions.Traits.init(rawValue:)(NewsFeed::FeedLayoutSolverOptions::Traits rawValue)
{
  NewsFeed::FeedLayoutSolverOptions::Traits *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FeedLayoutSolverOptions.Traits.allowVideoLayouts.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FeedLayoutSolverOptions.Traits.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FeedLayoutSolverOptions.init(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v10 = *(_BYTE *)(a1 + 16);
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = *a3;
  v15 = a3[1];
  v16 = *a4;
  v17 = a4[1];
  v18 = *a5;
  v19 = *a7;
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(_BYTE *)(a8 + 16) = v10;
  *(_BYTE *)(a8 + 17) = v11;
  *(_BYTE *)(a8 + 18) = v12;
  *(_BYTE *)(a8 + 19) = v13;
  *(_BYTE *)(a8 + 20) = v14;
  *(_BYTE *)(a8 + 21) = v15;
  *(_BYTE *)(a8 + 22) = v16;
  *(_BYTE *)(a8 + 23) = v17;
  *(_QWORD *)(a8 + 24) = v18;
  v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  result = sub_1BA5193C4(a6, a8 + *(int *)(v20 + 36), (uint64_t (*)(_QWORD))sub_1BA914C98);
  *(_QWORD *)(a8 + *(int *)(v20 + 40)) = v19;
  return result;
}

uint64_t FeedLayoutSolverOptions.with(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)@<X0>(uint64_t *a1@<X0>, unsigned __int16 *a2@<X1>, unsigned __int16 *a3@<X2>, unsigned __int16 *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  unint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48;
  int v49;
  _BYTE *v50;
  unint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  unint64_t *v57;
  uint64_t v58;
  uint64_t result;
  _BYTE v60[12];
  unsigned int v61;
  int v62;
  int v63;
  _BYTE *v64;
  int v65;
  int v66;
  int v67;
  unsigned __int16 *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  unint64_t *v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v68 = a4;
  v69 = a7;
  v71 = a6;
  v72 = a5;
  sub_1BA914C98();
  MEMORY[0x1E0C80A78](v12);
  v73 = &v60[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v76 = &v60[-v15];
  v75 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v75);
  v74 = &v60[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v70 = &v60[-v18];
  MEMORY[0x1E0C80A78](v19);
  v64 = &v60[-v20];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v60[-v22];
  MEMORY[0x1E0C80A78](v24);
  v26 = &v60[-v25];
  MEMORY[0x1E0C80A78](v27);
  v29 = &v60[-v28];
  MEMORY[0x1E0C80A78](v30);
  v32 = &v60[-v31];
  v33 = *a1;
  v77 = a1[1];
  v78 = v33;
  v34 = *((_BYTE *)a1 + 16);
  v35 = *((_BYTE *)a1 + 17);
  v36 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
  v37 = *a3;
  v61 = *v68;
  v38 = *v72;
  v72 = *(unint64_t **)v69;
  LODWORD(v69) = *(unsigned __int8 *)(v69 + 8);
  sub_1BA4C2DD8(v79, (uint64_t)&v60[-v31], v39);
  if ((v35 & 1) != 0)
  {
    v40 = *(_QWORD *)v32;
    v77 = *((_QWORD *)v32 + 1);
    v78 = v40;
    v41 = v32[16];
  }
  else
  {
    v41 = v34 & 1;
  }
  LODWORD(v68) = v41;
  sub_1BA4A2E80((uint64_t)v32, type metadata accessor for FeedLayoutSolverOptions);
  sub_1BA4C2DD8(v79, (uint64_t)v29, type metadata accessor for FeedLayoutSolverOptions);
  v42 = (uint64_t)v76;
  if (v36 == 2)
  {
    v43 = v29[17];
    v66 = v29[18];
    v67 = v43;
    v44 = v29[19];
  }
  else
  {
    v66 = (v36 >> 8) & 1;
    v67 = v36 & 1;
    v44 = HIWORD(v36) & 1;
  }
  v65 = v44;
  sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FeedLayoutSolverOptions);
  v45 = v79;
  sub_1BA4C2DD8(v79, (uint64_t)v26, type metadata accessor for FeedLayoutSolverOptions);
  if (v37 == 2)
  {
    v63 = v26[20];
    v46 = v26[21];
  }
  else
  {
    v63 = v37 & 1;
    v46 = (v37 >> 8) & 1;
  }
  v62 = v46;
  v47 = (uint64_t)v70;
  sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FeedLayoutSolverOptions);
  sub_1BA4C2DD8(v45, (uint64_t)v23, type metadata accessor for FeedLayoutSolverOptions);
  if (v61 == 2)
  {
    v48 = v23[22];
    LOBYTE(v49) = v23[23];
  }
  else
  {
    v48 = v61 & 1;
    v49 = (v61 >> 8) & 1;
  }
  sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FeedLayoutSolverOptions);
  v50 = v64;
  sub_1BA4C2DD8(v45, (uint64_t)v64, type metadata accessor for FeedLayoutSolverOptions);
  v51 = v38;
  if (v38 == 2)
  {
    v51 = *((_QWORD *)v50 + 3);
    sub_1BA67035C(v51);
  }
  sub_1BACCEBE0(v38);
  sub_1BA4A2E80((uint64_t)v50, type metadata accessor for FeedLayoutSolverOptions);
  v52 = v73;
  sub_1BA4C2DD8(v71, (uint64_t)v73, (uint64_t (*)(_QWORD))sub_1BA914C98);
  sub_1BA4C2DD8(v45, v47, type metadata accessor for FeedLayoutSolverOptions);
  v53 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
  {
    v55 = v75;
    sub_1BA4C2DD8(v47 + *(int *)(v75 + 36), v42, (uint64_t (*)(_QWORD))sub_1BA914C98);
    sub_1BA4A2E80(v47, type metadata accessor for FeedLayoutSolverOptions);
    sub_1BA4A2E80((uint64_t)v52, (uint64_t (*)(_QWORD))sub_1BA914C98);
  }
  else
  {
    sub_1BA4A2E80(v47, type metadata accessor for FeedLayoutSolverOptions);
    sub_1BA5193C4((uint64_t)v52, v42, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v42, 0, 1, v53);
    v55 = v75;
  }
  v56 = v74;
  sub_1BA4C2DD8(v79, (uint64_t)v74, type metadata accessor for FeedLayoutSolverOptions);
  v57 = v72;
  if ((_DWORD)v69)
    v57 = *(unint64_t **)&v56[*(int *)(v55 + 40)];
  sub_1BA4A2E80((uint64_t)v56, type metadata accessor for FeedLayoutSolverOptions);
  v58 = v77;
  *(_QWORD *)a8 = v78;
  *(_QWORD *)(a8 + 8) = v58;
  *(_BYTE *)(a8 + 16) = (_BYTE)v68;
  *(_BYTE *)(a8 + 17) = v67;
  *(_BYTE *)(a8 + 18) = v66;
  *(_BYTE *)(a8 + 19) = v65;
  *(_BYTE *)(a8 + 20) = v63;
  *(_BYTE *)(a8 + 21) = v62;
  *(_BYTE *)(a8 + 22) = v48;
  *(_BYTE *)(a8 + 23) = v49;
  *(_QWORD *)(a8 + 24) = v51;
  result = sub_1BA5193C4(v42, a8 + *(int *)(v55 + 36), (uint64_t (*)(_QWORD))sub_1BA914C98);
  *(_QWORD *)(a8 + *(int *)(v55 + 40)) = v57;
  return result;
}

unint64_t sub_1BACCEBE0(unint64_t result)
{
  if (result != 2)
    return sub_1BA67035C(result);
  return result;
}

uint64_t FeedLayoutSolverOptions.HeadlineOptions.alwaysFillWithExcerpt.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeedLayoutSolverOptions.HeadlineOptions.alwaysShowAuthor.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FeedLayoutSolverOptions.HeadlineOptions.alwaysHidePublisherLogo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FeedLayoutSolverOptions.CategoryOptions.alwaysInsetIcon.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeedLayoutSolverOptions.CoverOptions.alwaysShowTitle.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeedLayoutSolverOptions.CoverOptions.alwaysIncludeBottomInset.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

unint64_t FeedLayoutSolverOptions.IssueStripOptions.separators.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA67035C(v2);
}

uint64_t FeedLayoutSolverOptions.PluginOptions.layoutOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB8705C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FeedLayoutSolverOptions.PluginOptions.init(layoutOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

unint64_t sub_1BACCECA4()
{
  unint64_t result;

  result = qword_1EF2B2068;
  if (!qword_1EF2B2068)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutSolverOptions.Traits, &type metadata for FeedLayoutSolverOptions.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2B2068);
  }
  return result;
}

unint64_t sub_1BACCECEC()
{
  unint64_t result;

  result = qword_1EF2B2070;
  if (!qword_1EF2B2070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutSolverOptions.Traits, &type metadata for FeedLayoutSolverOptions.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2B2070);
  }
  return result;
}

unint64_t sub_1BACCED34()
{
  unint64_t result;

  result = qword_1EF2B2078;
  if (!qword_1EF2B2078)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutSolverOptions.Traits, &type metadata for FeedLayoutSolverOptions.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2B2078);
  }
  return result;
}

unint64_t sub_1BACCED7C()
{
  unint64_t result;

  result = qword_1EF2B2080;
  if (!qword_1EF2B2080)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutSolverOptions.Traits, &type metadata for FeedLayoutSolverOptions.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2B2080);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedLayoutSolverOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    *(_BYTE *)(a1 + 19) = *((_BYTE *)a2 + 19);
    *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
    v7 = a2[3];
    if (v7 >= 2)
      v7 = swift_bridgeObjectRetain();
    v4[3] = v7;
    v8 = *(int *)(a3 + 36);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1BA914C98();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = sub_1BB8705C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t initializeWithCopy for FeedLayoutSolverOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v6 = *(_QWORD *)(a2 + 24);
  if (v6 >= 2)
    v6 = swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BA914C98();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t assignWithCopy for FeedLayoutSolverOptions(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v6;
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
  *(_BYTE *)(a1 + 19) = *((_BYTE *)a2 + 19);
  *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
  *(_BYTE *)(a1 + 21) = *((_BYTE *)a2 + 21);
  *(_BYTE *)(a1 + 22) = *((_BYTE *)a2 + 22);
  *(_BYTE *)(a1 + 23) = *((_BYTE *)a2 + 23);
  v7 = (unint64_t *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *((_QWORD *)a2 + 3);
  if (v8 >= 2)
  {
    if (v9 >= 2)
    {
      *v7 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v7 = *((_QWORD *)a2 + 3);
    }
  }
  else
  {
    *v7 = v9;
    if (v9 >= 2)
      swift_bridgeObjectRetain();
  }
  v10 = *(int *)(a3 + 36);
  v11 = (void *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v21 = sub_1BB8705C4();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v11, v12, v21);
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_13:
    sub_1BA914C98();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  v18 = sub_1BB8705C4();
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t initializeWithTake for FeedLayoutSolverOptions(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
  *(_BYTE *)(a1 + 19) = *((_BYTE *)a2 + 19);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  *(_OWORD *)a1 = v6;
  v10 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BA914C98();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1BB8705C4();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t assignWithTake for FeedLayoutSolverOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  v7 = (unint64_t *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *((_BYTE *)v7 - 1) = *(_BYTE *)(a2 + 23);
  v8 = *(_QWORD *)(a2 + 24);
  if (v6 < 2)
    goto LABEL_4;
  if (v8 < 2)
  {
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8F1528);
LABEL_4:
    *v7 = v8;
    goto LABEL_6;
  }
  *v7 = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v20 = sub_1BB8705C4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v10, v11, v20);
      goto LABEL_12;
    }
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    goto LABEL_11;
  }
  if (v16)
  {
LABEL_11:
    sub_1BA914C98();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  v17 = sub_1BB8705C4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_12:
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACCF4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483645)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 2;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA914C98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACCF550(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483645)
  {
    *(_QWORD *)(result + 24) = (a2 + 1);
  }
  else
  {
    sub_1BA914C98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_1BACCF5C8()
{
  unint64_t v0;

  sub_1BA914C98();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for FormatGrayscaleColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.CursorTracking(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_1BACCF6B8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions.HeadlineOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.HeadlineOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LayeredMediaViewDisplayState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8NewsFeed23FeedLayoutSolverOptionsV15CategoryOptionsVwst_0(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BACCF8EC + 4 * byte_1BB8AD665[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BACCF920 + 4 * byte_1BB8AD660[v4]))();
}

uint64_t sub_1BACCF920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BACCF928(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BACCF930);
  return result;
}

uint64_t sub_1BACCF93C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BACCF944);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BACCF948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BACCF950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLayoutSolverOptions.IssueStripOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 2)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for FeedLayoutSolverOptions.IssueStripOptions(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for FeedLayoutSolverOptions.IssueStripOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 >= 2)
  {
    if (v4 >= 2)
    {
      *a1 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v4;
    if (v4 >= 2)
      swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithTake for FeedLayoutSolverOptions.IssueStripOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 >= 2)
  {
    if (v3 >= 2)
    {
      *a1 = v3;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1BA8F1528);
  }
  *a1 = v3;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions.IssueStripOptions(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.IssueStripOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for FeedLayoutSolverOptions.PluginOptions(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB8705C4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FeedLayoutSolverOptions.PluginOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutSolverOptions.PluginOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACCFCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedLayoutSolverOptions.PluginOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BACCFD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB8705C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BACCFD44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB8705C4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BACCFDB4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = type metadata accessor for DebugInspectViewItem();
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7AC60(0, 0, 0);
  v5 = v17;
  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
      v15 = a1 & 0xC000000000000001;
      while (v15)
      {
        v8 = MEMORY[0x1BCCE4630](v7, a1);
        v9 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_15;
LABEL_7:
        *v4 = 0x656D656854;
        v4[1] = 0xE500000000000000;
        v4[2] = v8;
        swift_storeEnumTagMultiPayload();
        v17 = v5;
        v11 = *(_QWORD *)(v5 + 16);
        v10 = *(_QWORD *)(v5 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BAC7AC60(v10 > 1, v11 + 1, 1);
          v5 = v17;
        }
        *(_QWORD *)(v5 + 16) = v11 + 1;
        sub_1BA5193C4((uint64_t)v4, v5+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        ++v7;
        if (v9 == v6)
          goto LABEL_17;
      }
      if (v7 < *(_QWORD *)(v14 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v6 = sub_1BB873F30();
      if (!v6)
        goto LABEL_17;
    }
    v8 = swift_retain();
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_15;
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *sub_1BACCFF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD **v40;
  _QWORD *v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  unint64_t v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  _QWORD **v48;
  _QWORD *v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  _OWORD *v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  _OWORD *v75;
  __int128 v76;
  __int128 v77;
  _QWORD *v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  _OWORD *v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char v105;
  unint64_t v106;
  unint64_t v107;
  _OWORD *v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  _QWORD *v112;
  char v113;
  unint64_t v114;
  unint64_t v115;
  _OWORD *v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE v146[4];
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  _BYTE *v160;
  uint64_t v161[3];
  _QWORD *v162;
  _BYTE v163[48];
  __int128 v164;
  _OWORD v165[2];
  __int128 v166;
  _OWORD v167[2];
  __int128 v168;
  _OWORD v169[2];
  __int128 v170;
  _OWORD v171[2];
  __int128 v172;
  _OWORD v173[2];
  __int128 v174;
  _OWORD v175[2];
  __int128 v176;
  _BYTE v177[25];
  __int128 v178;
  _BYTE v179[25];
  uint64_t v180;
  _BYTE v181[16];
  _BYTE v182[32];

  v155 = a4;
  v156 = a3;
  v157 = a2;
  v158 = (_QWORD *)a1;
  v5 = type metadata accessor for FeedItem(0);
  v150 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v160 = &v146[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v7);
  v153 = &v146[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v152 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v152);
  v159 = (uint64_t)&v146[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v154 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v154);
  v11 = (uint64_t *)&v146[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_systemGrayColor);
  v14 = objc_msgSend(v12, sel_lightGrayColor);
  v15 = (void *)objc_opt_self();
  v16 = *MEMORY[0x1E0DC1420];
  v17 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1420]);
  v18 = sub_1BACD43D0(v13, 0, 0, v14, v17, 44.0, 44.0);

  v4[4] = v18;
  v19 = objc_msgSend(v12, sel_lightGrayColor);
  v20 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, v16);
  v21 = sub_1BACD43D0(0, 0, 0, v19, v20, 44.0, 44.0);

  v4[5] = v21;
  v22 = objc_msgSend(v12, sel_lightGrayColor);
  v23 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, v16);
  v24 = sub_1BACD43D0(0, 4271950, 0xE300000000000000, v22, v23, 44.0, 44.0);

  v25 = MEMORY[0x1E0DEE9E8];
  v26 = MEMORY[0x1E0DEE9E0];
  v4[6] = v24;
  v4[7] = v25;
  v27 = v4;
  v4[8] = v25;
  v4[9] = v26;
  v4[10] = v25;
  v151 = v4 + 10;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_feedItemImages) = v26;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_layoutImages) = v26;
  v28 = (_OWORD *)((char *)v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection);
  *v28 = 0u;
  v28[1] = 0u;
  *(_OWORD *)((char *)v28 + 25) = 0u;
  v29 = (uint64_t)v158;
  sub_1BA4C2DD8((uint64_t)v158, (uint64_t)v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v30 = (_QWORD *)(v29 + *(int *)(v154 + 24));
  v31 = v30[4];
  v32 = v30[5];
  v33 = v30 + 1;
  __swift_project_boxed_opaque_existential_1(v30 + 1, v31);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v32 + 64))(&v178, v31, v32);
  v34 = *(_QWORD *)&v179[8];
  if (*(_QWORD *)&v179[8])
  {
    v35 = *(_QWORD *)&v179[16];
    __swift_project_boxed_opaque_existential_1(&v178, *(uint64_t *)&v179[8]);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    v38 = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v178);
    sub_1BA4C2DD8(v29, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
    if (v38)
      goto LABEL_6;
  }
  else
  {
    sub_1BA554698((uint64_t)&v178);
    sub_1BA4C2DD8(v29, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  }
  v36 = *v11;
  v38 = v11[1];
  swift_bridgeObjectRetain();
LABEL_6:
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v27[2] = v36;
  v27[3] = v38;
  sub_1BACD457C(v156, (uint64_t)v27 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_inventory);
  sub_1BA4C010C(v155, (uint64_t)&v178);
  type metadata accessor for DebugInspectHeadlineService();
  v39 = swift_allocObject();
  sub_1BA4CECCC(&v178, v39 + 16);
  *(_QWORD *)((char *)v27 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_headlineService) = v39;
  sub_1BACD45B8(v157, (uint64_t)v163);
  sub_1BA6A09F0((uint64_t)v163, (uint64_t)&v176, &qword_1EF2B2200, (uint64_t)&type metadata for DebugInspectViewSection);
  v154 = (uint64_t)v27;
  if (*(_QWORD *)&v177[16])
  {
    v178 = v176;
    *(_OWORD *)v179 = *(_OWORD *)v177;
    *(_OWORD *)&v179[9] = *(_OWORD *)&v177[9];
    v40 = (_QWORD **)((char *)v27 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
    swift_beginAccess();
    v41 = *v40;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v40 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v41 = sub_1BB391DA8(0, v41[2] + 1, 1, v41);
      *v40 = v41;
    }
    v44 = v41[2];
    v43 = v41[3];
    if (v44 >= v43 >> 1)
    {
      v41 = sub_1BB391DA8((_QWORD *)(v43 > 1), v44 + 1, 1, v41);
      *v40 = v41;
    }
    v41[2] = v44 + 1;
    v45 = &v41[6 * v44];
    v46 = v178;
    v47 = *(_OWORD *)v179;
    *(_OWORD *)((char *)v45 + 57) = *(_OWORD *)&v179[9];
    v45[2] = v46;
    v45[3] = v47;
    swift_endAccess();
    v27 = (_QWORD *)v154;
  }
  sub_1BACD47F0((uint64_t)v158, v157, (uint64_t)&v164);
  v48 = (_QWORD **)((char *)v27 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v49 = *v48;
  v50 = swift_isUniquelyReferenced_nonNull_native();
  *v48 = v49;
  if ((v50 & 1) == 0)
  {
    v49 = sub_1BB391DA8(0, v49[2] + 1, 1, v49);
    *v48 = v49;
  }
  v52 = v49[2];
  v51 = v49[3];
  v53 = v158;
  if (v52 >= v51 >> 1)
  {
    v49 = sub_1BB391DA8((_QWORD *)(v51 > 1), v52 + 1, 1, v49);
    *v48 = v49;
  }
  v49[2] = v52 + 1;
  v54 = &v49[6 * v52];
  v55 = v164;
  v56 = v165[0];
  *(_OWORD *)((char *)v54 + 57) = *(_OWORD *)((char *)v165 + 9);
  v54[2] = v55;
  v54[3] = v56;
  swift_endAccess();
  v57 = v30[4];
  v58 = v30[5];
  __swift_project_boxed_opaque_existential_1(v33, v57);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v58 + 64))(&v172, v57, v58);
  if (*((_QWORD *)&v173[0] + 1))
  {
    sub_1BA4CECCC(&v172, (uint64_t)&v174);
    sub_1BACD4CE0(&v174, (uint64_t)&v166);
    swift_beginAccess();
    v59 = *v48;
    v60 = swift_isUniquelyReferenced_nonNull_native();
    *v48 = v59;
    if ((v60 & 1) == 0)
    {
      v59 = sub_1BB391DA8(0, v59[2] + 1, 1, v59);
      *v48 = v59;
    }
    v62 = v59[2];
    v61 = v59[3];
    if (v62 >= v61 >> 1)
    {
      v59 = sub_1BB391DA8((_QWORD *)(v61 > 1), v62 + 1, 1, v59);
      *v48 = v59;
    }
    v59[2] = v62 + 1;
    v63 = &v59[6 * v62];
    v64 = v166;
    v65 = v167[0];
    *(_OWORD *)((char *)v63 + 57) = *(_OWORD *)((char *)v167 + 9);
    v63[2] = v64;
    v63[3] = v65;
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v174);
  }
  else
  {
    sub_1BA554698((uint64_t)&v172);
  }
  v66 = v30[4];
  v67 = v30[5];
  __swift_project_boxed_opaque_existential_1(v33, v66);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v67 + 64))(&v174, v66, v67);
  v68 = *((_QWORD *)&v175[0] + 1);
  if (*((_QWORD *)&v175[0] + 1))
  {
    v69 = *(_QWORD *)&v175[1];
    __swift_project_boxed_opaque_existential_1(&v174, *((uint64_t *)&v175[0] + 1));
    v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 40))(v68, v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v174);
    if (v70)
    {
      sub_1BACD4E80(v70, (uint64_t)&v168);
      swift_beginAccess();
      v71 = *v48;
      v72 = swift_isUniquelyReferenced_nonNull_native();
      *v48 = v71;
      if ((v72 & 1) == 0)
      {
        v71 = sub_1BB391DA8(0, v71[2] + 1, 1, v71);
        *v48 = v71;
      }
      v74 = v71[2];
      v73 = v71[3];
      if (v74 >= v73 >> 1)
      {
        v71 = sub_1BB391DA8((_QWORD *)(v73 > 1), v74 + 1, 1, v71);
        *v48 = v71;
      }
      v71[2] = v74 + 1;
      v75 = &v71[6 * v74];
      v76 = v168;
      v77 = v169[0];
      *(_OWORD *)((char *)v75 + 57) = *(_OWORD *)((char *)v169 + 9);
      v75[2] = v76;
      v75[3] = v77;
      swift_endAccess();
      swift_release();
      v27 = (_QWORD *)v154;
    }
  }
  else
  {
    sub_1BA554698((uint64_t)&v174);
  }
  sub_1BACD5028((uint64_t)v53, v157, (uint64_t *)&v170);
  swift_beginAccess();
  v78 = *v48;
  v79 = swift_isUniquelyReferenced_nonNull_native();
  *v48 = v78;
  if ((v79 & 1) == 0)
  {
    v78 = sub_1BB391DA8(0, v78[2] + 1, 1, v78);
    *v48 = v78;
  }
  v81 = v78[2];
  v80 = v78[3];
  if (v81 >= v80 >> 1)
  {
    v78 = sub_1BB391DA8((_QWORD *)(v80 > 1), v81 + 1, 1, v78);
    *v48 = v78;
  }
  v78[2] = v81 + 1;
  v82 = &v78[6 * v81];
  v83 = v170;
  v84 = v171[0];
  *(_OWORD *)((char *)v82 + 57) = *(_OWORD *)((char *)v171 + 9);
  v82[2] = v83;
  v82[3] = v84;
  swift_endAccess();
  v85 = v30[4];
  v86 = v30[5];
  __swift_project_boxed_opaque_existential_1(v33, v85);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v86 + 64))(&v174, v85, v86);
  v87 = *((_QWORD *)&v175[0] + 1);
  if (*((_QWORD *)&v175[0] + 1))
  {
    v88 = *(_QWORD *)&v175[1];
    __swift_project_boxed_opaque_existential_1(&v174, *((uint64_t *)&v175[0] + 1));
    v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 32))(v87, v88);
    v90 = v157;
    if (v89)
    {
      v91 = *(_QWORD *)(v89 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v174);
      if (v91 >> 62)
      {
        swift_bridgeObjectRetain();
        v92 = sub_1BB873F30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v92 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v92)
      {
        sub_1BACD5790((uint64_t)v53, (uint64_t)&v172);
        v93 = *(_QWORD *)&v173[0];
        v148 = *((_QWORD *)&v172 + 1);
        v149 = v172;
        v94 = *((_QWORD *)&v173[0] + 1);
        v95 = *(_QWORD *)&v173[1];
        v147 = BYTE8(v173[1]);
        v96 = MEMORY[0x1E0DEA968];
        sub_1BA6A09F0((uint64_t)&v172, (uint64_t)v182, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
        sub_1BA6A09F0((uint64_t)v173, (uint64_t)v181, (unint64_t *)&qword_1ED3B9200, v96);
        v180 = *(_QWORD *)&v173[1];
        v97 = (char *)v27 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection;
        v98 = *(_QWORD *)((char *)v27 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection);
        v99 = *(_QWORD *)((char *)v27
                        + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                        + 8);
        v100 = *(_QWORD *)((char *)v27
                         + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                         + 16);
        v101 = *(_QWORD *)((char *)v27
                         + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection
                         + 24);
        v102 = *((_QWORD *)v97 + 4);
        v103 = v148;
        *(_QWORD *)v97 = v149;
        *((_QWORD *)v97 + 1) = v103;
        *((_QWORD *)v97 + 2) = v93;
        *((_QWORD *)v97 + 3) = v94;
        *((_QWORD *)v97 + 4) = v95;
        v97[40] = v147;
        sub_1BA739BF4((uint64_t)v182);
        sub_1BA739BF4((uint64_t)v181);
        sub_1BA781758((uint64_t)&v180);
        sub_1BACD5FC0(v98, v99, v100, v101, v102);
        swift_beginAccess();
        v104 = *v48;
        v105 = swift_isUniquelyReferenced_nonNull_native();
        *v48 = v104;
        if ((v105 & 1) == 0)
        {
          v104 = sub_1BB391DA8(0, v104[2] + 1, 1, v104);
          *v48 = v104;
        }
        v107 = v104[2];
        v106 = v104[3];
        v27 = (_QWORD *)v154;
        v90 = v157;
        v53 = v158;
        if (v107 >= v106 >> 1)
        {
          v104 = sub_1BB391DA8((_QWORD *)(v106 > 1), v107 + 1, 1, v104);
          *v48 = v104;
        }
        v104[2] = v107 + 1;
        v108 = &v104[6 * v107];
        v109 = v172;
        v110 = v173[0];
        *(_OWORD *)((char *)v108 + 57) = *(_OWORD *)((char *)v173 + 9);
        v108[2] = v109;
        v108[3] = v110;
        swift_endAccess();
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v174);
    }
  }
  else
  {
    sub_1BA554698((uint64_t)&v174);
    v90 = v157;
  }
  v111 = sub_1BACD0EE8(v53);
  swift_beginAccess();
  sub_1BB3861CC(v111);
  swift_endAccess();
  sub_1BACD5924(v53, &v174);
  swift_beginAccess();
  v112 = *v48;
  v113 = swift_isUniquelyReferenced_nonNull_native();
  *v48 = v112;
  if ((v113 & 1) == 0)
  {
    v112 = sub_1BB391DA8(0, v112[2] + 1, 1, v112);
    *v48 = v112;
  }
  v115 = v112[2];
  v114 = v112[3];
  if (v115 >= v114 >> 1)
  {
    v112 = sub_1BB391DA8((_QWORD *)(v114 > 1), v115 + 1, 1, v112);
    *v48 = v112;
  }
  v112[2] = v115 + 1;
  v116 = &v112[6 * v115];
  v117 = v174;
  v118 = v175[0];
  *(_OWORD *)((char *)v116 + 57) = *(_OWORD *)((char *)v175 + 9);
  v116[2] = v117;
  v116[3] = v118;
  swift_endAccess();
  v119 = v159;
  sub_1BA4C2DD8(v90, v159, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(v155);
    sub_1BACD5E78(v156);
    sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
    sub_1BA4A2E80((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
    sub_1BACD5EAC();

    v121 = (_BYTE *)v119;
  }
  else
  {
    sub_1BACD5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v122 = v153;
    sub_1BA5193C4(v119, (uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v123 = v122[4];
    v124 = v122[5];
    __swift_project_boxed_opaque_existential_1(v122 + 1, v123);
    v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 16))(v123, v124);
    MEMORY[0x1E0C80A78](v125);
    *(_QWORD *)&v146[-16] = v90;
    sub_1BAC9C7BC((uint64_t (*)(char *))sub_1BACD5F94, (uint64_t)&v146[-32], v126);
    v128 = v127;
    v129 = *(_QWORD *)(v127 + 16);
    if (v129)
    {
      v162 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1BA7447E8(0, v129, 0);
      v130 = *(unsigned __int8 *)(v150 + 80);
      v152 = v128;
      v131 = v128 + ((v130 + 32) & ~v130);
      v159 = *(_QWORD *)(v150 + 72);
      v132 = v162;
      do
      {
        v133 = v160;
        sub_1BA4C2DD8(v131, (uint64_t)v160, type metadata accessor for FeedItem);
        FeedItem.debugIdentifier.getter();
        v135 = v134;
        v137 = v136;
        sub_1BA4A2E80((uint64_t)v133, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7447E8(0, v132[2] + 1, 1);
          v132 = v162;
        }
        v139 = v132[2];
        v138 = v132[3];
        if (v139 >= v138 >> 1)
        {
          sub_1BA7447E8(v138 > 1, v139 + 1, 1);
          v132 = v162;
        }
        v132[2] = v139 + 1;
        v140 = &v132[2 * v139];
        v140[4] = v135;
        v140[5] = v137;
        v131 += v159;
        --v129;
      }
      while (v129);
      swift_bridgeObjectRelease();
      v90 = v157;
    }
    else
    {
      swift_bridgeObjectRelease();
      v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_beginAccess();
    v141 = v132[2];
    if (v141)
    {
      v142 = v132 + 5;
      do
      {
        v144 = *(v142 - 1);
        v143 = *v142;
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(v161, v144, v143);
        swift_bridgeObjectRelease();
        v142 += 2;
        --v141;
      }
      while (v141);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1(v155);
    sub_1BACD5E78(v156);
    sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
    sub_1BA4A2E80((uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
    v121 = v153;
    v27 = (_QWORD *)v154;
  }
  sub_1BA4A2E80((uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  return v27;
}

uint64_t sub_1BACD0EE8(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t (*v40)();
  char *v41;
  char *v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v78;
  void (*v79)(uint64_t, uint64_t);
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  _BYTE v97[40];
  uint64_t v98;
  __int128 v99;
  __int128 v100;

  v94 = type metadata accessor for DebugInspectViewItem();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v3 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v78 - v5;
  v7 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1BB86DA68();
  v90 = *(_QWORD **)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v86 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86D678();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1BB86D660();
  v81 = *(_QWORD *)(v82 - 8);
  v15 = MEMORY[0x1E0C80A78](v82);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v12 + 104))(v14, *MEMORY[0x1E0DB5D88], v11, v15);
  v18 = type metadata accessor for DebugGroupLayoutKey();
  v92 = (uint64_t)a1 + *(int *)(v18 + 28);
  sub_1BB86D66C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v91 += OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_inventory;
  v85 = v17;
  sub_1BB86D624();
  v19 = *(int *)(v18 + 24);
  v80 = a1;
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = v20[4];
  v22 = v20[5];
  v88 = v20;
  __swift_project_boxed_opaque_existential_1(v20 + 1, v21);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v22 + 32))(&v99, v21, v22);
  v23 = v99;
  v95 = v99;
  v96 = v100;
  v24 = v86;
  v25 = GroupLayoutInventory.layouts(column:kind:)(v86, (uint64_t *)&v95);
  sub_1BA6A32E0(v23);
  v26 = v24;
  v27 = v84;
  v79 = (void (*)(uint64_t, uint64_t))v90[1];
  v79(v24, v84);
  v28 = *(_QWORD *)(v25 + 16);
  v83 = v25;
  if (v28)
  {
    v29 = (_QWORD *)(v25 + 32);
    swift_bridgeObjectRetain();
    v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v91 = MEMORY[0x1E0DEE9D8];
    do
    {
      v31 = v29[3];
      v32 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v31);
      sub_1BA7C16E0(v92, v31, v32);
      sub_1BA4C010C((uint64_t)v29, (uint64_t)&v99);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v33 = v30;
      else
        v33 = sub_1BB392048(0, v30[2] + 1, 1, v30);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_1BB392048((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v30 = v33;
      sub_1BA4CECCC(&v99, (uint64_t)&v33[5 * v35 + 4]);
      v29 += 5;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    v27 = v84;
    v26 = v86;
    v36 = v30;
  }
  else
  {
    v91 = MEMORY[0x1E0DEE9D8];
    v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v37 = v36[2];
  v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v37)
  {
    v39 = v36 + 4;
    v78 = v36;
    swift_bridgeObjectRetain();
    v40 = type metadata accessor for GroupLayoutBindingContext;
    v90 = v38;
    v89 = v38;
    v87 = v9;
    do
    {
      v41 = v6;
      v42 = v3;
      sub_1BA4C2DD8((uint64_t)v88, (uint64_t)v9, (uint64_t (*)(_QWORD))v40);
      v43 = v40;
      v44 = v39[3];
      v45 = v39[4];
      __swift_project_boxed_opaque_existential_1(v39, v44);
      (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v45 + 48))(&v99, v9, v92, v44, v45);
      sub_1BA4C010C((uint64_t)&v99, (uint64_t)&v95);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v40 = v43;
        v9 = v87;
        v3 = v42;
        v46 = v89;
      }
      else
      {
        v46 = sub_1BA7C2A14(0, v89[2] + 1, 1, v89);
        v40 = v43;
        v9 = v87;
        v3 = v42;
      }
      v48 = v46[2];
      v47 = v46[3];
      v6 = v41;
      if (v48 >= v47 >> 1)
        v46 = sub_1BA7C2A14((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
      v46[2] = v48 + 1;
      v89 = v46;
      sub_1BA4CECCC(&v95, (uint64_t)&v46[5 * v48 + 4]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))v40);
      v39 += 5;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    v27 = v84;
    v26 = v86;
  }
  else
  {
    v90 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1ED3B8000);
  v49 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C22B0, (uint64_t)&type metadata for DebugInspectViewSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_1BB87CE70;
  v50 = v85;
  sub_1BB86D624();
  sub_1BA4A2870(&qword_1EF2B2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6248], MEMORY[0x1E0DB6258]);
  *(_QWORD *)&v99 = sub_1BB87420C();
  *((_QWORD *)&v99 + 1) = v51;
  v79(v26, v27);
  sub_1BB872AFC(v52);
  v53 = *(_QWORD *)(v83 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v95 = v53;
  sub_1BB87420C();
  sub_1BB872AFC(v54);
  swift_bridgeObjectRelease();
  v56 = sub_1BB872AFC(v55);
  v88 = (_QWORD *)*((_QWORD *)&v99 + 1);
  v89 = (_QWORD *)v99;
  MEMORY[0x1E0C80A78](v56);
  *(&v78 - 2) = v80;
  v57 = sub_1BA8A2EC8((uint64_t)sub_1BACD6018, (uint64_t)(&v78 - 4), v49);
  swift_bridgeObjectRelease();
  v58 = *(_QWORD *)(v91 + 16);
  if (v58)
  {
    v87 = (char *)v57;
    v98 = MEMORY[0x1E0DEE9D8];
    v59 = v91;
    sub_1BAC7AC60(0, v58, 0);
    v60 = v59 + 32;
    do
    {
      sub_1BA4C2DD8(v60, (uint64_t)&v99, (uint64_t (*)(_QWORD))sub_1BACD6034);
      sub_1BA4C010C((uint64_t)&v99, (uint64_t)&v95);
      sub_1BA4CECCC(&v95, (uint64_t)v97);
      sub_1BA4C010C((uint64_t)v97, (uint64_t)v6);
      *(_QWORD *)&v95 = 0;
      *((_QWORD *)&v95 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v95 = 0xD000000000000026;
      *((_QWORD *)&v95 + 1) = 0x80000001BB9711E0;
      sub_1BB872AFC((_QWORD *)0xD000000000000026);
      swift_bridgeObjectRelease();
      v61 = v95;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      *(_OWORD *)(v6 + 40) = v61;
      v6[56] = 2;
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80((uint64_t)&v99, (uint64_t (*)(_QWORD))sub_1BACD6034);
      v62 = v98;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AC60(0, *(_QWORD *)(v62 + 16) + 1, 1);
        v62 = v98;
      }
      v64 = *(_QWORD *)(v62 + 16);
      v63 = *(_QWORD *)(v62 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_1BAC7AC60(v63 > 1, v64 + 1, 1);
        v62 = v98;
      }
      *(_QWORD *)(v62 + 16) = v64 + 1;
      sub_1BA5193C4((uint64_t)v6, v62+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(_QWORD *)(v93 + 72) * v64, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      v60 += 56;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    v50 = v85;
    v57 = (uint64_t)v87;
  }
  else
  {
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v99 = v57;
  sub_1BB3861B8(v62);
  v65 = v99;
  v66 = v90[2];
  if (v66)
  {
    v91 = v99;
    v98 = MEMORY[0x1E0DEE9D8];
    v67 = v90;
    sub_1BAC7AC60(0, v66, 0);
    v68 = (uint64_t)(v67 + 4);
    do
    {
      sub_1BA4C2DD8(v68, (uint64_t)&v99, (uint64_t (*)(_QWORD))sub_1BACD6034);
      sub_1BA4C010C((uint64_t)&v99, (uint64_t)&v95);
      sub_1BA4CECCC(&v95, (uint64_t)v97);
      sub_1BA4C010C((uint64_t)v97, (uint64_t)v3);
      *(_QWORD *)&v95 = 0;
      *((_QWORD *)&v95 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v95 = 0xD000000000000020;
      *((_QWORD *)&v95 + 1) = 0x80000001BB971210;
      sub_1BB872AFC((_QWORD *)0xD000000000000020);
      swift_bridgeObjectRelease();
      v70 = *((_QWORD *)&v95 + 1);
      v69 = v95;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      *((_QWORD *)v3 + 5) = v69;
      *((_QWORD *)v3 + 6) = v70;
      v3[56] = 2;
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80((uint64_t)&v99, (uint64_t (*)(_QWORD))sub_1BACD6034);
      v71 = v98;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AC60(0, *(_QWORD *)(v71 + 16) + 1, 1);
        v71 = v98;
      }
      v73 = *(_QWORD *)(v71 + 16);
      v72 = *(_QWORD *)(v71 + 24);
      if (v73 >= v72 >> 1)
      {
        sub_1BAC7AC60(v72 > 1, v73 + 1, 1);
        v71 = v98;
      }
      *(_QWORD *)(v71 + 16) = v73 + 1;
      sub_1BA5193C4((uint64_t)v3, v71+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(_QWORD *)(v93 + 72) * v73, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      v68 += 56;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease();
    v50 = v85;
    v65 = v91;
  }
  else
  {
    swift_bridgeObjectRelease();
    v71 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v99 = v65;
  sub_1BB3861B8(v71);
  v74 = v99;
  v75 = v92;
  v76 = (uint64_t)v88;
  *(_QWORD *)(v92 + 32) = v89;
  *(_QWORD *)(v75 + 40) = v76;
  *(_QWORD *)(v75 + 48) = 0xD000000000000075;
  *(_QWORD *)(v75 + 56) = 0x80000001BB971240;
  *(_QWORD *)(v75 + 64) = v74;
  *(_BYTE *)(v75 + 72) = 6;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v82);
  return v75;
}

id *sub_1BACD1D3C()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BACD5FC0(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 8), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 16), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 24), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 32));
  sub_1BACD5E78((uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_inventory);
  swift_release();
  return v0;
}

uint64_t sub_1BACD1E18()
{
  sub_1BACD1D3C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BACD1E3C()
{
  return type metadata accessor for DebugInspectViewDataSource();
}

uint64_t type metadata accessor for DebugInspectViewDataSource()
{
  uint64_t result;

  result = qword_1EF2B2108;
  if (!qword_1EF2B2108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BACD1E80()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugGroupLayoutKey();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_1BACD1F40(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(id))
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  id v16;
  id v17;
  uint64_t v18;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v9 = sub_1BB86DEE8();
    v11 = v10;
    if (a1)
      v12 = a1;
    else
      v12 = *(id *)(v8 + 48);
    v13 = (uint64_t *)(v8 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_feedItemImages);
    swift_beginAccess();
    v14 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v13;
    *v13 = 0x8000000000000000;
    sub_1BB4BF834((uint64_t)v12, v9, v11, isUniquelyReferenced_nonNull_native);
    *v13 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v16 = v14;
    if (!a1)
      v16 = *(id *)(v8 + 48);
    v17 = v14;
    a4(v16);

    return swift_release();
  }
  return result;
}

uint64_t sub_1BACD20A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v6[2];

  sub_1BA4AD288(0, &qword_1EF2B2220, (uint64_t)&type metadata for GroupLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1BA4C010C(a2, (uint64_t)v6);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  sub_1BA4CECCC(v6, v4 + 24);
  swift_retain();
  return sub_1BB86E998();
}

uint64_t sub_1BACD2150@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  v23 = a2;
  v22 = a3;
  v4 = sub_1BB86D8A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key;
  v12 = type metadata accessor for DebugGroupLayoutKey();
  v13 = v11 + *(int *)(v12 + 24);
  sub_1BA4C010C(v13 + 8, (uint64_t)v25);
  v14 = *(_QWORD *)(v13 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13 + *(int *)(v8 + 52), v4);
  v28 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6A4D08(v25, v14, 0, (uint64_t)v7, &v28, v15, (uint64_t)v10);
  v16 = v23[3];
  v17 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v16);
  v18 = v24;
  (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v17 + 48))(v25, v10, v11 + *(int *)(v12 + 28), v16, v17);
  if (v18)
    return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v20 = v26;
  v21 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1BACD2328@<X0>(__int128 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD aBlock[6];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v22 = a3;
  v5 = sub_1BB87387C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[2];
  v10 = *a1;
  v25 = a1[1];
  v26 = v9;
  v24 = v10;
  v27 = *((_QWORD *)a1 + 6);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, *((double *)&v25 + 1), *(double *)&v9);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  v13 = a1[1];
  *(_OWORD *)(v12 + 24) = *a1;
  *(_OWORD *)(v12 + 40) = v13;
  *(_OWORD *)(v12 + 56) = a1[2];
  *(_QWORD *)(v12 + 72) = *((_QWORD *)a1 + 6);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BACD617C;
  *(_QWORD *)(v14 + 24) = v12;
  aBlock[4] = sub_1BACD6700;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA56DAFC;
  aBlock[3] = &block_descriptor_13_0;
  v15 = _Block_copy(aBlock);
  v16 = a2;
  sub_1BA6A5B0C((uint64_t)&v24);
  swift_retain();
  swift_release();
  v17 = objc_msgSend(v11, sel_imageWithActions_, v15);
  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DBCEE0], v5);
    v20 = sub_1BB873810();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    result = swift_release();
    *v22 = v20;
  }
  return result;
}

uint64_t sub_1BACD2578(void *a1, id a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t result;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;

  objc_msgSend(a2, sel_setFill);
  v5 = *(_QWORD *)(a3 + 40);
  v8 = *(_QWORD *)(v5 + 64);
  v7 = v5 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(*(_QWORD *)(a3 + 40) + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v12 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v11 &= v11 - 1;
      goto LABEL_5;
    }
    v15 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v12)
      return swift_release();
    v16 = *(_QWORD *)(v7 + 8 * v15);
    ++v14;
    if (!v16)
    {
      v14 = v15 + 1;
      if (v15 + 1 >= v12)
        return swift_release();
      v16 = *(_QWORD *)(v7 + 8 * v14);
      if (!v16)
      {
        v14 = v15 + 2;
        if (v15 + 2 >= v12)
          return swift_release();
        v16 = *(_QWORD *)(v7 + 8 * v14);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
LABEL_5:
    swift_retain();
    swift_bridgeObjectRetain();
    FeedItemLayoutAttributes.frame.getter();
    objc_msgSend(a1, sel_fillRect_);
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    return swift_release();
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
    v14 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v14 >= v12)
      return swift_release();
    v16 = *(_QWORD *)(v7 + 8 * v14);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BACD2720(void **a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(id))
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v6 = *a1;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  v7 = sub_1BB86DEE8();
  v9 = v8;
  v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_layoutImages);
  swift_beginAccess();
  v11 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v10;
  *v10 = 0x8000000000000000;
  sub_1BB4BF834((uint64_t)v11, v7, v9, isUniquelyReferenced_nonNull_native);
  *v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return a4(v11);
}

uint64_t sub_1BACD2820()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v0 = (id)qword_1EF3D0928;
  v1 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to layout thumbnail! Error: %@", 37, 2, &dword_1BA493000, v0, v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BACD296C(uint64_t a1)
{
  return sub_1BB0B6A68(a1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key);
}

uint64_t sub_1BACD29A8(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t (*v58)(uint64_t);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  id *v70;
  uint64_t *v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  int64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  unint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[3];
  _BYTE v102[16];
  __int128 v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;

  v98 = type metadata accessor for FeedItem(0);
  v11 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DebugInspectViewItem();
  v99 = *(_QWORD *)(v14 - 8);
  v100 = v14;
  MEMORY[0x1E0C80A78](v14);
  v88 = (uint64_t *)((char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v87 - v17);
  v97 = *a1;
  if (!*(_QWORD *)(v97 + 16))
  {
    swift_beginAccess();
    sub_1BAA679B4(a3, (uint64_t)&v103);
    swift_endAccess();
    v28 = MEMORY[0x1E0DEA968];
    sub_1BA6A09F0((uint64_t)&v103, (uint64_t)v101, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
    sub_1BA73D624((uint64_t)v101);
    sub_1BA6A09F0((uint64_t)&v104, (uint64_t)v102, (unint64_t *)&qword_1ED3B9200, v28);
    sub_1BA73D624((uint64_t)v102);
    v108 = v106;
    sub_1BA4F6CCC((uint64_t)&v108);
    return a4(MEMORY[0x1E0DEE9D8]);
  }
  v87 = v11;
  v90 = a1[1];
  *((_QWORD *)&v96 + 1) = a1[2];
  v89 = a2;
  v19 = (uint64_t)a2 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_key;
  v20 = (_QWORD *)(v19 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v21 = v20[4];
  v22 = v20[5];
  __swift_project_boxed_opaque_existential_1(v20 + 1, v21);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v22 + 64))(&v103, v21, v22);
  v23 = v105;
  v92 = a4;
  v93 = a3;
  v94 = a5;
  v91 = v5;
  if (v105)
  {
    v24 = v106;
    __swift_project_boxed_opaque_existential_1(&v103, v105);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 32);
      swift_bridgeObjectRetain();
      swift_release();
      v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
      goto LABEL_9;
    }
    v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
  }
  else
  {
    v27 = sub_1BA554698((uint64_t)&v103);
  }
  v26 = MEMORY[0x1E0DEE9E8];
LABEL_9:
  MEMORY[0x1E0C80A78](v27);
  *(&v87 - 2) = v26;
  v30 = v97;
  *((_QWORD *)&v95 + 1) = sub_1BB872DD8();
  *(_QWORD *)&v103 = 0;
  *((_QWORD *)&v103 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v103 = 0xD000000000000011;
  *((_QWORD *)&v103 + 1) = 0x80000001BB9713C0;
  v101[0] = *(_QWORD *)(v30 + 16);
  v31 = v101[0];
  sub_1BB87420C();
  sub_1BB872AFC(v32);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v33);
  v101[0] = *((_QWORD *)&v96 + 1);
  sub_1BB87420C();
  sub_1BB872AFC(v34);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v35);
  v96 = v103;
  *(_QWORD *)&v103 = 0;
  *((_QWORD *)&v103 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC("Candidate Items (");
  v101[0] = *((_QWORD *)&v95 + 1);
  sub_1BB87420C();
  sub_1BB872AFC(v36);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("g the feed group, deduplicated ");
  v37 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  v101[0] = v37;
  sub_1BB87420C();
  sub_1BB872AFC(v38);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v39);
  v95 = v103;
  v40 = MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    *(_QWORD *)&v103 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AC60(0, v31, 0);
    v41 = v30 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    v42 = *(_QWORD *)(v87 + 72);
    do
    {
      sub_1BA4C2DD8(v41, (uint64_t)v13, type metadata accessor for FeedItem);
      v18[3] = v98;
      v18[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3BA6F0, type metadata accessor for FeedItem, (uint64_t)&protocol conformance descriptor for FeedItem);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v18);
      sub_1BA4C2DD8((uint64_t)v13, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedItem);
      v40 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AC60(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v103;
      }
      v45 = *(_QWORD *)(v40 + 16);
      v44 = *(_QWORD *)(v40 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_1BAC7AC60(v44 > 1, v45 + 1, 1);
        v40 = v103;
      }
      *(_QWORD *)(v40 + 16) = v45 + 1;
      sub_1BA5193C4((uint64_t)v18, v40+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(_QWORD *)(v99 + 72) * v45, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      v41 += v42;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  v46 = v89;
  v47 = (char *)v89 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection;
  v49 = *(uint64_t *)((char *)v89 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection);
  v48 = *(uint64_t *)((char *)v89 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 8);
  v50 = *(uint64_t *)((char *)v89 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 16);
  v51 = *(uint64_t *)((char *)v89 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 24);
  v52 = *(uint64_t *)((char *)v89 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection + 32);
  v53 = *((_QWORD *)&v96 + 1);
  *(_QWORD *)v47 = v96;
  *((_QWORD *)v47 + 1) = v53;
  v54 = *((_QWORD *)&v95 + 1);
  *((_QWORD *)v47 + 2) = v95;
  *((_QWORD *)v47 + 3) = v54;
  *((_QWORD *)v47 + 4) = v40;
  v47[40] = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BACD5FC0(v49, v48, v50, v51, v52);
  v55 = (uint64_t *)((char *)v46 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v56 = (_QWORD *)*v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  *v55 = (uint64_t)v56;
  v57 = v93;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BAA67EB0(v56);
    v56 = (_QWORD *)result;
    *v55 = result;
  }
  v58 = v92;
  if ((v57 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v56[2] <= v57)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v89 = v55;
  v59 = &v56[6 * v57];
  v60 = *((_QWORD *)&v96 + 1);
  v59[4] = v96;
  v59[5] = v60;
  v61 = *((_QWORD *)&v95 + 1);
  v59[6] = v95;
  v59[7] = v61;
  v59[8] = v40;
  *((_BYTE *)v59 + 72) = 0;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = v90;
  v64 = v97;
  if (!*(_QWORD *)(v90 + 16))
    return v62(v64);
  *(_QWORD *)&v103 = 0;
  *((_QWORD *)&v103 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v103 = 0xD000000000000018;
  *((_QWORD *)&v103 + 1) = 0x80000001BB971450;
  v101[0] = *(_QWORD *)(v63 + 16);
  v65 = v101[0];
  sub_1BB87420C();
  sub_1BB872AFC(v66);
  swift_bridgeObjectRelease();
  result = (uint64_t)sub_1BB872AFC(v67);
  *(_QWORD *)&v96 = *((_QWORD *)&v103 + 1);
  *((_QWORD *)&v96 + 1) = v103;
  v68 = MEMORY[0x1E0DEE9D8];
  if (v65)
  {
    *(_QWORD *)&v103 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v98 = v65;
    sub_1BAC7AC60(0, v65, 0);
    v69 = v103;
    v70 = (id *)(v63 + 48);
    v71 = v88;
    do
    {
      v72 = *(v70 - 2);
      v73 = *(v70 - 1);
      v74 = *v70;
      swift_unknownObjectRetain();
      v75 = v73;
      v76 = v74;
      swift_unknownObjectRetain();
      v77 = v75;
      v78 = objc_msgSend(v72, sel_itemID);
      v79 = sub_1BB8729A0();
      v81 = v80;

      swift_unknownObjectRelease();
      *v71 = v79;
      v71[1] = v81;
      objc_msgSend(v77, sel_sortingScore);
      v71[5] = MEMORY[0x1E0DEB070];
      v71[6] = MEMORY[0x1E0DEB0E0];
      v71[2] = v82;
      swift_storeEnumTagMultiPayload();

      swift_unknownObjectRelease();
      *(_QWORD *)&v103 = v69;
      v84 = *(_QWORD *)(v69 + 16);
      v83 = *(_QWORD *)(v69 + 24);
      if (v84 >= v83 >> 1)
      {
        sub_1BAC7AC60(v83 > 1, v84 + 1, 1);
        v69 = v103;
      }
      v70 += 3;
      *(_QWORD *)(v69 + 16) = v84 + 1;
      sub_1BA5193C4((uint64_t)v71, v69+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(_QWORD *)(v99 + 72) * v84, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      --v98;
    }
    while (v98);
    v68 = v69;
    result = swift_bridgeObjectRelease();
    v62 = v92;
    v57 = v93;
    v64 = v97;
  }
  v85 = v57 + 1;
  v86 = v89;
  if (__OFADD__(v57, 1))
    goto LABEL_35;
  result = swift_beginAccess();
  if (*(_QWORD *)(*v86 + 16) < v85)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if ((v85 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)&v103 = *((_QWORD *)&v96 + 1);
    *((_QWORD *)&v103 + 1) = v96;
    v104 = 0xD000000000000047;
    v105 = 0x80000001BB971470;
    v106 = v68;
    v107 = 1;
    sub_1BAA68300(v57 + 1, v57 + 1, &v103);
    swift_endAccess();
    return v62(v64);
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BACD33C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  FeedItem.debugIdentifier.getter();
  LOBYTE(a2) = sub_1BA761FE4(v3, v4, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1BACD3404(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  _QWORD v13[2];
  _QWORD v14[4];
  uint64_t v15;
  _BYTE v16[16];

  if (qword_1EF2A7360 != -1)
    swift_once();
  v7 = (id)qword_1EF3D0928;
  v8 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  v12[0] = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to fetch headlines for scored feed items, error=%@", 57, 2, &dword_1BA493000, v7, v8, v9, v12[0]);

  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1BAA679B4(a3, (uint64_t)v13);
  swift_endAccess();
  sub_1BA6A09F0((uint64_t)v13, (uint64_t)v12, (unint64_t *)&qword_1ED3B9200, v10);
  sub_1BA73D624((uint64_t)v12);
  sub_1BA6A09F0((uint64_t)v14, (uint64_t)v16, (unint64_t *)&qword_1ED3B9200, v10);
  sub_1BA73D624((uint64_t)v16);
  v15 = v14[2];
  sub_1BA4F6CCC((uint64_t)&v15);
  return a4(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1BACD360C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;

  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  v8 = a2[5];
  v9 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v8);
  v18 = v6;
  LOBYTE(v19) = v7;
  v10 = type metadata accessor for DebugGroupLayoutKey();
  sub_1BA969550(&v18, (uint64_t)a2 + *(int *)(v10 + 28), v8, v9);
  v18 = v6;
  LOBYTE(v19) = v7;
  sub_1BB4F4FEC();
  v12 = v11;
  v14 = v13;
  if (v3)
  {
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();

    v16 = v18;
    v15 = v19;
  }
  else
  {
    v15 = 0xE500000000000000;
    v16 = 0x64696C6156;
  }
  *(_QWORD *)a3 = v12;
  *(_QWORD *)(a3 + 8) = v14;
  *(_QWORD *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v15;
  *(_BYTE *)(a3 + 32) = v3 != 0;
  type metadata accessor for DebugInspectViewItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BACD3770(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v1 = (_QWORD *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v2 = v1[4];
  v3 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 64))(v11, v2, v3);
  v4 = v12;
  if (!v12)
  {
    sub_1BA554698((uint64_t)v11);
    return MEMORY[0x1E0DEE9D8];
  }
  v5 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return MEMORY[0x1E0DEE9D8];
  }
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  type metadata accessor for DebugInspectViewItem();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  swift_storeEnumTagMultiPayload();
  return v9;
}

void sub_1BACD3904(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24) + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_1BB86DEE8();
  if (*(_QWORD *)(v3 + 16))
    sub_1BA6E35A8(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BA7C0D48(v8, v9);
  __asm { BR              X10 }
}

uint64_t sub_1BACD3A18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  sub_1BB87420C();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  *(_QWORD *)(v1 + 40) = v6;
  *(_QWORD *)(v1 + 48) = v7;
  *(_BYTE *)(v1 + 56) = 0;
  type metadata accessor for DebugInspectViewItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BACD3AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  char v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[40];

  v43 = a2;
  v44 = a3;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39C230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - v6;
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, v4);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  v11 = type metadata accessor for FeedItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - v16;
  v18 = type metadata accessor for DebugInspectViewItem();
  MEMORY[0x1E0C80A78](v18);
  v20 = (__int128 *)((char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(a1, (uint64_t)v20, v21);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
    return 0;
  }
  v42 = v14;
  v22 = v44;
  sub_1BA4CECCC(v20, (uint64_t)v49);
  sub_1BA4C010C((uint64_t)v49, (uint64_t)&v47);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
  v23 = swift_dynamicCast();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v23 & 1) == 0)
  {
    v24(v10, 1, 1, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    sub_1BA5C699C((uint64_t)v10, &qword_1ED3B2A50, type metadata accessor for FeedItem);
    return 0;
  }
  v24(v10, 0, 1, v11);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v17, type metadata accessor for FeedItem);
  FeedItem.headline.getter();
  if (!v25
    || (v26 = objc_msgSend(v25, sel_title), swift_unknownObjectRelease(), !v26))
  {
    v33 = (uint64_t)v42;
    sub_1BA4C2DD8((uint64_t)v17, (uint64_t)v42, type metadata accessor for FeedItem);
    goto LABEL_11;
  }
  v27 = sub_1BB8729A0();
  v29 = v28;

  v47 = v27;
  v48 = v29;
  v45 = v43;
  v46 = v22;
  v30 = sub_1BB86C9DC();
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v7, 1, 1, v30);
  sub_1BA7114A0();
  sub_1BB873B28();
  LOBYTE(v27) = v32;
  sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED39C230, v31);
  swift_bridgeObjectRelease();
  v33 = (uint64_t)v42;
  sub_1BA4C2DD8((uint64_t)v17, (uint64_t)v42, type metadata accessor for FeedItem);
  if ((v27 & 1) != 0)
  {
LABEL_11:
    FeedItem.identifier.getter();
    v47 = v35;
    v48 = v36;
    v45 = v43;
    v46 = v22;
    v37 = sub_1BB86C9DC();
    v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 1, 1, v37);
    sub_1BA7114A0();
    sub_1BB873B28();
    v34 = (v39 & 1) == 0;
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED39C230, v38);
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v33, type metadata accessor for FeedItem);
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FeedItem);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return v34;
  }
  sub_1BA4A2E80(v33, type metadata accessor for FeedItem);
  sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FeedItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return 1;
}

void sub_1BACD3F78(void *a1, void *a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  uint64_t inited;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;

  if (a2)
  {
    v14 = a2;
    objc_msgSend(v14, sel_setFill);
    objc_msgSend(a1, sel_fillRect_, 0.0, 0.0, a3, a4);

  }
  if (a6)
  {
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
    objc_msgSend(v15, sel_setAlignment_, 1);
    objc_msgSend(a7, sel_pointSize);
    v17 = (a4 - v16) * 0.5;
    objc_msgSend(a7, sel_pointSize);
    v19 = v18;
    v20 = (void *)sub_1BB872970();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
    v22 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
    v23 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(inited + 40) = a8;
    v24 = (void *)*MEMORY[0x1E0DC1178];
    *(_QWORD *)(inited + 64) = v23;
    *(_QWORD *)(inited + 72) = v24;
    v25 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
    *(_QWORD *)(inited + 80) = v15;
    v26 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 104) = v25;
    *(_QWORD *)(inited + 112) = v26;
    *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    *(_QWORD *)(inited + 120) = a7;
    v27 = v22;
    v28 = a8;
    v29 = v24;
    v30 = v15;
    v31 = v26;
    v32 = a7;
    sub_1BA76E82C(inited);
    type metadata accessor for Key(0);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9880, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
    v33 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_drawInRect_withAttributes_, v33, 0.0, v17, a3, v19);

  }
}

uint64_t sub_1BACD41F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  CGRect v22;
  CGRect v23;

  v4 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v9, v10);
  sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BACD5EAC();

LABEL_7:
    v19 = 0;
    goto LABEL_8;
  }
  sub_1BACD5F2C();
  v13 = *(_QWORD *)&v6[*(int *)(v12 + 48) + 40];
  FeedItem.identifier.getter();
  if (!*(_QWORD *)(v13 + 16) || (v16 = sub_1BA6E35A8(v14, v15), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v16);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21[1] = v18;
  FeedItemLayoutAttributes.frame.getter();
  v23.origin.x = 0.0;
  v23.origin.y = 0.0;
  v23.size.width = 0.0;
  v23.size.height = 0.0;
  LODWORD(v18) = CGRectEqualToRect(v22, v23);
  swift_release();
  v19 = v18 ^ 1;
LABEL_8:
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedItem);
  return v19;
}

uint64_t sub_1BACD43D0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t result;
  _QWORD v23[6];

  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a6, a7);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(double *)(v15 + 24) = a6;
  *(double *)(v15 + 32) = a7;
  *(_QWORD *)(v15 + 40) = a2;
  *(_QWORD *)(v15 + 48) = a3;
  *(_QWORD *)(v15 + 56) = a5;
  *(_QWORD *)(v15 + 64) = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BACD6124;
  *(_QWORD *)(v16 + 24) = v15;
  v23[4] = sub_1BA56DB30;
  v23[5] = v16;
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 1107296256;
  v23[2] = sub_1BA56DAFC;
  v23[3] = &block_descriptor_27;
  v17 = _Block_copy(v23);
  swift_bridgeObjectRetain();
  v18 = a5;
  v19 = a4;
  swift_retain();
  v20 = a1;
  swift_release();
  v21 = objc_msgSend(v14, sel_imageWithActions_, v17);

  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v14 & 1) == 0)
    return (uint64_t)v21;
  __break(1u);
  return result;
}

uint64_t sub_1BACD457C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GroupLayoutInventory(a2, a1);
  return a2;
}

uint64_t sub_1BACD45B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  _BYTE v26[48];
  _BYTE v27[48];
  id v28;

  v4 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA4C2DD8(a1, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BACD5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v23 = 0;
    v22 = 0;
    v21 = 0;
    v19 = 0;
    v11 = 0;
    v20 = 0;
    goto LABEL_7;
  }
  sub_1BACD5EAC();
  v28 = *(id *)&v6[*(int *)(v8 + 48)];
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (!swift_dynamicCast())
  {

    goto LABEL_6;
  }
  sub_1BACD60AC((uint64_t)v27, (uint64_t)v26);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugInspectViewItem() - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  v12 = v11 + v10;
  sub_1BA89D600();
  v14 = v13;
  v16 = v15;
  sub_1BA4FD66C();
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v16;
  *(_QWORD *)(v12 + 16) = v17;
  *(_QWORD *)(v12 + 24) = v18;
  *(_BYTE *)(v12 + 32) = 1;
  swift_storeEnumTagMultiPayload();
  sub_1BA89D868((uint64_t)v26);

  v19 = 0x80000001BB971320;
  v20 = 7;
  v21 = 0xD000000000000024;
  v22 = 0xE500000000000000;
  v23 = 0x726F727245;
LABEL_7:
  result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 40) = v20;
  return result;
}

void sub_1BACD47F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  _QWORD v56[3];
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;

  v53 = a3;
  v54 = a2;
  v4 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v4);
  v46 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - v7;
  v9 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v9);
  v49 = (unsigned __int8 *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = type metadata accessor for DebugInspectViewItem();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87D7A0;
  v50 = v18;
  v19 = (_QWORD *)(v18 + v17);
  *v19 = 1701667150;
  v19[1] = 0xE400000000000000;
  v20 = *(_QWORD *)(a1 + 40);
  v52 = a1;
  v45 = (_QWORD *)(a1 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), v20);
  v21 = sub_1BA969388();
  v22 = MEMORY[0x1E0DEA9D8];
  v19[5] = MEMORY[0x1E0DEA968];
  v19[6] = v22;
  v19[2] = v21;
  v19[3] = v23;
  v51 = v14;
  swift_storeEnumTagMultiPayload();
  v48 = v16;
  v24 = (_QWORD *)((char *)v19 + v16);
  *v24 = 1701869908;
  v24[1] = 0xE400000000000000;
  sub_1BA4C2DD8(v54, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  v47 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BACD5EAC();

  }
  else
  {
    sub_1BACD5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4C010C((uint64_t)(v13 + 8), (uint64_t)v57);
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v26 = v58;
  v27 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v27 + 32))(v56, v26, v27);
  v28 = v56[0];
  v55[0] = v56[0];
  v55[1] = v56[1];
  v55[2] = v56[2];
  v29 = FeedGroupKind.description.getter();
  v31 = v30;
  sub_1BA6A32E0(v28);
  v32 = MEMORY[0x1E0DEA968];
  v24[5] = MEMORY[0x1E0DEA968];
  v33 = MEMORY[0x1E0DEA9D8];
  v24[6] = MEMORY[0x1E0DEA9D8];
  v24[2] = v29;
  v24[3] = v31;
  swift_storeEnumTagMultiPayload();
  v34 = v48;
  v35 = (char *)v19 + 2 * v48;
  strcpy(v35, "Layout order");
  v35[13] = 0;
  *((_WORD *)v35 + 7) = -5120;
  v36 = v46;
  sub_1BA4C2DD8(v54, v46, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BACD5EAC();

  }
  else
  {
    sub_1BACD5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v38 = v49;
  sub_1BA5193C4(v36, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v39 = *v38;
  sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v40 = 0x614C206C61656449;
  if (v39)
    v40 = 0xD000000000000010;
  v41 = 0x80000001BB971300;
  *((_QWORD *)v35 + 5) = v32;
  *((_QWORD *)v35 + 6) = v33;
  if (!v39)
    v41 = 0xEC00000074756F79;
  *((_QWORD *)v35 + 2) = v40;
  *((_QWORD *)v35 + 3) = v41;
  swift_storeEnumTagMultiPayload();
  v42 = (_QWORD *)((char *)v19 + 3 * v34);
  *v42 = 0x797469726F697250;
  v42[1] = 0xE800000000000000;
  v43 = *(_QWORD *)(v52 + 40);
  v44 = *(_QWORD *)(v52 + 48);
  __swift_project_boxed_opaque_existential_1(v45, v43);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v44 + 32))(v55, v43, v44);
  __asm { BR              X12 }
}

double sub_1BACD4C48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;

  v0[5] = v1;
  v0[6] = v2;
  v0[2] = 7827276;
  v0[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1(v3 - 128);
  *(_QWORD *)&result = 0x74756F79614CLL;
  v5 = *(_QWORD *)(v3 - 192);
  *(_OWORD *)v5 = xmmword_1BB8AD960;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v3 - 216);
  *(_BYTE *)(v5 + 40) = 5;
  return result;
}

double sub_1BACD4CE0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = *(_QWORD *)(type metadata accessor for DebugInspectViewItem() - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  v8 = (_QWORD *)(v7 + v6);
  *v8 = 1701667150;
  v8[1] = 0xE400000000000000;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = MEMORY[0x1E0DEA9D8];
  v8[5] = MEMORY[0x1E0DEA968];
  v8[6] = v12;
  v8[2] = v11;
  v8[3] = v13;
  swift_storeEnumTagMultiPayload();
  v14 = (_QWORD *)((char *)v8 + v5);
  *v14 = 0x656C746954;
  v14[1] = 0xE500000000000000;
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  if (v18)
  {
    v14[2] = v17;
    v14[3] = v18;
    v19 = MEMORY[0x1E0DEA9D8];
    v20 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v20 = 0;
    v19 = 0;
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = 0;
  }
  v14[5] = v20;
  v14[6] = v19;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&result = 0x70756F7247;
  *(_OWORD *)a2 = xmmword_1BB8AD970;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = 2;
  return result;
}

double sub_1BACD4E80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double result;
  uint64_t v15;
  unint64_t v16;

  v4 = type metadata accessor for DebugInspectViewItem();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x1E0DEE9D8];
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BACCFDB4(v8);
  swift_bridgeObjectRelease();
  sub_1BB3861B8(v9);
  v10 = *(_QWORD *)(a1 + 48);
  *v7 = 0x74756F79614CLL;
  v7[1] = 0xE600000000000000;
  v7[2] = v10;
  swift_storeEnumTagMultiPayload();
  v11 = v16;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_1BB391C44(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
  v13 = *(_QWORD *)(v11 + 16);
  v12 = *(_QWORD *)(v11 + 24);
  if (v13 >= v12 >> 1)
    v11 = sub_1BB391C44(v12 > 1, v13 + 1, 1, v11);
  *(_QWORD *)(v11 + 16) = v13 + 1;
  sub_1BA5193C4((uint64_t)v7, v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  *(_QWORD *)&result = 0x74616D726F46;
  *(_OWORD *)a2 = xmmword_1BB8AD980;
  *(_QWORD *)(a2 + 16) = 0xD000000000000071;
  *(_QWORD *)(a2 + 24) = 0x80000001BB971090;
  *(_QWORD *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 40) = 9;
  return result;
}

uint64_t sub_1BACD5028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  CGRect v89;
  CGRect v90;

  v74 = a3;
  v5 = type metadata accessor for DebugInspectViewItem();
  v84 = *(_QWORD *)(v5 - 8);
  v85 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = type metadata accessor for FeedItem(0);
  v75 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v82 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v80 = (char *)&v71 - v10;
  v11 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v71 - v15;
  v17 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v21 = v20 + 1;
  v22 = v20[4];
  v23 = v20[5];
  v76 = v20;
  __swift_project_boxed_opaque_existential_1(v20 + 1, v22);
  v77 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) + 16);
  swift_bridgeObjectRelease();
  v81 = a2;
  sub_1BA4C2DD8(a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BACD5EAC();

  }
  else
  {
    sub_1BACD5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1BA5193C4((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v25 = GroupLayoutBindingContext.count.getter();
  result = sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v27 = (uint64_t)v80;
  if (__OFSUB__(v77, v25))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v72 = v77 - v25;
  v73 = v21;
  v28 = v76[4];
  v29 = v76[5];
  __swift_project_boxed_opaque_existential_1(v21, v28);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v32 = 0;
    v33 = *(unsigned __int8 *)(v75 + 80);
    v71 = v30;
    v34 = v30 + ((v33 + 32) & ~v33);
    v35 = *(_QWORD *)(v75 + 72);
    v79 = v35;
    while (1)
    {
      sub_1BA4C2DD8(v34, v27, type metadata accessor for FeedItem);
      sub_1BA4C2DD8(v81, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewResult);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BACD5EAC();

        v37 = 0;
      }
      else
      {
        sub_1BACD5F2C();
        v39 = *(_QWORD *)&v13[*(int *)(v38 + 48) + 40];
        FeedItem.identifier.getter();
        if (*(_QWORD *)(v39 + 16) && (v42 = sub_1BA6E35A8(v40, v41), (v43 & 1) != 0))
        {
          v44 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v42);
          v78 = v44 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87 = v44;
          FeedItemLayoutAttributes.frame.getter();
          v90.origin.x = 0.0;
          v90.origin.y = 0.0;
          v90.size.width = 0.0;
          v90.size.height = 0.0;
          LODWORD(v44) = CGRectEqualToRect(v89, v90);
          swift_release();
          v37 = v44 ^ 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v37 = 0;
        }
        v35 = v79;
        v27 = (uint64_t)v80;
      }
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      result = sub_1BA4A2E80(v27, type metadata accessor for FeedItem);
      v45 = __OFADD__(v32, v37);
      v32 += v37;
      if (v45)
        break;
      v34 += v35;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  v32 = 0;
LABEL_18:
  v87 = 0x2820736D657449;
  v88 = 0xE700000000000000;
  v46 = v77;
  v86 = v77;
  sub_1BB87420C();
  sub_1BB872AFC(v47);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v48);
  v49 = v87;
  v50 = (char *)v88;
  v87 = 0;
  v88 = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC(" layouts are matched.");
  v86 = v72;
  sub_1BB87420C();
  sub_1BB872AFC(v51);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v52);
  v86 = v46;
  sub_1BB87420C();
  sub_1BB872AFC(v53);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("Attempted to use ");
  v86 = v32;
  sub_1BB87420C();
  sub_1BB872AFC(v54);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v55);
  v56 = v87;
  v57 = v88;
  v58 = v76[4];
  v59 = v76[5];
  __swift_project_boxed_opaque_existential_1(v73, v58);
  v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
  v61 = *(_QWORD *)(v60 + 16);
  if (v61)
  {
    v78 = v57;
    v79 = v56;
    v80 = v50;
    v81 = v49;
    v87 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AC60(0, v61, 0);
    v62 = *(unsigned __int8 *)(v75 + 80);
    v77 = v60;
    v63 = v60 + ((v62 + 32) & ~v62);
    v64 = *(_QWORD *)(v75 + 72);
    do
    {
      v65 = v82;
      sub_1BA4C2DD8(v63, v82, type metadata accessor for FeedItem);
      v7[3] = v83;
      v7[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3BA6F0, type metadata accessor for FeedItem, (uint64_t)&protocol conformance descriptor for FeedItem);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
      sub_1BA4C2DD8(v65, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80(v65, type metadata accessor for FeedItem);
      v67 = v87;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AC60(0, *(_QWORD *)(v67 + 16) + 1, 1);
        v67 = v87;
      }
      v69 = *(_QWORD *)(v67 + 16);
      v68 = *(_QWORD *)(v67 + 24);
      if (v69 >= v68 >> 1)
      {
        sub_1BAC7AC60(v68 > 1, v69 + 1, 1);
        v67 = v87;
      }
      *(_QWORD *)(v67 + 16) = v69 + 1;
      sub_1BA5193C4((uint64_t)v7, v67+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v69, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      v63 += v64;
      --v61;
    }
    while (v61);
    result = swift_bridgeObjectRelease();
    v50 = v80;
    v49 = v81;
    v57 = v78;
    v56 = v79;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v67 = MEMORY[0x1E0DEE9D8];
  }
  v70 = v74;
  *v74 = v49;
  v70[1] = (uint64_t)v50;
  v70[2] = v56;
  v70[3] = v57;
  v70[4] = v67;
  *((_BYTE *)v70 + 40) = 4;
  return result;
}

double sub_1BACD5790@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  double result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_1BACD3770(a1);
  v5 = (_QWORD *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v6 = v5[4];
  v7 = v5[5];
  __swift_project_boxed_opaque_existential_1(v5 + 1, v6);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 64))(&v15, v6, v7);
  v8 = v17;
  if (v17)
  {
    v9 = v18;
    __swift_project_boxed_opaque_existential_1(&v15, v17);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9))
    {
      swift_bridgeObjectRetain();
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
  }
  else
  {
    sub_1BA554698((uint64_t)&v15);
  }
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC("everal subgroups.");
  swift_bridgeObjectRelease();
  sub_1BB87420C();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v11);
  v12 = v15;
  v13 = v16;
  result = 3.98475595e252;
  *(_OWORD *)a2 = xmmword_1BB8AD990;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v4;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1BACD5924@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  _QWORD v51[7];
  char v52;
  void *v53;
  char v54;

  v50 = a2;
  v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v3);
  v46 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugInspectViewItem();
  v6 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  v48 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for DebugGroupLayoutKey();
  v9 = (uint64_t)a1 + *(int *)(v44 + 28);
  v10 = (void *)sub_1BB86D75C();
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v51[0] = 0xD000000000000017;
  v51[1] = 0x80000001BB9607A0;
  v49 = v10;
  UIContentSizeCategory.description.getter();
  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v12);
  v42 = v51[1];
  v43 = v51[0];
  v13 = a1[5];
  v14 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v13);
  v45 = v9;
  sub_1BA96946C(v9, v13, v14);
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_1BB873CB4();
  v16 = a1[5];
  v15 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v16);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v15 + 40))(&v53, v16, v15);
  v17 = v53;
  LOBYTE(v16) = v54;
  v51[6] = v53;
  v52 = v54;
  GroupLayoutContentSizeCategory.description.getter();
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  sub_1BA7C2538(v17, v16);
  v51[0] = v19;
  v51[1] = v21;
  sub_1BB872AFC(", deduplicated against ");
  v22 = v51[1];
  *(_QWORD *)v8 = v51[0];
  *((_QWORD *)v8 + 1) = v22;
  v23 = v42;
  *((_QWORD *)v8 + 2) = v43;
  *((_QWORD *)v8 + 3) = v23;
  v8[32] = 0;
  swift_storeEnumTagMultiPayload();
  v24 = a1[5];
  v25 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  MEMORY[0x1E0C80A78](v26);
  *(&v41 - 2) = (uint64_t)a1;
  v43 = sub_1BA8A3018((uint64_t)sub_1BACD5FFC, (uint64_t)(&v41 - 4), v26);
  swift_bridgeObjectRelease();
  v27 = v46;
  sub_1BA4C2DD8((uint64_t)a1 + *(int *)(v44 + 24), v46, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v28 = a1[5];
  v29 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v28);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 48))(v51, v27, v45, v28, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v30 = MEMORY[0x1E0DEE9D8];
  v31 = v48;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
  sub_1BA4C2DD8((uint64_t)v8, v33 + v32, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  v51[0] = v33;
  sub_1BB3861B8(v43);
  sub_1BB3861B8(v30);
  v34 = v51[0];
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)v51, "Requirements (");
  HIBYTE(v51[1]) = -18;
  v53 = *(void **)(v34 + 16);
  sub_1BB87420C();
  sub_1BB872AFC(v35);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v36);

  v37 = v51[0];
  v38 = v51[1];
  result = sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  v40 = v50;
  *v50 = v37;
  v40[1] = v38;
  v40[2] = 0;
  v40[3] = 0;
  v40[4] = v34;
  *((_BYTE *)v40 + 40) = 8;
  return result;
}

uint64_t sub_1BACD5E78(uint64_t a1)
{
  destroy for GroupLayoutInventory(a1);
  return a1;
}

void sub_1BACD5EAC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B2208)
  {
    type metadata accessor for GroupLayoutBindingContext();
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B2208);
  }
}

void sub_1BACD5F2C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BAB90)
  {
    type metadata accessor for GroupLayoutBindingContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BAB90);
  }
}

uint64_t sub_1BACD5F94(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACD41F4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1BACD5FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BACD5FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BACD360C(a1, *(_QWORD **)(v2 + 16), a2);
}

void sub_1BACD6018(_QWORD *a1)
{
  uint64_t v1;

  sub_1BACD3904(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BACD6034()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B2218)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B6FC0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B2218);
  }
}

uint64_t sub_1BACD60AC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1BACD60E8()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BACD6124(void *a1)
{
  uint64_t v1;

  sub_1BACD3F78(a1, *(void **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1BACD6138()
{
  return swift_deallocObject();
}

uint64_t sub_1BACD6148()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BACD617C(void *a1)
{
  uint64_t v1;

  return sub_1BACD2578(a1, *(id *)(v1 + 16), v1 + 24);
}

uint64_t sub_1BACD6188()
{
  return swift_deallocObject();
}

uint64_t sub_1BACD6198()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1BACD61C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BACD2150(*(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), a1);
}

void sub_1BACD61E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD v16[6];

  v4 = sub_1BB87261C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v9 = *v8;
  if (*(_QWORD *)(v9 + 16))
  {
    v16[1] = v7;
    v16[2] = v5;
    v16[3] = v4;
    v16[4] = a1;
    v16[5] = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    v16[0] = "or";
    __asm { BR              X9 }
  }
  swift_retain();
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE5D40](a2 + 16);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector;
    v13 = swift_retain();
    v14 = sub_1BB3FE33C(v13, MEMORY[0x1E0DEE9D8]);
    swift_release();
    *(_QWORD *)&v11[v12] = v14;
    swift_release();
    v15 = objc_msgSend(v11, sel_navigationItem);
    objc_msgSend(v15, sel_setSearchController_, *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController]);

    objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView], sel_reloadData);
    swift_release();

  }
  else
  {
    swift_release();
  }
}

void sub_1BACD66A0(uint64_t a1)
{
  uint64_t v1;

  sub_1BB2B2BEC(a1, v1);
}

uint64_t sub_1BACD66A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BACD66CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BACD29A8(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BACD66E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BACD3404(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(_QWORD))(v2 + 24));
}

uint64_t sub_1BACD66F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACD33C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t FormatButtonNodeLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  result = swift_allocObject();
  v18 = *a3;
  v19 = *a5;
  v20 = *a8;
  v21 = *((_BYTE *)a8 + 8);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = v18;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = v19;
  *(_BYTE *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  *(_QWORD *)(result + 72) = v20;
  *(_BYTE *)(result + 80) = v21;
  *(_QWORD *)(result + 88) = a9;
  *(_QWORD *)(result + 96) = a10;
  return result;
}

uint64_t FormatButtonNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatButtonNodeLayoutAttributes.stateMaskLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatButtonNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

unint64_t FormatButtonNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatButtonNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatButtonNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatButtonNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatButtonNodeLayoutAttributes.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNodeLayoutAttributes.init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v11 = *a3;
  v12 = *a5;
  v13 = *a8;
  v14 = *((_BYTE *)a8 + 8);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = v12;
  *(_BYTE *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = v13;
  *(_BYTE *)(v10 + 80) = v14;
  *(_QWORD *)(v10 + 88) = a9;
  *(_QWORD *)(v10 + 96) = a10;
  return v10;
}

double FormatButtonNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t FormatButtonNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BACD68A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BACD68D8 + 4 * byte_1BB8ADA60[a1]))(0xD000000000000010, 0x80000001BB965740);
}

uint64_t sub_1BACD68D8(uint64_t a1)
{
  return a1 + 9;
}

uint64_t sub_1BACD6968()
{
  return 1701667182;
}

uint64_t sub_1BACD6978()
{
  unsigned __int8 *v0;

  return sub_1BACD68A0(*v0);
}

uint64_t sub_1BACD6980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BACD78EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BACD69A4()
{
  sub_1BACD6D74();
  return sub_1BB874710();
}

uint64_t sub_1BACD69CC()
{
  sub_1BACD6D74();
  return sub_1BB87471C();
}

uint64_t FormatButtonNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatButtonNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  sub_1BACD7354(0, &qword_1EF2B2228, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACD6D74();
  sub_1BB8746C8();
  v12 = *(_QWORD *)(v3 + 16);
  v14 = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA50AD30(&qword_1ED3C9F28, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + 24);
    v14 = 1;
    sub_1BACD6DB8();
    sub_1BACD73B0(&qword_1EF2B2240, (uint64_t (*)(void))sub_1BA82632C, (uint64_t (*)(void))sub_1BACD6E18, MEMORY[0x1E0DEA0B8]);
    sub_1BB8741AC();
    v12 = *(_QWORD *)(v3 + 32);
    v14 = 2;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v12) = 3;
    sub_1BB8741A0();
    v12 = *(_QWORD *)(v3 + 48);
    v14 = 4;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v12) = 5;
    sub_1BB874188();
    v12 = *(_QWORD *)(v3 + 64);
    v14 = 6;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v10 = *(_BYTE *)(v3 + 80);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = v10;
    v14 = 7;
    sub_1BA5FB410();
    sub_1BB87414C();
    LOBYTE(v12) = 8;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BACD6D74()
{
  unint64_t result;

  result = qword_1EF2B2230;
  if (!qword_1EF2B2230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADCEC, &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2230);
  }
  return result;
}

void sub_1BACD6DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2238)
  {
    sub_1BA8262E8();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2238);
  }
}

unint64_t sub_1BACD6E18()
{
  unint64_t result;

  result = qword_1EF2B2248;
  if (!qword_1EF2B2248)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeStateMaskLayoutAttributes, &type metadata for FormatButtonNodeStateMaskLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B2248);
  }
  return result;
}

uint64_t FormatButtonNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatButtonNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatButtonNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = v1;
  sub_1BACD7354(0, &qword_1EF2B2250, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v22 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACD6D74();
  v21 = v8;
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    v19 = (uint64_t)a1;
  }
  else
  {
    v9 = v6;
    type metadata accessor for FormatLayoutAttributes();
    v25 = 0;
    sub_1BA50AD30(&qword_1ED3C9F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v10 = v22;
    v11 = v21;
    sub_1BB8740D4();
    *(_QWORD *)(v3 + 16) = v23;
    sub_1BACD6DB8();
    v25 = 1;
    sub_1BACD73B0(&qword_1EF2B2258, (uint64_t (*)(void))sub_1BA826260, (uint64_t (*)(void))sub_1BACD7428, MEMORY[0x1E0DEA0D8]);
    sub_1BB8740D4();
    *(_QWORD *)(v3 + 24) = v23;
    v25 = 2;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v3 + 32) = v23;
    LOBYTE(v23) = 3;
    *(_QWORD *)(v3 + 40) = sub_1BB8740C8();
    v25 = 4;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v3 + 48) = v23;
    LOBYTE(v23) = 5;
    v13 = sub_1BB8740A4();
    v20[1] = 0;
    *(_BYTE *)(v3 + 56) = v13 & 1;
    type metadata accessor for FormatContextLayoutOptions();
    v25 = 6;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v3 + 64) = v23;
    v25 = 7;
    sub_1BA650BA0();
    sub_1BB874068();
    v14 = v24;
    *(_QWORD *)(v3 + 72) = v23;
    *(_BYTE *)(v3 + 80) = v14;
    LOBYTE(v23) = 8;
    v15 = sub_1BB87402C();
    v20[0] = v16;
    v17 = v15;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v10);
    v18 = v20[0];
    *(_QWORD *)(v3 + 88) = v17;
    *(_QWORD *)(v3 + 96) = v18;
    v19 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(v19);
  return v3;
}

void sub_1BACD7354(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BACD6D74();
    v7 = a3(a1, &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BACD73B0(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1BACD6DB8();
    v10 = v9;
    v11[0] = a2();
    v11[1] = a3();
    result = MEMORY[0x1BCCE5B24](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BACD7428()
{
  unint64_t result;

  result = qword_1EF2B2260;
  if (!qword_1EF2B2260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeStateMaskLayoutAttributes, &type metadata for FormatButtonNodeStateMaskLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B2260);
  }
  return result;
}

double sub_1BACD746C()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 16);
}

uint64_t sub_1BACD7480@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatButtonNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BACD74D4(_QWORD *a1)
{
  return FormatButtonNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BACD74F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FormatButtonNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

uint64_t FormatButtonNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v1 = v0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA50AD30(&qword_1ED3C9F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB86D96C();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v14 = *(_BYTE *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v13 = v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v15;
  *(_QWORD *)(v11 + 24) = v2;
  *(_QWORD *)(v11 + 32) = v3;
  *(_QWORD *)(v11 + 40) = v5;
  *(_QWORD *)(v11 + 48) = v4;
  *(_BYTE *)(v11 + 56) = v6;
  *(_QWORD *)(v11 + 64) = v7;
  *(_QWORD *)(v11 + 72) = v8;
  *(_BYTE *)(v11 + 80) = v14;
  *(_QWORD *)(v11 + 88) = v13;
  *(_QWORD *)(v11 + 96) = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return v11;
}

uint64_t sub_1BACD7664(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B2268, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatButtonNodeLayoutAttributes);
}

uint64_t sub_1BACD7690(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B2270, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatButtonNodeLayoutAttributes);
}

uint64_t sub_1BACD76BC(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B2278, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatButtonNodeLayoutAttributes);
}

uint64_t sub_1BACD76E8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B2280, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatButtonNodeLayoutAttributes);
}

uint64_t method lookup function for FormatButtonNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatButtonNodeLayoutAttributes.__allocating_init(layoutAttributes:stateMaskLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of FormatButtonNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for FormatButtonNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BACD7794 + 4 * byte_1BB8ADA6E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BACD77C8 + 4 * byte_1BB8ADA69[v4]))();
}

uint64_t sub_1BACD77C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACD77D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACD77D8);
  return result;
}

uint64_t sub_1BACD77E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACD77ECLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BACD77F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACD77F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatButtonNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BACD7818()
{
  unint64_t result;

  result = qword_1EF2B2288;
  if (!qword_1EF2B2288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADCC4, &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2288);
  }
  return result;
}

unint64_t sub_1BACD7860()
{
  unint64_t result;

  result = qword_1EF2B2290;
  if (!qword_1EF2B2290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADC34, &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2290);
  }
  return result;
}

unint64_t sub_1BACD78A8()
{
  unint64_t result;

  result = qword_1EF2B2298;
  if (!qword_1EF2B2298)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADC5C, &type metadata for FormatButtonNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2298);
  }
  return result;
}

uint64_t sub_1BACD78EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB965740 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BB9714F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t SportsRecordRank.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SportsRecordRank.rankContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecordRank.rankDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  if (qword_1EF2A7010 != -1)
    swift_once();
  v4 = (void *)qword_1EF2B22A0;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v1);
  v6 = objc_msgSend(v4, sel_stringFromNumber_, v5);

  if (!v6)
    return 0;
  v7 = sub_1BB8729A0();
  v9 = v8;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA7AA598();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v12 + 40) = v9;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = v2;
  *(_QWORD *)(v12 + 80) = v3;
  swift_bridgeObjectRetain();
  v15 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t static SportsRecordRank.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[1] == a2[1] && a1[2] == a2[2])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BACD7EB0()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E6F436B6E6172;
  else
    return 1802396018;
}

uint64_t sub_1BACD7EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BACD8650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BACD7F10()
{
  sub_1BACD8328();
  return sub_1BB874710();
}

uint64_t sub_1BACD7F38()
{
  sub_1BACD8328();
  return sub_1BB87471C();
}

uint64_t SportsRecordRank.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;

  sub_1BACD836C(0, &qword_1EF2B22A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v11[0] = *(_QWORD *)(v1 + 16);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACD8328();
  sub_1BB8746C8();
  v13 = 0;
  sub_1BB8741A0();
  if (!v2)
  {
    v12 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SportsRecordRank.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1BACD836C(0, &qword_1EF2B22B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BACD8328();
  sub_1BB87468C();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_1BB8740C8();
    v16 = 1;
    v12 = sub_1BB874098();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BACD81E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsRecordRank.init(from:)(a1, a2);
}

uint64_t sub_1BACD81F8(_QWORD *a1)
{
  return SportsRecordRank.encode(to:)(a1);
}

uint64_t sub_1BACD820C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[1] == a2[1] && a1[2] == a2[2])
    return 1;
  else
    return sub_1BB874398();
}

id sub_1BACD8254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id result;
  uint64_t v7;

  v0 = sub_1BB86C9DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  sub_1BB86C994();
  v5 = (void *)sub_1BB86C940();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  result = objc_msgSend(v4, sel_setNumberStyle_, 6);
  qword_1EF2B22A0 = (uint64_t)v4;
  return result;
}

unint64_t sub_1BACD8328()
{
  unint64_t result;

  result = qword_1EF2B22B0;
  if (!qword_1EF2B22B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADED0, &type metadata for SportsRecordRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B22B0);
  }
  return result;
}

void sub_1BACD836C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BACD8328();
    v7 = a3(a1, &type metadata for SportsRecordRank.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SportsRecordRank(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsRecordRank(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsRecordRank(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsRecordRank()
{
  return &type metadata for SportsRecordRank;
}

uint64_t type metadata accessor for SportsRecordRankFormatter()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SportsRecordRank.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BACD84F8 + 4 * byte_1BB8ADD45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BACD852C + 4 * byte_1BB8ADD40[v4]))();
}

uint64_t sub_1BACD852C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACD8534(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BACD853CLL);
  return result;
}

uint64_t sub_1BACD8548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BACD8550);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BACD8554(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BACD855C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsRecordRank.CodingKeys()
{
  return &type metadata for SportsRecordRank.CodingKeys;
}

unint64_t sub_1BACD857C()
{
  unint64_t result;

  result = qword_1EF2B2358;
  if (!qword_1EF2B2358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADEA8, &type metadata for SportsRecordRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2358);
  }
  return result;
}

unint64_t sub_1BACD85C4()
{
  unint64_t result;

  result = qword_1EF2B2360;
  if (!qword_1EF2B2360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADE18, &type metadata for SportsRecordRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2360);
  }
  return result;
}

unint64_t sub_1BACD860C()
{
  unint64_t result;

  result = qword_1EF2B2368;
  if (!qword_1EF2B2368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ADE40, &type metadata for SportsRecordRank.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B2368);
  }
  return result;
}

uint64_t sub_1BACD8650(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1802396018 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6F436B6E6172 && a2 == 0xEB00000000747865)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void FormatHeadlineBinding.DateTime.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v17[0] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[3] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatHeadlineBinding.DateTime, v16, v13, (uint64_t)&type metadata for FormatHeadlineBinding.DateTime, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDE0);
  __asm { BR              X9 }
}

uint64_t sub_1BACD88CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D88 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BAD7A4E0(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatPercentFillSizing.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  unint64_t v27;
  char *v28;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  sub_1BAE70998(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v27 = v1[1];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE70840();
  v17 = sub_1BA4A2870(&qword_1ED3D1090, (uint64_t (*)(uint64_t))sub_1BAE70840, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPercentFillSizing, v18, v14, (uint64_t)&type metadata for FormatPercentFillSizing, v16, (uint64_t)&type metadata for FormatVersions.StarSky, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BDC0);
  v19 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD156D8(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v28;
    v22(v28, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = v27;
    sub_1BA67035C(v27);
    sub_1BAD1585C(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    sub_1BA5B18CC(v24);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE70998);
}

uint64_t FormatPercentFillSpacing.encode(to:)(_QWORD *a1)
{
  return sub_1BADF825C(a1, (uint64_t)&type metadata for FormatPercentFillSpacing, (void (*)(uint64_t, char *))sub_1BAD75BAC, (void (*)(uint64_t, uint64_t, char *))sub_1BACE7F98, (void (*)(uint64_t))sub_1BA5B18CC);
}

uint64_t FormatProgressPieOptions.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  char v39;
  __int128 v40;
  char v41;
  _QWORD *v42;

  v42 = a2;
  sub_1BAE70A88();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE70B00();
  sub_1BA4A2870(&qword_1ED3AD938, (uint64_t (*)(uint64_t))sub_1BAE70B00, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v9);
    swift_willThrow();

    v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  v10 = v6;
  v11 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v5;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v20 = sub_1BAE153EC();
      sub_1BA98D1F0();
      v9 = (void *)swift_allocError();
      *(_QWORD *)v21 = v18;
      *(_QWORD *)(v21 + 8) = v19;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
      a1 = v34;
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE0FE14((void (*)(_QWORD))sub_1BAE70A88, (uint64_t *)&v40);
  v17 = v40;
  v33 = xmmword_1BB8A1A10;
  v40 = xmmword_1BB8A1A10;
  v41 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v38 = v33;
    v39 = 0;
    sub_1BA7967E4();
    sub_1BB8740D4();
    v24 = v36;
    *(_QWORD *)&v33 = v35;
    v25 = v37;
  }
  else
  {
    *(_QWORD *)&v33 = 0;
    v24 = 0;
    v25 = 0;
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v40 = xmmword_1BB8D2D60;
  v41 = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v26 = v38;
  sub_1BAE0FE14((void (*)(_QWORD))sub_1BAE70A88, (uint64_t *)&v40);
  v32 = v40;
  sub_1BAE0FCE4((void (*)(_QWORD))sub_1BAE70A88, (uint64_t *)&v40);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v13);
  v27 = v40;
  v28 = v42;
  v29 = v33;
  *v42 = v17;
  v28[1] = v29;
  v28[2] = v24;
  *((_BYTE *)v28 + 24) = v25;
  v30 = v32;
  v28[4] = v26;
  v28[5] = v30;
  v28[6] = v27;
  v22 = (uint64_t)v34;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t FormatProgressPieOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v42 - v8;
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v42 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - v15;
  sub_1BAE70C4C(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)v1;
  v20 = *(_QWORD *)(v1 + 8);
  v51 = *(_QWORD *)(v1 + 16);
  v52 = v20;
  v50 = *(unsigned __int8 *)(v1 + 24);
  v48 = *(_QWORD *)(v1 + 32);
  v46 = *(_QWORD *)(v1 + 40);
  v44 = *(_QWORD *)(v1 + 48);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = sub_1BAE70B00();
  v25 = sub_1BA4A2870(&qword_1ED3AD938, (uint64_t (*)(uint64_t))sub_1BAE70B00, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatProgressPieOptions, v26, v22, (uint64_t)&type metadata for FormatProgressPieOptions, v24, (uint64_t)&type metadata for FormatVersions.Dawnburst, v23, (uint64_t)v19, v25, (uint64_t)&off_1E734BDE0);
  v27 = qword_1ED3C6D88;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C80);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v54 = v29;
  v31 = v30;
  ((void (*)(char *))v30)(v16);
  v53 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD279F0(v21, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE47944, (uint64_t (*)(uint64_t))sub_1BAE70CC4, &qword_1ED3AEDA0);
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v43 = v31;
    v31(v13, v54, v28);
    swift_storeEnumTagMultiPayload();
    v33 = v51;
    v32 = v52;
    v34 = v50;
    sub_1BA69C808(v52, v51, v50);
    sub_1BAD2BBA8(v32, v33, v34, 1, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE47944, (uint64_t (*)(uint64_t))sub_1BAE70CC4, &qword_1ED3AEDA0);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BA69C828(v32, v33, v34);
    v35 = (uint64_t)v49;
    v43(v49, v54, v28);
    swift_storeEnumTagMultiPayload();
    v36 = swift_bridgeObjectRetain();
    sub_1BAD46240(v36, 2, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v37 = (uint64_t)v47;
    v43(v47, v54, v28);
    swift_storeEnumTagMultiPayload();
    v38 = swift_bridgeObjectRetain();
    sub_1BAD279F0(v38, 3, 0, 0, v37, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE47944, (uint64_t (*)(uint64_t))sub_1BAE70CC4, &qword_1ED3AEDA0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v40 = (uint64_t)v45;
    v43(v45, v54, v28);
    swift_storeEnumTagMultiPayload();
    v41 = swift_bridgeObjectRetain();
    sub_1BAD27BD4(v41, 4, 0, 0, v40, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE47944, (uint64_t (*)(uint64_t))sub_1BAE70CC4, &qword_1ED3AEDA0);
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BAE70C4C);
}

uint64_t FormatProgressViewNodeProgress.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA561664(a1, (void (*)(uint64_t))sub_1BAE70D3C, (uint64_t)&_s10CodingTypeON_184, (uint64_t)&unk_1E724C140, a2);
}

uint64_t FormatProgressViewNodeProgress.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - v6;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v11 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 16);
  v14 = *(__int16 *)(v1 + 24);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BA6B8518();
  v34 = v10;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatProgressViewNodeProgress, v18, v15, (uint64_t)&type metadata for FormatProgressViewNodeProgress, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v16, (uint64_t)v10, v17, (uint64_t)&off_1E734BDA0);
  if ((v14 & 0x80000000) != 0)
  {
    v24 = v33;
    sub_1BAE70D80(v12, v11, v13, v14, BYTE1(v14) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    v25 = v13;
    v26 = v14;
    if (qword_1ED3C6D78 != -1)
      swift_once();
    v27 = sub_1BB86EB84();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C68);
    v29 = (uint64_t)v24;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v30 = (uint64_t)v24;
    v31 = (uint64_t)v34;
    sub_1BAD03978(1, v12, v11, v25, v26 & 0x1FF, v30);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BA54C928(v12, v11, v25, v26);
  }
  else
  {
    v19 = qword_1ED3C6D78;
    swift_bridgeObjectRetain();
    if (v19 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C68);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v7, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v22 = (uint64_t)v34;
    sub_1BAD037F4(0, v12, (uint64_t)v7);
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
    sub_1BA54C928(v12, v11, v13, v14);
    return sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
}

uint64_t FormatOptionsNodeStatementModifier.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  char *v24;
  __int128 v25;
  char v26;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  v11 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v6;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v20 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v17;
      *(_QWORD *)(v21 + 16) = &unk_1E724C738;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      a1 = v23;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE70DF4();
  v25 = 0uLL;
  sub_1BB8740D4();
  if (v26)
  {
    v25 = xmmword_1BB87FC90;
    if (v26 == 1)
    {
      sub_1BAE70E38();
      sub_1BB8740D4();
      a1 = v23;
      v18 = v24;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v19 = v26 | 0x40;
    }
    else
    {
      sub_1BACCDACC();
      sub_1BB8740D4();
      a1 = v23;
      v18 = v24;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v19 = 0x80;
    }
  }
  else
  {
    v25 = xmmword_1BB87FC90;
    sub_1BAE70E7C();
    sub_1BB8740D4();
    a1 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    v19 = v26;
    v18 = v24;
  }
  *v18 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatOptionsNodeStatementModifier.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionsNodeStatementModifier, v19, v16, (uint64_t)&type metadata for FormatOptionsNodeStatementModifier, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BDE0);
  if (v15 >> 6)
  {
    if (v15 >> 6 == 1)
    {
      if (qword_1ED3C6D88 != -1)
        swift_once();
      v20 = sub_1BB86EB84();
      v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACDF564(1, v15 & 1, (uint64_t)v8);
      v22 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C6D88 != -1)
        swift_once();
      v25 = sub_1BB86EB84();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACDF6CC(2, (uint64_t)v5);
      v22 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1ED3C6D88 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACDF400(0, v15, (uint64_t)v11);
    v22 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatSnippet.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA6394F4(a1);
}

uint64_t FormatGroupBinding.Float.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE *v23;
  __int128 v24;
  char v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E724D478;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE71774();
  v24 = 0uLL;
  sub_1BB8740D4();
  v24 = xmmword_1BB87FC90;
  if ((v25 & 1) != 0)
  {
    sub_1BAE717B8();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25 | 0x80;
  }
  else
  {
    sub_1BAE717FC();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25;
  }
  *v17 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatGroupBinding.Float.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupBinding.Float, v16, v13, (uint64_t)&type metadata for FormatGroupBinding.Float, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDA0);
  if (v12 < 0)
  {
    if (qword_1ED3C4168 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476900);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF4E58(1, v12 & 0x7F, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D78 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C68);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF4CF0(0, v12 & 1, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatTagBinding.Font.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BADAE63C(a1, (void (*)(uint64_t))sub_1BAE71840, (uint64_t)&_s14descr1E7276531V4FontO10CodingTypeON, (uint64_t)&unk_1E724D558, a2);
}

uint64_t FormatTagBinding.Font.encode(to:)(_QWORD *a1)
{
  return sub_1BADAE98C(a1, (uint64_t)&type metadata for FormatTagBinding.Font, (void (*)(uint64_t, uint64_t, _QWORD, char *, double))sub_1BACFAF24);
}

uint64_t static FormatBoxScoreDataVisualization.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BAE66368(a1, a2) & 1;
}

uint64_t FormatButtonNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5C1730(a1);
}

_QWORD *FormatVariableNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BAE71AC0(a1);
}

uint64_t FormatVariableNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  __int128 v29;
  char v30;
  uint64_t v31;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v28[0] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v28 - v8;
  sub_1BAE71EE8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE71FD8();
  v16 = sub_1BA4A2870(&qword_1ED3AD868, (uint64_t (*)(uint64_t))sub_1BAE71FD8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v17, v13, v4, v15, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v12, v16, (uint64_t)&off_1E734BD60);
  swift_beginAccess();
  v18 = v2[2];
  v19 = v2[3];
  v20 = qword_1ED3C6D50;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476BF0);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v24 = v28[1];
  sub_1BAD265E8(v18, v19, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE50414, (uint64_t (*)(uint64_t))sub_1BAE71F60, &qword_1ED3AE8C0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    swift_beginAccess();
    v25 = v2[4];
    v26 = v28[0];
    v23((char *)v28[0], v22, v21);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE50414(v26, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v29 = xmmword_1BB8A1A10;
      v30 = 0;
      v31 = v25;
      sub_1BAE71F60();
      sub_1BA4A2870(&qword_1ED3AE8C0, (uint64_t (*)(uint64_t))sub_1BAE71F60, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED39DA00, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA7B1C84();
      sub_1BB874464();
    }
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE71EE8);
}

uint64_t FormatWeatherBinding.Image.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v20;
  __int128 v21;
  __int128 v22;
  __int16 v23;
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v24;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E724DF60;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE72124();
  v22 = 0uLL;
  sub_1BB8740D4();
  v21 = xmmword_1BB87FC90;
  sub_1BA59DF98();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v23;
  *(_OWORD *)v12 = v22;
  *(_WORD *)(v12 + 16) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatWeatherBinding.Image.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)v1;
  v10 = *(_QWORD *)(v1 + 8);
  v11 = *(unsigned __int8 *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 17);
  v14 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWeatherBinding.Image, v16, v14, (uint64_t)&type metadata for FormatWeatherBinding.Image, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Sydro, v13, (uint64_t)v8, v15, (uint64_t)&off_1E734BD40);
  sub_1BA740408(v9, v10, v11, v12);
  if (qword_1ED3C6D20 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476B78);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACF0C6C(v9, v10, v11 | (v12 << 8), (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA740434(v9, v10, v11, v12);
}

uint64_t FormatSportsEventBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;

  v3 = v2;
  v29 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  v11 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v6;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v17;
      *(_QWORD *)(v22 + 16) = &unk_1E724E090;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      a1 = v25;
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE72648();
  v28 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v26)
  {
    if (v26 == 1)
    {
      v28 = xmmword_1BB87FC90;
      sub_1BA50A978();
      sub_1BB8740D4();
      v18 = v29;
      a1 = v25;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v19 = v26;
      v20 = 64;
    }
    else
    {
      sub_1BA4CDF6C(0, &qword_1EF2B2390, (uint64_t (*)(void))sub_1BAE7268C, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
      v28 = xmmword_1BB87FC90;
      sub_1BAE726D0();
      sub_1BB8740D4();
      v18 = v29;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      a1 = v25;
      v19 = v26;
      v20 = v27 | 0x80;
    }
  }
  else
  {
    v28 = xmmword_1BB87FC90;
    sub_1BA50A978();
    sub_1BB8740D4();
    a1 = v25;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    v20 = 0;
    v19 = v26;
    v18 = v29;
  }
  *(_QWORD *)v18 = v19;
  *(_BYTE *)(v18 + 8) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSportsEventBinding.Bool.encode(to:)(_QWORD *a1)
{
  return sub_1BADF4D58(a1, (uint64_t)&type metadata for FormatSportsEventBinding.Bool, (void (*)(uint64_t, uint64_t, char *))sub_1BACE7B18, (void (*)(uint64_t, uint64_t, _QWORD, char *))sub_1BACE7C7C);
}

_QWORD *FormatSpaceNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA6367AC(a1);
}

uint64_t FormatVideoNodeContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v28;

  v28 = a2;
  v3 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v24 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v10 = (void *)v25;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_10;
  v23[1] = v5;
  v23[2] = v3;
  *(_QWORD *)&v25 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v14 = v24;
  v15 = v9;
  if ((v13 & 1) == 0)
  {
LABEL_8:
    sub_1BAE72930();
    v26 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v16 = sub_1BB8740EC();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v18 = (unint64_t *)(v16 + 40);
  while (1)
  {
    v19 = *v18;
    if (*v18 >= 4)
      break;
    v18 += 2;
    if (!--v17)
      goto LABEL_7;
  }
  v20 = *(v18 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v11 = (void *)swift_allocError();
  *(_QWORD *)v21 = v20;
  *(_QWORD *)(v21 + 8) = v19;
  *(_QWORD *)(v21 + 16) = &unk_1E724EEE0;
  *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v20, v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v14);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v11);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void FormatVideoNodeContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v20[2] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v20[1] = (char *)v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v11);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  v20[5] = v14;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatVideoNodeContent, v19, v16, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD20);
  __asm { BR              X10 }
}

uint64_t sub_1BACDBCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = swift_projectBox();
  sub_1BA4C2DD8(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v2 - 72);
  sub_1BACEADE8(0, v1, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatBindingImageExpressionLogic.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingImageExpressionLogic, v16, v13, (uint64_t)&type metadata for FormatBindingImageExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD744FC(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD744FC(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatSupplementaryNodeRubberbandTrait.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  __int128 v24;
  char v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E724F610;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE72DCC();
  v24 = 0uLL;
  sub_1BB8740D4();
  if ((v25 & 1) != 0)
  {
    v24 = xmmword_1BB87FC90;
    sub_1BA93BE90();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = 2;
    v17 = v23;
  }
  *v17 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSupplementaryNodeRubberbandTrait.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTrait, v16, v13, (uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTrait, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD60);
  if (v12 == 2)
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73E34(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  else
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACDEE44(1, v12 & 1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE72E10, (uint64_t)&_s10CodingTypeON_176, (uint64_t)&unk_1E724F660, a2);
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTraitTransform, v16, v13, (uint64_t)&type metadata for FormatSupplementaryNodeRubberbandTraitTransform, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD60);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73AC8(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73AC8(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatSlotItemOrdering.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE72EBC, (uint64_t)&_s10CodingTypeON_174, (uint64_t)&unk_1E724F700, a2);
}

uint64_t FormatSlotItemOrdering.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSlotItemOrdering, v16, v13, (uint64_t)&type metadata for FormatSlotItemOrdering, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.DawnburstF, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BCE0);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C4168 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476900);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD76B94(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C4168 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476900);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD76B94(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatLayeredMediaNodeBinding.encode(to:)(_QWORD *a1)
{
  return sub_1BADB9FDC(a1, (uint64_t)&type metadata for FormatLayeredMediaNodeBinding, (void (*)(_QWORD, char *))sub_1BACE2CD8, (void (*)(uint64_t, char *))sub_1BACE2E34);
}

uint64_t FormatTextNodeNumber.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;
  _BYTE v41[7];

  v3 = v2;
  v30 = a2;
  sub_1BAE72F44();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE72FBC();
  sub_1BA4A2870(&qword_1ED3AD8A8, (uint64_t (*)(uint64_t))sub_1BAE72FBC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v30;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v30 = v13;
      v20 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_249;
      *(&v30 - 3) = sub_1BAE7303C();
      *(&v30 - 2) = sub_1BAE73080();
      *(&v30 - 1) = sub_1BAE730C4();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E724F7A0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE73108();
  v33 = 0uLL;
  LOBYTE(v34) = 0;
  sub_1BB8740D4();
  v18 = v31;
  v19 = BYTE8(v31);
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  sub_1BAB1DAFC();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v26 = v40;
  *(_QWORD *)v12 = v18;
  *(_BYTE *)(v12 + 8) = v19;
  *(_DWORD *)(v12 + 9) = *(_DWORD *)v41;
  *(_DWORD *)(v12 + 12) = *(_DWORD *)&v41[3];
  v27 = v34;
  *(_OWORD *)(v12 + 16) = v33;
  *(_OWORD *)(v12 + 32) = v27;
  v28 = v36;
  *(_OWORD *)(v12 + 48) = v35;
  *(_OWORD *)(v12 + 64) = v28;
  v29 = v38;
  *(_OWORD *)(v12 + 80) = v37;
  *(_OWORD *)(v12 + 96) = v29;
  *(_OWORD *)(v12 + 112) = v39;
  *(_BYTE *)(v12 + 128) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatTextNodeNumber.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v26;
  _BYTE v27[120];
  _BYTE *v28;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v26 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v27[-v7 - 8];
  sub_1BAE7314C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_QWORD *)v1;
  v13 = *(_BYTE *)(v1 + 8);
  sub_1BA6A09F0(v1 + 16, (uint64_t)v27, &qword_1ED3A4210, (uint64_t)&type metadata for FormatNumberFormat);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE72FBC();
  v17 = sub_1BA4A2870(&qword_1ED3AD8A8, (uint64_t (*)(uint64_t))sub_1BAE72FBC, (uint64_t)&unk_1BB8FFC6C);
  v28 = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeNumber, v18, v14, (uint64_t)&type metadata for FormatTextNodeNumber, v16, (uint64_t)&type metadata for FormatVersions.JazzkonG, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BD00);
  sub_1BA93DAE4(v12, v13);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD18C8C(v12, v13, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1BA93DB08(v12, v13);
  if (v2)
  {
    v22 = (uint64_t)v28;
  }
  else
  {
    v23 = (uint64_t)v26;
    v21(v26, v20, v19);
    swift_storeEnumTagMultiPayload();
    v24 = (uint64_t)v28;
    sub_1BAD50E58((uint64_t)v27, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    v22 = v24;
  }
  return sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))sub_1BAE7314C);
}

uint64_t FormatSlotItemTagFilterCondition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BAE7323C();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E724FE38;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BACDD6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_QWORD **)(v3 - 72) = 0xC000000000000008;
  JUMPOUT(0x1BACDD6B4);
}

void sub_1BACDD6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_QWORD **)(v3 - 72) = 0xC000000000000010;
  JUMPOUT(0x1BACDD6B4);
}

void sub_1BACDD718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_QWORD **)(v3 - 72) = 0xC000000000000018;
  JUMPOUT(0x1BACDD6B4);
}

void sub_1BACDD738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAE732F4();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v6 = *(_QWORD *)(v4 - 96);
    v5 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v5;
    **(_QWORD **)(v4 - 72) = v7;
    JUMPOUT(0x1BACDD6B4);
  }
  JUMPOUT(0x1BACDD5C8);
}

void sub_1BACDD7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAE732A4();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(_QWORD *)(v4 - 96);
    v6 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    **(_QWORD **)(v4 - 72) = v7 | 0x4000000000000000;
    JUMPOUT(0x1BACDD6B4);
  }
  JUMPOUT(0x1BACDD5C8);
}

void sub_1BACDD818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAAD7464();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(_QWORD *)(v4 - 112);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BACDD884);
  }
  JUMPOUT(0x1BACDD5C8);
}

void FormatSlotItemTagFilterCondition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v22[2] = (char *)v22 - v8;
  MEMORY[0x1E0C80A78](v9);
  v22[1] = (char *)v22 - v10;
  MEMORY[0x1E0C80A78](v11);
  v22[0] = (char *)v22 - v12;
  MEMORY[0x1E0C80A78](v13);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v2;
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = sub_1BA6B8518();
  v22[5] = v16;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSlotItemTagFilterCondition, v21, v18, (uint64_t)&type metadata for FormatSlotItemTagFilterCondition, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.DawnburstC, v19, (uint64_t)v16, v20, (uint64_t)&off_1E734BCA0);
  __asm { BR              X10 }
}

unint64_t sub_1BACDDA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_1BA739250(v4);
  sub_1BA739250(v3);
  if (qword_1ED3C6D00 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 72);
  sub_1BACE01CC(4, v4, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  sub_1BA6F5D74(v4);
  return sub_1BA6F5D74(v3);
}

uint64_t FormatAdMetricsNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5812C8(a1);
}

uint64_t FormatIssueCoverNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA520AE0(a1);
}

uint64_t FormatStateMachineInlineInput.Scope.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v21 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C38);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v15 = v24;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    v17 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v18, (uint64_t)sub_1BA90CF04, 0, v17, v24);
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

uint64_t FormatStateMachineInlineInput.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  __int128 v34;
  char v35;
  char v36;

  v3 = v2;
  v31 = a2;
  sub_1BAE73DB8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE73E30();
  sub_1BA4A2870(&qword_1EF2B2428, (uint64_t (*)(uint64_t))sub_1BAE73E30, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v31;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v31 = v13;
      v23 = *((_QWORD *)v18 - 2);
      v24 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *((_QWORD *)&v30 - 4) = &_s10CodingKeysON_244;
      *((_QWORD *)&v30 - 3) = sub_1BAE73EB0();
      *((_QWORD *)&v30 - 2) = sub_1BAE73EF4();
      *((_QWORD *)&v30 - 1) = sub_1BAE73F38();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E72502B0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v27 = v23;
      *(_QWORD *)(v27 + 8) = v24;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v24, 1);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v19 = v12;
  v34 = 0uLL;
  v35 = 0;
  v20 = sub_1BB874098();
  v22 = v21;
  v30 = xmmword_1BB8A1A10;
  v34 = xmmword_1BB8A1A10;
  v35 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v32 = v30;
    v33 = 0;
    sub_1BA98C798();
    sub_1BB8740D4();
    v29 = v36;
  }
  else
  {
    v29 = 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v14);
  *(_QWORD *)v19 = v20;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatStateMachineInlineInput.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[4];
  int v26;
  _BYTE *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v25[-v6];
  sub_1BAE73F7C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v26 = *(unsigned __int8 *)(v1 + 16);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE73E30();
  v16 = sub_1BA4A2870(&qword_1EF2B2428, (uint64_t (*)(uint64_t))sub_1BAE73E30, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStateMachineInlineInput, v17, v13, (uint64_t)&type metadata for FormatStateMachineInlineInput, v15, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD00);
  v18 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v28;
  sub_1BAD0D7DC(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = (uint64_t)v27;
    v21(v27, v20, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BAD26468(v26, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE73F7C);
}

uint64_t sub_1BACDE868(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF95FC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A80DC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAbsoluteURL();
    sub_1BA4A2870(&qword_1ED3A2A20, (uint64_t (*)(uint64_t))type metadata accessor for FormatAbsoluteURL, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDE9F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF95FC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A80DC();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF9608();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDEB5C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEA974;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEA980();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDECE0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEA9C4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEA9D0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEAA14();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDEE44(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFB248;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB254();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA93BED4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDEFAC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC1D4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC1E0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA93D1F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF114(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF771C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7728();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAB6C690();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF27C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEAA58;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEAA64();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF400(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFBEA0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBEAC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEFBEF0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF564(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFBEA0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBEAC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEFBF34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF6CC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFBEA0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBEAC();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BACCDB10();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  __int128 v12;

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF73FC;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF741C();
    v12 = 0uLL;
    sub_1BB874464();
    v12 = xmmword_1BB87FC90;
    sub_1BAEF58B4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDF974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  __int128 v12;

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEEC768;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC788();
    v12 = 0uLL;
    sub_1BB874464();
    v12 = xmmword_1BB87FC90;
    sub_1BAEEC7CC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDFAC0(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEEC38;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50E1D8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5EA054();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDFC28(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEEC38;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50E1D8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEDD64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDFD8C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEEEC38;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50E1D8();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5A8098();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACDFEF8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEEEC38;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50E1D8();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEEEC44();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0064(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5AB8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5AC4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF5B08();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE01CC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFAF84;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFAF90();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEFAFD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0330(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFAF84;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFAF90();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEFB018();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0494(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFAF84;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFAF90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAAD74A8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE05F8(char a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7910;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF791C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEEC6F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0784(char a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v22 = a6;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF7910;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF791C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5DCBDC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE08EC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF15BC;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF15C8();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA6169FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0A54(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF15BC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF15C8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0BD8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF8E04;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA82130C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0D64(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF8E04;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA82130C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAAD8730();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE0ECC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF8E04;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA82130C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAAD883C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1034(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[19];
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  *(_OWORD *)v19 = a2[2];
  *(_DWORD *)&v19[15] = *(_DWORD *)((char *)a2 + 47);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF8E04;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA82130C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAAD898C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE11AC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  char v14;

  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEF6C58;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6C78();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BAEF6CBC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1304(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF92D0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF92DC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3AD418, (uint64_t (*)(void))sub_1BAE787A0, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF9320();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1494(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3 & 0x1FF;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF92D0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF92DC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9388();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1604(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  double v15;
  double v16;

  v15 = a2;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v3 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  v13[2] = sub_1BAEEE60C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v4 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE62C();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BA5B987C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1758(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4D7C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE18DC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5 & 1;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEE4D7C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEE4D88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1A4C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE4D7C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAA3EBA8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1BB4(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE4D7C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA63D928();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1D24(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4D7C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAA1B6FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE1E88(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4D7C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5854A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatURL();
    sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2014(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE9B38;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA4FBD5C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEE9B44();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE217C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9B38;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA4FBD5C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEE9B88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE22E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEDD14;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEDD20();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2464(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEDD14;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEDD20();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEDD64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE25C8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEFE54;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEFE60();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEFEA4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2724(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEFE54;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEFE60();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEFEE8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2880(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF06CC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF06D8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BACB61D0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE29E4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF02F4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF0300();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA93D3EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2B4C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF02F4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF0300();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2F80, (uint64_t (*)(void))sub_1BAEA092C, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEF0344();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2CD8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB14C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB158();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEFEA4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2E34(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB14C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB158();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEFEE8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE2F90(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE88BC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE88C8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEE890C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE30F4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE88BC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE88C8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAB19C34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3258(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE88BC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE88C8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE33C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a3;
  v16 = a1;
  v17 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v14[2] = sub_1BAEE8AC4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE8AE4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3514(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED680;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED68C();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEED6D0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3670(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEED680;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED68C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B3390, (uint64_t (*)(void))sub_1BAEB23B8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEED714();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE37FC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;

  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 0x1FF;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v5 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v15[2] = sub_1BAEF8FAC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v6 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF8FCC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA5CC22C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3960(char a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  char v17;

  v17 = a1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFB1EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA508234();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEEC6F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3AEC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEBAE0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEBAEC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEBB30();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3C50(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEBAE0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEBAEC();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEBB74();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3DAC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEBAE0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEBAEC();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEBBB8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE3F08(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;

  v6 = a1 & 1;
  v29 = a1 & 1;
  v7 = a2[7];
  v26 = a2[6];
  v27 = v7;
  v28 = *((_BYTE *)a2 + 128);
  v8 = a2[3];
  v22 = a2[2];
  v23 = v8;
  v9 = a2[5];
  v24 = a2[4];
  v25 = v9;
  v10 = a2[1];
  v20 = *a2;
  v21 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = v6;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF1BAC;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50D48C();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF1BB8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4090(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF9BD4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9BE0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9C24();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE41F8(char a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF9BD4;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9BE0();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF9C68();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4368(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7960;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5CCC5C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE4A4C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE44F4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF7960;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5CCC5C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA82A49C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE465C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5 & 0x1FF;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF4338;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54CADC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5CC22C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE47D0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF6A04;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6A10();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA4E2A94(0);
    sub_1BA4A2870(&qword_1ED39F238, (uint64_t (*)(uint64_t))sub_1BA4E2A94, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeKeyPathAnimation<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4958(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF6A04;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6A10();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2950, (uint64_t (*)(void))sub_1BAB1DDC8, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
    sub_1BAEF6A54();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4AF0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF6D00;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6D0C();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF6D50();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4C4C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF6D00;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6D0C();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF6D94();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4DA8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE7D3C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5432B4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA6C0E30(0);
    sub_1BA4A2870(&qword_1ED39C9B8, (uint64_t (*)(uint64_t))sub_1BA6C0E30, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE4F34(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE7D3C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5432B4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B3A60, (uint64_t (*)(void))sub_1BAED0CE0, (uint64_t)&type metadata for FormatWebEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEE7D48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE50C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE7DB0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53ED4C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5228(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEB81C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB828();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE538C(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v6 = a1 & 1;
  v22 = a1 & 1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEB81C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB828();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE54FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEB8DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB8E8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEEB92C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5680(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEB8DC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB8E8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEBBC6C(0);
    sub_1BA4A2870(&qword_1EF2B5B30, (uint64_t (*)(uint64_t))sub_1BAEBBC6C, (uint64_t)&protocol conformance descriptor for FormatSelectorValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5804(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEEBA38;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEBA58();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BAEEBA9C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5958(char a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  char v17;

  v17 = a1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC6A4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC6B0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEEC6F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5AE4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEDC68;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA540C30();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5C68(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF8510;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF851C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2720, (uint64_t (*)(void))sub_1BAE7ABAC, (uint64_t)&type metadata for FormatMediaTimingFunctionName, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF8560();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5DF4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF8510;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF851C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF85C8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE5F5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v5 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v15[2] = sub_1BAEEFD74;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v6 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEFD94();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEE4D88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE60BC(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  _BYTE v14[128];

  sub_1BA895FE8(a1, (uint64_t)v14);
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEF1A24;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1A44();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BAEF1A88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6214(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v6 = a1 & 1;
  v22 = a1 & 1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF3C1C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3C28();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6384(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v6 = a1 & 1;
  v28 = a1 & 1;
  v7 = a2[5];
  v24 = a2[4];
  v25 = v7;
  v8 = a2[7];
  v26 = a2[6];
  v27 = v8;
  v9 = a2[1];
  v20 = *a2;
  v21 = v9;
  v10 = a2[3];
  v22 = a2[2];
  v23 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = v6;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF3C1C;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3C28();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF38AC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6504(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4EC0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5690F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3C4140, (uint64_t (*)(void))sub_1BAEE4ECC, (uint64_t)&type metadata for FormatContentSizeCategoryValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE4F10();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6690(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5EF0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5EFC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA616A40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE67F4(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5EF0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5EFC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF5F40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6964(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF5EF0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5EFC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF5F84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6ACC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  _BYTE v18[25];
  char v19;

  v19 = a1;
  v7 = a2[1];
  v17 = *a2;
  *(_OWORD *)v18 = v7;
  *(_OWORD *)&v18[9] = *(__int128 *)((char *)a2 + 25);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5EF0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5EFC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF5FC8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6C3C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE8B28;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE8B34();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3BE018, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BAEE8B78();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6DC8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEE8B28;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE8B34();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEE8BE0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE6F34(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEB1FC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB208();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5AE9EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE709C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEEB1FC;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB208();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B36B8, (uint64_t (*)(void))sub_1BAEBEAC4, (uint64_t)&type metadata for FormatTagBinding.Command, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1BAEEB24C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7230(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEEB09C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB0A8();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEEB0EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7398(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEB09C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB0A8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B36E0, (uint64_t (*)(void))sub_1BAEBEBF8, (uint64_t)&type metadata for FormatTagBinding.Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1BAEEB130();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7530(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEB2B4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB2C0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA8320EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7694(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEB2B4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB2C0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B36A0, (uint64_t (*)(void))sub_1BA9BD17C, (uint64_t)&type metadata for FormatTagBinding.Color, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1BAEEB304();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7824(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEAFE4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEAFF0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA55CF78();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7988(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEAFE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEAFF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B3700, (uint64_t (*)(void))sub_1BAEBECE8, (uint64_t)&type metadata for FormatTagBinding.Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1BAEEB034();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7B18(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFB694;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB6A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA54EBD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7C7C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB694;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB6A0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2390, (uint64_t (*)(void))sub_1BAE7268C, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    sub_1BAEFB6E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7E0C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC224;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA8268BC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSlotDefinition();
    sub_1BA4A2870(&qword_1ED3A6868, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE7F98(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFC02C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFC038();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a3;
  v16 = a1;
  v17 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v14[2] = sub_1BAEF0598;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF05B8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA827080();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8270(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF76A0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA763760();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B3480, (uint64_t (*)(void))sub_1BAE7D638, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF6DE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE83FC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEAE94;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53552C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA98C8E8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8568(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC184;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC190();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA94B918();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE86CC(char a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC230;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC23C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1EF2B3158, MEMORY[0x1E0DEB070], (uint64_t)&protocol witness table for Double, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEEC280();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8858(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEED3A0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED3AC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEED2F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE89BC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEED2A8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED2B4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEED2F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8B20(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF0DD8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA829368();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2F68, (uint64_t (*)(void))sub_1BAE9B8C0, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEF0DE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8CAC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF0E4C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA8294AC();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF0E58();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8E08(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF7F80;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5002B8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA64E10C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE8F70(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7F80;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5002B8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF7F8C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE90D4(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2 & 1;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF28DC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF28E8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEF292C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE9268(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3CC4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE93CC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v28 = a1;
  v7 = a2[5];
  v24 = a2[4];
  v25 = v7;
  v8 = a2[7];
  v26 = a2[6];
  v27 = v8;
  v9 = a2[1];
  v20 = *a2;
  v21 = v9;
  v10 = a2[3];
  v22 = a2[2];
  v23 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF3CC4;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF38AC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE954C(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  _BYTE v18[25];
  char v19;

  v19 = a1;
  v7 = a2[1];
  v17 = *a2;
  *(_OWORD *)v18 = v7;
  *(_OWORD *)&v18[9] = *(__int128 *)((char *)a2 + 25);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3CC4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF3CD0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE96BC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;

  v30 = a1;
  v7 = a2[7];
  v26 = a2[6];
  v27 = v7;
  v28 = a2[8];
  v29 = *((_BYTE *)a2 + 144);
  v8 = a2[3];
  v22 = a2[2];
  v23 = v8;
  v9 = a2[5];
  v24 = a2[4];
  v25 = v9;
  v10 = a2[1];
  v20 = *a2;
  v21 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF3CC4;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF3D14();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE9854(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3CC4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA610C04();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE99B8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF3CC4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAE8EF90();
    sub_1BA4A2870(&qword_1EF2B5DE8, (uint64_t (*)(uint64_t))sub_1BAE8EF90, (uint64_t)&protocol conformance descriptor for FormatUnboundValue<A, B>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE9B40(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF51D4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF51E0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF5224();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE9CA8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF51D4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF51E0();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF5268();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE9E04(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF51D4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF51E0();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF52AC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACE9F60(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF51D4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF51E0();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAC8BE24();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA0BC(char a1, __int16 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  __int16 v16;
  char v17;

  v17 = a1;
  v16 = a2 & 0x101;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5BBC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF5BC8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA22C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5BBC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF5C0C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA394(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF5BBC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF5C50();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA4FC(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF5BBC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5E977C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF5C94();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA664(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6318;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF6368();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA7CC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  char v21;

  v21 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  v20 = *((_BYTE *)a2 + 48);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF63FC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA58975C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEA944(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF63FC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B50E0, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BAEF6408();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEAAD0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF63FC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B79D0, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BAEF6470();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEAC5C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF63FC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3A66D8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEF64D8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEADE8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFB3D4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB3E0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatRemoteVideo();
    sub_1BA4A2870(&qword_1EF2B6048, (uint64_t (*)(uint64_t))type metadata accessor for FormatRemoteVideo, (uint64_t)&protocol conformance descriptor for FormatRemoteVideo);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEAF74(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB3D4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB3E0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B23C0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BAEFB424();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB100(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB3D4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB3E0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, qword_1ED3A02A8, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BAEFB48C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB28C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFB3D4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB3E0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEFB4F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB3F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFB3D4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB3E0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B23A8, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEFB538();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a3;
  v16 = a1;
  v17 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v14[2] = sub_1BAEE8F8C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE8FAC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB6D4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFBE2C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5895A0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2370, (uint64_t (*)(void))sub_1BA829C74, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEFBE38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB860(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA740;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFA74C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4AD288(0, &qword_1ED3B93B0, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5DCB64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEB9E4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA740;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFA74C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEBB48(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFA740;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFA74C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2450, (uint64_t (*)(void))sub_1BA9AEC44, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEFA790();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEBCD4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE49BC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE49C8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA64D430((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEBE78(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[48];

  v16[47] = a1;
  sub_1BA967DF0(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1704;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF1710();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEBFE8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF1704;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEEB0EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC150(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1704;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF1754();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC2B4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1704;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF1798();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC410(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1704;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF17DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC578(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF1704;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC6E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[48];

  v16[47] = a1;
  sub_1BA967F98(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1704;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA593EF8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF1820();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC850(char a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  char v17;

  v17 = a1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2198;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF21A4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEEC6F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEC9DC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2198;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF21A4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4AD288(0, &qword_1ED3CF728, (uint64_t)&type metadata for FormatBundle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEF21E8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACECB60(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2198;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF21A4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4AD288(0, &qword_1EF2B2EA8, (uint64_t)&type metadata for FormatPlatform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEF22A4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACECCE4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2198;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF21A4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4AD288(0, &qword_1ED3CF7E8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEF2360();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACECE68(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF2198;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF21A4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3AD428, (uint64_t (*)(void))sub_1BAE97428, (uint64_t)&type metadata for FormatSelector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF241C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACECFF4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BAEF44EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACED188(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA68E458(0);
    sub_1BA4A2870(&qword_1EF2B5E20, (uint64_t (*)(uint64_t))sub_1BA68E458, (uint64_t)&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACED314(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BAEF4554();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACED4A8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BAEF45BC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACED63C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BAEF4624();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACED7D0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF44E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA690DC0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BAEF468C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACED964(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF52F0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF52FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEDACC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF52F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatPurchaseAction();
    sub_1BA4A2870(&qword_1EF2AFBB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseAction, (uint64_t)&protocol conformance descriptor for FormatPurchaseAction);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEDC58(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF52F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF5340();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEDDBC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF52F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF5384();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEDF20(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE7F44;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE7F50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEE7F94();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE084(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF964C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9658();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF969C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE1EC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF964C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9658();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA7844F0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE358(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEFA410();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE4BC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA55CF78();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE620(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9A80();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE784(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BA968134(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9B08();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEE8F4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFA404;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9B4C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEEA60(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9B90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEEBC4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEFA454();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEED2C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFA404;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9AC4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEEE94(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFA404;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61F84C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9A3C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEEFF8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF694;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF6A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatMicaNodeArchive();
    sub_1BA4A2870(&qword_1ED39E6A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeArchive, (uint64_t)&protocol conformance descriptor for FormatMicaNodeArchive);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEF184(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEF694;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF6A0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B3098, (uint64_t (*)(void))sub_1BAEA5790, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BAEEF6E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEF310(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEF694;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF6A0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B3080, (uint64_t (*)(void))sub_1BAEA5790, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEEF74C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEF49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;

  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEEF7B4;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF7D4();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    type metadata accessor for FormatURL();
    sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEF610(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  char v14;

  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEEFA60;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEFA80();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BAEEFAC4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEF768(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[136];

  v16[135] = a1;
  sub_1BA896178(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFAD34;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53BA50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEFAD40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEF8D8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF1D00;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5FC774();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEDA34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEFA40(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1D00;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5FC774();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF1D0C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEFB9C(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  double v18;
  uint64_t v19;
  __int16 v20;
  char v21;

  v21 = a1;
  v18 = a5;
  v19 = a2;
  v20 = a3;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF1E74;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1E80();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF0F9C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEFD08(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF3E44;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEFE70(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3E44;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF2C68();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACEFFCC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3E44;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA848E20();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0130(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3E44;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF2CAC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0298(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3E44;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAAC216C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF03FC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3E44;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF3E94();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0560(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3E44;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E50();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF3ED8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF06BC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4AD0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA58847C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF4ADC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0820(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4AD0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA58847C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF4B20();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0984(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7348;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7354();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0B08(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF7348;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7354();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAB1DE84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0C6C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;

  v16 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v14[2] = sub_1BAEFB838;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB858();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA60E000();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0DCC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE80FC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE8108();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAB5130C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF0F34(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF9010;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF901C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
    sub_1BA4A2870(&qword_1EF2B5F80, type metadata accessor for FormatOsloSheetPurchaseDataModel, (uint64_t)&protocol conformance descriptor for FormatOsloSheetPurchaseDataModel);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF10C0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v6 = a1 & 1;
  v16 = a1 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEE780;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE78C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatRemoteImage();
    sub_1BA4A2870(&qword_1ED39B430, (uint64_t (*)(uint64_t))type metadata accessor for FormatRemoteImage, (uint64_t)&protocol conformance descriptor for FormatRemoteImage);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF124C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEE780;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE78C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39D2D8, (uint64_t (*)(void))sub_1BAEAAB44, (uint64_t)&type metadata for FormatPatternContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BAEEE7D0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF13D8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFC6C0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57BB1C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatCommandOpenURL();
    sub_1BA4A2870(&qword_1ED39B650, (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL, (uint64_t)&protocol conformance descriptor for FormatCommandOpenURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF1564(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5 & 0x1FF;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF09B4;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA511160();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAAD6A18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF16D8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF09B4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA511160();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatCommandOpenURL();
    sub_1BA4A2870(&qword_1ED39B650, (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL, (uint64_t)&protocol conformance descriptor for FormatCommandOpenURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF1864(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF09B4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA511160();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA836D20();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF19C8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFAB68;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA538628();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAbsoluteURL();
    sub_1BA4A2870(&qword_1ED3A2A20, (uint64_t (*)(uint64_t))type metadata accessor for FormatAbsoluteURL, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF1B54(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFAB68;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA538628();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF9608();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF1CBC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4804;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF4810();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF1E24(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4804;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAB6ACB4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF1F88(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4804;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF4854();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF20EC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF4804;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF4898();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2258(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5 & 1;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF4804;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C9998();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF48DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF23C8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEBEFC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEBF08();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2534(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEBEFC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEBF4C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2698(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEBEFC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEBF90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF27FC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEED9E4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED9F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEDA34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2964(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEEF080;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF0A0();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BAEEDD64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2AB8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v22 = a1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE47C4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEE47D0, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE47D8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA8352D8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2C28(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v7 = a2[3];
  v20 = a2[2];
  v21 = v7;
  v22 = *((_QWORD *)a2 + 8);
  v8 = a2[1];
  v18 = *a2;
  v19 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE47C4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE47D8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEE4864();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2DA0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE47C4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE47D8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39FCC8, (uint64_t (*)(void))sub_1BAEE40B4, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BAEE48A8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF2F2C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE47C4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE47D8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA55B8C4(0, &qword_1ED39FCE8, (uint64_t (*)(void))sub_1BAEE40B4, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t)&type metadata for FormatMenuGroupableData);
    sub_1BAEE4910();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF30BC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE47C4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE47D8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEE4978();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3224(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEE81B0;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE81D0();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B3A40, (uint64_t (*)(void))sub_1BAED0148, (uint64_t)&type metadata for FormatBlurEffectStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE8214();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF33A0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEA3C0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57DBA0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEA3CC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3508(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEA3C0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57DBA0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEEA410();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3674(char a1, __int16 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  __int16 v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEA3C0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57DBA0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEA454();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF37D8(char a1, __int16 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  __int16 v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEA3C0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA57DBA0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEA498();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF393C(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  v20 = *((_QWORD *)a2 + 6);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEE12C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE138();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA8560F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3AB4(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[25];
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  *(_OWORD *)v19 = a2[2];
  *(_OWORD *)&v19[9] = *(__int128 *)((char *)a2 + 41);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEE12C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE138();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEE17C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3C2C(uint64_t a1, __int16 a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  uint64_t v17;
  __int16 v18;

  v16 = a4;
  v17 = a1;
  v18 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v14[2] = sub_1BAEF0F38;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF0F58();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF0F9C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3D88(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF2C18;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2C24();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF2C68();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF3EE4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2C18;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2C24();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA848E20();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4048(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2C18;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2C24();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF2CAC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF41B0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2C18;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2C24();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAAC216C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4314(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF776C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AEA30();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF7778();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4470(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF776C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AEA30();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF4898();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF45DC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2AF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2AFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA593F3C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4740(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF2AF0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2AFC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEEB0EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF48A8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2AF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2AFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5940E8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4A10(char a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF2AF0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2AFC();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA8E9930();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4B80(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[48];

  v16[47] = a1;
  sub_1BA967F98(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2AF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2AFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF1820();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4CF0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFBC60;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBC6C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF37B4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4E58(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFBC60;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBC6C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF37F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF4FBC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2CF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2CFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BACCD37C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5120(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2CF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2CFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA624A14();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5284(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2CF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2CFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA8320EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF53E8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF2CF0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2CFC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF2D40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5550(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF2CF0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2CFC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF2D84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF56B8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BA968048(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA61F890();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5828(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA61FD54();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF598C(char a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF99EC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF99F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5AFC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9A3C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5C60(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9A80();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5DC4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF99EC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9AC4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF5F2C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BA968134(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9B08();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF609C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF99EC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9B4C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF6208(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF99EC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55CF34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF9B90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF636C(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  char v22;

  v22 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = BYTE2(a4);
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF2B40;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2B4C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF2B90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF64DC(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  char v22;

  v22 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = BYTE2(a4);
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF2B40;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2B4C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA8DA964();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF664C(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  double v18;
  uint64_t v19;
  __int16 v20;
  char v21;

  v21 = a1;
  v18 = a5;
  v19 = a2;
  v20 = a3;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF2B40;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2B4C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF2BD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF67B8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5AF5E0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF691C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF2DD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF6A80(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAB54928();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF6BE8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF2E18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF6D4C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5AF93C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF6EB0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF2DC8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA8EAE38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7018(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF2DC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA54EB90();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAB1CAB4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF717C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7FD0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7FDC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEE890C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF72E0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7FD0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7FDC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA53ED90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7448(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF2A3C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2A48();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEBB74();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF75A4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF2A3C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2A48();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEEBBB8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7700(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v16 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v4 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v14[2] = sub_1BAEF2994;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v5 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF29B4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF29F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  __int128 v12;

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF2A8C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF2AAC();
    v12 = 0uLL;
    sub_1BB874464();
    v12 = xmmword_1BB87FC90;
    sub_1BA82FCB4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF79A4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3764;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3770();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF37B4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7B0C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3764;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3770();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF37F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7C70(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3764;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3770();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA8D9C04();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7DD4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4790;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5C40F8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE4A4C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF7F60(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4CD8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BACCD37C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF80C4(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4CD8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF4CE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8234(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4CD8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF2D84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF839C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4CD8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF2D40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8504(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;

  v29 = a1;
  v7 = a2[7];
  v26 = a2[6];
  v27 = v7;
  v28 = *((_BYTE *)a2 + 128);
  v8 = a2[3];
  v22 = a2[2];
  v23 = v8;
  v9 = a2[5];
  v24 = a2[4];
  v25 = v9;
  v10 = a2[1];
  v20 = *a2;
  v21 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEE9BCC;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BA93DA5C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF868C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE9BCC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatTextNodeLink();
    sub_1BA4A2870(&qword_1EF2B5A88, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLink, (uint64_t)&protocol conformance descriptor for FormatTextNodeLink);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8818(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  v20 = *((_QWORD *)a2 + 6);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9BCC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEE9C40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8990(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9BCC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA634CD4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3A0ED0, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEE9C84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8B1C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7580;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF758C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39C9C8, (uint64_t (*)(void))sub_1BAA4B038, (uint64_t)&type metadata for FormatPatternAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF75D0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8CA8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7580;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF758C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED39F800, (uint64_t (*)(void))sub_1BA98FDF8, (uint64_t)&type metadata for FormatPatternDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF7638();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8E38(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA712634(0);
    sub_1BA4A2870(&qword_1EF2B5FA8, (uint64_t (*)(uint64_t))sub_1BA712634, (uint64_t)&protocol conformance descriptor for FormatSelectorValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF8FC4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF96E0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAE78160();
    sub_1BA4A2870(&qword_1EF2B5FB0, (uint64_t (*)(uint64_t))sub_1BAE78160, (uint64_t)&protocol conformance descriptor for FormatUnboundValue<A, B>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9148(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA766C2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF92AC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA829BBC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9410(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1EF2B2598, (uint64_t (*)(void))sub_1BAE78098, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEF96EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF959C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA6A1098();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9700(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA826738();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9864(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5478;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF2DD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF99C8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5478;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA54EBD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9B2C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF5478;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA8EAE38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9C94(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v15 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF5478;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BAEF5484();
    sub_1BB874464();
  }
  return swift_release();
}

